{"pageProps":{"data":{"answer":["\n&lt;p&gt;&lt;strong&gt;Most vexing parse&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This is related to what is known as &quot;C++&apos;s most vexing parse&quot;. Basically, anything that can be interpreted by the compiler as a function declaration will be interpreted as a function declaration.&lt;/p&gt;\n\n&lt;p&gt;Another instance of the same problem:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;std::ifstream &lt;span class=&quot;hljs-title&quot;&gt;ifs&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;file.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=&quot;hljs-function&quot;&gt;std::vector&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(std::istream_iterator&amp;lt;T&amp;gt;(ifs), std::istream_iterator&amp;lt;T&amp;gt;())&lt;/span&gt;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;v&lt;/code&gt; is interpreted as a declaration of function with 2 parameters.&lt;/p&gt;\n\n&lt;p&gt;The workaround is to add another pair of parentheses:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;std::vector&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;((std::istream_iterator&amp;lt;T&amp;gt;(ifs)), std::istream_iterator&amp;lt;T&amp;gt;())&lt;/span&gt;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or, if you have C++11 and list-initialization (also known as uniform initialization) available:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;std::vector&amp;lt;T&amp;gt; v{std::istream_iterator&amp;lt;T&amp;gt;{ifs}, std::istream_iterator&amp;lt;T&amp;gt;{}};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With this, there is no way it could be interpreted as a function declaration.&lt;/p&gt;\n    ","\n&lt;p&gt;Because it is treated as the declaration for a function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyFunction&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// clearly a function&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;MyObject &lt;span class=&quot;hljs-title&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// also a function declaration&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The same syntax is used for function declaration - e.g. the function &lt;code&gt;object&lt;/code&gt;, taking no parameters and returning &lt;code&gt;MyObject&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Because the compiler thinks it is a declaration of a function that takes no arguments and returns a MyObject instance.&lt;/p&gt;\n    ","\n&lt;p&gt;I guess, the compiler would not know if this statement:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;MyObject object(); &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;is a constructor call or a function prototype declaring a function named &lt;em&gt;object&lt;/em&gt; with return type &lt;em&gt;MyObject&lt;/em&gt; and no  parameters.&lt;/p&gt;\n    ","\n&lt;p&gt;You could also use the more verbose way of construction:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;MyObject object1 = &lt;span class=&quot;hljs-built_in&quot;&gt;MyObject&lt;/span&gt;();\nMyObject object2 = &lt;span class=&quot;hljs-built_in&quot;&gt;MyObject&lt;/span&gt;(object1);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In C++0x this also allows for &lt;code&gt;auto&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;auto&lt;/span&gt; object1 = &lt;span class=&quot;hljs-built_in&quot;&gt;MyObject&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;auto&lt;/span&gt; object2 = &lt;span class=&quot;hljs-built_in&quot;&gt;MyObject&lt;/span&gt;(object1);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As mentioned many times, it&apos;s a declaration.  It&apos;s that way for backward compatibility.  One of the many areas of C++ that are goofy/inconsistent/painful/bogus because of its legacy.  &lt;/p&gt;\n    ","\n&lt;p&gt;From n4296 [dcl.init]:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;[ Note:&lt;br&gt; Since &lt;code&gt;()&lt;/code&gt; is not permitted by the syntax for &lt;em&gt;initializer&lt;/em&gt;, \n  &lt;code&gt;X a();&lt;/code&gt; is not the declaration of an &lt;em&gt;object&lt;/em&gt; of class X, but the\n  declaration of a &lt;em&gt;function&lt;/em&gt; taking no argument and returning an X. The\n  form () is permitted in certain other initialization contexts (5.3.4,\n  5.2.3, 12.6.2). \n  &lt;br&gt;end note ]&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://timsong-cpp.github.io/cppwp/n3337/dcl.init#10&quot; rel=&quot;nofollow noreferrer&quot;&gt;C++11 Link&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://timsong-cpp.github.io/cppwp/n4140/dcl.init#11&quot; rel=&quot;nofollow noreferrer&quot;&gt;C++14 Link&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As the others said, it is a function declaration. Since C++11 you can use brace initialization if you need to see the empty &lt;em&gt;something&lt;/em&gt; that explicitly tells you that a default constructor is used.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;Jedi luke{}; &lt;span class=&quot;hljs-comment&quot;&gt;//default constructor&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":514,"title":"Default constructor with empty brackets","content":"\n                \n&lt;p&gt;Is there any good reason that an empty set of round brackets (parentheses) isn&apos;t valid for calling the default constructor in C++?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;MyObject  object;  &lt;span class=&quot;hljs-comment&quot;&gt;// ok - default ctor&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;MyObject  &lt;span class=&quot;hljs-title&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(blah)&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// ok&lt;/span&gt;\n\n&lt;span class=&quot;hljs-function&quot;&gt;MyObject  &lt;span class=&quot;hljs-title&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;// error&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I seem to type &quot;()&quot; automatically everytime. Is there a good reason this isn&apos;t allowed?&lt;/p&gt;\n    ","slug":"default-constructor-with-empty-brackets-1657388246967","postType":"QUESTION","createdAt":"2022-07-09T17:37:26.000Z","updatedAt":"2022-07-09T17:37:26.000Z","tags":[{"id":2548,"name":"default-constructor","slug":"default-constructor","createdAt":"2022-07-09T17:37:27.000Z","updatedAt":"2022-07-09T17:37:27.000Z","Questions_Tags":{"questionId":514,"tagId":2548}},{"id":2550,"name":"most-vexing-parse","slug":"most-vexing-parse","createdAt":"2022-07-09T17:37:27.000Z","updatedAt":"2022-07-09T17:37:27.000Z","Questions_Tags":{"questionId":514,"tagId":2550}}],"relatedQuestions":[{"title":"Default constructor with empty brackets","slug":"default-constructor-with-empty-brackets-1657388246967","tags":[{"name":"default-constructor","Questions_Tags":{"questionId":514,"tagId":2548}},{"name":"most-vexing-parse","Questions_Tags":{"questionId":514,"tagId":2550}}]}]},"randomQuestions":[{"title":"Ways to deal with #document under iframe","slug":"ways-to-deal-with-document-under-iframe-1657388403345"},{"title":"How to make a div 100% height of the browser window","slug":"how-to-make-a-div-100percent-height-of-the-browser-window-1657388265955"},{"title":"Why does this PDO statement silently fail?","slug":"why-does-this-pdo-statement-silently-fail-1657384892133"},{"title":"JavaScript property access: dot notation vs. brackets?","slug":"javascript-property-access:-dot-notation-vs.-brackets-1657384717494"},{"title":"How do I list all files of a directory?","slug":"how-do-i-list-all-files-of-a-directory-1657388340404"},{"title":"What is the difference between JSON and Object Literal Notation?","slug":"what-is-the-difference-between-json-and-object-literal-notation-1657387515710"},{"title":"How to use SharedPreferences in Android to store, fetch and edit values [closed]","slug":"how-to-use-sharedpreferences-in-android-to-store-fetch-and-edit-values-closed-1657387683057"},{"title":"How do I detect a click outside an element?","slug":"how-do-i-detect-a-click-outside-an-element-1657387505351"},{"title":"How do I execute a program or call a system command?","slug":"how-do-i-execute-a-program-or-call-a-system-command-1657385465629"},{"title":"How to create a generic array in Java?","slug":"how-to-create-a-generic-array-in-java-1657387532298"},{"title":"Sort array of objects by string property value","slug":"sort-array-of-objects-by-string-property-value-1657384860090"},{"title":"Sending Email in Android using JavaMail API without using the default/built-in app","slug":"sending-email-in-android-using-javamail-api-without-using-the-defaultbuilt-in-app-1657387883400"},{"title":"Why do we always prefer using parameters in SQL statements?","slug":"why-do-we-always-prefer-using-parameters-in-sql-statements-1657388031476"},{"title":"Numbering rows within groups in a data frame","slug":"numbering-rows-within-groups-in-a-data-frame-1657388556436"},{"title":"R cannot be resolved - Android error","slug":"r-cannot-be-resolved-android-error-1657388526258"},{"title":"What is JSONP, and why was it created?","slug":"what-is-jsonp-and-why-was-it-created-1657387770563"},{"title":"What is the behavior of integer division?","slug":"what-is-the-behavior-of-integer-division-1657388222571"},{"title":"How to reshape data from long to wide format","slug":"how-to-reshape-data-from-long-to-wide-format-1657384486421"},{"title":"Why is using \"for...in\" for array iteration a bad idea?","slug":"why-is-using-\"for...in\"-for-array-iteration-a-bad-idea-1657384653458"},{"title":"Using Auto Layout in UITableView for dynamic cell layouts & variable row heights","slug":"using-auto-layout-in-uitableview-for-dynamic-cell-layouts-and-variable-row-heights-1657387722263"}]},"__N_SSG":true}