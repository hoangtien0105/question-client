{"pageProps":{"data":{"answer":["\n&lt;p&gt;You have to do it step by step if you don&apos;t want a &lt;code&gt;TypeError&lt;/code&gt; because if one of the members is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, and you try to access a member, an exception will be thrown.&lt;/p&gt;\n\n&lt;p&gt;You can either simply &lt;code&gt;catch&lt;/code&gt; the exception, or make a function to test the existence of multiple levels, something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkNested&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj &lt;span class=&quot;hljs-comment&quot;&gt;/*, level1, level2, ... levelN*/&lt;/span&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; args = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;slice&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; args.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!obj || !obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(args[i])) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    obj = obj[args[i]];\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; test = {&lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;}} };\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;checkNested&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;checkNested&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;ES6 UPDATE:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Here is a shorter version of the original function, using ES6 features and recursion (it&apos;s also in &lt;a href=&quot;https://webkit.org/blog/6240/ecmascript-6-proper-tail-calls-in-webkit/&quot; rel=&quot;noreferrer&quot;&gt;proper tail call&lt;/a&gt; form):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkNested&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, level,  ...rest&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj === &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (rest.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(level)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkNested&lt;/span&gt;(obj[level], ...rest)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, if you want to get the value of a nested property and not only check its existence, here is a simple one-line function:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getNested&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, ...args&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; args.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, level&lt;/span&gt;) =&amp;gt;&lt;/span&gt; obj &amp;amp;&amp;amp; obj[level], obj)\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; test = { &lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;:{ &lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;:{ &lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;} } };\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getNested&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// &apos;level3&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getNested&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;length&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// 6&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getNested&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// undefined&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getNested&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// undefined&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;The above function allows you to get the value of nested properties, otherwise will return &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;UPDATE 2019-10-17:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=&quot;https://github.com/tc39/proposal-optional-chaining&quot; rel=&quot;noreferrer&quot;&gt;optional chaining proposal&lt;/a&gt; reached Stage 3 on the &lt;a href=&quot;https://tc39.es/process-document/&quot; rel=&quot;noreferrer&quot;&gt;ECMAScript committee process&lt;/a&gt;, this will allow you to safely access deeply nested properties, by using the token &lt;code&gt;?.&lt;/code&gt;, the new &lt;em&gt;optional chaining operator&lt;/em&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; value = obj?.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;?.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;?.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If any of the levels accessed is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; the expression will resolve to &lt;code&gt;undefined&lt;/code&gt; by itself.&lt;/p&gt;\n\n&lt;p&gt;The proposal also allows you to handle method calls safely:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;obj?.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;?.&lt;span class=&quot;hljs-title function_&quot;&gt;method&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The above expression will produce &lt;code&gt;undefined&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt;, &lt;code&gt;obj.level1&lt;/code&gt;, or &lt;code&gt;obj.level1.method&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, otherwise it will call the function.&lt;/p&gt;\n\n&lt;p&gt;&lt;s&gt;You can start playing with this feature with Babel using the &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-proposal-optional-chaining&quot; rel=&quot;noreferrer&quot;&gt;optional chaining plugin&lt;/a&gt;.&lt;/s&gt;&lt;/p&gt;\n\n&lt;p&gt;Since &lt;a href=&quot;https://babeljs.io/blog/2020/01/11/7.8.0&quot; rel=&quot;noreferrer&quot;&gt;Babel 7.8.0&lt;/a&gt;, ES2020 is supported by default&lt;/p&gt;\n\n&lt;p&gt;Check &lt;a href=&quot;https://babeljs.io/repl/#?code_lz=MYewdgzgLgBCBGArGBeGBvANgUwG7cwEYAuDHfTAJlKzwIGZSAichpgX04G4AoH0SLFwBDTAFdsqOEgD8AOlZF5iysrqZ6vBIjUVC8gLbYoACxAATABQBKXkA&amp;amp;version=7.8.4&quot; rel=&quot;noreferrer&quot;&gt;this example&lt;/a&gt; on the Babel REPL.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;UPDATE: December 2019 &lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The optional chaining proposal finally &lt;a href=&quot;https://github.com/tc39/proposals/blob/master/finished-proposals.md&quot; rel=&quot;noreferrer&quot;&gt;reached Stage 4&lt;/a&gt; in the December 2019 meeting of the TC39 committee. This means this feature will be part of the &lt;strong&gt;ECMAScript 2020&lt;/strong&gt; Standard.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a pattern I &lt;a href=&quot;http://web.archive.org/web/20161108071447/http://blog.osteele.com/posts/2007/12/cheap-monads/&quot; rel=&quot;noreferrer&quot;&gt;picked up from Oliver Steele&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; level3 = (((test || {}).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt; || {}).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt; || {}).&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;;\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( level3 );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In fact that whole article is a discussion of how you can do this in javascript. He settles on using the above syntax (which isn&apos;t that hard to read once you get used to it) as an idiom.&lt;/p&gt;\n    ","\n&lt;h1&gt;Update&lt;/h1&gt;\n\n&lt;p&gt;Looks like lodash &lt;a href=&quot;https://github.com/lodash/lodash/commit/2edcc893034936cccb94264783453b3d6bceff45&quot; rel=&quot;noreferrer&quot;&gt;has added&lt;/a&gt; &lt;code&gt;_.get&lt;/code&gt; for all your nested property getting needs.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(countries, &lt;span class=&quot;hljs-string&quot;&gt;&apos;greece.sparta.playwright&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://lodash.com/docs#get&quot; rel=&quot;noreferrer&quot;&gt;https://lodash.com/docs#get&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h1&gt;Previous answer&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://lodash.com/&quot; rel=&quot;noreferrer&quot;&gt;lodash&lt;/a&gt; users may enjoy &lt;a href=&quot;https://github.com/Empeeric/lodash-contrib&quot; rel=&quot;noreferrer&quot;&gt;lodash.contrib&lt;/a&gt; which has a &lt;a href=&quot;https://github.com/Empeeric/lodash-contrib/blob/master/docs/_.object.selectors.js.md#getpath&quot; rel=&quot;noreferrer&quot;&gt;couple methods that mitigate this problem&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h1&gt;getPath&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;Signature:&lt;/strong&gt; &lt;code&gt;_.getPath(obj:Object, ks:String|Array)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Gets the value at any depth in a nested object based on the path described by\nthe keys given. Keys may be given as an array or as a dot-separated string.\nReturns &lt;code&gt;undefined&lt;/code&gt; if the path cannot be reached.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; countries = {\n        &lt;span class=&quot;hljs-attr&quot;&gt;greece&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-attr&quot;&gt;athens&lt;/span&gt;: {\n                &lt;span class=&quot;hljs-attr&quot;&gt;playwright&lt;/span&gt;:  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sophocles&quot;&lt;/span&gt;\n            }\n        }\n    }\n};\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;getPath&lt;/span&gt;(countries, &lt;span class=&quot;hljs-string&quot;&gt;&quot;greece.athens.playwright&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; &quot;Sophocles&quot;&lt;/span&gt;\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;getPath&lt;/span&gt;(countries, &lt;span class=&quot;hljs-string&quot;&gt;&quot;greece.sparta.playwright&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; undefined&lt;/span&gt;\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;getPath&lt;/span&gt;(countries, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;greece&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;athens&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;playwright&quot;&lt;/span&gt;]);\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; &quot;Sophocles&quot;&lt;/span&gt;\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;getPath&lt;/span&gt;(countries, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;greece&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;sparta&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;playwright&quot;&lt;/span&gt;]);\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I have done &lt;a href=&quot;http://jsben.ch/7aJgK&quot; rel=&quot;noreferrer&quot;&gt;performance tests&lt;/a&gt; (thank you &lt;a href=&quot;https://stackoverflow.com/users/2167159/cdminix&quot;&gt;cdMinix&lt;/a&gt; for adding lodash) on some of the suggestions proposed to this question with the results listed below.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Disclaimer #1&lt;/strong&gt; Turning strings into references is unnecessary meta-programming and probably best avoided. Don&apos;t lose track of your references to begin with. &lt;a href=&quot;https://stackoverflow.com/a/6394168/308645&quot;&gt;Read more from this answer to a similar question&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Disclaimer #2&lt;/strong&gt; We are talking about millions of operations per millisecond here. It is very unlikely any of these would make much difference in most use cases. Choose whichever makes the most sense knowing the limitations of each. For me I would go with something like &lt;code&gt;reduce&lt;/code&gt; out of convenience.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/4034468/308645&quot;&gt;Object Wrap (by Oliver Steele)&lt;/a&gt;  34 %  fastest&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r1 = (((test || {}).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt; || {}).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt; || {}).&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r2 = (((test || {}).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt; || {}).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt; || {}).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2631001/javascript-test-for-existence-of-nested-object-key&quot;&gt;Original solution (suggested in question)&lt;/a&gt;  45%&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r1 = test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r2 = test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/2631198/308645&quot;&gt;checkNested&lt;/a&gt;  50%&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkNested&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[i])) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    obj = obj[&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[i]];\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/15344767/308645&quot;&gt;get_if_exist&lt;/a&gt;  52%&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get_if_exist&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;str&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(str) }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/38952313/308645&quot;&gt;validChain&lt;/a&gt;  54%&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;validChain&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; object, ...keys &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; keys.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;( &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt; a, b &lt;/span&gt;) =&amp;gt;&lt;/span&gt; ( a || { } )[ b ], object ) !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/19848479/308645&quot;&gt;objHasKeys&lt;/a&gt;  63%&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objHasKeys&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, keys&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; next = keys.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj[next] &amp;amp;&amp;amp; (! keys.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; || &lt;span class=&quot;hljs-title function_&quot;&gt;objHasKeys&lt;/span&gt;(obj[next], keys));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/24327152/308645&quot;&gt;nestedPropertyExists&lt;/a&gt;  69%&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;nestedPropertyExists&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, props&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prop = props.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; prop === &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; : obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(prop) ? &lt;span class=&quot;hljs-title function_&quot;&gt;nestedPropertyExists&lt;/span&gt;(obj[prop], props) : &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://lodash.com/docs/#get&quot; rel=&quot;noreferrer&quot;&gt;_.get&lt;/a&gt;  72%&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/2631521/308645&quot;&gt;deeptest&lt;/a&gt;  86%&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;target, s&lt;/span&gt;){\n    s= s.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj= target[s.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;()];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(obj &amp;amp;&amp;amp; s.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) obj= obj[s.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;()];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/35169378/308645&quot;&gt;sad clowns&lt;/a&gt;  100%  slowest&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj || {} };\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r1 = &lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(test).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r2 = &lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(test).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can read an object property at any depth, if you handle the name like a string: &lt;code&gt;&apos;t.level1.level2.level3&apos;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;t&lt;/span&gt;={&lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;}}};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;){\n    s= s.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj= &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;[s.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;()];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(obj &amp;amp;&amp;amp; s.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) obj= obj[s.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;()];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;t.level1.level2.level3&apos;&lt;/span&gt;) || &lt;span class=&quot;hljs-string&quot;&gt;&apos;Undefined&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It returns &lt;code&gt;undefined&lt;/code&gt; if any of the segments is &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a;\n\na = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;\n    }\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isset&lt;/span&gt; (fn) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        value = &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (e) {\n        value = &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; value !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n    }\n};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// ES5&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(\n    &lt;span class=&quot;hljs-title function_&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt;; }),\n    &lt;span class=&quot;hljs-title function_&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;d&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt;; })\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are coding in ES6 environment (or using &lt;a href=&quot;https://github.com/6to5/6to5&quot; rel=&quot;noreferrer&quot;&gt;6to5&lt;/a&gt;) then you can take advantage of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noreferrer&quot;&gt;arrow function&lt;/a&gt; syntax:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// ES6 using the arrow function&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(\n    &lt;span class=&quot;hljs-title function_&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; a.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt;),\n    &lt;span class=&quot;hljs-title function_&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; a.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;d&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt;)\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Regarding the performance, there is no performance penalty for using &lt;code&gt;try..catch&lt;/code&gt; block if the property is set. There is a performance impact if the property is unset.&lt;/p&gt;\n\n&lt;p&gt;Consider simply using &lt;a href=&quot;https://lodash.com/docs#has&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;_.has&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; object = { &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;: { &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;: { &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; } } };\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(object, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//  true&lt;/span&gt;\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(object, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a.b.c&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//  true&lt;/span&gt;\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(object, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;]);\n&lt;span class=&quot;hljs-comment&quot;&gt;//  true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;how about&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n   &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;)\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) {\n ...whatever\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can also use tc39 optional chaining proposal together with babel 7 - &lt;a href=&quot;https://blog.benestudio.co/optional-chaining-operator-in-javascript-342082de2db&quot; rel=&quot;noreferrer&quot;&gt;tc39-proposal-optional-chaining&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Code would look like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; test = test?.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;?.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;?.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (test) &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(test);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;ES6 answer, thoroughly tested :)&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;propExists&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;obj, path&lt;/span&gt;) =&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !!path.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, prop&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj &amp;amp;&amp;amp; obj[prop] ? obj[prop] : &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n    }, obj)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;see &lt;a href=&quot;https://codepen.io/fnocke/pen/wXaMeL?editors=0011&quot; rel=&quot;noreferrer&quot;&gt;Codepen with full test coverage&lt;/a&gt;&lt;/h3&gt;\n    ","\n&lt;p&gt;I tried a recursive approach:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objHasKeys&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, keys&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; next = keys.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj[next] &amp;amp;&amp;amp; (! keys.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; || &lt;span class=&quot;hljs-title function_&quot;&gt;objHasKeys&lt;/span&gt;(obj[next], keys));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;! keys.length ||&lt;/code&gt; kicks out of the recursion so it doesn&apos;t run the function with no keys left to test.  Tests:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;obj = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;path&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-attr&quot;&gt;to&lt;/span&gt;: {\n      &lt;span class=&quot;hljs-attr&quot;&gt;the&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;goodKey&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;\n      }\n    }\n  }\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objHasKeys&lt;/span&gt;(obj, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;path&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;to&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;the&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;goodKey&apos;&lt;/span&gt;])); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objHasKeys&lt;/span&gt;(obj, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;path&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;to&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;the&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;badKey&apos;&lt;/span&gt;]));  &lt;span class=&quot;hljs-comment&quot;&gt;// undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I am using it to print a friendly html view of a bunch of objects with unknown key/values, e.g.:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; biosName = &lt;span class=&quot;hljs-title function_&quot;&gt;objHasKeys&lt;/span&gt;(myObj, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MachineInfo:BiosInfo:Name&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt;))\n             ? myObj.&lt;span class=&quot;hljs-property&quot;&gt;MachineInfo&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;BiosInfo&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Name&lt;/span&gt;\n             : &lt;span class=&quot;hljs-string&quot;&gt;&apos;unknown&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This question is old. Today you can use Optional chaining (?.)&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; value = test?.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;?.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;?.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Source:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I think the following script gives more readable representation.&lt;/p&gt;\n\n&lt;p&gt;declare a function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj || {};};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then use it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(test).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;)\n{\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I call it &quot;sad clown technique&quot; because it is using sign o(&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;EDIT:&lt;/p&gt;\n\n&lt;p&gt;here is a version for &lt;strong&gt;TypeScript&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;it gives type checks at compile time (as well as the intellisense if you use a tool like Visual Studio)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; o&amp;lt;T&amp;gt;(&lt;span class=&quot;hljs-attr&quot;&gt;someObject&lt;/span&gt;: T, &lt;span class=&quot;hljs-attr&quot;&gt;defaultValue&lt;/span&gt;: T = {} &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; T) : T {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; someObject === &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt; || someObject === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; defaultValue;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; someObject;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the usage is the same:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(test).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but this time intellisense works! &lt;/p&gt;\n\n&lt;p&gt;plus, you can set a default value:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;o&lt;/span&gt;(test).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;create a global &lt;code&gt;function&lt;/code&gt; and use in whole project &lt;/p&gt;\n\n&lt;p&gt;try this&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isExist&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arg&lt;/span&gt;){\n   &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arg&lt;/span&gt;();\n   }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n   }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj={&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;}};\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;isExist&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;obj.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt;))\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;isExist&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;obj.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;))\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;isExist&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;obj.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;if condition&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;isExist&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;obj.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;)){\n   ....\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I didn&apos;t see any example of someone using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot; rel=&quot;nofollow noreferrer&quot;&gt;Proxies&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;So I came up with my own.\nThe great thing about it is that you don&apos;t have to interpolate strings. You can actually return a chain-able &lt;s&gt;object&lt;/s&gt; function and do some magical things with it. You can even call functions and get array indexes to check for deep objects&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;true&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;target&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;noop&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) =&amp;gt; {} &lt;span class=&quot;hljs-comment&quot;&gt;// We us a noop function so we can call methods also&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Proxy&lt;/span&gt;(noop, {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;noop, key&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// return end result if key is _result&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; key === &lt;span class=&quot;hljs-string&quot;&gt;&apos;_result&apos;&lt;/span&gt; \n        ? target \n        : &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;( &lt;span class=&quot;hljs-comment&quot;&gt;// resolve with target value or undefined&lt;/span&gt;\n            target === &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; : target[key]\n          )\n    },\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// if we want to test a function then we can do so alos thanks to using noop&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// instead of using target in our proxy&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;noop, that, args&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; target === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt; ? target.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(that, args) : &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;)\n    },\n  })\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// some modified examples from the accepted answer&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; test = {&lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;:&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; ({&lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;})}}\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; test1 = {&lt;span class=&quot;hljs-attr&quot;&gt;key1&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;key2&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;item0&apos;&lt;/span&gt;]}}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// You need to get _result in the end to get the final result&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(test).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;level2&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_result&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(test).&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;level2&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level4&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level5&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_result&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(test1).&lt;span class=&quot;hljs-property&quot;&gt;key1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;key2&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;_result&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(test1)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_result&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// don&apos;t exist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;The above code works fine for synchronous stuff. But how would you test something that is asynchronous like this ajax call?\nHow do you test that?&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://httpbin.org/get&apos;&lt;/span&gt;)\n.&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; response.&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;()\n})\n.&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;json&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(json.&lt;span class=&quot;hljs-property&quot;&gt;headers&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;User-Agent&apos;&lt;/span&gt;])\n})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;sure you could use async/await to get rid of some callbacks. But what if you could do it even more magically? something that looks like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://httpbin.org/get&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;headers&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;User-Agent&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You probably wonder where all the promise &amp;amp; &lt;code&gt;.then&lt;/code&gt; chains are... this could be blocking for all that you know... but using the same Proxy technique with promise you can actually test deeply nested complex path for it existence without ever writing a single function&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;true&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;target&lt;/span&gt;) { \n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Proxy&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {}, {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;noop, key&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; key === &lt;span class=&quot;hljs-string&quot;&gt;&apos;then&apos;&lt;/span&gt; ? target.&lt;span class=&quot;hljs-property&quot;&gt;then&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;(target) : &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(target).&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;target&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; target[key] === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; target[key].&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;(target)\n          &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; target[key]\n        })\n      )\n    },\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;noop, that, args&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(target.&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(that, args)\n      }))\n    },\n  })\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// this feels very much synchronous but are still non blocking :)&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// this will chain a noop function until you call then()&lt;/span&gt;\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://httpbin.org/get&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;()\n  .&lt;span class=&quot;hljs-property&quot;&gt;headers&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;User-Agent&apos;&lt;/span&gt;]\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;warn&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// you get a warning if it doesn&apos;t exist&lt;/span&gt;\n  \n&lt;span class=&quot;hljs-comment&quot;&gt;// You could use this method also for the first test object&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// also, but it would have to call .then() in the end&lt;/span&gt;\n\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Another example&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://httpbin.org/get?items=4&amp;amp;items=2&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;json&lt;/span&gt;()\n  .&lt;span class=&quot;hljs-property&quot;&gt;args&lt;/span&gt;\n  .&lt;span class=&quot;hljs-property&quot;&gt;items&lt;/span&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// nice that you can map an array item without even having it ready&lt;/span&gt;\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt; =&amp;gt;&lt;/span&gt; ~~n * &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) \n  .&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;warn&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// you get a warning if it doesn&apos;t exist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;One simple way is this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;);    &lt;span class=&quot;hljs-comment&quot;&gt;// this is optional to put any output here&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;try/catch&lt;/code&gt; catches the cases for when any of the higher level objects such as test, test.level1, test.level1.level2 are not defined.&lt;/p&gt;\n    ","\n&lt;p&gt;Based on &lt;a href=&quot;https://stackoverflow.com/questions/2631001/javascript-test-for-existence-of-nested-object-key#answer-4034468&quot;&gt;this answer&lt;/a&gt;, I came up with this generic function using &lt;code&gt;ES2015&lt;/code&gt; which would solve the problem&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;validChain&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; object, ...keys &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; keys.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;( &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt; a, b &lt;/span&gt;) =&amp;gt;&lt;/span&gt; ( a || { } )[ b ], object ) !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; test = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;first&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-attr&quot;&gt;second&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;third&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is not the key your are looking for&quot;&lt;/span&gt;\n    }\n  }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-title function_&quot;&gt;validChain&lt;/span&gt;( test, &lt;span class=&quot;hljs-string&quot;&gt;&quot;first&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;second&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;third&quot;&lt;/span&gt; ) ) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( test.&lt;span class=&quot;hljs-property&quot;&gt;first&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;second&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;third&lt;/span&gt; );\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I have created a little function to get nested object properties safely.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;object, path, fallback, fallbackOnFalsy&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!object || !path) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; fallback;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Reduces object properties to the deepest property in the path argument.&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; path.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;object, property&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (object &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; object !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt; &amp;amp;&amp;amp; object.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(property)) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// The property is found but it may be falsy.&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// If fallback is active for falsy values, the fallback is returned, otherwise the property value.&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !object[property] &amp;amp;&amp;amp; fallbackOnFalsy ? fallback : object[property];\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the fallback if current chain link does not exist or it does not contain the property.&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; fallback;\n        }\n    }, object);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or a simpler but slightly unreadable version:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o, path, fb, fbFalsy&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!o || !path) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; fb;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; path.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o, p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; o &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; o !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt; &amp;amp;&amp;amp; o.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p) ? !o[p] &amp;amp;&amp;amp; fbFalsy ? fb : o[p] : fb, o);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or even shorter but without fallback on falsy flag:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o, path, fb&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!o || !path) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; fb;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; path.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o, p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; o &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; o !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt; &amp;amp;&amp;amp; o.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p) ? o[p] : fb, o);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I have test with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; obj = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;]\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And here are some tests:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// null&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;(obj, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c.d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;fallback&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// array&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;(obj, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c.b.c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;fallback&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// array index 2&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;(obj, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c.b.c.2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;fallback&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// no index =&amp;gt; fallback&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;(obj, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c.b.c.10&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;fallback&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To see all the code with documentation and the tests I&apos;ve tried you can check my github gist:\n&lt;a href=&quot;https://gist.github.com/vsambor/3df9ad75ff3de489bbcb7b8c60beebf4#file-javascriptgetnestedvalues-js&quot; rel=&quot;noreferrer&quot;&gt;https://gist.github.com/vsambor/3df9ad75ff3de489bbcb7b8c60beebf4#file-javascriptgetnestedvalues-js&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;A shorter, ES5 version of @CMS&apos;s excellent answer:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Check the obj has the keys in the order mentioned. Used for checking JSON results.  &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; checkObjHasKeys = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, keys&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; success = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n  keys.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( ! obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(key)) {\n      success = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    obj = obj[key];\n  })\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; success;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With a similar test:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; test = { &lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;result&apos;&lt;/span&gt;}}};\nutils.&lt;span class=&quot;hljs-title function_&quot;&gt;checkObjHasKeys&lt;/span&gt;(test, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\nutils.&lt;span class=&quot;hljs-title function_&quot;&gt;checkObjHasKeys&lt;/span&gt;(test, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I was looking for the value to be returned if the property exists, so I modified the answer by CMS above. Here&apos;s what I came up with:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getNestedProperty&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, key&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Get property array from key string&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; properties = key.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;);\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Iterate through properties, returning undefined if object is null or property doesn&apos;t exist&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; properties.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!obj || !obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(properties[i])) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    }\n    obj = obj[properties[i]];\n  }\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Nested property found, so return the value&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n}\n\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Usage&lt;/span&gt;:\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;getNestedProperty&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&quot;level1.level2.level3&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;level3&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;getNestedProperty&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&quot;level1.level2.foo&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// undefined&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The answer given by CMS works fine with the following modification for null checks as well&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkNested&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj &lt;span class=&quot;hljs-comment&quot;&gt;/*, level1, level2, ... levelN*/&lt;/span&gt;&lt;/span&gt;) \n      {\n             &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; args = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;slice&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;),\n             obj = args.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; args.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) \n            {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; || !obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(args[i]) ) \n                {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                }\n                obj = obj[args[i]];\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Following options were elaborated starting from &lt;a href=&quot;https://stackoverflow.com/a/4034468/1636522&quot;&gt;this answer&lt;/a&gt;. Same tree for both : &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = { &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; } } };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Stop searching when undefined&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; u = &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\no.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; ? o.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt; ? o.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt; : u : u &lt;span class=&quot;hljs-comment&quot;&gt;// 1&lt;/span&gt;\no.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; ? o.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;y&lt;/span&gt; ? o.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;y&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;z&lt;/span&gt; : u : u &lt;span class=&quot;hljs-comment&quot;&gt;// undefined&lt;/span&gt;\n(o = o.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt;) ? (o = o.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;) ? o.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt; : u : u &lt;span class=&quot;hljs-comment&quot;&gt;// 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Ensure each level one by one&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $ = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;empty&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;node&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; node || empty;\n    };\n}({});\n\n$($(o.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// 1&lt;/span&gt;\n$($(o.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;y&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know this question is old, but I wanted to offer an extension by adding this to all objects. I know people tend to frown on using the Object prototype for extended object functionality, but I don&apos;t find anything easier than doing this. Plus, it&apos;s now allowed for with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty&quot; rel=&quot;nofollow&quot;&gt;Object.defineProperty&lt;/a&gt; method.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;has&quot;&lt;/span&gt;, { &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; needle &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; needles = needle.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt; );\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;needles.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++ ) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( !obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(needles[i])) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n        obj = obj[needles[i]];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, in order to test for any property in any object you can simply do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( obj.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;some.deep.nested.object.somewhere&quot;&lt;/span&gt;) )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/4302m6e1/4/&quot; rel=&quot;nofollow&quot;&gt;Here&apos;s a jsfiddle&lt;/a&gt; to test it out, and in particular it includes some jQuery that breaks if you modify the Object.prototype directly because of the property becoming enumerable. This should work fine with 3rd party libraries.&lt;/p&gt;\n    ","\n&lt;p&gt;I think this is a slight improvement (becomes a 1-liner):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;   &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt; )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works because the &amp;amp;&amp;amp; operator returns the final operand it evaluated (and it short-circuits).&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;This works with all objects and arrays :)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;ex: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( obj.&lt;span class=&quot;hljs-title function_&quot;&gt;_has&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;something.[&apos;deep&apos;][&apos;under&apos;][1][0].item&quot;&lt;/span&gt; ) ) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this is my improved version of Brian&apos;s answer &lt;/p&gt;\n\n&lt;p&gt;I used &lt;em&gt;_has&lt;/em&gt; as the property name because it can conflict with existing has property (ex: maps)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;_has&quot;&lt;/span&gt;, { &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; needle &lt;/span&gt;) {\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; needles = needle.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt; );\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; needles_full=[];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; needles_square;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;needles.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++ ) {\n    needles_square = needles[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;[&quot;&lt;/span&gt; );\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(needles_square.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; j&amp;lt;needles_square.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; j++ ) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(needles_square[j].&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;){\n                needles_full.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(needles_square[j]);\n            }\n        }\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n        needles_full.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(needles[i]);\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;needles_full.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++ ) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; res = needles_full[i].&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/^((\\d+)|&quot;(.+)&quot;|&apos;(.+)&apos;)\\]$/&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (res != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; j &amp;lt; res.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; j++) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (res[j] != &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) {\n                needles_full[i] = res[j];\n            }\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; obj[needles_full[i]]==&lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    obj = obj[needles_full[i]];\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&apos;s the &lt;a href=&quot;http://jsfiddle.net/adutu/4302m6e1/10/&quot; rel=&quot;nofollow&quot;&gt;fiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s my take on it - most of these solutions ignore the case of a nested array as in:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    obj = {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;l1&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;something&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;l2&quot;&lt;/span&gt;:[{&lt;span class=&quot;hljs-attr&quot;&gt;k&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;k&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}],\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;l3&quot;&lt;/span&gt;:{\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;subL&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I may want to check for &lt;code&gt;obj.l2[0].k&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;With the function below, you can do &lt;code&gt;deeptest(&apos;l2[0].k&apos;,obj)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;The function will return true if the object exists, false otherwise&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;keyPath, testObj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj;\n\n    keyPath = keyPath.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; cKey = keyPath.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;pObj, pKey&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bracketStart, bracketEnd, o;\n\n        bracketStart = pKey.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;[&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (bracketStart &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;//check for nested arrays&lt;/span&gt;\n            bracketEnd = pKey.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;]&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrIndex = pKey.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(bracketStart + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, bracketEnd - bracketStart - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            pKey = pKey.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, bracketStart);\n\t\t\t&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; n = pObj[pKey];\n            o = n? n[arrIndex] : &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            o = pObj[pKey];\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n    }\n\n    obj = &lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(testObj, cKey);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (obj &amp;amp;&amp;amp; keyPath.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) {\n        obj = &lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(obj, keyPath.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;());\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(obj) !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;l1&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;level1&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1&quot;&lt;/span&gt;:[\n        {&lt;span class=&quot;hljs-string&quot;&gt;&quot;k&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;},\n        {&lt;span class=&quot;hljs-string&quot;&gt;&quot;k&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;},\n        {&lt;span class=&quot;hljs-string&quot;&gt;&quot;k&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}\n    ],\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;sub&quot;&lt;/span&gt;: {\n       \t&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;letter A&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;letter B&quot;&lt;/span&gt;\n    }\n};\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;l1: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;l1&quot;&lt;/span&gt;,obj));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[0]: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[0]&quot;&lt;/span&gt;,obj));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[1].k: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[1].k&quot;&lt;/span&gt;,obj));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[1].j: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[1].j&quot;&lt;/span&gt;,obj));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[3]: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr1[3]&quot;&lt;/span&gt;,obj));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr2: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;deeptest&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arr2&quot;&lt;/span&gt;,obj));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Now we can also use &lt;code&gt;reduce&lt;/code&gt; to loop through nested keys: &lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// @params o&amp;lt;object&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// @params path&amp;lt;string&amp;gt; expects &apos;obj.prop1.prop2.prop3&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// returns: obj[path] value or &apos;false&apos; if prop doesn&apos;t exist&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objPropIfExists&lt;/span&gt; = o =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;path&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; levels = path.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = (levels.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) \n    ? levels.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, c&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a[c] || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, o)\n    : o[path];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (!!res) ? res : &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; obj = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Name&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;sys&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;country&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;AU&apos;&lt;/span&gt; },\n  &lt;span class=&quot;hljs-attr&quot;&gt;main&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;temp&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;34&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;temp_min&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;13&apos;&lt;/span&gt; },\n  &lt;span class=&quot;hljs-attr&quot;&gt;visibility&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;35%&apos;&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; exists = &lt;span class=&quot;hljs-title function_&quot;&gt;objPropIfExists&lt;/span&gt;(obj)(&lt;span class=&quot;hljs-string&quot;&gt;&apos;main.temp&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; doesntExist = &lt;span class=&quot;hljs-title function_&quot;&gt;objPropIfExists&lt;/span&gt;(obj)(&lt;span class=&quot;hljs-string&quot;&gt;&apos;main.temp.foo.bar.baz&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(exists, doesntExist)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can do this by using the recursive function. This will work even if you don&apos;t know all nested Object keys name.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;FetchKeys&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; objKeys = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; keyValues = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;entries&lt;/span&gt;(obj);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; keyValues) {\n        objKeys.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(keyValues[i][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; keyValues[i][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; keys = &lt;span class=&quot;hljs-title class_&quot;&gt;FetchKeys&lt;/span&gt;(keyValues[i][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])\n            objKeys = objKeys.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(keys);\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objKeys;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; test = { &lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;level3&quot;&lt;/span&gt; } } };\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; keyToCheck = &lt;span class=&quot;hljs-string&quot;&gt;&quot;level2&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; keys = &lt;span class=&quot;hljs-title class_&quot;&gt;FetchKeys&lt;/span&gt;(test); &lt;span class=&quot;hljs-comment&quot;&gt;//Will return an array of Keys&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (keys.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(keyToCheck) != -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Key Exists logic;&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Key Not Found logic;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;And yet another one which is very compact:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ifSet&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;object, path&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; path.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, part&lt;/span&gt;) =&amp;gt;&lt;/span&gt; obj &amp;amp;&amp;amp; obj[part], object)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;called:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; a = {&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;e&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;found!&apos;&lt;/span&gt;}}}}\n&lt;span class=&quot;hljs-title function_&quot;&gt;ifSet&lt;/span&gt;(a, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b.c.d.e&apos;&lt;/span&gt;) == &lt;span class=&quot;hljs-string&quot;&gt;&apos;found!&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;ifSet&lt;/span&gt;(a, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a.a.a.a.a.a&apos;&lt;/span&gt;) == &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It won&apos;t perform great since it&apos;s splitting a string (but increases readability of the call) and iterates over everything even if it&apos;s already obvious that nothing will be found (but increases readability of the function itself).&lt;/p&gt;\n\n&lt;p&gt;at least is faster than &lt;code&gt;_.get&lt;/code&gt; &lt;a href=&quot;http://jsben.ch/aAtmc&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://jsben.ch/aAtmc&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I have used this function for access properties of the deeply nested object and it working for me...&lt;/p&gt;\n&lt;p&gt;this is the function&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * get property of object\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; obj object\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; path e.g user.name\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;getProperty&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, path, defaultValue = &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; value = path.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o, p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; o &amp;amp;&amp;amp; o[p], obj);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; value ? value : defaultValue;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;this is how I access the deeply nested object property&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{{ &lt;span class=&quot;hljs-title function_&quot;&gt;getProperty&lt;/span&gt;(object, &lt;span class=&quot;hljs-string&quot;&gt;&apos;passengerDetails.data.driverInfo.currentVehicle.vehicleType&apos;&lt;/span&gt;) }}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;theres a function &lt;a href=&quot;http://thecodeabode.blogspot.com.au/2013/04/javascript-safely-reading-nested.html&quot; rel=&quot;nofollow&quot;&gt;here on thecodeabode (safeRead)&lt;/a&gt; which will do this in a safe manner... i.e.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;safeRead&lt;/span&gt;(test, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;level3&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;if any property is null or undefined, an empty string is returned&lt;/p&gt;\n    "],"id":422,"title":"Test for existence of nested JavaScript object key","content":"\n                \n&lt;p&gt;If I have a reference to an object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; test = {};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;that will potentially (but not immediately) have nested objects, something like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;level3&quot;&lt;/span&gt;}}};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What is the best way to check for the existence of property in deeply nested objects?&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;alert(test.level1);&lt;/code&gt; yields &lt;code&gt;undefined&lt;/code&gt;, but &lt;code&gt;alert(test.level1.level2.level3);&lt;/code&gt; fails.&lt;/p&gt;\n\n&lt;p&gt;I’m currently doing something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt; &amp;amp;&amp;amp; test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(test.&lt;span class=&quot;hljs-property&quot;&gt;level1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level2&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;level3&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I was wondering if there’s a better way.&lt;/p&gt;\n    ","slug":"test-for-existence-of-nested-javascript-object-key-1657387935411","postType":"QUESTION","createdAt":"2022-07-09T17:32:15.000Z","updatedAt":"2022-07-09T17:32:15.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How can I upload files to a server using JSP/Servlet?","slug":"how-can-i-upload-files-to-a-server-using-jspservlet-1657384847658"},{"title":"What is the difference between single-quoted and double-quoted strings in PHP?","slug":"what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php-1657384624345"},{"title":"What does \"Fatal error: Unexpectedly found nil while unwrapping an Optional value\" mean?","slug":"what-does-\"fatal-error:-unexpectedly-found-nil-while-unwrapping-an-optional-value\"-mean-1657384593944"},{"title":"Scanner is skipping nextLine() after using next() or nextFoo()?","slug":"scanner-is-skipping-nextline()-after-using-next()-or-nextfoo()-1657384379697"},{"title":"Determine Whether Two Date Ranges Overlap","slug":"determine-whether-two-date-ranges-overlap-1657387924335"},{"title":"How do I return the response from an asynchronous call?","slug":"how-do-i-return-the-response-from-an-asynchronous-call-1657384208012"},{"title":"Is there any way to kill a Thread?","slug":"is-there-any-way-to-kill-a-thread-1657387859831"},{"title":"How do I match any character across multiple lines in a regular expression?","slug":"how-do-i-match-any-character-across-multiple-lines-in-a-regular-expression-1657387839720"},{"title":"How do I set, clear, and toggle a single bit?","slug":"how-do-i-set-clear-and-toggle-a-single-bit-1657388227052"},{"title":"Performance optimization strategies of last resort [closed]","slug":"performance-optimization-strategies-of-last-resort-closed-1657388420614"},{"title":"Asking the user for input until they give a valid response","slug":"asking-the-user-for-input-until-they-give-a-valid-response-1657384376162"},{"title":"Why is \"using namespace std;\" considered bad practice?","slug":"why-is-\"using-namespace-std\"-considered-bad-practice-1657384296377"},{"title":"The model item passed into the dictionary is of type .. but this dictionary requires a model item of type","slug":"the-model-item-passed-into-the-dictionary-is-of-type-..-but-this-dictionary-requires-a-model-item-of-type-1657388480874"},{"title":"Truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all()","slug":"truth-value-of-a-series-is-ambiguous.-use-a.empty-a.bool()-a.item()-a.any()-or-a.all()-1657387724259"},{"title":"What is the difference between == and equals() in Java?","slug":"what-is-the-difference-between-and-equals()-in-java-1657387729654"},{"title":"How to create RecyclerView with multiple view types","slug":"how-to-create-recyclerview-with-multiple-view-types-1657388121512"},{"title":"How can I validate an email address using a regular expression?","slug":"how-can-i-validate-an-email-address-using-a-regular-expression-1657384549233"},{"title":"How do I check if an array includes a value in JavaScript?","slug":"how-do-i-check-if-an-array-includes-a-value-in-javascript-1657387421185"},{"title":"Methods in ES6 objects: using arrow functions","slug":"methods-in-es6-objects:-using-arrow-functions-1657388249058"},{"title":"SQL injection that gets around mysql_real_escape_string()","slug":"sql-injection-that-gets-around-mysql_real_escape_string()-1657384364747"}]},"__N_SSG":true}