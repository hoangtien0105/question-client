{"pageProps":{"data":{"count":1,"rows":[{"id":380,"title":"How to unnest (explode) a column in a pandas DataFrame, into multiple rows","slug":"how-to-unnest-(explode)-a-column-in-a-pandas-dataframe-into-multiple-rows-1657387806735","postType":"QUESTION","createdAt":"2022-07-09T17:30:06.000Z","updatedAt":"2022-07-09T17:30:06.000Z","tags":[{"id":2077,"name":"pandas-explode","slug":"pandas-explode","createdAt":"2022-07-09T17:30:06.000Z","updatedAt":"2022-07-09T17:30:06.000Z","Questions_Tags":{"questionId":380,"tagId":2077}}]}]},"slug":"pandas-explode","page":1,"answers":{"380":["\n&lt;p&gt;I know &lt;code&gt;object&lt;/code&gt; dtype columns makes the data hard to convert with pandas functions. When I receive data like this, the first thing that came to mind was to &quot;flatten&quot; or unnest the columns.&lt;/p&gt;\n&lt;p&gt;I am using pandas and Python functions for this type of question. If you are worried about the speed of the above solutions, check out &lt;a href=&quot;https://stackoverflow.com/questions/53219045&quot;&gt;user3483203&apos;s answer&lt;/a&gt;, since it&apos;s using numpy and most of the time numpy is faster. I recommend &lt;a href=&quot;https://cython.org/&quot; rel=&quot;noreferrer&quot;&gt;Cython&lt;/a&gt; or &lt;a href=&quot;http://numba.pydata.org/&quot; rel=&quot;noreferrer&quot;&gt;numba&lt;/a&gt; if speed matters.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 0 [pandas &amp;gt;= 0.25]&lt;/strong&gt;\nStarting from &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/0.25/user_guide/reshaping.html#exploding-a-list-like-column&quot; rel=&quot;noreferrer&quot;&gt;pandas 0.25&lt;/a&gt;, if you only need to explode &lt;em&gt;one&lt;/em&gt; column, you can use the &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;pandas.DataFrame.explode&lt;/code&gt;&lt;/a&gt; function:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.explode(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;)\n\n       A  B\n    &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n    &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Given a dataframe with an empty &lt;code&gt;list&lt;/code&gt; or a &lt;code&gt;NaN&lt;/code&gt; in the column. An empty list will not cause an issue, but a &lt;code&gt;NaN&lt;/code&gt; will need to be filled with a &lt;code&gt;list&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [], np.nan]})\ndf.B = df.B.fillna({i: [] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; df.index})  &lt;span class=&quot;hljs-comment&quot;&gt;# replace NaN with []&lt;/span&gt;\ndf.explode(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;)\n\n   A    B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  NaN\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  NaN\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 1&lt;/strong&gt;\n&lt;strong&gt;&lt;code&gt;apply + pd.Series&lt;/code&gt;&lt;/strong&gt; (easy to understand but in terms of performance not recommended . )&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.set_index(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;).B.apply(pd.Series).stack().reset_index(level=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).rename(columns={&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;})\nOut[&lt;span class=&quot;hljs-number&quot;&gt;463&lt;/span&gt;]:\n   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 2&lt;/strong&gt;\nUsing &lt;code&gt;repeat&lt;/code&gt; with &lt;code&gt;DataFrame&lt;/code&gt; constructor , re-create your dataframe (good at performance, not good at multiple columns )&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;:df.A.repeat(df.B.&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;()),&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:np.concatenate(df.B.values)})\ndf\nOut[&lt;span class=&quot;hljs-number&quot;&gt;465&lt;/span&gt;]:\n   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Method 2.1&lt;/strong&gt;\nfor example besides A we have A.1 .....A.n. If we still use the method(&lt;strong&gt;Method 2&lt;/strong&gt;) above it is hard for us to re-create the columns one by one .&lt;/p&gt;\n&lt;p&gt;Solution : &lt;code&gt;join&lt;/code&gt; or &lt;code&gt;merge&lt;/code&gt; with the &lt;code&gt;index&lt;/code&gt; after &apos;unnest&apos; the single columns&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;s=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:np.concatenate(df.B.values)},index=df.index.repeat(df.B.&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;()))\ns.join(df.drop(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;477&lt;/span&gt;]:\n   B  A\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you need the column order exactly the same as before, add &lt;code&gt;reindex&lt;/code&gt; at the end.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;s.join(df.drop(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;).reindex(columns=df.columns)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 3&lt;/strong&gt;\nrecreate the &lt;code&gt;list&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;pd.DataFrame([[x] + [z] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x, y &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; df.values &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; z &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; y],columns=df.columns)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;488&lt;/span&gt;]:\n   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If more than two columns, use&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;s=pd.DataFrame([[x] + [z] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x, y &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(df.index,df.B) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; z &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; y])\ns.merge(df,left_on=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,right_index=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;491&lt;/span&gt;]:\n   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A       B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 4&lt;/strong&gt;\nusing &lt;code&gt;reindex&lt;/code&gt;  or &lt;code&gt;loc&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.reindex(df.index.repeat(df.B.&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;())).assign(B=np.concatenate(df.B.values))\nOut[&lt;span class=&quot;hljs-number&quot;&gt;554&lt;/span&gt;]:\n   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#df.loc[df.index.repeat(df.B.str.len())].assign(B=np.concatenate(df.B.values))&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 5&lt;/strong&gt;\nwhen the list only contains unique values:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]]})\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; collections &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; ChainMap\nd = &lt;span class=&quot;hljs-built_in&quot;&gt;dict&lt;/span&gt;(ChainMap(*&lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;dict&lt;/span&gt;.fromkeys, df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;], df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;])))\npd.DataFrame(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(d.items()),columns=df.columns[::-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])\nOut[&lt;span class=&quot;hljs-number&quot;&gt;574&lt;/span&gt;]:\n   B  A\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 6&lt;/strong&gt;\nusing &lt;code&gt;numpy&lt;/code&gt; for high performance:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;newvalues=np.dstack((np.repeat(df.A.values,&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;,df.B.values))),np.concatenate(df.B.values)))\npd.DataFrame(data=newvalues[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],columns=df.columns)\n   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Method 7&lt;/strong&gt;\nusing base function &lt;code&gt;itertools&lt;/code&gt; &lt;code&gt;cycle&lt;/code&gt; and &lt;code&gt;chain&lt;/code&gt;: Pure python solution just for fun&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cycle,chain\nl=df.values.tolist()\nl1=[&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;([x[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]], cycle(x[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;([x[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]) &amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(x[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(cycle([x[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]), x[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]))) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; l]\npd.DataFrame(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chain.from_iterable(l1)),columns=df.columns)\n   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Generalizing to multiple columns&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]],&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;:[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]]})\ndf\nOut[&lt;span class=&quot;hljs-number&quot;&gt;592&lt;/span&gt;]:\n   A       B       C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Self-def function:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unnesting&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df, explode&lt;/span&gt;):\n    idx = df.index.repeat(df[explode[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]].&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;())\n    df1 = pd.concat([\n        pd.DataFrame({x: np.concatenate(df[x].values)}) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; explode], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    df1.index = idx\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df1.join(df.drop(explode, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\n\n\nunnesting(df,[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;])\nOut[&lt;span class=&quot;hljs-number&quot;&gt;609&lt;/span&gt;]:\n   B  C  A\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h3&gt;&lt;strong&gt;Column-wise Unnesting&lt;/strong&gt;&lt;/h3&gt;\n&lt;p&gt;All above method is talking about the &lt;em&gt;&lt;strong&gt;vertical&lt;/strong&gt;&lt;/em&gt; unnesting and explode , If you do need expend the list &lt;em&gt;&lt;strong&gt;horizontal&lt;/strong&gt;&lt;/em&gt;, Check with &lt;code&gt;pd.DataFrame&lt;/code&gt; constructor&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.join(pd.DataFrame(df.B.tolist(),index=df.index).add_prefix(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B_&apos;&lt;/span&gt;))\nOut[&lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;]:\n   A       B       C  B_0  B_1\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]    &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Updated function&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unnesting&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df, explode, axis&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; axis==&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:\n        idx = df.index.repeat(df[explode[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]].&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;())\n        df1 = pd.concat([\n            pd.DataFrame({x: np.concatenate(df[x].values)}) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; explode], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n        df1.index = idx\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df1.join(df.drop(explode, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; :\n        df1 = pd.concat([\n                         pd.DataFrame(df[x].tolist(), index=df.index).add_prefix(x) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; explode], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df1.join(df.drop(explode, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Test Output&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;unnesting(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;], axis=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;]:\n   B0  B1  C0  C1  A\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Update 2021-02-17 with original explode function&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unnesting&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df, explode, axis&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; axis==&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:\n        df1 = pd.concat([df[x].explode() &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; explode], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df1.join(df.drop(explode, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; :\n        df1 = pd.concat([\n                         pd.DataFrame(df[x].tolist(), index=df.index).add_prefix(x) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; explode], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df1.join(df.drop(explode, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Option 1&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If all of the sublists in the other column are the same length, &lt;code&gt;numpy&lt;/code&gt; can be an efficient option here:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;vals = np.array(df.B.values.tolist())    \na = np.repeat(df.A, vals.shape[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])\n\npd.DataFrame(np.column_stack((a, vals.ravel())), columns=df.columns)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Option 2&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If the sublists have different length, you need an additional step:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;vals = df.B.values.tolist()\nrs = [&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(r) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; vals]    \na = np.repeat(df.A, rs)\n\npd.DataFrame(np.column_stack((a, np.concatenate(vals))), columns=df.columns)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Option 3&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I took a shot at generalizing this to work to flatten &lt;code&gt;N&lt;/code&gt; columns and tile &lt;code&gt;M&lt;/code&gt; columns, I&apos;ll work later on making it more efficient:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]],\n                   &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]], &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A          B          C  D\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]  A\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  B\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;        [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  C\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unnest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df, tile, explode&lt;/span&gt;):\n    vals = df[explode].&lt;span class=&quot;hljs-built_in&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    rs = [&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(r) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; vals]\n    a = np.repeat(df[tile].values, rs, axis=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    b = np.concatenate(vals.values)\n    d = np.column_stack((a, b))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame(d, columns = tile +  [&lt;span class=&quot;hljs-string&quot;&gt;&apos;_&apos;&lt;/span&gt;.join(explode)])\n\nunnest(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;    A  D B_C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A   &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  B   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  B   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  B   &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  B   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  B   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  C   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  C   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  C   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Functions&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;wen1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df.set_index(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;).B.apply(pd.Series).stack().reset_index(level=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).rename(columns={&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;})\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;wen2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;:df.A.repeat(df.B.&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;()),&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:np.concatenate(df.B.values)})\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;wen3&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    s = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: np.concatenate(df.B.values)}, index=df.index.repeat(df.B.&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;()))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; s.join(df.drop(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;wen4&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame([[x] + [z] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x, y &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; df.values &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; z &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; y],columns=df.columns)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chris1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    vals = np.array(df.B.values.tolist())\n    a = np.repeat(df.A, vals.shape[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame(np.column_stack((a, vals.ravel())), columns=df.columns)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chris2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    vals = df.B.values.tolist()\n    rs = [&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(r) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; vals]\n    a = np.repeat(df.A.values, rs)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame(np.column_stack((a, np.concatenate(vals))), columns=df.columns)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Timings&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; plt\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; timeit &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; timeit\n\nres = pd.DataFrame(\n       index=[&lt;span class=&quot;hljs-string&quot;&gt;&apos;wen1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;wen2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;wen3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;wen4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;chris1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;chris2&apos;&lt;/span&gt;],\n       columns=[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt;],\n       dtype=&lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;\n)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; f &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; res.index:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; c &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; res.columns:\n        df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]})\n        df = pd.concat([df]*c)\n        stmt = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{}(df)&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;format&lt;/span&gt;(f)\n        setp = &lt;span class=&quot;hljs-string&quot;&gt;&apos;from __main__ import df, {}&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;format&lt;/span&gt;(f)\n        res.at[f, c] = timeit(stmt, setp, number=&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)\n\nax = res.div(res.&lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;()).T.plot(loglog=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\nax.set_xlabel(&lt;span class=&quot;hljs-string&quot;&gt;&quot;N&quot;&lt;/span&gt;)\nax.set_ylabel(&lt;span class=&quot;hljs-string&quot;&gt;&quot;time (relative)&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Performance&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/SWzSN.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/SWzSN.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Exploding a list-like column has been &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/0.25/user_guide/reshaping.html#exploding-a-list-like-column&quot; rel=&quot;noreferrer&quot;&gt;simplified significantly in pandas 0.25&lt;/a&gt; with the addition of the &lt;code&gt;explode()&lt;/code&gt; method:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]})\ndf.explode(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Out:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One alternative is to apply the &lt;a href=&quot;https://stackoverflow.com/questions/1208118/using-numpy-to-build-an-array-of-all-combinations-of-two-arrays&quot;&gt;meshgrid recipe&lt;/a&gt; over the rows of the columns to unnest:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unnest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;frame, explode&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;mesh&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;values&lt;/span&gt;):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; np.array(np.meshgrid(*values)).T.reshape(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(values))\n\n    data = np.vstack(mesh(row) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; frame[explode].values)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame(data=data, columns=explode)\n\n\ndf = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]})\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(unnest(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]))  &lt;span class=&quot;hljs-comment&quot;&gt;# base&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;()\n\ndf = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]], &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]]})\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(unnest(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]))  &lt;span class=&quot;hljs-comment&quot;&gt;# multiple columns&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;()\n\ndf = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]],\n                   &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]], &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]})\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(unnest(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]))  &lt;span class=&quot;hljs-comment&quot;&gt;# uneven length lists&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;()\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(unnest(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]))  &lt;span class=&quot;hljs-comment&quot;&gt;# different types&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n\n   A  B  C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n\n   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n   D  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  A  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  B  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  B  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  B  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;Problem Setup&lt;/h3&gt;\n\n&lt;p&gt;Assume there are multiple columns with different length objects within it&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]\n})\n\ndf\n\n   A       B          C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When the lengths are the same, it is easy for us to assume that the varying elements coincide and should be &quot;zipped&quot; together.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A       B          C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;# Typical to assume these should be zipped [(1, 1), (2, 2)]&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, the assumption gets challenged when we see different length objects, should we &quot;zip&quot;, if so, how do we handle the excess in one of the objects.  &lt;strong&gt;OR&lt;/strong&gt;, maybe we want the product of all of the objects.  This will get big fast, but might be what is wanted.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A       B          C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;# is this [(3, 3), (4, 4), (None, 5)]?&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A       B          C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;# is this [(3, 3), (3, 4), (3, 5), (4, 3), (4, 4), (4, 5)]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;The Function&lt;/h3&gt;\n\n&lt;p&gt;This function gracefully handles &lt;code&gt;zip&lt;/code&gt; or &lt;code&gt;product&lt;/code&gt; based on a parameter and assumes to &lt;code&gt;zip&lt;/code&gt; according to the length of the longest object with &lt;code&gt;zip_longest&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; zip_longest, product\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;xplode&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df, explode, zipped=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;&lt;/span&gt;):\n    method = zip_longest &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; zipped &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; product\n\n    rest = {*df} - {*explode}\n\n    zipped = &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(*&lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(df.get, rest)), &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(*&lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(df.get, explode)))\n    tups = [tup + exploded\n     &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; tup, pre &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; zipped\n     &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; exploded &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; method(*pre)]\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame(tups, columns=[*rest, *explode])[[*df]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Zipped&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;xplode(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;])\n\n   A    B  C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3.0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4.0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  NaN  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Product&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;xplode(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;], zipped=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;)\n\n   A  B  C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;New Setup&lt;/h3&gt;\n\n&lt;p&gt;Varying up the example a bit&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;E&apos;&lt;/span&gt;: [(&lt;span class=&quot;hljs-string&quot;&gt;&apos;X&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Y&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Z&apos;&lt;/span&gt;), (&lt;span class=&quot;hljs-string&quot;&gt;&apos;W&apos;&lt;/span&gt;,)]\n})\n\ndf\n\n   A       B  C          D          E\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  C     [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  (X, Y, Z)\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]  C  [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]       (W,)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Zipped&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;xplode(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;E&apos;&lt;/span&gt;])\n\n   A    B  C    D     E\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;     X\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt;     Y\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  NaN  C  NaN     Z\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3.0&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;3.0&lt;/span&gt;     W\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4.0&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;4.0&lt;/span&gt;  &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  NaN  C  &lt;span class=&quot;hljs-number&quot;&gt;5.0&lt;/span&gt;  &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Product&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;xplode(df, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;E&apos;&lt;/span&gt;], zipped=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;)\n\n    A  B  C  D  E\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  X\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  Y\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  Z\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  X\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  Y\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  Z\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  X\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  Y\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  Z\n&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  X\n&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  Y\n&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  Z\n&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  W\n&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  W\n&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  W\n&lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  W\n&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  W\n&lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  C  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  W\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;My 5 cents:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B2&apos;&lt;/span&gt;]] = pd.DataFrame(df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].values.tolist())\n\ndf[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]].append(df[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B2&apos;&lt;/span&gt;]].rename(columns={&lt;span class=&quot;hljs-string&quot;&gt;&apos;B2&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;}),\n                      ignore_index=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and another 5&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B2&apos;&lt;/span&gt;]] = pd.DataFrame([*df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]]) &lt;span class=&quot;hljs-comment&quot;&gt;# if values.tolist() is too boring&lt;/span&gt;\n\n(pd.wide_to_long(df.drop(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n .reset_index(level=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, drop=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n .reset_index())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;both resulting in the same&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Because normally sublist length are different and join/merge is far more computational expensive. I retested the method for different length sublist and more normal columns.&lt;/p&gt;\n\n&lt;p&gt;MultiIndex should be also a easier way to write and has near the same performances as numpy way.&lt;/p&gt;\n\n&lt;p&gt;Surprisingly, in my implementation comprehension way has the best performance.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;stack&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df.set_index([&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]).B.apply(pd.Series).stack()\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;comprehension&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame([x + [z] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x, y &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(df[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]].values.tolist(), df.B) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; z &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; y])\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;multiindex&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame(np.concatenate(df.B.values), index=df.set_index([&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]).index.repeat(df.B.&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;()))\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.DataFrame(\n        np.column_stack((\n            np.repeat(df[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]].values, df.B.&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(), axis=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;),\n            np.concatenate(df.B.values)\n        ))\n    )\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; plt\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; timeit &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; timeit\n\nres = pd.DataFrame(\n    index=[\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;stack&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;comprehension&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;multiindex&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;array&apos;&lt;/span&gt;,\n    ],\n    columns=[&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50000&lt;/span&gt;],\n    dtype=&lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;\n)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; f &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; res.index:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; c &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; res.columns:\n        df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;abc&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;def&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [[&lt;span class=&quot;hljs-string&quot;&gt;&apos;g&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;h&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;i&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;j&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;k&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;l&apos;&lt;/span&gt;]]})\n        df = pd.concat([df] * c)\n        stmt = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{}(df)&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;format&lt;/span&gt;(f)\n        setp = &lt;span class=&quot;hljs-string&quot;&gt;&apos;from __main__ import df, {}&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;format&lt;/span&gt;(f)\n        res.at[f, c] = timeit(stmt, setp, number=&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)\n\nax = res.div(res.&lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;()).T.plot(loglog=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\nax.set_xlabel(&lt;span class=&quot;hljs-string&quot;&gt;&quot;N&quot;&lt;/span&gt;)\nax.set_ylabel(&lt;span class=&quot;hljs-string&quot;&gt;&quot;time (relative)&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Performance&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/4SFWo.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;Relative time of each method&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I generalized the problem a bit to be applicable to more columns.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Summary of what my solution does:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In[&lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;]: df\nOut[&lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;]: \n    A   B             C             columnD\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  A1  B1  [C1&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;, C1&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]                D1\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A2  B2  [C2&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;, C2&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]  [D2&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;, D2&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;, D2&lt;span class=&quot;hljs-number&quot;&gt;.3&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  A3  B3            C3        [D3&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;, D3&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;]\n\nIn[&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;]: dfListExplode(df,[&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;columnD&apos;&lt;/span&gt;])\nOut[&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;]: \n    A   B     C columnD\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  A1  B1  C1&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;    D1\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  A1  B1  C1&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;    D1\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  A2  B2  C2&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;    D2&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  A2  B2  C2&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;    D2&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  A2  B2  C2&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;    D2&lt;span class=&quot;hljs-number&quot;&gt;.3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  A2  B2  C2&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;    D2&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  A2  B2  C2&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;    D2&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  A2  B2  C2&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;    D2&lt;span class=&quot;hljs-number&quot;&gt;.3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  A3  B3    C3    D3&lt;span class=&quot;hljs-number&quot;&gt;.1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;  A3  B3    C3    D3&lt;span class=&quot;hljs-number&quot;&gt;.2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Complete example:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The actual explosion is performed in 3 lines.&lt;/strong&gt; The rest is cosmetics (multi column explosion, handling of strings instead of lists in the explosion column, ...).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np\n\ndf=pd.DataFrame( {&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;A2&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;A3&apos;&lt;/span&gt;],\n                  &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;B2&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;B3&apos;&lt;/span&gt;],\n                  &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: [ [&lt;span class=&quot;hljs-string&quot;&gt;&apos;C1.1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;C1.2&apos;&lt;/span&gt;],[&lt;span class=&quot;hljs-string&quot;&gt;&apos;C2.1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;C2.2&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;C3&apos;&lt;/span&gt;],\n                  &lt;span class=&quot;hljs-string&quot;&gt;&apos;columnD&apos;&lt;/span&gt;: [ &lt;span class=&quot;hljs-string&quot;&gt;&apos;D1&apos;&lt;/span&gt;,[&lt;span class=&quot;hljs-string&quot;&gt;&apos;D2.1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;D2.2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;D2.3&apos;&lt;/span&gt;],[&lt;span class=&quot;hljs-string&quot;&gt;&apos;D3.1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;D3.2&apos;&lt;/span&gt;]],\n                  })\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;df&apos;&lt;/span&gt;,df, sep=&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dfListExplode&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df, explodeKeys&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;isinstance&lt;/span&gt;(explodeKeys, &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;):\n        explodeKeys=[explodeKeys]\n    &lt;span class=&quot;hljs-comment&quot;&gt;# recursive handling of explodeKeys&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(explodeKeys)==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; df\n    &lt;span class=&quot;hljs-keyword&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(explodeKeys)==&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:\n        explodeKey=explodeKeys[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dfListExplode( dfListExplode(df, explodeKeys[:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]), explodeKeys[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:])\n    &lt;span class=&quot;hljs-comment&quot;&gt;# perform explosion/unnesting for key: explodeKey&lt;/span&gt;\n    dfPrep=df[explodeKey].apply(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: x &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;isinstance&lt;/span&gt;(x,&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; [x]) &lt;span class=&quot;hljs-comment&quot;&gt;#casts all elements to a list&lt;/span&gt;\n    dfIndExpl=pd.DataFrame([[x] + [z] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x, y &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(dfPrep.index,dfPrep.values) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; z &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; y ], columns=[&lt;span class=&quot;hljs-string&quot;&gt;&apos;explodedIndex&apos;&lt;/span&gt;,explodeKey])\n    dfMerged=dfIndExpl.merge(df.drop(explodeKey, axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), left_on=&lt;span class=&quot;hljs-string&quot;&gt;&apos;explodedIndex&apos;&lt;/span&gt;, right_index=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n    dfReind=dfMerged.reindex(columns=&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(df))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dfReind\n\ndfExpl=dfListExplode(df,[&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;columnD&apos;&lt;/span&gt;])\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;dfExpl&apos;&lt;/span&gt;,dfExpl, sep=&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Credits to &lt;a href=&quot;https://stackoverflow.com/a/53218939/7128154&quot;&gt;WeNYoBen&apos;s answer&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Something pretty not recommended (at least work in this case):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=pd.concat([df]*&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;).sort_index()\nit=&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].tolist()[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]+df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].tolist()[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;])\ndf[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]=df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].apply(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x:&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;(it))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;concat&lt;/code&gt; + &lt;code&gt;sort_index&lt;/code&gt; + &lt;code&gt;iter&lt;/code&gt; + &lt;code&gt;apply&lt;/code&gt; + &lt;code&gt;next&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Now:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(df)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If care about index:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=df.reset_index(drop=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(df)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   A  B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]})\n\npd.concat([df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;], pd.DataFrame(df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].values.tolist())], axis = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\\\n  .melt(id_vars = &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, value_name = &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;)\\\n  .dropna()\\\n  .drop(&lt;span class=&quot;hljs-string&quot;&gt;&apos;variable&apos;&lt;/span&gt;, axis = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n    A   B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any opinions on this method I thought of? or is doing both concat and melt considered too &quot;expensive&quot;?&lt;/p&gt;\n    ","\n&lt;p&gt;I have another good way to solves this when you have more than one column to explode.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]], &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;:[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]]})\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(df)\n   A       B          C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I want to explode the columns B and C. First I explode B, second C. Than I drop B and C from the original df. After that I will do an index join on the 3 dfs.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;explode_b = df.explode(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]\nexplode_c = df.explode(&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;]\ndf = df.drop([&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\ndf = df.join([explode_b, explode_c])\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;:[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]})\n\nout = pd.concat([df.loc[:,&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;],(df.B.apply(pd.Series))], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, sort=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;)\n\nout = out.set_index(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;).stack().droplevel(level=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).reset_index().rename(columns={&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;B&quot;&lt;/span&gt;})\n\n       A    B\n   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n   &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;you can implement this as one liner, if you don&apos;t wish to create intermediate object&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Here&apos;s the answer to the related question in:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# https://stackoverflow.com/q/56708671/11426125&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# initial dataframe&lt;/span&gt;\ndf12=pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;Date&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;2007-12-03&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;2008-09-07&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;names&apos;&lt;/span&gt;:\n[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;Peter&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;Alex&apos;&lt;/span&gt;],[&lt;span class=&quot;hljs-string&quot;&gt;&apos;Donald&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;Stan&apos;&lt;/span&gt;]]})\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# convert dataframe to array for indexing list values (names)&lt;/span&gt;\na = np.array(df12.values)  \n\n&lt;span class=&quot;hljs-comment&quot;&gt;# create a new, dataframe with dimensions for unnested&lt;/span&gt;\nb = np.ndarray(shape = (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;))\ndf2 = pd.DataFrame(b, columns = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;Date&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;names&quot;&lt;/span&gt;], dtype = &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# implement loops to assign date/name values as required&lt;/span&gt;\ni = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]))\nj = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]))\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; i:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; j:\n        df2.iat[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;*x+y, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = a[x][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n        df2.iat[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;*x+y, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = a[x][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][y]\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# set Date column as Index&lt;/span&gt;\ndf2.Date=pd.to_datetime(df2.Date)\ndf2.index=df2.Date\ndf2.drop(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Date&apos;&lt;/span&gt;,axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,inplace =&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In my case with more than one column to explode, and with variables lengths for the arrays that needs to be unnested.&lt;/p&gt;\n\n&lt;p&gt;I ended up applying the new pandas 0.25 &lt;code&gt;explode&lt;/code&gt; function two times, then removing generated duplicates and it does the job !&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = df.explode(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;)\ndf = df.explode(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;)\ndf = df.drop_duplicates()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Below is a simple function for horizontal explode, based on @BEN_YO&apos;s answer.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; typing\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;horizontal_explode&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;df: pd.DataFrame, col_name: &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;, new_columns: typing.&lt;span class=&quot;hljs-type&quot;&gt;Union&lt;/span&gt;[&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;]=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;) -&amp;gt; pd.DataFrame:\n    t = pd.DataFrame(df[col_name].tolist(), columns=new_columns, index=df.index)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pd.concat([df, t], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Running example:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;items = [\n    [&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;]],\n    [&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;e&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;f&quot;&lt;/span&gt;]]\n]\n\ndf = pd.DataFrame(items, columns = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;col1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;col2&quot;&lt;/span&gt;])\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(df)\n\nt = horizontal_explode(df=df, col_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col2&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;del&lt;/span&gt; t[&lt;span class=&quot;hljs-string&quot;&gt;&quot;col2&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(t)\n\nt = horizontal_explode(df=df, col_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col2&quot;&lt;/span&gt;, new_columns=[&lt;span class=&quot;hljs-string&quot;&gt;&quot;new_col1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;new_col2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;new_col3&quot;&lt;/span&gt;])\n&lt;span class=&quot;hljs-keyword&quot;&gt;del&lt;/span&gt; t[&lt;span class=&quot;hljs-string&quot;&gt;&quot;col2&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(t)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This the relevant output:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;  col1       col2\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  [a, b, c]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  [d, e, f]\n\n  col1  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  a  b  c\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  d  e  f\n\n  col1 new_col1 new_col2 new_col3\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        a        b        c\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;        d        e        f\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt; demo = {&lt;span class=&quot;hljs-string&quot;&gt;&apos;set1&apos;&lt;/span&gt;:{&lt;span class=&quot;hljs-string&quot;&gt;&apos;t1&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;t2&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;t3&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]}, &lt;span class=&quot;hljs-string&quot;&gt;&apos;set2&apos;&lt;/span&gt;:{&lt;span class=&quot;hljs-string&quot;&gt;&apos;t1&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;t2&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;t3&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]}, &lt;span class=&quot;hljs-string&quot;&gt;&apos;set3&apos;&lt;/span&gt;: {&lt;span class=&quot;hljs-string&quot;&gt;&apos;t1&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;t2&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&apos;t3&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]}}\n df = pd.DataFrame.from_dict(demo, orient=&lt;span class=&quot;hljs-string&quot;&gt;&apos;index&apos;&lt;/span&gt;) \n\n &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(df.head())\n my_list=[]\n df2=pd.DataFrame(columns=[&lt;span class=&quot;hljs-string&quot;&gt;&apos;set&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;t1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;t2&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;t3&apos;&lt;/span&gt;])\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; key,item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; df.iterrows():\n    t1=item.t1\n    t2=item.t2\n    t3=item.t3\n    mat1=np.matrix([t1,t2,t3])\n    row1=[key,mat1[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],mat1[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],mat1[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]\n    df2.loc[&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(df2)]=row1\n    row2=[key,mat1[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],mat1[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],mat1[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]\n    df2.loc[&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(df2)]=row2\n    row3=[key,mat1[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],mat1[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],mat1[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]]\n    df2.loc[&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(df2)]=row3\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(df2) \n\n&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt; t1 t2 t3\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  set1  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  set1  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  set1  &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  set2  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  set2  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  set2  &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  set3  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  set3  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  set3  &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;   \n&lt;/code&gt;&lt;/pre&gt;\n    "]},"randomTags":[{"name":"restriction","slug":"restriction"},{"name":"for-loop","slug":"for-loop"},{"name":"module","slug":"module"},{"name":"turbo-c++","slug":"turbo-c++"},{"name":"css","slug":"css"},{"name":"spl","slug":"spl"},{"name":"xml","slug":"xml"},{"name":"google-maps","slug":"google-maps"},{"name":"ereg","slug":"ereg"},{"name":"polymorphism","slug":"polymorphism"},{"name":"event-loop","slug":"event-loop"},{"name":"javascript","slug":"javascript"},{"name":"margin","slug":"margin"},{"name":"android-intent","slug":"android-intent"},{"name":"listview","slug":"listview"},{"name":"user-input","slug":"user-input"},{"name":"path","slug":"path"},{"name":"dynamic-allocation","slug":"dynamic-allocation"},{"name":"getter","slug":"getter"},{"name":"propertynotfoundexception","slug":"propertynotfoundexception"}]},"__N_SSG":true}