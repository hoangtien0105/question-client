{"pageProps":{"data":{"count":1,"rows":[{"id":22,"title":"Reference - What does this error mean in PHP?","slug":"reference-what-does-this-error-mean-in-php-1657384301782","postType":"QUESTION","createdAt":"2022-07-09T16:31:41.000Z","updatedAt":"2022-07-09T16:31:41.000Z","tags":[{"id":72,"name":"error-handling","slug":"error-handling","createdAt":"2022-07-09T16:31:41.000Z","updatedAt":"2022-07-09T16:31:41.000Z","Questions_Tags":{"questionId":22,"tagId":72}}]}]},"slug":"error-handling","page":"1","answers":{"22":["\n&lt;h3&gt;Warning: Cannot modify header information - headers already sent&lt;/h3&gt;\n\n&lt;p&gt;Happens when your script tries to send an HTTP header to the client but there already was output before, which resulted in headers to be already sent to the client.&lt;/p&gt;\n\n&lt;p&gt;This is an &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.constants.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/a&gt; and it will not stop the script.&lt;/p&gt;\n\n&lt;p&gt;A typical example would be a template file like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&amp;lt;html&amp;gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;(); &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n    &amp;lt;head&amp;gt;&amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;\n&amp;lt;/html&amp;gt;\n...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;session_start()&lt;/code&gt; function will try to send headers with the session cookie to the client. But PHP already sent headers when it wrote the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element to the output stream. You&apos;d have to move the &lt;code&gt;session_start()&lt;/code&gt; to the top.&lt;/p&gt;\n\n&lt;p&gt;You can solve this by going through the lines &lt;em&gt;before&lt;/em&gt; the code triggering the Warning and check where it outputs. Move any header sending code before that code. &lt;/p&gt;\n\n&lt;p&gt;An often overlooked output is new lines after PHP&apos;s closing &lt;code&gt;?&amp;gt;&lt;/code&gt;. It is considered a standard practice to omit &lt;code&gt;?&amp;gt;&lt;/code&gt; when it is the last thing in the file. Likewise, another common cause for this warning is when the opening &lt;code&gt;&amp;lt;?php&lt;/code&gt; has an empty space, line, or invisible character before it, causing the web server to send the headers and the whitespace/newline thus when PHP starts parsing won&apos;t be able to submit any header.&lt;/p&gt;\n\n&lt;p&gt;If your file has more than one &lt;code&gt;&amp;lt;?php ... ?&amp;gt;&lt;/code&gt; code block in it, you should not have any spaces in between them. (Note: You might have multiple blocks if you had code that was automatically constructed)&lt;/p&gt;\n\n&lt;p&gt;Also make sure you don&apos;t have any Byte Order Marks in your code, for example when the encoding of the script is UTF-8 with BOM.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8028957/headers-already-sent-by-php&quot;&gt;Headers already sent by PHP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=headers+already+sent+[php]&quot;&gt;All PHP &quot;Headers already sent&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=BOM+php&quot;&gt;Byte Order Mark&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4673747/what-php-functions-create-output&quot;&gt;What PHP Functions Create Output?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Fatal error: Call to a member function ... on a non-object&lt;/h3&gt;\n\n&lt;p&gt;Happens with code similar to &lt;code&gt;xyz-&amp;gt;method()&lt;/code&gt; where &lt;code&gt;xyz&lt;/code&gt; is not an object and therefore that &lt;code&gt;method&lt;/code&gt; can not be called.&lt;/p&gt;\n\n&lt;p&gt;This is a fatal error which will stop the script (forward compatibility notice: It will become a catchable error starting with PHP 7).&lt;/p&gt;\n\n&lt;p&gt;Most often this is a sign that the code has missing checks for error conditions. Validate that an object is actually an object before calling its methods.&lt;/p&gt;\n\n&lt;p&gt;A &lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D+%5Bpdo%5D+Fatal+error%3A+Call+to+a+member+function+on+a+non-object&quot;&gt;typical&lt;/a&gt; example would be&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// ... some code using PDO&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$statement&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$pdo&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;prepare&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;invalid query&apos;&lt;/span&gt;, ...);\n&lt;span class=&quot;hljs-variable&quot;&gt;$statement&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;execute&lt;/span&gt;(...);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the example above, the query cannot be prepared and &lt;code&gt;prepare()&lt;/code&gt; will assign &lt;code&gt;false&lt;/code&gt; to &lt;code&gt;$statement&lt;/code&gt;. Trying to call the &lt;code&gt;execute()&lt;/code&gt; method will then result in the Fatal Error because &lt;code&gt;false&lt;/code&gt; is a &quot;non-object&quot; because the value is a boolean.&lt;/p&gt;\n\n&lt;p&gt;Figure out &lt;em&gt;why&lt;/em&gt; your function returned a boolean instead of an object. For example, check the &lt;code&gt;$pdo&lt;/code&gt; object for the last error that occurred. Details on how to debug this will depend on how errors are handled for the particular function/object/class in question.&lt;/p&gt;\n\n&lt;p&gt;If even the &lt;code&gt;-&amp;gt;prepare&lt;/code&gt; is failing then your &lt;code&gt;$pdo&lt;/code&gt; database handle object &lt;a href=&quot;https://stackoverflow.com/questions/4910796/scope-error-call-to-a-member-function-prepare-on-a-non-object&quot;&gt;didn&apos;t get passed into the current scope&lt;/a&gt;. Find where it got defined. Then pass it as a parameter, store it as property, or share it via the global scope.&lt;/p&gt;\n\n&lt;p&gt;Another problem may be conditionally creating an object and then trying to call a method outside that conditional block. For example&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$someCondition&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$myObj&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyObj&lt;/span&gt;();\n}\n&lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$myObj&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;someMethod&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;By attempting to execute the method outside the conditional block, your object may not be defined.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/54566/727208&quot;&gt;Call to a member function on a non-object&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D+Fatal+error%3A+Call+to+a+member+function+on+a+non-object&quot;&gt;List all PHP &quot;Fatal error: Call to a member function ... on a non-object&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Nothing is seen. The page is empty and white.&lt;/h3&gt;\n\n&lt;p&gt;Also known as the &lt;em&gt;White Page Of Death&lt;/em&gt; or &lt;em&gt;White Screen Of Death&lt;/em&gt;. This happens when error reporting is turned off and a fatal error (often syntax error) occurred.&lt;/p&gt;\n\n&lt;p&gt;If you have error logging enabled, you will find the concrete error message in your error log. This will usually be in a file called &quot;php_errors.log&quot;, either in a central location (e.g. &lt;code&gt;/var/log/apache2&lt;/code&gt; on many Linux environments) or in the directory of the script itself (sometimes used in a shared hosting environment).&lt;/p&gt;\n\n&lt;p&gt;Sometimes it might be more straightforward to temporarily enable the display of errors. The white page will then display the error message. Take care because these errors are visible  to everybody visiting the website.&lt;/p&gt;\n\n&lt;p&gt;This can be easily done by adding at the top of the script the following PHP code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(~&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The code will turn on the display of errors and set reporting to the highest level.&lt;/p&gt;\n\n&lt;p&gt;Since the &lt;a href=&quot;http://php.net/ini_set&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;ini_set()&lt;/code&gt;&lt;/a&gt; is executed at runtime it has no effects on parsing/syntax errors. Those errors will appear in the log. If you want to display them in the output as well (e.g. in a browser) you have to set the &lt;a href=&quot;http://php.net/display_startup_errors&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;display_startup_errors&lt;/code&gt;&lt;/a&gt; directive to &lt;code&gt;true&lt;/code&gt;. Do this either in the &lt;code&gt;php.ini&lt;/code&gt; or in a &lt;code&gt;.htaccess&lt;/code&gt; or by &lt;a href=&quot;http://docs.php.net/configuration.changes&quot; rel=&quot;noreferrer&quot;&gt;any other method that affects the configuration &lt;em&gt;before&lt;/em&gt; runtime&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can use the same methods to set the &lt;a href=&quot;http://php.net/manual/pt_BR/errorfunc.configuration.php#ini.log-errors&quot; rel=&quot;noreferrer&quot;&gt;log_errors&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/pt_BR/errorfunc.configuration.php#ini.error-log&quot; rel=&quot;noreferrer&quot;&gt;error_log&lt;/a&gt; directives to choose your own log file location.&lt;/p&gt;\n\n&lt;p&gt;Looking in the log or using the display, you will get a much better error message and the line of code where your script comes to halt.&lt;/p&gt;\n\n&lt;p&gt;Related questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1475297/phps-white-screen-of-death&quot;&gt;PHP&apos;s white screen of death&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2914127/white-screen-of-death&quot;&gt;White screen of death!&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5680831/php-5-3-does-not-display-error-messages&quot;&gt;PHP Does Not Display Error Messages&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/3075355/367456&quot;&gt;PHP emitting 500 on errors - where is this documented?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/845021/how-to-get-useful-error-messages-in-php&quot;&gt;How to get useful error messages in PHP?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D+White+Page+Screen+Of+Death&quot;&gt;All PHP &quot;White Page of Death&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Related errors:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12769982/reference-what-does-this-error-mean-in-php/12770089/#12770089&quot;&gt;Parse error: syntax error, unexpected T_XXX&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12769982/reference-what-does-this-error-mean-in-php/12769983#12769983&quot;&gt;Fatal error: Call to a member function ... on a non-object&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/24423272/476&quot;&gt;Code doesn&apos;t run/what looks like parts of my PHP code are output&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;&quot;Notice: Undefined Index&quot;, or &quot;Warning: Undefined array key&quot;&lt;/h3&gt;\n&lt;p&gt;Happens when you try to access an array by a key that does not exist in the array.&lt;/p&gt;\n&lt;p&gt;A typical example of an &lt;code&gt;Undefined Index&lt;/code&gt; notice would be (&lt;a href=&quot;http://codepad.org/bsoiXSzw&quot; rel=&quot;nofollow noreferrer&quot;&gt;demo&lt;/a&gt;)&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;42&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;spinach&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Both &lt;code&gt;spinach&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; do not exist in the array, causing an &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.constants.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/a&gt; to be triggered. In PHP 8.0, this is an E_WARNING instead.&lt;/p&gt;\n&lt;p&gt;The solution is to make sure the index or offset exists prior to accessing that index. This may mean that you need to fix a bug in your program to ensure that those indexes do exist when you expect them to. Or it may mean that you need to test whether the indexes exist using &lt;a href=&quot;http://php.net/array_key_exists&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;array_key_exists&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/isset&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;isset&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;42&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_key_exists&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;spinach&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;spinach&apos;&lt;/span&gt;];\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;No key spinach in the array&apos;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you have code like:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;message&apos;&lt;/span&gt;]; &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&amp;lt;form method=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt; action=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;\n    &amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;message&quot;&lt;/span&gt;&amp;gt;\n    ...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;then &lt;code&gt;$_POST[&apos;message&apos;]&lt;/code&gt; will not be set when this page is first loaded and you will get the above error. Only when the form is submitted and this code is run a second time will the array index exist. You typically check for this with:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;)  ..  &lt;span class=&quot;hljs-comment&quot;&gt;// if the $_POST array is not empty&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// or&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$_SERVER&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;REQUEST_METHOD&apos;&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;) ..  &lt;span class=&quot;hljs-comment&quot;&gt;// page was requested with POST&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Related Questions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4261133/php-notice-undefined-variable-and-notice-undefined-index&quot;&gt;Reference: Notice: Undefined variable and Notice: Undefined index&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D+undefined+index&quot;&gt;All PHP &quot;Notice: Undefined Index&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/arrays&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://php.net/arrays&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given&lt;/h3&gt;\n\n&lt;p&gt;First and foremost:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12859942/why-shouldnt-i-use-mysql-functions-in-php&quot;&gt;&lt;strong&gt;Please, don&apos;t use &lt;code&gt;mysql_*&lt;/code&gt; functions in new code&lt;/strong&gt;&lt;/a&gt;. They are no longer maintained &lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot; rel=&quot;noreferrer&quot;&gt;and are officially deprecated&lt;/a&gt;. See the &lt;a href=&quot;http://uk.php.net/manual/en/function.mysql-connect.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;red box&lt;/strong&gt;&lt;/a&gt;? Learn about &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;prepared statements&lt;/em&gt;&lt;/a&gt; instead, and use &lt;a href=&quot;http://php.net/pdo&quot; rel=&quot;noreferrer&quot;&gt;PDO&lt;/a&gt; or &lt;a href=&quot;http://php.net/mysqli&quot; rel=&quot;noreferrer&quot;&gt;MySQLi&lt;/a&gt; - &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot; rel=&quot;noreferrer&quot;&gt;this article&lt;/a&gt; will help you decide which. If you choose PDO, &lt;a href=&quot;http://wiki.hashphp.org/PDO_Tutorial_for_MySQL_Developers&quot; rel=&quot;noreferrer&quot;&gt;here is a good tutorial&lt;/a&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;This happens when you try to fetch data from the result of &lt;code&gt;mysql_query&lt;/code&gt; but the query failed.&lt;/p&gt;\n\n&lt;p&gt;This is a warning and won&apos;t stop the script, but will make your program wrong.&lt;/p&gt;\n\n&lt;p&gt;You need to check the result returned by &lt;code&gt;mysql_query&lt;/code&gt; by &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$res&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_query&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-variable&quot;&gt;$res&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_error&lt;/span&gt;());\n}\n&lt;span class=&quot;hljs-comment&quot;&gt;// after checking, do the fetch&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2973202/mysql-fetch-array-expects-parameter-1-to-be-resource-boolean-given-in-select&quot;&gt;mysql_fetch_array() expects parameter 1 to be resource, boolean given in select&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=Warning:%20mysql_fetch_array%28%29%20expects%20parameter%201%20to%20be%20resource&amp;amp;submit=search&quot;&gt;All &quot;mysql_fetch_array() expects parameter 1 to be resource, boolean given&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Related Errors:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12769982/reference-what-does-this-error-mean-in-php/14067623#14067623&quot;&gt;Warning: &lt;em&gt;[function]&lt;/em&gt; expects parameter 1 to be resource, boolean given&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Other &lt;code&gt;mysql*&lt;/code&gt; functions that also expect a MySQL result resource as a parameter will produce the same error for the same reason.&lt;/p&gt;\n    ","\n&lt;h3&gt;Fatal error: Using $this when not in object context&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://php.net/language.variables.basics&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;$this&lt;/code&gt; is a special variable in PHP&lt;/a&gt; which can not be assigned. If it is accessed in a context where it does not exist, this fatal error is given.&lt;/p&gt;\n\n&lt;p&gt;This error can occur:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;If a non-static method is called statically. Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Foo&lt;/span&gt; &lt;/span&gt;{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__construct&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n       &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;;\n   }\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;bar&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n       &lt;span class=&quot;hljs-comment&quot;&gt;// ^^^^^^&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;;\n       &lt;span class=&quot;hljs-comment&quot;&gt;//   ^^^^^&lt;/span&gt;\n   }\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;bar&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;How to fix:&lt;/em&gt;&lt;/strong&gt; review your code again, &lt;code&gt;$this&lt;/code&gt; can only be used in an object context, and should never be used in a static method. Also, a static method should not access the non-static property. Use &lt;code&gt;self::$static_property&lt;/code&gt; to access the static property.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If code from a class method has been copied over into a normal function or just the global scope &lt;em&gt;and&lt;/em&gt; keeping the &lt;code&gt;$this&lt;/code&gt; special variable.&lt;br&gt;\n&lt;strong&gt;&lt;em&gt;How to fix:&lt;/em&gt;&lt;/strong&gt; Review the code and replace &lt;code&gt;$this&lt;/code&gt; with a different substitution variable.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Call non-static method as static: &lt;a href=&quot;https://stackoverflow.com/q/2350937/367456&quot;&gt;PHP Fatal error: Using $this when not in object context&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Copy over code: &lt;a href=&quot;https://stackoverflow.com/q/1643931/367456&quot;&gt;Fatal error: Using $this when not in object context&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=Fatal%20error:%20Using%20$this%20when%20not%20in%20object%20context&quot;&gt;All &quot;Using $this when not in object context&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;h3&gt;Fatal error: Call to undefined function XXX&lt;/h3&gt;\n\n&lt;p&gt;Happens when you try to call a function that is not defined yet. Common causes include missing extensions and includes, conditional function declaration, function in a function declaration or simple typos.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 1 - Conditional Function Declaration&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$someCondition&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$someCondition&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// triggers error&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, &lt;code&gt;fn()&lt;/code&gt; will never be declared because &lt;code&gt;$someCondition&lt;/code&gt; is not true. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 2 - Function in Function Declaration&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;createFn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) \n&lt;/span&gt;{\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// triggers error&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, &lt;code&gt;fn&lt;/code&gt; will only be declared once &lt;code&gt;createFn()&lt;/code&gt; gets called. Note that subsequent calls to &lt;code&gt;createFn()&lt;/code&gt; will trigger an error about Redeclaration of an Existing function.&lt;/p&gt;\n\n&lt;p&gt;You may also see this for a PHP built-in function. Try searching for the function in &lt;a href=&quot;http://php.net/manual/en/funcref.php&quot; rel=&quot;noreferrer&quot;&gt;the official manual&lt;/a&gt;, and check what &quot;extension&quot; (PHP module) it belongs to, and what versions of PHP support it.&lt;/p&gt;\n\n&lt;p&gt;In case of a missing extension, install that extension and enable it in php.ini. Refer to the Installation Instructions in the PHP Manual for the extension your function appears in. You may also be able to enable or install the extension using your package manager (e.g. &lt;code&gt;apt&lt;/code&gt; in Debian or Ubuntu, &lt;code&gt;yum&lt;/code&gt; in Red Hat or CentOS), or a control panel in a shared hosting environment.&lt;/p&gt;\n\n&lt;p&gt;If the function was introduced in a newer version of PHP from what you are using, you may find links to alternative implementations in the manual or its comment section. If it has been removed from PHP, look for information about why, as it may no longer be necessary.&lt;/p&gt;\n\n&lt;p&gt;In case of missing includes, make sure to include the file declaring the function before calling the function. &lt;/p&gt;\n\n&lt;p&gt;In case of typos, fix the typo.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=Fatal+error%3A+Call+to+undefined+function&quot;&gt;https://stackoverflow.com/search?q=Fatal+error%3A+Call+to+undefined+function&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Parse error: syntax error, unexpected T_XXX&lt;/h3&gt;\n\n&lt;p&gt;Happens when you have &lt;a href=&quot;http://php.net/tokens&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;T_XXX&lt;/code&gt; token&lt;/a&gt; in unexpected place, unbalanced (superfluous) parentheses, use of short tag without activating it in php.ini, and many more.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Reference: &lt;a href=&quot;https://stackoverflow.com/q/18050071/367456&quot;&gt;PHP Parse/Syntax Errors; and How to solve them?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7059753/parse-error-syntax-error-unexpected&quot;&gt;Parse Error: syntax error: unexpected &apos;{&apos;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11482527/parse-error-syntax-error-unexpected-end-of-file-in-my-php-code&quot;&gt;Parse error: Syntax error, unexpected end of file in my PHP code&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/992403/parse-error-syntax-error-unexpected-in-fix&quot;&gt;Parse error: syntax error, unexpected &apos;&amp;lt;&apos; in - Fix?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/9762216/parse-error-syntax-error-unexpected&quot;&gt;Parse error: syntax error, unexpected &apos;?&apos;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;For further help see:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://phpcodechecker.com/&quot; rel=&quot;noreferrer&quot;&gt;http://phpcodechecker.com/&lt;/a&gt; - Which does provide some more helpful explanations on your syntax woes.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Fatal error: Can&apos;t use function return value in write context&lt;/h3&gt;\n\n&lt;p&gt;This usually happens when using a function directly with &lt;code&gt;empty&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;empty&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;is_null&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;))) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;empty&apos;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is because &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/a&gt; is a language construct and not a function, it cannot be called with an expression as its argument in PHP versions before 5.5.  Prior to PHP 5.5, the argument to &lt;code&gt;empty()&lt;/code&gt; must be a &lt;em&gt;variable&lt;/em&gt;, but an arbitrary expression (such as a return value of a function) is permissible in PHP 5.5+.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;empty&lt;/code&gt;, despite its name, does not actually check if a variable is &quot;empty&quot;. Instead, it checks if a variable doesn&apos;t exist, or &lt;code&gt;== false&lt;/code&gt;. Expressions (like &lt;code&gt;is_null(null)&lt;/code&gt; in the example) will always be deemed to exist, so here &lt;code&gt;empty&lt;/code&gt; is only checking if it is equal to false. You could replace &lt;code&gt;empty()&lt;/code&gt; here with &lt;code&gt;!&lt;/code&gt;, e.g. &lt;code&gt;if (!is_null(null))&lt;/code&gt;, or explicitly compare to false, e.g. &lt;code&gt;if (is_null(null) == false)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4872184/fatal-error-cant-use-function-return-value&quot;&gt;Fatal error: Can&apos;t use function the return value&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;MySQL: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ... at line ...&lt;/h3&gt;\n\n&lt;p&gt;This error is often caused because you forgot to properly escape the data passed to a MySQL query.&lt;/p&gt;\n\n&lt;p&gt;An example of what &lt;strong&gt;not&lt;/strong&gt; to do (the &quot;Bad Idea&quot;):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;UPDATE `posts` SET my_text=&apos;&lt;span class=&quot;hljs-subst&quot;&gt;{$_POST[&apos;text&apos;]}&lt;/span&gt;&apos; WHERE id=&lt;span class=&quot;hljs-subst&quot;&gt;{$_GET[&apos;id&apos;]}&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_query&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$db&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This code could be included in a page with a form to submit, with an URL such as &lt;a href=&quot;http://example.com/edit.php?id=10&quot; rel=&quot;noreferrer&quot;&gt;http://example.com/edit.php?id=10&lt;/a&gt; (to edit the post n°10)&lt;/p&gt;\n\n&lt;p&gt;What will happen if the submitted text contains single quotes? &lt;code&gt;$query&lt;/code&gt; will end up with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;UPDATE `posts` SET my_text=&apos;I&apos;m a PHP newbie&apos; WHERE id=10&apos;;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And when this query is sent to MySQL, it will complain that the syntax is wrong, because there is an extra single quote in the middle.&lt;/p&gt;\n\n&lt;p&gt;To avoid such errors, you &lt;strong&gt;MUST&lt;/strong&gt; always escape the data before use in a query.&lt;/p&gt;\n\n&lt;p&gt;Escaping data before use in a SQL query is also very important because if you don&apos;t, your script will be open to SQL injections. An SQL injection may cause alteration, loss or modification of a record, a table or an entire database. This is a very serious security issue!&lt;/p&gt;\n\n&lt;p&gt;Documentation:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/60174/best-way-to-prevent-sql-injection-in-php&quot;&gt;How can I prevent SQL injection in PHP?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/mysql_real_escape_string&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;mysql_real_escape_string()&lt;/code&gt;&lt;/a&gt;  &lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/mysqli_real_escape_string&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;mysqli_real_escape_string()&lt;/code&gt;&lt;/a&gt;  &lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/332365/xkcd-sql-injection-please-explain&quot;&gt;How does the SQL injection from the &quot;Bobby Tables&quot; XKCD comic work?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5741187/sql-injection-that-gets-around-mysql-real-escape-string&quot;&gt;SQL injection that gets around mysql_real_escape_string()&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Parse error:  syntax error, unexpected T_ENCAPSED_AND_WHITESPACE&lt;/h3&gt;\n&lt;p&gt;In PHP 8.0 and above, the message is instead:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;syntax error, unexpected string content &quot;&quot;, expecting &quot;-&quot; or identifier or variable or number&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This error is most often encountered when attempting to reference an array value with a &lt;em&gt;quoted key&lt;/em&gt; for interpolation inside a double-quoted string when the entire complex variable construct is not enclosed in &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt;\n&lt;h3&gt;The error case:&lt;/h3&gt;\n&lt;p&gt;This will result in &lt;code&gt;Unexpected T_ENCAPSED_AND_WHITESPACE&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a double-quoted string with a quoted array key in &lt;span class=&quot;hljs-subst&quot;&gt;$array&lt;/span&gt;[&apos;key&apos;]&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-comment&quot;&gt;//---------------------------------------------------------------------^^^^^&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Possible fixes:&lt;/h3&gt;\n&lt;p&gt;In a double-quoted string, PHP will permit array key strings to be used &lt;em&gt;unquoted&lt;/em&gt;, and will not issue an &lt;code&gt;E_NOTICE&lt;/code&gt;.  So the above could be written as:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a double-quoted string with an un-quoted array key in &lt;span class=&quot;hljs-subst&quot;&gt;$array&lt;/span&gt;[key]&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-comment&quot;&gt;//------------------------------------------------------------------------^^^^^&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The entire complex array variable and key(s) can be enclosed in &lt;code&gt;{}&lt;/code&gt;, in which case they &lt;em&gt;should&lt;/em&gt; be quoted to avoid an &lt;code&gt;E_NOTICE&lt;/code&gt;.  &lt;a href=&quot;http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot; rel=&quot;nofollow noreferrer&quot;&gt;The PHP documentation&lt;/a&gt; recommends this syntax for complex variables.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a double-quoted string with a quoted array key in &lt;span class=&quot;hljs-subst&quot;&gt;{$array[&apos;key&apos;]}&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-comment&quot;&gt;//--------------------------------------------------------------^^^^^^^^^^^^^^^&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Or a complex array property of an object:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a a double-quoted string with a complex &lt;span class=&quot;hljs-subst&quot;&gt;{$object-&amp;gt;property-&amp;gt;array[&apos;key&apos;]}&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Of course, the alternative to &lt;em&gt;any&lt;/em&gt; of the above is to concatenate the array variable in instead of interpolating it:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a double-quoted string with an array variable&quot;&lt;/span&gt;. &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;key&apos;&lt;/span&gt;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot; concatenated inside.&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-comment&quot;&gt;//----------------------------------------------------------^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For reference, see the section on &lt;strong&gt;Variable Parsing&lt;/strong&gt; in &lt;a href=&quot;http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot; rel=&quot;nofollow noreferrer&quot;&gt;the PHP Strings manual page&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h3&gt;Fatal error: Allowed memory size of XXX bytes exhausted (tried to allocate XXX bytes)&lt;/h3&gt;\n\n&lt;p&gt;There is not enough memory to run your script. PHP has reached the memory limit and stops executing it. This error is fatal, the script stops. The value of the &lt;a href=&quot;http://php.net/memory_limit&quot; rel=&quot;noreferrer&quot;&gt;memory limit&lt;/a&gt; can be configured either in the &lt;code&gt;php.ini&lt;/code&gt; file or by using &lt;code&gt;ini_set(&apos;memory_limit&apos;, &apos;128 M&apos;);&lt;/code&gt; in the script (which will overwrite the value defined in &lt;code&gt;php.ini&lt;/code&gt;). The purpose of the memory limit is to prevent a single PHP script from gobbling up all the available memory and bringing the whole web server down.&lt;/p&gt;\n\n&lt;p&gt;The first thing to do is to minimise the amount of memory your script needs. For instance, if you&apos;re reading a large file into a variable or are fetching many records from a database and are storing them all in an array, that may use a lot of memory. Change your code to instead read the file line by line or fetch database records one at a time without storing them all in memory. This does require a bit of a conceptual awareness of what&apos;s going on behind the scenes and when data is stored in memory vs. elsewhere.&lt;/p&gt;\n\n&lt;p&gt;If this error occurred when your script was not doing memory-intensive work, you need to check your code to see whether there is a memory leak. The &lt;a href=&quot;http://php.net/manual/function.memory-get-usage.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;memory_get_usage&lt;/code&gt;&lt;/a&gt; function is your friend.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=Fatal%20error:%20Allowed%20memory%20size%20of%20xxxx%20bytes%20exhausted&quot;&gt;All &quot;Fatal error: Allowed memory size of XXX bytes exhausted&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Warning: &lt;em&gt;[function]&lt;/em&gt;: failed to open stream: &lt;em&gt;[reason]&lt;/em&gt;&lt;/h3&gt;\n\n&lt;p&gt;It happens when you call a file usually by &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;fopen&lt;/code&gt; and PHP couldn&apos;t find the file or have not enough permission to load the file.&lt;/p&gt;\n\n&lt;p&gt;This can happen for a variety of reasons :&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;the file path is wrong&lt;/li&gt;\n&lt;li&gt;the file path is relative&lt;/li&gt;\n&lt;li&gt;include path is wrong&lt;/li&gt;\n&lt;li&gt;permissions are too restrictive&lt;/li&gt;\n&lt;li&gt;SELinux is in force&lt;/li&gt;\n&lt;li&gt;and many more ...&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;One common mistake is to not use an absolute path. This can be easily solved by using a full path or &lt;a href=&quot;http://php.net/manual/language.constants.predefined.php&quot; rel=&quot;noreferrer&quot;&gt;magic constants&lt;/a&gt; like &lt;code&gt;__DIR__&lt;/code&gt; or  &lt;code&gt;dirname(__FILE__)&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;__DIR__&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&apos;/inc/globals.inc.php&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;dirname&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;__FILE__&lt;/span&gt;) . &lt;span class=&quot;hljs-string&quot;&gt;&apos;/inc/globals.inc.php&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Ensuring the right path is used is one step in troubleshooting these issues, this can also be related to non-existing files, rights of the filesystem preventing access or open basedir restrictions by PHP itself.&lt;/p&gt;\n\n&lt;p&gt;The best way to solve this problem quickly is to follow the troubleshooting checklist below.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/36577020/failed-to-open-stream-no-such-file-or-directory&quot;&gt;Troubleshooting checklist: Failed to open stream&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Related Errors:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12769982/reference-what-does-this-error-mean-in-php/12772244#12772244&quot;&gt;Warning: open_basedir restriction in effect&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Parse error: syntax error, unexpected T_PAAMAYIM_NEKUDOTAYIM&lt;/h3&gt;\n\n&lt;p&gt;The scope resolution operator is also called &quot;Paamayim Nekudotayim&quot; from the Hebrew פעמיים נקודתיים. which means &quot;double colon&quot;.&lt;/p&gt;\n\n&lt;p&gt;This error typically happens if you inadvertently put &lt;code&gt;::&lt;/code&gt; in your code.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Reference: &lt;a href=&quot;https://stackoverflow.com/q/18050071/367456&quot;&gt;PHP Parse/Syntax Errors; and How to solve them?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2903564/what-do-two-colons-mean-in-php&quot;&gt;What do two colons mean in PHP?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3173501/in-php-whats-the-difference-between-double-colon-and-arrow&quot;&gt;What&apos;s the difference between :: (double colon) and -&amp;gt; (arrow) in PHP?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8734823/unexpected-t-paamayim-nekudotayim-expecting-t-ns-separator&quot;&gt;Unexpected T_PAAMAYIM_NEKUDOTAYIM, expecting T_NS_Separator&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Documentation:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/language.oop5.paamayim-nekudotayim.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;Scope Resolution Operator (::)&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Notice: Undefined variable&lt;/h3&gt;\n&lt;p&gt;Happens when you try to use a variable that wasn&apos;t previously defined.&lt;/p&gt;\n&lt;p&gt;A typical example would be&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something with item&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$counter&lt;/span&gt;++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you didn&apos;t define &lt;code&gt;$counter&lt;/code&gt; before, the code above will trigger the notice.&lt;/p&gt;\n&lt;p&gt;The correct way is to set the variable before using it&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$counter&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something with item&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$counter&lt;/span&gt;++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Similarly, a variable is not accessible outside its scope, for example when using anonymous functions.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$prefix&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Blueberry&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$food&lt;/span&gt; = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;cake&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;cheese&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;pie&quot;&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable&quot;&gt;$prefixedFood&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_map&lt;/span&gt;(function (&lt;span class=&quot;hljs-variable&quot;&gt;$food&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Prefix is undefined&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;${prefix} ${food}&quot;&lt;/span&gt;;\n}, &lt;span class=&quot;hljs-variable&quot;&gt;$food&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This should instead be passed using &lt;code&gt;use&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$prefix&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Blueberry&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$food&lt;/span&gt; = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;cake&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;cheese&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;pie&quot;&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable&quot;&gt;$prefixedFood&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_map&lt;/span&gt;(function (&lt;span class=&quot;hljs-variable&quot;&gt;$food&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;use&lt;/span&gt; ($&lt;span class=&quot;hljs-title&quot;&gt;prefix&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title&quot;&gt;return&lt;/span&gt; &quot;${&lt;span class=&quot;hljs-title&quot;&gt;prefix&lt;/span&gt;} ${&lt;span class=&quot;hljs-title&quot;&gt;food&lt;/span&gt;}&quot;;\n}, &lt;span class=&quot;hljs-variable&quot;&gt;$food&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Notice: Undefined property&lt;/h3&gt;\n&lt;p&gt;This error means much the same thing, but refers to a property of an object. Reusing the example above, this code would trigger the error because the &lt;code&gt;counter&lt;/code&gt; property hasn&apos;t been set.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$obj&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; stdclass;\n&lt;span class=&quot;hljs-variable&quot;&gt;$obj&lt;/span&gt;-&amp;gt;property = &lt;span class=&quot;hljs-number&quot;&gt;2342&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something with item&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$obj&lt;/span&gt;-&amp;gt;counter++;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Related Questions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=Notice%3A+Undefined+Variable+%5Bphp%5D&quot;&gt;All PHP &quot;Notice: Undefined Variable&quot; Questions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4261133/php-notice-undefined-variable-and-notice-undefined-index&quot;&gt;&quot;Notice: Undefined variable&quot;, &quot;Notice: Undefined index&quot;, and &quot;Notice: Undefined offset&quot; using PHP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16959576/reference-what-is-variable-scope-and-which-variables-are-accessible-from-where/16959577#16959577&quot;&gt;Reference: What is variable scope, which variables are accessible from where and what are &quot;undefined variable&quot; errors?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Notice: Use of undefined constant XXX - assumed &apos;XXX&apos;&lt;/h3&gt;\n&lt;p&gt;or, in PHP 7.2 or later:&lt;/p&gt;\n&lt;h3&gt;Warning: Use of undefined constant XXX - assumed &apos;XXX&apos; (this will throw an Error in a future version of PHP)&lt;/h3&gt;\n&lt;p&gt;or, in PHP 8.0 or later:&lt;/p&gt;\n&lt;h3&gt;Error: Undefined constant XXX&lt;/h3&gt;\n&lt;p&gt;This occurs when a token is used in the code and appears to be a constant, but a constant by that name is not defined.&lt;/p&gt;\n&lt;p&gt;One of the most common causes of this notice is a failure to quote a string used as an associative array key.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Wrong&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;[key];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Right&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;key&apos;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Another common cause is a missing &lt;code&gt;$&lt;/code&gt; (dollar) sign in front of a variable name:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Wrong&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; varName;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Right&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$varName&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or perhaps you have misspelled some other constant or keyword:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Wrong&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$foo&lt;/span&gt; = fasle;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Right&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$foo&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It can also be a sign that a needed PHP extension or library is missing when you try to access a constant defined by that library.&lt;/p&gt;\n&lt;p&gt;Related Questions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2941169/what-does-the-php-error-message-notice-use-of-undefined-constant-mean&quot;&gt;What does the PHP error message Notice: Use of undefined constant mean?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Fatal error: Cannot redeclare class &lt;em&gt;[class name]&lt;/em&gt;&lt;/h3&gt;\n\n&lt;h3&gt;Fatal error: Cannot redeclare &lt;em&gt;[function name]&lt;/em&gt;&lt;/h3&gt;\n\n&lt;p&gt;This means you&apos;re either using the same function/class name twice and need to rename one of them,  or it is because you have used &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;include&lt;/code&gt; where you should be using &lt;code&gt;require_once&lt;/code&gt; or &lt;code&gt;include_once&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;When a class or a function is declared in PHP, it is immutable, and cannot later be declared with a new value.&lt;/p&gt;\n\n&lt;p&gt;Consider the following code:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;class.php&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyClass&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;doSomething&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n    &lt;/span&gt;{\n        &lt;span class=&quot;hljs-comment&quot;&gt;// do stuff here&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;index.php&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;do_stuff&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n&lt;/span&gt;{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;class.php&apos;&lt;/span&gt;;\n   &lt;span class=&quot;hljs-variable&quot;&gt;$obj&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyClass&lt;/span&gt;;\n   &lt;span class=&quot;hljs-variable&quot;&gt;$obj&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;doSomething&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;do_stuff&lt;/span&gt;();\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;do_stuff&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The second call to &lt;code&gt;do_stuff()&lt;/code&gt; will produce the error above. By changing &lt;code&gt;require&lt;/code&gt; to &lt;code&gt;require_once&lt;/code&gt;, we can be certain that the file that contains the definition of &lt;code&gt;MyClass&lt;/code&gt; will only be loaded once, and the error will be avoided.&lt;/p&gt;\n    ","\n&lt;h3&gt;Parse error: syntax error, unexpected T_VARIABLE&lt;/h3&gt;\n\n&lt;p&gt;Possible scenario&lt;/p&gt;\n\n&lt;p&gt;I can&apos;t seem to find where my code has gone wrong. Here is my full error:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Parse error: syntax error, unexpected T_VARIABLE on line x&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;What I am trying &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT * FROM dealer WHERE id=&quot;&apos;&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$id&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Answer&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Parse error:&lt;/strong&gt; A problem with the syntax of your program, such as leaving a semicolon off of the end of a statement or, like the case above, missing the &lt;code&gt;.&lt;/code&gt; operator. The interpreter stops running your program when it encounters a parse error.&lt;/p&gt;\n\n&lt;p&gt;In simple words this is a syntax error, meaning that there is something in your code stopping it from being parsed correctly and therefore running.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;What you should do&lt;/strong&gt; is check carefully at the lines around where the error is for any simple mistakes.&lt;/p&gt;\n\n&lt;p&gt;That error message means that in line x of the file, the PHP interpreter was expecting to see an open parenthesis but instead, it encountered something called &lt;code&gt;T_VARIABLE&lt;/code&gt;. That &lt;code&gt;T_VARIABLE&lt;/code&gt; thing is called a &lt;code&gt;token&lt;/code&gt;. It&apos;s the PHP interpreter&apos;s way of expressing different fundamental parts of programs. When the interpreter reads in a program, it translates what you&apos;ve written into a list of tokens. Wherever you put a variable in your program, there is a&lt;code&gt;T_VARIABLE&lt;/code&gt; token in the interpreter&apos;s list.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://php.net/tokens&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Good read: List of Parser Tokens&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So make sure you enable at least &lt;code&gt;E_PARSE&lt;/code&gt; in your &lt;code&gt;php.ini&lt;/code&gt;. Parse errors should not exist in production scripts.&lt;/p&gt;\n\n&lt;p&gt;I always recommended to add the following statement, while coding:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://php.net/manual/en/function.error-reporting.php&quot; rel=&quot;noreferrer&quot;&gt;PHP error reporting&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;Also, a good idea to use an IDE which will let you know parse errors while typing. You can use:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;a href=&quot;http://netbeans.org/downloads/&quot; rel=&quot;noreferrer&quot;&gt;NetBeans&lt;/a&gt; (a fine piece of beauty, free software) (the best in my opinion)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.jetbrains.com/phpstorm/&quot; rel=&quot;noreferrer&quot;&gt;PhpStorm&lt;/a&gt; (uncle Gordon love this: P, paid plan, contains proprietary and free software)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/downloads/packages/eclipse-php-developers/heliosr&quot; rel=&quot;noreferrer&quot;&gt;Eclipse&lt;/a&gt; (beauty and the beast, free software)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Reference: &lt;a href=&quot;https://stackoverflow.com/q/18050071/367456&quot;&gt;PHP Parse/Syntax Errors; and How to solve them?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Notice: Uninitialized string offset: &lt;code&gt;*&lt;/code&gt;&lt;/h3&gt;\n\n&lt;p&gt;As the name indicates, such type of error occurs, when you are most likely trying to iterate over or find a value from an array with a non-existing key. &lt;/p&gt;\n\n&lt;p&gt;Consider you, are trying to show every letter from &lt;code&gt;$string&lt;/code&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;ABCD&apos;&lt;/span&gt;; \n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$len&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt;); &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt; &amp;lt;= &lt;span class=&quot;hljs-variable&quot;&gt;$len&lt;/span&gt;; &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;++){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;$string&lt;/span&gt;[&lt;span class=&quot;hljs-subst&quot;&gt;$i&lt;/span&gt;] \\n&quot;&lt;/span&gt;; \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The above example will generate (&lt;a href=&quot;https://eval.in/38350&quot; rel=&quot;noreferrer&quot;&gt;online demo&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;A\nB\nC\nD\nNotice: Uninitialized &lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt; offset: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; in XXX on line X\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And, as soon as the script finishes echoing &lt;code&gt;D&lt;/code&gt; you&apos;ll get the error, because inside the &lt;code&gt;for()&lt;/code&gt; loop, you have told PHP to show you the from first to fifth string character from &lt;code&gt;&apos;ABCD&apos;&lt;/code&gt; Which, exists, but since the loop starts to count from &lt;code&gt;0&lt;/code&gt; and echoes &lt;code&gt;D&lt;/code&gt; by the time it reaches to &lt;code&gt;4&lt;/code&gt;, it will throw an offset error. &lt;/p&gt;\n\n&lt;p&gt;Similar Errors:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/14086365/367456&quot;&gt;Illegal string offset &apos;option 1&apos;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Notice: Trying to get property of non-object error&lt;/h3&gt;\n\n&lt;p&gt;Happens when you try to access a property of an object while there is no object.&lt;/p&gt;\n\n&lt;p&gt;A typical example for a non-object notice would be&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$users&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;json_decode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[{&quot;name&quot;: &quot;hakre&quot;}]&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$users&lt;/span&gt;-&amp;gt;name; &lt;span class=&quot;hljs-comment&quot;&gt;# Notice: Trying to get property of non-object&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, &lt;code&gt;$users&lt;/code&gt; is an array (so not an object) and it does not have any properties.&lt;/p&gt;\n\n&lt;p&gt;This is similar to accessing a non-existing index or key of an array (see &lt;a href=&quot;https://stackoverflow.com/a/12770836/367456&quot;&gt;Notice: Undefined Index&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;This example is much simplified. Most often such a notice signals an unchecked return value, e.g. when a library returns &lt;code&gt;NULL&lt;/code&gt; if an object does not exists or just an unexpected non-object value (e.g. in an Xpath result, JSON structures with unexpected format, XML with unexpected format etc.) but the code does not check for such a condition.&lt;/p&gt;\n\n&lt;p&gt;As those non-objects are often processed further on, often a fatal-error happens next on calling an object method on a non-object (see: &lt;a href=&quot;https://stackoverflow.com/a/12769983/367456&quot;&gt;Fatal error: Call to a member function ... on a non-object&lt;/a&gt;) halting the script.&lt;/p&gt;\n\n&lt;p&gt;It can be easily prevented by checking for error conditions and/or that a variable matches an expectation. Here such a notice with a &lt;strong&gt;DOMXPath&lt;/strong&gt; example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;  = &lt;span class=&quot;hljs-variable&quot;&gt;$xpath&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;query&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;//*[@id=&apos;detail-sections&apos;]/div[1]&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$divText&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;item&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)-&amp;gt;nodeValue; &lt;span class=&quot;hljs-comment&quot;&gt;# Notice: Trying to get property of non-object&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem is accessing the &lt;code&gt;nodeValue&lt;/code&gt; property (field) of the first item while it has not been checked if it exists or not in the &lt;code&gt;$result&lt;/code&gt; collection. Instead it pays to make the code more explicit by assigning variables to the objects the code operates on:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;  = &lt;span class=&quot;hljs-variable&quot;&gt;$xpath&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;query&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;//*[@id=&apos;detail-sections&apos;]/div[1]&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$div&lt;/span&gt;     = &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;item&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$divText&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;-/-&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;is_object&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$div&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$divText&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$div&lt;/span&gt;-&amp;gt;nodeValue;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$divText&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Related errors:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/12770836/367456&quot;&gt;Notice: Undefined Index&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/12769983/367456&quot;&gt;Fatal error: Call to a member function ... on a non-object&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Warning: open_basedir restriction in effect&lt;/h3&gt;\n\n&lt;p&gt;This warning can appear with various functions that are related to file and directory access. It warns about a configuration issue.&lt;/p&gt;\n\n&lt;p&gt;When it appears, it means that access has been forbidden to some files.&lt;/p&gt;\n\n&lt;p&gt;The warning itself does not break anything, but most often a script does not properly work if file-access is prevented. &lt;/p&gt;\n\n&lt;p&gt;The fix is normally to change the &lt;a href=&quot;http://www.php.net/manual/en/configuration.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;PHP configuration&lt;/a&gt;, the related setting is called &lt;a href=&quot;http://www.php.net/manual/en/ini.core.php#ini.open-basedir&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;open_basedir&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Sometimes the wrong file or directory names are used, the fix is then to use the right ones.&lt;/p&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1846882/open-basedir-restriction-in-effect-file-is-not-within-the-allowed-paths&quot;&gt;open_basedir restriction in effect. File(/) is not within the allowed path(s):&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/search?q=%5Bphp%5D+Warning%3A+open_basedir+restriction+in+effect&quot;&gt;All PHP &quot;Warning: open_basedir restriction in effect&quot; Querstions on Stackoverflow&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Parse error: syntax error, unexpected &apos;[&apos;&lt;/h3&gt;\n\n&lt;p&gt;This error comes in two variatians:&lt;/p&gt;\n\n&lt;h3&gt;Variation 1&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt; = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This array initializer syntax was only introduced in PHP 5.4; it will raise a parser error on versions before that. If possible, upgrade your installation or use the old syntax:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See also &lt;a href=&quot;http://docs.php.net/manual/en/language.types.array.php#example-83&quot;&gt;this example&lt;/a&gt; from the manual.&lt;/p&gt;\n\n&lt;h3&gt;Variation 2&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$suffix&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo,bar&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Array dereferencing function results was also introduced in PHP 5.4. If it&apos;s not possible to upgrade you need to use a (temporary) variable:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$parts&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo,bar&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$suffix&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$parts&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See also &lt;a href=&quot;http://docs.php.net/manual/en/language.types.array.php#example-89&quot;&gt;this example&lt;/a&gt; from the manual.&lt;/p&gt;\n    ","\n&lt;h3&gt;Warning: &lt;em&gt;[function]&lt;/em&gt; expects parameter 1 to be resource, boolean given&lt;/h3&gt;\n&lt;p&gt;(A more general variation of &lt;a href=&quot;https://stackoverflow.com/questions/12769982/reference-what-does-this-error-mean-in-php/12770072#12770072&quot;&gt;Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given&lt;/a&gt;)&lt;/p&gt;\n&lt;p&gt;Resources are a &lt;a href=&quot;http://php.net/manual/en/language.types.resource.php&quot; rel=&quot;noreferrer&quot;&gt;type&lt;/a&gt; in PHP (like strings, integers or objects). A resource is an opaque blob with no inherently meaningful value of its own. A resource is specific to and defined by a certain set of PHP functions or extension. For instance, the Mysql extension &lt;a href=&quot;http://php.net/manual/en/mysql.resources.php&quot; rel=&quot;noreferrer&quot;&gt;defines two resource types&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;There are two resource types used in the MySQL module. The first one is the link identifier for a database connection, the second a resource which holds the result of a query.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The cURL extension defines another &lt;a href=&quot;http://php.net/manual/en/curl.resources.php&quot; rel=&quot;noreferrer&quot;&gt;two resource types&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;... a cURL handle and a cURL multi handle.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;When &lt;code&gt;var_dump&lt;/code&gt;ed, the values look like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$resource&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;curl_init&lt;/span&gt;();\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;var_dump&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$resource&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;resource&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) of &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;type&lt;/span&gt; (curl)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;That&apos;s all most resources are, a numeric identifier (&lt;code&gt;(1)&lt;/code&gt;) of a certain type (&lt;code&gt;(curl)&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;You carry these resources around and pass them to different functions for which such a resource means something. Typically these functions allocate certain data in the background and a resource is just a reference which they use to keep track of this data internally.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;The &quot;&lt;strong&gt;... expects parameter 1 to be resource, boolean given&lt;/strong&gt;&quot; error is typically the result of an unchecked operation that was supposed to create a resource, but returned &lt;code&gt;false&lt;/code&gt; instead. For instance, the &lt;a href=&quot;http://php.net/manual/en/function.fopen.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;fopen&lt;/code&gt; function&lt;/a&gt; has this description:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Return Values&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Returns a file pointer resource on success, or &lt;code&gt;FALSE&lt;/code&gt; on error.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So in this code, &lt;code&gt;$fp&lt;/code&gt; will either be a &lt;code&gt;resource(x) of type (stream)&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$fp&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fopen&lt;/span&gt;(...);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you do not check whether the &lt;code&gt;fopen&lt;/code&gt; operation succeed or failed and hence whether &lt;code&gt;$fp&lt;/code&gt; is a valid resource or &lt;code&gt;false&lt;/code&gt; and pass &lt;code&gt;$fp&lt;/code&gt; to another function which expects a resource, you may get the above error:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$fp&lt;/span&gt;   = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fopen&lt;/span&gt;(...);\n&lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fread&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$fp&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt;);\n\nWarning: &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fread&lt;/span&gt;() expects parameter &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; to be resource, &lt;span class=&quot;hljs-keyword&quot;&gt;boolean&lt;/span&gt; given\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You always need to error check the return value of functions which are trying to allocate a resource &lt;em&gt;&lt;strong&gt;and may fail&lt;/strong&gt;&lt;/em&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$fp&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fopen&lt;/span&gt;(...);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-variable&quot;&gt;$fp&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;trigger_error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Failed to allocate resource&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;exit&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fread&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$fp&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Related Errors:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12769982/reference-what-does-this-error-mean-in-php/12770072#12770072&quot;&gt;Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Warning: Illegal string offset &apos;XXX&apos;&lt;/h3&gt;\n\n&lt;p&gt;This happens when you try to access an array element with the square bracket syntax, but you&apos;re doing this on a string, and not on an array, so the operation clearly &lt;em&gt;doesn&apos;t make sense&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;a_key&quot;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you think the variable should be an array, see where it comes from and fix the problem there.&lt;/p&gt;\n    ","\n&lt;h3&gt;Code doesn&apos;t run/what looks like parts of my PHP code are output&lt;/h3&gt;\n\n&lt;p&gt;If you see no result from your PHP code whatsoever and/or you are seeing parts of your literal PHP source code output in the webpage, you can be pretty sure that your PHP isn&apos;t actually getting executed. If you use View Source in your browser, you&apos;re probably seeing the whole PHP source code file as is. Since PHP code is embedded in &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; tags, the browser will try to interpret those as HTML tags and the result may look somewhat confused.&lt;/p&gt;\n\n&lt;p&gt;To actually run your PHP scripts, you need:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;a web server which executes your script&lt;/li&gt;\n&lt;li&gt;to set the file extension to .php, otherwise the web server won&apos;t interpret it as such*&lt;/li&gt;\n&lt;li&gt;to access your .php file via the web server&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;sub&gt;* Unless you reconfigure it, everything can be configured.&lt;/sub&gt;&lt;/p&gt;\n\n&lt;p&gt;This last one is particularly important. Just double clicking the file will likely open it in your browser using an address such as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;file:&lt;span class=&quot;hljs-comment&quot;&gt;//C:/path/to/my/file.php&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is completely bypassing any web server you may have running and the file is not getting interpreted. You need to visit the URL of the file on your web server, likely something like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;http:&lt;span class=&quot;hljs-comment&quot;&gt;//localhost/my/file.php&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You may also want to check whether you&apos;re using short open tags &lt;code&gt;&amp;lt;?&lt;/code&gt; instead of &lt;code&gt;&amp;lt;?php&lt;/code&gt; and your PHP configuration has turned short open tags off.&lt;/p&gt;\n\n&lt;p&gt;Also see &lt;a href=&quot;https://stackoverflow.com/questions/5121495/php-code-is-not-being-executed-i-can-see-it-on-source-code-of-page&quot;&gt;PHP code is not being executed, instead code shows on the page&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h3&gt;Notice: Array to string conversion&lt;/h3&gt;\n\n&lt;p&gt;This simply happens if you try to treat an array as a string:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;// Notice: Array to string conversion&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Something, &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;// Notice: Array to string conversion&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;An array cannot simply be &lt;code&gt;echo&lt;/code&gt;&apos;d or concatenated with a string, because the result is not well defined. PHP will use the string &quot;Array&quot; in place of the array, and trigger the notice to point out that that&apos;s probably not what was intended and that you should be checking your code here. You probably want something like this instead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];  &lt;span class=&quot;hljs-comment&quot;&gt;// displays foo&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Something &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;, &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//displays Something, foo, bar&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or loop the array:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;array &lt;span class=&quot;hljs-subst&quot;&gt;$key&lt;/span&gt; = &lt;span class=&quot;hljs-subst&quot;&gt;$value&lt;/span&gt;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// displays first: array 0 = foo&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// displays next:  array 1 = bar&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If this notice appears somewhere you don&apos;t expect, it means a variable which you thought is a string is actually an array. That means you have a bug in your code which makes this variable an array instead of the string you expect.&lt;/p&gt;\n    ","\n&lt;h3&gt;Warning: mysql_connect(): Access denied for user &apos;name&apos;@&apos;host&apos;&lt;/h3&gt;\n\n&lt;p&gt;This warning shows up when you connect to a MySQL/MariaDB server with invalid or missing credentials (username/password). So this is typically &lt;em&gt;not&lt;/em&gt; a code problem, but a server configuration issue.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;See the manual page on &lt;a href=&quot;http://php.net/mysql_connect&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;mysql_connect(&quot;localhost&quot;, &quot;user&quot;, &quot;pw&quot;)&lt;/code&gt;&lt;/a&gt; for examples.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Check that you actually used a &lt;code&gt;$username&lt;/code&gt; and &lt;code&gt;$password&lt;/code&gt;.  &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It&apos;s uncommon that you gain access using no password - which is what happened when the Warning: said &lt;code&gt;(using password: NO)&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only the local test server usually allows to connect with username &lt;code&gt;root&lt;/code&gt;, no password, and the &lt;code&gt;test&lt;/code&gt; database name.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;You can test if they&apos;re &lt;strong&gt;really correct&lt;/strong&gt; using the command line client:&lt;br&gt;\n&lt;code&gt;mysql --user=&quot;username&quot; --password=&quot;password&quot; testdb&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Username and password are &lt;em&gt;case-sensitive&lt;/em&gt; and whitespace is &lt;em&gt;not&lt;/em&gt; ignored. If your password contains meta characters like &lt;code&gt;$&lt;/code&gt;, escape them, or put the password in &lt;a href=&quot;https://stackoverflow.com/questions/3446216/what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php&quot;&gt;single quotes&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Most shared hosting providers predeclare mysql accounts in relation to the unix user account (sometimes just prefixes or extra numeric suffixes). See the docs for a pattern or documentation, and CPanel or whatever interface for setting a password.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;See the MySQL manual on &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.1/en/adding-users.html&quot; rel=&quot;noreferrer&quot;&gt;Adding user accounts&lt;/a&gt; using the command line. When connected as &lt;em&gt;admin user&lt;/em&gt; you can issue a query like:&lt;br&gt;\n &lt;code&gt;CREATE USER &apos;username&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;newpassword&apos;;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Or use &lt;a href=&quot;https://www.adminer.org/&quot; rel=&quot;noreferrer&quot;&gt;Adminer&lt;/a&gt; or &lt;a href=&quot;http://downloads.mysql.com/archives/workbench/&quot; rel=&quot;noreferrer&quot;&gt;WorkBench&lt;/a&gt; or any other graphical tool to create, check or correct account details.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If you can&apos;t fix your credentials, then asking the internet to &quot;please help&quot; will have no effect. Only you and your hosting provider have permissions and sufficient access to diagnose and fix things.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Verify that you &lt;strong&gt;could reach&lt;/strong&gt; the database server, using the host name given by your provider:&lt;br&gt;\n &lt;code&gt;ping dbserver.hoster.example.net&lt;/code&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Check this from a SSH console directly on your webserver. Testing from your local development client to your shared hosting server is rarely meaningful.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Often you just want the server name to be &lt;code&gt;&quot;localhost&quot;&lt;/code&gt;, which normally utilizes a local named socket when available. Othertimes you can try &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; as fallback.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Should your MySQL/MariaDB server listen on a different port, then use &lt;code&gt;&quot;servername:3306&quot;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If that fails, then there&apos;s a perhaps a firewall issue. (Off-topic, not a programming question. No remote guess-helping possible.)&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;When using &lt;strong&gt;constants&lt;/strong&gt; like e.g. &lt;code&gt;DB_USER&lt;/code&gt; or &lt;code&gt;DB_PASSWORD&lt;/code&gt;, check that they&apos;re actually &lt;a href=&quot;http://php.net/define&quot; rel=&quot;noreferrer&quot;&gt;defined&lt;/a&gt;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;If you get a &lt;code&gt;&quot;Warning: Access defined for &apos;DB_USER&apos;@&apos;host&apos;&quot;&lt;/code&gt; and a &lt;code&gt;&quot;Notice: use of undefined constant &apos;DB_PASS&apos;&quot;&lt;/code&gt;, then that&apos;s your problem.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Verify that your e.g. &lt;code&gt;xy/db-config.php&lt;/code&gt; was actually included and whatelse.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Check for correctly set &lt;strong&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/grant.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;GRANT&lt;/code&gt;&lt;/a&gt; permissions&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;It&apos;s not sufficient to have a &lt;code&gt;username&lt;/code&gt;+&lt;code&gt;password&lt;/code&gt; pair.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Each MySQL/MariaDB account can have an attached set of permissions.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Those can restrict which databases you are allowed to connect to, from which client/server the connection may originate from, and which queries are permitted.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The &quot;Access denied&quot; warning thus may as well show up for &lt;a href=&quot;http://php.net/mysql_query&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;mysql_query&lt;/code&gt;&lt;/a&gt; calls, if you don&apos;t have permissions to &lt;code&gt;SELECT&lt;/code&gt; from a specific table, or &lt;code&gt;INSERT&lt;/code&gt;/&lt;code&gt;UPDATE&lt;/code&gt;, and more commonly &lt;code&gt;DELETE&lt;/code&gt; anything.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;You can &lt;a href=&quot;https://stackoverflow.com/questions/5016505/mysql-grant-all-privileges-on-database&quot;&gt;adapt account permissions&lt;/a&gt; when connected per command line client using the &lt;em&gt;admin account&lt;/em&gt; with a query like:&lt;br&gt;\n &lt;code&gt;GRANT ALL ON yourdb.* TO &apos;username&apos;@&apos;localhost&apos;;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If the warning shows up first with &lt;code&gt;Warning: mysql_query(): Access denied for user &apos;&apos;@&apos;localhost&apos;&lt;/code&gt; then you may have a &lt;a href=&quot;http://php.net/manual/en/mysql.configuration.php&quot; rel=&quot;noreferrer&quot;&gt;php.ini-preconfigured account/password pair&lt;/a&gt;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Check that &lt;code&gt;mysql.default_user=&lt;/code&gt; and &lt;code&gt;mysql.default_password=&lt;/code&gt; have meaningful values.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Oftentimes this is a provider-configuration. So contact their support for mismatches.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Find the documentation of your shared hosting provider:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;e.g. &lt;a href=&quot;http://support.hostgator.com/articles/specialized-help/technical/sql-errors&quot; rel=&quot;noreferrer&quot;&gt;HostGator&lt;/a&gt;, &lt;a href=&quot;https://www.godaddy.com/help/connecting-to-mysql-using-php-216&quot; rel=&quot;noreferrer&quot;&gt;GoDaddy&lt;/a&gt;, &lt;a href=&quot;https://hilfe-center.1und1.de/hosting/skript--und-programmiersprachen-c10082634/php-c10082686/problemloesung-c10085144/haeufige-mysql-fehlermeldungen-in-php-skripten-oder--programmen-a10791915.html&quot; rel=&quot;noreferrer&quot;&gt;1and1&lt;/a&gt;, &lt;a href=&quot;https://www.digitalocean.com/community/questions/access-denied-for-installing-mysql&quot; rel=&quot;noreferrer&quot;&gt;DigitalOcean&lt;/a&gt;, &lt;a href=&quot;https://my.bluehost.com/cgi/help/2213&quot; rel=&quot;noreferrer&quot;&gt;BlueHost&lt;/a&gt;, &lt;a href=&quot;http://wiki.dreamhost.com/MySQL&quot; rel=&quot;noreferrer&quot;&gt;DreamHost&lt;/a&gt;, &lt;a href=&quot;https://mediatemple.net/community/products/dv/204642990/why-can&apos;t-i-connect-to-my-mysql-database-from-php&quot; rel=&quot;noreferrer&quot;&gt;MediaTemple&lt;/a&gt;, &lt;a href=&quot;http://www.inmotionhosting.com/support/community-support/databases/1045-access-denied-for-user-mysql-error&quot; rel=&quot;noreferrer&quot;&gt;ixWebhosting&lt;/a&gt;, &lt;a href=&quot;http://www.lunarforums.com/php-and-mysql-support/trouble-connecting-to-my-sql-db/&quot; rel=&quot;noreferrer&quot;&gt;lunarhosting&lt;/a&gt;, or just google yours´.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Else consult your webhosting provider through their support channels.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Note that you may also have &lt;em&gt;depleted the available connection pool&lt;/em&gt;. You&apos;ll get access denied warnings for too many concurrent connections. (You have to investigate the setup. That&apos;s an off-topic server configuration issue, not a programming question.)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Your libmysql client &lt;em&gt;version may not be compatible&lt;/em&gt; with the database server. Normally MySQL and MariaDB servers can be reached with PHPs compiled in driver. If you have a custom setup, or an outdated PHP version, and a much newer database server, or significantly outdated one - then the version mismatch may prevent connections. (No, you have to investigate yourself. Nobody can guess your setup).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;More references:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/584106/mysql-access-denied-for-rootname-of-the-computer&quot;&gt;Serverfault: mysql access denied for &apos;root&apos;@&apos;name of the computer&apos;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/18782452/warning-mysql-connect-access-denied&quot;&gt;Warning: mysql_connect(): Access denied&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/15531530/warning-mysql-select-db-access-denied-for-user-localhost-using-password&quot;&gt;Warning: mysql_select_db() Access denied for user &apos;&apos;@&apos;localhost&apos; (using password: NO)&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11482970/1045-access-denied-for-user-rootlocalhost-using-password-no&quot;&gt;Access denied for user &apos;root&apos;@&apos;localhost&apos; with PHPMyAdmin&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Btw, you probably don&apos;t want to use &lt;a href=&quot;https://stackoverflow.com/questions/12859942/why-shouldnt-i-use-mysql-functions-in-php&quot;&gt;&lt;code&gt;mysql_*&lt;/code&gt; functions anymore&lt;/a&gt;. Newcomers often migrate to &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot; rel=&quot;noreferrer&quot;&gt;mysqli&lt;/a&gt;, which however is just as tedious. Instead read up on &lt;a href=&quot;http://wiki.hashphp.org/PDO_Tutorial_for_MySQL_Developers&quot; rel=&quot;noreferrer&quot;&gt;PDO and prepared statements&lt;/a&gt;.&lt;br&gt;\n   &lt;code&gt;$db = new PDO(&quot;mysql:host=localhost;dbname=testdb&quot;, &quot;username&quot;, &quot;password&quot;);&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;h3&gt;Deprecated: Array and string offset access syntax with curly braces is deprecated&lt;/h3&gt;\n&lt;p&gt;String offsets and array elements could be accessed by curly braces &lt;code&gt;{}&lt;/code&gt; prior to PHP 7.4.0:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;abc&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt;{&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;};  &lt;span class=&quot;hljs-comment&quot;&gt;// a&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt; = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;{&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;};  &lt;span class=&quot;hljs-comment&quot;&gt;// 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This has been deprecated since PHP 7.4.0 and generates a warning:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Deprecated: Array and string offset access syntax with curly braces is deprecated&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;You must use square brackets &lt;code&gt;[]&lt;/code&gt; to access string offsets and array elements:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;abc&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];  &lt;span class=&quot;hljs-comment&quot;&gt;// a&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt; = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];  &lt;span class=&quot;hljs-comment&quot;&gt;// 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;a href=&quot;https://wiki.php.net/rfc/deprecate_curly_braces_array_access&quot; rel=&quot;noreferrer&quot;&gt;RFC for this change&lt;/a&gt; links to a PHP &lt;a href=&quot;https://gist.github.com/theodorejb/763b83a43522b0fc1755a537663b1863&quot; rel=&quot;noreferrer&quot;&gt;script&lt;/a&gt; which attempts to fix this mechanically.&lt;/p&gt;\n    ","\n&lt;h3&gt;Warning: Division by zero&lt;/h3&gt;\n\n&lt;p&gt;The warning message &apos;Division by zero&apos; is one of the most commonly asked questions among new PHP developers.  This error will not cause an exception, therefore, some developers will occasionally suppress the warning by adding the error suppression operator @ before the expression.  For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$value&lt;/span&gt; = @(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But, like with any warning, the best approach would be to track down the cause of the warning and resolve it.  The cause of the warning is going to come from any instance where you attempt to divide by 0, a variable equal to 0, or a variable which has not been assigned (because NULL == 0) because the result will be &apos;undefined&apos;.&lt;/p&gt;\n\n&lt;p&gt;To correct this warning, you should rewrite your expression to check that the value is not 0, if it is, do something else.  If the value is zero you either should not divide, or you should change the value to 1 and then divide so the division results in the equivalent of having divided only by the additional variable.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable&quot;&gt;$var1&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ) { &lt;span class=&quot;hljs-comment&quot;&gt;// check if var1 equals zero&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$var1&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// var1 equaled zero so change var1 to equal one instead&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$var3&lt;/span&gt; = (&lt;span class=&quot;hljs-variable&quot;&gt;$var2&lt;/span&gt; / &lt;span class=&quot;hljs-variable&quot;&gt;$var1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// divide var1/var2 ie. 1/1&lt;/span&gt;\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$var3&lt;/span&gt; = (&lt;span class=&quot;hljs-variable&quot;&gt;$var2&lt;/span&gt; / &lt;span class=&quot;hljs-variable&quot;&gt;$var1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// if var1 does not equal zero, divide&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Related Questions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5539002/warning-division-by-zero&quot;&gt;warning: division by zero&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11592602/warning-division-by-zero-working-on-php-and-mysql&quot;&gt;Warning: Division By Zero Working on PHP and MySQL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6667601/division-by-zero-error-in-wordpress-theme&quot;&gt;Division by zero error in WordPress Theme&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3731710/how-to-suppress-the-division-by-zero-error-and-set-the-result-to-null-for-the&quot;&gt;How to suppress the Division by zero error&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3071067/how-to-catch-a-division-by-zero&quot;&gt;How to catch a division by zero?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h3&gt;Strict Standards: Non-static method &lt;em&gt;[&amp;lt;class&amp;gt;::&amp;lt;method&amp;gt;]&lt;/em&gt; should not be called statically&lt;/h3&gt;\n\n&lt;p&gt;Occurs when you try to call a non-static method on a class as it was static, and you also have the &lt;code&gt;E_STRICT&lt;/code&gt; flag in your &lt;code&gt;error_reporting()&lt;/code&gt; settings.&lt;/p&gt;\n\n&lt;p&gt;Example :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HTML&lt;/span&gt; &lt;/span&gt;{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;br&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n      &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;;\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;HTML::br()&lt;/code&gt; or &lt;code&gt;$html::br()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;You can actually avoid this error by not adding &lt;code&gt;E_STRICT&lt;/code&gt; to &lt;code&gt;error_reporting()&lt;/code&gt;, eg&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL &amp;amp; ~E_STRICT);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;since as for PHP 5.4.0 and above, &lt;code&gt;E_STRICT&lt;/code&gt; is included in &lt;code&gt;E_ALL&lt;/code&gt; [&lt;a href=&quot;http://dk1.php.net/manual/en/migrating5.errorrep.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;ref&lt;/a&gt;]. But that is not adviceable. The solution is to define your intended static function as actual &lt;code&gt;static&lt;/code&gt; :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;br&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or call the function conventionally :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$html&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;HTML&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable&quot;&gt;$html&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;br&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Related questions :  &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10768576/how-can-i-solve-non-static-method-xxxxxx-should-not-be-called-statically-in&quot;&gt;How can I solve &quot;Non-static method xxx:xxx() should not be called statically in PHP 5.4?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    "]},"randomTags":[{"name":"clone","slug":"clone"},{"name":"threetenabp","slug":"threetenabp"},{"name":"sqliteopenhelper","slug":"sqliteopenhelper"},{"name":"git-commit","slug":"git-commit"},{"name":"preflight","slug":"preflight"},{"name":"c99","slug":"c99"},{"name":"dhtml","slug":"dhtml"},{"name":"datetimeoffset","slug":"datetimeoffset"},{"name":"python-internals","slug":"python-internals"},{"name":"authentication","slug":"authentication"},{"name":"excel-formula","slug":"excel-formula"},{"name":"thread-safety","slug":"thread-safety"},{"name":"include-path","slug":"include-path"},{"name":"setter","slug":"setter"},{"name":"json.net","slug":"json.net"},{"name":"haversine","slug":"haversine"},{"name":"unobtrusive-javascript","slug":"unobtrusive-javascript"},{"name":"format","slug":"format"},{"name":"slice","slug":"slice"},{"name":"getelementsbyclassname","slug":"getelementsbyclassname"}]},"__N_SSG":true}