{"pageProps":{"data":{"count":1,"rows":[{"id":281,"title":"How do I detect collision in pygame?","slug":"how-do-i-detect-collision-in-pygame-1657387496338","postType":"QUESTION","createdAt":"2022-07-09T17:24:56.000Z","updatedAt":"2022-07-09T17:24:56.000Z","tags":[{"id":1728,"name":"pygame-surface","slug":"pygame-surface","createdAt":"2022-07-09T17:24:56.000Z","updatedAt":"2022-07-09T17:24:56.000Z","Questions_Tags":{"questionId":281,"tagId":1728}}]}]},"slug":"pygame-surface","page":1,"answers":{"281":["\n&lt;p&gt;In PyGame, collision detection is done using &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect&lt;/code&gt;&lt;/a&gt; objects. The &lt;code&gt;Rect&lt;/code&gt; object offers various methods for detecting collisions between objects. Even the collision between a rectangular and circular object such as a paddle and a ball can be detected by a collision between two rectangular objects, the paddle and the bounding rectangle of the ball.&lt;/p&gt;\n&lt;p&gt;Some examples:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.collidepoint&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect.collidepoint&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Test if a point is inside a rectangle&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;kbd&gt;&lt;a href=&quot;https://repl.it/@Rabbid76/PyGame-collidepoint#main.py&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/5jD0C.png&quot; alt=&quot;&quot;&gt; repl.it/@Rabbid76/PyGame-collidepoint&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/wCi2z.gif&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/wCi2z.gif&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pygame\n\npygame.init()\nwindow = pygame.display.set_mode((&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;))\nrect = pygame.Rect(*window.get_rect().center, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).inflate(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)\n\nrun = &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; run:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; event &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; pygame.event.get():\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; event.&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt; == pygame.QUIT:\n            run = &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n\n    point = pygame.mouse.get_pos()\n    collide = rect.collidepoint(point)\n    color = (&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; collide &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;)\n\n    window.fill(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    pygame.draw.rect(window, color, rect)\n    pygame.display.flip()\n\npygame.quit()\nexit()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.colliderect&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect.colliderect&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Test if two rectangles overlap&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;See also &lt;a href=&quot;https://stackoverflow.com/questions/63561028/how-to-detect-collision-between-two-images-in-pygame/63561152#63561152&quot;&gt;How to detect collisions between two rectangular objects or images in pygame&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;kbd&gt;&lt;a href=&quot;https://repl.it/@Rabbid76/PyGame-colliderect#main.py&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/5jD0C.png&quot; alt=&quot;&quot;&gt; repl.it/@Rabbid76/PyGame-colliderect&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/r2y9r.gif&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/r2y9r.gif&quot; alt=&quot;colliderect&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pygame\n\npygame.init()\nwindow = pygame.display.set_mode((&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;))\nrect1 = pygame.Rect(*window.get_rect().center, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).inflate(&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;)\nrect2 = pygame.Rect(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;)\n\nrun = &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; run:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; event &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; pygame.event.get():\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; event.&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt; == pygame.QUIT:\n            run = &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n\n    rect2.center = pygame.mouse.get_pos()\n    collide = rect1.colliderect(rect2)\n    color = (&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; collide &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;)\n\n    window.fill(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    pygame.draw.rect(window, color, rect1)\n    pygame.draw.rect(window, (&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;), rect2, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    pygame.display.flip()\n\npygame.quit()\nexit()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Furthermore, &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.collidelist&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect.collidelist&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.collidelistall&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect.collidelistall&lt;/code&gt;&lt;/a&gt; can be used for the collision test between a rectangle and a list of rectangles. &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.collidedict&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect.collidedict&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.collidedictall&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect.collidedictall&lt;/code&gt;&lt;/a&gt; can be used for the collision test between a rectangle and a dictionary of rectangles.&lt;/p&gt;\n&lt;p&gt;The collision of &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.Sprite&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.sprite.Sprite&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.Group&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.sprite.Group&lt;/code&gt;&lt;/a&gt; objects, can be detected by &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.spritecollide&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.sprite.spritecollide()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.groupcollide&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.sprite.groupcollide()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.spritecollideany&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.sprite.spritecollideany()&lt;/code&gt;&lt;/a&gt;. When using these methods, the collision detection algorithm can be specified by the &lt;code&gt;collided&lt;/code&gt; argument:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The collided argument is a callback function used to calculate if two sprites are colliding.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Possible &lt;code&gt;collided&lt;/code&gt; callables are &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_rect&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;collide_rect&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_rect_ratio&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;collide_rect_ratio&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_circle&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;collide_circle&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_circle_ratio&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;collide_circle_ratio&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_mask&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;collide_mask&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Some examples:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.spritecollide&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.sprite.spritecollide()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;kbd&gt;&lt;a href=&quot;https://repl.it/@Rabbid76/PyGame-spritecollide#main.py&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/5jD0C.png&quot; alt=&quot;&quot;&gt; repl.it/@Rabbid76/PyGame-spritecollide&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/3DdjL.gif&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/3DdjL.gif&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pygame\n\npygame.init()\nwindow = pygame.display.set_mode((&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;))\n\nsprite1 = pygame.sprite.Sprite()\nsprite1.image = pygame.Surface((&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;))\nsprite1.image.fill((&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\nsprite1.rect = pygame.Rect(*window.get_rect().center, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).inflate(&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;)\nsprite2 = pygame.sprite.Sprite()\nsprite2.image = pygame.Surface((&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;))\nsprite2.image.fill((&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\nsprite2.rect = pygame.Rect(*window.get_rect().center, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).inflate(&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;)\n\nall_group = pygame.sprite.Group([sprite2, sprite1])\ntest_group = pygame.sprite.Group(sprite2)\n\nrun = &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; run:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; event &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; pygame.event.get():\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; event.&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt; == pygame.QUIT:\n            run = &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n\n    sprite1.rect.center = pygame.mouse.get_pos()\n    collide = pygame.sprite.spritecollide(sprite1, test_group, &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;)\n\n    window.fill(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    all_group.draw(window)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; s &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; collide:\n        pygame.draw.rect(window, (&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;), s.rect, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    pygame.display.flip()\n\npygame.quit()\nexit()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;For a collision with masks, see &lt;a href=&quot;https://stackoverflow.com/questions/56043600/how-can-i-made-a-collision-mask/56045037#56045037&quot;&gt;How can I make a collision mask?&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/questions/60077813/pygame-mask-collision/60078039#60078039&quot;&gt;Pygame mask collision&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;See also &lt;a href=&quot;https://github.com/Rabbid76/PyGameExamplesAndAnswers/blob/master/documentation/pygame/pygame_collision_and_intesection.md&quot; rel=&quot;nofollow noreferrer&quot;&gt;Collision and Intersection&lt;/a&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.spritecollide&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.sprite.spritecollide()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;https://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_circle&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;collide_circle&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;kbd&gt;&lt;a href=&quot;https://repl.it/@Rabbid76/PyGame-spritecollidecollidecircle#main.py&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/5jD0C.png&quot; alt=&quot;&quot;&gt; repl.it/@Rabbid76/PyGame-spritecollidecollidecircle&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/SS1Pb.gif&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/SS1Pb.gif&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pygame\n\npygame.init()\nwindow = pygame.display.set_mode((&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;))\n\nsprite1 = pygame.sprite.Sprite()\nsprite1.image = pygame.Surface((&lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;), pygame.SRCALPHA)\npygame.draw.circle(sprite1.image, (&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;)\nsprite1.rect = pygame.Rect(*window.get_rect().center, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).inflate(&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;)\nsprite2 = pygame.sprite.Sprite()\nsprite2.image = pygame.Surface((&lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;89&lt;/span&gt;), pygame.SRCALPHA)\npygame.draw.circle(sprite2.image, (&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;)\nsprite2.rect = pygame.Rect(*window.get_rect().center, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).inflate(&lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;)\n\nall_group = pygame.sprite.Group([sprite2, sprite1])\ntest_group = pygame.sprite.Group(sprite2)\n\nrun = &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; run:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; event &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; pygame.event.get():\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; event.&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt; == pygame.QUIT:\n            run = &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n\n    sprite1.rect.center = pygame.mouse.get_pos()\n    collide = pygame.sprite.spritecollide(sprite1, test_group, &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;, pygame.sprite.collide_circle)\n\n    window.fill(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    all_group.draw(window)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; s &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; collide:\n        pygame.draw.circle(window, (&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;), s.rect.center, s.rect.width // &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n    pygame.display.flip()\n\npygame.quit()\nexit()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;hr&gt;\n&lt;p&gt;What does this all mean for your code?&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.pygame.org/docs/ref/surface.html#pygame.Surface.get_rect&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Surface.get_rect.get_rect()&lt;/code&gt;&lt;/a&gt; returns a rectangle with the size of the &lt;em&gt;Surface&lt;/em&gt; object, that always starts at (0, 0) since a &lt;em&gt;Surface&lt;/em&gt; object has no position. The position of the rectangle can be specified by a keyword argument. For example, the centre of the rectangle can be specified with the keyword argument &lt;code&gt;center&lt;/code&gt;. These keyword arguments are applied to the attributes of the &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect&lt;/code&gt;&lt;/a&gt; before it is returned (see &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect&lt;/code&gt;&lt;/a&gt; for a list of the keyword arguments).&lt;br&gt;\nSee *&lt;a href=&quot;https://stackoverflow.com/questions/57730329/pygame-collide-rect-function-always-returning-true/57730378#57730378&quot;&gt;Why is my collision test always returning &apos;true&apos; and why is the position of the rectangle of the image always wrong (0, 0)?&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;You do not need the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; attributes of &lt;code&gt;Sprite&lt;/code&gt; and &lt;code&gt;Bullet&lt;/code&gt; at all. Use the position of the &lt;code&gt;rect&lt;/code&gt; attribute instead:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#Define the sprite class&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Sprite&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, x, y, name&lt;/span&gt;):\n        self.image = pygame.image.load(name)\n        self.rect = self.image.get_rect(topleft = (x, y))\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;render&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        window.blit(self.image, self.rect)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# Define the bullet class to create bullets          &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bullet&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, x, y&lt;/span&gt;):\n        self.bullet = pygame.image.load(&lt;span class=&quot;hljs-string&quot;&gt;&quot;user_bullet.BMP&quot;&lt;/span&gt;)\n        self.rect = self.bullet.get_rect(topleft = (x + &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, y))\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;render&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        window.blit(self.bullet, self.rect)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Use &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.colliderect&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pygame.Rect.colliderect()&lt;/code&gt;&lt;/a&gt; to detect collisions between instances of &lt;code&gt;Sprite&lt;/code&gt; and&lt;code&gt; Bullet&lt;/code&gt;.&lt;br&gt;\nSee &lt;a href=&quot;https://stackoverflow.com/questions/63561028/how-to-detect-collision-between-two-images-in-pygame/63561152#63561152&quot;&gt;How to detect collisions between two rectangular objects or images in pygame&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;my_sprite = Sprite(sx, sy, name)\nmy_bullet = Bullet(by, by)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;:\n    &lt;span class=&quot;hljs-comment&quot;&gt;# [...]&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_sprite.rect.colliderect(my_bullet.rect):\n        printe(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hit&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;From what I understand of pygame you just need to check if the two rectangles overlap using the &lt;a href=&quot;https://www.pygame.org/docs/ref/rect.html#pygame.Rect.colliderect&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;colliderect&lt;/code&gt;&lt;/a&gt; method. One way to do it is to have a method in your &lt;code&gt;Bullet&lt;/code&gt; class that checks for collisions:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;is_collided_with&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, sprite&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; self.rect.colliderect(sprite.rect)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can call it like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;sprite = Sprite(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;my_sprite&apos;&lt;/span&gt;)\nbullet = Bullet(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; bullet.is_collided_with(sprite):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;collision!&apos;&lt;/span&gt;)\n    bullet.kill()\n    sprite.kill()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There is a very simple method for what you are trying to do using built in methods.&lt;/p&gt;\n\n&lt;p&gt;here is an example.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pygame\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; sys\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Sprite&lt;/span&gt;(pygame.sprite.Sprite):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, pos&lt;/span&gt;):\n        pygame.sprite.Sprite.__init__(self)\n        self.image = pygame.Surface([&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;])\n        self.image.fill((&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\n        self.rect = self.image.get_rect()\n\n        self.rect.center = pos\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;():\n    pygame.init()\n    clock = pygame.time.Clock()\n    fps = &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;\n    bg = [&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;]\n    size =[&lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;]\n\n\n    screen = pygame.display.set_mode(size)\n\n    player = Sprite([&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;])\n    player.move = [pygame.K_LEFT, pygame.K_RIGHT, pygame.K_UP, pygame.K_DOWN]\n    player.vx = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n    player.vy = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n\n\n    wall = Sprite([&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;])\n\n    wall_group = pygame.sprite.Group()\n    wall_group.add(wall)\n\n    player_group = pygame.sprite.Group()\n    player_group.add(player)\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;# I added loop for a better exit from the game&lt;/span&gt;\n    loop = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; loop:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; event &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; pygame.event.get():\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; event.&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt; == pygame.QUIT:\n                loop = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n        key = pygame.key.get_pressed()\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;):\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; key[player.move[i]]:\n                player.rect.x += player.vx * [-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][i]\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;):\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; key[player.move[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;][i]]:\n                player.rect.y += player.vy * [-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][i]\n\n        screen.fill(bg)\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;# first parameter takes a single sprite&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# second parameter takes sprite groups&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# third parameter is a do kill command if true&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# all group objects colliding with the first parameter object will be&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# destroyed. The first parameter could be bullets and the second one&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# targets although the bullet is not destroyed but can be done with&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# simple trick bellow&lt;/span&gt;\n        hit = pygame.sprite.spritecollide(player, wall_group, &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; hit:\n            &lt;span class=&quot;hljs-comment&quot;&gt;# if collision is detected call a function in your case destroy&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;# bullet&lt;/span&gt;\n            player.image.fill((&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;))\n\n        player_group.draw(screen)\n        wall_group.draw(screen)\n\n        pygame.display.update()\n        clock.tick(fps)\n\n    pygame.quit()\n    &lt;span class=&quot;hljs-comment&quot;&gt;# sys.exit&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;hljs-string&quot;&gt;&apos;__main__&apos;&lt;/span&gt;:\n    main()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Make a group for the bullets, and then add the bullets to the group.&lt;/p&gt;\n\n&lt;p&gt;What I would do is this:\nIn the class for the player:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;collideWithBullet&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; pygame.sprite.spritecollideany(self, &lt;span class=&quot;hljs-string&quot;&gt;&apos;groupName&apos;&lt;/span&gt;):\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;CollideWithBullet!!&quot;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And in the main loop somewhere:  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; self.player.collideWithBullet():\n         &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Game Over&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hopefully that works for you!!!&lt;/p&gt;\n    ","\n&lt;p&gt;Inside the Sprite class, try adding a &lt;code&gt;self.mask&lt;/code&gt; attribute with&lt;br&gt;\n&lt;code&gt;self.mask = pygame.mask.from_surface(self.image)&lt;/code&gt;&lt;br&gt;\nand a &lt;code&gt;collide_mask&lt;/code&gt; function inside of the Sprite class with this code:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;collide_mask&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, mask&lt;/span&gt;):\n        collided = &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n        mask_outline = mask.outline()\n        self.mask_outline = self.mask.outline()\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; point &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(mask_outline)):\n            mask_outline[point] = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mask_outline[point])\n            mask_outline[point][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] += bullet.x\n            mask_outline[point][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] += bullet.y\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; point &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(self.mask_outline)):\n            self.mask_outline[point] = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mask_outline[point])\n            self.mask_outline[point][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] += self.x\n            self.mask_outline[point][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] += self.y\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; point &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; mask_outline:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; self_mask_point &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; self.mask_outline:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; point = self_mask_point:\n                    collided = &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; collided\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"randomTags":[{"name":"buffer-overflow","slug":"buffer-overflow"},{"name":"parameter-passing","slug":"parameter-passing"},{"name":"indexoutofrangeexception","slug":"indexoutofrangeexception"},{"name":"excel","slug":"excel"},{"name":"pseudo-element","slug":"pseudo-element"},{"name":"datetime-format","slug":"datetime-format"},{"name":"chained-assignment","slug":"chained-assignment"},{"name":"language-lawyer","slug":"language-lawyer"},{"name":"unresolved-external","slug":"unresolved-external"},{"name":"loops","slug":"loops"},{"name":"listview","slug":"listview"},{"name":"siblings","slug":"siblings"},{"name":"turbo-c++","slug":"turbo-c++"},{"name":"platform-detection","slug":"platform-detection"},{"name":"class","slug":"class"},{"name":"time-complexity","slug":"time-complexity"},{"name":"guid","slug":"guid"},{"name":"asynchronous","slug":"asynchronous"},{"name":"command-line","slug":"command-line"},{"name":"w3c","slug":"w3c"}]},"__N_SSG":true}