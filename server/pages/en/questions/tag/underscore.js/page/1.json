{"pageProps":{"data":{"count":1,"rows":[{"id":309,"title":"Most efficient method to groupby on an array of objects","slug":"most-efficient-method-to-groupby-on-an-array-of-objects-1657387580538","postType":"QUESTION","createdAt":"2022-07-09T17:26:20.000Z","updatedAt":"2022-07-09T17:26:20.000Z","tags":[{"id":1834,"name":"underscore.js","slug":"underscore.js","createdAt":"2022-07-09T17:26:20.000Z","updatedAt":"2022-07-09T17:26:20.000Z","Questions_Tags":{"questionId":309,"tagId":1834}}]}]},"slug":"underscore.js","page":"1","answers":{"309":["\n&lt;p&gt;If you want to avoid external libraries, you can concisely implement a vanilla version of &lt;code&gt;groupBy()&lt;/code&gt; like so:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; groupBy = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;xs, key&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; xs.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;rv, x&lt;/span&gt;) {\n    (rv[x[key]] = rv[x[key]] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(x);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; rv;\n  }, {});\n};\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;([&lt;span class=&quot;hljs-string&quot;&gt;&apos;one&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;two&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;three&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;length&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; {3: [&quot;one&quot;, &quot;two&quot;], 5: [&quot;three&quot;]}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Using ES6 Map object:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@description&lt;/span&gt;\n * Takes an Array&amp;lt;V&amp;gt;, and a grouping function,\n * and returns a Map of the array grouped by the grouping function.\n *\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; list An array of type V.\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; keyGetter A Function that takes the the Array type V as an input, and returns a value of type K.\n *                  K is generally intended to be a property key of V.\n *\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@returns&lt;/span&gt; Map of the array grouped by the grouping function.\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//export function groupBy&amp;lt;K, V&amp;gt;(list: Array&amp;lt;V&amp;gt;, keyGetter: (input: V) =&amp;gt; K): Map&amp;lt;K, Array&amp;lt;V&amp;gt;&amp;gt; {&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//    const map = new Map&amp;lt;K, Array&amp;lt;V&amp;gt;&amp;gt;();&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;list, keyGetter&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; map = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;();\n    list.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n         &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; key = &lt;span class=&quot;hljs-title function_&quot;&gt;keyGetter&lt;/span&gt;(item);\n         &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; collection = map.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(key);\n         &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!collection) {\n             map.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(key, [item]);\n         } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n             collection.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(item);\n         }\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; map;\n}\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// example usage&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; pets = [\n    {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Dog&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Spot&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Cat&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Tiger&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Dog&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Rover&quot;&lt;/span&gt;}, \n    {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Cat&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Leo&quot;&lt;/span&gt;}\n];\n    \n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; grouped = &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(pets, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;pet&lt;/span&gt; =&amp;gt;&lt;/span&gt; pet.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt;);\n    \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(grouped.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Dog&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [{type:&quot;Dog&quot;, name:&quot;Spot&quot;}, {type:&quot;Dog&quot;, name:&quot;Rover&quot;}]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(grouped.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Cat&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [{type:&quot;Cat&quot;, name:&quot;Tiger&quot;}, {type:&quot;Cat&quot;, name:&quot;Leo&quot;}]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; odd = &lt;span class=&quot;hljs-title class_&quot;&gt;Symbol&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; even = &lt;span class=&quot;hljs-title class_&quot;&gt;Symbol&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; numbers = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; oddEven = &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(numbers, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; (x % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ? odd : even));\n    \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(oddEven.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(odd)); &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [1,3,5,7]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(oddEven.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(even)); &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [2,4,6]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;About Map:\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;with ES6:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;items, key&lt;/span&gt;) =&amp;gt; items.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n  &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;result, item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({\n    ...result,\n    [item[key]]: [\n      ...(result[item[key]] || []),\n      item,\n    ],\n  }), \n  {},\n);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can build an ES6 &lt;code&gt;Map&lt;/code&gt; from &lt;code&gt;array.reduce()&lt;/code&gt;. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; groupedMap = initialArray.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n    &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;entryMap, e&lt;/span&gt;) =&amp;gt;&lt;/span&gt; entryMap.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;, [...entryMap.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;)||[], e]),\n    &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;()\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This has a few advantages over the other solutions: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It doesn&apos;t require any libraries (unlike e.g. &lt;code&gt;_.groupBy()&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;You get a JavaScript &lt;code&gt;Map&lt;/code&gt; rather than an object (e.g. as returned by &lt;code&gt;_.groupBy()&lt;/code&gt;). This has &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Objects_and_maps_compared&quot; rel=&quot;noreferrer&quot;&gt;lots of benefits&lt;/a&gt;, including:\n\n&lt;ul&gt;\n&lt;li&gt;it remembers the order in which items were first added,&lt;/li&gt;\n&lt;li&gt;keys can be any type rather than just strings. &lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;A &lt;code&gt;Map&lt;/code&gt; is a more useful result that an array of arrays. But if you do want an array of arrays, you can then call &lt;code&gt;Array.from(groupedMap.entries())&lt;/code&gt; (for an array of &lt;code&gt;[key, group array]&lt;/code&gt; pairs) or &lt;code&gt;Array.from(groupedMap.values())&lt;/code&gt; (for a simple array of arrays).&lt;/li&gt;\n&lt;li&gt;It&apos;s quite flexible; often, whatever you were planning to do next with this map can be done directly as part of the reduction. &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;As an example of the last point, imagine I have an array of objects that I want to do a (shallow) merge on by id, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; objsToMerge = [{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Steve&quot;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Alice&quot;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;}];\n&lt;span class=&quot;hljs-comment&quot;&gt;// The following variable should be created automatically&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; mergedArray = [{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Steve&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Alice&quot;&lt;/span&gt;}]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To do this, I would usually start by grouping by id, and then merging each of the resulting arrays. Instead, you can do the merge directly in the &lt;code&gt;reduce()&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; mergedArray = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(\n    objsToMerge.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n        &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;entryMap, e&lt;/span&gt;) =&amp;gt;&lt;/span&gt; entryMap.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;, {...entryMap.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;)||{}, ...e}),\n        &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;()\n    ).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()\n);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I would check &lt;a href=&quot;https://lodash.com/docs#groupBy&quot; rel=&quot;noreferrer&quot;&gt;lodash groupBy&lt;/a&gt; it seems to do exactly what you are looking for. It is also quite lightweight and really simple.&lt;/p&gt;\n\n&lt;p&gt;Fiddle example: &lt;a href=&quot;https://jsfiddle.net/r7szvt5k/&quot; rel=&quot;noreferrer&quot;&gt;https://jsfiddle.net/r7szvt5k/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Provided that your array name is &lt;code&gt;arr&lt;/code&gt; the groupBy with lodash is just:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; groupBy &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;lodash/groupBy&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-comment&quot;&gt;// if you still use require:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// const groupBy = require(&apos;lodash/groupBy&apos;);&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; a = &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(arr, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; n.&lt;span class=&quot;hljs-property&quot;&gt;Phase&lt;/span&gt;;\n});\n&lt;span class=&quot;hljs-comment&quot;&gt;// a is your array grouped by Phase attribute&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Although the &lt;a href=&quot;http://linqjs.codeplex.com/&quot; rel=&quot;noreferrer&quot;&gt;linq&lt;/a&gt; answer is interesting, it&apos;s also quite heavy-weight.  My approach is somewhat different:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataGrouper&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; has = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, target&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;any&lt;/span&gt;(obj, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;isEqual&lt;/span&gt;(value, target);\n        });\n    };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; keys = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data, names&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(data, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, item&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = _.&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(item, names);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(memo, key)) {\n                memo.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(key);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; memo;\n        }, []);\n    };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; group = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data, names&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; stems = &lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(data, names);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(stems, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;stem&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n                &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: stem,\n                &lt;span class=&quot;hljs-attr&quot;&gt;vals&lt;/span&gt;:_.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(_.&lt;span class=&quot;hljs-title function_&quot;&gt;where&lt;/span&gt;(data, stem), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;omit&lt;/span&gt;(item, names);\n                })\n            };\n        });\n    };\n\n    group.&lt;span class=&quot;hljs-property&quot;&gt;register&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name, converter&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; group[name] = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data, names&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;group&lt;/span&gt;(data, names), converter);\n        };\n    };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; group;\n}());\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;DataGrouper&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;register&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sum&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;({}, item.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;, {&lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(item.&lt;span class=&quot;hljs-property&quot;&gt;vals&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, node&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; memo + &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(node.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;);\n    }, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)});\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can see it &lt;a href=&quot;http://jsbin.com/usepej/1/edit&quot; rel=&quot;noreferrer&quot;&gt;in action on JSBin&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I didn&apos;t see anything in Underscore that does what &lt;code&gt;has&lt;/code&gt; does, although I might be missing it.  It&apos;s much the same as &lt;code&gt;_.contains&lt;/code&gt;, but uses &lt;code&gt;_.isEqual&lt;/code&gt; rather than &lt;code&gt;===&lt;/code&gt; for comparisons.  Other than that, the rest of this is problem-specific, although with an attempt to be generic.&lt;/p&gt;\n\n&lt;p&gt;Now &lt;code&gt;DataGrouper.sum(data, [&quot;Phase&quot;])&lt;/code&gt; returns&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;130&lt;/span&gt;}\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And &lt;code&gt;DataGrouper.sum(data, [&quot;Phase&quot;, &quot;Step&quot;])&lt;/code&gt; returns&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;}\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;But &lt;code&gt;sum&lt;/code&gt; is only one potential function here.  You can register others as you like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;DataGrouper&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;register&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;max&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;({}, item.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;, {&lt;span class=&quot;hljs-title class_&quot;&gt;Max&lt;/span&gt;: _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(item.&lt;span class=&quot;hljs-property&quot;&gt;vals&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, node&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;max&lt;/span&gt;(memo, &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(node.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;));\n    }, &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;NEGATIVE_INFINITY&lt;/span&gt;)});\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and now &lt;code&gt;DataGrouper.max(data, [&quot;Phase&quot;, &quot;Step&quot;])&lt;/code&gt; will return&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Max&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Max&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Max&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Max&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;}\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or if you registered this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;DataGrouper&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;register&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;tasks&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;({}, item.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;, {&lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: _.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(item.&lt;span class=&quot;hljs-property&quot;&gt;vals&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;Task&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; (&quot;&lt;/span&gt; + item.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;)&quot;&lt;/span&gt;;\n    }).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;, &quot;&lt;/span&gt;)});\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then calling &lt;code&gt;DataGrouper.tasks(data, [&quot;Phase&quot;, &quot;Step&quot;])&lt;/code&gt; will get you&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1 (5), Task 2 (10)&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1 (15), Task 2 (20)&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1 (25), Task 2 (30)&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1 (35), Task 2 (40)&quot;&lt;/span&gt;}\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;DataGrouper&lt;/code&gt; itself is a function.  You can call it with your data and a list of the properties you want to group by.  It returns an array whose elements are object with two properties: &lt;code&gt;key&lt;/code&gt; is the collection of grouped properties, &lt;code&gt;vals&lt;/code&gt; is an array of objects containing the remaining properties not in the key.  For example, &lt;code&gt;DataGrouper(data, [&quot;Phase&quot;, &quot;Step&quot;])&lt;/code&gt; will yield:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;: {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;},\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;vals&quot;&lt;/span&gt;: [\n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;},\n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt;}\n        ]\n    },\n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;: {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;},\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;vals&quot;&lt;/span&gt;: [\n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt;}, \n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt;}\n        ]\n    },\n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;: {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;},\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;vals&quot;&lt;/span&gt;: [\n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt;},\n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt;}\n        ]\n    },\n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;: {&lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;},\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;vals&quot;&lt;/span&gt;: [\n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt;}, \n            {&lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt;}\n        ]\n    }\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;DataGrouper.register&lt;/code&gt; accepts a function and creates a new function which accepts the initial data and the properties to group by.  This new function then takes the output format as above and runs your function against each of them in turn, returning a new array.  The function that&apos;s generated is stored as a property of &lt;code&gt;DataGrouper&lt;/code&gt; according to a name you supply and also returned if you just want a local reference.&lt;/p&gt;\n\n&lt;p&gt;Well that&apos;s a lot of explanation.  The code is reasonably straightforward, I hope!&lt;/p&gt;\n    ","\n&lt;h3&gt;GroupBy &lt;em&gt;one-liner&lt;/em&gt;, an &lt;strong&gt;ES2021&lt;/strong&gt; solution&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;x,f&lt;/span&gt;)=&amp;gt;x.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a,b&lt;/span&gt;)=&amp;gt;&lt;/span&gt;((a[&lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(b)]||=[]).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(b),a),{});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4&gt;TypeScript&lt;/h4&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; groupBy = &amp;lt;T&amp;gt;&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array: T[], predicate: (v: T) =&amp;gt; string&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n  array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    (acc[&lt;span class=&quot;hljs-title function_&quot;&gt;predicate&lt;/span&gt;(value)] ||= []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; acc;\n  }, {} &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; { [&lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: string]: T[] });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;EXAMPLES&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;x, f&lt;/span&gt;) =&amp;gt; x.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ((a[&lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(b)] ||= []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(b), a), {});\n&lt;span class=&quot;hljs-comment&quot;&gt;// f -&amp;gt; should must return string/number because it will be use as key in object&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// for demo&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;], &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; (v % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&quot;odd&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;even&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-comment&quot;&gt;// { odd: [1, 3, 5, 7, 9], even: [2, 4, 6, 8] };&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; colors = [\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Apricot&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Brown&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Burgundy&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Cerulean&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Peach&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Pear&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;Red&quot;&lt;/span&gt;,\n];\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(colors, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; v[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// group by colors name first letter&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// {&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   A: [&quot;Apricot&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   B: [&quot;Brown&quot;, &quot;Burgundy&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   C: [&quot;Cerulean&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   P: [&quot;Peach&quot;, &quot;Pear&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   R: [&quot;Red&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// };&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(colors, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; v.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// group by length of color names&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// {&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   3: [&quot;Red&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   4: [&quot;Pear&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   5: [&quot;Brown&quot;, &quot;Peach&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   7: [&quot;Apricot&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   8: [&quot;Burgundy&quot;, &quot;Cerulean&quot;],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// }&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data = [\n  { &lt;span class=&quot;hljs-attr&quot;&gt;comment&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;forItem&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;inModule&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; },\n  { &lt;span class=&quot;hljs-attr&quot;&gt;comment&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;pqr&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;forItem&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;inModule&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; },\n  { &lt;span class=&quot;hljs-attr&quot;&gt;comment&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;klm&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;forItem&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;inModule&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; },\n  { &lt;span class=&quot;hljs-attr&quot;&gt;comment&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;xyz&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;forItem&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;inModule&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; },\n];\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(data, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; v.&lt;span class=&quot;hljs-property&quot;&gt;inModule&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// group by module&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// {&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   1: [&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;abc&quot;, forItem: 1, inModule: 1 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;pqr&quot;, forItem: 1, inModule: 1 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   ],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   2: [&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;klm&quot;, forItem: 1, inModule: 2 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;xyz&quot;, forItem: 1, inModule: 2 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   ],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// }&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(data, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;forItem&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt; + x.&lt;span class=&quot;hljs-property&quot;&gt;inModule&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// group by module with item&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// {&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   &quot;1-1&quot;: [&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;abc&quot;, forItem: 1, inModule: 1 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;pqr&quot;, forItem: 1, inModule: 1 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   ],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   &quot;1-2&quot;: [&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;klm&quot;, forItem: 1, inModule: 2 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { comment: &quot;xyz&quot;, forItem: 1, inModule: 2 },&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   ],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// }&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;groupByToMap&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupByToMap&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;x, f&lt;/span&gt;) =&amp;gt;\n  x.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b, i, x&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; k = &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(b, i, x);\n    a.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(k)?.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(b) ?? a.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(k, [b]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n  }, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4&gt;TypeScript&lt;/h4&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; groupByToMap = &amp;lt;T, Q&amp;gt;&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array: T[], predicate: (value: T, index: number, array: T[]) =&amp;gt; Q&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n  array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;map, value, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; key = &lt;span class=&quot;hljs-title function_&quot;&gt;predicate&lt;/span&gt;(value, index, array);\n    map.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(key)?.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value) ?? map.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(key, [value]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; map;\n  }, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;&amp;lt;Q, T[]&amp;gt;());\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is probably more easily done with &lt;a href=&quot;https://github.com/neuecc/linq.js&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;linq.js&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;, which is intended to be a true implementation of LINQ in JavaScript (&lt;a href=&quot;http://jsfiddle.net/n8vEt/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;DEMO&lt;/strong&gt;&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; linq = &lt;span class=&quot;hljs-title class_&quot;&gt;Enumerable&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;From&lt;/span&gt;(data);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result =\n    linq.&lt;span class=&quot;hljs-title class_&quot;&gt;GroupBy&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;Phase&lt;/span&gt;; })\n        .&lt;span class=&quot;hljs-title class_&quot;&gt;Select&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){\n          &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: x.&lt;span class=&quot;hljs-title class_&quot;&gt;Key&lt;/span&gt;(),\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: x.&lt;span class=&quot;hljs-title class_&quot;&gt;Sum&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;y&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; y.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;|&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; })\n          };\n        }).&lt;span class=&quot;hljs-title class_&quot;&gt;ToArray&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;130&lt;/span&gt; }\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or, more simply using the string-based selectors (&lt;a href=&quot;http://jsfiddle.net/n8vEt/1/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;DEMO&lt;/strong&gt;&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;linq.&lt;span class=&quot;hljs-title class_&quot;&gt;GroupBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.Phase&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;k,e =&amp;gt; { Phase:k, Value:e.Sum(&apos;$.Value|0&apos;) }&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title class_&quot;&gt;ToArray&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;MDN has &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Grouping_objects_by_a_property&quot; rel=&quot;noreferrer&quot;&gt;this example&lt;/a&gt; in their &lt;code&gt;Array.reduce()&lt;/code&gt; documentation. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Grouping objects by a property&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Grouping_objects_by_a_property#Grouping_objects_by_a_property&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; people = [\n  { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Alice&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt; },\n  { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Max&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; },\n  { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Jane&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; }\n];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;objectArray, property&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objectArray.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;acc, obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = obj[property];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(obj);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; acc;\n  }, {});\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; groupedPeople = &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(people, &lt;span class=&quot;hljs-string&quot;&gt;&apos;age&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// groupedPeople is:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// { &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   20: [&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { name: &apos;Max&apos;, age: 20 }, &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//     { name: &apos;Jane&apos;, age: 20 }&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   ], &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   21: [{ name: &apos;Alice&apos;, age: 21 }] &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// }&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;([{&lt;span class=&quot;hljs-attr&quot;&gt;tipo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt; },{&lt;span class=&quot;hljs-attr&quot;&gt;tipo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;tipo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;}], &lt;span class=&quot;hljs-string&quot;&gt;&apos;tipo&apos;&lt;/span&gt;);\n&amp;gt;&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; {&lt;span class=&quot;hljs-attr&quot;&gt;A&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;B&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From: &lt;a href=&quot;http://underscorejs.org/#groupBy&quot;&gt;http://underscorejs.org/#groupBy&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;groupBy&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;keyFunction&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; groups = {};\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = &lt;span class=&quot;hljs-title function_&quot;&gt;keyFunction&lt;/span&gt;(el);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (key &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; groups == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n            groups[key] = [];\n        }\n        groups[key].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(el);\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(groups).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n            &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: key,\n            &lt;span class=&quot;hljs-attr&quot;&gt;values&lt;/span&gt;: groups[key]\n        };\n    });\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;it&apos;s a bit late but maybe someone like this one.&lt;/p&gt;\n&lt;p&gt;ES6:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; users = [{\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jim&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sam&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Eddie&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;green&quot;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Robert&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;green&quot;&lt;/span&gt;\n  },\n];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;arr, key&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; initialValue = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, cval&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; myAttribute = cval[key];\n    acc[myAttribute] = [...(acc[myAttribute] || []), cval]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; acc;\n  }, initialValue);\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(users, &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;group by:&quot;&lt;/span&gt;, res);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can do it with &lt;a href=&quot;http://github.com/agershun/alasql&quot;&gt;Alasql&lt;/a&gt; JavaScript library:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = [ { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; },\n             { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; }];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; res = &lt;span class=&quot;hljs-title function_&quot;&gt;alasql&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT Phase, Step, SUM(CAST([Value] AS INT)) AS [Value] \\\n                  FROM ? GROUP BY Phase, Step&apos;&lt;/span&gt;,[data]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Try this example &lt;a href=&quot;http://jsfiddle.net/agershun/ztc32a8h/1/&quot;&gt;at jsFiddle&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;BTW:&lt;/em&gt;&lt;/strong&gt; On large arrays (100000 records and more) Alasql faster tham Linq. See test &lt;a href=&quot;http://jsperf.com/alasql-vs-linq-on-groupby&quot;&gt;at jsPref&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;Comments:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Here I put Value in square brackets, because VALUE is a keyword in SQL&lt;/li&gt;\n&lt;li&gt;I have to use CAST() function to convert string Values to number type.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;A newer approach with an object for grouping and two more function to create a key and to get an object with wanted items of grouping and another key for the adding value.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;array, groups, valueKey&lt;/span&gt;) =&amp;gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt;\n            &lt;span class=&quot;hljs-title function_&quot;&gt;getKey&lt;/span&gt; = o =&amp;gt; groups.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;k&lt;/span&gt; =&amp;gt;&lt;/span&gt; o[k]).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt;),\n            getObject = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fromEntries&lt;/span&gt;([...groups.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;k&lt;/span&gt; =&amp;gt;&lt;/span&gt; [k, o[k]]), [valueKey, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]);\n\n        groups = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(groups);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;r, o&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n            (r[&lt;span class=&quot;hljs-title function_&quot;&gt;getKey&lt;/span&gt;(o)] ??= &lt;span class=&quot;hljs-title function_&quot;&gt;getObject&lt;/span&gt;(o))[valueKey] += +o[valueKey];\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r;\n        }, {}));\n    },\n    data = [{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt; }];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(data, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(data, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Step&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.as-console-wrapper&lt;/span&gt; { &lt;span class=&quot;hljs-attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;hljs-meta&quot;&gt;!important&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; }&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Old approach:&lt;/p&gt;\n&lt;p&gt;Although the question have some answers and the answers look a bit over complicated, I suggest to use vanilla Javascript for group-by with a nested (if necessary) &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, groups, valueKey&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; map = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;;\n    groups = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(groups);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;r, o&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n        groups.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m, k, i, { length }&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; child;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (m.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(o[k])) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; m.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(o[k]);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; === length) {\n                child = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;\n                    .&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(...groups.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;k&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ [k]: o[k] })), { [valueKey]: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; });\n                r.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(child);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                child = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;;\n            }\n            m.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(o[k], child);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; child;\n        }, map)[valueKey] += +o[valueKey];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r;\n    }, [])\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = [{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; }, { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt; }];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(data, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(data, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Step&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.as-console-wrapper&lt;/span&gt; { &lt;span class=&quot;hljs-attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;hljs-meta&quot;&gt;!important&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; }&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s a nasty, hard to read solution using ES6:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; (arr, key) =&amp;gt; \n  arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n    &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;r, v, _, __, k = v[key]&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ((r[k] || (r[k] = [])).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(v), r),\n    {}\n  );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For those asking how does this &lt;strong&gt;even&lt;/strong&gt; work, here&apos;s an explanation:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;In both &lt;code&gt;=&amp;gt;&lt;/code&gt; you have a free &lt;code&gt;return&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The &lt;code&gt;Array.prototype.reduce&lt;/code&gt; function takes up to 4 parameters. That&apos;s why a fifth parameter is being added so we can have a cheap variable declaration for the group (k) at the parameter declaration level by using a default value. (yes, this is sorcery)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If our current group doesn&apos;t exist on the previous iteration, we create a new empty array &lt;code&gt;((r[k] || (r[k] = []))&lt;/code&gt; This will evaluate to the leftmost expression, &lt;em&gt;in other words, an existing array or an empty array&lt;/em&gt;, this is why there&apos;s an immediate &lt;code&gt;push&lt;/code&gt; after that expression, because either way you will get an array.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;When there&apos;s a &lt;code&gt;return&lt;/code&gt;, the comma &lt;code&gt;,&lt;/code&gt; operator will discard the leftmost value, returning the tweaked previous group for this scenario.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;An easier to understand version that does the same is:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; (array, key) =&amp;gt; \n  array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;previous, currentItem&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; group = currentItem[key];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!previous[group]) previous[group] = [];\n    previous[group].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(currentItem);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; previous;\n  }, {});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Edit:&lt;/p&gt;\n&lt;p&gt;TS Version:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; groupBy = &amp;lt;T, K &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; keyof any&amp;gt;&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;list: T[], getKey: (item: T) =&amp;gt; K&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n  list.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;previous, currentItem&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; group = &lt;span class=&quot;hljs-title function_&quot;&gt;getKey&lt;/span&gt;(currentItem);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!previous[group]) previous[group] = [];\n    previous[group].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(currentItem);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; previous;\n  }, {} &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Record&lt;/span&gt;&amp;lt;K, T[]&amp;gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Checked answer -- just shallow grouping. It&apos;s pretty nice to understand reducing. Question also provide the problem of additional aggregate calculations.&lt;/p&gt;\n&lt;p&gt;Here is a REAL GROUP BY for Array of Objects by some field(s) with 1) calculated key name and 2) complete solution for cascading of grouping by providing the list of the desired keys\nand converting its unique values to root keys like SQL GROUP BY\ndoes.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; inputArray = [ \n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt; }\n];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; outObject = inputArray.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, e&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// GROUP BY estimated key (estKey), well, may be a just plain key&lt;/span&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// a -- Accumulator result object&lt;/span&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// e -- sequentally checked Element, the Element that is tested just at this itaration&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// new grouping name may be calculated, but must be based on real value of real field&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; estKey = (e[&lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;]); \n\n  (a[estKey] ? a[estKey] : (a[estKey] = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; || [])).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(e);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n}, {});\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(outObject);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Play with &lt;code&gt;estKey&lt;/code&gt; -- you may group by more then one field, add additional aggregations, calculations or other processing.&lt;/p&gt;\n&lt;p&gt;Also you can groups data recursively. For example initially group by &lt;code&gt;Phase&lt;/code&gt;, then by &lt;code&gt;Step&lt;/code&gt; field and so on. Additionally blow off\nthe fat rest data.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;true&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; inputArray = [\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt; }\n  ];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Small helper to get SHALLOW copy of obj WITHOUT prop\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;rmProp&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;obj, prop&lt;/span&gt;) =&amp;gt; ( (&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;{[prop]:_, ...rest}&lt;/span&gt;)=&amp;gt;&lt;/span&gt;rest)(obj) )\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Group Array by key. Root keys of a resulting array is value\n * of specified key.\n *\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt;      {&lt;span class=&quot;hljs-type&quot;&gt;Array&lt;/span&gt;}   src     The source array\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt;      {&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;}  key     The by key to group by\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt;     {&lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt;}          Object with grouped objects as values\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;grpBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;src, key&lt;/span&gt;) =&amp;gt; src.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, e&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (\n  (a[e[key]] = a[e[key]] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;rmProp&lt;/span&gt;(e, key)),  a\n), {});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Collapse array of object if it consists of only object with single value.\n * Replace it by the rest value.\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;blowObj&lt;/span&gt; = obj =&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(obj) &amp;amp;&amp;amp; obj.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;(obj[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ? &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;(obj[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;])[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] : obj;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Recursive grouping with list of keys. `keyList` may be an array\n * of key names or comma separated list of key names whom UNIQUE values will\n * becomes the keys of the resulting object.\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; grpByReal = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;src, keyList&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [key, ...rest] = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(keyList) ? keyList : &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(keyList).&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\s*,\\s*/&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = key ? &lt;span class=&quot;hljs-title function_&quot;&gt;grpBy&lt;/span&gt;(src, key) : [...src];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (rest.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) {\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; res) {\n  res[k] = &lt;span class=&quot;hljs-title function_&quot;&gt;grpByReal&lt;/span&gt;(res[k], rest)\n}\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; res) {\n  res[k] = &lt;span class=&quot;hljs-title function_&quot;&gt;blowObj&lt;/span&gt;(res[k])\n}\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; res;\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;grpByReal&lt;/span&gt;(inputArray, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase, Step, Task&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; ) );&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This solution takes any arbitrary function (not a key) so it&apos;s more flexible than solutions above, and allows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;arrow functions&lt;/em&gt;&lt;/a&gt;, which are similar to &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb397687.aspx&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;lambda expressions&lt;/em&gt;&lt;/a&gt; used in &lt;strong&gt;LINQ&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;groupBy&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;funcProp&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;acc, val&lt;/span&gt;) {\n        (acc[&lt;span class=&quot;hljs-title function_&quot;&gt;funcProp&lt;/span&gt;(val)] = acc[&lt;span class=&quot;hljs-title function_&quot;&gt;funcProp&lt;/span&gt;(val)] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(val);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; acc;\n    }, {});\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;NOTE: whether you want to extend &lt;code&gt;Array&lt;/code&gt;&apos;s prototype is up to you.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example supported in most browsers:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;}].&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;c&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt;;})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Example using arrow functions (ES6):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;}].&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;c&lt;/span&gt;=&amp;gt;&lt;/span&gt;c.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Both examples above return:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;: [{&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;}],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;: [{&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;}]\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Without mutations:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;xs, key&lt;/span&gt;) =&amp;gt; xs.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, x&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;({}, acc, {\n  [x[key]]: (acc[x[key]] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(x)\n}), {})\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;([&lt;span class=&quot;hljs-string&quot;&gt;&apos;one&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;two&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;three&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;length&apos;&lt;/span&gt;));\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; {3: [&quot;one&quot;, &quot;two&quot;], 5: [&quot;three&quot;]}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;i&apos;d like to suggest my approach. First, separate grouping and aggregating. Lets declare prototypical &quot;group by&quot; function. It takes another function to produce &quot;hash&quot; string for each array element to group by. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;groupBy&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;hash&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _hash = hash ? hash : &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;};\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _map = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; put = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;map, key, value&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!map[&lt;span class=&quot;hljs-title function_&quot;&gt;_hash&lt;/span&gt;(key)]) {\n        map[&lt;span class=&quot;hljs-title function_&quot;&gt;_hash&lt;/span&gt;(key)] = {};\n        map[&lt;span class=&quot;hljs-title function_&quot;&gt;_hash&lt;/span&gt;(key)].&lt;span class=&quot;hljs-property&quot;&gt;group&lt;/span&gt; = [];\n        map[&lt;span class=&quot;hljs-title function_&quot;&gt;_hash&lt;/span&gt;(key)].&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt; = key;\n\n    }\n    map[&lt;span class=&quot;hljs-title function_&quot;&gt;_hash&lt;/span&gt;(key)].&lt;span class=&quot;hljs-property&quot;&gt;group&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value); \n  }\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(_map, obj, obj);\n  });\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(_map).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {&lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: _map[key].&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;group&lt;/span&gt;: _map[key].&lt;span class=&quot;hljs-property&quot;&gt;group&lt;/span&gt;};\n  });\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;when grouping is done you can aggregate data how you need, in your case&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;data.&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: o.&lt;span class=&quot;hljs-property&quot;&gt;Phase&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: o.&lt;span class=&quot;hljs-property&quot;&gt;Step&lt;/span&gt;});})\n    &lt;span class=&quot;hljs-comment&quot;&gt;/* aggreagating */&lt;/span&gt;\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;){ \n         &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sum = el.&lt;span class=&quot;hljs-property&quot;&gt;group&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n           &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;l,c&lt;/span&gt;){\n             &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; l + &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(c.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;);\n           },\n           &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n         );\n         el.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt; = sum; \n         &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; el.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;;\n    });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;in common it works. i have tested this code in chrome console. and feel free to improve and find mistakes ;)&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;groupByArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;xs, key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; xs.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;rv, x&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; v = key &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt; ? &lt;span class=&quot;hljs-title function_&quot;&gt;key&lt;/span&gt;(x) : x[key];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; el = rv.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;r&lt;/span&gt;) =&amp;gt;&lt;/span&gt; r &amp;amp;&amp;amp; r.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt; === v);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (el) {\n            el.&lt;span class=&quot;hljs-property&quot;&gt;values&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(x);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            rv.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({\n                &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: v,\n                &lt;span class=&quot;hljs-attr&quot;&gt;values&lt;/span&gt;: [x]\n            });\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; rv;\n    }, []);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This one outputs array.&lt;/p&gt;\n    ","\n&lt;p&gt;Imagine that you have something like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;[{id:1, cat:&apos;sedan&apos;},{id:2, cat:&apos;sport&apos;},{id:3, cat:&apos;sport&apos;},{id:4, cat:&apos;sedan&apos;}]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;By doing this:\n&lt;code&gt;const categories =  [...new Set(cars.map((car) =&amp;gt; car.cat))]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;You will get this:\n&lt;code&gt;[&apos;sedan&apos;,&apos;sport&apos;]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;\n 1. First, we are creating a new Set by passing an array. Because Set only allows unique values, all duplicates will be removed.&lt;/p&gt;\n\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;Now the duplicates are gone, were going to convert it back to an array by using the spread operator ...&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Set Doc:&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&lt;/a&gt;\nSpread OperatorDoc: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Based on previous answers&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;prop&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;xs&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n  xs.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;rv, x&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(rv, {[x[prop]]: [...(rv[x[prop]] || []), x]}), {});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and it&apos;s a little nicer to look at with object spread syntax, if your environment supports.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;prop&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;xs&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n  xs.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, x&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({\n    ...acc,\n    [ x[ prop ] ]: [...( acc[ x[ prop ] ] || []), x],\n  }), {});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here, our reducer takes the partially-formed return value (starting with an empty object), and returns an object composed of the spread out members of the previous return value, along with a new member whose key is calculated from the current iteree&apos;s value at &lt;code&gt;prop&lt;/code&gt; and whose value is a list of all values for that prop along with the current value.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;groupBy&lt;/code&gt; function that can group an array by a specific key or a given grouping function. Typed.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;groupBy = &amp;lt;T, K &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; keyof T&amp;gt;(&lt;span class=&quot;hljs-attr&quot;&gt;array&lt;/span&gt;: T[], &lt;span class=&quot;hljs-attr&quot;&gt;groupOn&lt;/span&gt;: K | (&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i: T&lt;/span&gt;) =&amp;gt;&lt;/span&gt; string)): &lt;span class=&quot;hljs-title class_&quot;&gt;Record&lt;/span&gt;&amp;lt;string, T[]&amp;gt; =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; groupFn = &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; groupOn === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt; ? groupOn : &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o: T&lt;/span&gt;) =&amp;gt;&lt;/span&gt; o[groupOn];\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fromEntries&lt;/span&gt;(\n    array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, obj&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; groupKey = &lt;span class=&quot;hljs-title function_&quot;&gt;groupFn&lt;/span&gt;(obj);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; acc.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(groupKey, [...(acc.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(groupKey) || []), obj]);\n    }, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;())\n  ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Record&lt;/span&gt;&amp;lt;string, T[]&amp;gt;;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I don&apos;t think that given answers are responding to the question, I think this following should answer to the first part :&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [ \n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; },\n{ &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt; }\n]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) =&amp;gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a[key].&lt;span class=&quot;hljs-title function_&quot;&gt;localeCompare&lt;/span&gt;(b[key])).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;total, currentValue&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newTotal = total;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (\n    total.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;amp;&amp;amp;\n    total[total.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][key] === currentValue[key]\n  )\n    newTotal[total.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = {\n      ...total[total.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],\n      ...currentValue,\n      &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(total[total.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;) + &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(currentValue.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;),\n    };\n  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; newTotal[total.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;] = currentValue;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; newTotal;\n}, []);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [{ Phase: &quot;Phase 1&quot;, Value: 50 },{ Phase: &quot;Phase 2&quot;, Value: 130 }]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Step&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [{ Step: &quot;Step 1&quot;, Value: 70 },{ Step: &quot;Step 2&quot;, Value: 110 }] &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Let&apos;s fully answer the original question while reusing code that was already written (i.e., Underscore). You can do much more with Underscore if you &lt;em&gt;combine&lt;/em&gt; its &amp;gt;100 functions. The following solution demonstrates this.&lt;/p&gt;\n&lt;p&gt;Step 1: group the objects in the array by an arbitrary combination of properties. This uses the fact that &lt;a href=&quot;https://underscorejs.org/#groupBy&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.groupBy&lt;/code&gt;&lt;/a&gt; accepts a function that returns the group of an object. It also uses &lt;a href=&quot;https://underscorejs.org/#chain&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.chain&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://underscorejs.org/#pick&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.pick&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://underscorejs.org/#values&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.values&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://underscorejs.org/#chaining&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.join&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://underscorejs.org/#value&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.value&lt;/code&gt;&lt;/a&gt;. Note that &lt;code&gt;_.value&lt;/code&gt; is not strictly needed here, because chained values will automatically unwrap when used as a property name. I&apos;m including it to safeguard against confusion in case somebody tries to write similar code in a context where automatic unwrapping does not take place.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Given an object, return a string naming the group it belongs to.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;category&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(obj).&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(propertyNames).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;value&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Perform the grouping.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; intermediate = _.&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(arrayOfObjects, category);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Given the &lt;code&gt;arrayOfObjects&lt;/code&gt; in the original question and setting &lt;code&gt;propertyNames&lt;/code&gt; to &lt;code&gt;[&apos;Phase&apos;, &apos;Step&apos;]&lt;/code&gt;, &lt;code&gt;intermediate&lt;/code&gt; will get the following value:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1 Step 1&quot;&lt;/span&gt;: [\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; },\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; }\n    ],\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1 Step 2&quot;&lt;/span&gt;: [\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt; },\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt; }\n    ],\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2 Step 1&quot;&lt;/span&gt;: [\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt; },\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt; }\n    ],\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2 Step 2&quot;&lt;/span&gt;: [\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; },\n        { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt; }\n    ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Step 2: reduce each group to a single flat object and return the results in an array. Besides the functions we have seen before, the following code uses &lt;a href=&quot;https://underscorejs.org/#pluck&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.pluck&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://underscorejs.org/#first&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.first&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://underscorejs.org/#pick&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.pick&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://underscorejs.org/#extend&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.extend&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://underscorejs.org/#reduce&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.reduce&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://underscorejs.org/#map&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.map&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;_.first&lt;/code&gt; is guaranteed to return an object in this case, because &lt;code&gt;_.groupBy&lt;/code&gt; does not produce empty groups. &lt;code&gt;_.value&lt;/code&gt; is necessary in this case.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Sum two numbers, even if they are contained in strings.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addNumeric&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt; +a + +b;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Given a `group` of objects, return a flat object with their common&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// properties and the sum of the property with name `aggregateProperty`.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;summarize&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;group&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; valuesToSum = _.&lt;span class=&quot;hljs-title function_&quot;&gt;pluck&lt;/span&gt;(group, aggregateProperty);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(group).&lt;span class=&quot;hljs-title function_&quot;&gt;first&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(propertyNames).&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;({\n        [aggregateProperty]: _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(valuesToSum, addNumeric)\n    }).&lt;span class=&quot;hljs-title function_&quot;&gt;value&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Get an array with all the computed aggregates.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; result = _.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(intermediate, summarize);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Given the &lt;code&gt;intermediate&lt;/code&gt; that we obtained before and setting &lt;code&gt;aggregateProperty&lt;/code&gt; to &lt;code&gt;Value&lt;/code&gt;, we get the &lt;code&gt;result&lt;/code&gt; that the asker desired:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt; }\n]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;We can put this all together in a function that takes &lt;code&gt;arrayOfObjects&lt;/code&gt;, &lt;code&gt;propertyNames&lt;/code&gt; and &lt;code&gt;aggregateProperty&lt;/code&gt; as parameters. Note that &lt;code&gt;arrayOfObjects&lt;/code&gt; can actually also be a plain object with string keys, because &lt;code&gt;_.groupBy&lt;/code&gt; accepts either. For this reason, I have renamed &lt;code&gt;arrayOfObjects&lt;/code&gt; to &lt;code&gt;collection&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;collection, propertyNames, aggregateProperty&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;category&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(obj).&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(propertyNames).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addNumeric&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt; +a + +b;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;summarize&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;group&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; valuesToSum = _.&lt;span class=&quot;hljs-title function_&quot;&gt;pluck&lt;/span&gt;(group, aggregateProperty);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(group).&lt;span class=&quot;hljs-title function_&quot;&gt;first&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(propertyNames).&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;({\n            [aggregateProperty]: _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(valuesToSum, addNumeric)\n        }).&lt;span class=&quot;hljs-title function_&quot;&gt;value&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(collection).&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(category).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(summarize).&lt;span class=&quot;hljs-title function_&quot;&gt;value&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;aggregate(arrayOfObjects, [&apos;Phase&apos;, &apos;Step&apos;], &apos;Value&apos;)&lt;/code&gt; will now give us the same &lt;code&gt;result&lt;/code&gt; again.&lt;/p&gt;\n&lt;p&gt;We can take this a step further and enable the caller to compute &lt;em&gt;any&lt;/em&gt; statistic over the values in each group. We can do this and also enable the caller to add arbitrary properties to the summary of each group. We can do all of this while making our code &lt;em&gt;shorter&lt;/em&gt;. We replace the &lt;code&gt;aggregateProperty&lt;/code&gt; parameter by an &lt;code&gt;iteratee&lt;/code&gt; parameter and pass this straight to &lt;code&gt;_.reduce&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;collection, propertyNames, iteratee&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;category&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(obj).&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(propertyNames).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;summarize&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;group&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(group).&lt;span class=&quot;hljs-title function_&quot;&gt;first&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(propertyNames)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;(_.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(group, iteratee)).&lt;span class=&quot;hljs-title function_&quot;&gt;value&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;chain&lt;/span&gt;(collection).&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(category).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(summarize).&lt;span class=&quot;hljs-title function_&quot;&gt;value&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In effect, we move some of the responsibility to the caller; she must provide an &lt;code&gt;iteratee&lt;/code&gt; that can be passed to &lt;code&gt;_.reduce&lt;/code&gt;, so that the call to &lt;code&gt;_.reduce&lt;/code&gt; will produce an object with the aggregate properties she wants to add. For example, we obtain the same &lt;code&gt;result&lt;/code&gt; as before with the following expression:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;(arrayOfObjects, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Step&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: +memo.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt; + +value.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;\n}));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For an example of a slightly more sophisticated &lt;code&gt;iteratee&lt;/code&gt;, suppose that we want to compute the &lt;em&gt;maximum&lt;/em&gt; &lt;code&gt;Value&lt;/code&gt; of each group instead of the sum, and that we want to add a &lt;code&gt;Tasks&lt;/code&gt; property that lists all the values of &lt;code&gt;Task&lt;/code&gt; that occur in the group. Here&apos;s one way we can do this, using the last version of &lt;code&gt;aggregate&lt;/code&gt; above (and &lt;a href=&quot;https://underscorejs.org/#union&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;_.union&lt;/code&gt;&lt;/a&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;(arrayOfObjects, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Phase&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Step&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;max&lt;/span&gt;(memo.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;, value.&lt;span class=&quot;hljs-property&quot;&gt;Value&lt;/span&gt;),\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: _.&lt;span class=&quot;hljs-title function_&quot;&gt;union&lt;/span&gt;(memo.&lt;span class=&quot;hljs-property&quot;&gt;Tasks&lt;/span&gt; || [memo.&lt;span class=&quot;hljs-property&quot;&gt;Task&lt;/span&gt;], [value.&lt;span class=&quot;hljs-property&quot;&gt;Task&lt;/span&gt;])\n}));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;We obtain the following result:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: [ &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt; ] },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: [ &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt; ] },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: [ &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt; ] },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Tasks&lt;/span&gt;: [ &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt; ] }\n]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Credit to @much2learn, who also posted an &lt;a href=&quot;https://stackoverflow.com/a/62393557/1166087&quot;&gt;answer&lt;/a&gt; that can handle arbitrary reducing functions. I wrote a couple more SO answers that demonstrate how one can achieve sophisticated things by combining multiple Underscore functions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/64938636/1166087&quot;&gt;https://stackoverflow.com/a/64938636/1166087&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/64094738/1166087&quot;&gt;https://stackoverflow.com/a/64094738/1166087&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/63625129/1166087&quot;&gt;https://stackoverflow.com/a/63625129/1166087&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/63088916/1166087&quot;&gt;https://stackoverflow.com/a/63088916/1166087&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;groupBy&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;groupingKeyFn&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; groupingKeyFn !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;groupBy take a function as only parameter&quot;&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;result, item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; key = &lt;span class=&quot;hljs-title function_&quot;&gt;groupingKeyFn&lt;/span&gt;(item);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!result[key])\n            result[key] = [];\n        result[key].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(item);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }, {});\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [\n\t{&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;video&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;image&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;video&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;blog&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;video&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;e&quot;&lt;/span&gt;},\n]\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(a.&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I would check &lt;a href=&quot;https://www.npmjs.com/package/declarative-js#groupby&quot; rel=&quot;nofollow noreferrer&quot;&gt;declarative-js&lt;/a&gt; &lt;code&gt;groupBy&lt;/code&gt; it seems to do exactly what you are looking for. It is also: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;very performant (performance &lt;a href=&quot;https://github.com/pavel-surinin/performance-bechmark/blob/master/output.md#reduergroupby&quot; rel=&quot;nofollow noreferrer&quot;&gt;benchmark&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;written in typescript so all typpings are included.&lt;/li&gt;\n&lt;li&gt;It is not enforcing to use 3rd party array-like objects.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; { &lt;span class=&quot;hljs-title class_&quot;&gt;Reducers&lt;/span&gt; } &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;declarative-js&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; groupBy = &lt;span class=&quot;hljs-title class_&quot;&gt;Reducers&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;groupBy&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;Reducers&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Map&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data = [\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;25&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;30&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-title class_&quot;&gt;Phase&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Phase 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Step&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Step 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Task&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task 2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;40&quot;&lt;/span&gt; }\n];\n\ndata.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;=&amp;gt;&lt;/span&gt; element.&lt;span class=&quot;hljs-property&quot;&gt;Step&lt;/span&gt;), &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;());\ndata.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Step&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Lets generate a generic &lt;code&gt;Array.prototype.groupBy()&lt;/code&gt; tool. Just for variety let&apos;s use ES6 fanciness the spread operator for some Haskellesque pattern matching on a recursive approach. Also let&apos;s make our &lt;code&gt;Array.prototype.groupBy()&lt;/code&gt; to accept a callback which takes the item (&lt;code&gt;e&lt;/code&gt;) the index (&lt;code&gt;i&lt;/code&gt;) and the applied array (&lt;code&gt;a&lt;/code&gt;) as arguments.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;groupBy&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;cb&lt;/span&gt;){\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;iterate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;[x,...xs], i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, r = [[],[]]&lt;/span&gt;){\n                                     &lt;span class=&quot;hljs-title function_&quot;&gt;cb&lt;/span&gt;(x,i,[x,...xs]) ? (r[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(x), r)\n                                                       : (r[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(x), r);\n                                     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; xs.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; ? &lt;span class=&quot;hljs-title function_&quot;&gt;iterate&lt;/span&gt;(xs, ++i, r) : r;\n                                   }(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n                          };\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;],\n    res = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;groupBy&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(res);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Just to add to Scott Sauyet&apos;s &lt;a href=&quot;https://stackoverflow.com/a/14484332/5484795&quot;&gt;answer&lt;/a&gt;, some people were asking in the comments how to use his function to groupby value1, value2, etc., instead of grouping just one value.&lt;/p&gt;\n\n&lt;p&gt;All it takes is to edit his sum function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;DataGrouper&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;register&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sum&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;({}, item.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;,\n        {&lt;span class=&quot;hljs-title class_&quot;&gt;VALUE1&lt;/span&gt;: _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(item.&lt;span class=&quot;hljs-property&quot;&gt;vals&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, node&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; memo + &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(node.&lt;span class=&quot;hljs-property&quot;&gt;VALUE1&lt;/span&gt;);}, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)},\n        {&lt;span class=&quot;hljs-title class_&quot;&gt;VALUE2&lt;/span&gt;: _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(item.&lt;span class=&quot;hljs-property&quot;&gt;vals&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, node&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; memo + &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(node.&lt;span class=&quot;hljs-property&quot;&gt;VALUE2&lt;/span&gt;);}, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)}\n    );\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;leaving the main one (DataGrouper) unchanged:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataGrouper&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; has = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, target&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;any&lt;/span&gt;(obj, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;isEqual&lt;/span&gt;(value, target);\n        });\n    };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; keys = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data, names&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(data, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;memo, item&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = _.&lt;span class=&quot;hljs-title function_&quot;&gt;pick&lt;/span&gt;(item, names);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(memo, key)) {\n                memo.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(key);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; memo;\n        }, []);\n    };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; group = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data, names&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; stems = &lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(data, names);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(stems, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;stem&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n                &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: stem,\n                &lt;span class=&quot;hljs-attr&quot;&gt;vals&lt;/span&gt;:_.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(_.&lt;span class=&quot;hljs-title function_&quot;&gt;where&lt;/span&gt;(data, stem), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;omit&lt;/span&gt;(item, names);\n                })\n            };\n        });\n    };\n\n    group.&lt;span class=&quot;hljs-property&quot;&gt;register&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name, converter&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; group[name] = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data, names&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;group&lt;/span&gt;(data, names), converter);\n        };\n    };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; group;\n}());\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Ceasar&apos;s answer is good, but works only for inner properties of the elements inside the array (length in case of string).&lt;/p&gt;\n\n&lt;p&gt;this implementation works more like: &lt;a href=&quot;https://lodash.com/docs/4.17.4#groupBy&quot; rel=&quot;nofollow noreferrer&quot;&gt;this link&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; groupBy = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;arr, f&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;out, val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; by = &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; f === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(val) : val[f];\n        (out[by] = out[by] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(val);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; out;\n    }, {});\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;hope this helps...&lt;/p&gt;\n    "]},"randomTags":[{"name":"q","slug":"q"},{"name":"three.js","slug":"three.js"},{"name":"mysql","slug":"mysql"},{"name":"side-effects","slug":"side-effects"},{"name":"integer-overflow","slug":"integer-overflow"},{"name":"viewmodel","slug":"viewmodel"},{"name":"pinterest","slug":"pinterest"},{"name":"image","slug":"image"},{"name":"whitespace","slug":"whitespace"},{"name":"responsive-design","slug":"responsive-design"},{"name":"virtual-destructor","slug":"virtual-destructor"},{"name":"android-recyclerview","slug":"android-recyclerview"},{"name":"input","slug":"input"},{"name":"variables","slug":"variables"},{"name":"include-path","slug":"include-path"},{"name":"propertynotfoundexception","slug":"propertynotfoundexception"},{"name":"assembly","slug":"assembly"},{"name":"flask","slug":"flask"},{"name":"pivot-table","slug":"pivot-table"},{"name":"version-control","slug":"version-control"}]},"__N_SSG":true}