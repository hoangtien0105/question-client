{"pageProps":{"data":{"count":1,"rows":[{"id":139,"title":"How do I pass data between Activities in Android application?","slug":"how-do-i-pass-data-between-activities-in-android-application-1657384739839","postType":"QUESTION","createdAt":"2022-07-09T16:38:59.000Z","updatedAt":"2022-07-09T16:38:59.000Z","tags":[{"id":506,"name":"android-intent","slug":"android-intent","createdAt":"2022-07-09T16:38:59.000Z","updatedAt":"2022-07-09T16:38:59.000Z","Questions_Tags":{"questionId":139,"tagId":506}}]}]},"slug":"android-intent","page":"1","answers":{"139":["\n&lt;p&gt;In your current Activity, create a new &lt;code&gt;Intent&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;;\nIntent i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(CurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, NewActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);    \ni.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;,value);\nstartActivity(i);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then in the new Activity, retrieve those values:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;extras&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (extras != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; extras.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//The key argument here must match that used in the other activity&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use this technique to pass variables from one Activity to the other.&lt;/p&gt;\n    ","\n&lt;p&gt;The easiest way to do this would be to pass the session id to the signout activity in the &lt;code&gt;Intent&lt;/code&gt; you&apos;re using to start the activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getBaseContext(), SignoutActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXTRA_SESSION_ID&quot;&lt;/span&gt;, sessionId);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Access that intent on next activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; sessionId = getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXTRA_SESSION_ID&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://developer.android.com/guide/topics/intents/intents-filters.html&quot; rel=&quot;noreferrer&quot;&gt;docs&lt;/a&gt; for Intents has more information (look at the section titled &quot;Extras&quot;).&lt;/p&gt;\n    ","\n&lt;p&gt;Passing &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot; rel=&quot;noreferrer&quot;&gt;Intent&lt;/a&gt; extras is a good approach as Erich noted. &lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://developer.android.com/reference/android/app/Application.html&quot; rel=&quot;noreferrer&quot;&gt;Application&lt;/a&gt; object is another way though, and it is sometimes easier when dealing with the same state across multiple activities (as opposed to having to get/put it everywhere), or objects more complex than primitives and Strings. &lt;/p&gt;\n\n&lt;p&gt;You can extend Application, and then set/get whatever you want there and access it from any Activity (in the same application) with &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#getApplication%28%29&quot; rel=&quot;noreferrer&quot;&gt;getApplication()&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Also keep in mind that other approaches you might see, like statics, can be problematic because they &lt;a href=&quot;http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html&quot; rel=&quot;noreferrer&quot;&gt;can lead to memory leaks&lt;/a&gt;. Application helps solve this too.&lt;/p&gt;\n    ","\n&lt;p&gt;Source class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent myIntent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, NewActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nmyIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your First Name Here&quot;&lt;/span&gt;);\nmyIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastName&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your Last Name Here&quot;&lt;/span&gt;);\nstartActivity(myIntent)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Destination Class (NewActivity class):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n    setContentView(R.layout.view);\n\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastName&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You just have to send extras while calling your intent.&lt;/p&gt;\n\n&lt;p&gt;Like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getApplicationContext(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Value you want to pass&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now on the &lt;code&gt;OnCreate&lt;/code&gt; method of your &lt;code&gt;SecondActivity&lt;/code&gt; you can fetch the extras like this.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;If the value you sent was in &lt;code&gt;long&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; = getIntent().getLongExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;, defaultValue(you can give it anything));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;If the value you sent was a &lt;code&gt;String&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value = getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;If the value you sent was a &lt;code&gt;Boolean&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;Boolean&lt;/span&gt; value = getIntent().getBooleanExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;, defaultValue);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It helps me to see things in context. Here are two examples.&lt;/p&gt;\n\n&lt;h1&gt;Passing Data Forward&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/1bUb2.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/1bUb2.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;Main Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Put the data you want to send in an Intent with a key-value pair. See &lt;a href=&quot;https://stackoverflow.com/a/40569184/3681880&quot;&gt;this answer&lt;/a&gt; for naming conventions for the key.&lt;/li&gt;\n&lt;li&gt;Start the Second Activity with &lt;code&gt;startActivity&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;MainActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_main);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Go to Second Activity&quot; button click&lt;/span&gt;\n    public void onButtonClick(&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; view) {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// get the text to pass&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt; editText = (&lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.editText);\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; textToPass = editText.getText().toString();\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// start the SecondActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;SecondActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;EXTRA_TEXT&lt;/span&gt;, textToPass);\n        startActivity(intent);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Second Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You use &lt;code&gt;getIntent()&lt;/code&gt; to get the &lt;code&gt;Intent&lt;/code&gt; that started the second activity. Then you can extract the data with &lt;code&gt;getExtras()&lt;/code&gt; and the key you defined in the first activity. Since our data is a String we will just use &lt;code&gt;getStringExtra&lt;/code&gt; here.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;SecondActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SecondActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_second);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// get the text from MainActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = getIntent();\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; text = intent.getStringExtra(&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;EXTRA_TEXT&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// use the text in a TextView&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; textView = (&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.textView);\n        textView.setText(text);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Passing Data Back&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/sMric.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/sMric.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;Main Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Start the Second Activity with &lt;code&gt;startActivityForResult&lt;/code&gt;, providing it an arbitrary result code.&lt;/li&gt;\n&lt;li&gt;Override &lt;code&gt;onActivityResult&lt;/code&gt;. This is called when the Second Activity finishes. You can make sure that it is actually the Second Activity by checking the result code. (This is useful when you are starting multiple different activities from the same main activity.)&lt;/li&gt;\n&lt;li&gt;Extract the data you got from the return &lt;code&gt;Intent&lt;/code&gt;. The data is extracted using a key-value pair. I could use any string for the key but I&apos;ll use the predefined &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; since I&apos;m sending text.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;MainActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AppCompatActivity&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;SECOND_ACTIVITY_REQUEST_CODE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Go to Second Activity&quot; button click&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onButtonClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Start the SecondActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SecondActivity.class);\n        startActivityForResult(intent, SECOND_ACTIVITY_REQUEST_CODE);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// This method is called when the second activity finishes&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// check that it is the SecondActivity with an OK result&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (requestCode == SECOND_ACTIVITY_REQUEST_CODE) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (resultCode == RESULT_OK) {\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// get String data from Intent&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;returnString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.getStringExtra(Intent.EXTRA_TEXT);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// set text view with string&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;textView&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TextView) findViewById(R.id.textView);\n                textView.setText(returnString);\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Second Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Put the data that you want to send back to the previous activity into an &lt;code&gt;Intent&lt;/code&gt;. The data is stored in the &lt;code&gt;Intent&lt;/code&gt; using a key-value pair. I chose to use &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; for my key.&lt;/li&gt;\n&lt;li&gt;Set the result to &lt;code&gt;RESULT_OK&lt;/code&gt; and add the intent holding your data.&lt;/li&gt;\n&lt;li&gt;Call &lt;code&gt;finish()&lt;/code&gt; to close the Second Activity.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;SecondActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SecondActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_second);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Send text back&quot; button click&lt;/span&gt;\n    public void onButtonClick(&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; view) {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// get the text from the EditText&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt; editText = (&lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.editText);\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; stringToPassBack = editText.getText().toString();\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// put the String to pass back into an Intent and close this activity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;();\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;EXTRA_TEXT&lt;/span&gt;, stringToPassBack);\n        setResult(&lt;span class=&quot;hljs-type&quot;&gt;RESULT_OK&lt;/span&gt;, intent);\n        finish();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Updated&lt;/strong&gt; Note that I had mentioned the use of &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot; rel=&quot;noreferrer&quot;&gt;SharedPreference&lt;/a&gt;. It has a simple API and is accessible across an application&apos;s activities. But this is a clumsy solution, and is a security risk if you pass around sensitive data. It&apos;s best to use intents. It has an extensive list of overloaded methods that can be used to better transfer many different data types between activities. Have a look at &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double[])&quot; rel=&quot;noreferrer&quot;&gt;intent.putExtra&lt;/a&gt;. This &lt;a href=&quot;https://www.raywenderlich.com/160019/android-intents-tutorial-2&quot; rel=&quot;noreferrer&quot;&gt;link&lt;/a&gt; presents the use of putExtra quite well.&lt;/p&gt;\n\n&lt;p&gt;In passing data between activities, my preferred approach is to create a static method for the relevant activity that includes the required parameters launch the intent. Which then provides easily setup and retrieve parameters. So it can look like this&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;{\n    public static &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ARG_PARAM1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;arg_param1&quot;&lt;/span&gt;;\n...\npublic static getIntent(&lt;span class=&quot;hljs-type&quot;&gt;Activity&lt;/span&gt; from, &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; param1, &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt; param2...) {\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;(from, &lt;span class=&quot;hljs-type&quot;&gt;MyActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;ARG_PARAM1&lt;/span&gt;, param1);\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;ARG_PARAM2&lt;/span&gt;, param2);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; intent;\n}\n\n....\n&lt;span class=&quot;hljs-comment&quot;&gt;// Use it like this.&lt;/span&gt;\nstartActivity(&lt;span class=&quot;hljs-type&quot;&gt;MyActvitiy&lt;/span&gt;.getIntent(&lt;span class=&quot;hljs-type&quot;&gt;FromActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, varA, varB, ...));\n...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can create an intent for the intended activity and ensure you have all the parameters. You can adapt for fragments to. A simple example above, but you get the idea.&lt;/p&gt;\n    ","\n&lt;p&gt;Try to do the following:&lt;/p&gt;\n\n&lt;p&gt;Create a simple &quot;helper&quot; class (factory for your Intents), like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Intent;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IntentHelper&lt;/span&gt; {\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; Intent &lt;span class=&quot;hljs-title&quot;&gt;createYourSpecialIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Intent src)&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;YourSpecialIntent&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-built_in&quot;&gt;addCategory&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;YourSpecialCategory&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-built_in&quot;&gt;putExtras&lt;/span&gt;(src);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will be the factory for all your Intents. Everytime you need a new Intent, create a static factory method in IntentHelper. To create a new Intent you should just say it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;IntentHelper&lt;span class=&quot;hljs-selector-class&quot;&gt;.createYourSpecialIntent&lt;/span&gt;(getIntent());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In your activity. When you want to &quot;save&quot; some data in a &quot;session&quot; just use the following:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;IntentHelper&lt;span class=&quot;hljs-selector-class&quot;&gt;.createYourSpecialIntent&lt;/span&gt;(getIntent())&lt;span class=&quot;hljs-selector-class&quot;&gt;.putExtra&lt;/span&gt;(&quot;YOUR_FIELD_NAME&quot;, fieldValueToSave);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And send this Intent. In the target Activity your field will be available as:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;getIntent&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.getStringExtra&lt;/span&gt;(&quot;YOUR_FIELD_NAME&quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So now we can use Intent like same old session (like in servlets or &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot; rel=&quot;noreferrer&quot;&gt;JSP&lt;/a&gt;).&lt;/p&gt;\n    ","\n&lt;p&gt;You can also pass custom class objects by making a &lt;strong&gt;parcelable&lt;/strong&gt; class. Best way to make it parcelable is to write your class and then simply paste it to a site like &lt;a href=&quot;http://www.parcelabler.com/&quot; rel=&quot;noreferrer&quot;&gt;http://www.parcelabler.com/&lt;/a&gt;. Click on build and you will get new code. Copy all of this and replace the original class contents. \nThen-&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(getBaseContext(), NextActivity.class);\n&lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;();\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;, foo);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and get the result in NextActivity like-&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras().getParcelable(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can simply use the &lt;strong&gt;foo&lt;/strong&gt; object like you would have used.&lt;/p&gt;\n    ","\n&lt;p&gt;Another way is to use a public static field in which you store data, i.e.:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;{\n\n  public static &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;SharedString&lt;/span&gt;;\n  public static &lt;span class=&quot;hljs-type&quot;&gt;SomeObject&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;SharedObject&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The most convenient way to pass data between activities is by passing intents. In the first activity from where you want to send data, you should add code,&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;My Data&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Data you want to send&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(FirstActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SecondActivity.class);\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;,str); &lt;span class=&quot;hljs-comment&quot;&gt;//Here you will add the data into intent to pass bw activites&lt;/span&gt;\nv.getContext().startActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You should also import&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Intent;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then in the next Acitvity(SecondActivity), you should retrieve the data from the intent using the following code.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;SharedPreferences&lt;/code&gt;...&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Logging. Time store session id in &lt;code&gt;SharedPreferences&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session&quot;&lt;/span&gt;,getApplicationContext().MODE_PRIVATE);\n&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sessionId&quot;&lt;/span&gt;, sessionId);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Signout. Time fetch session id in sharedpreferences&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session&quot;&lt;/span&gt;, getApplicationContext().MODE_PRIVATE);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sessionId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sessionId&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;If you don&apos;t have the required session id, then remove sharedpreferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vhdl&quot;&gt;SharedPreferences settings = &lt;span class=&quot;hljs-keyword&quot;&gt;context&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;Context&lt;/span&gt;.MODE_PRIVATE);\nsettings.edit().clear().commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That is very useful, because one time you save the value and then retrieve anywhere of activity.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;From Activity&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; n= &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;\n &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(From_Activity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;,To_Activity.class);\n &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;b1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\n b1.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;integerNumber&quot;&lt;/span&gt;,n);\n in.putExtras(b1);\n startActivity(in);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;To Activity&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;b2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(b2 != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n  {\n     m = b2.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;integerNumber&quot;&lt;/span&gt;);\n  }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The standard approach. &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, ActivityTwo.class);\n&lt;span class=&quot;hljs-type&quot;&gt;AutoCompleteTextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;textView&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (AutoCompleteTextView) findViewById(R.id.autocomplete);\nString getrec=textView.getText().toString();\n&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\nbundle.putString(stuff, getrec);\ni.putExtras(bundle);\nstartActivity(i);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now in your second activity retrieve your data from the bundle:&lt;/p&gt;\n\n&lt;p&gt;Get the bundle&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Extract the data&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; stuff = bundle.getString(stuff); \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Kotlin&lt;/h2&gt;\n&lt;p&gt;&lt;strong&gt;Pass from First Activity&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; intent = Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SecondActivity::&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.java)\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;)\nstartActivity(intent)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Get in Second Activity&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Suggestion&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Always put keys in constant file for more managed way.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;companion&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; KEY = &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can send data between activities using intent object.\nConsider you have two activities namely &lt;code&gt;FirstActivity&lt;/code&gt; and &lt;code&gt;SecondActivity&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Inside FirstActivity:&lt;/p&gt;\n\n&lt;p&gt;Using Intent:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(FirstActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;,SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\ni.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\nstartActivity(i)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Inside SecondActivity&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-undefined&quot;&gt;Bundle bundle= getIntent().getExtras();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can use different bundle class methods to get values passed from FirstActivity  by Key.&lt;/p&gt;\n\n&lt;p&gt;E.g.\n&lt;code&gt;bundle.getString(&quot;key&quot;)&lt;/code&gt;,&lt;code&gt;bundle.getDouble(&quot;key&quot;)&lt;/code&gt; ,&lt;code&gt;bundle.getInt(&quot;key&quot;)&lt;/code&gt; etc.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you want to tranfer bitmap between Activites/Fragments&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Activity&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;To pass a bitmap between Activites&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, Activity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;, bitmap);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;And in the Activity class&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bitmap&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getParcelableExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Fragment&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;To pass a bitmap between Fragments&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SecondFragment&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fragment&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SecondFragment&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\nbundle.putParcelable(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;, bitmap);\nfragment.setArguments(bundle);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;To receive inside the SecondFragment&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bitmap&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getArguments().getParcelable(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Transfering Large Bitmaps&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;If you are getting failed binder transaction, this means you are exceeding the binder transaction buffer by transferring large element from one activity to another activity.&lt;/em&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;So in that case you have to compress the bitmap as an byte&apos;s array and then uncompress it in another activity&lt;/strong&gt;, like this&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;In the FirstActivity&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SecondActivity.class);\n\n&lt;span class=&quot;hljs-type&quot;&gt;ByteArrayOutputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ByteArrayOutputStream&lt;/span&gt;();\nbitmap.compress(Bitmap.CompressFormat.JPG, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;, stream);\n&lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt;[] bytes = stream.toByteArray(); \nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmapbytes&quot;&lt;/span&gt;,bytes);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;And in the SecondActivity&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;byte[] &lt;span class=&quot;hljs-built_in&quot;&gt;bytes&lt;/span&gt; = getIntent().getByteArrayExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmapbytes&quot;&lt;/span&gt;);\nBitmap bmp = BitmapFactory.decodeByteArray(&lt;span class=&quot;hljs-built_in&quot;&gt;bytes&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;bytes&lt;/span&gt;.length);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(YourCurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, YourActivityName.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;NAme&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Id&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can retrieve it in another activity. Two ways:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; id = getIntent.getIntExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;/* defaltvalue */&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The second way is:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; i.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Supplemental Answer: Naming Conventions for the Key String&lt;/h1&gt;\n&lt;p&gt;The actual process of passing data has already been answered, however most of the answers use hard coded strings for the key name in the Intent. This is usually fine when used only within your app. However, the &lt;a href=&quot;https://developer.android.com/guide/components/intents-filters.html#Building&quot; rel=&quot;noreferrer&quot;&gt;documentation recommends&lt;/a&gt; using the &lt;code&gt;EXTRA_*&lt;/code&gt; constants for standardized data types.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Example 1: Using &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; keys&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;First activity&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getActivity(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(Intent.EXTRA_TEXT, &lt;span class=&quot;hljs-string&quot;&gt;&quot;my text&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Second activity:&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getExtras().getString(Intent.EXTRA_TEXT);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Example 2: Defining your own &lt;code&gt;static final&lt;/code&gt; key&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;If one of the &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; Strings does not suit your needs, you can define your own at the beginning of the first activity.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;EXTRA_STUFF&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;com.myPackageName.EXTRA_STUFF&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Including the package name is just a convention if you are only using the key in your own app. But it is a necessity to avoid naming conflicts if you are creating some sort of service that other apps can call with an Intent.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;First activity:&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getActivity(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(EXTRA_STUFF, &lt;span class=&quot;hljs-string&quot;&gt;&quot;my text&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Second activity:&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getExtras().getString(FirstActivity.EXTRA_STUFF);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Example 3: Using a String resource key&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Although not mentioned in the documentation, &lt;a href=&quot;https://stackoverflow.com/a/4433843/3681880&quot;&gt;this answer&lt;/a&gt; recommends using a String resource to avoid dependencies between activities.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;strings.xml&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt; &amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXTRA_STUFF&quot;&lt;/span&gt;&amp;gt;com.myPackageName.MY_NAME&amp;lt;/&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;First activity&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getActivity(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(getString(R.&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;.EXTRA_STUFF), &lt;span class=&quot;hljs-string&quot;&gt;&quot;my text&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Second activity&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getExtras().getString(getString(R.string.EXTRA_STUFF));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is my best practice and it helps a lot when the project is huge and complex. &lt;/p&gt;\n\n&lt;p&gt;Suppose that I have 2 activities, &lt;code&gt;LoginActivity&lt;/code&gt; and &lt;code&gt;HomeActivity&lt;/code&gt;.\nI want to pass 2 parameters (username &amp;amp; password) from &lt;code&gt;LoginActivity&lt;/code&gt; to &lt;code&gt;HomeActivity&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;First, I create my &lt;code&gt;HomeIntent&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HomeIntent&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ACTION_LOGIN&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;action_login&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ACTION_LOGOUT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;action_logout&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ARG_USERNAME&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;arg_username&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ARG_PASSWORD&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;arg_password&quot;&lt;/span&gt;;\n\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HomeIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx, &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; isLogIn)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;(ctx);\n        &lt;span class=&quot;hljs-comment&quot;&gt;//set action type&lt;/span&gt;\n        setAction(isLogIn ? ACTION_LOGIN : ACTION_LOGOUT);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HomeIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(ctx, HomeActivity.class);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//This will be needed for receiving data&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HomeIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Intent intent)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(intent);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String userName, String password)&lt;/span&gt; {\n        putExtra(ARG_USERNAME, userName);\n        putExtra(ARG_PASSWORD, password);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getUsername&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getStringExtra(ARG_USERNAME);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getStringExtra(ARG_PASSWORD);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//To separate the params is for which action, we should create action&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isActionLogIn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getAction().equals(ACTION_LOGIN);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isActionLogOut&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getAction().equals(ACTION_LOGOUT);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is how I pass the data in my LoginActivity&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LoginActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-meta&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_login);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; username = &lt;span class=&quot;hljs-string&quot;&gt;&quot;phearum&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; password = &lt;span class=&quot;hljs-string&quot;&gt;&quot;pwd1133&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; boolean isActionLogin = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Passing data to HomeActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt; homeIntent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, isActionLogin);\n        homeIntent.setData(username, password);\n        startActivity(homeIntent);\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Final step, here is how I receive the data in &lt;code&gt;HomeActivity&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HomeActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_home);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//This is how we receive the data from LoginActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Make sure you pass getIntent() to the HomeIntent constructor&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt; homeIntent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt;(getIntent());\n        &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HomeActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Is action login?  &quot;&lt;/span&gt; + homeIntent.isActionLogIn());\n        &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HomeActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;username: &quot;&lt;/span&gt; + homeIntent.getUsername());\n        &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HomeActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;password: &quot;&lt;/span&gt; + homeIntent.getPassword());\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Done! Cool :) I just want to share my experience. If you working on small project this shouldn&apos;t be the big problem. But when your working on big project, it really pain when you want to do refactoring or fixing bugs.&lt;/p&gt;\n    ","\n&lt;p&gt;The passing of data between activities is mainly by means of an intent object.&lt;/p&gt;\n\n&lt;p&gt;First you have to attach the data to the intent object with the use of the &lt;code&gt;Bundle&lt;/code&gt; class. Then call the activity using either &lt;code&gt;startActivity()&lt;/code&gt; or &lt;code&gt;startActivityForResult()&lt;/code&gt; methods.&lt;/p&gt;\n\n&lt;p&gt;You can find more information about it, with an example from the blog post &lt;em&gt;&lt;a href=&quot;http://codeglympse.blogspot.in/2012/10/passing-data-to-activity.html&quot; rel=&quot;noreferrer&quot;&gt;Passing data to an Activity&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can try Shared Preference, it may be a good alternative for sharing data between the activities    &lt;/p&gt;\n\n&lt;p&gt;To save session id -&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;SharedPreferences pref = myContexy.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session \nData&quot;&lt;/span&gt;,MODE_PRIVATE);\nSharedPreferences.Editor edit = pref.edit();\nedit.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session ID&quot;&lt;/span&gt;, session_id);\nedit.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To get them -&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pref&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; myContexy.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session Data&quot;&lt;/span&gt;, MODE_PRIVATE);\nsession_id = pref.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session ID&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;Intent&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;Intent mIntent = new Intent(FirstActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nmIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt;);\nstartActivity(mIntent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another way could be using &lt;em&gt;singleton pattern&lt;/em&gt; also:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt; {\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt; dataHolder;\n &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Model&lt;/span&gt;&amp;gt; dataList;\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setDataList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;List&amp;lt;Model&amp;gt;dataList&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;dataList&lt;/span&gt; = dataList;\n }\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Model&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getDataList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dataList;\n }\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; synchronized &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getInstance&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (dataHolder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n       dataHolder = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dataHolder;\n }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From your FirstActivity &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Model&lt;/span&gt;&amp;gt; dataList &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; new &lt;span class=&quot;hljs-type&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;DataHolder&lt;/span&gt;.getInstance().setDataList(dataList);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On SecondActivity&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Model&lt;/span&gt;&amp;gt; dataList &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;DataHolder&lt;/span&gt;.getInstance().getDataList();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;1st way: In your current Activity, when you create object of intent to open new screen:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;  &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;xyz&quot;&lt;/span&gt;;\n  Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(CurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, NextActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);    \n  intent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, value);\n  startActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then in the nextActivity in onCreate method, retrieve those values which you pass from previous activity:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (getIntent().getExtras() != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-comment&quot;&gt;//The key argument must always match that used send and retrive value from one activity to another.&lt;/span&gt;\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2nd way: You can create bundle object and put values in bundle and then put bundle object in intent from your current activity -&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  String value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;xyz&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(CurrentActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, NextActivity.class);  \n  &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\n  bundle.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, value);  \n  intent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bundle_key&quot;&lt;/span&gt;, bundle);\n  startActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then in the nextActivity in onCreate method, retrieve those values which you pass from previous activity:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (getIntent().getExtras() != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bundle_key&quot;&lt;/span&gt;);    \n      &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; bundle.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-comment&quot;&gt;//The key argument must always match that used send and retrive value from one activity to another.&lt;/span&gt;\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can also use bean class to pass data between classes using serialization.&lt;/p&gt;\n    ","\n&lt;p&gt;Start another activity from this activity pass parameters via Bundle Object&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getBaseContext(), YourActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;USER_NAME&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;xyz@gmail.com&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Retrieve on another activity (YourActivity)&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; s = getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;USER_NAME&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is ok for simple kind data type.\nBut if u want to pass complex data in between activity u need to serialize it first.&lt;/p&gt;\n\n&lt;p&gt;Here we have Employee Model&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Employee&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String empId;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;print&lt;/span&gt; Double salary;\n\n    getters...\n    setters...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can use Gson lib provided by google to serialize the complex data \nlike this&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;strEmp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;().toJson(emp);\n&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(getBaseContext(), YourActivity.class);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EMP&quot;&lt;/span&gt;, strEmp);\nstartActivity(intent);\n\n&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;empStr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; bundle.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EMP&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n            &lt;span class=&quot;hljs-type&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeToken&lt;/span&gt;&amp;lt;Employee&amp;gt;() {\n            }.getType();\n            &lt;span class=&quot;hljs-type&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;selectedEmp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(empStr, type);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*\n * If you are from transferring data from one class that doesn&apos;t\n * extend Activity, then you need to do something like this.\n */&lt;/span&gt; \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;abc&lt;/span&gt; {\n    Context context;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;abc&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.context = context;\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;something&lt;/span&gt;()&lt;/span&gt; {\n        context.startactivity(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(context, anyone.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;).putextra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;));\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I recently released &lt;a href=&quot;https://github.com/HodeCode/Vapor-API&quot; rel=&quot;nofollow noreferrer&quot;&gt;Vapor API&lt;/a&gt;, a jQuery flavored Android framework that makes all sorts of tasks like this simpler. As mentioned, &lt;code&gt;SharedPreferences&lt;/code&gt; is one way you could do this.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporSharedPreferences.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;VaporSharedPreferences&lt;/code&gt;&lt;/a&gt; is implemented as Singleton so that is one option, and in Vapor API it has a heavily overloaded &lt;code&gt;.put(...)&lt;/code&gt; method so you don&apos;t have to explicitly worry about the datatype you are committing - providing it is supported. It is also fluent, so you can chain calls:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;prefs&lt;/span&gt;(...).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;val1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;123&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;val2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;something&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3.34&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It also optionally autosaves changes, and unifies the reading and writing process under-the-hood so you don&apos;t need to explicitly retrieve an Editor like you do in standard Android.&lt;/p&gt;\n\n&lt;p&gt;Alternatively you could use an &lt;code&gt;Intent&lt;/code&gt;. In Vapor API you can also use the chainable overloaded &lt;code&gt;.put(...)&lt;/code&gt; method on a &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporIntent.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;VaporIntent&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;myData&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;more&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;568&lt;/span&gt;)...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And pass it as an extra, as mentioned in the other answers. You can retrieve extras from your &lt;code&gt;Activity&lt;/code&gt;, and furthermore if you are using &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/app/VaporActivity.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;VaporActivity&lt;/code&gt;&lt;/a&gt; this is done for you automatically so you can use:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.extras()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To retrieve them at the other end in the &lt;code&gt;Activity&lt;/code&gt; you switch to.&lt;/p&gt;\n\n&lt;p&gt;Hope that is of interest to some :)&lt;/p&gt;\n    ","\n&lt;p&gt;First Activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getApplicationContext(), ClassName.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Value you want to pass&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Second Activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-rust&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;str&lt;/span&gt;= &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getIntent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getStringExtra&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Write following code in &lt;strong&gt;CurrentActivity.java&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(CurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SignOutActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\ni.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SESSION_ID&quot;&lt;/span&gt;,sessionId);\nstartActivity(i);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Access SessionId in &lt;strong&gt;SignOutActivity.java&lt;/strong&gt; is following way&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_sign_out);\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;// check intent is null or not&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(intent != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sessionId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SESSION_ID&quot;&lt;/span&gt;);\n        Log.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session_id : &quot;&lt;/span&gt; + sessionId);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n        Toast.makeText(SignOutActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Intent is null&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use a global class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;GlobalClass&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Application&lt;/span&gt;&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; float vitamin_a;\n\n\n    public float getVitaminA() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vitamin_a;\n    }\n\n    public void setVitaminA(float vitamin_a) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.vitamin_a = vitamin_a;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can call the setters and the getters of this class from all other classes.\nDo do that, you need to make a GlobalClass-Object in every Actitity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lisp&quot;&gt;GlobalClass gc = (&lt;span class=&quot;hljs-name&quot;&gt;GlobalClass&lt;/span&gt;) getApplication()&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can call for example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;gc&lt;span class=&quot;hljs-selector-class&quot;&gt;.getVitaminA&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"randomTags":[{"name":"lambda","slug":"lambda"},{"name":"jframe","slug":"jframe"},{"name":"random","slug":"random"},{"name":"awt","slug":"awt"},{"name":"session-variables","slug":"session-variables"},{"name":"flask-restless","slug":"flask-restless"},{"name":"orm","slug":"orm"},{"name":"this","slug":"this"},{"name":"gethashcode","slug":"gethashcode"},{"name":"aggregation-framework","slug":"aggregation-framework"},{"name":"java","slug":"java"},{"name":"datetime-format","slug":"datetime-format"},{"name":"attr","slug":"attr"},{"name":"algorithm","slug":"algorithm"},{"name":"copy-and-swap","slug":"copy-and-swap"},{"name":"angularjs","slug":"angularjs"},{"name":"dependent-name","slug":"dependent-name"},{"name":"oop","slug":"oop"},{"name":"rest","slug":"rest"},{"name":"aggregate-functions","slug":"aggregate-functions"}]},"__N_SSG":true}