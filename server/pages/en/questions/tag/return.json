{"pageProps":{"data":{"count":1,"rows":[{"id":375,"title":"Why does my recursive function return None?","slug":"why-does-my-recursive-function-return-none-1657387792894","postType":"QUESTION","createdAt":"2022-07-09T17:29:52.000Z","updatedAt":"2022-07-09T17:29:52.000Z","tags":[{"id":2059,"name":"return","slug":"return","createdAt":"2022-07-09T17:29:52.000Z","updatedAt":"2022-07-09T17:29:52.000Z","Questions_Tags":{"questionId":375,"tagId":2059}}]}]},"slug":"return","page":1,"answers":{"375":["\n&lt;p&gt;It is returning &lt;code&gt;None&lt;/code&gt; because when you recursively call it:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n    get_input()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;..you don&apos;t return the value.&lt;/p&gt;\n&lt;p&gt;So while the recursion does happen, the return value gets discarded, and then you fall off the end of the function.  Falling off the end of the function means that python implicitly returns &lt;code&gt;None&lt;/code&gt;, just like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;):\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;pass&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(f(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;))\n&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So, instead of just &lt;em&gt;calling&lt;/em&gt; &lt;code&gt;get_input()&lt;/code&gt; in your &lt;code&gt;if&lt;/code&gt; statement, you need to &lt;code&gt;return&lt;/code&gt; it:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; get_input()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To return a value other than None, you need to use a return statement.&lt;/p&gt;\n\n&lt;p&gt;In your case, the if block only executes a return when executing one branch. Either move the return outside of the if/else block, or have returns in both options.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get_input&lt;/span&gt;():\n    my_var = &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Enter &quot;a&quot; or &quot;b&quot;: &apos;&lt;/span&gt;)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; get_input()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; my_var\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;got input:&apos;&lt;/span&gt;, get_input())\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;i think this code more clearly&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get_input&lt;/span&gt;():\n    my_var = &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Enter &quot;a&quot; or &quot;b&quot;: &apos;&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var == &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; my_var == &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;got input:&apos;&lt;/span&gt;, my_var)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; my_var\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; get_input()\nget_input()\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"randomTags":[{"name":"variable-expansion","slug":"variable-expansion"},{"name":"server-side","slug":"server-side"},{"name":"formatting","slug":"formatting"},{"name":"srand","slug":"srand"},{"name":"system-calls","slug":"system-calls"},{"name":"binary","slug":"binary"},{"name":"thread-safety","slug":"thread-safety"},{"name":"android-intent","slug":"android-intent"},{"name":"jsf-2","slug":"jsf-2"},{"name":"blob","slug":"blob"},{"name":"linker","slug":"linker"},{"name":"importerror","slug":"importerror"},{"name":"cryptography","slug":"cryptography"},{"name":"magic-methods","slug":"magic-methods"},{"name":"static","slug":"static"},{"name":"typescript","slug":"typescript"},{"name":"bcrypt","slug":"bcrypt"},{"name":"jframe","slug":"jframe"},{"name":"undefined-reference","slug":"undefined-reference"},{"name":"bluebird","slug":"bluebird"}]},"__N_SSG":true}