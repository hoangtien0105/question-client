{"pageProps":{"data":{"count":1,"rows":[{"id":54,"title":"What do querySelectorAll and getElementsBy* methods return?","slug":"what-do-queryselectorall-and-getelementsby*-methods-return-1657384425935","postType":"QUESTION","createdAt":"2022-07-09T16:33:45.000Z","updatedAt":"2022-07-09T16:33:45.000Z","tags":[{"id":195,"name":"dom-traversal","slug":"dom-traversal","createdAt":"2022-07-09T16:33:46.000Z","updatedAt":"2022-07-09T16:33:46.000Z","Questions_Tags":{"questionId":54,"tagId":195}}]}]},"slug":"dom-traversal","page":1,"answers":{"54":["\n&lt;p&gt;Your &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementById&lt;/code&gt;&lt;/a&gt; code works since IDs have to be unique and thus the function always returns exactly one element (or &lt;code&gt;null&lt;/code&gt; if none was found).&lt;/p&gt;\n&lt;p&gt;However, the methods\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementsByClassName&lt;/code&gt;&lt;/a&gt;,\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementsByName&lt;/code&gt;&lt;/a&gt;,\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByTagName&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementsByTagName&lt;/code&gt;&lt;/a&gt;, and\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByTagNameNS&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementsByTagNameNS&lt;/code&gt;&lt;/a&gt;\nreturn an iterable collection of elements.&lt;/p&gt;\n&lt;p&gt;The method names provide the hint: &lt;code&gt;getElement&lt;/code&gt; implies &lt;em&gt;singular&lt;/em&gt;, whereas &lt;code&gt;getElements&lt;/code&gt; implies &lt;em&gt;plural&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;The method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;querySelector&lt;/code&gt;&lt;/a&gt; also returns a single element, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;querySelectorAll&lt;/code&gt;&lt;/a&gt; returns an iterable collection.&lt;/p&gt;\n&lt;p&gt;The iterable collection can either be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://html.spec.whatwg.org/multipage/dom.html#the-document-object&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementsByName&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://dom.spec.whatwg.org/#interface-parentnode&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;querySelectorAll&lt;/code&gt;&lt;/a&gt; are both specified to return a &lt;code&gt;NodeList&lt;/code&gt;; the other &lt;a href=&quot;https://dom.spec.whatwg.org/#interface-document&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementsBy*&lt;/code&gt; methods&lt;/a&gt; are specified to return an &lt;code&gt;HTMLCollection&lt;/code&gt;, but please note that some browser versions implement this differently.&lt;/p&gt;\n&lt;p&gt;Both of these collection types dont offer the same properties that Elements, Nodes, or similar types offer; thats why reading &lt;code&gt;style&lt;/code&gt; off of &lt;code&gt;document.getElements&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt; fails.\nIn other words: a &lt;code&gt;NodeList&lt;/code&gt; or an &lt;code&gt;HTMLCollection&lt;/code&gt; doesnt have a &lt;code&gt;style&lt;/code&gt;; only an &lt;code&gt;Element&lt;/code&gt; has a &lt;code&gt;style&lt;/code&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;These array-like collections are lists that contain zero or more elements, which you need to iterate over, in order to access them.\nWhile you can iterate over them similarly to an array, note that they are &lt;a href=&quot;https://stackoverflow.com/q/29707568&quot;&gt;&lt;em&gt;different&lt;/em&gt;&lt;/a&gt; from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array&lt;/code&gt;s&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;In modern browsers, you can convert these iterables to a proper Array with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;; then you can use &lt;code&gt;forEach&lt;/code&gt; and other &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#instance_methods&quot; rel=&quot;noreferrer&quot;&gt;Array methods, e.g. iteration methods&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myElement&quot;&lt;/span&gt;))\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;) =&amp;gt;&lt;/span&gt; element.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;100px&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In old browsers that dont support &lt;code&gt;Array.from&lt;/code&gt; or the iteration methods, you can still use &lt;a href=&quot;https://stackoverflow.com/q/7056925&quot;&gt;&lt;code&gt;Array.prototype.slice.call&lt;/code&gt;&lt;/a&gt;.\nThen you can iterate over it like you would with a real array:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elements = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;slice&lt;/span&gt;\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myElement&quot;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; elements.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ++i){\n  elements[i].&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;100px&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can also iterate over the &lt;code&gt;NodeList&lt;/code&gt; or &lt;code&gt;HTMLCollection&lt;/code&gt; itself, but be aware that in most circumstances, these collections are &lt;em&gt;live&lt;/em&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList#live_vs._static_nodelists&quot; rel=&quot;noreferrer&quot;&gt;MDN docs&lt;/a&gt;, &lt;a href=&quot;https://dom.spec.whatwg.org/#concept-collection-live&quot; rel=&quot;noreferrer&quot;&gt;DOM spec&lt;/a&gt;), i.e. they are updated as the DOM changes.\nSo if you insert or remove elements as you loop, make sure to not accidentally &lt;a href=&quot;https://stackoverflow.com/q/15562484&quot;&gt;skip over some elements&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/q/9709351&quot;&gt;create an infinite loop&lt;/a&gt;.\nMDN documentation should always note if a method returns a live collection or a static one.&lt;/p&gt;\n&lt;p&gt;For example, a &lt;code&gt;NodeList&lt;/code&gt; offers some iteration methods such as &lt;code&gt;forEach&lt;/code&gt; in modern browsers:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelectorAll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.myElement&quot;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;) =&amp;gt;&lt;/span&gt; element.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;100px&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A simple &lt;code&gt;for&lt;/code&gt; loop can also be used:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elements = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myElement&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; elements.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ++i){\n  elements[i].&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;100px&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Aside: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Node/childNodes&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;.childNodes&lt;/code&gt;&lt;/a&gt; yields a &lt;em&gt;live&lt;/em&gt; &lt;code&gt;NodeList&lt;/code&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/children&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;.children&lt;/code&gt;&lt;/a&gt; yields a &lt;em&gt;live&lt;/em&gt; &lt;code&gt;HTMLCollection&lt;/code&gt;, so these two getters also need to be handled carefully.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;There are some libraries like &lt;a href=&quot;https://jquery.com&quot; rel=&quot;noreferrer&quot;&gt;jQuery&lt;/a&gt; which make DOM querying a bit shorter and create a layer of abstraction over one element and a collection of elements:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.myElement&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;size&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;100px&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You are using a array as an object, the difference between &lt;code&gt;getElementbyId&lt;/code&gt; and \n&lt;code&gt;getElementsByClassName&lt;/code&gt; is that: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;getElementbyId&lt;/code&gt; will return an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element&quot; rel=&quot;noreferrer&quot;&gt;Element object&lt;/a&gt; or null if no element with the ID is found&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;getElementsByClassName&lt;/code&gt; will return a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection&quot; rel=&quot;noreferrer&quot;&gt;live HTMLCollection&lt;/a&gt;, possibly of length 0 if no matching elements are found&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;getElementsByClassName&lt;/h2&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The &lt;code&gt;getElementsByClassName(classNames)&lt;/code&gt; method takes a string that\n  contains an unordered set of unique space-separated tokens\n  representing classes. When called, the method must return a live\n  &lt;code&gt;NodeList&lt;/code&gt; object containing all the elements in the document that\n  have all the classes specified in that argument, having obtained the\n  classes by splitting a string on spaces. If there are no tokens\n  specified in the argument, then the method must return an empty\n  NodeList.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/2008/WD-html5-20080610/dom.html#getelementsbyclassname&quot; rel=&quot;noreferrer&quot;&gt;https://www.w3.org/TR/2008/WD-html5-20080610/dom.html#getelementsbyclassname&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;getElementById&lt;/h2&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The getElementById() method accesses the first element with the specified id.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;in your code the lines:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;1- document.getElementsByClassName(&apos;myElement&apos;).style.size = &apos;100px&apos;;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;will &lt;strong&gt;NOT&lt;/strong&gt; work as expected, because the &lt;code&gt;getElementByClassName&lt;/code&gt; will return an array, and the array will &lt;strong&gt;NOT&lt;/strong&gt; have the &lt;code&gt;style&lt;/code&gt; property, you can access each &lt;code&gt;element&lt;/code&gt; by iterating through them.&lt;/p&gt;\n\n&lt;p&gt;That&apos;s why the function &lt;code&gt;getElementById&lt;/code&gt; worked for you, this function will return the direct object. Therefore you will be able to access the &lt;code&gt;style&lt;/code&gt; property.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;ES6&lt;/strong&gt; provides &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; method, which creates a new Array instance from an array-like or iterable object.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; boxes = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(boxes).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; v.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;background&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;green&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(boxes));&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;As you can see inside the code snippet, after using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; function you are then able to manipulate over each element.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;\nThe same solution using &lt;strong&gt;&lt;code&gt;jQuery&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.box&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&apos;background&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;green&apos;&lt;/span&gt;});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The following description is taken from &lt;a href=&quot;http://www.w3schools.com/jsref/met_document_getelementsbyclassname.asp&quot; rel=&quot;nofollow noreferrer&quot;&gt;this page&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The getElementsByClassName() method returns a collection of all elements in the document with the specified class name, as a NodeList object.&lt;/p&gt;\n&lt;p&gt;The NodeList object represents a collection of nodes. The nodes can be\naccessed by index numbers. The index starts at 0.&lt;/p&gt;\n&lt;p&gt;Tip: You can use the  length property of the NodeList object to determine the number of elements with a specified class name, then you can loop through all elements and extract the info you want.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So, as a parameter &lt;code&gt;getElementsByClassName&lt;/code&gt; would accept a class name.&lt;/p&gt;\n&lt;p&gt;If this is your HTML body:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;first&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;menuItem&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;second&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;menuItem&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;third&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;menuItem&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;footer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;then &lt;code&gt;var menuItems = document.getElementsByClassName(&apos;menuItem&apos;)&lt;/code&gt; would return a collection (not an array) of the 3 upper &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s, as they match the given class name.&lt;/p&gt;\n&lt;p&gt;You can then iterate over this nodes (&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s in this case) collection with:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; menuItemIndex = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ; menuItemIndex &amp;lt; menuItems.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; ; menuItemIndex ++) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; currentMenuItem = menuItems[menuItemIndex];\n   &lt;span class=&quot;hljs-comment&quot;&gt;// do stuff with currentMenuItem as a node.&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Please refer to &lt;a href=&quot;https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object&quot;&gt;this post&lt;/a&gt; for more on differences between elements and nodes.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;In Other Words&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;document.querySelector()&lt;/code&gt; selects only the first &lt;strong&gt;one&lt;/strong&gt; element of the specified selector. So it doesn&apos;t spit out an array, it&apos;s a single value. Similar to &lt;code&gt;document.getElementById()&lt;/code&gt; which fetches ID-elements only, since IDs have to be unique.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;document.querySelectorAll()&lt;/code&gt; selects &lt;strong&gt;all&lt;/strong&gt; elements with the specified selector and returns them in an array. Similar to &lt;code&gt;document.getElementsByClassName()&lt;/code&gt; for classes and &lt;code&gt;document.getElementsByTagName()&lt;/code&gt; tags only.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Why use querySelector?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It&apos;s used merely for the sole purpose of ease and brevity.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Why use getElement/sBy?*&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Faster performance.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Why this performance difference?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Both ways of selection has the purpose of creating a &lt;strong&gt;NodeList&lt;/strong&gt; for further use. \n&lt;strong&gt;querySelectors&lt;/strong&gt; generates a static NodeList with the selectors thus it must be first created from scratch.&lt;br&gt;\n&lt;strong&gt;getElement/sBy*&lt;/strong&gt; immediately adapts the existing live NodeList of the current DOM.&lt;/p&gt;\n\n&lt;p&gt;So, when to use which method it&apos;s up to you/your project/your device.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Infos&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://jsfiddle.net/Thielicious/teu8nbd4/&quot; rel=&quot;noreferrer&quot;&gt;Demo of all methods&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot; rel=&quot;noreferrer&quot;&gt;NodeList Documentation&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://jsperf.com/different-types-of-selecting&quot; rel=&quot;noreferrer&quot;&gt;Performance Test&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You could get a single element by running &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.myElement&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;100px&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but it&apos;s going to work for the first element with class .myElement.&lt;/p&gt;\n\n&lt;p&gt;If you would like apply this for all elements with the class I suggest you to use &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelectorAll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.myElement&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;) {\n    element.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;100px&apos;&lt;/span&gt;;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It returns Array-like list.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;You make that an Array as example&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; el = &lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;elem&quot;&lt;/span&gt;);\nel = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;slice&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(el); &lt;span class=&quot;hljs-comment&quot;&gt;//this line&lt;/span&gt;\nel[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(otherElem);  \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*\n * To hide all elements with the same class, \n * use looping to reach each element with that class. \n * In this case, looping is done recursively\n */&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;hideAll&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;className, i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;) =&amp;gt; {\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(className)[i]){ &lt;span class=&quot;hljs-comment&quot;&gt;//exits the loop when element of that id does not exist&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;; \n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(className)[i].&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;visibility&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//hide element&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;hideAll&lt;/span&gt;(className, i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//loop for the next element&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;hideAll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;appBanner&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//the function call requires the class name&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;With any browser supporting ES5+ (any browser basically above IE8) you can use the &lt;code&gt;Array.prototype.forEach&lt;/code&gt; method.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;forEach&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;answer&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n    el.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;color&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;;\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://caniuse.com/mdn-javascript_builtins_array_foreach&quot; rel=&quot;nofollow noreferrer&quot;&gt;caniuse source&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Super old school solution:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;        [].&lt;span class=&quot;hljs-property&quot;&gt;forEach&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myClass&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n            el.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;100px&apos;&lt;/span&gt;;\n        });\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;So I was told that this is a duplicate from my question and I should delete mine, which I will do so I can keep the forum clean and keep the right to make questions.&lt;/p&gt;\n&lt;p&gt;As I think mine and this question are really different I will point out the answer to mine, so I will complete the knowledge in this page and the information will not be lost.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Question&lt;/strong&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;I have a code in the snippet that has a &lt;code&gt;document.getElementsByClassName(&quot;close&quot;)[0]&lt;/code&gt;, what the &lt;code&gt;[0]&lt;/code&gt; is doing?&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I never seen a square brackets being used in &lt;code&gt;getElementsByClassName&lt;/code&gt; for what purpose is it used for?&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Also, how can I convert it to jQuery?&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;&lt;strong&gt;Answer&lt;/strong&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;The code in the snippet has a &lt;code&gt;[0]&lt;/code&gt; it is actually being used as a array and as it is a 0 it is referring to the first time the appointed class is being used.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Same thing above.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I couldn&apos;t really do it and no one answered it. In the part of the code that is refering to &lt;code&gt;event. target&lt;/code&gt; I can not use &lt;code&gt;$(&quot;#myModal&quot;)&lt;/code&gt; instead of &lt;code&gt;document.getElementById(&quot;myModal&quot;)&lt;/code&gt;, I think they should equivalent, but in this case the jQuery form substituting the standard one will not result in the desired effect.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onclick&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt; == modal) {\n        modal.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;display&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;;\n      }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; modal = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myModal&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; btn = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myBtn&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; span = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;close&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n\nbtn.&lt;span class=&quot;hljs-property&quot;&gt;onclick&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  modal.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;display&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;block&quot;&lt;/span&gt;;\n}\nspan.&lt;span class=&quot;hljs-property&quot;&gt;onclick&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  modal.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;display&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onclick&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt; == modal) {\n    modal.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;display&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;;\n  }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {&lt;span class=&quot;hljs-attribute&quot;&gt;font-family&lt;/span&gt;: Arial, Helvetica, sans-serif;}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.modal&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: none;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: fixed;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;rgb&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0.4&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.modal-content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fefefe&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#888&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;80%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.close&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#aaaaaa&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: right;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;28px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-weight&lt;/span&gt;: bold;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.close&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:hover&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.close&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:focus&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-decoration&lt;/span&gt;: none;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;cursor&lt;/span&gt;: pointer;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;Modal &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myBtn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Open Modal&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myModal&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;modal&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;modal-content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;close&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;&amp;amp;times;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Some text in the Modal..&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;It seems I can&apos;t really delete mine question and people are unsatisfied with it, I really don&apos;t know what I should do.&lt;/p&gt;\n    ","\n&lt;p&gt;An answer &lt;strong&gt;for Drenzii&apos;s specific case&lt;/strong&gt;...&lt;/p&gt;\n&lt;p&gt;You could make &lt;strong&gt;a function that will work for any of the &lt;code&gt;word&lt;/code&gt; elements&lt;/strong&gt; and pass in the number of the one you want to transform, like:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Binds `wordButtons` to an (array-like) HTMLCollection of buttons&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; wordButtons = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;word&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Applies the `slantWord` function to the first word button&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;slantWord&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Defines the `slantWord` function&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;slantWord&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;wordNumber&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; index = wordNumber - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Collection index is zero-based&lt;/span&gt;\n  wordButtons[index].&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;transform&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;rotate(7deg)&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Transforms the specified button&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wordGameContainer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;word word1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;WORD 1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;word word2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;WORD 2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;word word3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;WORD 3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;word word4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;WORD 4&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;moveWord()&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;playButton&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;PLAY&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    "]},"randomTags":[{"name":"https","slug":"https"},{"name":"fopen","slug":"fopen"},{"name":"replace","slug":"replace"},{"name":"date-conversion","slug":"date-conversion"},{"name":"url-parameters","slug":"url-parameters"},{"name":"android-asynctask","slug":"android-asynctask"},{"name":"keyword","slug":"keyword"},{"name":"quotes","slug":"quotes"},{"name":"css-selectors","slug":"css-selectors"},{"name":"3d","slug":"3d"},{"name":"c-strings","slug":"c-strings"},{"name":"git","slug":"git"},{"name":"dynamic-languages","slug":"dynamic-languages"},{"name":"copy-and-swap","slug":"copy-and-swap"},{"name":"sizeof","slug":"sizeof"},{"name":"jakarta-ee","slug":"jakarta-ee"},{"name":"for-loop","slug":"for-loop"},{"name":"super","slug":"super"},{"name":"browser","slug":"browser"},{"name":"datetime","slug":"datetime"}]},"__N_SSG":true}