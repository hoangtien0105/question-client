{"pageProps":{"data":{"count":1,"rows":[{"id":524,"title":"Serialize and Deserialize Json and Json Array in Unity","slug":"serialize-and-deserialize-json-and-json-array-in-unity-1657388273270","postType":"QUESTION","createdAt":"2022-07-09T17:37:53.000Z","updatedAt":"2022-07-09T17:37:53.000Z","tags":[{"id":2580,"name":"unity3d","slug":"unity3d","createdAt":"2022-07-09T17:37:53.000Z","updatedAt":"2022-07-09T17:37:53.000Z","Questions_Tags":{"questionId":524,"tagId":2580}}]}]},"slug":"unity3d","page":"1","answers":{"524":["\n&lt;p&gt;Unity added &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/JsonUtility.html&quot; rel=&quot;noreferrer&quot;&gt;JsonUtility&lt;/a&gt; to their API after &lt;strong&gt;5.3.3&lt;/strong&gt; Update. Forget about all the 3rd party libraries unless you are doing something more complicated. JsonUtility is faster than other Json libraries. Update to Unity &lt;strong&gt;5.3.3&lt;/strong&gt; version or above then try the solution below.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;JsonUtility&lt;/code&gt; is a lightweight API. Only simple types are supported. It does &lt;strong&gt;not&lt;/strong&gt; support collections such as Dictionary. One exception is &lt;code&gt;List&lt;/code&gt;. It supports &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; array!&lt;/p&gt;\n\n&lt;p&gt;If you need to serialize a &lt;code&gt;Dictionary&lt;/code&gt; or do something other than simply serializing and deserializing simple datatypes, use a third-party API. Otherwise, continue reading.&lt;/p&gt;\n\n&lt;p&gt;Example class to serialize:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;[&lt;span class=&quot;hljs-meta&quot;&gt;Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Player&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerId;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerLoc;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerNick;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;1. ONE DATA OBJECT (NON-ARRAY JSON)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Serializing Part A&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Serialize&lt;/em&gt; to Json with the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/JsonUtility.ToJson.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;public static string ToJson(object obj);&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Player playerInstance = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Player();\nplayerInstance.playerId = &lt;span class=&quot;hljs-string&quot;&gt;&quot;8484239823&quot;&lt;/span&gt;;\nplayerInstance.playerLoc = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;;\nplayerInstance.playerNick = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Random Nick&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Convert to JSON&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerToJson = JsonUtility.ToJson(playerInstance);\nDebug.Log(playerToJson);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Output&lt;/em&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;{&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;8484239823&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerNick&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Random Nick&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Serializing Part B&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Serialize&lt;/em&gt; to Json with the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/JsonUtility.ToJson.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;public static string ToJson(object obj, bool prettyPrint);&lt;/code&gt;&lt;/a&gt; method overload. Simply passing &lt;code&gt;true&lt;/code&gt; to the &lt;code&gt;JsonUtility.ToJson&lt;/code&gt; function will format the data. Compare the output below to the output above.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Player playerInstance = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Player();\nplayerInstance.playerId = &lt;span class=&quot;hljs-string&quot;&gt;&quot;8484239823&quot;&lt;/span&gt;;\nplayerInstance.playerLoc = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;;\nplayerInstance.playerNick = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Random Nick&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Convert to JSON&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerToJson = JsonUtility.ToJson(playerInstance, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\nDebug.Log(playerToJson);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Output&lt;/em&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;8484239823&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerNick&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Random Nick&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Deserializing Part A&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Deserialize&lt;/em&gt; json with the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/JsonUtility.ToJson.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;public static T FromJson(string json);&lt;/code&gt;&lt;/a&gt; method overload.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; jsonString = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;playerId\\&quot;:\\&quot;8484239823\\&quot;,\\&quot;playerLoc\\&quot;:\\&quot;Powai\\&quot;,\\&quot;playerNick\\&quot;:\\&quot;Random Nick\\&quot;}&quot;&lt;/span&gt;;\nPlayer player = JsonUtility.FromJson&amp;lt;Player&amp;gt;(jsonString);\nDebug.Log(player.playerLoc);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Deserializing Part B&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Deserialize&lt;/em&gt; json with the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/JsonUtility.ToJson.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;public static object FromJson(string json, Type type);&lt;/code&gt;&lt;/a&gt; method overload.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; jsonString = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;playerId\\&quot;:\\&quot;8484239823\\&quot;,\\&quot;playerLoc\\&quot;:\\&quot;Powai\\&quot;,\\&quot;playerNick\\&quot;:\\&quot;Random Nick\\&quot;}&quot;&lt;/span&gt;;\nPlayer player = (Player)JsonUtility.FromJson(jsonString, &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt;(Player));\nDebug.Log(player.playerLoc);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Deserializing Part C&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Deserialize&lt;/em&gt; json with the &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/JsonUtility.ToJson.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;public static void FromJsonOverwrite(string json, object objectToOverwrite);&lt;/code&gt;&lt;/a&gt; method. When &lt;code&gt;JsonUtility.FromJsonOverwrite&lt;/code&gt; is used, no new instance of that Object you are deserializing to will be created. It will simply re-use the instance you pass in and overwrite its values.&lt;/p&gt;\n\n&lt;p&gt;This is efficient and should be used if possible.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Player playerInstance;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Start&lt;/span&gt;()&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Must create instance once&lt;/span&gt;\n    playerInstance = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Player();\n    deserialize();\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;deserialize&lt;/span&gt;()&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; jsonString = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;playerId\\&quot;:\\&quot;8484239823\\&quot;,\\&quot;playerLoc\\&quot;:\\&quot;Powai\\&quot;,\\&quot;playerNick\\&quot;:\\&quot;Random Nick\\&quot;}&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Overwrite the values in the existing class instance &quot;playerInstance&quot;. Less memory Allocation&lt;/span&gt;\n    JsonUtility.FromJsonOverwrite(jsonString, playerInstance);\n    Debug.Log(playerInstance.playerLoc);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;2. MULTIPLE DATA(ARRAY JSON)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Your Json contains multiple data objects. For example &lt;code&gt;playerId&lt;/code&gt; appeared more than &lt;strong&gt;once&lt;/strong&gt;. Unity&apos;s &lt;code&gt;JsonUtility&lt;/code&gt; does not support array as it is still new but you can use a &lt;a href=&quot;https://www.boxheadproductions.com.au/deserializing-top-level-arrays-in-json-with-unity/&quot; rel=&quot;noreferrer&quot;&gt;helper&lt;/a&gt; class from this person to get &lt;strong&gt;array&lt;/strong&gt; working with &lt;code&gt;JsonUtility&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Create a class called &lt;code&gt;JsonHelper&lt;/code&gt;. Copy the JsonHelper directly from below.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;JsonHelper&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; T[] &lt;span class=&quot;hljs-title&quot;&gt;FromJson&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; json&lt;/span&gt;)&lt;/span&gt;\n    {\n        Wrapper&amp;lt;T&amp;gt; wrapper = JsonUtility.FromJson&amp;lt;Wrapper&amp;lt;T&amp;gt;&amp;gt;(json);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; wrapper.Items;\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ToJson&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;T[] array&lt;/span&gt;)&lt;/span&gt;\n    {\n        Wrapper&amp;lt;T&amp;gt; wrapper = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Wrapper&amp;lt;T&amp;gt;();\n        wrapper.Items = array;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; JsonUtility.ToJson(wrapper);\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ToJson&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;T[] array, &lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt; prettyPrint&lt;/span&gt;)&lt;/span&gt;\n    {\n        Wrapper&amp;lt;T&amp;gt; wrapper = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Wrapper&amp;lt;T&amp;gt;();\n        wrapper.Items = array;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; JsonUtility.ToJson(wrapper, prettyPrint);\n    }\n\n    [&lt;span class=&quot;hljs-meta&quot;&gt;Serializable&lt;/span&gt;]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Wrapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; T[] Items;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Serializing Json Array&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Player[] playerInstance = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Player[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;];\n\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Player();\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].playerId = &lt;span class=&quot;hljs-string&quot;&gt;&quot;8484239823&quot;&lt;/span&gt;;\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].playerLoc = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;;\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].playerNick = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Random Nick&quot;&lt;/span&gt;;\n\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Player();\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].playerId = &lt;span class=&quot;hljs-string&quot;&gt;&quot;512343283&quot;&lt;/span&gt;;\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].playerLoc = &lt;span class=&quot;hljs-string&quot;&gt;&quot;User2&quot;&lt;/span&gt;;\nplayerInstance[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].playerNick = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Rand Nick 2&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Convert to JSON&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerToJson = JsonHelper.ToJson(playerInstance, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\nDebug.Log(playerToJson);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Output&lt;/em&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;Items&quot;&lt;/span&gt;: [\n        {\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;8484239823&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerNick&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Random Nick&quot;&lt;/span&gt;\n        },\n        {\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;512343283&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;User2&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;playerNick&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Rand Nick 2&quot;&lt;/span&gt;\n        }\n    ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Deserializing Json Array&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; jsonString = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\r\\n    \\&quot;Items\\&quot;: [\\r\\n        {\\r\\n            \\&quot;playerId\\&quot;: \\&quot;8484239823\\&quot;,\\r\\n            \\&quot;playerLoc\\&quot;: \\&quot;Powai\\&quot;,\\r\\n            \\&quot;playerNick\\&quot;: \\&quot;Random Nick\\&quot;\\r\\n        },\\r\\n        {\\r\\n            \\&quot;playerId\\&quot;: \\&quot;512343283\\&quot;,\\r\\n            \\&quot;playerLoc\\&quot;: \\&quot;User2\\&quot;,\\r\\n            \\&quot;playerNick\\&quot;: \\&quot;Rand Nick 2\\&quot;\\r\\n        }\\r\\n    ]\\r\\n}&quot;&lt;/span&gt;;\n\nPlayer[] player = JsonHelper.FromJson&amp;lt;Player&amp;gt;(jsonString);\nDebug.Log(player[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].playerLoc);\nDebug.Log(player[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].playerLoc);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Output&lt;/em&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Powai&lt;/p&gt;\n  \n  &lt;p&gt;User2&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;If this is a Json array from the server and you did not create it by hand&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;You may have to Add &lt;code&gt;{&quot;Items&quot;:&lt;/code&gt; in front of the received string then add &lt;code&gt;}&lt;/code&gt; at the end of it.&lt;/p&gt;\n\n&lt;p&gt;I made a simple function for this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;fixJson&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;Items\\&quot;:&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;}&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then you can use it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; jsonString = fixJson(yourJsonFromServer);\nPlayer[] player = JsonHelper.FromJson&amp;lt;Player&amp;gt;(jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;3.Deserialize json string without class &amp;amp;&amp;amp; De-serializing Json with numeric properties&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This is a Json that starts with a number or numeric properties.&lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;{ \n&lt;span class=&quot;hljs-string&quot;&gt;&quot;USD&quot;&lt;/span&gt; : {&lt;span class=&quot;hljs-string&quot;&gt;&quot;15m&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1740.01&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;last&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1740.01&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;buy&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1740.01&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;sell&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1744.74&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;symbol&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;}, \n\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;ISK&quot;&lt;/span&gt; : {&lt;span class=&quot;hljs-string&quot;&gt;&quot;15m&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;179479.11&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;last&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;179479.11&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;buy&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;179479.11&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;sell&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;179967&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;symbol&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;kr&quot;&lt;/span&gt;},\n\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;NZD&quot;&lt;/span&gt; : {&lt;span class=&quot;hljs-string&quot;&gt;&quot;15m&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;2522.84&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;last&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;2522.84&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;buy&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;2522.84&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;sell&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;2529.69&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;symbol&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;}\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Unity&apos;s &lt;code&gt;JsonUtility&lt;/code&gt; does not support this because the &quot;15m&quot; property starts with a number. A class variable cannot start with an integer.&lt;/p&gt;\n\n&lt;p&gt;Download &lt;em&gt;&lt;code&gt;SimpleJSON.cs&lt;/code&gt;&lt;/em&gt; from Unity&apos;s &lt;a href=&quot;http://wiki.unity3d.com/index.php/SimpleJSON&quot; rel=&quot;noreferrer&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;To get the &quot;15m&quot; property of USD:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; N = JSON.Parse(yourJsonString);\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; price = N[&lt;span class=&quot;hljs-string&quot;&gt;&quot;USD&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;15m&quot;&lt;/span&gt;].Value;\nDebug.Log(price);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To get the &quot;15m&quot; property of ISK:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; N = JSON.Parse(yourJsonString);\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; price = N[&lt;span class=&quot;hljs-string&quot;&gt;&quot;ISK&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;15m&quot;&lt;/span&gt;].Value;\nDebug.Log(price);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To get the &quot;15m&quot; property of NZD:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; N = JSON.Parse(yourJsonString);\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; price = N[&lt;span class=&quot;hljs-string&quot;&gt;&quot;NZD&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;15m&quot;&lt;/span&gt;].Value;\nDebug.Log(price);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The rest of the Json properties that doesn&apos;t start with a numeric digit can be handled by Unity&apos;s JsonUtility.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;4.TROUBLESHOOTING JsonUtility:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Problems when serializing with &lt;code&gt;JsonUtility.ToJson&lt;/code&gt;?&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Getting empty string or  &quot;&lt;code&gt;{}&lt;/code&gt;&quot;  with &lt;code&gt;JsonUtility.ToJson&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;. Make sure that the class is not an array. If it is, use the helper class above with &lt;code&gt;JsonHelper.ToJson&lt;/code&gt; instead of &lt;code&gt;JsonUtility.ToJson&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;. Add &lt;code&gt;[Serializable]&lt;/code&gt; to the top of the class you are serializing. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;. Remove property from the class. For example, in the variable, &lt;code&gt;public string playerId { get; set; }&lt;/code&gt; &lt;strong&gt;remove&lt;/strong&gt; &lt;code&gt;{ get; set; }&lt;/code&gt;. Unity cannot serialize this.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Problems when deserializing with &lt;code&gt;JsonUtility.FromJson&lt;/code&gt;?&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;. If you get &lt;code&gt;Null&lt;/code&gt;, make sure that the Json is not a Json array. If it is, use the helper class above with &lt;code&gt;JsonHelper.FromJson&lt;/code&gt; instead of &lt;code&gt;JsonUtility.FromJson&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;. If you get &lt;code&gt;NullReferenceException&lt;/code&gt; while deserializing, add &lt;code&gt;[Serializable]&lt;/code&gt; to the top of the class.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;.Any other problems, verify that your json is valid. Go to this site &lt;a href=&quot;http://json2csharp.com/&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt; and paste the json. It should show you if the json is valid. It should also generate the proper class with the Json. Just make sure to remove  &lt;strong&gt;remove&lt;/strong&gt; &lt;code&gt;{ get; set; }&lt;/code&gt; from each variable and also add &lt;code&gt;[Serializable]&lt;/code&gt; to the top of each  class generated.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Newtonsoft.Json:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If for some reason &lt;strong&gt;Newtonsoft.Json&lt;/strong&gt; must be used then check out the forked version for Unity &lt;a href=&quot;https://github.com/SaladLab/Json.Net.Unity3D&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;. Note that you may experience crash if certain feature is used. Be careful.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;em&gt;To answer your question&lt;/em&gt;:&lt;/p&gt;\n\n&lt;p&gt;Your original data is&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt; [{&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Andheri&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Churchgate&quot;&lt;/span&gt;}]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt; &lt;code&gt;{&quot;Items&quot;:&lt;/code&gt; in &lt;strong&gt;front&lt;/strong&gt; of it then &lt;strong&gt;add&lt;/strong&gt; &lt;code&gt;}&lt;/code&gt; at the &lt;strong&gt;end&lt;/strong&gt; of it. &lt;/p&gt;\n\n&lt;p&gt;Code to do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;serviceData = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;Items\\&quot;:&quot;&lt;/span&gt; + serviceData + &lt;span class=&quot;hljs-string&quot;&gt;&quot;}&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you have:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt; {&lt;span class=&quot;hljs-string&quot;&gt;&quot;Items&quot;&lt;/span&gt;:[{&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Powai&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Andheri&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerId&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;playerLoc&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Churchgate&quot;&lt;/span&gt;}]}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To &lt;strong&gt;serialize&lt;/strong&gt; the &lt;strong&gt;multiple&lt;/strong&gt; data from php as &lt;strong&gt;arrays&lt;/strong&gt;, you can now do&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; player[] playerInstance;\nplayerInstance = JsonHelper.FromJson&amp;lt;player&amp;gt;(serviceData);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;playerInstance[0]&lt;/code&gt; is your first data&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;playerInstance[1]&lt;/code&gt; is your second data&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;playerInstance[2]&lt;/code&gt; is your third data&lt;/p&gt;\n\n&lt;p&gt;or data inside the class with &lt;code&gt;playerInstance[0].playerLoc&lt;/code&gt;, &lt;code&gt;playerInstance[1].playerLoc&lt;/code&gt;, &lt;code&gt;playerInstance[2].playerLoc&lt;/code&gt; ......&lt;/p&gt;\n\n&lt;p&gt;You can use &lt;code&gt;playerInstance.Length&lt;/code&gt; to check the length before accessing it.&lt;/p&gt;\n\n&lt;p&gt;NOTE:  &lt;strong&gt;Remove&lt;/strong&gt; &lt;code&gt;{ get; set; }&lt;/code&gt; from the &lt;code&gt;player&lt;/code&gt; class. If you have &lt;code&gt;{ get; set; }&lt;/code&gt;, it won&apos;t work. Unity&apos;s &lt;code&gt;JsonUtility&lt;/code&gt; does &lt;strong&gt;NOT&lt;/strong&gt; work with class members that are defined as &lt;strong&gt;properties&lt;/strong&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Assume you got a JSON like this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;[\n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;qrcode&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;symbol&quot;&lt;/span&gt;: [\n            {\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;seq&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;HelloWorld9887725216&quot;&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;error&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;\n            }\n        ]\n    }\n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To parse the above JSON in unity, you can create JSON model like this.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;[&lt;span class=&quot;hljs-meta&quot;&gt;System.Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;QrCodeResult&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; QRCodeData[] result;\n}\n\n[&lt;span class=&quot;hljs-meta&quot;&gt;System.Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Symbol&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; seq;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; data;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; error;\n}\n\n[&lt;span class=&quot;hljs-meta&quot;&gt;System.Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;QRCodeData&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; type;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Symbol[] symbol;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then simply parse in the following manner...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myObject = JsonUtility.FromJson&amp;lt;QrCodeResult&amp;gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;result\\&quot;:&quot;&lt;/span&gt; + jsonString.ToString() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;}&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can modify the JSON/CODE according to your need.\n&lt;a href=&quot;https://docs.unity3d.com/Manual/JSONSerialization.html&quot; rel=&quot;noreferrer&quot;&gt;https://docs.unity3d.com/Manual/JSONSerialization.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;you  have to add &lt;code&gt;[System.Serializable]&lt;/code&gt; to &lt;code&gt;PlayerItem&lt;/code&gt; class ,like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System;\n[&lt;span class=&quot;hljs-meta&quot;&gt;System.Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;PlayerItem&lt;/span&gt;   {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerId;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerLoc;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; playerNick;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Unity &amp;lt;= 2019&lt;/h2&gt;\n&lt;p&gt;Narottam Goyal had a good idea of wrapping the array in a json object, and then deserializing into a struct.\nThe following uses Generics to solve this for arrays of all type, as opposed to making a new class everytime.&lt;/p&gt;\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;[&lt;span class=&quot;hljs-meta&quot;&gt;System.Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;JsonArrayWrapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; T wrap_result;\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; T &lt;span class=&quot;hljs-title&quot;&gt;ParseJsonArray&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; json&lt;/span&gt;)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; temp = JsonUtility.FromJson&amp;lt;JsonArrayWrapper&amp;lt;T&amp;gt;&amp;gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;wrap_result\\&quot;:&quot;&lt;/span&gt; + json + &lt;span class=&quot;hljs-string&quot;&gt;&quot;}&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; temp.wrap_result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It can be used in the following way:&lt;/p&gt;\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;[] options = ParseJsonArray&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;[]&amp;gt;(someArrayOfStringsJson);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Unity 2020&lt;/h2&gt;\n&lt;p&gt;In Unity 2020 there is an official &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/com.unity.nuget.newtonsoft-json.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;newtonsoft&lt;/a&gt; package which is a far better json library.&lt;/p&gt;\n    ","\n&lt;p&gt;To Read JSON File, refer this simple example&lt;/p&gt;\n\n&lt;p&gt;Your JSON File (StreamingAssets/Player.json)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;MyName&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;Level&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;C# Script&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Demo&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ReadJSON&lt;/span&gt;()&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; path = Application.streamingAssetsPath + &lt;span class=&quot;hljs-string&quot;&gt;&quot;/Player.json&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; JSONString = File.ReadAllText(path);\n        Player player = JsonUtility.FromJson&amp;lt;Player&amp;gt;(JSONString);\n        Debug.Log(player.Name);\n    }\n}\n\n[&lt;span class=&quot;hljs-meta&quot;&gt;System.Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Player&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; Name;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; Level;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Like @Maximiliangerhardt said, MiniJson do not have the capability to deserialize properly. I used JsonFx and works like a charm. Works with the &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;player[] p = JsonReader.Deserialize&amp;lt;player[]&amp;gt;(serviceData);\nDebug.Log(p[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].playerId +&lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;+ p[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].playerLoc+&lt;span class=&quot;hljs-string&quot;&gt;&quot;--&quot;&lt;/span&gt;+ p[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].playerId + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; + p[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].playerLoc+&lt;span class=&quot;hljs-string&quot;&gt;&quot;--&quot;&lt;/span&gt;+ p[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].playerId + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; + p[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].playerLoc);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;Newtonsoft.Json&lt;/code&gt; just add &lt;code&gt;Newtonsoft.dll&lt;/code&gt; to your project and use below script&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; Newtonsoft.Json;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; UnityEngine;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NewBehaviourScript&lt;/span&gt; : &lt;span class=&quot;hljs-title&quot;&gt;MonoBehaviour&lt;/span&gt;\n{\n\n    [&lt;span class=&quot;hljs-meta&quot;&gt;Serializable&lt;/span&gt;]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Person&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; id;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; name;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Person[] person;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Start&lt;/span&gt;()&lt;/span&gt;\n    {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myjson = JsonConvert.SerializeObject(person);\n\n        print(myjson);\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/m1adp.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/m1adp.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;another solution is using &lt;a href=&quot;https://www.boxheadproductions.com.au/deserializing-top-level-arrays-in-json-with-unity/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JsonHelper&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; Newtonsoft.Json;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; UnityEngine;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NewBehaviourScript&lt;/span&gt; : &lt;span class=&quot;hljs-title&quot;&gt;MonoBehaviour&lt;/span&gt;\n{\n\n    [&lt;span class=&quot;hljs-meta&quot;&gt;Serializable&lt;/span&gt;]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Person&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; id;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; name;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Person[] person;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Start&lt;/span&gt;()&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myjson = JsonHelper.ToJson(person);\n\n        print(myjson);\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/1XprT.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/1XprT.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Don&apos;t trim the &lt;code&gt;[]&lt;/code&gt; and you should be fine. &lt;code&gt;[]&lt;/code&gt; identify a JSON array which is exactly what you require to be able to iterate its elements.&lt;/p&gt;\n    ","\n&lt;p&gt;IF you are using Vector3 this is what i did &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1- I create a class Name it Player&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Collections;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Collections.Generic;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; UnityEngine;\n[&lt;span class=&quot;hljs-meta&quot;&gt;Serializable&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Player&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Vector3[] Position;\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;2- then i call it like this&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( _ispressed == &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)\n        {\n            Player playerInstance = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Player();\n            playerInstance.Position = newPos;\n            &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; jsonData = JsonUtility.ToJson(playerInstance);\n\n            reference.Child(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Position&quot;&lt;/span&gt; + Random.Range(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000000&lt;/span&gt;)).SetRawJsonValueAsync(jsonData);\n            Debug.Log(jsonData);\n            _ispressed = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;3- and this is the result&lt;/strong&gt; &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&quot;Position&quot;:[\n  {&quot;x&quot;:-2.8567452430725099,&quot;y&quot;:-2.4323320388793947,&quot;z&quot;:0.0}]}&lt;/p&gt;\n&lt;/blockquote&gt;\n    "]},"randomTags":[{"name":"local-storage","slug":"local-storage"},{"name":"nullpointerexception","slug":"nullpointerexception"},{"name":"pdo","slug":"pdo"},{"name":"pivot","slug":"pivot"},{"name":"git-rewrite-history","slug":"git-rewrite-history"},{"name":"instantiation","slug":"instantiation"},{"name":"malloc","slug":"malloc"},{"name":"algorithm","slug":"algorithm"},{"name":"turbo-c++","slug":"turbo-c++"},{"name":"most-vexing-parse","slug":"most-vexing-parse"},{"name":"object","slug":"object"},{"name":"tostring","slug":"tostring"},{"name":"return-value-optimization","slug":"return-value-optimization"},{"name":"raw-types","slug":"raw-types"},{"name":"singleton","slug":"singleton"},{"name":"tidyr","slug":"tidyr"},{"name":"viewmodel","slug":"viewmodel"},{"name":"debugging","slug":"debugging"},{"name":"variable-length-array","slug":"variable-length-array"},{"name":"event-delegation","slug":"event-delegation"}]},"__N_SSG":true}