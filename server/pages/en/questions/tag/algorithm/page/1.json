{"pageProps":{"data":{"count":1,"rows":[{"id":255,"title":"How do I check if an array includes a value in JavaScript?","slug":"how-do-i-check-if-an-array-includes-a-value-in-javascript-1657387421185","postType":"QUESTION","createdAt":"2022-07-09T17:23:41.000Z","updatedAt":"2022-07-09T17:23:41.000Z","tags":[{"id":1644,"name":"algorithm","slug":"algorithm","createdAt":"2022-07-09T17:23:41.000Z","updatedAt":"2022-07-09T17:23:41.000Z","Questions_Tags":{"questionId":255,"tagId":1644}}]}]},"slug":"algorithm","page":"1","answers":{"255":["\n&lt;p&gt;Modern browsers have &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#browser_compatibility&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array#includes&lt;/code&gt;&lt;/a&gt;, which does &lt;em&gt;exactly&lt;/em&gt; that and &lt;a href=&quot;https://kangax.github.io/compat-table/es2016plus/#test-Array.prototype.includes&quot; rel=&quot;noreferrer&quot;&gt;is widely supported&lt;/a&gt; by everyone except IE:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([&lt;span class=&quot;hljs-string&quot;&gt;&apos;joe&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;jane&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mary&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;jane&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;You can also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array#indexOf&lt;/code&gt;&lt;/a&gt;, which is less direct, but doesn&apos;t require polyfills for outdated browsers.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([&lt;span class=&quot;hljs-string&quot;&gt;&apos;joe&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;jane&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mary&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;jane&apos;&lt;/span&gt;) &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Many frameworks also offer similar methods:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;jQuery: &lt;a href=&quot;https://api.jquery.com/jquery.inarray/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;$.inArray(value, array, [fromIndex])&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Underscore.js: &lt;a href=&quot;https://underscorejs.org/#contains&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;_.contains(array, value)&lt;/code&gt;&lt;/a&gt; (also aliased as &lt;code&gt;_.include&lt;/code&gt; and &lt;code&gt;_.includes&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;Dojo Toolkit: &lt;a href=&quot;https://dojotoolkit.org/reference-guide/1.10/dojo/indexOf.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;dojo.indexOf(array, value, [fromIndex, findLast])&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Prototype: &lt;a href=&quot;http://api.prototypejs.org/language/Array/prototype/indexOf/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;array.indexOf(value)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;MooTools: &lt;a href=&quot;https://mootools.net/core/docs/1.6.0/Types/Array#Array:indexOf&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;array.indexOf(value)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;MochiKit: &lt;a href=&quot;http://mochi.github.io/mochikit/doc/html/MochiKit/Base.html#fn-findvalue&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;findValue(array, value)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;MS Ajax: &lt;a href=&quot;https://web.archive.org/web/20140819232945/http://www.asp.net/ajaxlibrary/Reference.Array-indexOf-Function.ashx&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;array.indexOf(value)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Ext: &lt;a href=&quot;https://docs.sencha.com/extjs/7.5.1/modern/Ext.Array.html#method-contains&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Ext.Array.contains(array, value)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Lodash: &lt;a href=&quot;https://lodash.com/docs#includes&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;_.includes(array, value, [from])&lt;/code&gt;&lt;/a&gt; (is &lt;code&gt;_.contains&lt;/code&gt; prior 4.0.0)&lt;/li&gt;\n&lt;li&gt;Ramda: &lt;a href=&quot;https://ramdajs.com/docs/#includes&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;R.includes(value, array)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Notice that some frameworks implement this as a function, while others add the function to the array prototype.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Update from 2019: This answer is from 2008 (11 years old!) and is not relevant for modern JS usage. The promised performance improvement was based on a benchmark done in browsers of that time. It might not be relevant to modern JS execution contexts. If you need an easy solution, look for other answers. If you need the best performance, benchmark for yourself in the relevant execution environments.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;As others have said, the iteration through the array is probably the best way, but it &lt;a href=&quot;https://web.archive.org/web/20170403221045/https://blogs.oracle.com/greimer/entry/best_way_to_code_a&quot; rel=&quot;noreferrer&quot;&gt;has been proven&lt;/a&gt; that a decreasing &lt;code&gt;while&lt;/code&gt; loop is the fastest way to iterate in JavaScript. So you may want to rewrite your code as follows:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (i--) {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a[i] === obj) {\n           &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n       }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Of course, you may as well extend Array prototype:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;contains&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (i--) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i] === obj) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And now you can simply use the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; true&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/indexOf&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt; maybe, but it&apos;s a &quot;JavaScript extension to the ECMA-262 standard; as such it may not be present in other implementations of the standard.&quot;&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n[&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;baz&quot;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) =&amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;AFAICS &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/k4h76zbx%5C%28VS.85%5C%29.aspx&quot; rel=&quot;noreferrer&quot;&gt;Microsoft does &lt;em&gt;not&lt;/em&gt; offer some kind of alternative&lt;/a&gt; to this, but you can add similar functionality to arrays in Internet Explorer (and other browsers that don&apos;t support &lt;code&gt;indexOf&lt;/code&gt;) if you want to, as a &lt;a href=&quot;http://google.com/search?q=indexof%20internet%20explorer&quot; rel=&quot;noreferrer&quot;&gt;quick Google search reveals&lt;/a&gt; (for example, &lt;a href=&quot;http://soledadpenades.com/2007/05/17/arrayindexof-in-internet-explorer/&quot; rel=&quot;noreferrer&quot;&gt;this one&lt;/a&gt;).&lt;/p&gt;\n    ","\n&lt;p&gt;The top answers assume primitive types but if you want to find out if an array contains an &lt;strong&gt;object&lt;/strong&gt; with some trait, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot; rel=&quot;noreferrer&quot;&gt;Array.prototype.some()&lt;/a&gt; is an elegant solution:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; items = [ {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;} ]\n\nitems.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot;&gt;// returns true&lt;/span&gt;\nitems.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;4&apos;&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot;&gt;// returns false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The nice thing about it is that the iteration is aborted once the element is found so unnecessary iteration cycles are spared.&lt;/p&gt;\n&lt;p&gt;Also, it fits nicely in an &lt;code&gt;if&lt;/code&gt; statement since it returns a boolean:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (items.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;)) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;* As jamess pointed out in the comment, at the time of this answer, September 2018, &lt;code&gt;Array.prototype.some()&lt;/code&gt; is fully supported: &lt;a href=&quot;http://kangax.github.io/compat-table/es5/#test-Array_methods_Array.prototype.some_a_href=_https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some_title=_MDN_documentation_img_src=_../mdn.png_alt=_MDN_(Mozilla_Development_Network)_logo_width=_15_height=_13_/_/a_nbsp;&quot; rel=&quot;noreferrer&quot;&gt;caniuse.com support table&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;ECMAScript 7 introduces &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.prototype.includes&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;It can be used like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It also accepts an optional second argument &lt;code&gt;fromIndex&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// false&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Unlike &lt;code&gt;indexOf&lt;/code&gt;, which uses &lt;a href=&quot;https://262.ecma-international.org/12.0/#sec-strict-equality-comparison&quot; rel=&quot;noreferrer&quot;&gt;Strict Equality Comparison&lt;/a&gt;, &lt;code&gt;includes&lt;/code&gt; compares using &lt;a href=&quot;https://262.ecma-international.org/12.0/#sec-samevaluezero&quot; rel=&quot;noreferrer&quot;&gt;SameValueZero&lt;/a&gt; equality algorithm. That means that you can detect if an array includes a &lt;code&gt;NaN&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;NaN&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;NaN&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Also unlike &lt;code&gt;indexOf&lt;/code&gt;, &lt;code&gt;includes&lt;/code&gt; does not skip missing indices:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It can be &lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-array&quot; rel=&quot;noreferrer&quot;&gt;polyfilled&lt;/a&gt; to make it work on all browsers.&lt;/p&gt;\n    ","\n&lt;p&gt;Let&apos;s say you&apos;ve defined an array like so:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; array = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Below are three ways of checking whether there is a &lt;code&gt;3&lt;/code&gt; in there. All of them return either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;\n\n&lt;h3&gt;Native Array method (since ES2016) (&lt;a href=&quot;https://caniuse.com/#feat=array-includes&quot; rel=&quot;noreferrer&quot;&gt;compatibility table&lt;/a&gt;)&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;array.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;As custom Array method (pre ES2016)&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Prefixing the method with &apos;_&apos; to avoid name clashes&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;_includes&apos;&lt;/span&gt;, { &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(v) !== -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; }})\narray.&lt;span class=&quot;hljs-title function_&quot;&gt;_includes&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Simple function&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;a, v&lt;/span&gt;) =&amp;gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(v) !== -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(array, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s a &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf&quot; rel=&quot;noreferrer&quot;&gt;JavaScript 1.6 compatible&lt;/a&gt; implementation of &lt;code&gt;Array.indexOf&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;indexOf&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;indexOf&lt;/span&gt; = [].&lt;span class=&quot;hljs-property&quot;&gt;indexOf&lt;/span&gt; ?\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, obj, &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(obj, &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;);\n        } :\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, obj, &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// (for IE6)&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; l = arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;,\n                i = &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; ? &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;((&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; * &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;) + (&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? l : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n            i = i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; : i;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (; i &amp;lt; l; i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; arr &amp;amp;&amp;amp; arr[i] === obj) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; i;\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        };\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isInArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, search&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(search) &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;isInArray&lt;/span&gt;(my_array, &lt;span class=&quot;hljs-string&quot;&gt;&quot;my_value&quot;&lt;/span&gt;))\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;//...&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Extending the JavaScript &lt;code&gt;Array&lt;/code&gt; object is a really bad idea because you introduce new properties (your custom methods) into &lt;code&gt;for-in&lt;/code&gt; loops which can break existing scripts. A few years ago the authors of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework&quot; rel=&quot;noreferrer&quot;&gt;Prototype&lt;/a&gt; library had to re-engineer their library implementation to remove just this kind of thing.&lt;/p&gt;\n\n&lt;p&gt;If you don&apos;t need to worry about compatibility with other JavaScript running on your page, go for it, otherwise, I&apos;d recommend the more awkward, but safer free-standing function solution.&lt;/p&gt;\n    ","\n&lt;h2&gt;Performance&lt;/h2&gt;\n\n&lt;p&gt;Today 2020.01.07 I perform tests on MacOs HighSierra 10.13.6 on Chrome v78.0.0, Safari v13.0.4 and Firefox v71.0.0 for 15 chosen solutions. Conclusions&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;solutions based on &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt; and surprisingly &lt;code&gt;find&lt;/code&gt; (K,N,O) are slowest on all browsers&lt;/li&gt;\n&lt;li&gt;the es6 &lt;code&gt;includes&lt;/code&gt; (F) is fast only on chrome&lt;/li&gt;\n&lt;li&gt;the solutions based on &lt;code&gt;for&lt;/code&gt; (C,D) and &lt;code&gt;indexOf&lt;/code&gt; (G,H) are quite-fast on all browsers on small and big arrays so probably they are best choice for efficient solution&lt;/li&gt;\n&lt;li&gt;the solutions where index decrease during loop, (B) is slower probably because the way of &lt;a href=&quot;https://stackoverflow.com/questions/1950878/c-for-loop-indexing-is-forward-indexing-faster-in-new-cpus&quot;&gt;CPU cache works&lt;/a&gt;. &lt;/li&gt;\n&lt;li&gt;I also run test for big array when searched element was on position 66% of array length, and solutions based on &lt;code&gt;for&lt;/code&gt; (C,D,E) gives similar results (~630 ops/sec - but the E on safari and firefox was 10-20% slower than C and D)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Results&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/YPIG1.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/YPIG1.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Details&lt;/h2&gt;\n\n&lt;p&gt;I perform 2 tests cases: for array with 10 elements, and array with 1 milion elements. In both cases we put searched element in the array middle.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;name,f&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${name}&lt;/span&gt;: 3-&lt;span class=&quot;hljs-subst&quot;&gt;${f(arr,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s10&apos;&lt;/span&gt;)}&lt;/span&gt;  &apos;s7&apos;-&lt;span class=&quot;hljs-subst&quot;&gt;${f(arr,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s7&apos;&lt;/span&gt;)}&lt;/span&gt;  6-&lt;span class=&quot;hljs-subst&quot;&gt;${f(arr,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;)}&lt;/span&gt; &apos;s3&apos;-&lt;span class=&quot;hljs-subst&quot;&gt;${f(arr,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s3&apos;&lt;/span&gt;)}&lt;/span&gt;`&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s6&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s7&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s8&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s9&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;s10&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-comment&quot;&gt;//arr = new Array(1000000).fill(123); arr[500000]=7;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, val&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; n = a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (i++&lt;span class=&quot;language-xml&quot;&gt;&amp;lt;n) {\n       if (a[i] === val) {\n           return true;\n       }\n    }\n    return false;\n}\n\nfunction B(a, val) {\n    var i = a.length;\n    while (i--) {\n       if (a[i] === val) {\n           return true;\n       }\n    }\n    return false;\n}\n\nfunction C(a, val) {\n    for (var i = 0; i &amp;lt; a.length; i++) {\n        if (a[i] === val) return true;\n    }\n    return false;\n}\n\nfunction D(a,val)\n{\n    var len = a.length;\n    for(var i = 0 ; i &amp;lt; len;i++)\n    {\n        if(a[i] === val) return true;\n    }\n    return false;\n} \n\nfunction E(a, val){  \n  var n = a.length-1;\n  var t = n/2;\n  for (var i = 0; i &amp;lt;= t; i++) {\n        if (a[i] === val || a[n-i] === val) return true;\n  }\n  return false;\n}\n\nfunction F(a,val) {\n\treturn a.includes(val);\n}\n\nfunction G(a,val) {\n\treturn a.indexOf(val)&amp;gt;=0;\n}\n\nfunction H(a,val) {\n\treturn !!~a.indexOf(val);\n}\n\nfunction I(a, val) {\n  return a.findIndex(x=&amp;gt; x==val)&amp;gt;=0;\n}\n\nfunction J(a,val) {\n\treturn a.some(x=&amp;gt; x===val);\n}\n\nfunction K(a, val) {\n  const s = JSON.stringify(val);\n  return a.some(x =&amp;gt; JSON.stringify(x) === s);\n}\n\nfunction L(a,val) {\n\treturn !a.every(x=&amp;gt; x!==val);\n}\n\nfunction M(a, val) {\n  return !!a.find(x=&amp;gt; x==val);\n}\n\nfunction N(a,val) {\n\treturn a.filter(x=&amp;gt;x===val).length &amp;gt; 0;\n}\n\nfunction O(a, val) {\n  return new Set(a).has(val);\n}\n\nlog(&apos;A&apos;,A);\nlog(&apos;B&apos;,B);\nlog(&apos;C&apos;,C);\nlog(&apos;D&apos;,D);\nlog(&apos;E&apos;,E);\nlog(&apos;F&apos;,F);\nlog(&apos;G&apos;,G);\nlog(&apos;H&apos;,H);\nlog(&apos;I&apos;,I);\nlog(&apos;J&apos;,J);\nlog(&apos;K&apos;,K);\nlog(&apos;L&apos;,L);\nlog(&apos;M&apos;,M);\nlog(&apos;N&apos;,N);\nlog(&apos;O&apos;,O);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;This shippet only presents functions used in performance tests - it not perform tests itself!&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Array small - 10 elements&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;You can perform tests in your machine &lt;a href=&quot;https://jsperf.com/array-exist-element/1&quot; rel=&quot;noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/gDDCp.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/gDDCp.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Array big - 1.000.000 elements&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;You can perform tests in your machine &lt;a href=&quot;https://jsperf.com/array-big-exist-element/1&quot; rel=&quot;noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/cTL3s.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/cTL3s.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;One-liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, x&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;elem&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; elem == x }).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Thinking out of the box for a second, if you are making this call many many times, it is vastly more efficient to use &lt;strike&gt;an associative array&lt;/strike&gt; a Map to do lookups using a hash function.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I use the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;contains&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(v) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [ &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt; ];\n\na.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\na.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fox&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; element == obj;})\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.prototype.some()&lt;/a&gt; was added to the ECMA-262 standard in the 5th edition&lt;/p&gt;\n    ","\n&lt;p&gt;If you are using JavaScript 1.6 or later (Firefox 1.5 or later) you can use &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf&quot; rel=&quot;noreferrer&quot;&gt;Array.indexOf&lt;/a&gt;.  Otherwise, I think you are going to end up with something similar to your original code.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;A hopefully faster bidirectional &lt;code&gt;indexOf&lt;/code&gt; / &lt;code&gt;lastIndexOf&lt;/code&gt; alternative&lt;/strong&gt;&lt;/p&gt;\n&lt;h2&gt;2015&lt;/h2&gt;\n&lt;p&gt;While the new method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;includes&lt;/code&gt;&lt;/a&gt; is very nice, the support is basically zero for now.&lt;/p&gt;\n&lt;p&gt;It&apos;s a long time that I was thinking of a way to replace the slow &lt;code&gt;indexOf&lt;/code&gt;/&lt;code&gt;lastIndexOf&lt;/code&gt; functions.&lt;/p&gt;\n&lt;p&gt;A performant way has already been found, looking at the top answers. From those I chose the &lt;code&gt;contains&lt;/code&gt; function posted by @Damir Zekic which should be the fastest one. But it also states that the benchmarks are from 2008 and so are outdated.&lt;/p&gt;\n&lt;p&gt;I also prefer &lt;code&gt;while&lt;/code&gt; over &lt;code&gt;for&lt;/code&gt;, but for not a specific reason I ended writing the function with a for loop. It could be also done with a &lt;code&gt;while --&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;I was curious if the iteration was much slower if I check both sides of the array while doing it. Apparently no, and so this function is around two times faster than the top voted ones. Obviously it&apos;s also faster than the native one. This is in a real world environment, where you never know if the value you are searching is at the beginning or at the end of the array.&lt;/p&gt;\n&lt;p&gt;When you know you just pushed an array with a value, using lastIndexOf remains probably the best solution, but if you have to travel through big arrays and the result could be everywhere, this could be a solid solution to make things faster.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Bidirectional &lt;code&gt;indexOf&lt;/code&gt;/&lt;code&gt;lastIndexOf&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bidirectionalIndexOf&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b, c, d, e&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(c=a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;,d=c*&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; c--; ){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(a[c]==b) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c; &lt;span class=&quot;hljs-comment&quot;&gt;//or this[c]===b&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(a[e=d-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;-c]==b) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; e; &lt;span class=&quot;hljs-comment&quot;&gt;//or a[e=d-1-c]===b&lt;/span&gt;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Usage&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;bidirectionalIndexOf&lt;/span&gt;(array,&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Performance test&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://jsbench.me/7el1b8dj80&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://jsbench.me/7el1b8dj80&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;As a test I created an array with 100k entries.&lt;/p&gt;\n&lt;p&gt;Three queries: at the beginning, in the middle &amp;amp; at the end of the array.&lt;/p&gt;\n&lt;p&gt;I hope you also find this interesting and test the performance.&lt;/p&gt;\n&lt;p&gt;Note: As you can see I slightly modified the &lt;code&gt;contains&lt;/code&gt; function to reflect the &lt;code&gt;indexOf&lt;/code&gt; &amp;amp; &lt;code&gt;lastIndexOf&lt;/code&gt; output (so basically &lt;code&gt;true&lt;/code&gt; with the &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; with &lt;code&gt;-1&lt;/code&gt;). That shouldn&apos;t harm it.&lt;/p&gt;\n&lt;h3&gt;The array prototype variant&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;bidirectionalIndexOf&apos;&lt;/span&gt;,{&lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;:&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;b,c,d,e&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(c=&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;,d=c*&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; c--; ){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[c]==b) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c; &lt;span class=&quot;hljs-comment&quot;&gt;//or this[c]===b&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[e=d-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;-c] == b) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; e; &lt;span class=&quot;hljs-comment&quot;&gt;//or this[e=d-1-c]===b&lt;/span&gt;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n},&lt;span class=&quot;hljs-attr&quot;&gt;writable&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;enumerable&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage&lt;/span&gt;\narray.&lt;span class=&quot;hljs-title function_&quot;&gt;bidirectionalIndexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The function can also be easily modified to return true or false or even the object, string or whatever it is.&lt;/p&gt;\n&lt;p&gt;And here is the &lt;code&gt;while&lt;/code&gt; variant:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bidirectionalIndexOf&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b, c, d&lt;/span&gt;){\n  c=a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; d=c-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(c--){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(b===a[c]) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(b===a[d-c]) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; d-c;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;bidirectionalIndexOf&lt;/span&gt;(array,&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;How is this possible?&lt;/h3&gt;\n&lt;p&gt;I think that the simple calculation to get the reflected index in an array is so simple that it&apos;s two times faster than doing an actual loop iteration.&lt;/p&gt;\n&lt;p&gt;Here is a complex example doing three checks per iteration, but this is only possible with a longer calculation which causes the slowdown of the code.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://web.archive.org/web/20151019160219/http://jsperf.com/bidirectionalindexof/2&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://web.archive.org/web/20151019160219/http://jsperf.com/bidirectionalindexof/2&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;elem,array&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; len = array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ; i &amp;lt; len;i++)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(array[i] == elem){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; i;}\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Returns array index if found, or -1 if not found&lt;/p&gt;\n    ","\n&lt;p&gt;If you are checking repeatedly for existence of an object in an array you should maybe look into&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Keeping the array sorted at all times by doing &lt;a href=&quot;http://en.wikipedia.org/wiki/Insertion_sort&quot; rel=&quot;noreferrer&quot;&gt;insertion sort&lt;/a&gt; in your array (put new objects in on the right place) &lt;/li&gt;\n&lt;li&gt;Make updating objects as remove+sorted insert operation and&lt;/li&gt;\n&lt;li&gt;Use a &lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_search_algorithm&quot; rel=&quot;noreferrer&quot;&gt;binary search&lt;/a&gt; lookup in your &lt;code&gt;contains(a, obj)&lt;/code&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;We use this snippet (works with objects, arrays, strings):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*\n * @function\n * @name Object.prototype.inArray\n * @description Extend Object prototype within inArray function\n *\n * @param {mix}    needle       - Search-able needle\n * @param {bool}   searchInKey  - Search needle in keys?\n *\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;inArray&apos;&lt;/span&gt;,{\n    &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;needle, searchInKey&lt;/span&gt;){\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; object = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(needle) === &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Object]&apos;&lt;/span&gt; || \n            &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(needle) === &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Array]&apos;&lt;/span&gt;){\n            needle = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(needle);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(object).&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;){\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = object[key];\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(value) === &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Object]&apos;&lt;/span&gt; || \n                &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(value) === &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Array]&apos;&lt;/span&gt;){\n                value = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(value);\n            }\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(searchInKey){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(value === needle || key === needle){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n                }\n            }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(value === needle){\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n                }\n            }\n        });\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;writable&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;configurable&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;enumerable&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = {&lt;span class=&quot;hljs-attr&quot;&gt;one&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;first&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;two&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;second&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;three&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;third&quot;&lt;/span&gt;}};\na.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;first&quot;&lt;/span&gt;);          &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\na.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;);            &lt;span class=&quot;hljs-comment&quot;&gt;//false&lt;/span&gt;\na.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);      &lt;span class=&quot;hljs-comment&quot;&gt;//true - search by keys&lt;/span&gt;\na.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;three&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;third&quot;&lt;/span&gt;}); &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;one&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;two&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;three&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;four&quot;&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt;}];\nb.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;one&quot;&lt;/span&gt;);         &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\nb.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;);         &lt;span class=&quot;hljs-comment&quot;&gt;//false&lt;/span&gt;\nb.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt;})   &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\nb.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{foo: &apos;val&apos;}&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//false&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;hljs-string&quot;&gt;&quot;String&quot;&lt;/span&gt;;\nc.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;S&quot;&lt;/span&gt;);        &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\nc.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;s&quot;&lt;/span&gt;);        &lt;span class=&quot;hljs-comment&quot;&gt;//false&lt;/span&gt;\nc.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\nc.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;20&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Solution that works in all modern browsers:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, obj&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; stringifiedObj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj); &lt;span class=&quot;hljs-comment&quot;&gt;// Cache our object to not call `JSON.stringify` on every iteration&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(item) === stringifiedObj);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;([{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}], {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;IE6+ solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, obj&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; stringifiedObj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(item) === stringifiedObj;\n  });\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// .some polyfill, not needed for IE9+&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!(&lt;span class=&quot;hljs-string&quot;&gt;&apos;some&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;)) {\n  &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;some&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;tester, that &lt;span class=&quot;hljs-comment&quot;&gt;/*opt*/&lt;/span&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, n = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; n; i++) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; &amp;amp;&amp;amp; tester.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(that, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i], i, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n  };\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;([{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}], {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Why to use &lt;code&gt;JSON.stringify&lt;/code&gt;?&lt;/h1&gt;\n\n&lt;p&gt;&lt;code&gt;Array.indexOf&lt;/code&gt; and &lt;code&gt;Array.includes&lt;/code&gt; (as well as most of the answers here) only compare by reference and not by value.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;});\n&lt;span class=&quot;hljs-comment&quot;&gt;// false, because {a: 1} is a new object&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Bonus&lt;/h1&gt;\n\n&lt;p&gt;Non-optimized ES6 one-liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}].&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(item) === &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));\n&lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Note:\nComparing objects by value will work better if the keys are in the same order, so to be safe you might sort the keys first with a package like this one: &lt;a href=&quot;https://www.npmjs.com/package/sort-keys&quot; rel=&quot;noreferrer&quot;&gt;https://www.npmjs.com/package/sort-keys&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Updated the &lt;code&gt;contains&lt;/code&gt; function with a perf optimization. Thanks &lt;a href=&quot;https://stackoverflow.com/users/1397160/itinance&quot;&gt;itinance&lt;/a&gt; for pointing it out.&lt;/p&gt;\n    ","\n&lt;p&gt;Use lodash&apos;s &lt;a href=&quot;https://lodash.com/docs#some&quot; rel=&quot;noreferrer&quot;&gt;some&lt;/a&gt; function.&lt;/p&gt;\n\n&lt;p&gt;It&apos;s concise, accurate and has great cross platform support.&lt;/p&gt;\n\n&lt;p&gt;The accepted answer does not even meet the requirements.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Requirements:&lt;/em&gt; Recommend most concise and efficient way to find out if a JavaScript array contains an object.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Accepted Answer:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}, [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}])\n&amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;My recommendation:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;([{&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}], {&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;})\n&amp;gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Notes: &lt;/p&gt;\n\n&lt;p&gt;$.inArray works fine for determining whether a &lt;em&gt;scalar&lt;/em&gt; value exists in an array of scalars...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;])\n&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;... but the question clearly asks for an efficient way to determine if an &lt;em&gt;object&lt;/em&gt; is contained in an array.&lt;/p&gt;\n\n&lt;p&gt;In order to handle both scalars and objects, you could do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(_.&lt;span class=&quot;hljs-title function_&quot;&gt;isObject&lt;/span&gt;(item)) ? _.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(ary, item) : (_.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(ary, item) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple solution for this requirement is using &lt;code&gt;find()&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;If you&apos;re having array of objects like below,&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; users = [{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;101&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Choose one...&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;102&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;shilpa&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;103&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;anita&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;104&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;admin&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;105&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;user&quot;&lt;/span&gt;}];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then you can check whether the object with your value is already present or not:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; data = users.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;object&lt;/span&gt; =&amp;gt;&lt;/span&gt; object[&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;] === &lt;span class=&quot;hljs-string&quot;&gt;&apos;104&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;if data is null then no admin, else it will return the existing object like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;104&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;admin&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then you can find the index of that object in the array and replace the object using the code:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; indexToUpdate = users.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(data);\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; newObject = {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;104&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;customer&quot;&lt;/span&gt;};\nusers[indexToUpdate] = newObject;&lt;span class=&quot;hljs-comment&quot;&gt;//your new object&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(users);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;you will get value like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;101&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Choose one...&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;102&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;shilpa&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;103&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;anita&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;104&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;customer&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;105&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;user&quot;&lt;/span&gt;}];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;ECMAScript 6 has an elegant proposal on find.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The find method executes the callback function once for each element\n  present in the array until it finds one where callback returns a true\n  value. If such an element is found, find immediately returns the value\n  of that element. Otherwise, find returns undefined. callback is\n  invoked only for indexes of the array which have assigned values; it\n  is not invoked for indexes which have been deleted or which have never\n  been assigned values.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Here is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot; rel=&quot;noreferrer&quot;&gt;MDN documentation&lt;/a&gt; on that.&lt;/p&gt;\n\n&lt;p&gt;The find functionality works like this.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isPrime&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element, index, array&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (start &amp;lt;= &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sqrt&lt;/span&gt;(element)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element % start++ &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (element &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(isPrime) ); &lt;span class=&quot;hljs-comment&quot;&gt;// Undefined, not found&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(isPrime) ); &lt;span class=&quot;hljs-comment&quot;&gt;// 5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can use this in ECMAScript 5 and below by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find#Polyfill&quot; rel=&quot;noreferrer&quot;&gt;defining the function&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;find&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;find&apos;&lt;/span&gt;, {\n    &lt;span class=&quot;hljs-attr&quot;&gt;enumerable&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;configurable&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;writable&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;predicate&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeError&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Array.prototype.find called on null or undefined&apos;&lt;/span&gt;);\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; predicate !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeError&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;predicate must be a function&apos;&lt;/span&gt;);\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; list = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; length = list.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; thisArg = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value;\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; length; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; list) {\n          value = list[i];\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (predicate.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(thisArg, value, i, list)) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; value;\n          }\n        }\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n    }\n  });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;While &lt;code&gt;array.indexOf(x)!=-1&lt;/code&gt; is the most concise way to do this (and has been supported by non-Internet&amp;nbsp;Explorer browsers for over decade...), it is not O(1), but rather O(N), which is terrible. If your array will not be changing, you can convert your array to a hashtable, then do &lt;code&gt;table[x]!==undefined&lt;/code&gt; or &lt;code&gt;===undefined&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toTable&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; t = {};\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){t[x]=&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;});\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; t;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; toRemove = [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;toTable&lt;/span&gt;();\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; toRemove[x]===&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(Unfortunately, while you can create an Array.prototype.contains to &quot;freeze&quot; an array and store a hashtable in this._cache in two lines, this would give wrong results if you chose to edit your array later. JavaScript has insufficient hooks to let you keep this state, unlike Python for example.)&lt;/p&gt;\n    ","\n&lt;p&gt;One can use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;noreferrer&quot;&gt;Set&lt;/a&gt; that has the method &quot;has()&quot;:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, obj&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; proxy = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(arr);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (proxy.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(obj))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Happy&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;New&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Year&apos;&lt;/span&gt;];\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(arr, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Happy&apos;&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArray = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;yellow&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;orange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;] ;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(!!~myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/An5jQ/&quot; rel=&quot;noreferrer&quot;&gt;Demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;To know exactly what the &lt;code&gt;tilde&lt;/code&gt; &lt;code&gt;~&lt;/code&gt; do at this point, refer to this question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12299665/what-does-a-tilde-do-when-it-precedes-an-expression&quot;&gt;What does a tilde do when it precedes an expression?&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;OK, you can just &lt;strong&gt;optimise your&lt;/strong&gt; code to get the result! &lt;/p&gt;\n\n&lt;p&gt;There are many ways to do this which are cleaner and better, but I just wanted to get your pattern and apply to that using &lt;code&gt;JSON.stringify&lt;/code&gt;, just simply do something like this in your case:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(a[i]) === &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj)) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Surprised that this question still doesn&apos;t have latest syntax added, adding my 2 cents.&lt;/p&gt;\n\n&lt;p&gt;Let&apos;s say we have array of Objects arrObj and we want to search obj in it.&lt;/p&gt;\n\n&lt;p&gt;Array.prototype.&lt;strong&gt;indexOf&lt;/strong&gt; -&amp;gt; (returns &lt;strong&gt;index or -1&lt;/strong&gt;) is generally used for finding index of element in array.\nThis can also be used for searching object but only works if you are passing reference to same object.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj = { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Sumer&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt; };\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arrObj = [obj, { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Kishor&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt; }, { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Rupen&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt; }];\n\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(obj));&lt;span class=&quot;hljs-comment&quot;&gt;// 0&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Sumer&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt; })); &lt;span class=&quot;hljs-comment&quot;&gt;//-1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Array.prototype.&lt;strong&gt;includes&lt;/strong&gt; -&amp;gt; (returns &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;false&lt;/strong&gt;)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(obj));  &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Sumer&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt; })); &lt;span class=&quot;hljs-comment&quot;&gt;//false&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Array.prototype.&lt;strong&gt;find&lt;/strong&gt; -&amp;gt; (takes callback, returns first &lt;strong&gt;value/object&lt;/strong&gt; that returns true in CB).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e.&lt;span class=&quot;hljs-property&quot;&gt;age&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;));  &lt;span class=&quot;hljs-comment&quot;&gt;//{ name: &apos;Kishor&apos;, age: 46 }&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e.&lt;span class=&quot;hljs-property&quot;&gt;age&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//{ name: &apos;Kishor&apos;, age: 46 }&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Array.prototype.&lt;strong&gt;findIndex&lt;/strong&gt; -&amp;gt; (takes callback, returns &lt;strong&gt;index&lt;/strong&gt; of first value/object that returns true in CB).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e.&lt;span class=&quot;hljs-property&quot;&gt;age&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;));  &lt;span class=&quot;hljs-comment&quot;&gt;//1&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arrObj.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e.&lt;span class=&quot;hljs-property&quot;&gt;age&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Since find and findIndex takes a callback, we can be fetch any object(even if we don&apos;t have the reference) from array by creatively setting the true condition.&lt;/p&gt;\n    ","\n&lt;p&gt;It has one parameter: an array numbers of objects. Each object in the array has two integer properties denoted by x and y. The function must return a count of all such objects in the array that satisfy &lt;code&gt;numbers.x == numbers.y&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; numbers = [ { &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; },\n                { &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; },\n                { &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; },\n                { &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; },\n                { &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; } ];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; \n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; n = numbers.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i =&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(numbers[i].&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt;==numbers[i].&lt;span class=&quot;hljs-property&quot;&gt;y&lt;/span&gt;)\n    {count+=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;}\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(count);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;countArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;originalArray&lt;/span&gt;) {\n     \n    \t&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; compressed = [];\n    \t&lt;span class=&quot;hljs-comment&quot;&gt;// make a copy of the input array&lt;/span&gt;\n    \t&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; copyArray = originalArray.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n     \n    \t&lt;span class=&quot;hljs-comment&quot;&gt;// first loop goes over every element&lt;/span&gt;\n    \t&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; originalArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n     \n    \t\t&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\t\n    \t\t&lt;span class=&quot;hljs-comment&quot;&gt;// loop over every element in the copy and see if it&apos;s the same&lt;/span&gt;\n    \t\t&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; w = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; w &amp;lt; copyArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; w++) {\n    \t\t\t&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (originalArray[i] == copyArray[w]) {\n    \t\t\t\t&lt;span class=&quot;hljs-comment&quot;&gt;// increase amount of times duplicate is found&lt;/span&gt;\n    \t\t\t\tcount++;\n    \t\t\t\t&lt;span class=&quot;hljs-comment&quot;&gt;// sets item to undefined&lt;/span&gt;\n    \t\t\t\t&lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; copyArray[w];\n    \t\t\t}\n    \t\t}\n     \n    \t\t&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (count &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n    \t\t\t&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;();\n    \t\t\ta.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; = originalArray[i];\n    \t\t\ta.&lt;span class=&quot;hljs-property&quot;&gt;count&lt;/span&gt; = count;\n    \t\t\tcompressed.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(a);\n    \t\t}\n    \t}\n     \n    \t&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; compressed;\n    };\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;// It should go something like this:&lt;/span&gt;\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; testArray = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dog&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;dog&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;cat&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;buffalo&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;wolf&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;cat&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;tiger&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;cat&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = &lt;span class=&quot;hljs-title function_&quot;&gt;countArray&lt;/span&gt;(testArray);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(newArray);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    "]},"randomTags":[{"name":"commandbutton","slug":"commandbutton"},{"name":"undefined-behavior","slug":"undefined-behavior"},{"name":"email-validation","slug":"email-validation"},{"name":"syntactic-sugar","slug":"syntactic-sugar"},{"name":"private","slug":"private"},{"name":"dynamic-allocation","slug":"dynamic-allocation"},{"name":"most-vexing-parse","slug":"most-vexing-parse"},{"name":"mysqli","slug":"mysqli"},{"name":"application-state","slug":"application-state"},{"name":"git-rewrite-history","slug":"git-rewrite-history"},{"name":"sqliteopenhelper","slug":"sqliteopenhelper"},{"name":"compiler-errors","slug":"compiler-errors"},{"name":"subquery","slug":"subquery"},{"name":"standards","slug":"standards"},{"name":"guid","slug":"guid"},{"name":"ajax","slug":"ajax"},{"name":"overflow","slug":"overflow"},{"name":"arguments","slug":"arguments"},{"name":"matrix","slug":"matrix"},{"name":"unobtrusive-javascript","slug":"unobtrusive-javascript"}]},"__N_SSG":true}