{"pageProps":{"data":{"count":1,"rows":[{"id":493,"title":"How can I do a FULL OUTER JOIN in MySQL?","slug":"how-can-i-do-a-full-outer-join-in-mysql-1657388175444","postType":"QUESTION","createdAt":"2022-07-09T17:36:15.000Z","updatedAt":"2022-07-09T17:36:15.000Z","tags":[{"id":2473,"name":"full-outer-join","slug":"full-outer-join","createdAt":"2022-07-09T17:36:15.000Z","updatedAt":"2022-07-09T17:36:15.000Z","Questions_Tags":{"questionId":493,"tagId":2473}}]}]},"slug":"full-outer-join","page":1,"answers":{"493":["\n&lt;p&gt;You don&apos;t have &lt;em&gt;full joins&lt;/em&gt; in MySQL, but you can sure &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/outer-join-simplification.html&quot; rel=&quot;noreferrer&quot;&gt;emulate them&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;For a code &lt;em&gt;sample&lt;/em&gt; transcribed from &lt;a href=&quot;https://stackoverflow.com/questions/2384298/mysql-full-outer-join-syntax-error&quot;&gt;this Stack&amp;nbsp;Overflow question&lt;/a&gt; you have:&lt;/p&gt;\n&lt;p&gt;With two tables t1, t2:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;The query above works for special cases where a &lt;em&gt;full outer join&lt;/em&gt; operation would not produce any duplicate rows. The query above depends on the &lt;code&gt;UNION&lt;/code&gt; set operator to remove duplicate rows introduced by the query pattern.  We can avoid introducing duplicate rows by using an &lt;em&gt;anti-join&lt;/em&gt; pattern for the second query, and then use a UNION ALL set operator to combine the two sets. In the more general case, where a full outer join would return duplicate rows, we can do this:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The answer that &lt;a href=&quot;https://stackoverflow.com/a/4796911/662581&quot;&gt;Pablo Santa Cruz&lt;/a&gt; gave is correct; however, in case anybody stumbled on this page and wants more clarification, here is a detailed breakdown.&lt;/p&gt;\n\n&lt;h2&gt;Example Tables&lt;/h2&gt;\n\n&lt;p&gt;Suppose we have the following tables:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- t1&lt;/span&gt;\nid  name\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Tim\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Marta\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- t2&lt;/span&gt;\nid  name\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Tim\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   Katarina\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Inner Joins&lt;/h2&gt;\n\n&lt;p&gt;An inner join, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `t1`\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `t2` &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `t2`.`id`;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Would get us only records that appear in both tables, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; Tim  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; Tim\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Inner joins don&apos;t have a direction (like left or right) because they are explicitly bidirectional - we require a match on both sides.&lt;/p&gt;\n\n&lt;h2&gt;Outer Joins&lt;/h2&gt;\n\n&lt;p&gt;Outer joins, on the other hand, are for finding records that may not have a match in the other table. As such, you have to specify &lt;strong&gt;which side&lt;/strong&gt; of the join is allowed to have a missing record.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;LEFT JOIN&lt;/code&gt; and &lt;code&gt;RIGHT JOIN&lt;/code&gt; are shorthand for &lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; and &lt;code&gt;RIGHT OUTER JOIN&lt;/code&gt;; I will use their full names below to reinforce the concept of outer joins vs inner joins.&lt;/p&gt;\n\n&lt;h3&gt;Left Outer Join&lt;/h3&gt;\n\n&lt;p&gt;A left outer join, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `t1`\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `t2` &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `t2`.`id`;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...would get us all the records from the left table regardless of whether or not they have a match in the right table, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; Tim   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    Tim\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; Marta &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Right Outer Join&lt;/h3&gt;\n\n&lt;p&gt;A right outer join, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `t1`\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `t2` &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `t2`.`id`;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...would get us all the records from the right table regardless of whether or not they have a match in the left table, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    Tim   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  Tim\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  Katarina\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Full Outer Join&lt;/h3&gt;\n\n&lt;p&gt;A full outer join would give us all records from both tables, whether or not they have a match in the other table, with NULLs on both sides where there is no match. The result would look like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    Tim   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    Tim\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    Marta &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;    Katarina\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, as Pablo Santa Cruz pointed out, MySQL doesn&apos;t support this. We can emulate it by doing a UNION of a left join and a right join, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `t1`\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `t2` &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `t2`.`id`\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `t1`\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `t2` &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `t2`.`id`;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can think of a &lt;code&gt;UNION&lt;/code&gt; as meaning &quot;run both of these queries, then stack the results on top of each other&quot;; some of the rows will come from the first query and some from the second.&lt;/p&gt;\n\n&lt;p&gt;It should be noted that a &lt;code&gt;UNION&lt;/code&gt; in MySQL will eliminate exact duplicates: Tim would appear in both of the queries here, but the result of the &lt;code&gt;UNION&lt;/code&gt; only lists him once. My database guru colleague feels that this behavior should not be relied upon. So to be more explicit about it, we could add a &lt;code&gt;WHERE&lt;/code&gt; clause to the second query:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `t1`\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `t2` &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `t2`.`id`\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `t1`\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `t2` &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `t2`.`id`\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; `t1`.`id` &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On the other hand, if you &lt;strong&gt;wanted&lt;/strong&gt; to see duplicates for some reason, you could use &lt;code&gt;UNION ALL&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Using a &lt;em&gt;union&lt;/em&gt; query will remove duplicates, and this is different than the behavior of &lt;em&gt;full outer join&lt;/em&gt; that never removes any duplicates:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;[&lt;span class=&quot;hljs-keyword&quot;&gt;Table&lt;/span&gt;: t1]        [&lt;span class=&quot;hljs-keyword&quot;&gt;Table&lt;/span&gt;: t2]\n&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-----------        -------&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;                  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;                  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;                  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;                  &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is the expected result of a &lt;em&gt;full outer join&lt;/em&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;------+-------&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Null&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Null&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Null&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is the result of using &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;right join&lt;/em&gt; with &lt;em&gt;union&lt;/em&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;------+-------&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Null&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Null&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!9/13db1/2&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL Fiddle&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;My suggested query is:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n    t1.value, t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;outer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; t2\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; t1.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;      &lt;span class=&quot;hljs-comment&quot;&gt;-- Using `union all` instead of `union`&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n    t1.value, t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t2\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;outer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; t1\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; t1.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;\n    t1.value &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The result of the above query that is as the same as the expected result:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;------+-------&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!9/13db1/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL Fiddle&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/users/1063716/steve-chambers&quot;&gt;@Steve Chambers&lt;/a&gt;: &lt;sup&gt;[From comments, with many thanks!]&lt;/sup&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This may be the best solution, both for efficiency and for generating the same results as a &lt;code&gt;FULL OUTER JOIN&lt;/code&gt;. &lt;a href=&quot;http://www.xaprb.com/blog/2006/05/26/how-to-write-full-outer-join-in-mysql&quot; rel=&quot;nofollow noreferrer&quot;&gt;This blog post&lt;/a&gt; also explains it well - to quote from Method 2: &lt;em&gt;&quot;This handles duplicate rows correctly and doesnt include anything it shouldnt. Its necessary to use &lt;code&gt;UNION ALL&lt;/code&gt; instead of plain &lt;code&gt;UNION&lt;/code&gt;, which would eliminate the duplicates I want to keep. This may be significantly more efficient on large result sets, since theres no need to sort and remove duplicates.&quot;&lt;/em&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;I decided to add another solution that comes from &lt;em&gt;full outer join&lt;/em&gt; visualization and math. It is not better than the above, but it is more readable:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Full outer join means &lt;code&gt;(t1  t2)&lt;/code&gt;: all in &lt;code&gt;t1&lt;/code&gt; or in &lt;code&gt;t2&lt;/code&gt;\n&lt;code&gt;(t1  t2) = (t1  t2) + t1_only + t2_only&lt;/code&gt;: all in both &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; plus all in &lt;code&gt;t1&lt;/code&gt; that aren&apos;t in &lt;code&gt;t2&lt;/code&gt; and plus all in &lt;code&gt;t2&lt;/code&gt; that aren&apos;t in &lt;code&gt;t1&lt;/code&gt;:&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- (t1  t2): all in both t1 and t2&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; t1.value, t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; t1.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;-- And plus&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-- all in t1 that not exists in t2&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; t1.value, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; t2.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.value)\n&lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;-- and plus&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-- all in t2 that not exists in t1&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t2\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; t2.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.value)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!9/13db1/5&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL Fiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;MySQL does not have FULL-OUTER-JOIN syntax. You have to emulate it by doing both LEFT JOIN and RIGHT JOIN as follows:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But MySQL also does not have a RIGHT JOIN syntax. According to MySQL&apos;s &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/outer-join-simplification.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;outer join simplification&lt;/a&gt;, the right join is converted to the equivalent left join by switching the t1 and t2 in the &lt;code&gt;FROM&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; clause in the query. Thus, the MySQL query optimizer translates the original query into the following -&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t2\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.id\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now, there is no harm in writing the original query as is, but say if you have predicates like the WHERE clause, which is a &lt;a href=&quot;https://www.ibm.com/developerworks/data/library/techarticle/purcell/0112purcell.html#beforejoinpredicates&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;before-join&lt;/strong&gt;&lt;/a&gt; predicate or an AND predicate on the &lt;code&gt;ON&lt;/code&gt; clause, which is a &lt;a href=&quot;https://www.ibm.com/developerworks/data/library/techarticle/purcell/0112purcell.html#duringjoinpredicates&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;during-join&lt;/strong&gt;&lt;/a&gt; predicate, then you might want to take a look at the devil; which is in details.&lt;/p&gt;\n&lt;p&gt;The MySQL query optimizer routinely checks the predicates if they are &lt;em&gt;null-rejected&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/NioBX.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/NioBX.png&quot; alt=&quot;Null-Rejected Definition and Examples&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Now, if you have done the RIGHT JOIN, but with WHERE predicate on the column from t1, then you might be at a risk of running into a &lt;em&gt;null-rejected&lt;/em&gt; scenario.&lt;/p&gt;\n&lt;p&gt;For example, the query&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.col1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;someValue&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.col1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;someValue&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;gets translated to the following by the query optimizer:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.col1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;someValue&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t2\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.col1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;someValue&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So the order of tables has changed, but the predicate is still applied to t1, but t1 is now in the &apos;ON&apos; clause. If t1.col1 is defined as &lt;code&gt;NOT NULL&lt;/code&gt;\ncolumn, then this query will be &lt;em&gt;null-rejected&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;Any outer-join (left, right, full) that is &lt;em&gt;null-rejected&lt;/em&gt; is converted to an inner-join by MySQL.&lt;/p&gt;\n&lt;p&gt;Thus the results you might be expecting might be completely different from what the MySQL is returning. You might think its a bug with MySQL&apos;s RIGHT JOIN, but thats not right. Its just how the MySQL query optimizer works. So the developer in charge has to pay attention to these nuances when he/she is constructing the query.&lt;/p&gt;\n    ","\n&lt;p&gt;None of the previous answers are actually correct, because they do not follow the semantics when there are duplicated values.&lt;/p&gt;\n&lt;p&gt;For a query such as (from &lt;a href=&quot;https://stackoverflow.com/questions/41650214/sql-full-join-syntax-error&quot;&gt;this duplicate&lt;/a&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.Name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.Name;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The correct equivalent is:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, t2.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; name &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;-- This is intentionally UNION to remove duplicates&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; name &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t2\n     ) n &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n     t1\n     &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; n.name &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n     t2\n     &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; n.name;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you need this to work with &lt;code&gt;NULL&lt;/code&gt; values (which may also be necessary), then use the &lt;code&gt;NULL&lt;/code&gt;-safe comparison operator, &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; rather than &lt;code&gt;=&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;In SQLite you should do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; leftTable lt \n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; rightTable rt &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; lt.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; rt.lrid \n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; lt.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, rl.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;-- To match column set&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; rightTable rt \n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;  leftTable lt &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; lt.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; rt.lrid\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n    table1 t1\n        &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n    table2 t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;\n    t2.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n    table1 t1\n        &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n    table2 t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;\n    t1.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I modified &lt;a href=&quot;https://stackoverflow.com/questions/4796872/how-can-i-do-a-full-outer-join-in-mysql/30497590#30497590&quot;&gt;shA.t&apos;s query&lt;/a&gt; for more clarity:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- t1 left join t2&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.value, t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.value   \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;-- include duplicates&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- t1 right exclude join t2 (records found only in t2)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.value, t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.value &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n    a.name,\n    b.title\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n    author &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n    book &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; a.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.author_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n    a.name,\n    b.title\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n    author &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n    book &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; a.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.author_id\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can just convert a full outer join, e.g.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; fields\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; firsttable\n&lt;span class=&quot;hljs-keyword&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; secondtable &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; joincondition\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;into:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; fields\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; firsttable\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; secondtable &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; joincondition\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; fields (replacing &lt;span class=&quot;hljs-keyword&quot;&gt;any&lt;/span&gt; fields &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; firsttable &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; secondtable\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;EXISTS&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; firsttable &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; joincondition)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or if you have at least one column, say &lt;code&gt;foo&lt;/code&gt;, in &lt;code&gt;firsttable&lt;/code&gt; that is NOT NULL, you can do:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; fields\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; firsttable\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; secondtable &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; joincondition\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; fields\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; firsttable\n&lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; secondtable &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; joincondition\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; firsttable.foo &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I fix the response, and works include all rows (based on the response of Pavle Lekic):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; a.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; tablea a\n    &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; tableb b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; a.`key` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.key\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; b.`key` &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n    (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; a.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; tablea a\n    &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; tableb b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; a.`key` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.key\n    &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;  a.`key` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.`key`\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n    (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; b.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; tablea a\n    &lt;span class=&quot;hljs-keyword&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; tableb b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; b.`key` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; a.key\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; a.`key` &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n    );\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It can be recreated as follows:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, t2.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; name &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t2) tmp\n &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; tmp.id\n &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; tmp.id;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Using a UNION or UNION ALL answer does not cover the edge case where the base tables have duplicated entries.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;There is an edge case that a UNION or UNION ALL cannot cover. We cannot test this on MySQL as it doesn&apos;t support full outer joins, but we can illustrate this on a database that does support it:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; cte_t1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n (\n   &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id1\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n ),\ncte_t2 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n(\n &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id2\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;cte_t1 t1 &lt;span class=&quot;hljs-keyword&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; cte_t2 t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id2;\n\nThis gives us this answer:\n\nid1id2\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The UNION solution:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;cte_t1 t1 &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; cte_t2 t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id2\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte_t1 t1 &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; cte_t2 t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Gives an incorrect answer:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; id1id2\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The UNION ALL solution:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte_t1 t1 &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; cte_t2 t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id2\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;cte_t1 t1 &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; cte_t2 t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Is also incorrect.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id1id2\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Whereas this query:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, t2.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; name &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t2) tmp\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; tmp.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; tmp.id;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Gives the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id1id2\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The order is different, but otherwise matches the correct answer.&lt;/p&gt;\n    ","\n&lt;p&gt;Use a &lt;a href=&quot;https://en.wikipedia.org/wiki/Join_(SQL)#Cross_join&quot; rel=&quot;nofollow noreferrer&quot;&gt;cross join&lt;/a&gt; solution:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, t2.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table1 t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; table2 t2 \n&lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It is also possible, but you have to mention the same field names in select. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.name, t2.name &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.name, t2.name &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t2\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.id\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The SQL standard says &lt;code&gt;full join on&lt;/code&gt; is &lt;code&gt;inner join on&lt;/code&gt; rows &lt;code&gt;union all&lt;/code&gt; unmatched left table rows extended by nulls &lt;code&gt;union all&lt;/code&gt; right table rows extended by nulls. Ie &lt;code&gt;inner join on&lt;/code&gt; rows &lt;code&gt;union all&lt;/code&gt; rows in &lt;code&gt;left join on&lt;/code&gt; but not &lt;code&gt;inner join on&lt;/code&gt; &lt;code&gt;union all&lt;/code&gt; rows in &lt;code&gt;right join on&lt;/code&gt; but not &lt;code&gt;inner join on&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Ie &lt;code&gt;left join on&lt;/code&gt; rows &lt;code&gt;union all&lt;/code&gt; &lt;code&gt;right join on&lt;/code&gt; rows not in &lt;code&gt;inner join on&lt;/code&gt;. Or if you know your &lt;code&gt;inner join on&lt;/code&gt; result can&apos;t have null in a particular right table column then &quot;&lt;code&gt;right join on&lt;/code&gt; rows not in &lt;code&gt;inner join on&lt;/code&gt;&quot; are rows in &lt;code&gt;right join on&lt;/code&gt; with the &lt;code&gt;on&lt;/code&gt; condition extended by &lt;code&gt;and&lt;/code&gt; that column &lt;code&gt;is null&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Ie similarly &lt;code&gt;right join on&lt;/code&gt; &lt;code&gt;union all&lt;/code&gt; appropriate &lt;code&gt;left join on&lt;/code&gt; rows.&lt;/p&gt;\n&lt;p&gt;From &lt;a href=&quot;https://stackoverflow.com/a/46091641/3404097&quot;&gt;What is the difference between INNER JOIN and OUTER JOIN?&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;(SQL Standard 2006 SQL/Foundation 7.7 Syntax Rules 1, General Rules 1 b, 3 c &amp;amp; d, 5 b.)&lt;/p&gt;\n&lt;/blockquote&gt;\n    "]},"randomTags":[{"name":"urlconnection","slug":"urlconnection"},{"name":"git-rewrite-history","slug":"git-rewrite-history"},{"name":"mobile","slug":"mobile"},{"name":"least-astonishment","slug":"least-astonishment"},{"name":"postgresql","slug":"postgresql"},{"name":"onclick","slug":"onclick"},{"name":"language-agnostic","slug":"language-agnostic"},{"name":"ctor-initializer","slug":"ctor-initializer"},{"name":"ecmascript-harmony","slug":"ecmascript-harmony"},{"name":"outer-join","slug":"outer-join"},{"name":"prop","slug":"prop"},{"name":"selenium3","slug":"selenium3"},{"name":"integer-overflow","slug":"integer-overflow"},{"name":"android-permissions","slug":"android-permissions"},{"name":"projection","slug":"projection"},{"name":"winforms","slug":"winforms"},{"name":"uitableview","slug":"uitableview"},{"name":"formatting","slug":"formatting"},{"name":"operator-precedence","slug":"operator-precedence"},{"name":"text","slug":"text"}]},"__N_SSG":true}