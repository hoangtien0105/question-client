{"pageProps":{"data":{"count":1,"rows":[{"id":182,"title":"When does SQLiteOpenHelper onCreate() / onUpgrade() run?","slug":"when-does-sqliteopenhelper-oncreate()-onupgrade()-run-1657384883864","postType":"QUESTION","createdAt":"2022-07-09T16:41:23.000Z","updatedAt":"2022-07-09T16:41:23.000Z","tags":[{"id":669,"name":"sqliteopenhelper","slug":"sqliteopenhelper","createdAt":"2022-07-09T16:41:23.000Z","updatedAt":"2022-07-09T16:41:23.000Z","Questions_Tags":{"questionId":182,"tagId":669}}]}]},"slug":"sqliteopenhelper","page":1,"answers":{"182":["\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;SQLiteOpenHelper&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#onCreate%28android.database.sqlite.SQLiteDatabase%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;onCreate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#onUpgrade%28android.database.sqlite.SQLiteDatabase,%20int,%20int%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;onUpgrade()&lt;/code&gt;&lt;/a&gt; callbacks are invoked when the database is actually opened, for example by a call to &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#getWritableDatabase%28%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getWritableDatabase()&lt;/code&gt;&lt;/a&gt;. The database is not opened when the database helper object itself is created.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;SQLiteOpenHelper&lt;/code&gt; versions the database files. The version number is the &lt;code&gt;int&lt;/code&gt; argument passed to the &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#SQLiteOpenHelper%28android.content.Context,%20java.lang.String,%20android.database.sqlite.SQLiteDatabase.CursorFactory,%20int%29&quot; rel=&quot;noreferrer&quot;&gt;constructor&lt;/a&gt;. In the database file, the version number is stored in &lt;a href=&quot;http://www.sqlite.org/pragma.html#pragma_schema_version&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;PRAGMA user_version&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;onCreate()&lt;/code&gt; is only run when the database file did not exist and was just created. If &lt;code&gt;onCreate()&lt;/code&gt; returns successfully (doesn&apos;t throw an exception), the database is assumed to be created with the requested version number. As an implication, you should not catch &lt;code&gt;SQLException&lt;/code&gt;s in &lt;code&gt;onCreate()&lt;/code&gt; yourself.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;onUpgrade()&lt;/code&gt; is only called when the database file exists but the stored version number is lower than requested in the constructor. The &lt;code&gt;onUpgrade()&lt;/code&gt; should update the table schema to the requested version.&lt;/p&gt;\n\n&lt;p&gt;When changing the table schema in code (&lt;code&gt;onCreate()&lt;/code&gt;), you should make sure the database is updated. Two main approaches:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Delete the old database file so that &lt;code&gt;onCreate()&lt;/code&gt; is run again. This is often preferred at development time where you have control over the installed versions and data loss is not an issue. Some ways to delete the database file:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Uninstall the application. Use the application manager or &lt;code&gt;adb uninstall your.package.name&lt;/code&gt; from the shell.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Clear application data. Use the application manager.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Increment the database version so that &lt;code&gt;onUpgrade()&lt;/code&gt; is invoked. This is slightly more complicated as more code is needed.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;For development time schema upgrades where data loss is not an issue, you can just use &lt;code&gt;execSQL(&quot;DROP TABLE IF EXISTS &amp;lt;tablename&amp;gt;&quot;)&lt;/code&gt; in to remove your existing tables and call &lt;code&gt;onCreate()&lt;/code&gt; to recreate the database.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;For released versions, you should implement data migration in &lt;code&gt;onUpgrade()&lt;/code&gt; so your users don&apos;t lose their data.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;To further add missing points here, as per the request by Jaskey&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Database version is stored within the &lt;code&gt;SQLite&lt;/code&gt; database file.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;catch is the constructor&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;SQLiteOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; version)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So when the database helper constructor is called with a &lt;code&gt;name&lt;/code&gt; (2nd param), platform checks if the database exists or not and if the database exists, it gets the version information from the database file header and triggers the right call back&lt;/p&gt;\n\n&lt;p&gt;As already explained in the older answer, if the database with the name doesn&apos;t exists, it triggers &lt;code&gt;onCreate&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Below explanation explains &lt;code&gt;onUpgrade&lt;/code&gt; case with an example.&lt;/p&gt;\n\n&lt;p&gt;Say, your first version of application had the &lt;code&gt;DatabaseHelper&lt;/code&gt; (extending &lt;code&gt;SQLiteOpenHelper&lt;/code&gt;) with constructor passing version as &lt;code&gt;1&lt;/code&gt; and then you provided an upgraded application with the new source code having version passed as &lt;code&gt;2&lt;/code&gt;, then automatically when the &lt;code&gt;DatabaseHelper&lt;/code&gt; is constructed, platform triggers &lt;code&gt;onUpgrade&lt;/code&gt; by seeing the file already exists, but the version is lower than the current version which you have passed.&lt;/p&gt;\n\n&lt;p&gt;Now say you are planing to give a third version of application with db version as &lt;code&gt;3&lt;/code&gt; (db version is increased only when database schema is to be modified). In such incremental upgrades, you have to write the upgrade logic from each version incrementally for a better maintainable code&lt;/p&gt;\n\n&lt;p&gt;Example pseudo code below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\npublic void onUpgrade(SQLiteDatabase db, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; oldVersion, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; newVersion) {\n  switch(oldVersion) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:\n       &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;upgrade logic &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; version &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:\n       &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;upgrade logic &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; version &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;:\n       &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;upgrade logic &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; version &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n       break;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:\n       throw &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(\n                &quot;onUpgrade() with unknown oldVersion &quot; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; oldVersion);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Notice the missing &lt;code&gt;break&lt;/code&gt; statement in case &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;. This is what I mean by incremental upgrade.&lt;/p&gt;\n\n&lt;p&gt;Say if the old version is &lt;code&gt;2&lt;/code&gt; and new version is &lt;code&gt;4&lt;/code&gt;, then the logic will upgrade the database from &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;3&lt;/code&gt; and then to &lt;code&gt;4&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;If old version is &lt;code&gt;3&lt;/code&gt; and new version is &lt;code&gt;4&lt;/code&gt;, it will just run the upgrade logic for &lt;code&gt;3&lt;/code&gt; to &lt;code&gt;4&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;onCreate()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;When we create DataBase at a first time (i.e Database is not exists) &lt;code&gt;onCreate()&lt;/code&gt; create database with version which is passed in \n&lt;code&gt;SQLiteOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;onCreate()&lt;/code&gt; method is creating the tables youve defined and executing any other code youve written. However, this method will only be called if the SQLite file is missing in your apps data directory (&lt;code&gt;/data/data/your.apps.classpath/databases&lt;/code&gt;).  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;This method will not be called if youve changed your code and relaunched in the emulator.  If you want &lt;code&gt;onCreate()&lt;/code&gt; to run you need to use adb to delete the SQLite database file.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;onUpgrade()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;SQLiteOpenHelper&lt;/code&gt; should call the super constructor.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;onUpgrade()&lt;/code&gt; method will only be called when the version integer is larger than the current version running in the app.&lt;/li&gt;\n&lt;li&gt;If you want the &lt;code&gt;onUpgrade()&lt;/code&gt; method to be called, you need to increment the version number in your code.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;May be I am too late but I would like to share my short and sweet answer.\nPlease check &lt;a href=&quot;https://stackoverflow.com/a/31605916/2110812&quot;&gt;&lt;strong&gt;Answer&lt;/strong&gt;&lt;/a&gt;  for a same problem. It will definitely help you. No more deep specifications.&lt;/p&gt;\n\n&lt;p&gt;If you are confident about syntax for creating table, than it may happen when you add new column in your same table, for that...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1) Uninstall from your device and run it again.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2) Setting -&amp;gt; app -&amp;gt; ClearData&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; Change &lt;code&gt;DATABASE_VERSION&lt;/code&gt; in your &quot;DatabaseHandler&quot; class (If you have added new column than it will upgrade automatically)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;public DatabaseHandler(Context context) {\n    super(context, DATABASE_NAME, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, DATABASE_VERSION);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; Change &lt;code&gt;DATABASE_NAME&lt;/code&gt; in your &quot;DatabaseHandler&quot; class (I faced same problem. But I succeed by changing &lt;code&gt;DATABASE_NAME&lt;/code&gt;.)&lt;/p&gt;\n    ","\n&lt;p&gt;Points to remember when extending &lt;code&gt;SQLiteOpenHelper&lt;/code&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;super(context, DBName, null, DBversion);&lt;/code&gt; - This should be invoked first line of constructor&lt;/li&gt;\n&lt;li&gt;override &lt;code&gt;onCreate&lt;/code&gt; and &lt;code&gt;onUpgrade&lt;/code&gt; (if needed)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;onCreate&lt;/code&gt; will be invoked only when &lt;code&gt;getWritableDatabase()&lt;/code&gt; or &lt;code&gt;getReadableDatabase()&lt;/code&gt; is executed. And this will only invoked once when a &lt;code&gt;DBName&lt;/code&gt; specified in the first step is not available. You can add create table query on &lt;code&gt;onCreate&lt;/code&gt; method&lt;/li&gt;\n&lt;li&gt;Whenever you want to add new table just change &lt;code&gt;DBversion&lt;/code&gt; and do the queries in &lt;code&gt;onUpgrade&lt;/code&gt; table or simply uninstall then install the app.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;You can create database &amp;amp; table like &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;public class DbHelper extends SQLiteOpenHelper {\nprivate &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; String DBNAME &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &quot;testdatbase.db&quot;;\nprivate &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; VERSION &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n\npublic DbHelper(Context context) {\n    super(context, DBNAME, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, VERSION);\n    &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated constructor stub\n}\n\n&lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\npublic void onCreate(SQLiteDatabase db) {\n    &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated &lt;span class=&quot;hljs-keyword&quot;&gt;method&lt;/span&gt; stub\n    db.execSQL(&quot;create table BookDb(id integer primary key autoincrement,BookName text,Author text,IssuedOn text,DueDate text,Fine text,Totalfine text&quot;);\n\n}\n\n&lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\npublic void onUpgrade(SQLiteDatabase db, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; oldVersion, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; newVersion) {\n    db.execSQL(&quot;DROP TABLE IF EXISTS BookDb&quot;);\n    onCreate(db);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Note : if you want create another table or add columns or no such table, just increment the VERSION&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;onCreate&lt;/strong&gt; is called for the first time when creation of tables are needed. We need to override this method where we write the script for table creation which is executed by SQLiteDatabase. execSQL method. After executing in first time deployment, this method will not be called onwards.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;onUpgrade&lt;/em&gt;&lt;/strong&gt;\nThis method is called when database version is upgraded. Suppose for the first time deployment , database version was 1 and in second deployment there was change in database structure like adding extra column in table. Suppose database version is 2 now.&lt;/p&gt;\n    ","\n&lt;p&gt;Sqlite database override two methods &lt;/p&gt;\n\n&lt;p&gt;1) onCreate():\nThis method invoked only once when the application is start at first time . So it called only once &lt;/p&gt;\n\n&lt;p&gt;2)onUpgrade()\nThis method called when we change the database version,then this methods gets invoked.It is used for the alter the table structure like adding new column after creating DB Schema&lt;/p&gt;\n    ","\n&lt;p&gt;no such table found is mainly when you have not opened the &lt;code&gt;SQLiteOpenHelper&lt;/code&gt; class with &lt;code&gt;getwritabledata()&lt;/code&gt; and before this you also have to call make constructor with databasename &amp;amp; version. \nAnd &lt;code&gt;OnUpgrade&lt;/code&gt; is called whenever there is upgrade value in version number given in &lt;code&gt;SQLiteOpenHelper&lt;/code&gt; class.&lt;/p&gt;\n\n&lt;p&gt;Below is the code snippet (No such column found may be because of spell in column name):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;public class database_db {\n    entry_data endb;\n    String file_name&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&quot;Record.db&quot;;\n    SQLiteDatabase sq;\n    public database_db(Context c)\n    {\n        endb&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; entry_data(c, file_name, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;);\n    }\n    public database_db &lt;span class=&quot;hljs-keyword&quot;&gt;open&lt;/span&gt;()\n    {\n        sq&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;endb.getWritableDatabase();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; this;\n    }\n    public &lt;span class=&quot;hljs-keyword&quot;&gt;Cursor&lt;/span&gt; getdata(String &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sq.query(&lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;);\n    }\n    public long insert_data(String &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;,ContentValues &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sq.insert(&lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\n    }\n    public void &lt;span class=&quot;hljs-keyword&quot;&gt;close&lt;/span&gt;()\n    {\n        sq.close();\n    }\n    public void &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;(String &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;)\n    {\n        sq.delete(&lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;);\n    }\n}\nclass entry_data extends SQLiteOpenHelper\n{\n\n    public entry_data(Context context, String name, SQLiteDatabase.CursorFactory factory,\n                      &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; version) {\n        super(context, name, factory, version);\n        &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated constructor stub\n    }\n\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\n    public void onCreate(SQLiteDatabase sqdb) {\n        &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated &lt;span class=&quot;hljs-keyword&quot;&gt;method&lt;/span&gt; stub\n\n        sqdb.execSQL(&quot;CREATE TABLE IF NOT EXISTS &apos;YOUR_TABLE_NAME&apos;(Column_1 text not null,Column_2 text not null);&quot;);\n\n    }\n\n    public void onUpgrade(SQLiteDatabase db, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; oldVersion, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; newVersion) {\n          onCreate(db);\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you forget to provide a &quot;name&quot; string as the second argument to the constructor, it creates an &quot;in-memory&quot; database which gets erased when you close the app.&lt;/p&gt;\n    ","\n&lt;p&gt;Uninstall your application from the emulator or device. Run the app again. (OnCreate() is not executed when the database already exists)&lt;/p&gt;\n    ","\n&lt;p&gt;Your database name must end with .db also your query strings must have a terminator (;)&lt;/p&gt;\n    ","\n&lt;p&gt;Recheck your query in ur DatabaseHandler/DatabaseManager class(which ever you have took)&lt;/p&gt;\n    ","\n&lt;p&gt;In my case I get items from XML-file with &lt;code&gt;&amp;lt;string-array&amp;gt;&lt;/code&gt;, where I store &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s. In these &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s I hold SQL strings and apply one-by-one with &lt;code&gt;databaseBuilder.addMigrations(migration)&lt;/code&gt;. I made one mistake, forgot to add &lt;code&gt;\\&lt;/code&gt; before quote and got the exception:&lt;/p&gt;\n\n&lt;p&gt;android.database.sqlite.SQLiteException: no such column: some_value (code 1 SQLITE_ERROR): , while compiling: INSERT INTO table_name(id, name) VALUES(1, some_value)&lt;/p&gt;\n\n&lt;p&gt;So, this is a right variant:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;item&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; table_name(id, name) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \\&quot;some_value\\&quot;)\n&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;item&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Sqliteopenhelper&apos;s method have methods create and upgrade,create is used when any table is first time created and upgrade method will called everytime whenever table&apos;s number of column is changed.&lt;/p&gt;\n    "]},"randomTags":[{"name":"werkzeug","slug":"werkzeug"},{"name":"buffer-overflow","slug":"buffer-overflow"},{"name":"c++-standard-library","slug":"c++-standard-library"},{"name":"this","slug":"this"},{"name":"big-o","slug":"big-o"},{"name":"pip","slug":"pip"},{"name":"optimization","slug":"optimization"},{"name":"while-loop","slug":"while-loop"},{"name":"dom","slug":"dom"},{"name":"sequence","slug":"sequence"},{"name":"data-manipulation","slug":"data-manipulation"},{"name":"newline","slug":"newline"},{"name":"three.js","slug":"three.js"},{"name":"long-integer","slug":"long-integer"},{"name":"pdo","slug":"pdo"},{"name":"r-faq","slug":"r-faq"},{"name":"maps","slug":"maps"},{"name":"relative-path","slug":"relative-path"},{"name":"promise","slug":"promise"},{"name":"python-decorators","slug":"python-decorators"}]},"__N_SSG":true}