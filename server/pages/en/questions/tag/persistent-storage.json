{"pageProps":{"data":{"count":1,"rows":[{"id":607,"title":"Persist variables between page loads","slug":"persist-variables-between-page-loads-1657388558452","postType":"QUESTION","createdAt":"2022-07-09T17:42:38.000Z","updatedAt":"2022-07-09T17:42:38.000Z","tags":[{"id":2874,"name":"persistent-storage","slug":"persistent-storage","createdAt":"2022-07-09T17:42:38.000Z","updatedAt":"2022-07-09T17:42:38.000Z","Questions_Tags":{"questionId":607,"tagId":2874}}]}]},"slug":"persistent-storage","page":1,"answers":{"607":["\n&lt;p&gt;As HTTP is stateless, every time you load the page it will use the initial values of whatever you set in JavaScript. You can&apos;t set a global variable in JS and simply make that value stay after loading the page again.&lt;/p&gt;\n\n&lt;p&gt;There are a couple of ways you could store the value in another place so that you can initialize it on load using JavaScript&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Query string&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;When submitting a form using the &lt;code&gt;GET&lt;/code&gt; method, the url gets updated with a query string (&lt;code&gt;?parameter=value&amp;amp;something=42&lt;/code&gt;). You can utilize this by setting an input field in the form to a certain value. This would be the simplest example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form method=&lt;span class=&quot;hljs-string&quot;&gt;&quot;GET&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On initial load of the page, no query string is set. When you submit this form, the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; combination of the input are passed in the query string as &lt;code&gt;clicked=true&lt;/code&gt;. So when the page loads again with that query string you can check if the button was clicked.&lt;/p&gt;\n\n&lt;p&gt;To read this data, you can use the following script on page load:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;) {\n    name = name.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\[]/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\[&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\]]/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\]&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;[\\\\?&amp;amp;]&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&quot;=([^&amp;amp;#]*)&quot;&lt;/span&gt;),\n        results = regex.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; results === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(results[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; clicked = &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clicked&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(&lt;a href=&quot;https://stackoverflow.com/a/901144/124238&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Ability to use this depends on how your form currently works, if you already use a POST then this could be problematic. &lt;/p&gt;\n\n&lt;p&gt;In addition, for larger sets of data this is less than optimal. Passing around a string isn&apos;t a big deal but for arrays and objects of data you should probably use Web Storage or cookies. While the details differ a bit across browsers, the practical limit to URI length is around &lt;a href=&quot;https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers&quot;&gt;2000 characters&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Web Storage&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;With the introduction of HTML5 we also got Web Storage, which allows you to save information in the browser across page loads. There is &lt;code&gt;localStorage&lt;/code&gt; which can save data for a longer period (as long as the user doesn&apos;t manually clear it) and &lt;code&gt;sessionStorage&lt;/code&gt; which saves data only during your current browsing session. The latter is useful for you here, because you don&apos;t want to keep &quot;clicked&quot; set to true when the user comes back later.&lt;/p&gt;\n\n&lt;p&gt;Here I set the storage on the button click event, but you could also bind it to form submit or anything else.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[type=&quot;submit&quot;][value=&quot;Search&quot;]&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    sessionStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clicked&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;true&apos;&lt;/span&gt;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then when you load the page, you can check if it&apos;s set using this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; clicked = sessionStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clicked&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Even though this value is only saved during this browsing session, it might be possible you want to reset it earlier. To do so, use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;sessionStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;removeItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clicked&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you would want to save a JS object or array you should convert that to a string. According to the spec it should be possible to save other datatypes, but this isn&apos;t correctly implemented across browsers yet. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//set&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myObject&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(myObject));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//get&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myObject = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myObject&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Browser support is &lt;a href=&quot;http://caniuse.com/#feat=namevalue-storage&quot; rel=&quot;noreferrer&quot;&gt;pretty great&lt;/a&gt; so you should be safe to use this unless you need to support really old/obscure browsers. Web Storage is the future.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Cookies&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;An alternative to Web Storage is saving the data in a cookie. Cookies are mainly made to read data server-side, but can be used for purely client-side data as well. &lt;/p&gt;\n\n&lt;p&gt;You already use jQuery, which makes setting cookies quite easy. Again, I use the &lt;code&gt;click&lt;/code&gt; event here but could be used anywhere.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[type=&quot;submit&quot;][value=&quot;Search&quot;]&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;cookie&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clicked&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;true&apos;&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;expires&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}); &lt;span class=&quot;hljs-comment&quot;&gt;// expires in 1 day&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then on page load you can read the cookie like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; clicked = $.&lt;span class=&quot;hljs-title function_&quot;&gt;cookie&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clicked&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As cookies persist across sessions in your case you will need to unset them as soon as you&apos;ve done whatever you need to do with it. You wouldn&apos;t want the user to come back a day later and still have &lt;code&gt;clicked&lt;/code&gt; set to true.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(clicked === &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//doYourStuff();&lt;/span&gt;\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;cookie&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;clicked&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(a non-jQuery way to set/read cookies can be found &lt;a href=&quot;https://stackoverflow.com/a/4825695/124238&quot;&gt;right here&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;I personally wouldn&apos;t use a cookie for something simple as remembering a clicked state, but if the query string isn&apos;t an option and you need to support really old browsers that don&apos;t support sessionStorage this will work. You should implement that with a check for sessionStorage first, and only if that fails use the cookie method.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;window.name&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Although this seems like a hack to me that probably originated from before localStorage/sessionStorage, you could store information in the &lt;code&gt;window.name&lt;/code&gt; property:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;my value&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It can only store strings, so if you want to save an object you&apos;ll have to stringify it just like the above &lt;code&gt;localStorage&lt;/code&gt; example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;clicked&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The major difference is that this information is retained across not only page refreshes but also different domains. However, it is restricted to the current tab you&apos;re in.&lt;/p&gt;\n\n&lt;p&gt;This means you could save some information on your page and as long as the user stays in that tab, you could access that same information even if he browsed to another website and back. In general, I would advice against using this unless you need to actually store cross-domain information during a single browsing session.&lt;/p&gt;\n    ","\n&lt;p&gt;Try utilizing &lt;a href=&quot;http://api.jquery.com/jquery.holdReady/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;$.holdReady()&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;history&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form input[type=hidden]&quot;&lt;/span&gt;)\n          .&lt;span class=&quot;hljs-title function_&quot;&gt;replaceWith&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, el&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;input type=text&amp;gt;&quot;&lt;/span&gt;\n          });\n}\n\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;holdReady&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (history.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt; !== &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; history.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clicked&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) {\n       &lt;span class=&quot;hljs-comment&quot;&gt;// show hidden fields&lt;/span&gt;\n       &lt;span class=&quot;hljs-comment&quot;&gt;// if `history.state.clicked === true` ,&lt;/span&gt;\n       &lt;span class=&quot;hljs-comment&quot;&gt;// replace `input type=hidden` with `input type=text`&lt;/span&gt;\n       &lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n       &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(history);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// don&apos;t show hidden fields&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(history);\n    }\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;holdReady&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n\n  $(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;input[type=submit][value=Search]&quot;&lt;/span&gt;)\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n        e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (history.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-comment&quot;&gt;// do stuff&lt;/span&gt;\n          history.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;});\n          &lt;span class=&quot;hljs-comment&quot;&gt;// replace `input type=hidden` with `input type=text`&lt;/span&gt;\n          &lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n          &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(history);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n          &lt;span class=&quot;hljs-comment&quot;&gt;// do other stuff&lt;/span&gt;\n        };\n    });\n\n  });&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Search&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;hidden&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Using &lt;code&gt;localeStorage&lt;/code&gt; or &lt;code&gt;sessionStorage&lt;/code&gt; seems to be the best bet.&lt;/p&gt;\n\n&lt;p&gt;Intead of saving the &lt;code&gt;clicked&lt;/code&gt; variable in the globle scope store it this way:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(localeStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked&quot;&lt;/span&gt;) === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n    localeStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;FALSE&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// for the first time&lt;/span&gt;\n\n$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;input[type=&apos;submit&apos;][value=&apos;Search&apos;]&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;onclick&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;form.act.value=&apos;detailSearch&apos;;return true;&quot;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; clicked = localeStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked&quot;&lt;/span&gt;) == &lt;span class=&quot;hljs-string&quot;&gt;&quot;FALSE&quot;&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&quot;TRUE&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;FALSE&quot;&lt;/span&gt;;\n\n    localeStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked&quot;&lt;/span&gt;, clicked);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (clicked == &lt;span class=&quot;hljs-string&quot;&gt;&quot;TRUE&quot;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// show hidden fields&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// don&apos;t show hidden fields&lt;/span&gt;\n    }\n\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;input[type=&apos;submit&apos;][value=&apos;Search&apos;]&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n     form.&lt;span class=&quot;hljs-property&quot;&gt;act&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;detailSearch&apos;&lt;/span&gt;; \n     clicked = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;  \n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"randomTags":[{"name":"datetime","slug":"datetime"},{"name":"android-gradle-plugin","slug":"android-gradle-plugin"},{"name":"identity","slug":"identity"},{"name":"swing","slug":"swing"},{"name":"equality","slug":"equality"},{"name":"com-interop","slug":"com-interop"},{"name":"threetenbp","slug":"threetenbp"},{"name":"integer","slug":"integer"},{"name":"android-recyclerview","slug":"android-recyclerview"},{"name":"variable-length","slug":"variable-length"},{"name":"debugging","slug":"debugging"},{"name":"uiviewcontroller","slug":"uiviewcontroller"},{"name":"importerror","slug":"importerror"},{"name":"utc","slug":"utc"},{"name":"thread-safety","slug":"thread-safety"},{"name":"css-selectors","slug":"css-selectors"},{"name":"python-decorators","slug":"python-decorators"},{"name":"buffer-overflow","slug":"buffer-overflow"},{"name":"error-checking","slug":"error-checking"},{"name":"typescript","slug":"typescript"}]},"__N_SSG":true}