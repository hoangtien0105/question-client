{"pageProps":{"data":{"count":1,"rows":[{"id":28,"title":"Why does jQuery or a DOM method such as getElementById not find the element?","slug":"why-does-jquery-or-a-dom-method-such-as-getelementbyid-not-find-the-element-1657384326458","postType":"QUESTION","createdAt":"2022-07-09T16:32:06.000Z","updatedAt":"2022-07-09T16:32:06.000Z","tags":[{"id":94,"name":"dom","slug":"dom","createdAt":"2022-07-09T16:32:06.000Z","updatedAt":"2022-07-09T16:32:06.000Z","Questions_Tags":{"questionId":28,"tagId":94}}]}]},"slug":"dom","page":1,"answers":{"28":["\n&lt;p&gt;The element you were trying to find wasnt in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot; rel=&quot;noreferrer&quot;&gt;DOM&lt;/a&gt; when your script ran.&lt;/p&gt;\n&lt;p&gt;The position of your DOM-reliant script can have a profound effect on its behavior. Browsers parse HTML documents from top to bottom. Elements are added to the DOM and scripts are (generally) executed as they&apos;re encountered. &lt;strong&gt;This means that order matters.&lt;/strong&gt; Typically, scripts can&apos;t find elements that appear later in the markup because those elements have yet to be added to the DOM.&lt;/p&gt;\n&lt;p&gt;Consider the following markup; script #1 fails to find the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; while script #2 succeeds:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;script #1:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// null&lt;/span&gt;\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;test div&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;script #2:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// &amp;lt;div id=&quot;test&quot; ...&lt;/span&gt;\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;So, what should you do? You&apos;ve got a few options:&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;Option 1: Move your script&lt;/h2&gt;\n&lt;p&gt;Given what we&apos;ve seen in the example above, an intuitive solution might be to simply move your script down the markup, past the elements you&apos;d like to access. In fact, for a long time, placing scripts at the bottom of the page was considered a &lt;a href=&quot;https://developer.yahoo.com/performance/rules.html#js_bottom&quot; rel=&quot;noreferrer&quot;&gt;best practice&lt;/a&gt; for a variety of reasons. Organized in this fashion, the rest of the document would be parsed before executing your script:\n&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n    });\n  &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- closing body tag --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;While this makes sense and is a solid option for legacy browsers, it&apos;s limited and there are more flexible, modern approaches available.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;Option 2: The &lt;code&gt;defer&lt;/code&gt; attribute&lt;/h2&gt;\n&lt;p&gt;While we did say that scripts are, &lt;em&gt;&quot;(generally) executed as they&apos;re encountered,&quot;&lt;/em&gt; modern browsers allow you to specify a different behavior. If you&apos;re linking an external script, you can make use of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;defer&lt;/code&gt;&lt;/a&gt; attribute.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;[&lt;code&gt;defer&lt;/code&gt;, a Boolean attribute,] is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/web/api/window/domcontentloaded_event&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This means that you can place a script tagged with &lt;code&gt;defer&lt;/code&gt; anywhere, even the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, and it should have access to the fully realized DOM.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://gh-canon.github.io/misc-demos/log-test-click.js&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;defer&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Just keep in mind...&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;defer&lt;/code&gt; can only be used for external scripts, i.e.: those having a &lt;code&gt;src&lt;/code&gt; attribute.&lt;/li&gt;\n&lt;li&gt;be aware of &lt;a href=&quot;https://caniuse.com/script-defer&quot; rel=&quot;noreferrer&quot;&gt;browser support&lt;/a&gt;, i.e.: buggy implementation in IE &amp;lt; 10&lt;/li&gt;\n&lt;/ol&gt;\n&lt;hr&gt;\n&lt;h2&gt;Option 3: Modules&lt;/h2&gt;\n&lt;p&gt;Depending upon your requirements, you may be able to utilize &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#applying_the_module_to_your_html&quot; rel=&quot;noreferrer&quot;&gt;JavaScript modules&lt;/a&gt;. Among other important distinctions from standard scripts (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#other_differences_between_modules_and_standard_scripts&quot; rel=&quot;noreferrer&quot;&gt;noted here&lt;/a&gt;), modules are deferred automatically and are not limited to external sources.&lt;/p&gt;\n&lt;p&gt;Set your script&apos;s &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;module&lt;/code&gt;, e.g.:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;module&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked: &quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n  });\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;Option 4: Defer with event handling&lt;/h2&gt;\n&lt;p&gt;Add a listener to an event that fires after your document has been parsed.&lt;/p&gt;\n&lt;h3&gt;DOMContentLoaded event&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/web/api/window/domcontentloaded_event&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt;&lt;/a&gt; fires after the DOM has been completely constructed from the initial parse, without waiting for things like stylesheets or images to load.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n    });\n  });\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h3&gt;Window: load event&lt;/h3&gt;\n&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; event fires after &lt;code&gt;DOMContentLoaded&lt;/code&gt; and additional resources like stylesheets and images have been loaded. For that reason, it fires later than desired for our purposes. Still, if you&apos;re considering older browsers like IE8, the support is nearly universal. Granted, you may want a &lt;a href=&quot;https://vanillajstoolkit.com/polyfills/addeventlistener/&quot; rel=&quot;noreferrer&quot;&gt;polyfill for &lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;load&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n    });\n  });\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h3&gt;jQuery&apos;s &lt;code&gt;ready()&lt;/code&gt;&lt;/h3&gt;\n&lt;p&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt; and &lt;code&gt;window:load&lt;/code&gt; each have their caveats. jQuery&apos;s &lt;a href=&quot;https://api.jquery.com/ready/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; delivers a hybrid solution, using &lt;code&gt;DOMContentLoaded&lt;/code&gt; when possible, failing over to &lt;code&gt;window:load&lt;/code&gt; when necessary, and firing its callback immediately if the DOM is already complete.&lt;/p&gt;\n&lt;p&gt;You can pass your ready handler directly to jQuery as &lt;code&gt;$(&lt;em&gt;handler&lt;/em&gt;)&lt;/code&gt;, e.g.:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://code.jquery.com/jquery-3.6.0.js&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;integrity&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;crossorigin&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  $(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#test&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n    });\n  });\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;Option 5: Event Delegation&lt;/h2&gt;\n&lt;p&gt;Delegate the event handling to an ancestor of the target element.&lt;/p&gt;\n&lt;p&gt;When an element raises an event (provided that it&apos;s a &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-bubbling&quot; rel=&quot;noreferrer&quot;&gt;bubbling&lt;/a&gt; event and nothing stops its propagation), each parent in that element&apos;s ancestry, all the way up to &lt;code&gt;window&lt;/code&gt;, receives the event as well. That allows us to attach a handler to an existing element and sample events as they bubble up from its descendants... even from descendants added after the handler was attached. All we have to do is check the event to see whether it was raised by the desired element and, if so, run our code.&lt;/p&gt;\n&lt;p&gt;Typically, this pattern is reserved for elements that don&apos;t exist at load time or to avoid attaching a large number of duplicate handlers. For efficiency, select the nearest reliable ancestor of the target element rather than attaching it to the &lt;code&gt;document&lt;/code&gt;.&lt;/p&gt;\n&lt;h3&gt;Native JavaScript&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ancestor&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- nearest ancestor available to our script --&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ancestor&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&quot;descendant&quot;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked:&quot;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;);\n      }\n    });\n  &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;descendant&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h3&gt;jQuery&apos;s &lt;code&gt;on()&lt;/code&gt;&lt;/h3&gt;\n&lt;p&gt;jQuery makes this functionality available through &lt;a href=&quot;https://api.jquery.com/on/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;on()&lt;/code&gt;&lt;/a&gt;. Given an event name, a selector for the desired descendant, and an event handler, it will resolve your delegated event handling and manage your &lt;code&gt;this&lt;/code&gt; context:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://code.jquery.com/jquery-3.6.0.js&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;integrity&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;crossorigin&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ancestor&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- nearest ancestor available to our script --&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#ancestor&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;#descendant&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clicked:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n    });\n  &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;descendant&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;click me&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Short and simple:&lt;/strong&gt; Because the elements you are looking for do not exist in the document (yet).&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;em&gt;For the remainder of this answer I will use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementById&lt;/code&gt;&lt;/a&gt; for examples, but the same applies to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.getElementsByTagName&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getElementsByTagName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Document.querySelector&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;querySelector&lt;/code&gt;&lt;/a&gt;, and any other DOM method that selects elements.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Possible Reasons&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;There are three reasons why an element might not exist:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;An element with the passed ID really does not exist in the document. You should double check that the ID you pass to &lt;code&gt;getElementById&lt;/code&gt; really matches an ID of an existing element in the (generated) HTML and that you have not &lt;em&gt;misspelled&lt;/em&gt; the ID (IDs are &lt;em&gt;case-sensitive&lt;/em&gt;!).&lt;/p&gt;\n&lt;p&gt;If you&apos;re using &lt;code&gt;getElementById&lt;/code&gt;, be sure you&apos;re &lt;strong&gt;only&lt;/strong&gt; giving the ID of the element (e.g., &lt;code&gt;document.getElemntById(&quot;the-id&quot;)&lt;/code&gt;). If you&apos;re using a method that accepts a CSS selector (like &lt;code&gt;querySelector&lt;/code&gt;), be sure you&apos;re including the &lt;code&gt;#&lt;/code&gt; before the ID to indicate you&apos;re looking for an ID (e.g., &lt;code&gt;document.querySelector(&quot;#the-id&quot;)&lt;/code&gt;). You must &lt;strong&gt;not&lt;/strong&gt; use the &lt;code&gt;#&lt;/code&gt; with &lt;code&gt;getElementById&lt;/code&gt;, and &lt;strong&gt;must&lt;/strong&gt; use it with &lt;code&gt;querySelector&lt;/code&gt; and similar. Also note that if the ID has characters in it that aren&apos;t valid in &lt;a href=&quot;https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier&quot; rel=&quot;noreferrer&quot;&gt;CSS identifiers&lt;/a&gt; (such as a &lt;code&gt;.&lt;/code&gt;; &lt;code&gt;id&lt;/code&gt; attributes containing &lt;code&gt;.&lt;/code&gt; characters are poor practice, but valid), you have to escape those when using &lt;code&gt;querySelector&lt;/code&gt; (&lt;code&gt;document.querySelector(&quot;#the\\\\.id&quot;)&lt;/code&gt;)) but not when using &lt;code&gt;getElementById&lt;/code&gt; (&lt;code&gt;document.getElementById(&quot;the.id&quot;)&lt;/code&gt;).&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The element does not exist &lt;em&gt;at the moment&lt;/em&gt; you call &lt;code&gt;getElementById&lt;/code&gt;.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The element isn&apos;t in the document you&apos;re querying even though you can see it on the page, because it&apos;s in an &lt;code&gt;iframe&lt;/code&gt; (which is its own document). Elements in &lt;code&gt;iframes&lt;/code&gt; aren&apos;t searched when you search the document that contains them.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;If the problem is reason 3 (it&apos;s in an &lt;code&gt;iframe&lt;/code&gt; or similar), you need to look through the document in the &lt;code&gt;iframe&lt;/code&gt;, not the parent document, perhaps by getting the &lt;code&gt;iframe&lt;/code&gt; element and using its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/contentDocument&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;contentDocument&lt;/code&gt;&lt;/a&gt; property to access its document (same-origin only). The rest of this answer addresses the first two reasons.&lt;/p&gt;\n&lt;p&gt;The second reason&amp;nbsp; it&apos;s not there &lt;em&gt;yet&lt;/em&gt;&amp;nbsp; is quite common. Browsers parse and process the HTML from top to bottom. That means that any call to a DOM element which occurs before that DOM element appears in the HTML, will fail.&lt;/p&gt;\n&lt;p&gt;Consider the following example:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; element = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;my_element&apos;&lt;/span&gt;);\n&amp;lt;/script&amp;gt;\n\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;my_element&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;div&lt;/code&gt; appears &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;script&lt;/code&gt;. At the moment the script is executed, the element does not exist &lt;em&gt;yet&lt;/em&gt; and &lt;code&gt;getElementById&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;jQuery&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;The same applies to all selectors with jQuery. jQuery won&apos;t find elements if you &lt;em&gt;misspelled&lt;/em&gt; your selector or you are trying to select them &lt;em&gt;before they actually exist&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;An added twist is when jQuery is not found because you have loaded the script without protocol and are running from file system:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;//somecdn.somewhere.com/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;this syntax is used to allow the script to load via HTTPS on a page with protocol https:// and to load the HTTP version on a page with protocol http://&lt;/p&gt;\n&lt;p&gt;It has the unfortunate side effect of attempting and failing to load &lt;code&gt;file://somecdn.somewhere.com...&lt;/code&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Solutions&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Before you make a call to &lt;code&gt;getElementById&lt;/code&gt; (or any DOM method for that matter), make sure the elements you want to access exist, i.e. the DOM is loaded.&lt;/p&gt;\n&lt;p&gt;This can be ensured by simply putting your JavaScript &lt;em&gt;after&lt;/em&gt; the corresponding DOM element&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;my_element&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; element = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;my_element&apos;&lt;/span&gt;);\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;in which case you can also put the code just before the closing body tag (&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;) (all DOM elements will be available at the time the script is executed).&lt;/p&gt;\n&lt;p&gt;Other solutions include listening to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.onload&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;load&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/DOMContentLoaded_%28event%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; events. In these cases it does not matter where in the document you place the JavaScript code, you just have to remember to put all DOM processing code in the event handlers.&lt;/p&gt;\n&lt;p&gt;Example:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// process DOM elements here&lt;/span&gt;\n};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// or&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// does not work IE 8 and below&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// process DOM elements here&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Please see the &lt;a href=&quot;http://www.quirksmode.org/js/introevents.html&quot; rel=&quot;noreferrer&quot;&gt;articles at quirksmode.org&lt;/a&gt; for more information regarding event handling and browser differences.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;jQuery&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;First make sure that jQuery is loaded properly. &lt;a href=&quot;http://www.netmagazine.com/tutorials/javascript-debugging-beginners&quot; rel=&quot;noreferrer&quot;&gt;Use the browser&apos;s developer tools&lt;/a&gt; to find out whether the jQuery file was found and correct the URL if it wasn&apos;t (e.g. add the &lt;code&gt;http:&lt;/code&gt; or &lt;code&gt;https:&lt;/code&gt; scheme at the beginning, adjust the path, etc.)&lt;/p&gt;\n&lt;p&gt;Listening to the &lt;code&gt;load&lt;/code&gt;/&lt;code&gt;DOMContentLoaded&lt;/code&gt;  events is exactly what jQuery is doing with &lt;a href=&quot;http://api.jquery.com/ready/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;.ready()&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[docs]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt;. All your jQuery code that affects DOM element should be inside that event handler.&lt;/p&gt;\n&lt;p&gt;In fact, the &lt;a href=&quot;http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery&quot; rel=&quot;noreferrer&quot;&gt;jQuery tutorial&lt;/a&gt; explicitly states:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;As almost everything we do when using jQuery reads or manipulates the document object model (DOM), we need to make sure that we start adding events etc. as soon as the DOM is ready.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;To do this, we register a ready event for the document.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;   &lt;span class=&quot;hljs-comment&quot;&gt;// do stuff when DOM is ready&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Alternatively you can also use the shorthand syntax:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do stuff when DOM is ready&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Both are equivalent.&lt;/p&gt;\n    ","\n&lt;p&gt;If the element you are trying to access is inside an &lt;code&gt;iframe&lt;/code&gt; and you try to access it outside the context of the &lt;code&gt;iframe&lt;/code&gt; this will also cause it to fail.&lt;/p&gt;\n\n&lt;p&gt;If you want to get an element in an iframe you can find out how &lt;a href=&quot;https://stackoverflow.com/a/1088569/1435985&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Reasons why id based selectors don&apos;t work&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;The element/DOM with id specified doesn&apos;t exist yet.&lt;/li&gt;\n&lt;li&gt;The element exists, but it is not registered in DOM [in case of HTML nodes appended dynamically from Ajax responses].&lt;/li&gt;\n&lt;li&gt;More than one element with the same id is present which is causing a conflict.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;Solutions&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Try to access the element after its declaration or alternatively use stuff like &lt;code&gt;$(document).ready();&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;For elements coming from Ajax responses, use the &lt;code&gt;.bind()&lt;/code&gt; method of jQuery. Older versions of jQuery had &lt;code&gt;.live()&lt;/code&gt; for the same.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Use tools [for example, webdeveloper plugin for browsers] to find duplicate ids and remove them.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;As @FelixKling pointed out, the most likely scenario is that the nodes you are looking for do not exist (yet).&lt;/p&gt;\n\n&lt;p&gt;However, modern development practices can often manipulate document elements outside of the document tree either with DocumentFragments or simply detaching/reattaching current elements directly.  Such techniques may be used as part of JavaScript templating or to avoid excessive repaint/reflow operations while the elements in question are being heavily altered.&lt;/p&gt;\n\n&lt;p&gt;Similarly, the new &quot;Shadow DOM&quot; functionality being rolled out across modern browsers allows elements to be part of the document, but not query-able by document.getElementById and all of its sibling methods (querySelector, etc.). This is done to encapsulate functionality and specifically hide it.&lt;/p&gt;\n\n&lt;p&gt;Again, though, it is most likely that the element you are looking for simply is not (yet) in the document, and you should do as Felix suggests. However, you should also be aware that that is increasingly not the only reason that an element might be unfindable (either temporarily or permanently).&lt;/p&gt;\n    ","\n&lt;p&gt;If script execution order is not the issue, another possible cause of the problem is that the element is not being selected properly:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;getElementById&lt;/code&gt; requires the passed string to be the ID &lt;em&gt;verbatim&lt;/em&gt;, and nothing else. If you prefix the passed string with a &lt;code&gt;#&lt;/code&gt;, and the ID does not start with a &lt;code&gt;#&lt;/code&gt;, nothing will be selected:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n  \n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Error, selected element will be null:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#foo&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Fix:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Similarly, for &lt;code&gt;getElementsByClassName&lt;/code&gt;, don&apos;t prefix the passed string with a &lt;code&gt;.&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n  \n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Error, selected element will be undefined:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.bar&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Fix:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;With querySelector, querySelectorAll, and jQuery, to match an element with a particular class name, put a &lt;code&gt;.&lt;/code&gt; directly before the class. Similarly, to match an element with a particular ID, put a &lt;code&gt;#&lt;/code&gt; directly before the ID:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;baz&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n  \n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Error, selected element will be null:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;baz&apos;&lt;/span&gt;)\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;baz&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Fix:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.baz&apos;&lt;/span&gt;)\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.baz&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The rules here are, in most cases, identical to those for CSS selectors, and can be seen in detail &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;To match an element which has two or more attributes (like two class names, or a class name and a &lt;code&gt;data-&lt;/code&gt; attribute), put the selectors for each attribute next to each other in the selector string, &lt;em&gt;without&lt;/em&gt; a space separating them (because a space indicates the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator&quot; rel=&quot;nofollow noreferrer&quot;&gt;descendant selector&lt;/a&gt;). For example, to select:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo bar&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;use the query string &lt;code&gt;.foo.bar&lt;/code&gt;. To select&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt; data-bar=&lt;span class=&quot;hljs-string&quot;&gt;&quot;someData&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;use the query string &lt;code&gt;.foo[data-bar=&quot;someData&quot;]&lt;/code&gt;. To select the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; below:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;data-username&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;bob&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n  &amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;use &lt;code&gt;div.parent &amp;gt; span[data-username=&quot;bob&quot;]&lt;/code&gt;.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Capitalization and spelling &lt;strong&gt;does matter&lt;/strong&gt; for all of the above. If the capitalization is different, or the spelling is different, the element will not be selected:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n  \n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Error, selected element will be null:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.results&apos;&lt;/span&gt;)\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.Result&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Fix:&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.result&apos;&lt;/span&gt;)\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.result&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;You also need to make sure the methods have the proper capitalization and spelling. Use one of:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(selector)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;querySelector&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;querySelectorAll&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getElementsByClassName&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getElementsByTagName&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getElementById&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Any other spelling or capitalization will not work. For example, &lt;code&gt;document.getElementByClassName&lt;/code&gt; will throw an error.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Make sure you pass a string to these selector methods. If you pass something that isn&apos;t a string to &lt;code&gt;querySelector&lt;/code&gt;, &lt;code&gt;getElementById&lt;/code&gt;, etc, it almost certainly won&apos;t work.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If the HTML attributes on elements you want to select are surrounded by quotes, they must be plain straight quotes (either single or double); curly quotes like &lt;code&gt;&lt;/code&gt; or &lt;code&gt;&lt;/code&gt; will not work if you&apos;re trying to select by ID, class, or attribute.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n    "]},"randomTags":[{"name":"sequence","slug":"sequence"},{"name":"hash","slug":"hash"},{"name":"main","slug":"main"},{"name":".net","slug":".net"},{"name":"relative-path","slug":"relative-path"},{"name":"fflush","slug":"fflush"},{"name":"uuid","slug":"uuid"},{"name":"csv","slug":"csv"},{"name":"microbenchmark","slug":"microbenchmark"},{"name":"web-scraping","slug":"web-scraping"},{"name":"newline","slug":"newline"},{"name":"sql-server","slug":"sql-server"},{"name":"python-3.x","slug":"python-3.x"},{"name":"firebase","slug":"firebase"},{"name":"storage","slug":"storage"},{"name":"type-punning","slug":"type-punning"},{"name":"application-state","slug":"application-state"},{"name":"printf","slug":"printf"},{"name":"passwords","slug":"passwords"},{"name":"comparison","slug":"comparison"}]},"__N_SSG":true}