{"pageProps":{"data":{"count":1,"rows":[{"id":470,"title":"What is the difference between \"px\", \"dip\", \"dp\" and \"sp\"?","slug":"what-is-the-difference-between-\"px\"-\"dip\"-\"dp\"-and-\"sp\"-1657388093250","postType":"QUESTION","createdAt":"2022-07-09T17:34:53.000Z","updatedAt":"2022-07-09T17:34:53.000Z","tags":[{"id":2391,"name":"units-of-measurement","slug":"units-of-measurement","createdAt":"2022-07-09T17:34:53.000Z","updatedAt":"2022-07-09T17:34:53.000Z","Questions_Tags":{"questionId":470,"tagId":2391}}]}]},"slug":"units-of-measurement","page":1,"answers":{"470":["\n&lt;p&gt;From the &lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Documentation&lt;/a&gt;:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt;&lt;br&gt;\n&lt;strong&gt;Pixels&lt;/strong&gt; - corresponds to actual pixels on the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;br&gt;\n&lt;strong&gt;Inches&lt;/strong&gt; - based on the physical size of the screen.&lt;br&gt;\n1 Inch OR 2.54 centimeters&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;mm&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;strong&gt;Millimeters&lt;/strong&gt; - based on the physical size of the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;pt&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;strong&gt;Points&lt;/strong&gt; - 1/72 of an inch based on the physical size of the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;dp&lt;/strong&gt; or &lt;strong&gt;dip&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;strong&gt;Density&lt;/strong&gt;-independent Pixels - an abstract unit that is based on the physical density of the screen. These units are relative to a 160\ndpi screen, so one dp is one pixel on a 160 dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion. Note: The compiler accepts both &quot;dip&quot; and &quot;dp&quot;, though &quot;dp&quot; is more consistent with &quot;sp&quot;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities#TaskUseDP&quot; rel=&quot;noreferrer&quot;&gt;Scaleable Pixels&lt;/a&gt; &lt;strong&gt;OR&lt;/strong&gt; &lt;a href=&quot;https://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;scale-independent pixels&lt;/a&gt; - this is like the dp unit, but it is also scaled by the user&apos;s font size preference. It is recommended you\nuse this unit when specifying font sizes, so they will be adjusted\nfor both the screen density and the user&apos;s preference. Note, the Android documentation is inconsistent on what &lt;code&gt;sp&lt;/code&gt; actually stands for, one &lt;a href=&quot;https://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;doc&lt;/a&gt; says &quot;scale-independent pixels&quot;, the &lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities#TaskUseDP&quot; rel=&quot;noreferrer&quot;&gt;other&lt;/a&gt; says &quot;scaleable pixels&quot;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;From &lt;a href=&quot;https://blog.mindorks.com/understanding-density-independent-pixel-sp-dp-dip-in-android&quot; rel=&quot;noreferrer&quot;&gt;Understanding Density Independence In Android&lt;/a&gt;:&lt;/p&gt;\n&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;Density Bucket&lt;/th&gt;\n&lt;th&gt;Screen Density&lt;/th&gt;\n&lt;th&gt;Physical Size&lt;/th&gt;\n&lt;th&gt;Pixel Size&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;ldpi&lt;/td&gt;\n&lt;td&gt;120 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 120 dpi = 60x60 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;mdpi&lt;/td&gt;\n&lt;td&gt;160 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 160 dpi = 80x80 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;hdpi&lt;/td&gt;\n&lt;td&gt;240 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 240 dpi = 120x120 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;xhdpi&lt;/td&gt;\n&lt;td&gt;320 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 320 dpi = 160x160 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;xxhdpi&lt;/td&gt;\n&lt;td&gt;480 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 480 dpi = 240x240 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;xxxhdpi&lt;/td&gt;\n&lt;td&gt;640 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 640 dpi = 320x320 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;Unit&lt;/th&gt;\n&lt;th&gt;Description&lt;/th&gt;\n&lt;th&gt;Units Per Physical Inch&lt;/th&gt;\n&lt;th&gt;Density Independent?&lt;/th&gt;\n&lt;th&gt;Same Physical Size On Every Screen?&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;px&lt;/td&gt;\n&lt;td&gt;Pixels&lt;/td&gt;\n&lt;td&gt;Varies&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;in&lt;/td&gt;\n&lt;td&gt;Inches&lt;/td&gt;\n&lt;td&gt;1&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;mm&lt;/td&gt;\n&lt;td&gt;Millimeters&lt;/td&gt;\n&lt;td&gt;25.4&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;pt&lt;/td&gt;\n&lt;td&gt;Points&lt;/td&gt;\n&lt;td&gt;72&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;dp&lt;/td&gt;\n&lt;td&gt;Density Independent Pixels&lt;/td&gt;\n&lt;td&gt;~160&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;sp&lt;/td&gt;\n&lt;td&gt;Scale Independent Pixels&lt;/td&gt;\n&lt;td&gt;~160&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;p&gt;More info can be also be found in the &lt;a href=&quot;https://material.io/design/layout/pixel-density.html&quot; rel=&quot;noreferrer&quot;&gt;Google Design Documentation&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Pretty much everything about this and how to achieve the best support for multiple screens of different sizes and densities is very well documented here:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html&quot; rel=&quot;noreferrer&quot;&gt;Supporting Multiple Screens&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Screen size&lt;/strong&gt;&lt;br&gt;\nActual physical size, measured as the screen&apos;s diagonal.\nFor simplicity, Android groups all actual screen sizes into four\ngeneralized sizes: small, normal, large, and extra-large.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Screen density&lt;/strong&gt;&lt;br&gt;\nThe number of pixels within a physical area of the\nscreen; usually referred to as dpi (dots per inch). For example, a\n&quot;low&quot; density screen has fewer pixels within a given physical area,\ncompared to a &quot;normal&quot; or &quot;high&quot; density screen. For simplicity,\nAndroid groups all actual screen densities into six generalized\ndensities: low, medium, high, extra-high, extra-extra-high, and\nextra-extra-extra-high.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Orientation&lt;/strong&gt;&lt;br&gt;The orientation of the screen from the user&apos;s point of\nview. This is either landscape or portrait, meaning that the screen&apos;s\naspect ratio is either wide or tall, respectively. Be aware that not\nonly do different devices operate in different orientations by\ndefault, but the orientation can change at runtime when the user\nrotates the device.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Resolution&lt;/strong&gt;&lt;br&gt; The total number of physical pixels on\na screen. When adding support for multiple screens, applications do\nnot work directly with resolution; applications should be concerned\nonly with screen size and density, as specified by the generalized\nsize and density groups.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Density-independent pixel (dp)&lt;/strong&gt;&lt;br&gt; A virtual\npixel unit that you should use when defining UI layout, to express\nlayout dimensions or position in a density-independent way.\nThe density-independent pixel is equivalent to one physical pixel on a 160\ndpi screen, which is the baseline density assumed by the system for a\n&quot;medium&quot; density screen. At runtime, the system transparently handles\nany scaling of the dp units, as necessary, based on the actual density\nof the screen in use. The conversion of dp units to screen pixels is\nsimple:\n&lt;code&gt;px = dp * (dpi / 160)&lt;/code&gt;.\nFor example, on a 240 dpi screen, 1 dp\nequals 1.5 physical pixels. You should always use dp units when\ndefining your application&apos;s UI, to ensure proper display of your UI on\nscreens with different densities.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;If you are at all serious about developing an Android app for more than one type of device, you should have read the screens support development document at least once. In addition to that, it is always a good thing to know the actual number of active devices that have a particular screen configuration.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://developer.android.com/resources/dashboard/screens.html&quot; rel=&quot;noreferrer&quot;&gt;Screen Sizes and Densities&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I will elaborate more on how exactly does dp convert to px:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If running on an mdpi device, a &lt;code&gt;150 x 150 px&lt;/code&gt; image will take up &lt;code&gt;150 * 150 dp&lt;/code&gt; of screen space.&lt;/li&gt;\n&lt;li&gt;If running on an hdpi device, a &lt;code&gt;150 x 150 px&lt;/code&gt; image will take up &lt;code&gt;100 * 100 dp&lt;/code&gt; of screen space.&lt;/li&gt;\n&lt;li&gt;If running on an xhdpi device, a &lt;code&gt;150x150 px&lt;/code&gt; image will take up &lt;code&gt;75 * 75 dp&lt;/code&gt; of screen space.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The other way around: say, you want to add an image to your application and you need it to fill a &lt;code&gt;100 * 100 dp&lt;/code&gt; control. You&apos;ll need to create different size images for supported screen sizes:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;100 * 100 px&lt;/code&gt; image for mdpi&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;150 * 150 px&lt;/code&gt; image for hdpi&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;200 * 200 px&lt;/code&gt; image for xhdpi&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;px - Pixels&lt;/strong&gt; - point per scale corresponds to actual pixels on the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;i - Inches&lt;/strong&gt; - based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;mm - Millimeters&lt;/strong&gt; - based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;pt - Points&lt;/strong&gt; - 1/72 of an inch based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;dp - Density-independent Pixels&lt;/strong&gt; - an abstract unit that is based on the physical density of the screen.\nThese units are relative to a 160 dpi screen, so one &lt;code&gt;dp&lt;/code&gt; is one pixel on a 160 dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion.\nNote: The compiler accepts both &lt;code&gt;dip&lt;/code&gt; and &lt;code&gt;dp&lt;/code&gt;, though &lt;code&gt;dp&lt;/code&gt; is more consistent with &lt;code&gt;sp&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;sp - &lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities#TaskUseDP&quot; rel=&quot;noreferrer&quot;&gt;scalable pixels&lt;/a&gt;&lt;/strong&gt; - this is like the &lt;code&gt;dp&lt;/code&gt; unit,\nbut it is also scaled by the user&apos;s font size preference.\nIt is recommended that you use this unit when specifying font sizes,\nso they will be adjusted for both the screen density and the user&apos;s preference.&lt;/p&gt;\n&lt;p&gt;Take the example of two screens that are the same size but one has a screen density of 160 dpi (dots per inch, i.e. pixels per inch) and the other is 240 dpi.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;                          Lower resolution screen     Higher resolution, same size\nPhysical &lt;span class=&quot;hljs-attribute&quot;&gt;Width&lt;/span&gt;                      &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt; inches                        &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt; inches\nDots Per Inch (dpi)               &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;\nPixels (=width*dpi)                 &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;360&lt;/span&gt;\nDensity (factor of baseline &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;)    &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt;\n\nDensity-independent pixels          &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;\n(dip or dp or dps)\n\nScale-independent pixels \n (sip or sp)                  Depends on user &lt;span class=&quot;hljs-attribute&quot;&gt;font&lt;/span&gt; size settings    same\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Moreover you should have a clear understanding of the following concepts:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Screen size:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Actual physical size, measured as the screen&apos;s diagonal. For simplicity, Android groups all actual screen sizes into\nfour generalized sizes: small, normal, large, and extra-large.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Screen density:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The number of pixels within a physical area of the screen; usually referred to as dpi (dots per inch). For example, a\n&quot;low&quot; density screen has fewer pixels within a given physical area,\ncompared to a &quot;normal&quot; or &quot;high&quot; density screen. For simplicity,\nAndroid groups all actual screen densities into four generalized\ndensities: low, medium, high, and extra high.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Orientation:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The orientation of the screen from the user&apos;s point of view. This is either landscape or portrait, meaning that the\nscreen&apos;s aspect ratio is either wide or tall, respectively. Be aware\nthat not only do different devices operate in different orientations\nby default, but the orientation can change at runtime when the user\nrotates the device.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Resolution:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The total number of physical pixels on a screen. When adding support for multiple screens, applications do not work directly\nwith resolution; applications should be concerned only with screen\nsize and density, as specified by the generalized size and density\ngroups.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Density-independent pixel (dp):&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;A virtual pixel unit that you should use when defining UI layout, to express layout dimensions or\nposition in a density-independent way. The density-independent pixel\nis equivalent to one physical pixel on a 160 dpi screen, which is the\nbaseline density assumed by the system for a &quot;medium&quot; density screen.\nAt runtime, the system transparently handles any scaling of the dp\nunits, as necessary, based on the actual density of the screen in use.\nThe conversion of dp units to screen pixels is simple: px = dp * (dpi\n/ 160). For example, on a 240 dpi screen, 1 dp equals 1.5 physical\npixels. You should always use dp units when defining your\napplication&apos;s UI, to ensure proper display of your UI on screens with\ndifferent densities.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Reference: &lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html#terms&quot; rel=&quot;noreferrer&quot;&gt;Android developers site&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;dp&lt;/code&gt; is  &lt;code&gt;dip&lt;/code&gt;. Use it for everything (margin, padding, etc.).&lt;/p&gt;\n\n&lt;p&gt;Use &lt;code&gt;sp&lt;/code&gt; for {text-size} only. &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;To get the same size on different screen densities, Android translates these units into pixels at runtime, so there is no tricky math for you to do.&lt;/h2&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;See the difference between &lt;code&gt;px&lt;/code&gt;, &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;sp&lt;/code&gt; on different screen sizes.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/84sUp.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;Source: &lt;a href=&quot;http://www.bignerdranch.com/we-write/android-programming.html&quot;&gt;Android Programming: The Big Nerd Ranch Guide&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;Definitions&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt; or dot is a &lt;em&gt;pixel&lt;/em&gt; on the physical screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;dpi&lt;/strong&gt; are pixels per inch on the physical screen and represent the density of the display.&lt;/p&gt;\n\n&lt;p&gt;Android gives &lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html#range&quot; rel=&quot;noreferrer&quot;&gt;alias names to several densities&lt;/a&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;ldpi (low) ~120dpi&lt;/li&gt;\n&lt;li&gt;mdpi (medium) ~160dpi&lt;/li&gt;\n&lt;li&gt;hdpi (high) ~240dpi\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;most devices in 2015 are here&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;xhdpi (extra-high) ~320dpi\n\n&lt;ul&gt;\n&lt;li&gt;Apple iPhone 4/5/6, Nexus 4&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;xxhdpi (extra-extra-high) ~480dpi\n\n&lt;ul&gt;\n&lt;li&gt;Nexus 5&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;xxxhdpi (extra-extra-extra-high) ~640dpi&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;dip&lt;/strong&gt; or &lt;strong&gt;dp&lt;/strong&gt; are &lt;em&gt;density-indenpendant pixels&lt;/em&gt;, i.e. they correspond to more or less pixels depending on the physical density.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;1dp = 1px on mdpi&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/fAucF.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/fAucF.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt; or &lt;strong&gt;sip&lt;/strong&gt; is a &lt;em&gt;scale-independant pixel&lt;/em&gt;. They are scaled when the &lt;em&gt;Large Text&lt;/em&gt; option is turned on in &lt;kbd&gt;Settings&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;Accessibility&lt;/kbd&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;1sp = 1dp&lt;/li&gt;\n&lt;li&gt;1sp = 1.2dp with accessibility Large Text&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1&gt;What to use?&lt;/h1&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Use &lt;strong&gt;sp&lt;/strong&gt; for Text size.&lt;/p&gt;\n  \n  &lt;p&gt;Use &lt;strong&gt;dp&lt;/strong&gt; for everything else.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;I have calculated the formula below to make the conversions &lt;code&gt;dpi&lt;/code&gt; to &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;sp&lt;/code&gt;\n&lt;a href=&quot;https://i.stack.imgur.com/DoAxa.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/DoAxa.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://answersfactory.com/difference-between-px-dp-dip-and-sp-in-android&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source 1&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://stefan222devel.blogspot.com/2012/10/android-screen-densities-sizes.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source 2&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source 3&lt;/a&gt;: (data from source 3 is given below)&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;These are dimension values defined in XML. A dimension is specified\nwith a number followed by a unit of measure. For example: 10px, 2in,\n5sp. The following units of measure are supported by Android:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;dp&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Density-independent Pixels - An abstract unit that is based on the\nphysical density of the screen. These units are relative to a 160 dpi\n(dots per inch) screen, on which 1dp is roughly equal to 1px. When\nrunning on a higher density screen, the number of pixels used to draw\n1dp is scaled up by a factor appropriate for the screen&apos;s dpi.\nLikewise, when on a lower density screen, the number of pixels used\nfor 1dp is scaled down. The ratio of dp-to-pixel will change with the\nscreen density, but not necessarily in direct proportion. Using dp\nunits (instead of px units) is a simple solution to making the view\ndimensions in your layout resize properly for different screen\ndensities. In other words, it provides consistency for the real-world\nsizes of your UI elements across different devices.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Scale-independent Pixels - This is like the dp unit, but it is also\nscaled by the user&apos;s font size preference. It is recommended that you use\nthis unit when specifying font sizes, so they will be adjusted for\nboth the screen density and the user&apos;s preference.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;pt&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Points - 1/72 of an inch based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Pixels - Corresponds to actual pixels on the screen. This unit of\nmeasure is not recommended because the actual representation can vary\nacross devices; each device may have a different number of pixels per\ninch and may have more or fewer total pixels available on the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;mm&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Millimeters - Based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Inches - Based on the physical size of the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A dimension is a simple resource that is referenced using the value provided in the name attribute (not the name of the XML file). As such, you can combine dimension resources with other simple resources in one XML file, under one  element.&lt;/p&gt;\n    ","\n&lt;p&gt;Basically the only time where px applies is one px, and that&apos;s if you want exactly one pixel on the screen like in the case of a divider: &lt;/p&gt;\n\n&lt;p&gt;On &amp;gt;160 dpi, you may get 2-3 pixels, &lt;/p&gt;\n\n&lt;p&gt;On &amp;gt;120 dpi, it rounds to 0.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Pixels - corresponds to actual pixels on the screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;dp or dip&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Density-independent Pixels - an abstract unit that is based on the physical density of the screen. These units are relative to a 160 dpi screen, so one dp is one pixel on a 160 dpi screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Use of dp:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Density independence&lt;/strong&gt; -\nYour application achieves density independence when it preserves the physical size (from the users point of view) of user interface elements when displayed on screens with different densities. (ie) The image should look the same size (not enlarged or shrinked) in different types of screens.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Scale-independent Pixels - this is like the dp unit, but it is also scaled by the user&apos;s font size preference.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot;&gt;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;Where to use what &amp;amp; relationship between px &amp;amp; dp?&lt;/h2&gt;\n&lt;h3&gt;Density-independent pixel (dp)&lt;/h3&gt;\n&lt;p&gt;A virtual pixel unit that you should use when defining UI layout, to express layout dimensions or position in a density-independent way. As described above, the density-independent pixel is equivalent to one physical pixel on a 160 dpi screen, which is the baseline density assumed by the system for a &quot;medium&quot; density screen. At runtime, the system transparently handles any scaling of the dp units, as necessary, based on the actual density of the screen in use. The conversion of dp units to screen pixels is\nsimple:&lt;/p&gt;\n&lt;p&gt;px = dp * (dpi / 160).&lt;/p&gt;\n&lt;p&gt;For example, on a 240 dpi screen, 1 dp equals 1.5 physical pixels. You should always use dp units when defining your application&apos;s UI, to ensure\nproper display of your UI on screens with different densities.&lt;/p&gt;\n&lt;p&gt;Understanding pixel to dp and vice versa is very essential (especially for giving exact dp values to creative team)&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;dp = px * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; / dpi\n\nMDPI = &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; dpi || Therefore, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; MDPI &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\nFor example, &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; you want to convert &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; pixel to dp, use the above formula,\ndp = &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;20.&lt;/span&gt;\nSo, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; pixel = &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; dp.\n\nHDPI = &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; dpi - So, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; HDPI &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\nXHDPI = &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; dpi - So, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; XHDPI &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\nXXHDPI = &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt; dpi - So, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; XXHDPI &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\n\nFor example, &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; us consider Nexus &lt;span class=&quot;hljs-number&quot;&gt;4.&lt;/span&gt;\nIf &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; pixels to be converted to dp &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; it &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; a Nexus &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; screen, developers can\nconvert it to dp easily &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; the following calculation :\ndp = &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; dp\nScreen dimension:\n&lt;span class=&quot;hljs-number&quot;&gt;768&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;1280&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;pixel &lt;span class=&quot;hljs-title&quot;&gt;resolution&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; ppi &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt;dpi&lt;/span&gt;)\n&lt;span class=&quot;hljs-title&quot;&gt;Optional&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;screen size&lt;/span&gt;):\n 4.7&quot; diagonal\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;\n&lt;li&gt;Try to get all pixel values in even numbers from the creative team. Otherwise precision lose will happen while multiplying with 0.5.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;px&lt;/h3&gt;\n&lt;p&gt;It is explained above. Try to avoid in layout files. But there are some cases, where px is required. for example, ListView divider line. px is better here for giving a one-pixel line as a divider for all across screen resolutions.&lt;/p&gt;\n&lt;h3&gt;sp&lt;/h3&gt;\n&lt;p&gt;Use sp for font sizes. Then only the font inside the application will change while device fonts size changes (that is, Display -&amp;gt; Fonts on Device). If you want to keep a static sized font inside the app, you can give the font dimension in dp. In such a case, it will never change. Developers may get such a requirement for some specific screens, for that, developers can use dp instead of sp. In all other cases, sp is recommended.&lt;/p&gt;\n    ","\n&lt;p&gt;You can see the difference between &lt;code&gt;px&lt;/code&gt; and &lt;code&gt;dp&lt;/code&gt; from the below picture, and you can also find that the &lt;code&gt;px&lt;/code&gt; and &lt;code&gt;dp&lt;/code&gt; could not guarantee the same physical sizes on the different screens.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/KFn2N.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Anything related with the size of text and appearance must use &lt;code&gt;sp&lt;/code&gt; or &lt;code&gt;pt&lt;/code&gt;. Whereas, anything related to the size of the controls, the layouts, etc. must be used with &lt;code&gt;dp&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can use both &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;dip&lt;/code&gt; at its places.&lt;/p&gt;\n    ","\n&lt;p&gt;I would only use dp.&lt;/p&gt;\n\n&lt;p&gt;There is a lot of talk about using &quot;sp&quot; for font sizes, and while I appreciate the point, I don&apos;t think that it is the right thing to do from a design point of view. You can end up breaking your design if the user has some wonky font size selection, and the user will end up blaming &lt;em&gt;the app&lt;/em&gt;, and not their own life choices.&lt;/p&gt;\n\n&lt;p&gt;Also, if you take an sp-font app on a 160&amp;nbsp;dpi tablet, you will find that &lt;em&gt;everything&lt;/em&gt; scales up... but your font, which is going to look tiny in comparison. It isn&apos;t a good look.&lt;/p&gt;\n\n&lt;p&gt;While the idea of &quot;sp&quot; fonts has a good heart, it is a poor idea. Stick with dp for everything.&lt;/p&gt;\n    ","\n&lt;p&gt;sp = scale independent pixel&lt;/p&gt;\n&lt;p&gt;dp = dip = density independent pixels&lt;/p&gt;\n&lt;p&gt;dpi = dots per inch&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;We should avoid to use &lt;strong&gt;sp&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;We should use &lt;strong&gt;dp&lt;/strong&gt; to support multiple screens.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Android supports different screen resolutions&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;ldpi (low) ~120&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;mdpi (medium) ~160&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;hdpi (high) ~240&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;xhdpi (extra-high) ~320&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;xxhdpi (extra-extra-high) ~480&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;xxxhdpi (extra-extra-extra-high) ~640&amp;nbsp;dpi&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;An 120 dp ldpi device has 120 pixels in 1 inch size.&lt;/p&gt;\n&lt;p&gt;The same for other densities...&lt;/p&gt;\n&lt;p&gt;We as software engineers should use this conversion formula:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;pixel = dp * (density / 160)&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So 240 dpi device&apos;s 1 dp will have = 1 * (240/160) = 3/2 = 1.5 pixels.&lt;/p&gt;\n&lt;p&gt;And 480 dpi device&apos;s 1 dp will have = 1 * (480/160) = 3 pixels.&lt;/p&gt;\n&lt;p&gt;Using this 1.5 and 3 pixels knowledge, a software engineer can design layouts for different densities.&lt;/p&gt;\n&lt;p&gt;To check screen parameters of any device:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;DisplayMetrics&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;metrics&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DisplayMetrics&lt;/span&gt;();\ngetWindowManager().getDefaultDisplay().getMetrics(metrics);\n\nToast.makeText(\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;4:&quot;&lt;/span&gt; + metrics.heightPixels + &lt;span class=&quot;hljs-string&quot;&gt;&quot;,&quot;&lt;/span&gt; + metrics.density + &lt;span class=&quot;hljs-string&quot;&gt;&quot;,&quot;&lt;/span&gt;\n    + metrics.densityDpi, Toast.LENGTH_LONG).show();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Difference between &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;sp&lt;/code&gt; units mentioned as &quot;&lt;em&gt;user&apos;s font size preference&lt;/em&gt;&quot; by the answers copied from official documentation can be seen at run time by changing &lt;code&gt;Settings-&amp;gt;Accessibility-&amp;gt;Large Text&lt;/code&gt; option.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Large Text&lt;/code&gt; option forces text to become &lt;code&gt;1.3&lt;/code&gt; times bigger.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; LARGE_FONT_SCALE = &lt;span class=&quot;hljs-number&quot;&gt;1.3f&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This might be well of course vendor dependent since it lies in &lt;a href=&quot;https://android.googlesource.com/platform/packages/apps/Settings/+/android-4.3.1_r1/src/com/android/settings/AccessibilitySettings.java&quot; rel=&quot;noreferrer&quot;&gt;packages/apps/Settings&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;dpi -&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Dots per inches&lt;/li&gt;\n&lt;li&gt;Measuring the pixel density of the screen.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;px - pixel&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;For mapping screen pixels&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;pt - points&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;About 1/72 of an inch, with respect to physical screen size.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;in - inch\n - with respect to physical screen size(1 inch = 2.54 cm).&lt;/p&gt;\n\n&lt;p&gt;mm- milimeter\n - with respect to physical screen size.&lt;/p&gt;\n\n&lt;p&gt;sp - scale-independent pixel.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Based on user`s font size preference.&lt;/li&gt;\n&lt;li&gt;Font should be in &apos;sp&apos;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;dip -&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;dip == dp&lt;/li&gt;\n&lt;li&gt;Density independent pixel.&lt;/li&gt;\n&lt;li&gt;It varies based on Screen Density.&lt;/li&gt;\n&lt;li&gt;In 160 dpi screen, 1 dp = 1 pixel.&lt;/li&gt;\n&lt;li&gt;Use dp except the text font size.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In standard, dp and sp are used. sp for font size and dp for everything else.&lt;/p&gt;\n\n&lt;p&gt;Formula for conversion of units:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;px = dp * ( dpi / 160 );&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;Density Bucket -&amp;gt; Screen Display =&amp;gt; Physical Size        =&amp;gt; Pixel Size                   \n\nldpi         -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;x60 px   \n\nmdpi         -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;x80 px   \n\nhdpi         -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;x120 px  \n\nxhdpi        -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;x160 px  \n\nxxhdpi       -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;x240 px \n\nxxxhdpi      -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;640&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;640&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt;x320 px  \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Please read the answer from the community wiki.\nBelow mentioned is some information to be considered in addition to the above answers. Most Android developers miss this while developing apps, so I am adding these points.&lt;/p&gt;\n&lt;p&gt;sp = scale independent pixel&lt;/p&gt;\n&lt;p&gt;dp = density independent pixels&lt;/p&gt;\n&lt;p&gt;dpi = density pixels&lt;/p&gt;\n&lt;p&gt;I have gone through the above answers...not finding them exactly correct.\nsp for text size, dp for layout bounds - standard.\nBut &lt;strong&gt;sp for text size will break the layout if used carelessly&lt;/strong&gt; in most of the devices.&lt;/p&gt;\n&lt;p&gt;sp take the text size of the device, whereas dp take that of device density standard( never change in a device)\nSay 100sp text can occupy 80% of the screen or 100% of the screen depending on the font size set in the device&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/9syOs.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/9syOs.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;You can use sp for layout bounds also, it will work :)\n&lt;strong&gt;No standard app use sp for whole text&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Use sp and dp for text size considering UX.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Don&apos;t use sp for text in the toolbar( can use android dimens available for different screen sizes with dp)&lt;/li&gt;\n&lt;li&gt;Don&apos;t use sp for text in small bounded buttons, very smaller text, etc&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Some people use huge FONT size in their phone for more readability, giving them small hardcoded sized text will be a UX issue. Put sp for text where necessary, but make sure it won&apos;t break the layout when the user changes his settings.&lt;/p&gt;\n&lt;p&gt;Similarly, if you have a single app supporting all dimensions, adding xxxhdpi assets increases the app size a lot. But now xxxhdpi phones are common so we have to include xxxhdpi assets at least for icons in the sidebar, toolbar, and bottom bar. It&apos;s better to move to vector images to have a uniform and better quality images for all screen sizes.&lt;/p&gt;\n&lt;p&gt;Also, note that people use custom fonts on their phones. So lack of a font can cause problems regarding spacing and all. Say text size 12sp for a custom font may take some pixels extra than the default font.&lt;/p&gt;\n&lt;p&gt;Refer to google developer site for screen densities and base density details for android.\n&lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.android.com/training/multiscreen/screendensities&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Screen Size&lt;/strong&gt; in &lt;code&gt;Android&lt;/code&gt; is grouped into categories &lt;code&gt;small&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;extra large&lt;/code&gt;, &lt;code&gt;double-extra&lt;/code&gt; and &lt;code&gt;triple-extra&lt;/code&gt;. Screen density is the number of pixels within an area (like an inch) of the screen. Generally, it is measured in dots-per-inch (dpi). Screen density is grouped as low, medium, high, and extra high. Resolution is the total number of pixels on the screen.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;dp:&lt;/strong&gt; Density Independent Pixel, varies based on screen density. In 160 dpi screen, 1 dp = 1 pixel. Except for font size, use dp always.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;dip:&lt;/strong&gt; dip == dp. In earlier Android versions dip was used and later changed to dp.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;sp:&lt;/strong&gt; Scale Independent Pixel, scaled based on users font size preference. Fonts should use sp.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;px:&lt;/strong&gt; our usual standard pixel which maps to the screen pixel.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;in:&lt;/strong&gt; inches, concerning the physical screen size.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;mm:&lt;/strong&gt; millimeters, concerning the physical screen size.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;pt:&lt;/strong&gt; 1/72 of an inch, concerning the physical screen size.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;Formula for Conversion between Units&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt; &lt;span class=&quot;hljs-attr&quot;&gt;px&lt;/span&gt; = dp * (dpi / &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;dp to px in device&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;The following example may help understand better. The scaling occurs based on bucket sizes of 120(ldpi), 160(mdpi), 240(hdpi), 320(xhdpi), 480(xxhdpi), and 640(xxxhdpi). The Google suggested ratio for designing is 3:4:6:8:12 for ldpi:mdpi:hdpi:xhdpi:xxhdpi&lt;/p&gt;\n&lt;p&gt;A 150px X 150px image will occupy,&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;ul&gt;\n&lt;li&gt;150 dp X 150 dp screen space in mdpi&lt;/li&gt;\n&lt;li&gt;100 dp X 100 dp screen space in hdpi&lt;/li&gt;\n&lt;li&gt;75 dp X 75 dp screen space in xhdpi&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;You may use the following DPI calculator to fix your image sizes and other dimensions when you wish to have a uniform UI design on all Android devices.&lt;/p&gt;\n&lt;h1&gt;DPI Calculator in Java&lt;/h1&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*\nProgram output\nLDPI: 165.0 X 60.0\nMDPI: 220.0 X 80.0\nHDPI: 330.0 X 120.0\nXHDPI: 440.0 X 160.0\nXXHDPI: 660.0 X 240.0\nXXXHDPI: 880.0 X 320.0\n*/&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DPICalculator&lt;/span&gt; {\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;LDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;MDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;HDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;XHDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;XXHDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;XXXHDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;640&lt;/span&gt;;    \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; forDeviceDensity;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; width;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; height;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DPICalculator&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; forDeviceDensity, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; width, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; height)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.forDeviceDensity = forDeviceDensity;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.width = width;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.height = height;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String... args)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;DPICalculator&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dpiCalculator&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DPICalculator&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;330&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;);\n    dpiCalculator.calculateDPI();\n}\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPx&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; dp, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; value)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; dp * (value / forDeviceDensity );        \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; px;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;calculateDPI&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ldpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(LDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ldpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(LDPI,height);\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(MDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(MDPI,height);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;hdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(HDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;hdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(HDPI,height);       \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(XHDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(XHDPI,height);\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(XXHDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(XXHDPI,height);\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxxdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(XXXHDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxxdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(XXXHDPI,height);\n    \n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;LDPI: &quot;&lt;/span&gt; + ldpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + ldpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MDPI: &quot;&lt;/span&gt; + mdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + mdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HDPI: &quot;&lt;/span&gt; + hdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + hdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;XHDPI: &quot;&lt;/span&gt; + xdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + xdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;XXHDPI: &quot;&lt;/span&gt; + xxdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + xxdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;XXXHDPI: &quot;&lt;/span&gt; + xxxdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + xxxdpiH);        \n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;More Information refer to the following link.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://javapapers.com/android/difference-between-dp-dip-sp-px-in-mm-pt-in-android/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://javapapers.com/android/difference-between-dp-dip-sp-px-in-mm-pt-in-android/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Here&apos;s the formula used by Android:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;px = dp * (dpi / 160)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Where dpi is one of the following screen densities. For a list of all possible densities &lt;a href=&quot;http://developer.android.com/reference/android/util/DisplayMetrics.html&quot; rel=&quot;noreferrer&quot;&gt;go here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It defines the &quot;DENSITY_*&quot; constants.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;ldpi (low) ~120dpi &lt;/li&gt;\n&lt;li&gt;mdpi (medium) ~160dpi &lt;/li&gt;\n&lt;li&gt;hdpi (high) ~240dpi &lt;/li&gt;\n&lt;li&gt;xhdpi (extra-high) ~320dpi &lt;/li&gt;\n&lt;li&gt;xxhdpi (extra-extra-high) ~480dpi &lt;/li&gt;\n&lt;li&gt;xxxhdpi (extra-extra-extra-high) ~640dpi&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Taken from &lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;This will sort out a lot of the confusion when translating between px and dp, if you know your screen dpi.&lt;/p&gt;\n\n&lt;p&gt;So, let&apos;s say you want an image of 60 dp for an hdpi screen then the physical pixel size of 60 dp is:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;px&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt; * (&lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;ul&gt;\n&lt;li&gt;px - one pixel, same as to what is used in CSS, JavaScript, etc.&lt;/li&gt;\n&lt;li&gt;sp - scale-independent pixels&lt;/li&gt;\n&lt;li&gt;dip - density-independent pixels&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Normally sp is used for font sizes, while dip is used (also called dp) for others.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve come across a good article about designing Android apps UI for different screen resolutions, and I&apos;d like to leave it here just for somebody searching in this area. Yes, I know that it&apos;s somehow described in Google docs (and mentioned in the posts above), I read that but it was not good for me (yeah, I may be too stupid)). It remained unclear to me how to design layouts capable to handle different screen sizes. I hate the DP concept and so on when I need to implement a &quot;flexible&quot; UI layout for different screens. (Hey iOS developers - yes, you&apos;re right it&apos;s a Storyboard concept).&lt;/p&gt;\n&lt;p&gt;Android has not bad UI concept, but lacks iOS Storyboard features, unfortunately. Designing flexible UI in Android is not an easy thing (at the best).&lt;/p&gt;\n&lt;p&gt;Here goes the article that helped me to understand what to do in Android to make layouts for different screen sizes:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://jmsliu.com/1718/decide-android-app-screen-size.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;JMSTUDIO Blog:- Decide Android App Screen Size&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;How to Design UI for Android Apps for Different Screen Size&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;To design an app UI for different screen sizes, our initial design has to\nmeet a minimum required space for each screen size. Android defines a\nminimum size (in dp) for each generalized screen type. Here is an\nAndroid screen size guideline.\n&lt;a href=&quot;https://i.stack.imgur.com/MPEMR.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/MPEMR.jpg&quot; alt=&quot;Minimum Screen Size for Android in dp&quot;&gt;&lt;/a&gt;\nWhen we get the screen size in dp, it is not enough for us to design\nthe Android app UI. For each screen size, we need to prepare graphics\nand bitmap images for each density. Here is an Android screen density\nguideline.\n&lt;a href=&quot;https://i.stack.imgur.com/Px14F.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/Px14F.jpg&quot; alt=&quot;Android Density Guideline (dpi)&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;For easy calculation, we can follow the 3:4:6:8 scaling ratio between\nthe four generalized densities. If we create a 36×36 pixel picture for\nldpi device, the rest densities pictures size will be 48×48 for mdpi,\n72×72 for hdpi, and 96×96 for xhdpi.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;How to Design Android Apps UI in Photoshop&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Many designers have problems designing Android app UI in photoshop or another pixel\nbased graphic design tools because of the density-independent unit, dp.\nDesigners dont know how to map dp to pixel. Google also doesnt give\na clear Android UI design guide for them, though they give a basic\nformula for dp and pixel translation.&lt;/p&gt;\n&lt;p&gt;As Androids definition, 1pd equal to 1px under 160 dpi device (mdpi).\nSo we want to design an Android app for xlarge Android devices with\nmdpi density, we can define our UI size in pixel as 960 pixels in width\nand 720px in height; Follow the same mapping rule, we can get\nfollowing Android App screen size UI design guideline:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/5Kt3R.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/5Kt3R.jpg&quot; alt=&quot;Android App Screen Size in Pixel Guideline&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;ADDED&lt;/strong&gt;: If you are interested in &quot;flexible&quot; UI too, have a look at this library: &lt;a href=&quot;https://github.com/intuit/sdp&quot; rel=&quot;nofollow noreferrer&quot;&gt;An Android SDK that provides a new size unit - sdp (scalable dp). This size unit scales with the screen size&lt;/a&gt; (this also mentioned in an answer here, about &lt;code&gt;SDP&lt;/code&gt; library)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;ADDED2&lt;/strong&gt; Google has finally understood the usefulness of the iOS Storeboard UI concept, and here goes &lt;code&gt;ConstraintLayout&lt;/code&gt; for Android world: &lt;a href=&quot;https://developer.android.com/training/constraint-layout/index.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Build a Responsive UI with ConstraintLayout&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;1) &lt;strong&gt;&lt;code&gt;dp: (density independent pixels)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The number of pixels represented in one unit of dp will increase as the screen resolution increases (when you have more dots/pixels per inch). Conversely on devices with lower resolution, the number of pixels represented in on unit of dp will decrease. Since this is a relative unit, it needs to have a baseline to be compared with. This baseline is a 160 dpi screen. This is the equation: &lt;code&gt;px = dp * (dpi / 160).&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;\n2) &lt;strong&gt;&lt;code&gt;sp: (scale independent pixels)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This unit scales according to the screen dpi (similar to dp) as well as the users font size preference.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;\n3) &lt;strong&gt;&lt;code&gt;px: (pixels)&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;Actual pixels or dots on the screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;p&gt;For more details you can visit &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Guide &amp;gt; Dimension&lt;/a&gt;&lt;br&gt;\n  &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html#Screens&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Guide &amp;gt; Screens&lt;/a&gt; &lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Screen size&lt;/strong&gt; in Android is grouped into categories &lt;code&gt;ldpi&lt;/code&gt;, &lt;code&gt;mdpi&lt;/code&gt;, &lt;code&gt;hdpi&lt;/code&gt;, &lt;code&gt;xhdpi&lt;/code&gt;, &lt;code&gt;xxhdpi&lt;/code&gt; and &lt;code&gt;xxxhdpi&lt;/code&gt;. &lt;strong&gt;Screen density&lt;/strong&gt; is the amount of pixels within an area (like inch) of the screen. Generally it is measured in dots-per-inch (&lt;code&gt;dpi&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;PX(Pixels):&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;our usual standard pixel which maps to the screen pixel. &lt;code&gt;px&lt;/code&gt; is meant for absolute pixels. This is used if you want to give in terms of absolute pixels for width or height. Not recommended.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;DP/DIP(Density pixels / Density independent pixels):&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;dip == dp&lt;/code&gt;. In earlier Android versions dip was used and later changed to &lt;code&gt;dp&lt;/code&gt;. This is alternative of &lt;code&gt;px&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Generally we never use &lt;code&gt;px&lt;/code&gt; because it is absolute value. If you use &lt;code&gt;px&lt;/code&gt; to set width or height, and if that application is being downloaded into different screen sized devices, then that view will not stretch as per the screen original size.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;dp&lt;/code&gt; is highly recommended to use in place of &lt;code&gt;px&lt;/code&gt;. Use &lt;code&gt;dp&lt;/code&gt; if you want to mention width and height to grow &amp;amp; shrink dynamically  based on screen sizes.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;if we give &lt;code&gt;dp/dip&lt;/code&gt;, android will automatically calculate the pixel size on the basis of 160 pixel sized screen.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;SP(Scale independent pixels):&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;scaled based on users font size preference. Fonts should use &lt;code&gt;sp&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;when mentioning the font sizes to fit for various screen sizes, use &lt;code&gt;sp&lt;/code&gt;. This is similar to &lt;code&gt;dp&lt;/code&gt;.Use &lt;code&gt;sp&lt;/code&gt; especially for font sizes to grow &amp;amp; shrink dynamically based on screen sizes&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Android Documentation says:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;when specifying dimensions, always use either &lt;code&gt;dp&lt;/code&gt; or &lt;code&gt;sp&lt;/code&gt; units. A &lt;code&gt;dp&lt;/code&gt; is\n  a density-independent pixel that corresponds to the physical size of a\n  pixel at 160 &lt;code&gt;dpi&lt;/code&gt;. An &lt;code&gt;sp&lt;/code&gt; is the same base unit, but is scaled by the\n  user&apos;s preferred text size (its a scale-independent pixel), so you\n  should use this measurement unit when defining text size&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;The screen of a mobile phone is made up of thousands of tiny dots known as &lt;strong&gt;pixels (px)&lt;/strong&gt;. A pixel is the smallest element which goes to make the picture. The more the number of pixels to make a picture or wording, the sharper it becomes and makes the smartphone screen more easily readable.&lt;/p&gt;\n\n&lt;p&gt;Screen resolution is measured in terms of number of pixels on the screen. Screen resolution is a commonly-used specification when buying a device, but it&apos;s actually not that useful when designing for Android because thinking of screens in terms of pixels ignores the notion of physical size, which for a touch device is really really important.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Density independent pixel (dp or dip)&lt;/strong&gt; allow the designer to create assets that appear in a expected way, no matter the resolution or density of target device.&lt;/p&gt;\n\n&lt;p&gt;A density independent pixel (dp or dip) is equal to one pixel at the baseline density or 160 dpi (dots per inch).&lt;/p&gt;\n\n&lt;p&gt;1 px/1dp = 160 dpi/160 dpi&lt;/p&gt;\n\n&lt;p&gt;2 px/1dp = 320 dpi(2x)/160 dpi&lt;/p&gt;\n\n&lt;p&gt;where,&lt;/p&gt;\n\n&lt;p&gt;dpi is dots per inch&lt;/p&gt;\n\n&lt;p&gt;So, at 320 dpi, 1 dp is equal to 2 px.&lt;/p&gt;\n\n&lt;p&gt;Formula&lt;/p&gt;\n\n&lt;p&gt;px/dp = dpi/160dpi&lt;/p&gt;\n\n&lt;p&gt;Dots per inch (dpi) is a measure of the sharpness (that is, the density of illuminated points) on a display screen. The dots per inch for a given picture resolution will differ based on the overall screen size since the same number of pixels are being spread out over a different space.&lt;/p&gt;\n\n&lt;p&gt;Working with density independent pixels help us to deal with a situation like where you have two devices with same pixel resolution, but differing amount of space. Suppose in a case, a tablet and phone has the same pixel resolution 1280 by 800 pixels (160 dpi) and 800 by 1280 pixels (320 dpi) respectively.&lt;/p&gt;\n\n&lt;p&gt;Now because a tablet is at baseline density (160 dpi) its physical and density independent pixels sizes are the same, 1280 by 800. The phone on the other hand has a higher pixel density, so it has half as many density independent pixels as physical pixels. So a phone has 400 by 640 density independent pixels. So using a density-independent pixel makes it easier to mentally picture that tablet has much more space than the phone.&lt;/p&gt;\n\n&lt;p&gt;Similarly, if you have two devices with similar screen size, but different pixel density, say one is 800 by 1280 pixels (320 dpi), and the other is 400 by 640 pixels (160 dpi), we don&apos;t need to define totally different layouts for these two devices as we can measure assets in terms of density independent pixel which is same for both devices.&lt;/p&gt;\n\n&lt;p&gt;800 by 1280 pixels (320dpi)=400 by 640 density independent pixel (dp)&lt;/p&gt;\n\n&lt;p&gt;400 by 640 pixels (160 dpi)=400 by 640 density independent pixel (dp)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Scale independent pixels(sp)&lt;/strong&gt; is the preferred unit for font size.\nFor accessibility purposes, Android allows users to customize their device&apos;s font size. Users that have trouble reading text can increase their device&apos;s font size. You can normally find this option in the display setting on your phone or tablet under font size. It&apos;s often also available through the accessibility settings.&lt;/p&gt;\n\n&lt;p&gt;With scale independent pixels, 16 sp is exactly the same as 16 dp when the device&apos;s font size is normal or 100%. But when device&apos;s font size is large, for example 125%, 16 sp will translate to 20 dp or 1.25 times 16.&lt;/p&gt;\n\n&lt;p&gt;If you use dp as the unit for font size, then that piece of text has a specific physical size no matter if the user has customize device&apos;s font size. Using sp units will make a better experience for people with impaired eyesight.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://www.udacity.com/courses/android&quot; rel=&quot;noreferrer&quot;&gt;Udacity&lt;/a&gt;, Google&lt;/p&gt;\n    ","\n&lt;h1&gt;Pixel density&lt;/h1&gt;\n&lt;p&gt;Screen pixel density and resolution vary depending on the platform. Device-independent pixels and scalable pixels are units that provide a flexible way to accommodate a design across platforms.&lt;/p&gt;\n&lt;h2&gt;Calculating pixel density&lt;/h2&gt;\n&lt;p&gt;The number of pixels that fit into an inch is referred to as pixel density. High-density screens have more pixels per inch than low-density ones...&lt;/p&gt;\n&lt;p&gt;The number of pixels that fit into an inch is referred to as pixel density. High-density screens have more pixels per inch than low-density ones. As a result, UI elements of the same pixel dimensions appear larger on low-density screens, and smaller on high-density screens.&lt;/p&gt;\n&lt;p&gt;To calculate screen density, you can use this equation:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Screen density = Screen width (or height) in pixels / Screen width (or height) in inches&lt;/strong&gt;&lt;/p&gt;\n&lt;h2&gt;&lt;a href=&quot;https://i.stack.imgur.com/Oy13H.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/Oy13H.png&quot; alt=&quot;Hight density vs lower density displays&quot;&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h1&gt;Density independence&lt;/h1&gt;\n&lt;p&gt;Screen pixel density and resolution vary depending on the platform. Device-independent pixels and scalable pixels are units that provide a flexible way to accommodate a design across platforms.&lt;/p&gt;\n&lt;p&gt;Calculating pixel density\nThe number of pixels that fit into an inch is referred to as &lt;em&gt;pixel density&lt;/em&gt;. High-density screens have more pixels per inch than low-density ones...&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Density independence&lt;/strong&gt; refers to the uniform display of UI elements on screens with different densities.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Density-independent pixels&lt;/em&gt;, written as &lt;em&gt;dp&lt;/em&gt; (pronounced &lt;em&gt;dips&lt;/em&gt;), are flexible units that scale to have uniform dimensions on any screen. Material UIs use density-independent pixels to display elements consistently on screens with different densities.&lt;/p&gt;\n&lt;img src=&quot;https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1QqdZ48smdRjk9itSexZz2DcWI92iXxR7%2Flayout-unitsmeasurements-pixeldensity-lowhigh.png&quot; width=&quot;600&quot; height=&quot;300&quot;&gt;\n&lt;ol&gt;\n&lt;li&gt;Low-density screen displayed with density independence&lt;/li&gt;\n&lt;li&gt;High-density screen displayed with density independence&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;&lt;em&gt;Read full text&lt;/em&gt;\n&lt;a href=&quot;https://material.io/design/layout/pixel-density.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://material.io/design/layout/pixel-density.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Before answering this question let me decrease the number of units first. So here you go: &lt;em&gt;dp or dip&lt;/em&gt; are both the same and are known as &lt;em&gt;Density-independent pixels&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;1. px&lt;/strong&gt; - stands for pixels. Pixels are a single dot, point on a screen. Generally in the mobile industry, it is measured in PPI (pixels per inch). Screen resolution is directly proportional to PPI, the larger the number of pixels per inch the higher the screen resolution.&lt;/p&gt;\n&lt;p&gt;For example, if you draw an image of a size &lt;em&gt;200 px&lt;/em&gt; * &lt;em&gt;200 px&lt;/em&gt;, then its appearance must be different on a high-resolution device versus a low-resolution device. The reason is a &lt;em&gt;200 px&lt;/em&gt; the image on a low-resolution phone will look larger than on a high-resolution device.&lt;/p&gt;\n&lt;p&gt;Below images are showing a resolution of the same image on different phones -&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Phone with High screen resolution&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/P7X9C.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/P7X9C.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Phone with Low screen resolution&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/yLqN0.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/yLqN0.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;2. dip or dp&lt;/strong&gt; - an abstract unit that is based on the physical density of the screen. These units are relative to a &lt;em&gt;160&lt;/em&gt; dpi screen, so one dp is one pixel on a &lt;em&gt;160&lt;/em&gt; dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion. &quot;Density independence&quot; refers to the uniform display of UI elements on screens with different densities.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Image which is showing &lt;em&gt;80px (left side image)&lt;/em&gt; and &lt;em&gt;80 dp (right-side image)&lt;/em&gt;. Checkout difference.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/et1rf.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/et1rf.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;A dp is equal to one physical pixel on a screen with a density of &lt;em&gt;160&lt;/em&gt;. To calculate dp:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;dp = (width in pixels * 160) / screen density&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;3. sp&lt;/strong&gt; - stands for scalable pixels. Generally &lt;em&gt;sp&lt;/em&gt; is used for texts on the UI, and &lt;em&gt;sp&lt;/em&gt; preserves the font settings. For example, if a user selected a larger font than &lt;em&gt;30 sp&lt;/em&gt; it will auto-scale to appear large according to a user preference.&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;sp: scale independent pixel&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You should use it with texts because it is automatically scaled according to the font size that is being used by the user in his device.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;px: pixel or picture element is the single point on the screen&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Pixels(px)&lt;/strong&gt;  corresponds to actual pixels on the screen. This is used if you want to give in terms of absolute pixels for width or height.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Density-independent Pixels (dp or dip)&lt;/strong&gt;  an abstract unit that is based on the physical density of the screen. These units are relative to a 160 dpi screen, so one dp is one pixel on a 160 dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion. Note: The compiler accepts both dip and dp, though dp is more consistent with sp.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Scale-independent Pixels(sp)&lt;/strong&gt;  this is like the dp unit, but it is also scaled by the users font size preference. It is recommended you use this unit when specifying font sizes, so they will be adjusted for both the screen density and users preference.&lt;/p&gt;\n&lt;p&gt;Always use dp and sp only. sp for font sizes and dp for everything else. It will make UI compatible for Android devices with different densities.\nYou can learn more about pixel and dp from\n&lt;a href=&quot;https://www.google.com/design/spec/layout/units-measurements.html#units-measurements-density-independent-pixels-dp-&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/design/spec/layout/units-measurements.html#units-measurements-density-independent-pixels-dp-&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Source URL:- &lt;a href=&quot;http://www.androidtutorialshub.com/what-is-the-difference-between-px-dp-dip-sp-on-android/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.androidtutorialshub.com/what-is-the-difference-between-px-dp-dip-sp-on-android/&lt;/a&gt;&lt;/p&gt;\n    "]},"randomTags":[{"name":"arraylist","slug":"arraylist"},{"name":"events","slug":"events"},{"name":"vertical-alignment","slug":"vertical-alignment"},{"name":"polymorphism","slug":"polymorphism"},{"name":"text","slug":"text"},{"name":"undo","slug":"undo"},{"name":"stdin","slug":"stdin"},{"name":"query-string","slug":"query-string"},{"name":"shell","slug":"shell"},{"name":"html-parsing","slug":"html-parsing"},{"name":"ecmascript-5","slug":"ecmascript-5"},{"name":"undefined-index","slug":"undefined-index"},{"name":"variable-assignment","slug":"variable-assignment"},{"name":"prepared-statement","slug":"prepared-statement"},{"name":"lifetime","slug":"lifetime"},{"name":"branch-prediction","slug":"branch-prediction"},{"name":"android-input-method","slug":"android-input-method"},{"name":"ajax","slug":"ajax"},{"name":"typename","slug":"typename"},{"name":"frame","slug":"frame"}]},"__N_SSG":true}