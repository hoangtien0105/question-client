{"pageProps":{"data":{"answer":["\n&lt;p&gt;The &lt;a href=&quot;https://developer.mozilla.org/en/window.setTimeout&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; function is non-blocking and will return immediately. Therefore your loop will iterate very quickly and it will initiate 3-second timeout triggers one after the other in quick succession. That is why your first alerts pops up after 3 seconds, and all the rest follow in succession without any delay.&lt;/p&gt;\n\n&lt;p&gt;You may want to use something like this instead:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;                  &lt;span class=&quot;hljs-comment&quot;&gt;//  set your counter to 1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {         &lt;span class=&quot;hljs-comment&quot;&gt;//  create a loop function&lt;/span&gt;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {   &lt;span class=&quot;hljs-comment&quot;&gt;//  call a 3s setTimeout when the loop is called&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;);   &lt;span class=&quot;hljs-comment&quot;&gt;//  your code here&lt;/span&gt;\n    i++;                    &lt;span class=&quot;hljs-comment&quot;&gt;//  increment the counter&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) {           &lt;span class=&quot;hljs-comment&quot;&gt;//  if the counter &amp;lt; 10, call the loop function&lt;/span&gt;\n      &lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;();             &lt;span class=&quot;hljs-comment&quot;&gt;//  ..  again which will trigger another &lt;/span&gt;\n    }                       &lt;span class=&quot;hljs-comment&quot;&gt;//  ..  setTimeout()&lt;/span&gt;\n  }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;();                   &lt;span class=&quot;hljs-comment&quot;&gt;//  start the loop&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;You could also neaten it up, by using a self invoking function, passing the number of iterations as an argument:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//  your code here                &lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (--i) &lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;(i);   &lt;span class=&quot;hljs-comment&quot;&gt;//  decrement i and call myLoop again if i &amp;gt; 0&lt;/span&gt;\n  }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)\n})(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;);                   &lt;span class=&quot;hljs-comment&quot;&gt;//  pass the number of iterations as an argument&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Since ES7 theres a better way to &lt;em&gt;await&lt;/em&gt; a loop:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Returns a Promise that resolves after &quot;ms&quot; Milliseconds&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timer&lt;/span&gt; = ms =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(res, ms))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;load&lt;/span&gt; () { &lt;span class=&quot;hljs-comment&quot;&gt;// We need to wrap the loop into an async function for this to work&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// then the created Promise can be awaited&lt;/span&gt;\n  }\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;load&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;When the engine reaches the &lt;code&gt;await&lt;/code&gt; part, it sets a timeout and &lt;em&gt;halts the execution of the &lt;code&gt;async function&lt;/code&gt;&lt;/em&gt;. Then when the timeout completes, execution continues at that point. That&apos;s quite useful as you can delay (1) nested loops, (2) conditionally, (3) nested functions:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;task&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// 3&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`Task &lt;span class=&quot;hljs-subst&quot;&gt;${i}&lt;/span&gt; done!`&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;; i+= &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; j = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; j++) { &lt;span class=&quot;hljs-comment&quot;&gt;// 1&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(j % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// 2&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;task&lt;/span&gt;(i + j);\n      }\n    }\n  }\n}\n    \n&lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(res, ms)); }&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await&quot; rel=&quot;noreferrer&quot;&gt;Reference on MDN&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;While ES7 is now supported by NodeJS and modern browsers, you might want to &lt;a href=&quot;https://babeljs.io/repl/#?babili=true&amp;amp;evaluate=true&amp;amp;lineWrap=false&amp;amp;presets=es2015%2Creact%2Cstage-2&amp;amp;targets=&amp;amp;browsers=&amp;amp;builtIns=false&amp;amp;debug=false&amp;amp;code=function%20timer(v)%7B%0A%20return%20new%20Promise(r%3D%3EsetTimeout(r%2Cv))%3B%0A%7D%0A%0Aasync%20function%20load%20()%20%7B%0A%20for%20(var%20i%20%3D%200%3B%20i%20%3C%203%3B%20i%2B%2B)%20%7B%0A%20%20console.log(i)%3B%0A%20%20await%20timer(3000)%3B%0A%20%20%7D%0A%7D%0A%0Aload()%3B&quot; rel=&quot;noreferrer&quot; title=&quot;transpiled&quot;&gt;transpile it with BabelJS&lt;/a&gt; so that it runs everywhere.&lt;/p&gt;\n    ","\n&lt;p&gt;If using ES6, you could use a for loop to achieve this:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++) {\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);\n  }, i * &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;It declares &lt;code&gt;i&lt;/code&gt; for each &lt;strong&gt;iteration&lt;/strong&gt;, meaning the timeout is what it was before + 1000. This way, what is passed to &lt;code&gt;setTimeout&lt;/code&gt; is exactly what we want.&lt;/p&gt;\n    ","\n&lt;p&gt;Try something like this:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, howManyTimes = &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hi&quot;&lt;/span&gt;);\n  i++;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; howManyTimes) {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(f, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);\n  }\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Another way is to multiply the time to timeout, but note that this is &lt;strong&gt;not like sleep&lt;/strong&gt;. Code after the loop will be executed immediately, only the execution of the callback function is deferred.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; start++)\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;);  }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt; * start);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The first timeout will be set to &lt;code&gt;3000 * 1&lt;/code&gt;, the second to &lt;code&gt;3000 * 2&lt;/code&gt; and so on.&lt;/p&gt;\n    ","\n&lt;p&gt;This will work&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++) {\n  (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i); }, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; * i);\n  })(i);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Try this fiddle: &lt;a href=&quot;https://jsfiddle.net/wgdx8zqq/&quot; rel=&quot;noreferrer&quot;&gt;https://jsfiddle.net/wgdx8zqq/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I think you need something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TimedQueue&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;defaultDelay&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queue&lt;/span&gt; = [];\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;index&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;defaultDelay&lt;/span&gt; = defaultDelay || &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;TimedQueue&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt; = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;add&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fn, delay&lt;/span&gt;){\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queue&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({\n            &lt;span class=&quot;hljs-attr&quot;&gt;fn&lt;/span&gt;: fn,\n            &lt;span class=&quot;hljs-attr&quot;&gt;delay&lt;/span&gt;: delay\n        });\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;run&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;index&lt;/span&gt;){\n        (index || index === &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;index&lt;/span&gt; = index);\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;();\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;next&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;\n        , i = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;index&lt;/span&gt;++\n        , at = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queue&lt;/span&gt;[i]\n        , next = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queue&lt;/span&gt;[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;index&lt;/span&gt;]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!at) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n        at.&lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;();\n        next &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            self.&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;();\n        }, next.&lt;span class=&quot;hljs-property&quot;&gt;delay&lt;/span&gt;||&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;defaultDelay&lt;/span&gt;);\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;reset&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;index&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Test code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; now = +&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TimedQueue&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;);\n\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hey&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(+&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;() - now);\n});\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ho&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(+&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;() - now);\n}, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bye&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(+&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;() - now);\n});\n\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: using alerts stalls javascript execution till you close the alert.\nIt might be more code than you asked for, but this is a robust reusable solution.&lt;/p&gt;\n    ","\n&lt;p&gt;I would probably use &lt;code&gt;setInterval&lt;/code&gt;, like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; period = &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// ms&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; endTime = &lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;// ms&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; counter = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sleepyAlert = &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(counter === endTime){\n       &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;(sleepyAlert);\n    }\n    counter += period;\n}, period);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;waitforme&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms&lt;/span&gt;)  {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;( &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; { &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, ms); });\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)  {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; ; i++) {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;waitforme&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// loop will be halted here until promise is resolved&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i);\n  }\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;I Ran after the loop finished :)&quot;&lt;/span&gt;);\n}\n\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;printy&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;In ES6 (ECMAScript 2015) you can iterate with delay with &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-generator-function-definitions&quot; rel=&quot;noreferrer&quot;&gt;generator&lt;/a&gt; and interval.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Generators, a new feature of ECMAScript 6, are functions that can be\n  paused and resumed. Calling genFunc does not execute it. Instead, it\n  returns a so-called generator object that lets us control genFuncs\n  execution. genFunc() is initially suspended at the beginning of its\n  body.  The method genObj.next() continues the execution of genFunc,\n  until the next yield.\n  &lt;a href=&quot;http://exploringjs.com/es6/ch_generators.html&quot; rel=&quot;noreferrer&quot;&gt;(Exploring ES6)&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;br&gt;\n&lt;strong&gt;Code example:&lt;/strong&gt;\n&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; genObj = &lt;span class=&quot;hljs-title function_&quot;&gt;genFunc&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; val = genObj.&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(val.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; interval = &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n  val = genObj.&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;();\n  \n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (val.&lt;span class=&quot;hljs-property&quot;&gt;done&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;(interval);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(val.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n  }\n}, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;* &lt;span class=&quot;hljs-title function_&quot;&gt;genFunc&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; arr) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; item;\n  }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;So if you are using ES6, that the most elegant way to achieve loop with delay (for my opinion).&lt;/p&gt;\n    ","\n&lt;p&gt;In my opinion, the simpler and most elegant way to add a delay in a loop is like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;names = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;John&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Ana&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mary&apos;&lt;/span&gt;];\n\nnames.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(name);\n }, i * &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// one sec interval&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I do this with Bluebirds &lt;code&gt;Promise.delay&lt;/code&gt; and recursion.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;delay&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;(i -= &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n      }\n    });\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;//cdnjs.cloudflare.com/ajax/libs/bluebird/2.9.4/bluebird.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;In ES6 you can do as following:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++){       \n     &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {   \n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i);\n     }, i*&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)\n }&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;In ES5 you can do as:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++){\n   (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;) {          \n     &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {   \n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i);\n     }, i*&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)\n   })(i);  \n }&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;The reason is, &lt;code&gt;let&lt;/code&gt; allows you to declare variables that are limited to a scope of a block statement, or expression on which it is used, unlike the &lt;code&gt;var&lt;/code&gt; keyword, which defines a variable globally, or locally to an entire function regardless of block scope.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use RxJS &lt;a href=&quot;http://reactivex.io/documentation/operators/interval.html&quot; rel=&quot;nofollow&quot;&gt;interval operator&lt;/a&gt;. Interval emits integer every x number of seconds, and take is specify number of times it has to emit numberss&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Rx&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Observable&lt;/span&gt;\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;interval&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;take&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(x))&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/rxjs/4.1.0/rx.lite.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Just thought I&apos;d post my two cents here as well. This function runs an iterative loop with a delay. See &lt;a href=&quot;https://jsfiddle.net/domslee/jp9e2bnp/&quot; rel=&quot;nofollow&quot;&gt;this jsfiddle&lt;/a&gt;. The function is as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timeout&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;range, time, callback&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = range[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];                \n    &lt;span class=&quot;hljs-title function_&quot;&gt;callback&lt;/span&gt;(i);\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Loop&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Loop&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            i++;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i&amp;lt;range[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]){\n                &lt;span class=&quot;hljs-title function_&quot;&gt;callback&lt;/span&gt;(i);\n                &lt;span class=&quot;hljs-title class_&quot;&gt;Loop&lt;/span&gt;();\n            }\n        }, time*&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)\n    } \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//This function prints the loop number every second&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;timeout&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Would be equivalent to:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//This function prints the loop number instantly&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To my knowledge the &lt;code&gt;setTimeout&lt;/code&gt; function is called asynchronously. What you can do is wrap the entire loop within an async function and await a &lt;code&gt;Promise&lt;/code&gt; that contains the setTimeout as shown:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; looper = &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; start++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;resolve, reject&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;iteration: &quot;&lt;/span&gt; + start.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;());\n        &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n      }, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n    });\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then you call run it like so:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;looper&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DONE!&quot;&lt;/span&gt;)\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Please take some time to get a good understanding of asynchronous programming.&lt;/p&gt;\n    ","\n&lt;p&gt;In addition to the accepted answer from 10 years ago, with more modern Javascript one can use &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;/&lt;code&gt;Promise()&lt;/code&gt; or generator function to achieve the &lt;em&gt;correct&lt;/em&gt; behavior. (The incorrect behavior suggested in other answers would be setting series of 3 seconds alerts regardless of &quot;accepting&quot; the &lt;code&gt;alert()&lt;/code&gt; - or finishing the task at hand)&lt;/p&gt;\n&lt;p&gt;Using &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;/&lt;code&gt;Promise()&lt;/code&gt;:\n&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hi&apos;&lt;/span&gt;);\n\n(&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; start++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;();\n    }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;));\n  }\n})();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Using a generator function:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hi&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; func;\n\n(func = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;*() {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; start++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;);\n      func.&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;();\n    }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);\n  }\n})()).&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;A function-less solution&lt;/h1&gt;\n&lt;h3&gt;I am a bit late to the party, but there is a solution without using any functions:&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hi&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; start++) {\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt; * start);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; startIndex = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; timeout = &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;functionToRun&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, length&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(data[i]);\n    }\n\n    (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;forWithDelay&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, length, fn, delay&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;(i, length);\n        i++;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; length) {\n          &lt;span class=&quot;hljs-title function_&quot;&gt;forWithDelay&lt;/span&gt;(i, length, fn, delay);\n        }\n      }, delay);\n    })(startIndex, data.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;, functionToRun, timeout);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;A modified version of Daniel Vassallo&apos;s answer, with variables extracted into parameters to make the function more reusable:&lt;/p&gt;\n\n&lt;p&gt;First let&apos;s define some essential variables:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; startIndex = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; timeout = &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Next you should define the function you want to run. This will get passed i, the current index of the loop and the length of the loop, in case you need it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;functionToRun&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, length&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(data[i]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Self-executing version&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;forWithDelay&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, length, fn, delay&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;(i, length);\n      i++;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; length) {\n         &lt;span class=&quot;hljs-title function_&quot;&gt;forWithDelay&lt;/span&gt;(i, length, fn, delay); \n      }\n  }, delay);\n})(startIndex, data.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;, functionToRun, timeout);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Functional version&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;forWithDelay&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, length, fn, delay&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;(i, length);\n      i++;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; length) {\n         &lt;span class=&quot;hljs-title function_&quot;&gt;forWithDelay&lt;/span&gt;(i, length, fn, delay); \n      }\n  }, delay);\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;forWithDelay&lt;/span&gt;(startIndex, data.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;, functionToRun, timeout); &lt;span class=&quot;hljs-comment&quot;&gt;// Lets run it&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Just try this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;];\n (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;customLoop&lt;/span&gt; (arr, i) {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Do here what you want to do.......&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr[i]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (--i) {                \n      &lt;span class=&quot;hljs-title function_&quot;&gt;customLoop&lt;/span&gt;(arr, i); \n    }\n  }, &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;);\n})(arr, arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;A &lt;span class=&quot;hljs-comment&quot;&gt;// after 2s&lt;/span&gt;\nB &lt;span class=&quot;hljs-comment&quot;&gt;// after 2s&lt;/span&gt;\nC &lt;span class=&quot;hljs-comment&quot;&gt;// after 2s&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* \n  Use Recursive  and setTimeout \n  call below function will run loop loopFunctionNeedCheck until \n  conditionCheckAfterRunFn = true, if conditionCheckAfterRunFn == false : delay \n  reRunAfterMs miliseconds and continue loop\n  tested code, thanks\n*/&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;functionRepeatUntilConditionTrue&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;reRunAfterMs, conditionCheckAfterRunFn,\n loopFunctionNeedCheck&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;loopFunctionNeedCheck&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;hljs-title function_&quot;&gt;conditionCheckAfterRunFn&lt;/span&gt;();\n    &lt;span class=&quot;hljs-comment&quot;&gt;//check after run&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!result) {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title function_&quot;&gt;functionRepeatUntilConditionTrue&lt;/span&gt;(reRunAfterMs, conditionCheckAfterRunFn, loopFunctionNeedCheck)\n        }, reRunAfterMs);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;completed, thanks&quot;&lt;/span&gt;);    \n            &lt;span class=&quot;hljs-comment&quot;&gt;//if you need call a function after completed add code call callback in here&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//passing-parameters-to-a-callback-function&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// From Prototype.js &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;bind&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// check if native implementation available&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;bind&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fn = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;, args = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;slice&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;),\n            object = args.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; fn.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(object,\n              args.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;slice&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;)));\n        };\n    };\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//test code: &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---&amp;gt; init result is &quot;&lt;/span&gt; + result);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; functionNeedRun = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;step&lt;/span&gt;) {           \n   result+=step;    \n       &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;current result is &quot;&lt;/span&gt; + result);  \n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; checkResultFunction = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result==&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n}  \n\n&lt;span class=&quot;hljs-comment&quot;&gt;//call this function will run loop functionNeedRun and delay 500 miliseconds until result=100    &lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;functionRepeatUntilConditionTrue&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;, checkResultFunction , functionNeedRun.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//result log from console:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/*\n---&amp;gt; init result is 0\ncurrent result is 5\nundefined\ncurrent result is 10\ncurrent result is 15\ncurrent result is 20\ncurrent result is 25\ncurrent result is 30\ncurrent result is 35\ncurrent result is 40\ncurrent result is 45\ncurrent result is 50\ncurrent result is 55\ncurrent result is 60\ncurrent result is 65\ncurrent result is 70\ncurrent result is 75\ncurrent result is 80\ncurrent result is 85\ncurrent result is 90\ncurrent result is 95\ncurrent result is 100\ncompleted, thanks\n*/&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is how I created an infinite loop with a delay that breaks on a certain condition:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Now continuously check the app status until it&apos;s completed, &lt;/span&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// failed or times out. The isFinished() will throw exception if&lt;/span&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// there is a failure.&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; status = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;api&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getStatus&lt;/span&gt;(appId);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isFinished&lt;/span&gt;(status)) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// Delay before running the next loop iteration:&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;));\n    }\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The key here is to create a new Promise that resolves by timeout, and to await for its resolution. &lt;/p&gt;\n\n&lt;p&gt;Obviously you need async/await support for that. Works in Node 8.&lt;/p&gt;\n    ","\n&lt;p&gt;for common use &quot;forget normal loops&quot; and use this combination of &quot;setInterval&quot; includes &quot;setTimeOut&quot;s: like this (from my real tasks).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;iAsk&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lvl&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; intr =&lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-comment&quot;&gt;// start the loop &lt;/span&gt;\n                i++; &lt;span class=&quot;hljs-comment&quot;&gt;// increment it&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i&amp;gt;lvl){ &lt;span class=&quot;hljs-comment&quot;&gt;// check if the end round reached.&lt;/span&gt;\n                    &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;(intr);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n                }\n                &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.imag&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;prop&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;,pPng); &lt;span class=&quot;hljs-comment&quot;&gt;// do first bla bla bla after 50 millisecond&lt;/span&gt;\n                },&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;);\n                &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                     &lt;span class=&quot;hljs-comment&quot;&gt;// do another bla bla bla after 100 millisecond.&lt;/span&gt;\n                    seq[i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]=(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ceil&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n                    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#hh&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;after&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;+i + &lt;span class=&quot;hljs-string&quot;&gt;&apos; : rand= &apos;&lt;/span&gt;+(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ceil&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;()+&lt;span class=&quot;hljs-string&quot;&gt;&apos; &amp;gt; &apos;&lt;/span&gt;+seq[i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n                    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#d&quot;&lt;/span&gt;+seq[i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]).&lt;span class=&quot;hljs-title function_&quot;&gt;prop&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;,pGif);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d =&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;aud&apos;&lt;/span&gt;);\n                    d.&lt;span class=&quot;hljs-title function_&quot;&gt;play&lt;/span&gt;();                   \n                },&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;);\n                &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// keep adding bla bla bla till you done :)&lt;/span&gt;\n                    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#d&quot;&lt;/span&gt;+seq[i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]).&lt;span class=&quot;hljs-title function_&quot;&gt;prop&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;,pPng);\n                },&lt;span class=&quot;hljs-number&quot;&gt;900&lt;/span&gt;);\n            },&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// loop waiting time must be &amp;gt;= 900 (biggest timeOut for inside actions)&lt;/span&gt;\n        }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;PS: Understand that the real behavior of (setTimeOut): they all will start in same time &quot;the three bla bla bla will start counting down in the same moment&quot; so make a different timeout to arrange the execution.&lt;/p&gt;\n\n&lt;p&gt;PS 2: the example for timing loop, but for a reaction loops you can use events, promise async await ..&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;hljs-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myFunction()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Try it&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;demo&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;myFunction&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n    \t&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sno = i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n       \t(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;myLoop&lt;/span&gt; (i) {          \n             &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {   \n             \t&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(i); &lt;span class=&quot;hljs-comment&quot;&gt;// Do your function here &lt;/span&gt;\n             }, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;*i);\n        })(sno);\n    }\n}\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; counter =&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; items) {\n        counter++;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;{\n          &lt;span class=&quot;hljs-comment&quot;&gt;//your code&lt;/span&gt;\n        },counter*&lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//5Sec delay between each iteration&lt;/span&gt;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You do it:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hi&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; interval = &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(start == &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;(interval)\n    start++\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;)\n  }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)\n}, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif16&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Parameters:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//  array: []&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//  fnc: function (the business logic in form of function-,what you want to execute)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//  delay: milisecond  &lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;delayLoop&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array,fnc,delay&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!array || array.&lt;span class=&quot;hljs-property&quot;&gt;legth&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;){ \n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = array[count++];\n        fnc &amp;amp;&amp;amp; &lt;span class=&quot;hljs-title function_&quot;&gt;fnc&lt;/span&gt;(data);\n        &lt;span class=&quot;hljs-comment&quot;&gt;//recursion...&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(count &amp;lt; array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;)\n            &lt;span class=&quot;hljs-title function_&quot;&gt;delayLoop&lt;/span&gt;(array,fnc,delay);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; count = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;     \n    },delay);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;autoPlayer&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Base case:&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Remove the first element from the array.&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; item = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;()\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Set timout &lt;/span&gt;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello, world!&apos;&lt;/span&gt;, item)  &lt;span class=&quot;hljs-comment&quot;&gt;// Visualisation.&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;autoPlayer&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// Call function again.&lt;/span&gt;\n  }, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// Iterate every second.&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Hey, I know this post is very old, but this code &quot;loops&quot; and adds a delay to it using a recursive method. I don&apos;t think you can &apos;actually&apos; delay a loop itself from iterating based on reading various comments from other people. Maybe this can help someone out! Basically the function accepts an array (in this example). On each iteration the &lt;code&gt;setTimeout&lt;/code&gt; Javascript method is called. The function calls itself again indefinitely when the timer of the &lt;code&gt;setTimeout&lt;/code&gt; function expires, but on each call the array becomes smaller until it reaches the base-case. I hope this can help anyone else out.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a function that I use for looping over an array:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;loopOnArrayWithDelay&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;theArray, delayAmount, i, theFunction, onComplete&lt;/span&gt;){\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; theArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; delayAmount == &lt;span class=&quot;hljs-string&quot;&gt;&apos;number&apos;&lt;/span&gt;){\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;i &quot;&lt;/span&gt;+i);\n\n        &lt;span class=&quot;hljs-title function_&quot;&gt;theFunction&lt;/span&gt;(theArray[i], i);\n\n        &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n            &lt;span class=&quot;hljs-title function_&quot;&gt;loopOnArrayWithDelay&lt;/span&gt;(theArray, delayAmount, (i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), theFunction, onComplete)}, delayAmount);\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n\n        &lt;span class=&quot;hljs-title function_&quot;&gt;onComplete&lt;/span&gt;(i);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You use it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;loopOnArrayWithDelay&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;YourArray&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e, i&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Do something with item&lt;/span&gt;\n}, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Do something once loop has completed&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This script works for most things&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;start&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;//The timer&lt;/span&gt;\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;);\n    }, start*&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//needs the &quot;start*&quot; or else all the timers will run at 3000ms&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; start++) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;timer&lt;/span&gt;(start);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":602,"title":"How do I add a delay in a JavaScript loop?","content":"\n                \n&lt;p&gt;I would like to add a delay/sleep inside a &lt;code&gt;while&lt;/code&gt; loop:&lt;/p&gt;\n\n&lt;p&gt;I tried it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hi&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; start++) {\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;);\n  }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Only the first scenario is true: after showing &lt;code&gt;alert(&apos;hi&apos;)&lt;/code&gt;, it will be waiting for 3 seconds then &lt;code&gt;alert(&apos;hello&apos;)&lt;/code&gt; will be displayed but then &lt;code&gt;alert(&apos;hello&apos;)&lt;/code&gt; will be repeatedly constantly. &lt;/p&gt;\n\n&lt;p&gt;What I would like is that after &lt;code&gt;alert(&apos;hello&apos;)&lt;/code&gt; is shown 3 seconds after &lt;code&gt;alert(&apos;hi&apos;)&lt;/code&gt; then it needs to wait for 3 seconds for the second time &lt;code&gt;alert(&apos;hello&apos;)&lt;/code&gt; and so on.&lt;/p&gt;\n    ","slug":"how-do-i-add-a-delay-in-a-javascript-loop-1657388544679","postType":"QUESTION","createdAt":"2022-07-09T17:42:24.000Z","updatedAt":"2022-07-09T17:42:24.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How to create RecyclerView with multiple view types","slug":"how-to-create-recyclerview-with-multiple-view-types-1657388121512"},{"title":"Passing data between view controllers","slug":"passing-data-between-view-controllers-1657384540021"},{"title":"How should I use servlets and Ajax?","slug":"how-should-i-use-servlets-and-ajax-1657385492684"},{"title":"JSTL in JSF2 Facelets... makes sense?","slug":"jstl-in-jsf2-facelets...-makes-sense-1657387667435"},{"title":"How to make function decorators and chain them together?","slug":"how-to-make-function-decorators-and-chain-them-together-1657388180803"},{"title":"Merge/flatten an array of arrays","slug":"mergeflatten-an-array-of-arrays-1657387827427"},{"title":"How to check whether a string contains a substring in JavaScript?","slug":"how-to-check-whether-a-string-contains-a-substring-in-javascript-1657388080698"},{"title":"How to use ThreeTenABP in Android Project","slug":"how-to-use-threetenabp-in-android-project-1657384345704"},{"title":"Converting string into datetime","slug":"converting-string-into-datetime-1657387717295"},{"title":"R cannot be resolved - Android error","slug":"r-cannot-be-resolved-android-error-1657388526258"},{"title":"Reference: What is variable scope, which variables are accessible from where and what are \"undefined variable\" errors?","slug":"reference:-what-is-variable-scope-which-variables-are-accessible-from-where-and-what-are-\"undefined-variable\"-errors-1657384644697"},{"title":"What is a clearfix?","slug":"what-is-a-clearfix-1657387337825"},{"title":"Why is my variable unaltered after I modify it inside of a function? - Asynchronous code reference","slug":"why-is-my-variable-unaltered-after-i-modify-it-inside-of-a-function-asynchronous-code-reference-1657384288966"},{"title":"Calculate distance between two latitude-longitude points? (Haversine formula)","slug":"calculate-distance-between-two-latitude-longitude-points-(haversine-formula)-1657388500103"},{"title":"mysqli or die, does it have to die?","slug":"mysqli-or-die-does-it-have-to-die-1657388533922"},{"title":"What are metaclasses in Python?","slug":"what-are-metaclasses-in-python-1657387811608"},{"title":"Object comparison in JavaScript [duplicate]","slug":"object-comparison-in-javascript-duplicate-1657387675463"},{"title":"How can I parse a JSON file with PHP? [duplicate]","slug":"how-can-i-parse-a-json-file-with-php-duplicate-1657388002325"},{"title":"How do I pass JavaScript variables to PHP?","slug":"how-do-i-pass-javascript-variables-to-php-1657388157033"},{"title":"How do I split a delimited string so I can access individual items?","slug":"how-do-i-split-a-delimited-string-so-i-can-access-individual-items-1657388042385"}]},"__N_SSG":true}