{"pageProps":{"data":{"count":610,"rows":[{"id":110,"title":"Why does Date.parse give incorrect results?","slug":"why-does-date.parse-give-incorrect-results-1657384642821","postType":"QUESTION","createdAt":"2022-07-09T16:37:22.000Z","updatedAt":"2022-07-09T16:37:22.000Z","tags":[]},{"id":109,"title":"Undefined behavior and sequence points","slug":"undefined-behavior-and-sequence-points-1657384639493","postType":"QUESTION","createdAt":"2022-07-09T16:37:19.000Z","updatedAt":"2022-07-09T16:37:19.000Z","tags":[]},{"id":108,"title":"Why does my JavaScript code receive a \"No 'Access-Control-Allow-Origin' header is present on the requested resource\" error, while Postman does not?","slug":"why-does-my-javascript-code-receive-a-\"no-'access-control-allow-origin'-header-is-present-on-the-requested-resource\"-error-while-postman-does-not-1657384636363","postType":"QUESTION","createdAt":"2022-07-09T16:37:16.000Z","updatedAt":"2022-07-09T16:37:16.000Z","tags":[{"id":395,"name":"same-origin-policy","slug":"same-origin-policy","createdAt":"2022-07-09T16:37:16.000Z","updatedAt":"2022-07-09T16:37:16.000Z","Questions_Tags":{"questionId":108,"tagId":395}},{"id":396,"name":"cors","slug":"cors","createdAt":"2022-07-09T16:37:16.000Z","updatedAt":"2022-07-09T16:37:16.000Z","Questions_Tags":{"questionId":108,"tagId":396}},{"id":397,"name":"flask-restless","slug":"flask-restless","createdAt":"2022-07-09T16:37:16.000Z","updatedAt":"2022-07-09T16:37:16.000Z","Questions_Tags":{"questionId":108,"tagId":397}}]},{"id":107,"title":"How to horizontally center an element","slug":"how-to-horizontally-center-an-element-1657384634147","postType":"QUESTION","createdAt":"2022-07-09T16:37:14.000Z","updatedAt":"2022-07-09T16:37:14.000Z","tags":[{"id":391,"name":"alignment","slug":"alignment","createdAt":"2022-07-09T16:37:14.000Z","updatedAt":"2022-07-09T16:37:14.000Z","Questions_Tags":{"questionId":107,"tagId":391}},{"id":392,"name":"centering","slug":"centering","createdAt":"2022-07-09T16:37:14.000Z","updatedAt":"2022-07-09T16:37:14.000Z","Questions_Tags":{"questionId":107,"tagId":392}}]},{"id":106,"title":"Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?","slug":"should-i-avoid-the-use-of-set(preferredormaximumorminimum)size-methods-in-java-swing-1657384628399","postType":"QUESTION","createdAt":"2022-07-09T16:37:08.000Z","updatedAt":"2022-07-09T16:37:08.000Z","tags":[]}]},"answers":{"106":["\n&lt;ol&gt;\n&lt;li&gt;&lt;blockquote&gt;\n  &lt;p&gt;Should I completely avoid the use of those methods?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes for application code.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;blockquote&gt;\n  &lt;p&gt;The methods have been defined for a reason. So when should I use them? In which context? For what purposes?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I don&apos;t know, personally I think of it as an API design accident. Slightly forced by compound components having special ideas about child sizes. &quot;Slightly&quot;, because they should have implemented their needs with a custom LayoutManager.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;blockquote&gt;\n  &lt;p&gt;What exactly are the negative consequences of using those methods? (I can only think adding portability between systems with different screen resolution.)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Some (incomplete, and unfortunately the links are broken due to migration of SwingLabs to java.net) technical reasons are for instance mentioned in the &lt;a href=&quot;http://web.archive.org/web/20110614145256/http://wiki.java.net/twiki/bin/view/Javadesktop/SwingLabsImperialRules?TWIKISID=e1a6667476691b56753dc9b0744828c6#Do_not_use_component_setXXSize&quot; rel=&quot;noreferrer&quot;&gt;Rules (hehe)&lt;/a&gt; or in the &lt;a href=&quot;http://web.archive.org/web/20100207211337/http://www.jguru.com/faq/view.jsp?EID=237070&quot; rel=&quot;noreferrer&quot;&gt;link&lt;/a&gt; @bendicott found in his/her comment to &lt;a href=&quot;https://stackoverflow.com/questions/7074514/images-in-jtable-cells-off-by-one-pixel&quot;&gt;my answer&lt;/a&gt;. Socially, posing tons of work onto your unfortunate fellow who has to maintain the code and has to track down a broken layout.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;blockquote&gt;\n  &lt;p&gt;I don&apos;t think any LayoutManager can exactly satisfy all desired layout needs. Do I really need to implement a new LayoutManager for every little variation on my layout?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes, there are LayoutManagers powerful enough to satisfy a very good approximation to &quot;all layout needs&quot;. The big three are JGoodies FormLayout, MigLayout, DesignGridLayout. So no, in practice, you rarely write LayoutManagers except for simple highly specialized environments.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;blockquote&gt;\n  &lt;p&gt;If the answer to 4 is &quot;yes&quot;, won&apos;t this lead to a proliferation of LayoutManager classes which will become difficult to maintain? &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;(The answer to 4 is &quot;no&quot;.)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;blockquote&gt;\n  &lt;p&gt;In a situation where I need to define proportions between children of a Component (for example, child 1 should use 10% of space, child 2 40%, child 3 50%), is it possible to achieve that without implementing a custom LayoutManager?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Any of the Big-Three can, can&apos;t even GridBag (never bothered to really master, too much trouble for too little power).&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;A few heuristics:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Don&apos;t use &lt;code&gt;set[Preferred|Maximum|Minimum]Size()&lt;/code&gt; when you really mean to override &lt;code&gt;get[Preferred|Maximum|Minimum]Size()&lt;/code&gt;, as might be done in creating your own component, shown &lt;a href=&quot;https://stackoverflow.com/a/10110232/230513&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Don&apos;t use &lt;code&gt;set[Preferred|Maximum|Minimum]Size()&lt;/code&gt; when you could rely on a component&apos;s carefully overridden &lt;code&gt;getPreferred|Maximum|Minimum]Size&lt;/code&gt;, as shown &lt;a href=&quot;https://stackoverflow.com/questions/3174765/variable-layout-in-swing/3175280#3175280&quot;&gt;here&lt;/a&gt; and below.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Do use &lt;code&gt;set[Preferred|Maximum|Minimum]Size()&lt;/code&gt; to derive post-&lt;code&gt;validate()&lt;/code&gt; geometry, as shown below and &lt;a href=&quot;https://stackoverflow.com/questions/3174765/variable-layout-in-swing/3175280#3175280&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If a component has no preferred size, e.g. &lt;code&gt;JDesktopPane&lt;/code&gt;, you may have to size the container, but any such choice is arbitrary. A comment may help clarify the intent.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Consider alternate or custom layouts when you find that you would have to loop through many components to obtain derived sizes, as mentioned in these &lt;a href=&quot;https://stackoverflow.com/questions/3174765/variable-layout-in-swing/3175280#3175280&quot;&gt;comments&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/hYh36.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.awt.Component;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.awt.Dimension;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.awt.EventQueue;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.awt.GridLayout;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.awt.KeyboardFocusManager;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.beans.PropertyChangeEvent;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.beans.PropertyChangeListener;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JComponent;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JDesktopPane;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JFrame;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JInternalFrame;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JLabel;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JPanel;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JScrollPane;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.JTextField;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.swing.SwingUtilities;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@see&lt;/span&gt; https://stackoverflow.com/questions/7229226\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@see&lt;/span&gt; https://stackoverflow.com/questions/7228843\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DesignTest&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;JTextField&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;JTextField&amp;gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;JPanel&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;panel&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JPanel&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;JScrollPane&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JScrollPane&lt;/span&gt;(panel);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String args[])&lt;/span&gt; {\n        EventQueue.invokeLater(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Runnable&lt;/span&gt;() {\n\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;DesignTest&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DesignTest&lt;/span&gt;();\n                id.create(&lt;span class=&quot;hljs-string&quot;&gt;&quot;My Project&quot;&lt;/span&gt;);\n            }\n        });\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addField&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;JTextField&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jtf&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JTextField&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;);\n        panel.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JLabel&lt;/span&gt;(name, JLabel.LEFT));\n        panel.add(jtf);\n        list.add(jtf);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String strProjectName)&lt;/span&gt; {\n        panel.setLayout(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GridLayout&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));\n        addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;First Name:&quot;&lt;/span&gt;);\n        addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Last Name:&quot;&lt;/span&gt;);\n        addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Address:&quot;&lt;/span&gt;);\n        addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;City:&quot;&lt;/span&gt;);\n        addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Zip Code:&quot;&lt;/span&gt;);\n        addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Phone:&quot;&lt;/span&gt;);\n        addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Email Id:&quot;&lt;/span&gt;);\n        KeyboardFocusManager.getCurrentKeyboardFocusManager()\n            .addPropertyChangeListener(&lt;span class=&quot;hljs-string&quot;&gt;&quot;permanentFocusOwner&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FocusDrivenScroller&lt;/span&gt;(panel));\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Show half the fields&lt;/span&gt;\n        sp.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\n        sp.validate();\n        &lt;span class=&quot;hljs-type&quot;&gt;Dimension&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.getPreferredSize();\n        d.setSize(d.width, d.height / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n        sp.setPreferredSize(d);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;JInternalFrame&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;internaFrame&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JInternalFrame&lt;/span&gt;();\n        internaFrame.add(sp);\n        internaFrame.pack();\n        internaFrame.setVisible(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;JDesktopPane&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;desktopPane&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JDesktopPane&lt;/span&gt;();\n        desktopPane.add(internaFrame);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;JFrame&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;frmtest&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JFrame&lt;/span&gt;();\n        frmtest.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frmtest.add(desktopPane);\n        frmtest.pack();\n        &lt;span class=&quot;hljs-comment&quot;&gt;// User&apos;s preference should be read from java.util.prefs.Preferences&lt;/span&gt;\n        frmtest.setSize(&lt;span class=&quot;hljs-number&quot;&gt;400&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;);\n        frmtest.setLocationRelativeTo(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        frmtest.setVisible(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n        list.get(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).requestFocusInWindow();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FocusDrivenScroller&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PropertyChangeListener&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; JComponent parent;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;FocusDrivenScroller&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(JComponent parent)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.parent = parent;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;propertyChange&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(PropertyChangeEvent evt)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;focused&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Component) evt.getNewValue();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (focused != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;\n                &amp;amp;&amp;amp; SwingUtilities.isDescendingFrom(focused, parent)) {\n                parent.scrollRectToVisible(focused.getBounds());\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;Should I completely avoid the use of those methods?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No, there is no formal evidence to suggest calling or overriding these methods is not allowed. In fact, Oracle says these methods are used for giving size hints: &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/using.html#sizealignment&quot; rel=&quot;noreferrer&quot;&gt;http://docs.oracle.com/javase/tutorial/uiswing/layout/using.html#sizealignment&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;They may also be overridden (which is the best practice for Swing) when &lt;em&gt;extending&lt;/em&gt; a Swing component (rather than calling the method on the custom component instance)&lt;/p&gt;\n\n&lt;p&gt;Most importantly no matter how you specify your component&apos;s size, be sure that your component&apos;s container uses a layout manager that respects the requested size of the component. &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The methods have been defined for a reason. So when should I use them?\n  In which context? For what purposes?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;When you need to provide customized size hints to the containers Layout manager so that the component will be laid out well&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;What exactly are the negative consequences of using those methods? (I\n  can only think to add portability between systems with different\n  screen resolution).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Many layout managers do not pay attention to a component&apos;s requested maximum size. However, &lt;code&gt;BoxLayout&lt;/code&gt; and &lt;code&gt;SpringLayout&lt;/code&gt; do. Furthermore, &lt;code&gt;GroupLayout&lt;/code&gt; provides the ability to set the minimum, preferred or maximum size explicitly, without touching the component.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Make sure that you really need to set the component&apos;s exact size. Each Swing component has a different preferred size, depending on the font it uses and the look and feel. Thus having a set size might produce varied &lt;em&gt;looks&lt;/em&gt; of the UI on different Systems&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;sometimes problems can be encountered with &lt;code&gt;GridBagLayout&lt;/code&gt; and text fields, wherein if the size of the container is smaller than the preferred size, the minimum size gets used, which can cause text fields to shrink quite substantially.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;JFrame&lt;/code&gt; does not enforce overriden &lt;code&gt;getMinimumSize()&lt;/code&gt; only calling &lt;code&gt;setMinimumSize(..)&lt;/code&gt; on its works&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;I don&apos;t think any LayoutManager can exactly satisfy all desired layout\n  needs. Do I really need to implement a new LayoutManager for every\n  little variation on my layout?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If by implementing you mean using then yes. Not one &lt;code&gt;LayoutManger&lt;/code&gt; can handle everything, each &lt;code&gt;LayoutManager&lt;/code&gt; has its pros and cons thus each can be used together to produce the final layout.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/problems.html&quot; rel=&quot;noreferrer&quot;&gt;http://docs.oracle.com/javase/tutorial/uiswing/layout/problems.html&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;There are a lot of good answers here but I want to add a little more about the reasons &lt;em&gt;why&lt;/em&gt; you should normally avoid these (the question just came up again in a duplicate topic):&lt;/p&gt;\n\n&lt;p&gt;With few exceptions, if you are using these methods you are probably fine-tuning your GUI to look good on a specific look-and-feel (and with your system-specific settings, e.g. your preferred desktop font, etc.). The methods themselves aren&apos;t inherently evil, but the typical reasons for using them &lt;em&gt;are&lt;/em&gt;. As soon as you start tuning pixel positions and sizes in a layout you run the risk of your GUI breaking (or at minimum, looking bad), on other platforms.&lt;/p&gt;\n\n&lt;p&gt;As an example of this, try changing your application&apos;s default look-and-feel. Even just with the options available on your platform, you may be surprised at how poorly the results can be rendered.&lt;/p&gt;\n\n&lt;p&gt;So, in the name of keeping your GUI functional and nice-looking on all platforms (remember, one of the major benefits of Java is its cross-platformness), you should rely on layout managers, etc., to automatically adjust the sizes of your components so that it renders correctly outside of your specific development environment.&lt;/p&gt;\n\n&lt;p&gt;All that said, you can certainly conceive of situations where these methods are justified. Again, they aren&apos;t inherently evil, but their usage is normally a &lt;strong&gt;big&lt;/strong&gt; red flag indicating potential GUI issues. Just make sure you are aware of the high potential for complications if/when you use them, and always try and think if there is another look-and-feel-independent solution to your problems -- more often than not you will find that these methods are not necessary.&lt;/p&gt;\n\n&lt;p&gt;By the way, if you find yourself getting frustrated with standard layout managers, there are a lot of good free, open-source third-party ones, for example &lt;a href=&quot;http://www.jgoodies.com/freeware/libraries/forms/&quot;&gt;JGoodies&apos; &lt;code&gt;FormLayout&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;http://www.miglayout.com/&quot;&gt;&lt;code&gt;MigLayout&lt;/code&gt;&lt;/a&gt;. Some GUI builders even have built-in support for third-party layout managers -- Eclipse&apos;s WindowBuilder GUI editor, for example, ships with support for &lt;code&gt;FormLayout&lt;/code&gt; and &lt;code&gt;MigLayout&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;If you are having trouble with layouts in Java Swing, then I can highly recommend the JGoodies &lt;code&gt;FormLayout&lt;/code&gt; provided freely as part of the Forms freeware library by Karsten Lentzsch &lt;a href=&quot;http://www.jgoodies.com/freeware/libraries/forms/&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;This very popular layout manager is extremely flexible, allowing for very polished Java UIs to be developed.&lt;/p&gt;\n\n&lt;p&gt;You&apos;ll find Karsten&apos;s documentation in &lt;a href=&quot;http://manual.openestate.org/extern/forms-1.2.1/tutorial/introduction.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;, and some rather good documentation from eclipse &lt;a href=&quot;http://help.eclipse.org/oxygen/topic/org.eclipse.wb.swing.doc.user/html/layoutmanagers/swing/jgoodies_formlayout.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;These methods are poorly understood by most people. You should absolutely not ignore these methods. It is up to the layout manager if they honor these methods. This page has a table that shows which layout managers honor which of those methods:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://thebadprogrammer.com/swing-layout-manager-sizing/&quot;&gt;http://thebadprogrammer.com/swing-layout-manager-sizing/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I have been writing Swing code for 8+ years and the layout managers included in the JDK have always served my needs. I have never needed a 3rd party layout manager to achieve my layouts.&lt;/p&gt;\n\n&lt;p&gt;I will say that you shouldn&apos;t try to give the layout manager hints with these methods until you are sure you need them. Do your layout without giving any sizing hints (i.e. let the layout manager do its job) and then you can make minor corrections if you need to.&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;In a situation where I need to define proportions between children of a Component (child 1 should use 10% of space, child2 40% ,child3 50%), is it possible to achieve that without implementing a custom layout manager?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Maybe &lt;code&gt;GridBagLayout&lt;/code&gt; would satisfy your needs. Besides that, there&apos;s a ton of layout managers on the web, and I bet there&apos;s one that fits your requirements.&lt;/p&gt;\n    ","\n&lt;p&gt;I am seeing it differenty than the accepted answer.&lt;/p&gt;\n&lt;h3&gt;1) Should I completely avoid the use of those methods?&lt;/h3&gt;\n&lt;p&gt;Never avoid! They&apos;re there to express the size constraints of your components to the layout manager. You can avoid using them if you&apos;re not using any layout manager and try to manage the visual layout on your own.&lt;/p&gt;\n&lt;p&gt;Unfortunately, Swing is not coming with reasonable default dimensions. However, instead of setting the dimensions of a component, it is better OOP to descend your own component with reasonable defaults. (In that case you call setXXX in your descendant class.) Alternatively, you can override the getXXX methods for the same effect.&lt;/p&gt;\n&lt;h3&gt;2) The methods have been defined for a reason. So when should I use them? In which context? For what purposes?&lt;/h3&gt;\n&lt;p&gt;Always. When you create a component, set its realistic min/preferred/max size according to the use of that component. For example, if you have a JTextField for entering country symbols such as UK, its preferred size shall be as wide to fit two chars (with the current font, etc.) but probably it is meaningless to let it grow any bigger. After all, country symbols are two chars.\nAs opposite, if you have a JTextField for entering e.g. a customer name, it can have a preferred size for like the pixel size for 20 chars, but can grow to bigger if the layout is resized, so set the maximum size to more. At the same time, having a 0px wide JTextField is pointless, so set a realistic minimum size (I would say the pixel size of 2 chars).&lt;/p&gt;\n&lt;h3&gt;3) What exactly are the negative consequences of using those methods?&lt;/h3&gt;\n&lt;p&gt;(I can only think adding portability between systems with different screen resolution).&lt;/p&gt;\n&lt;p&gt;No negative consequences. These are hints for the layout manager.&lt;/p&gt;\n&lt;h3&gt;4) I don&apos;t think any LayoutManager can exactly satisfy all desired layout needs.&lt;/h3&gt;\n&lt;p&gt;Do I really need to implement a new LayoutManager for every little variation on my layout ?&lt;/p&gt;\n&lt;p&gt;No, definitely not. The usual approach is to cascade different basic layoutmanagers such as horizontal and vertical layout.&lt;/p&gt;\n&lt;p&gt;For example, the layout below:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;pre&amp;gt;\n+--------------+--------+\n| ###JTABLE### | [Add]  | \n| ...data...   |[Remove]|\n| ...data...   |        |\n| ...data...   |        |\n+--------------+--------+\n&amp;lt;/pre&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;is having two parts. The left and right parts are a horizontal layout. The right part is a JPanel added to the horizontal layout, and this JPanel is having a vertical layout which lays out the buttons vertically.&lt;/p&gt;\n&lt;p&gt;Of course, this can grow tricky with a real life layout. Therefore grid-based layout managers such as MigLayout are much better if you&apos;re about to develop anything serious.&lt;/p&gt;\n&lt;h3&gt;5) If the answer to 4 is &quot;yes&quot;, won&apos;t this lead to a proliferation of LayoutManager classes which will become difficult to maintain?&lt;/h3&gt;\n&lt;p&gt;No, you definitely shall not develop layout managers, unless you need something very special.&lt;/p&gt;\n&lt;h3&gt;6) In a situation where I need to define proportions...&lt;/h3&gt;\n&lt;p&gt;between children of a Component (eg, child1 should use 10% of space, child2 40% ,child3 50%), is it possible to achieve that without implementing a custom LayoutManager?&lt;/p&gt;\n&lt;p&gt;Basically, once the preferred sizes are set right, you may not want to do anything in percentage. Simply, because percentages are pointless (e.g. it is pointless to have a JTextField 10% of the window size - since one can shrink the window so that JTextField becomes 0px wide, or can expand the window so that the JTextField is across two displays on a multi-display setup).&lt;/p&gt;\n&lt;p&gt;But, may times you may use the percentages to control sizes of bigger building blocks of your gui (panels, for example).&lt;/p&gt;\n&lt;p&gt;You can use JSplitPane where you can pre-set the ratio of the two sides. Or, you can use MigLayout which allows you to set such constraints in percentage, pixels, and other units.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Should I completely avoid the use of those methods?&lt;/strong&gt;\nI wouldn&apos;t say &quot;avoid&quot; them. I&apos;d say that if you think you need them, you&apos;re probably doing something wrong. Component sizes are determined in context. For example, Text component sizes are determined by the number of rows and columns you specify, combined with the font you may have chosen. Your button and label size will be the size of the graphic, if you set one, or the space needed to display the text you set. Each component has a natural size, and the layout managers will use those to lay everything out without you needing to specify sizes. The main exception is the JScrollPane, which has a size independent of whatever it contains. For those, I will sometimes call &lt;code&gt;setSize()&lt;/code&gt;, and let that size determine the initial window size, by calling &lt;code&gt;JFrame.pack()&lt;/code&gt;. Usually, I will let the window size determine the JScrollPane size. The user will determine the size of the window. Many layout managers ignore the sizes you set anyway, so they often don&apos;t do much good.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The methods have been defined for a reason. So when should I use them? In which context? For what purposes?&lt;/strong&gt;\nI believe they were added to provide hints to the layout managers. They may have been written for historical reasons, because layout managers were new, and people didn&apos;t fully trust them. I know a few developers who avoided layout managers and placed everything manually, just because they didn&apos;t want to bother with learning a new paradigm. It&apos;s a terrible idea.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;What exactly are the negative consequences of using those methods? (I can only think adding portability between systems with different screen resolution).&lt;/strong&gt;\nThey&apos;re ineffective, and they produce bad layouts, with objects getting squeezed or stretched to non-natural sizes. And the layouts will be brittle. Changes to the window size will sometimes break the layout and put things in the wrong places.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;I don&apos;t think any LayoutManager can exactly satisfy all desired layout needs. Do I really need to implement a new LayoutManager for every little variation on my layout ?&lt;/strong&gt; You shouldn&apos;t &quot;implement&quot; a new LayoutManager. You should instantiate existing ones. I often use several layout managers in a single window. Each JPanel will have its own layout manager. Some people balk at nested layouts, because they&apos;re hard to maintain. When I use them, I give each one its own creation method to make it easier to see what each one does. But I never &quot;implement&quot; a layout manager. I just instantiate them. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;If the answer to 4 is &quot;yes&quot;, won&apos;t this lead to a proliferation of LayoutManager classes which will become difficult to maintain?&lt;/strong&gt;\nIf you&apos;re implementing new layout manager classes for slight variations in layout, you&apos;re using them wrong. If you&apos;re just implementing new layout managers, you&apos;re probably doing something wrong. The only time I&apos;ve extended a LayoutManager class, it was to add a zoom slider to a JScrollPane.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;In a situation where I need to define proportions between children of a Component (eg, child1 should use 10% of space, child2 40% ,child3 50%), is it possible to achieve that without implementing a custom LayoutManager?&lt;/strong&gt;\nThe JSplitPane has a way of specifying the percentage each component should get. The divider is movable by default, but you can turn that off if you want. I don&apos;t use that feature much. I usually have some components that take up a set size, and the rest of the space is taken up by a scroll pane. The scroll pane size will adjust with the window size. If you have two scroll panes side by side, you can put them in a JSplitPane and specify the percentage of new space given to each one as the user expands and contracts the windows.&lt;/p&gt;\n    "],"107":["\n&lt;p&gt;You can apply this CSS to the inner &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Of course, you don&apos;t have to set the &lt;code&gt;width&lt;/code&gt; to &lt;code&gt;50%&lt;/code&gt;. Any width less than the containing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will work. The &lt;code&gt;margin: 0 auto&lt;/code&gt; is what does the actual centering.&lt;/p&gt;\n&lt;p&gt;If you are targeting &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Explorer_8&quot; rel=&quot;noreferrer&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; (and later), it might be better to have this instead:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It will make the inner element center horizontally and it works without setting a specific &lt;code&gt;width&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Working example here:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid black;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid red;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;EDIT&lt;/h2&gt;\n&lt;p&gt;With &lt;code&gt;flexbox&lt;/code&gt; it is very easy to style the div horizontally and vertically centered.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {  \n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0.05em&lt;/span&gt; solid black;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0.05em&lt;/span&gt; solid red;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;To align the div vertically centered, use the property &lt;code&gt;align-items: center&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;If you don&apos;t want to set a fixed width on the inner &lt;code&gt;div&lt;/code&gt; you could do something like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  \n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;That makes the inner &lt;code&gt;div&lt;/code&gt; into an inline element that can be centered with &lt;code&gt;text-align&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;The best approaches are with CSS3.&lt;/p&gt;\n&lt;h2&gt;The old box model (deprecated)&lt;/h2&gt;\n&lt;p&gt;&lt;code&gt;display: box&lt;/code&gt; and its properties &lt;code&gt;box-pack&lt;/code&gt;, &lt;code&gt;box-align&lt;/code&gt;, &lt;code&gt;box-orient&lt;/code&gt;, &lt;code&gt;box-direction&lt;/code&gt; etc. have been replaced by flexbox. While they may still work, they are not recommended to be used in production.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* Firefox */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -moz-box;\n  -moz-box-pack: center;\n  -moz-box-align: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* Safari and Chrome */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -webkit-box;\n  -webkit-box-pack: center;\n  -webkit-box-align: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* W3C */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: box;\n  box-pack: center;\n  box-align: center;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;According to your usability you may also use the &lt;code&gt;box-orient, box-flex, box-direction&lt;/code&gt; properties.&lt;/p&gt;\n&lt;h2&gt;The modern box model with Flexbox&lt;/h2&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;flex-direction&lt;/span&gt;: row;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Read more about centering the child elements&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/css3-box/&quot; rel=&quot;noreferrer&quot;&gt;Link 2&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/CSS2/box.html&quot; rel=&quot;noreferrer&quot;&gt;Link 3&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/box-align&quot; rel=&quot;noreferrer&quot;&gt;Link 4&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;And &lt;strong&gt;this explains why the box model is the best approach&lt;/strong&gt;:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2429819/why-is-the-w3c-box-model-considered-better&quot;&gt;Why is the W3C box model considered better?&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#centered&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:200px&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Make sure the parent element is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/position&quot; rel=&quot;noreferrer&quot;&gt;positioned&lt;/a&gt;, i.e., relative, fixed, absolute, or sticky.&lt;/p&gt;\n&lt;p&gt;If you don&apos;t know the width of your div, you can use &lt;code&gt;transform:translateX(-50%);&lt;/code&gt; instead of the negative margin.&lt;/p&gt;\n&lt;p&gt;With &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/calc&quot; rel=&quot;noreferrer&quot;&gt;CSS calc()&lt;/a&gt;, the code can get even simpler:&lt;/p&gt;\n&lt;br&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The principle is still the same; put the item in the middle and compensate for the width.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve created &lt;a href=&quot;http://codepen.io/tom-maton/pen/oqsEJ&quot; rel=&quot;noreferrer&quot;&gt;this example&lt;/a&gt; to show how to &lt;strong&gt;vertically&lt;/strong&gt; and &lt;strong&gt;horizontally&lt;/strong&gt; &lt;code&gt;align&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;The code is basically this:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and...&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And it will stay in the &lt;code&gt;center&lt;/code&gt; even when you &lt;strong&gt;resize&lt;/strong&gt; your screen.&lt;/p&gt;\n    ","\n&lt;p&gt;Some posters have mentioned the CSS&amp;nbsp;3 way to center using &lt;code&gt;display:box&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;This syntax is outdated and shouldn&apos;t be used anymore. [See also &lt;a href=&quot;http://css-tricks.com/old-flexbox-and-new-flexbox/&quot; rel=&quot;noreferrer&quot;&gt;this post]&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;So just for completeness here is the latest way to center in CSS&amp;nbsp;3 using the &lt;strong&gt;&lt;a href=&quot;http://www.w3.org/TR/css3-flexbox/&quot; rel=&quot;noreferrer&quot;&gt;Flexible Box Layout Module&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;So if you have simple markup like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;B&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;C&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...and you want to center your items within the box, here&apos;s what you need on the parent element (.box):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap; &lt;span class=&quot;hljs-comment&quot;&gt;/* Optional. only if you want the items to wrap */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center; &lt;span class=&quot;hljs-comment&quot;&gt;/* For horizontal alignment */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center; &lt;span class=&quot;hljs-comment&quot;&gt;/* For vertical alignment */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* Optional. only if you want the items to wrap */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* For horizontal alignment */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* For vertical alignment */&lt;/span&gt;\n}\n* {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; solid tomato;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.item1&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: pink;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.item2&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: brown;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.item3&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: orange;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;A&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;B&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;C&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;If you need to support older browsers which use older syntax for flexbox &lt;a href=&quot;http://the-echoplex.net/flexyboxes/&quot; rel=&quot;noreferrer&quot;&gt;here&apos;s&lt;/a&gt; a good place to look.&lt;/p&gt;\n    ","\n&lt;p&gt;If you don&apos;t want to set a fixed width and don&apos;t want the extra margin, add &lt;code&gt;display: inline-block&lt;/code&gt; to your element.&lt;/p&gt;\n\n&lt;p&gt;You can use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#element&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Centering a div of unknown height and width&lt;/h2&gt;\n&lt;p&gt;Horizontally and vertically. It works with reasonably modern browsers (Firefox, Safari/WebKit, Chrome, Internet &amp;amp; Explorer &amp;amp; 10, Opera, etc.)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translate&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;This works with any content&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Tinker with it further on &lt;a href=&quot;http://codepen.io/storypixel/pen/Dbdiq&quot; rel=&quot;noreferrer&quot;&gt;Codepen&lt;/a&gt; or on &lt;a href=&quot;http://jsbin.com/zureq/1&quot; rel=&quot;noreferrer&quot;&gt;JSBin&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Set the &lt;code&gt;width&lt;/code&gt; and set &lt;code&gt;margin-left&lt;/code&gt; and &lt;code&gt;margin-right&lt;/code&gt; to &lt;code&gt;auto&lt;/code&gt;. That&apos;s &lt;strong&gt;for horizontal only&lt;/strong&gt;, though. If you want both ways, you&apos;d just do it both ways. Don&apos;t be afraid to experiment; it&apos;s not like you&apos;ll break anything.&lt;/p&gt;\n    ","\n&lt;p&gt;It cannot be centered if you don&apos;t give it a width. Otherwise, it will take, by default, the whole horizontal space.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://www.w3schools.com/cssref/css3_pr_box-align.asp&quot; rel=&quot;noreferrer&quot;&gt;CSS&amp;nbsp;3&apos;s box-align property&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: box;\n    box-orient: horizontal;\n    box-pack: center;\n    box-align: center;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I recently had to center a &quot;hidden&quot; div (i.e., &lt;code&gt;display:none;&lt;/code&gt;) that had a tabled form within it that needed to be centered on the page. I wrote the following jQuery code to display the hidden div and then update the CSS content to the automatic generated width of the table and change the margin to center it.  (The display toggle is triggered by clicking on a link, but this code wasn&apos;t necessary to display.)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I&apos;m sharing this code, because Google brought me to this Stack Overflow solution and everything would have worked except that hidden elements don&apos;t have any width and can&apos;t be resized/centered until after they are displayed.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#inner&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;width&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#innerTable&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;width&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;margin&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;0 auto&apos;&lt;/span&gt;);\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display:none;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;innerTable&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;Name:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;Email:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;Email:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The way I usually do it is using absolute position:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-right&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The outer div doesn&apos;t need any extra properties for this to work.&lt;/p&gt;\n    ","\n&lt;p&gt;For Firefox and Chrome:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:100%;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width: 50%; margin: 0px auto;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Text&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;For Internet&amp;nbsp;Explorer, Firefox, and Chrome:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:100%; text-align:center;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width: 50%; margin: 0px auto; text-align:left;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Text&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;text-align:&lt;/code&gt; property is optional for modern browsers, but it is necessary in Internet&amp;nbsp;Explorer Quirks Mode for legacy browsers support.&lt;/p&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outerDiv&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;500px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#innerDiv&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outerDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;innerDiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Inner Content&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Another solution for this without having to set a width for one of the elements is using the CSS 3 &lt;code&gt;transform&lt;/code&gt; attribute.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#outer {\n  position: relative;\n}\n\n#inner {\n  position: absolute;\n  left: 50%;\n\n  transform: translateX(-50%);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The trick is that &lt;code&gt;translateX(-50%)&lt;/code&gt; sets the &lt;code&gt;#inner&lt;/code&gt; element 50 percent to the left of its own width. You can use the same trick for vertical alignment.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s a &lt;a href=&quot;http://jsfiddle.net/bfedqjz4/&quot; rel=&quot;noreferrer&quot; title=&quot;Fiddle&quot;&gt;&lt;strong&gt;Fiddle&lt;/strong&gt;&lt;/a&gt; showing horizontal and vertical alignment.&lt;/p&gt;\n\n&lt;p&gt;More information is on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&quot; rel=&quot;noreferrer&quot; title=&quot;MDN&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Chris Coyier who wrote an &lt;a href=&quot;http://css-tricks.com/centering-in-the-unknown/&quot; rel=&quot;noreferrer&quot;&gt;excellent post&lt;/a&gt; on &apos;Centering in the Unknown&apos; on his blog. It&apos;s a roundup of multiple solutions. I posted one that isn&apos;t posted in this question. It has more browser support than the &lt;a href=&quot;https://en.wikipedia.org/wiki/CSS_Flexible_Box_Layout&quot; rel=&quot;noreferrer&quot;&gt;Flexbox&lt;/a&gt; solution, and you&apos;re not using &lt;code&gt;display: table;&lt;/code&gt; which could break other things.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;/* This parent can be any width and height */\n.outer {\n  text-align: center;\n}\n\n/* The ghost, nudged to maintain perfect centering */\n.outer:before {\n  content: &apos;.&apos;;\n  display: inline-block;\n  height: 100%;\n  vertical-align: middle;\n  width: 0;\n  overflow: hidden;\n}\n\n/* The element to be centered, can\n   also be of any width and height */\n.inner {\n  display: inline-block;\n  vertical-align: middle;\n  width: 300px;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I recently found an approach:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#outer {\n    position: absolute;\n    left: 50%;\n}\n\n#inner {\n    position: relative;\n    left: -50%;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Both elements must be the same width to function correctly.&lt;/p&gt;\n    ","\n&lt;p&gt;For example, see &lt;a href=&quot;http://jsfiddle.net/uCdPK/&quot; rel=&quot;noreferrer&quot;&gt;this link&lt;/a&gt; and the snippet below:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;120px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: red;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: green;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center; &lt;span class=&quot;hljs-comment&quot;&gt;/* For text alignment to center horizontally. */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;120px&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* For text alignment to center vertically. */&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:100%;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;If you have a lot of children under a parent, so your CSS content must be like this &lt;a href=&quot;http://jsfiddle.net/uCdPK/2/&quot; rel=&quot;noreferrer&quot;&gt;example on fiddle&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The HTML content look likes this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:100%;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; Foo Text &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; Foo Text &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; Foo Text &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; Foo Text &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then see this &lt;a href=&quot;http://jsfiddle.net/uCdPK/2/&quot; rel=&quot;noreferrer&quot;&gt;example on fiddle&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;h1&gt;Centering only horizontally&lt;/h1&gt;\n&lt;p&gt;In my experience, the best way to center a box horizontally is to apply the following properties:&lt;/p&gt;\n&lt;h2&gt;The container:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;text-align: center;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;The content box:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;display: inline-block;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Demo:&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;120px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#CCC&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered-content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered-content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    Center this!\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;See also &lt;a href=&quot;https://jsfiddle.net/zmw77awd/1/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;\n&lt;hr&gt;\n&lt;h1&gt;Centering both horizontally &amp;amp; vertically&lt;/h1&gt;\n&lt;p&gt;In my experience, the best way to center a box &lt;strong&gt;both&lt;/strong&gt; vertically and horizontally is to use an additional container and apply the following properties:&lt;/p&gt;\n&lt;h2&gt;The outer container:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;display: table;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;The inner container:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;display: table-cell;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;should have &lt;code&gt;vertical-align: middle;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;should have &lt;code&gt;text-align: center;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;The content box:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;display: inline-block;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Demo:&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.outer-container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;120px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#CCC&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.inner-container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered-content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer-container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner-container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered-content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      Center this!\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;See also &lt;a href=&quot;https://jsfiddle.net/zmw77awd/2/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;\n    ","\n&lt;h1&gt;Flexbox&lt;/h1&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;display: flex&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; behaves like a block element and lays out its content according to the flexbox model. It works with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;justify-content: center&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; Flexbox is compatible all browsers exept Internet Explorer. See &lt;a href=&quot;https://stackoverflow.com/questions/43979702/display-flex-not-working-on-internet-explorer/43979973#43979973&quot;&gt;display: flex not working on Internet Explorer&lt;/a&gt; for a complete and up to date list of browsers compatibility.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h1&gt;Text-align: center&lt;/h1&gt;\n&lt;p&gt;Applying &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-align?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;text-align: center&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; the inline contents are centered within the line box. However since the inner div has by default &lt;code&gt;width: 100%&lt;/code&gt; you have to set a specific width or use one of the following:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;display: block&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;display: inline&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;display: inline-block&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif16&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h1&gt;Margin: 0 auto&lt;/h1&gt;\n&lt;p&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/margin?v=example&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;margin: 0 auto&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; is another option and it is more suitable for older browsers compatibility. It works together with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;display: table&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif17&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h1&gt;Transform&lt;/h1&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;transform: translate&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; lets you modify the coordinate space of the CSS visual formatting model. Using it, elements can be translated, rotated, scaled, and skewed. To center horizontally it require &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/position?v=example&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;position: absolute&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/left&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;left: 50%&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translate&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0%&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif18&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h1&gt;&lt;code&gt;&amp;lt;center&amp;gt;&lt;/code&gt; (Deprecated)&lt;/h1&gt;\n&lt;p&gt;The tag &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;center&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; is the HTML alternative to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-align?v=control&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;text-align: center&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;. It works on older browsers and most of the new ones but it is not considered a good practice since this feature is &lt;a href=&quot;https://www.w3.org/TR/html5/obsolete.html&quot; rel=&quot;noreferrer&quot;&gt;obsolete&lt;/a&gt; and has been removed from the Web standards.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Foo foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif19&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This method also works just fine:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center; &lt;span class=&quot;hljs-comment&quot;&gt;/* For horizontal alignment */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;     &lt;span class=&quot;hljs-comment&quot;&gt;/* For vertical alignment   */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For the inner &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, the only condition is that its &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; must not be larger than the ones of its container.&lt;/p&gt;\n    ","\n&lt;p&gt;The easiest way:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Blabla&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif20&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;If width of the content is unknown you can use the following method&lt;/strong&gt;. Suppose we have these two elements:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;.outer&lt;/code&gt; -- full width&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;.inner&lt;/code&gt; -- no width set (but a max-width could be specified)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Suppose the computed width of the elements are 1000 pixels and 300 pixels respectively. Proceed as follows:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Wrap &lt;code&gt;.inner&lt;/code&gt; inside &lt;code&gt;.center-helper&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Make &lt;code&gt;.center-helper&lt;/code&gt; an inline block; it becomes the same size as &lt;code&gt;.inner&lt;/code&gt; making it 300 pixels wide.&lt;/li&gt;\n&lt;li&gt;Push &lt;code&gt;.center-helper&lt;/code&gt; 50% right relative to its parent; this places its left at 500 pixels wrt. outer.&lt;/li&gt;\n&lt;li&gt;Push &lt;code&gt;.inner&lt;/code&gt; 50% left relative to its parent; this places its left at -150 pixels wrt. center helper which means its left is at 500 - 150 = 350 pixels wrt. outer.&lt;/li&gt;\n&lt;li&gt;Set overflow on &lt;code&gt;.outer&lt;/code&gt; to hidden to prevent horizontal scrollbar.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Demo:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font&lt;/span&gt;: medium sans-serif;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: papayawhip;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.center-helper&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: burlywood;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: wheat;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center-helper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;A div with no defined width&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          Duis condimentum sem non turpis consectetur blandit.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          Donec dictum risus id orci ornare tempor.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          Proin pharetra augue a lorem elementum molestie.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          Nunc nec justo sit amet nisi tempor viverra sit amet a ipsum.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif21&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Flex have more than 97% browser support coverage and might be the best way to solve these kind of problems within few lines:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do something like this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#container {\n   display: table;\n   width: &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;container&lt;/span&gt;&amp;gt;&lt;/span&gt;;\n   height: &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;container&lt;/span&gt;&amp;gt;&lt;/span&gt;;\n}\n\n#inner {\n   width: &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;;\n   display: table-cell;\n   margin: 0 auto;\n   text-align: center;\n   vertical-align: middle;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will also align the &lt;code&gt;#inner&lt;/code&gt; vertically. If you don&apos;t want to, remove the &lt;code&gt;display&lt;/code&gt; and &lt;code&gt;vertical-align&lt;/code&gt; properties;&lt;/p&gt;\n    ","\n&lt;p&gt;Here is what you want in the shortest way.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/8qYcn/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JSFIDDLE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt; - &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; px;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt; px; &lt;span class=&quot;hljs-comment&quot;&gt;/* you can set whatever you want */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; px solid# ccc;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; px solid# f00;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; % ;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translateY&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; % );\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;display: flex&lt;/code&gt; for your outer div and to horizontally center you have to add &lt;code&gt;justify-content: center&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#outer&lt;/span&gt;{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or you can visit &lt;a href=&quot;https://www.w3schools.com/cssref/css3_pr_flex.asp&quot; rel=&quot;noreferrer&quot;&gt;w3schools - CSS flex Property&lt;/a&gt; for more ideas.&lt;/p&gt;\n    ","\n&lt;p&gt;Well, I managed to find a solution that maybe will fit all situations, but uses JavaScript:&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s the structure:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Your content goes here!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Your content goes here!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Your content goes here!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And here&apos;s the JavaScript snippet:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;$(document).ready(function() {\n  $(&apos;.container .content&apos;).each( function() {\n    container = $(this).closest(&apos;.container&apos;);\n    content = $(this);\n\n    containerHeight = container.height();\n    contentHeight = content.height();\n\n    margin = (containerHeight - contentHeight) / 2;\n    content.css(&apos;margin-top&apos;, margin);\n  })\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to use it in a responsive approach, you can add the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;$(window).resize(function() {\n  $(&apos;.container .content&apos;).each( function() {\n    container = $(this).closest(&apos;.container&apos;);\n    content = $(this);\n\n    containerHeight = container.height();\n    contentHeight = content.height();\n\n    margin = (containerHeight - contentHeight) / 2;\n    content.css(&apos;margin-top&apos;, margin);\n  })\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One option existed that I found:&lt;/p&gt;\n\n&lt;p&gt;Everybody says to use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;margin: auto 0;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But there is another option. Set this property for the parent div. It\nworks perfectly anytime:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;text-align: center;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And see, child go center.&lt;/p&gt;\n\n&lt;p&gt;And finally CSS for you:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#outer{\n     text-align: center;\n     display: block; /* Or inline-block - base on your need */\n}\n\n#inner\n{\n     position: relative;\n     margin: 0 auto; /* It is good to be */\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"108":["\n&lt;p&gt;If I understood it right you are doing an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot; rel=&quot;noreferrer&quot;&gt;XMLHttpRequest&lt;/a&gt; to a different domain than your page is on. So the browser is blocking it as it usually allows a request in the same origin for security reasons. You need to do something different when you want to do a cross-domain request. A tutorial about how to achieve that is &lt;em&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot; rel=&quot;noreferrer&quot;&gt;Using CORS&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;When you are using Postman they are not restricted by this policy. Quoted from &lt;em&gt;&lt;a href=&quot;https://developer.chrome.com/docs/extensions/mv2/xhr/&quot; rel=&quot;noreferrer&quot;&gt;Cross-Origin XMLHttpRequest&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Regular web pages can use the XMLHttpRequest object to send and receive data from remote servers, but they&apos;re limited by the same origin policy. Extensions aren&apos;t so limited. An extension can talk to remote servers outside of its origin, as long as it first requests cross-origin permissions.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Using &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; can make your API/website vulnerable to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot; rel=&quot;noreferrer&quot;&gt;cross-site request forgery&lt;/a&gt; (CSRF) attacks. Make certain you &lt;a href=&quot;https://stackoverflow.com/questions/43154170/is-it-safe-to-enable-cors-to-for-a-public-and-readonly-webservice&quot;&gt;understand the risks&lt;/a&gt; before using this code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&apos;s very simple to solve if you are using &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot; rel=&quot;noreferrer&quot;&gt;PHP&lt;/a&gt;. Just add the following script in the beginning of your PHP page which handles the request:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;?php &lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Origin: *&apos;&lt;/span&gt;); ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Node-RED&quot; rel=&quot;noreferrer&quot;&gt;Node-red&lt;/a&gt; you have to allow &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot; rel=&quot;noreferrer&quot;&gt;CORS&lt;/a&gt; in the &lt;code&gt;node-red/settings.js&lt;/code&gt; file by un-commenting the following lines:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// The following property can be used to configure cross-origin resource sharing&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// in the HTTP nodes.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// See https://github.com/troygoode/node-cors#configuration-options for&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// details on its contents. The following is a basic permissive set of options:&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;httpNodeCors&lt;/span&gt;: {\n &lt;span class=&quot;hljs-attr&quot;&gt;origin&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;,\n &lt;span class=&quot;hljs-attr&quot;&gt;methods&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;GET,PUT,POST,DELETE&quot;&lt;/span&gt;\n},\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are using &lt;a href=&quot;http://flask.pocoo.org/&quot; rel=&quot;noreferrer&quot;&gt;Flask&lt;/a&gt; same as the question; you have first to install &lt;code&gt;flask-cors&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$ pip install -U flask-cors\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then include the Flask cors in your application.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_cors &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;CORS&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A simple application will look like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Flask&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_cors &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;CORS&lt;/span&gt;\n\napp = &lt;span class=&quot;hljs-title class_&quot;&gt;Flask&lt;/span&gt;(__name__)\n&lt;span class=&quot;hljs-title function_&quot;&gt;CORS&lt;/span&gt;(app)\n\n@app.&lt;span class=&quot;hljs-title function_&quot;&gt;route&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;)\ndef &lt;span class=&quot;hljs-title function_&quot;&gt;helloWorld&lt;/span&gt;():\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, cross-origin-world!&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more details, you can check the &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot; rel=&quot;noreferrer&quot;&gt;Flask documentation&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Because &lt;br&gt;\n&lt;strong&gt;$.ajax({type: &quot;POST&quot;&lt;/strong&gt; - calls &lt;strong&gt;OPTIONS&lt;/strong&gt; &lt;br&gt;\n&lt;strong&gt;$.post(&lt;/strong&gt; - Calls &lt;strong&gt;POST&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;\n&lt;p&gt;Both are different. Postman calls &quot;POST&quot; properly, but when we call it, it will be &quot;OPTIONS&quot;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;For C# web services - &lt;a href=&quot;https://en.wikipedia.org/wiki/ASP.NET_MVC_Framework#Apache_License_2.0_release&quot; rel=&quot;noreferrer&quot;&gt;Web API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Please add the following code in your &lt;em&gt;web.config&lt;/em&gt; file under &amp;lt;system.webServer&amp;gt; tag. This will work:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;httpProtocol&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;customHeaders&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;customHeaders&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/httpProtocol&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Please make sure you are not doing any mistake in the Ajax call&lt;/p&gt;\n&lt;h3&gt;jQuery&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://mysite.microsoft.sample.xyz.com/api/mycall&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/x-www-form-urlencoded&apos;&lt;/span&gt;\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;/* or type:&quot;GET&quot; or type:&quot;PUT&quot; */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;json&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: {\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(result);\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;error&quot;&lt;/span&gt;);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are looking for downloading content &lt;strong&gt;from a third-party website&lt;/strong&gt; then &lt;strong&gt;this will not help you&lt;/strong&gt;.  You can try the following code, but not JavaScript.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;WebClient&lt;/span&gt; wc = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;WebClient&lt;/span&gt;();\nstring str = wc.&lt;span class=&quot;hljs-title class_&quot;&gt;DownloadString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://mysite.microsoft.sample.xyz.com/api/mycall&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Deep&lt;/h1&gt;\n&lt;p&gt;In the below investigation as API, I use &lt;a href=&quot;http://example.com&quot; rel=&quot;noreferrer&quot;&gt;http://example.com&lt;/a&gt; instead of http://myApiUrl/login from your question, because this first one working. I assume that your page is on &lt;a href=&quot;http://my-site.local:8088&quot; rel=&quot;noreferrer&quot;&gt;http://my-site.local:8088&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The API and your page have different domains!&lt;/p&gt;\n&lt;p&gt;The reason why you see different results is that Postman:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;set header &lt;code&gt;Host=example.com&lt;/code&gt; (your API)&lt;/li&gt;\n&lt;li&gt;NOT set header &lt;code&gt;Origin&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Postman actually not use your website url at all (you only type your API address into Postman) - he only send request to API, so he assume that website has same address as API (browser not assume this)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;This is similar to browsers&apos; way of sending requests when the site and API has the same domain (browsers also set the header item &lt;code&gt;Referer=http://my-site.local:8088&lt;/code&gt;, however I don&apos;t see it in Postman). &lt;strong&gt;When &lt;code&gt;Origin&lt;/code&gt; header is &lt;em&gt;not&lt;/em&gt; set, usually servers allow such requests by default.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/XLrRg.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/XLrRg.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;This is the standard way how Postman sends requests. But a browser sends requests differently when &lt;strong&gt;your site and API have different domains&lt;/strong&gt;, and then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot; rel=&quot;noreferrer&quot;&gt;CORS&lt;/a&gt; occurs and the browser automatically:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;sets header &lt;code&gt;Host=example.com&lt;/code&gt; (yours as API)&lt;/li&gt;\n&lt;li&gt;sets header &lt;code&gt;Origin=http://my-site.local:8088&lt;/code&gt; (your site)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;(The header &lt;code&gt;Referer&lt;/code&gt; has the same value as &lt;code&gt;Origin&lt;/code&gt;). And now in Chrome&apos;s &lt;em&gt;Console &amp;amp; Networks&lt;/em&gt; tab you will see:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/oZkcL.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/oZkcL.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/8ITev.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/8ITev.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;When you have &lt;strong&gt;&lt;code&gt;Host != Origin&lt;/code&gt;&lt;/strong&gt; this is CORS, and when the server detects such a request, it usually &lt;strong&gt;blocks it by default&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;Origin=null&lt;/code&gt; is set when you open HTML content from a local directory, and it sends a request. The same situation is when you send a request inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, like in the below snippet (but here the &lt;code&gt;Host&lt;/code&gt; header is not set at all) - in general, everywhere the HTML specification says opaque origin, you can translate that to &lt;code&gt;Origin=null&lt;/code&gt;. More information about this you can find &lt;a href=&quot;https://stackoverflow.com/questions/42239643/when-do-browsers-send-the-origin-header-when-do-browsers-set-the-origin-to-null/42242802#42242802&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/api&apos;&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;Look on chrome-console &amp;gt; network tab&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;If you do not use a simple CORS request, usually the browser automatically also sends an OPTIONS request before sending the main request - more information is &lt;a href=&quot;https://stackoverflow.com/questions/10093053/access-control-request-headers-is-added-to-header-in-ajax-request-with-jquery/55584963#55584963&quot;&gt;here&lt;/a&gt;. The snippet below shows it:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/api&apos;&lt;/span&gt;, {\n  &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: { &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/json&apos;&lt;/span&gt;}\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;Look in chrome-console -&amp;gt; network tab to &apos;api&apos; request.\nThis is the OPTIONS request (the server does not allow sending a POST request)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;You can change the configuration of your server to allow CORS requests.&lt;/p&gt;\n&lt;p&gt;Here is an example configuration which turns on &lt;strong&gt;CORS on nginx&lt;/strong&gt; (nginx.conf file) - be very careful with setting &lt;code&gt;always/&quot;$http_origin&quot;&lt;/code&gt; for nginx and &lt;code&gt;&quot;*&quot;&lt;/code&gt; for Apache - this will unblock CORS from any domain (in production instead of stars use your concrete page adres which consume your api)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;location ~ ^/index\\.php(/|$) {\n   ...\n    add_header &apos;Access-Control-Allow-Origin&apos; &quot;$http_origin&quot; always;\n    add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos; always;\n    if ($request_method = OPTIONS) {\n        add_header &apos;Access-Control-Allow-Origin&apos; &quot;$http_origin&quot;; # DO NOT remove THIS LINES (doubled with outside &apos;if&apos; above)\n        add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;;\n        add_header &apos;Access-Control-Max-Age&apos; 1728000; # cache preflight value for 20 days\n        add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET, POST, OPTIONS&apos;;\n        add_header &apos;Access-Control-Allow-Headers&apos; &apos;My-First-Header,My-Second-Header,Authorization,Content-Type,Accept,Origin&apos;;\n        add_header &apos;Content-Length&apos; 0;\n        add_header &apos;Content-Type&apos; &apos;text/plain charset=UTF-8&apos;;\n        return 204;\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Here is an example configuration which turns on &lt;strong&gt;CORS on Apache&lt;/strong&gt; (.htaccess file)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;# ------------------------------------------------------------------------------\n# | Cross-domain Ajax requests                                                 |\n# ------------------------------------------------------------------------------\n\n# Enable cross-origin Ajax requests.\n# http://code.google.com/p/html5security/wiki/CrossOriginRequestSecurity\n# http://enable-cors.org/\n\n# &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;IfModule&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;mod_headers.c&lt;/span&gt;&amp;gt;&lt;/span&gt;\n#    Header set Access-Control-Allow-Origin &quot;*&quot;\n# &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;IfModule&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n# Header set Header set Access-Control-Allow-Origin &quot;*&quot;\n# Header always set Access-Control-Allow-Credentials &quot;true&quot;\n\nAccess-Control-Allow-Origin &quot;http://your-page.com:80&quot;\nHeader always set Access-Control-Allow-Methods &quot;POST, GET, OPTIONS, DELETE, PUT&quot;\nHeader always set Access-Control-Allow-Headers &quot;My-First-Header,My-Second-Header,Authorization, content-type, csrf-token&quot;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Applying a CORS restriction is a security feature defined by a server and implemented by a &lt;strong&gt;browser&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The browser looks at the CORS policy of the server and respects it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;However, the Postman tool does not bother about the CORS policy of the server.&lt;/p&gt;\n\n&lt;p&gt;That is why the CORS error appears in the browser, but not in Postman.&lt;/p&gt;\n    ","\n&lt;p&gt;The error you get is due to the CORS standard, which sets some restrictions on how JavaScript can perform ajax requests.&lt;/p&gt;\n&lt;p&gt;The CORS standard is a client-side standard, implemented in the browser. So it is the browser which prevent the call from completing and generates the error message - not the server.&lt;/p&gt;\n&lt;p&gt;Postman does not implement the CORS restrictions, which is why you don&apos;t see the same error when making the same call from Postman.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Why&lt;/em&gt; doesn&apos;t Postman implement CORS? CORS defines the restrictions relative to the origin (URL domain) of the page which initiates the request. But in Postman the requests doesn&apos;t originate from a page with an URL so CORS does not apply.&lt;/p&gt;\n    ","\n&lt;h2&gt;Solution &amp;amp; Issue Origins&lt;/h2&gt;\n&lt;p&gt;You are making a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot; rel=&quot;noreferrer&quot;&gt;XMLHttpRequest&lt;/a&gt; to different domains, example:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Domain one: &lt;code&gt;some-domain.com&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Domain Two: &lt;code&gt;some-different-domain.com&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;This difference in domain names triggers &lt;strong&gt;CORS&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot; rel=&quot;noreferrer&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt;) policy called &lt;strong&gt;SOP&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot; rel=&quot;noreferrer&quot;&gt;Same-Origin Policy&lt;/a&gt;) that enforces the use of same domains (hence &lt;em&gt;Origin&lt;/em&gt;) in &lt;a href=&quot;https://api.jquery.com/jquery.ajax&quot; rel=&quot;noreferrer&quot;&gt;Ajax&lt;/a&gt;, XMLHttpRequest and other HTTP requests.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Why did it work when I made the request via the Chrome extension\nPostman?&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;A client (most &lt;strong&gt;Browsers&lt;/strong&gt; and &lt;strong&gt;Development Tools&lt;/strong&gt;) has a choice to enforce the Same-Origin Policy.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Most browsers enforce the policy of Same-Origin Policy to prevent issues related to &lt;strong&gt;CSRF&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot; rel=&quot;noreferrer&quot;&gt;Cross-Site Request Forgery&lt;/a&gt;) attack.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Postman&lt;/strong&gt; as a development tool chooses not to enforce SOP while some browsers enforce, this is why you can send requests via Postman that you cannot send with XMLHttpRequest via JS using the browser.&lt;/p&gt;\n    ","\n&lt;p&gt;For browser testing purposes:\nWindows - Run:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;chrome.&lt;span class=&quot;hljs-property&quot;&gt;exe&lt;/span&gt; --user-data-dir=&lt;span class=&quot;hljs-string&quot;&gt;&quot;C://Chrome dev session&quot;&lt;/span&gt; --disable-web-security\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You might also get this error if your gateway timeout is too short and the resource you are accessing takes longer to process than the timeout. This may be the case for complex database queries etc. Thus, the above error code can be disguishing this problem. Just check if the error code is 504 instead of 404 as in Kamils answer above or something else. If it is 504, then increasing the gateway timeout might fix the problem.&lt;/p&gt;\n&lt;p&gt;In my case the CORS error could be removed by disabling the same origin policy (CORS) in the IE browser, see &lt;a href=&quot;https://stackoverflow.com/questions/20947359/how-to-disable-same-origin-policy-internet-explorer&quot;&gt;How to disable same origin policy Internet Explorer&lt;/a&gt;. After doing this it was a pure 504 error in the log.&lt;/p&gt;\n    ","\n&lt;p&gt;To resolve this issue write this line of code in your &lt;code&gt;doGet()&lt;/code&gt; or &lt;code&gt;doPost()&lt;/code&gt; function whichever you are using in backend.\n&lt;code&gt;response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Your IP is not whitelisted so you are getting this error.\nAsk the backend staff to whitelist your ip for the service you are accessing\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&quot;The quickest fix you can make is to install the &lt;em&gt;&lt;strong&gt;moesif CORS&lt;/strong&gt;&lt;/em&gt; extension:\n&lt;a href=&quot;https://chrome.google.com/webstore/detail/moesif-origin-cors-change/digfbfaphojjndkpccljibejjbppifbc/related?hl=en-US&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://chrome.google.com/webstore/detail/moesif-origin-cors-change/digfbfaphojjndkpccljibejjbppifbc/related?hl=en-US&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Once installed, click it in your browser to activate the extension. Make sure the icons label goes from off to on:&lt;/p&gt;\n&lt;p&gt;Then &lt;strong&gt;refresh&lt;/strong&gt; your application, and your API requests should now work!&quot;&lt;/p&gt;\n    "],"109":["\n&lt;h3&gt;C++98 and C++03&lt;/h3&gt;\n&lt;p&gt;This answer is for the older versions of the C++ standard.  The C++11 and C++14 versions of the standard do not formally contain &apos;sequence points&apos;; operations are &apos;sequenced before&apos; or &apos;unsequenced&apos; or &apos;indeterminately sequenced&apos; instead.  The net effect is essentially the same, but the terminology is different.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt; : Okay. This answer is a bit long. So have patience while reading it. If you already know these things, reading them again won&apos;t make you crazy.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Pre-requisites&lt;/strong&gt; : An elementary knowledge of &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/&quot; rel=&quot;nofollow noreferrer&quot;&gt;C++ Standard&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;What are Sequence Points?&lt;/h2&gt;\n&lt;p&gt;The Standard says&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;At  certain specified points in the execution sequence called &lt;strong&gt;sequence points&lt;/strong&gt;, all &lt;em&gt;side effects&lt;/em&gt; of previous evaluations\nshall be complete and no &lt;em&gt;side effects&lt;/em&gt; of subsequent evaluations shall have taken place. (§1.9/7)&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;h2&gt;Side effects? What are side effects?&lt;/h2&gt;\n&lt;p&gt;Evaluation  of  an  expression produces something and if in addition there is a change in the state of the execution environment it is said that the expression (its evaluation) has some side effect(s).&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; x = y++; &lt;span class=&quot;hljs-comment&quot;&gt;//where y is also an int&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In addition to the initialization operation the value of &lt;code&gt;y&lt;/code&gt; gets changed due to the side effect of &lt;code&gt;++&lt;/code&gt; operator.&lt;/p&gt;\n&lt;p&gt;So far so good. Moving on to sequence points. An alternation definition of seq-points given by the comp.lang.c author &lt;code&gt;Steve Summit&lt;/code&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Sequence point is a point in time at which the dust has settled and all side effects which have been seen so far are guaranteed to be complete.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;hr&gt;\n&lt;h2&gt;What are the common sequence points listed in the C++ Standard?&lt;/h2&gt;\n&lt;p&gt;Those are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;at the end of the evaluation of full expression (&lt;code&gt;§1.9/16&lt;/code&gt;) (A full-expression is an expression that is not a subexpression of another expression.)&lt;sup&gt;1&lt;/sup&gt;&lt;/p&gt;\n&lt;p&gt;Example :&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// ; is a sequence point here&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;in the evaluation of each of the following expressions after the evaluation of the first expression (&lt;code&gt;§1.9/18&lt;/code&gt;) &lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;a &amp;amp;&amp;amp; b (§5.14)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;a || b (§5.15)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;a ? b : c (§5.16)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;a , b (§5.18)&lt;/code&gt; (here a , b is a comma operator; in &lt;code&gt;func(a,a++)&lt;/code&gt; &lt;code&gt;,&lt;/code&gt; is not a comma operator, it&apos;s merely a separator between the arguments &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;a++&lt;/code&gt;. Thus the behaviour is undefined in that case (if &lt;code&gt;a&lt;/code&gt; is considered to be a primitive type)) &lt;br&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;at a function call (whether or not the function is inline), after the evaluation of all function arguments (if any) which\ntakes place before execution of any expressions or statements in the function body (&lt;code&gt;§1.9/17&lt;/code&gt;).&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;sub&gt;1 : Note : the evaluation of a full-expression can include the evaluation of subexpressions that are not lexically\npart of the full-expression.  For example, subexpressions involved in evaluating default argument expressions (8.3.6) are considered to be created in the expression that calls the function, not the expression that defines the default argument&lt;/sub&gt;&lt;/p&gt;\n&lt;p&gt;&lt;sub&gt;2 : The operators indicated are the built-in operators, as described in clause 5.  When one of these operators is overloaded (clause 13) in a valid context, thus designating a user-defined operator function, the expression designates a function invocation and the operands form an argument list, without an implied sequence point between them.&lt;/sub&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;What is Undefined Behaviour?&lt;/h2&gt;\n&lt;p&gt;The Standard defines Undefined Behaviour in Section &lt;code&gt;§1.3.12&lt;/code&gt; as&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;behavior, such as might arise upon use of an erroneous program construct or erroneous data, for which this International Standard imposes &lt;strong&gt;no  requirements &lt;sup&gt;3&lt;/sup&gt;&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Undefined  behavior  may  also  be  expected  when  this\nInternational Standard omits the description of any explicit definition of behavior.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;sub&gt; 3 : permissible undefined behavior ranges from ignoring the situation completely with unpredictable results, to behaving during translation or program execution in a documented manner characteristic of the environment (with or with-\nout the issuance of a diagnostic message), to terminating a translation or execution (with the issuance of a diagnostic message).&lt;/sub&gt;&lt;/p&gt;\n&lt;p&gt;In short, undefined behaviour means &lt;strong&gt;anything&lt;/strong&gt; can happen from daemons flying out of your nose to  your girlfriend getting pregnant.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;What is the relation between Undefined Behaviour and Sequence Points?&lt;/h2&gt;\n&lt;p&gt;Before I get into that you must know the difference(s) between &lt;a href=&quot;https://stackoverflow.com/questions/2397984/undefined-unspecified-and-implementation-defined-behavior&quot;&gt;Undefined Behaviour, Unspecified Behaviour and Implementation Defined Behaviour&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;You must also know that &lt;code&gt;the order of evaluation of operands of individual operators and subexpressions of individual expressions, and the order in which side effects take place, is unspecified&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, y = &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; z = x++ + y++; &lt;span class=&quot;hljs-comment&quot;&gt;//it is unspecified whether x++ or y++ will be evaluated first.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Another example &lt;a href=&quot;https://stackoverflow.com/questions/3457967/what-belongs-in-an-educational-tool-to-demonstrate-the-unwarranted-assumptions-pe/3458842#3458842&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Now the Standard in &lt;code&gt;§5/4&lt;/code&gt; says&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Between the previous and next sequence point a scalar object shall have its stored value modified at most once by the evaluation of an expression.&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;What does it mean?&lt;/p&gt;\n&lt;p&gt;Informally it means that between two sequence points a variable must not be modified more than once.\nIn an expression statement, the &lt;code&gt;next sequence point&lt;/code&gt; is usually at the terminating semicolon, and the &lt;code&gt;previous sequence point&lt;/code&gt; is at the end of the previous statement. An expression may also contain intermediate &lt;code&gt;sequence points&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;From the above sentence the following expressions invoke Undefined Behaviour:&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;i++ * ++i;   &lt;span class=&quot;hljs-comment&quot;&gt;// UB, i is modified more than once btw two SPs&lt;/span&gt;\ni = ++i;     &lt;span class=&quot;hljs-comment&quot;&gt;// UB, same as above&lt;/span&gt;\n++i = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;     &lt;span class=&quot;hljs-comment&quot;&gt;// UB, same as above&lt;/span&gt;\ni = ++i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// UB, same as above&lt;/span&gt;\n++++++i;     &lt;span class=&quot;hljs-comment&quot;&gt;// UB, parsed as (++(++(++i)))&lt;/span&gt;\n\ni = (i, ++i, ++i); &lt;span class=&quot;hljs-comment&quot;&gt;// UB, there&apos;s no SP between `++i` (right most) and assignment to `i` (`i` is modified more than once btw two SPs)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But the following expressions are fine:&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;i = (i, ++i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// well defined (AFAIK)&lt;/span&gt;\ni = (++i, i++, i);   &lt;span class=&quot;hljs-comment&quot;&gt;// well defined &lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; j = i;\nj = (++i, i++, j*i); &lt;span class=&quot;hljs-comment&quot;&gt;// well defined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;&lt;strong&gt;Furthermore, the prior value shall be accessed only to determine the value to be stored.&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;What does it mean? It means if an object is written to within a full expression, any and all accesses to it within the same expression &lt;strong&gt;must be directly involved in the computation of the value to be written&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;For example in &lt;code&gt;i = i + 1&lt;/code&gt; all the access of &lt;code&gt;i&lt;/code&gt; (in L.H.S and in R.H.S) are &lt;strong&gt;directly involved in computation&lt;/strong&gt; of the value to be written. So it is fine.&lt;/p&gt;\n&lt;p&gt;This rule effectively constrains legal expressions to those in which the accesses demonstrably precede the modification.&lt;/p&gt;\n&lt;p&gt;Example 1:&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;std::&lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%d %d&quot;&lt;/span&gt;, i,++i); &lt;span class=&quot;hljs-comment&quot;&gt;// invokes Undefined Behaviour because of Rule no 2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Example 2:&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;a[i] = i++ &lt;span class=&quot;hljs-comment&quot;&gt;// or a[++i] = i or a[i++] = ++i etc&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;is disallowed because one of the accesses of &lt;code&gt;i&lt;/code&gt; (the one in &lt;code&gt;a[i]&lt;/code&gt;) has nothing to do with the value which ends up being stored in i (which happens over in &lt;code&gt;i++&lt;/code&gt;), and so there&apos;s no good way to define--either for our understanding or the compiler&apos;s--whether the access should take place before or after the incremented value is stored. So the behaviour is undefined.&lt;/p&gt;\n&lt;p&gt;Example 3 :&lt;/p&gt;\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; x = i + i++ ;&lt;span class=&quot;hljs-comment&quot;&gt;// Similar to above&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Follow up answer for C++11 &lt;a href=&quot;https://stackoverflow.com/questions/4176328/faq-undefined-behavior-and-sequence-points/4183735#4183735&quot;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;This is a follow up to my &lt;a href=&quot;https://stackoverflow.com/questions/4176328/faq-undefined-behavior-and-sequence-points/4176333#4176333&quot;&gt;previous answer&lt;/a&gt; and contains C++11 related material.&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Pre-requisites&lt;/strong&gt; : An elementary knowledge of Relations (Mathematics).&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Is it true that there are no Sequence Points in C++11?&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Yes!&lt;/strong&gt; This is very true. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Sequence Points&lt;/strong&gt; have been replaced by &lt;strong&gt;Sequenced Before&lt;/strong&gt; and &lt;strong&gt;Sequenced After&lt;/strong&gt; (and &lt;strong&gt;Unsequenced&lt;/strong&gt; and &lt;strong&gt;Indeterminately Sequenced&lt;/strong&gt;) &lt;a href=&quot;http://en.wikipedia.org/wiki/Relation_(mathematics)&quot; rel=&quot;noreferrer&quot;&gt;relations&lt;/a&gt; in C++11.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;What exactly is this &apos;Sequenced before&apos; thing?&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Sequenced Before&lt;/strong&gt;&lt;sup&gt;(§1.9/13)&lt;/sup&gt; is a relation which is: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Asymmetric_relation&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Asymmetric&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Transitive_relation&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Transitive&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;between evaluations executed by a single &lt;a href=&quot;http://en.wikipedia.org/wiki/Thread_(computer_science)&quot; rel=&quot;noreferrer&quot;&gt;thread&lt;/a&gt; and induces a &lt;strong&gt;strict partial order&lt;/strong&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;p&gt;Formally it means given any two evaluations&lt;sup&gt;(See below)&lt;/sup&gt; &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, if &lt;code&gt;A&lt;/code&gt; is &lt;strong&gt;sequenced before&lt;/strong&gt; &lt;code&gt;B&lt;/code&gt;, then the execution of &lt;code&gt;A&lt;/code&gt; &lt;em&gt;shall precede&lt;/em&gt; the execution of &lt;code&gt;B&lt;/code&gt;. If &lt;code&gt;A&lt;/code&gt; is not sequenced before &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; is not sequenced before &lt;code&gt;A&lt;/code&gt;, then &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are &lt;strong&gt;unsequenced&lt;/strong&gt; &lt;sup&gt;2&lt;/sup&gt;.&lt;/p&gt;\n\n&lt;p&gt;Evaluations &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are &lt;strong&gt;indeterminately sequenced&lt;/strong&gt; when either &lt;code&gt;A&lt;/code&gt; is sequenced before &lt;code&gt;B&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; is sequenced before &lt;code&gt;A&lt;/code&gt;, but it is unspecified which&lt;sup&gt;3&lt;/sup&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;sub&gt;[NOTES]&lt;/sub&gt;\n&lt;sub&gt;&lt;br&gt;\n  1 :  A strict partial order is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_relation&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;binary relation&lt;/strong&gt;&lt;/a&gt; &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; over a set &lt;code&gt;P&lt;/code&gt; which is &lt;a href=&quot;http://en.wikipedia.org/wiki/Asymmetric_relation&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;asymmetric&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;http://en.wikipedia.org/wiki/Transitive_relation&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;transitive&lt;/code&gt;&lt;/a&gt;, i.e., for all &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; in &lt;code&gt;P&lt;/code&gt;, we have that:&lt;br&gt;  &lt;/sub&gt; \n&lt;sub&gt;  ........(i). if a &amp;lt; b then ¬ (b &amp;lt; a) (&lt;code&gt;asymmetry&lt;/code&gt;);&lt;br&gt;\n  ........(ii). if a &amp;lt; b and b &amp;lt; c then a &amp;lt; c (&lt;code&gt;transitivity&lt;/code&gt;).&lt;br&gt;\n  2 : The execution of &lt;strong&gt;unsequenced evaluations&lt;/strong&gt; can &lt;em&gt;overlap&lt;/em&gt;.&lt;br&gt;\n  3 : &lt;strong&gt;Indeterminately sequenced evaluations&lt;/strong&gt; cannot &lt;em&gt;overlap&lt;/em&gt;, but either could be executed first.\n&lt;/sub&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt; What is the meaning of the word &apos;evaluation&apos; in context of C++11? &lt;/h2&gt;\n\n&lt;p&gt;In C++11, evaluation of an expression (or a sub-expression) in general includes: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;value computations&lt;/strong&gt; (including determining the identity of an object for &lt;a href=&quot;https://stackoverflow.com/questions/3601602/what-are-rvalues-lvalues-xvalues-glvalues-and-prvalues&quot;&gt;glvalue evaluation&lt;/a&gt; and fetching a value previously assigned to an object for &lt;a href=&quot;https://stackoverflow.com/questions/3601602/what-are-rvalues-lvalues-xvalues-glvalues-and-prvalues&quot;&gt;prvalue evaluation&lt;/a&gt;) and&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;initiation of &lt;strong&gt;side effects&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Now  (§1.9/14) says:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Every value computation and side effect associated with a full-expression is &lt;strong&gt;sequenced before&lt;/strong&gt; every value computation and side effect associated with the &lt;strong&gt;next full-expression to be evaluated&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Trivial example: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;int x;&lt;/code&gt;\n &lt;code&gt;x = 10;&lt;/code&gt;\n &lt;code&gt;++x;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Value computation and side effect associated with &lt;code&gt;++x&lt;/code&gt; is sequenced after the value computation and side effect of &lt;code&gt;x = 10;&lt;/code&gt; &lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;So there must be some relation between Undefined Behaviour and the above-mentioned things, right? &lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Yes!&lt;/strong&gt; Right.&lt;/p&gt;\n\n&lt;p&gt;In (§1.9/15) it has been mentioned that &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Except where noted, evaluations of operands of individual operators and of subexpressions of individual expressions are &lt;strong&gt;unsequenced&lt;/strong&gt;&lt;sup&gt;4&lt;/sup&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;For example :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n     &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; num = &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt; ;\n     num = (num &amp;lt;&amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) + (num &amp;gt;&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Evaluation of operands of &lt;code&gt;+&lt;/code&gt; operator are unsequenced relative to each other.&lt;/li&gt;\n&lt;li&gt;Evaluation of operands of &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operators are unsequenced relative to each other.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;sub&gt; 4: In an expression that is evaluated more than once during the execution\nof a program, &lt;strong&gt;unsequenced&lt;/strong&gt; and &lt;strong&gt;indeterminately sequenced&lt;/strong&gt; evaluations of its subexpressions need not be performed consistently in different evaluations. &lt;/sub&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;(§1.9/15)\n  The value computations of the operands of an\n  operator are sequenced before the value computation of the result of the operator.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That means in &lt;code&gt;x + y&lt;/code&gt; the value computation of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are sequenced before the value computation of &lt;code&gt;(x + y)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;More importantly&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;(§1.9/15) If a side effect on a scalar object is unsequenced relative to either&lt;/p&gt;\n  \n  &lt;p&gt;(a) &lt;strong&gt;another side effect on the same scalar object&lt;/strong&gt; &lt;/p&gt;\n  \n  &lt;p&gt;or &lt;/p&gt;\n  \n  &lt;p&gt;(b) &lt;strong&gt;a value computation using the value of the same scalar object.&lt;/strong&gt;&lt;/p&gt;\n  \n  &lt;p&gt;the behaviour is &lt;strong&gt;undefined&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Examples:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, v[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;] = { };\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt;  &lt;span class=&quot;hljs-title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;i = i++ * ++i;  // Undefined Behaviour&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;i = ++i + i++;  // Undefined Behaviour&lt;/code&gt; &lt;/li&gt;\n&lt;li&gt;&lt;code&gt;i = ++i + ++i;  // Undefined Behaviour&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;i = v[i++];     // Undefined Behaviour&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;i = v[++i]:     // Well-defined Behavior&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;i = i++ + 1;    // Undefined Behaviour&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;i = ++i + 1;    // Well-defined Behaviour&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;++++i;          // Well-defined Behaviour&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;f(i = -1, i = -1); // Undefined Behaviour (see below)&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;When calling a function (whether or not the function is inline), every value computation and side effect associated with any argument expression, or with the postfix expression designating the called function, is sequenced before execution of every expression or statement in the body of the called function. [&lt;em&gt;Note:&lt;/em&gt; &lt;strong&gt;Value computations and side effects associated with different argument expressions are unsequenced&lt;/strong&gt;.   &lt;em&gt;end note&lt;/em&gt;]&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Expressions &lt;code&gt;(5)&lt;/code&gt;, &lt;code&gt;(7)&lt;/code&gt; and &lt;code&gt;(8)&lt;/code&gt; do not invoke undefined behaviour. Check out the following answers for a more detailed explanation.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3690141/multiple-preincrement-operations-on-a-variable-in-cc/3691469#3691469&quot;&gt;Multiple preincrement operations on a variable in C++0x&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3852768/unsequenced-value-computations-a-k-a-sequence-points/3852774#3852774&quot;&gt;Unsequenced Value Computations&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Final Note&lt;/strong&gt; : &lt;/p&gt;\n\n&lt;p&gt;If you find any flaw in the post please leave a comment. Power-users (With rep &amp;gt;20000) please do not hesitate to edit the post for correcting typos and other mistakes.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;C++17&lt;/strong&gt; (&lt;code&gt;N4659&lt;/code&gt;) includes a proposal &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0145r3.pdf&quot; rel=&quot;noreferrer&quot;&gt;Refining Expression Evaluation Order for Idiomatic C++&lt;/a&gt;\nwhich defines a stricter order of expression evaluation.&lt;/p&gt;\n\n&lt;p&gt;In particular, the &lt;strong&gt;&lt;em&gt;following sentence&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;8.18 Assignment and compound assignment operators&lt;/strong&gt;:&lt;br&gt;....&lt;/p&gt;\n  \n  &lt;p&gt;In all cases, the assignment is sequenced after the value\n  computation of the right and left operands, and before the value computation of the assignment expression.\n  &lt;strong&gt;&lt;em&gt;The right operand is sequenced before the left operand.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;together with the following clarification&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;An expression &lt;em&gt;X&lt;/em&gt; is said to be sequenced before an expression &lt;em&gt;Y&lt;/em&gt; if every\n  value computation and every side effect associated with the expression &lt;em&gt;X&lt;/em&gt; is sequenced before every value\n  computation and every side effect associated with the expression &lt;em&gt;Y&lt;/em&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;make several cases of previously undefined behavior valid, including the one in question:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;a[++i] = i;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However several other similar cases still lead to undefined behavior.&lt;/p&gt;\n\n&lt;p&gt;In &lt;code&gt;N4140&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;i = i++ + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// the behavior is undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But in &lt;code&gt;N4659&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;i = i++ + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// the value of i is incremented&lt;/span&gt;\ni = i++ + i; &lt;span class=&quot;hljs-comment&quot;&gt;// the behavior is undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Of course, using a C++17 compliant compiler does not necessarily mean that one should start writing such expressions.&lt;/p&gt;\n    ","\n&lt;p&gt;I am guessing there is a fundamental reason for the change, it isn&apos;t merely cosmetic to make the old interpretation clearer: that reason is concurrency. Unspecified order of elaboration is merely selection of one of several possible serial orderings, this is quite different to before and after orderings, because if there is no specified ordering, concurrent evaluation is possible: not so with the old rules. For example in:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cpp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;f&lt;/span&gt; (a,b)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;previously either a then b, or, b then a. Now, a and b can be evaluated with instructions interleaved or even on different cores. &lt;/p&gt;\n    ","\n&lt;p&gt;In &lt;code&gt;C99(ISO/IEC 9899:TC3)&lt;/code&gt; which seems absent from this discussion thus far the following steteents are made regarding order of evaluaiton.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;[...]the order of evaluation of subexpressions and the order in which\n  side effects take place are both unspecified. (Section 6.5 pp 67)&lt;/p&gt;\n  \n  &lt;p&gt;The order of evaluation of the operands is unspecified. If an attempt\n  is made to modify the result of an assignment operator or to access it\n  after the next sequence point, the behavior[sic] is undefined.(Section\n  6.5.16 pp 91)&lt;/p&gt;\n&lt;/blockquote&gt;\n    "],"110":["\n&lt;p&gt;Until the 5th edition spec came out, the &lt;a href=&quot;http://bclary.com/2004/11/07/#a-15.9.4.2&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Date.parse&lt;/code&gt;&lt;/a&gt; method was completely &lt;em&gt;implementation dependent&lt;/em&gt; (&lt;code&gt;new Date(string)&lt;/code&gt; is equivalent to &lt;a href=&quot;http://bclary.com/2004/11/07/#a-15.9.4.2&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Date.parse(string)&lt;/code&gt;&lt;/a&gt; except the latter returns a number rather than a &lt;code&gt;Date&lt;/code&gt;). In the 5th edition spec the requirement was added to support a &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot; rel=&quot;noreferrer&quot;&gt;simplified &lt;em&gt;(and slightly incorrect)&lt;/em&gt; ISO-8601&lt;/a&gt; (also see &lt;a href=&quot;https://stackoverflow.com/questions/51715259/what-are-valid-date-time-strings-in-javascript/&quot;&gt;What are valid Date Time Strings in JavaScript?&lt;/a&gt;). But other than that, there was &lt;em&gt;no&lt;/em&gt; requirement for what &lt;code&gt;Date.parse&lt;/code&gt; / &lt;code&gt;new Date(string)&lt;/code&gt; should accept other than that they had to accept whatever &lt;code&gt;Date#toString&lt;/code&gt; output (without saying what that was).&lt;/p&gt;\n\n&lt;p&gt;As of ECMAScript 2017 (edition 8), implementations were required to parse their output for &lt;code&gt;Date#toString&lt;/code&gt; and &lt;code&gt;Date#toUTCString&lt;/code&gt;, but the format of those strings was not specified.&lt;/p&gt;\n\n&lt;p&gt;As of ECMAScript 2019 (edition 9) the format for &lt;a href=&quot;http://ecma-international.org/ecma-262/9.0/#sec-date.prototype.tostring&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Date#toString&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://ecma-international.org/ecma-262/9.0/#sec-date.prototype.toutcstring&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Date#toUTCString&lt;/code&gt;&lt;/a&gt;, have been specified as (respectively):&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;ddd MMM DD YYYY HH:mm:ss ZZ [(timezone name)]&lt;br&gt;e.g. Tue Jul 10 2018 18:39:58 GMT+0530 (IST)&lt;/li&gt;\n&lt;li&gt;ddd, DD MMM YYYY HH:mm:ss Z&lt;br&gt;e.g. Tue 10 Jul 2018 13:09:58 GMT&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;providing 2 more formats that &lt;code&gt;Date.parse&lt;/code&gt; should parse reliably in new implementations (noting that support is not ubiquitous and noncompliant implementations will remain in use for some time).&lt;/p&gt;\n\n&lt;p&gt;I would recommend that date strings are parsed manually and the &lt;a href=&quot;http://bclary.com/2004/11/07/#a-15.9.3.1&quot; rel=&quot;noreferrer&quot;&gt;Date constructor&lt;/a&gt; used with year, month and day arguments to avoid ambiguity:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// parse a date in yyyy-mm-dd format&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parseDate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; parts = input.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;);\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// new Date(year, month [, day [, hours[, minutes[, seconds[, ms]]]]])&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(parts[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], parts[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, parts[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// Note: months are 0-based&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;During recent experience writing a JS interpreter I wrestled plenty with the inner workings of ECMA/JS dates. So, I figure I&apos;ll throw in my 2 cents here. Hopefully sharing this stuff will help others with any questions about the differences among browsers in how they handle dates.&lt;/p&gt;\n\n&lt;h1&gt;The Input Side&lt;/h1&gt;\n\n&lt;p&gt;All implementations store their date values internally as 64-bit numbers that represent the number of milliseconds (ms) since 1970-01-01 UTC (GMT is the same thing as UTC). This date is the ECMAScript epoch that is also used by other languages such as Java and POSIX systems such as UNIX. Dates occurring after the epoch are positive numbers and dates prior are negative.&lt;/p&gt;\n\n&lt;p&gt;The following code is interpreted as the same date in all current browsers, but with the local timezone offset:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1/1/1970&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// 1 January, 1970&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In my timezone (EST, which is -05:00), the result is 18000000 because that&apos;s how many ms are in 5 hours (it&apos;s only 4 hours during daylight savings months). The value will be different in different time zones. This behaviour is specified in ECMA-262 so all browsers do it the same way.&lt;/p&gt;\n\n&lt;p&gt;While there is some variance in the input string formats that the major browsers will parse as dates, they essentially interpret them the same as far as time zones and daylight saving is concerned even though parsing is largely implementation dependent.&lt;/p&gt;\n\n&lt;p&gt;However, the ISO 8601 format is different. It&apos;s one of only two formats outlined in ECMAScript 2015 (ed 6) specifically that must be parsed the same way by all implementations (the other is the format specified for &lt;a href=&quot;http://ecma-international.org/ecma-262/6.0/index.html#sec-date.prototype.tostring&quot; rel=&quot;noreferrer&quot;&gt;Date.prototype.toString&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;But, even for ISO 8601 format strings, some implementations get it wrong. Here is a comparison output of Chrome and Firefox when this answer was originally written for 1/1/1970 (the epoch) on my machine using ISO 8601 format strings that &lt;em&gt;should&lt;/em&gt; be parsed to exactly the same value in all implementations:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1970-01-01T00:00:00Z&apos;&lt;/span&gt;);       &lt;span class=&quot;hljs-comment&quot;&gt;// Chrome: 0         FF: 0&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1970-01-01T00:00:00-0500&apos;&lt;/span&gt;);   &lt;span class=&quot;hljs-comment&quot;&gt;// Chrome: 18000000  FF: 18000000&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1970-01-01T00:00:00&apos;&lt;/span&gt;);        &lt;span class=&quot;hljs-comment&quot;&gt;// Chrome: 0         FF: 18000000&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;In the first case, the &quot;Z&quot; specifier indicates that the input is in UTC time so is not offset from the epoch and the result is 0&lt;/li&gt;\n&lt;li&gt;In the second case, the &quot;-0500&quot; specifier indicates that the input is in GMT-05:00 and both browsers interpret the input as being in the -05:00 timezone. That means that the UTC value is offset from the epoch, which means adding 18000000ms to the date&apos;s internal time value.&lt;/li&gt;\n&lt;li&gt;The third case, where there is no specifier, &lt;em&gt;should&lt;/em&gt; be treated as local for the host system. FF correctly treats the input as local time while Chrome treats it as UTC, so producing different time values. For me this creates a 5 hour difference in the stored value, which is problematic. Other systems with different offsets will get different results.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;This difference has been fixed as of 2020, but other quirks exist between browsers when parsing ISO 8601 format strings.&lt;/p&gt;\n\n&lt;p&gt;But it gets worse. A quirk of ECMA-262 is that the ISO 8601 dateonly format (YYYY-MM-DD) is required to be parsed as UTC, whereas ISO 8601 requires it to be parsed as local. Here is the output from FF with the long and short ISO date formats with no time zone specifier.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1970-01-01T00:00:00&apos;&lt;/span&gt;);       &lt;span class=&quot;hljs-comment&quot;&gt;// 18000000&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1970-01-01&apos;&lt;/span&gt;);                &lt;span class=&quot;hljs-comment&quot;&gt;// 0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So the first is parsed as local because it&apos;s ISO 8601 date and time with no timezone, and the second is parsed as UTC because it&apos;s ISO 8601 date only.&lt;/p&gt;\n\n&lt;p&gt;So, to answer the original question directly, &lt;code&gt;&quot;YYYY-MM-DD&quot;&lt;/code&gt; is required by ECMA-262 to be interpreted as UTC, while the other is interpreted as local. That&apos;s why:&lt;/p&gt;\n\n&lt;h3&gt;This doesn&apos;t produce equivalent results:&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jul 8, 2005&quot;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// Local&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08&quot;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;());  &lt;span class=&quot;hljs-comment&quot;&gt;// UTC&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;This does:&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jul 8, 2005&quot;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;());\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08T00:00:00&quot;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The bottom line is this for parsing date strings. The ONLY ISO 8601 string that you can safely parse across browsers is the long form &lt;strong&gt;with an offset&lt;/strong&gt; (either ±HH:mm or &quot;Z&quot;). If you do that you can safely go back and forth between local and UTC time.&lt;/p&gt;\n\n&lt;h3&gt;This works across browsers (after IE9):&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08T00:00:00Z&quot;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Most current browsers do treat the other input formats equally, including the frequently used &apos;1/1/1970&apos; (M/D/YYYY) and &apos;1/1/1970 00:00:00 AM&apos; (M/D/YYYY hh:mm:ss ap) formats. All of the following formats (except the last) are treated as local time input in all browsers. The output of this code is the same in all browsers in my timezone. The last one is treated as -05:00 regardless of the host timezone because the offset is set in the timestamp:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1/1/1970&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1/1/1970 12:00:00 AM&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Thu Jan 01 1970&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Thu Jan 01 1970 00:00:00&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Thu Jan 01 1970 00:00:00 GMT-0500&quot;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, since parsing of even the formats specified in ECMA-262 is not consistent, it is recommended to never rely on the builtin parser and to always manually parse strings, say using a library and provide the format to the parser.&lt;/p&gt;\n\n&lt;p&gt;E.g. in moment.js you might write:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; m = &lt;span class=&quot;hljs-title function_&quot;&gt;moment&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1/1/1970&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;M/D/YYYY&apos;&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;The Output Side&lt;/h1&gt;\n\n&lt;p&gt;On the output side, all browsers translate time zones the same way but they handle the string formats differently. Here are the &lt;code&gt;toString&lt;/code&gt; functions and what they output. Notice the &lt;code&gt;toUTCString&lt;/code&gt; and &lt;code&gt;toISOString&lt;/code&gt; functions output 5:00 AM on my machine. Also, the timezone name may be an abbreviation and may be different in different implementations. &lt;/p&gt;\n\n&lt;p&gt;&lt;b&gt;Converts from UTC to Local time before printing&lt;/b&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; - toString\n - toDateString\n - toTimeString\n - toLocaleString\n - toLocaleDateString\n - toLocaleTimeString\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;b&gt;Prints the stored UTC time directly&lt;/b&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; - toUTCString\n - toISOString \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;&lt;b&gt;In Chrome&lt;/b&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;toString            &lt;span class=&quot;hljs-title class_&quot;&gt;Thu&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Jan&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GMT&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Eastern&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Standard&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Time&lt;/span&gt;)\ntoDateString        &lt;span class=&quot;hljs-title class_&quot;&gt;Thu&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Jan&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt;\ntoTimeString        &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GMT&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Eastern&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Standard&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Time&lt;/span&gt;)\ntoLocaleString      &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;AM&lt;/span&gt;\ntoLocaleDateString  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt;\ntoLocaleTimeString  &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;AM&lt;/span&gt;\n\ntoUTCString         &lt;span class=&quot;hljs-title class_&quot;&gt;Thu&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Jan&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GMT&lt;/span&gt;\ntoISOString         &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt;-01&lt;span class=&quot;hljs-attr&quot;&gt;T05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;.000Z\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;&lt;b&gt;In Firefox&lt;/b&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;toString            &lt;span class=&quot;hljs-title class_&quot;&gt;Thu&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Jan&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GMT&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Eastern&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Standard&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Time&lt;/span&gt;)\ntoDateString        &lt;span class=&quot;hljs-title class_&quot;&gt;Thu&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Jan&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt;\ntoTimeString        &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GMT&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;0500&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Eastern&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Standard&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Time&lt;/span&gt;)\ntoLocaleString      &lt;span class=&quot;hljs-title class_&quot;&gt;Thursday&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;January&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;AM&lt;/span&gt;\ntoLocaleDateString  &lt;span class=&quot;hljs-title class_&quot;&gt;Thursday&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;January&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt;\ntoLocaleTimeString  &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;AM&lt;/span&gt;\n\ntoUTCString         &lt;span class=&quot;hljs-title class_&quot;&gt;Thu&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Jan&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GMT&lt;/span&gt;\ntoISOString         &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt;-01&lt;span class=&quot;hljs-attr&quot;&gt;T05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;.000Z\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;I normally don&apos;t use the ISO format for string input. The only time that using that format is beneficial to me is when dates need to be sorted as strings. The ISO format is sortable as-is while the others are not. If you have to have cross-browser compatibility, either specify the timezone or use a compatible string format.&lt;/p&gt;\n\n&lt;p&gt;The code &lt;code&gt;new Date(&apos;12/4/2013&apos;).toString()&lt;/code&gt; goes through the following internal pseudo-transformation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;12/4/2013&quot;&lt;/span&gt; -&amp;gt; toUCT -&amp;gt; [storage] -&amp;gt; toLocal -&amp;gt; print &lt;span class=&quot;hljs-string&quot;&gt;&quot;12/4/2013&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I hope this answer was helpful.&lt;/p&gt;\n    ","\n&lt;p&gt;There is some method to the madness. As a general rule, if a browser can interpret a date as an ISO-8601, it will. &quot;2005-07-08&quot; falls into this camp, and so it is parsed as UTC. &quot;Jul 8, 2005&quot; cannot, and so it is parsed in the local time.&lt;/p&gt;\n\n&lt;p&gt;See &lt;a href=&quot;http://blog.dygraphs.com/2012/03/javascript-and-dates-what-mess.html&quot;&gt;JavaScript and Dates, What a Mess!&lt;/a&gt; for more.&lt;/p&gt;\n    ","\n&lt;p&gt;Another solution is to build an associative array with date format and then reformat data.&lt;/p&gt;\n\n&lt;p&gt;This method is useful for date formatted in an unussual way.&lt;/p&gt;\n\n&lt;p&gt;An example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    mydate=&lt;span class=&quot;hljs-string&quot;&gt;&apos;01.02.12 10:20:43&apos;&lt;/span&gt;:\n    myformat=&lt;span class=&quot;hljs-string&quot;&gt;&apos;dd/mm/yy HH:MM:ss&apos;&lt;/span&gt;;\n\n\n    dtsplit=mydate.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\/ .:]/&lt;/span&gt;);\n    dfsplit=myformat.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\/ .:]/&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// creates assoc array for date&lt;/span&gt;\n    df = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(dc=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;dc&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;;dc++) {\n            df[dfsplit[dc]]=dtsplit[dc];\n            }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// uses assc array for standard mysql format&lt;/span&gt;\n    dstring[r] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;20&apos;&lt;/span&gt;+df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;yy&apos;&lt;/span&gt;]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;+df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;mm&apos;&lt;/span&gt;]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;+df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;dd&apos;&lt;/span&gt;];\n    dstring[r] += &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;+df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;HH&apos;&lt;/span&gt;]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt;+df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM&apos;&lt;/span&gt;]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt;+df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;ss&apos;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use &lt;a href=&quot;https://momentjs.com/docs/#/parsing/string-format/&quot; rel=&quot;noreferrer&quot;&gt;moment.js&lt;/a&gt; to parse dates:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; caseOne = &lt;span class=&quot;hljs-title function_&quot;&gt;moment&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jul 8, 2005&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;MMM D, YYYY&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toDate&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; caseTwo = &lt;span class=&quot;hljs-title function_&quot;&gt;moment&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;YYYY-MM-DD&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toDate&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The 3rd argument determines strict parsing (available as of 2.3.0). Without it moment.js may also give incorrect results.&lt;/p&gt;\n    ","\n&lt;p&gt;According to &lt;a href=&quot;http://blog.dygraphs.com/2012/03/javascript-and-dates-what-mess.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://blog.dygraphs.com/2012/03/javascript-and-dates-what-mess.html&lt;/a&gt; the format &quot;yyyy/mm/dd&quot; solves the usual problems. \nHe says: &quot;Stick to &quot;YYYY/MM/DD&quot; for your date strings whenever possible. It&apos;s universally supported and unambiguous. With this format, all times are local.&quot;\nI&apos;ve set tests: &lt;a href=&quot;http://jsfiddle.net/jlanus/ND2Qg/432/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://jsfiddle.net/jlanus/ND2Qg/432/&lt;/a&gt;\nThis format: \n + avoids the day and month order ambiguity by using y m d ordering and a 4-digit year\n + avoids the UTC vs. local issue not complying with ISO format by using slashes\n + danvk, the &lt;a href=&quot;http://blog.dygraphs.com/2012/03/javascript-and-dates-what-mess.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;dygraphs&lt;/a&gt; guy, says that this format is good in all browsers. &lt;/p&gt;\n    ","\n&lt;p&gt;While &lt;a href=&quot;https://stackoverflow.com/a/2587398&quot;&gt;CMS is correct&lt;/a&gt; that passing strings into the parse method is generally unsafe, the new &lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;ECMA-262 5th Edition&lt;/a&gt; (aka ES5) specification in section 15.9.4.2 suggests that &lt;code&gt;Date.parse()&lt;/code&gt; actually should handle ISO-formatted dates.  The old specification made no such claim.  Of course, old browsers and some current browsers still do not provide this ES5 functionality.&lt;/p&gt;\n\n&lt;p&gt;Your second example isn&apos;t wrong.  It is the specified date in UTC, as implied by &lt;code&gt;Date.prototype.toISOString()&lt;/code&gt;, but is represented in your local timezone.&lt;/p&gt;\n    ","\n&lt;p&gt;This &lt;a href=&quot;https://code.google.com/p/flexible-js-formatting/&quot; rel=&quot;nofollow&quot;&gt;light weight date parsing library&lt;/a&gt; should solve all similar problems. I like the library because it is quite easy to extend. It&apos;s also possible to i18n it (not very straight forward, but not that hard).&lt;/p&gt;\n\n&lt;p&gt;Parsing example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; caseOne = &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parseDate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jul 8, 2005&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;M d, Y&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; caseTwo = &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parseDate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-m-d&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And formatting back to string (you will notice both cases give exactly the same result):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( caseOne.&lt;span class=&quot;hljs-title function_&quot;&gt;dateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;M d, Y&quot;&lt;/span&gt;) );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( caseTwo.&lt;span class=&quot;hljs-title function_&quot;&gt;dateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;M d, Y&quot;&lt;/span&gt;) );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( caseOne.&lt;span class=&quot;hljs-title function_&quot;&gt;dateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-m-d&quot;&lt;/span&gt;) );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( caseTwo.&lt;span class=&quot;hljs-title function_&quot;&gt;dateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-m-d&quot;&lt;/span&gt;) );\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a short, flexible snippet to convert a datetime-string in a cross-browser-safe fashion as nicel detailed by @drankin2112.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inputTimestamp = &lt;span class=&quot;hljs-string&quot;&gt;&quot;2014-04-29 13:00:15&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//example&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; partsTimestamp = inputTimestamp.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[ \\/:-]/g&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(partsTimestamp.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;) {\n    partsTimestamp = partsTimestamp.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;([&lt;span class=&quot;hljs-string&quot;&gt;&apos;00&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;00&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;00&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; - partsTimestamp.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;));\n}\n&lt;span class=&quot;hljs-comment&quot;&gt;//if your string-format is something like &apos;7/02/2014&apos;...&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//use: var tstring = partsTimestamp.slice(0, 3).reverse().join(&apos;-&apos;);&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tstring = partsTimestamp.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;);\ntstring += &lt;span class=&quot;hljs-string&quot;&gt;&apos;T&apos;&lt;/span&gt; + partsTimestamp.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;Z&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//configure as needed&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; timestamp = &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(tstring);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Your browser should provide the same timestamp result as &lt;code&gt;Date.parse&lt;/code&gt; with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(tstring)).&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Both are correct, but they are being interpreted as dates with two different timezones. So you compared apples and oranges:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// local dates&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jul 8, 2005&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;()            &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T07:00:00.000Z&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08T00:00-07:00&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T07:00:00.000Z&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// UTC dates&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jul 8, 2005 UTC&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;()        &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T00:00:00.000Z&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;()             &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T00:00:00.000Z&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I removed the &lt;code&gt;Date.parse()&lt;/code&gt; call since it&apos;s used automatically on a string argument. I also compared the dates using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString&quot; rel=&quot;nofollow noreferrer&quot; title=&quot;Date.prototype.toISOString()&quot;&gt;ISO8601 format&lt;/a&gt; so you could visually compare the dates between your local dates and the UTC dates. The times are 7 hours apart, which is the timezone difference and why your tests showed two different dates.&lt;/p&gt;\n\n&lt;p&gt;The other way of creating these same local/UTC dates would be:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2005&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)           &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T07:00:00.000Z&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;UTC&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2005&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)) &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T00:00:00.000Z&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But I still strongly recommend &lt;a href=&quot;http://momentjs.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Moment.js&lt;/a&gt; which is as &lt;a href=&quot;http://momentjs.com/docs/#/parsing/&quot; rel=&quot;nofollow noreferrer&quot; title=&quot;Moment.js Docs&quot;&gt;simple yet powerful&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// parse string&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;moment&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;()       &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T00:00:00+02:00&quot;&lt;/span&gt;\nmoment.&lt;span class=&quot;hljs-title function_&quot;&gt;utc&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2005-07-08&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;()   &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T00:00:00Z&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// year, month, day, etc.&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;moment&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;2005&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;]).&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;()     &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T00:00:00+02:00&quot;&lt;/span&gt;\nmoment.&lt;span class=&quot;hljs-title function_&quot;&gt;utc&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;2005&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;]).&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2005-07-08T00:00:00Z&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The &lt;a href=&quot;https://stackoverflow.com/a/2587398/6695569&quot;&gt;accepted answer from CMS&lt;/a&gt; is correct, I have just added some features :&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;trim and clean input spaces&lt;/li&gt;\n&lt;li&gt;parse slashes, dashes, colons and spaces&lt;/li&gt;\n&lt;li&gt;has default day and time&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// parse a date time that can contains spaces, dashes, slashes, colons&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parseDate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// trimes and remove multiple spaces and split by expected characters&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parts = input.&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/ +(?= )/g&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\s-\\/:]/&lt;/span&gt;)\n    &lt;span class=&quot;hljs-comment&quot;&gt;// new Date(year, month [, day [, hours[, minutes[, seconds[, ms]]]]])&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(parts[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], parts[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, parts[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] || &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, parts[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;] || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, parts[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;] || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, parts[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;] || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Note: months are 0-based&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"page":"101","randomQuestions":[{"title":"What does a \"Cannot find symbol\" or \"Cannot resolve symbol\" error mean?","slug":"what-does-a-\"cannot-find-symbol\"-or-\"cannot-resolve-symbol\"-error-mean-1657384492160"},{"title":"How do I detect a click outside an element?","slug":"how-do-i-detect-a-click-outside-an-element-1657387505351"},{"title":"Numbering rows within groups in a data frame","slug":"numbering-rows-within-groups-in-a-data-frame-1657388556436"},{"title":"Is there a RegExp.escape function in JavaScript?","slug":"is-there-a-regexp.escape-function-in-javascript-1657387606651"},{"title":"When to use LinkedList over ArrayList in Java?","slug":"when-to-use-linkedlist-over-arraylist-in-java-1657388107480"},{"title":"Convert one date format into another in PHP","slug":"convert-one-date-format-into-another-in-php-1657384566234"},{"title":"\"Least Astonishment\" and the Mutable Default Argument","slug":"\"least-astonishment\"-and-the-mutable-default-argument-1657384412508"},{"title":"Disable same origin policy in Chrome","slug":"disable-same-origin-policy-in-chrome-1657387743804"},{"title":"Get the data received in a Flask request","slug":"get-the-data-received-in-a-flask-request-1657387804432"},{"title":"How to remove \"noise\" from GCC/clang assembly output?","slug":"how-to-remove-\"noise\"-from-gccclang-assembly-output-1657387612391"},{"title":"How to access the correct `this` inside a callback","slug":"how-to-access-the-correct-this-inside-a-callback-1657384283261"},{"title":"How do I compare strings in Java?","slug":"how-do-i-compare-strings-in-java-1657384243187"},{"title":"C++ Singleton design pattern","slug":"c++-singleton-design-pattern-1657387830040"},{"title":"How to generate all permutations of a list","slug":"how-to-generate-all-permutations-of-a-list-1657388537371"},{"title":"How do I return the response from an asynchronous call?","slug":"how-do-i-return-the-response-from-an-asynchronous-call-1657384208012"},{"title":"Daylight saving time and time zone best practices [closed]","slug":"daylight-saving-time-and-time-zone-best-practices-closed-1657387973687"},{"title":"Selenium \"selenium.common.exceptions.NoSuchElementException\" when using Chrome","slug":"selenium-\"selenium.common.exceptions.nosuchelementexception\"-when-using-chrome-1657388136699"},{"title":"When to use virtual destructors?","slug":"when-to-use-virtual-destructors-1657388152135"},{"title":"Prefer composition over inheritance?","slug":"prefer-composition-over-inheritance-1657387399409"},{"title":"Difference between single and double quotes in Bash","slug":"difference-between-single-and-double-quotes-in-bash-1657385460827"}]},"__N_SSG":true}