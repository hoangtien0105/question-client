{"pageProps":{"data":{"count":610,"rows":[{"id":590,"title":"$(document).ready equivalent without jQuery","slug":"dollar(document).ready-equivalent-without-jquery-1657388504115","postType":"QUESTION","createdAt":"2022-07-09T17:41:44.000Z","updatedAt":"2022-07-09T17:41:44.000Z","tags":[{"id":2810,"name":"pageload","slug":"pageload","createdAt":"2022-07-09T17:41:44.000Z","updatedAt":"2022-07-09T17:41:44.000Z","Questions_Tags":{"questionId":590,"tagId":2810}}]},{"id":589,"title":"Calculate distance between two latitude-longitude points? (Haversine formula)","slug":"calculate-distance-between-two-latitude-longitude-points-(haversine-formula)-1657388500103","postType":"QUESTION","createdAt":"2022-07-09T17:41:40.000Z","updatedAt":"2022-07-09T17:41:40.000Z","tags":[{"id":2805,"name":"maps","slug":"maps","createdAt":"2022-07-09T17:41:40.000Z","updatedAt":"2022-07-09T17:41:40.000Z","Questions_Tags":{"questionId":589,"tagId":2805}},{"id":2806,"name":"latitude-longitude","slug":"latitude-longitude","createdAt":"2022-07-09T17:41:40.000Z","updatedAt":"2022-07-09T17:41:40.000Z","Questions_Tags":{"questionId":589,"tagId":2806}},{"id":2807,"name":"haversine","slug":"haversine","createdAt":"2022-07-09T17:41:40.000Z","updatedAt":"2022-07-09T17:41:40.000Z","Questions_Tags":{"questionId":589,"tagId":2807}}]},{"id":588,"title":"input() error - NameError: name '...' is not defined","slug":"input()-error-nameerror:-name-'...'-is-not-defined-1657388497243","postType":"QUESTION","createdAt":"2022-07-09T17:41:37.000Z","updatedAt":"2022-07-09T17:41:37.000Z","tags":[{"id":2802,"name":"nameerror","slug":"nameerror","createdAt":"2022-07-09T17:41:37.000Z","updatedAt":"2022-07-09T17:41:37.000Z","Questions_Tags":{"questionId":588,"tagId":2802}}]},{"id":587,"title":"Change the maximum upload file size","slug":"change-the-maximum-upload-file-size-1657388495156","postType":"QUESTION","createdAt":"2022-07-09T17:41:35.000Z","updatedAt":"2022-07-09T17:41:35.000Z","tags":[]},{"id":586,"title":"How to append text to an existing file in Java?","slug":"how-to-append-text-to-an-existing-file-in-java-1657388492377","postType":"QUESTION","createdAt":"2022-07-09T17:41:32.000Z","updatedAt":"2022-07-09T17:41:32.000Z","tags":[{"id":2797,"name":"text-files","slug":"text-files","createdAt":"2022-07-09T17:41:32.000Z","updatedAt":"2022-07-09T17:41:32.000Z","Questions_Tags":{"questionId":586,"tagId":2797}}]}]},"answers":{"586":["\n&lt;p&gt;Are you doing this for logging purposes?  If so there are &lt;a href=&quot;http://en.wikipedia.org/wiki/Java_logging_framework&quot; rel=&quot;noreferrer&quot;&gt;several libraries for this&lt;/a&gt;. Two of the most popular are &lt;a href=&quot;http://logging.apache.org/log4j/&quot; rel=&quot;noreferrer&quot;&gt;Log4j&lt;/a&gt; and &lt;a href=&quot;http://logback.qos.ch/&quot; rel=&quot;noreferrer&quot;&gt;Logback&lt;/a&gt;.&lt;/p&gt;\n&lt;h2&gt;Java 7+&lt;/h2&gt;\n&lt;p&gt;For a one-time task, the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html&quot; rel=&quot;noreferrer&quot;&gt;Files class&lt;/a&gt; makes this easy:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    Files.write(Paths.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myfile.txt&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;.getBytes(), StandardOpenOption.APPEND);\n}&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling left as an exercise for the reader&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Careful&lt;/strong&gt;: The above approach will throw a &lt;code&gt;NoSuchFileException&lt;/code&gt; if the file does not already exist. It also does not append a newline automatically (which you often want when appending to a text file). Another approach is to pass both &lt;code&gt;CREATE&lt;/code&gt; and &lt;code&gt;APPEND&lt;/code&gt; options, which will create the file first if it doesn&apos;t already exist:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; String s)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {\n    Files.writeString(\n        Path.of(System.getProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;java.io.tmpdir&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&quot;filename.txt&quot;&lt;/span&gt;),\n        s + System.lineSeparator(),\n        CREATE, APPEND\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, if you will be writing to the same file many times, the above snippets must open and close the file on the disk many times, which is a slow operation. In this case, a &lt;code&gt;BufferedWriter&lt;/code&gt; is faster:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myfile.txt&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fw);\n    &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(bw))\n{\n    out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//more code&lt;/span&gt;\n    out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;more text&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//more code&lt;/span&gt;\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling left as an exercise for the reader&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;The second parameter to the &lt;code&gt;FileWriter&lt;/code&gt; constructor will tell it to append to the file, rather than writing a new file. (If the file does not exist, it will be created.)&lt;/li&gt;\n&lt;li&gt;Using a &lt;code&gt;BufferedWriter&lt;/code&gt; is recommended for an expensive writer (such as &lt;code&gt;FileWriter&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;Using a &lt;code&gt;PrintWriter&lt;/code&gt; gives you access to &lt;code&gt;println&lt;/code&gt; syntax that you&apos;re probably used to from &lt;code&gt;System.out&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;But the &lt;code&gt;BufferedWriter&lt;/code&gt; and &lt;code&gt;PrintWriter&lt;/code&gt; wrappers are not strictly necessary.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;hr&gt;\n&lt;h2&gt;Older Java&lt;/h2&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myfile.txt&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)));\n    out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;);\n    out.close();\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling left as an exercise for the reader&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h2&gt;Exception Handling&lt;/h2&gt;\n&lt;p&gt;If you need robust exception handling for older Java, it gets very verbose:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    fw = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myfile.txt&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    bw = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fw);\n    out = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(bw);\n    out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;);\n    out.close();\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling left as an exercise for the reader&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(out != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            out.close();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling left as an exercise for the reader&lt;/span&gt;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(bw != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            bw.close();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling left as an exercise for the reader&lt;/span&gt;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(fw != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            fw.close();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling left as an exercise for the reader&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;fileWriter&lt;/code&gt; with a flag set to &lt;code&gt;true&lt;/code&gt; , for appending.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n{\n    String filename= &lt;span class=&quot;hljs-string&quot;&gt;&quot;MyFile.txt&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(filename,&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//the true will append the new data&lt;/span&gt;\n    fw.write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;add a line\\n&quot;&lt;/span&gt;);&lt;span class=&quot;hljs-comment&quot;&gt;//appends the string to the file&lt;/span&gt;\n    fw.close();\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(IOException ioe)\n{\n    System.err.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;IOException: &quot;&lt;/span&gt; + ioe.getMessage());\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Shouldn&apos;t all of the answers here with try/catch blocks have the .close() pieces contained in a finally block?&lt;/p&gt;\n\n&lt;p&gt;Example for marked answer:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    out = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;writePath&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)));\n    out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n    System.err.println(e);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (out != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        out.close();\n    }\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, as of Java 7, you can use a &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html&quot; rel=&quot;noreferrer&quot;&gt;try-with-resources statement&lt;/a&gt;. No finally block is required for closing the declared resource(s) because it is handled automatically, and is also less verbose:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;writePath&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)))) {\n    out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n    System.err.println(e);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using Apache Commons 2.1:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;FileUtils.writeStringToFile(file, &lt;span class=&quot;hljs-string&quot;&gt;&quot;String to append&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Slightly expanding on &lt;a href=&quot;https://stackoverflow.com/questions/1625234#1625263&quot;&gt;Kip&apos;s answer&lt;/a&gt;,\nhere is a simple Java 7+ method to append a &lt;strong&gt;new line&lt;/strong&gt; to a file, &lt;strong&gt;creating it if it doesn&apos;t already exist&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Paths.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;path/to/filename.txt&quot;&lt;/span&gt;);\n    Files.write(path, Arrays.asList(&lt;span class=&quot;hljs-string&quot;&gt;&quot;New line to append&quot;&lt;/span&gt;), StandardCharsets.UTF_8,\n        Files.exists(path) ? StandardOpenOption.APPEND : StandardOpenOption.CREATE);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; IOException ioe) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Add your own exception handling...&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Further notes:&lt;/strong&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;The above uses the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#write(java.nio.file.Path,%20java.lang.Iterable,%20java.nio.charset.Charset,%20java.nio.file.OpenOption...)&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Files.write&lt;/code&gt;&lt;/a&gt; overload that writes &lt;em&gt;lines&lt;/em&gt; of text to a file (i.e. similar to a &lt;code&gt;println&lt;/code&gt; command). To just write text to the end (i.e. similar to a &lt;code&gt;print&lt;/code&gt; command), an alternative &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#write(java.nio.file.Path,%20byte%5B%5D,%20java.nio.file.OpenOption...)&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Files.write&lt;/code&gt;&lt;/a&gt; overload can be used, passing in a byte array (e.g. &lt;code&gt;&quot;mytext&quot;.getBytes(StandardCharsets.UTF_8)&lt;/code&gt;).&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The &lt;code&gt;CREATE&lt;/code&gt; option will only work if the specified directory already exists - if it doesn&apos;t, a &lt;code&gt;NoSuchFileException&lt;/code&gt; is thrown. If required, the following code could be added after setting &lt;code&gt;path&lt;/code&gt; to create the directory structure:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pathParent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; path.getParent();\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!Files.exists(pathParent)) {\n    Files.createDirectories(pathParent);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;h2&gt;Make sure the stream gets properly closed in all scenarios.&lt;/h2&gt;\n\n&lt;p&gt;It&apos;s a bit alarming how many of these answers leave the file handle open in case of an error. The answer &lt;a href=&quot;https://stackoverflow.com/a/15053443/2498188&quot;&gt;https://stackoverflow.com/a/15053443/2498188&lt;/a&gt; is on the money but only because &lt;code&gt;BufferedWriter()&lt;/code&gt; cannot throw. If it could then an exception would leave the &lt;code&gt;FileWriter&lt;/code&gt; object open. &lt;/p&gt;\n\n&lt;p&gt;A more general way of doing this that doesn&apos;t care if &lt;code&gt;BufferedWriter()&lt;/code&gt; can throw:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n     fw = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;outfilename&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n     bw = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fw);\n     out = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(bw);\n     out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;( IOException e ){\n     &lt;span class=&quot;hljs-comment&quot;&gt;// File writing/opening failed at some stage.&lt;/span&gt;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt;{\n     &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( out != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ){\n           out.close(); &lt;span class=&quot;hljs-comment&quot;&gt;// Will close bw and fw too&lt;/span&gt;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( bw != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ){\n           bw.close(); &lt;span class=&quot;hljs-comment&quot;&gt;// Will close fw too&lt;/span&gt;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( fw != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ){\n           fw.close();\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n           &lt;span class=&quot;hljs-comment&quot;&gt;// Oh boy did it fail hard! :3&lt;/span&gt;\n        }\n     }\n     &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;( IOException e ){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Closing the file writers failed for some obscure reason&lt;/span&gt;\n     }\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Edit:&lt;/h2&gt;\n\n&lt;p&gt;As of Java 7, the recommended way is to use &quot;try with resources&quot; and let the JVM deal with it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;(    &lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;outfilename&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n          &lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fw);\n          &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(bw)){\n     out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text&quot;&lt;/span&gt;);\n  }  \n  &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;( IOException e ){\n      &lt;span class=&quot;hljs-comment&quot;&gt;// File writing/opening failed at some stage.&lt;/span&gt;\n  }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In Java-7 it also can be done such kind:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.nio.file.Files;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.nio.file.Path;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.nio.file.Paths;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.nio.file.StandardOpenOption;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;//---------------------&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Paths.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;someFile.txt&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!Files.exists(filePath)) {\n    Files.createFile(filePath);\n}\nFiles.write(filePath, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Text to be added&quot;&lt;/span&gt;.getBytes(), StandardOpenOption.APPEND);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;java 7+&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;In my humble opinion since I am fan of plain java, I would suggest something that it is a combination of the aforementioned answers. Maybe I am late for the party. Here is the code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sampleText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt; +  System.getProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;line.separator&quot;&lt;/span&gt;);\n Files.write(Paths.get(filePath), sampleText.getBytes(StandardCharsets.UTF_8), \n StandardOpenOption.CREATE, StandardOpenOption.APPEND);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If the file doesn&apos;t exist, it creates it and if already exists it appends the \n&lt;em&gt;sampleText&lt;/em&gt; to the existing file. Using this, saves you from adding unnecessary libs to your classpath.&lt;/p&gt;\n    ","\n&lt;p&gt;This can be done in one line of code. Hope this helps :)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Files.write(Paths.get(fileName), msg.getBytes(), StandardOpenOption.APPEND);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I just add small detail:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;outfilename&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2.nd parameter (true) is a feature (or, interface) called &lt;strong&gt;appendable&lt;/strong&gt; (&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html&quot; rel=&quot;noreferrer&quot;&gt;http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html&lt;/a&gt;). It is responsible for being able to add some content to the end of particular file/stream. This interface is implemented since Java 1.5. Each object (i.e. &lt;i&gt;BufferedWriter, CharArrayWriter, CharBuffer, FileWriter, FilterWriter, LogStream, OutputStreamWriter, PipedWriter, PrintStream, PrintWriter, StringBuffer, StringBuilder, StringWriter, Writer&lt;/i&gt;) with this interface can be used for adding content&lt;/p&gt;\n\n&lt;p&gt;In other words, you can add some content to your gzipped file, or some http process&lt;/p&gt;\n    ","\n&lt;p&gt;Using java.nio.&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html&quot; rel=&quot;noreferrer&quot;&gt;Files&lt;/a&gt; along with java.nio.file.&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/nio/file/StandardOpenOption.html&quot; rel=&quot;noreferrer&quot;&gt;StandardOpenOption&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    BufferedWriter bufWriter;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n        bufWriter =\n            Files.newBufferedWriter(\n                Paths.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;log.txt&quot;&lt;/span&gt;),\n                Charset.forName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF8&quot;&lt;/span&gt;),\n                StandardOpenOption.WRITE, \n                StandardOpenOption.APPEND,\n                StandardOpenOption.CREATE);\n        out = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(bufWriter, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(IOException e){\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Oh, no! Failed to create PrintWriter&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//After successful creation of PrintWriter&lt;/span&gt;\n    out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Text to be appended&quot;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//After done writing, remember to close!&lt;/span&gt;\n    out.close();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This creates a &lt;code&gt;BufferedWriter&lt;/code&gt; using Files, which accepts &lt;code&gt;StandardOpenOption&lt;/code&gt; parameters, and an auto-flushing &lt;code&gt;PrintWriter&lt;/code&gt; from the resultant &lt;code&gt;BufferedWriter&lt;/code&gt;. &lt;code&gt;PrintWriter&lt;/code&gt;&apos;s &lt;code&gt;println()&lt;/code&gt; method, can then be called to write to the file.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;StandardOpenOption&lt;/code&gt; parameters used in this code: opens the file for writing, only appends to the file, and creates the file if it does not exist.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Paths.get(&quot;path here&quot;)&lt;/code&gt; can be replaced with &lt;code&gt;new File(&quot;path here&quot;).toPath()&lt;/code&gt;.\nAnd &lt;code&gt;Charset.forName(&quot;charset name&quot;)&lt;/code&gt; can be modified to accommodate the desired &lt;code&gt;Charset&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Sample, using Guava:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;C:/test/test.csv&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-type&quot;&gt;CharSequence&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;some string&quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n    Files.append(from, to, Charsets.UTF_8);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;File_Name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\nfos.write(data);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the true allows to append the data in the existing file. If we will write&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileOutputStream&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;File_Name&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It will overwrite the existing file. So go for first approach.&lt;/p&gt;\n    ","\n&lt;p&gt;Try with bufferFileWriter.append, it works with me.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;FileWriter fileWriter;\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    fileWriter = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(file,&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bufferFileWriter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fileWriter);\n    bufferFileWriter.append(obj.toJSONString());\n    bufferFileWriter.newLine();\n    bufferFileWriter.close();\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException ex) {\n    Logger.getLogger(JsonTest.class.getName()).log(Level.SEVERE, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, ex);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.BufferedWriter;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.FileWriter;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.PrintWriter;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Writer&lt;/span&gt; {\n\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String args[])&lt;/span&gt;{\n        doWrite(&lt;span class=&quot;hljs-string&quot;&gt;&quot;output.txt&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Content to be appended to file&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doWrite&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String filePath,String contentToBeAppended)&lt;/span&gt;{\n\n       &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;(\n            &lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(filePath, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n            &lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fw);\n            &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(bw)\n          )\n          {\n            out.println(contentToBeAppended);\n          }  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;( IOException e ){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// File writing/opening failed at some stage.&lt;/span&gt;\n        }\n\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    String str;\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C:/Users/...the path..../iin.txt&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// you can input also..i created this way :P&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-type&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedReader&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InputStreamReader&lt;/span&gt;(System.in));\n    &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(path, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;));\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; \n    {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)\n        {\n            System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter the text : &quot;&lt;/span&gt;);\n            str = br.readLine();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(str.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;exit&quot;&lt;/span&gt;))\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n                pw.println(str);\n        }\n    } \n    &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) \n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//oh noes!&lt;/span&gt;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt;\n    {\n        pw.close();         \n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this will do what you intend for..&lt;/p&gt;\n    ","\n&lt;p&gt;You can also try this :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;JFileChooser c= &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JFileChooser&lt;/span&gt;();\nc.showOpenDialog(c);\n&lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;write_file&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; c.getSelectedFile();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Writing into file&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//what u would like to append to the file&lt;/span&gt;\n\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; \n{\n    &lt;span class=&quot;hljs-type&quot;&gt;RandomAccessFile&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;raf&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RandomAccessFile&lt;/span&gt;(write_file, &lt;span class=&quot;hljs-string&quot;&gt;&quot;rw&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; raf.length();\n    &lt;span class=&quot;hljs-comment&quot;&gt;//System.out.println(length);&lt;/span&gt;\n    raf.setLength(length + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//+ (integer value) for spacing&lt;/span&gt;\n    raf.seek(raf.length());\n    raf.writeBytes(Content);\n    raf.close();\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//any exception handling method of ur choice&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Better to use try-with-resources then all that pre-java 7 finally business&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;appendStringToFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Path file, String s)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException  {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Files.newBufferedWriter(file, StandardCharsets.UTF_8, StandardOpenOption.APPEND)) {\n        out.append(s);\n        out.newLine();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If we are using Java 7 and above and also know the content to be added (appended) to the file we can make use of &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#newBufferedWriter(java.nio.file.Path,%20java.nio.charset.Charset,%20java.nio.file.OpenOption...)&quot; rel=&quot;nofollow&quot;&gt;newBufferedWriter&lt;/a&gt; method in NIO package.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;Path&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;FILE_PATH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Paths.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;C:/temp&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;temp.txt&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n Welcome to Java 8&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Writing to the file temp.txt&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Files.newBufferedWriter(FILE_PATH, StandardCharsets.UTF_8, StandardOpenOption.APPEND)) {\n        writer.write(text);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n        e.printStackTrace();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There are few points to note:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;It is always a good habit to specify charset encoding and for that we have constant in class &lt;code&gt;StandardCharsets&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;The code uses &lt;code&gt;try-with-resource&lt;/code&gt; statement in which resources are automatically closed after the try.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Though OP has not asked but just in case we want to search for lines having some specific keyword e.g. &lt;code&gt;confidential&lt;/code&gt; we can make use of stream APIs in Java:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//Reading from the file the first line which contains word &quot;confidential&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    Stream&amp;lt;String&amp;gt; lines = Files.lines(FILE_PATH);\n    Optional&amp;lt;String&amp;gt; containsJava = lines.filter(l-&amp;gt;l.contains(&lt;span class=&quot;hljs-string&quot;&gt;&quot;confidential&quot;&lt;/span&gt;)).findFirst();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(containsJava.isPresent()){\n        System.out.println(containsJava.get());\n    }\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n    e.printStackTrace();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileOutputStream&lt;/span&gt;(path, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n\n    stream.write(\n\n        string.getBytes(&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// Choose your encoding.&lt;/span&gt;\n\n    );\n\n} &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {\n    stream.close();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then catch an IOException somewhere upstream.&lt;/p&gt;\n    ","\n&lt;p&gt;Create a function anywhere in your project and simply call that function where ever you need it.&lt;/p&gt;\n\n&lt;p&gt;Guys you got to remember that you guys are calling active threads that you are not calling asynchronously and since it would likely be a good 5 to 10 pages to get it done right.\nWhy not spend more time on your project and forget about writing anything already written.\nProperly&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;//Adding a static modifier would make this accessible anywhere in your app&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Logger &lt;span class=&quot;hljs-title function_&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\n    {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; java.util.logging.Logger.getLogger(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MyLogFileName&quot;&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;//call the method anywhere and append what you want to log &lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Logger class will take care of putting timestamps for you&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//plus the are ansychronously done so more of the &lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//processing power will go into your application&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//from inside a function body in the same class ...{...&lt;/span&gt;\n\n    getLogger().log(Level.INFO,&lt;span class=&quot;hljs-string&quot;&gt;&quot;the text you want to append&quot;&lt;/span&gt;);\n\n    ...}...\n    &lt;span class=&quot;hljs-comment&quot;&gt;/*********log file resides in server root log files********/&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;three lines of code two really since the third actually appends text. :P&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;Library&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.BufferedWriter;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.File;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.FileWriter;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Code&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;D:/sample.txt&quot;&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(path);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fileWriter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(file,&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bufferFileWriter&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fileWriter);\n\n        fileWriter.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sample text in the file to append&quot;&lt;/span&gt;);\n\n        bufferFileWriter.close();\n\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;User Registration Completed&quot;&lt;/span&gt;);\n\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(Exception ex)\n    {\n        System.out.println(ex);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I might suggest the &lt;a href=&quot;http://commons.apache.org/proper/commons-functor/examples.html&quot; rel=&quot;nofollow&quot;&gt;apache commons project&lt;/a&gt;. This project already provides a framework for doing what you need (i.e. flexible filtering of collections). &lt;/p&gt;\n    ","\n&lt;p&gt;The following method let&apos;s you append text to some file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;appendToFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String filePath, String text)&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-type&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fileWriter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n    {\n        fileWriter = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(\n                filePath, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)));\n\n        fileWriter.println(text);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioException)\n    {\n        ioException.printStackTrace();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fileWriter != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n        {\n            fileWriter.close();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Alternatively using &lt;a href=&quot;http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;FileUtils&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;appendToFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String filePath, String text)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException\n{\n    &lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(filePath);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!file.exists())\n    {\n        file.createNewFile();\n    }\n\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fileContents&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; FileUtils.readFileToString(file);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(file.length() != &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    {\n        fileContents = fileContents.concat(System.lineSeparator());\n    }\n\n    fileContents = fileContents.concat(text);\n\n    FileUtils.writeStringToFile(file, fileContents);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It is not efficient but works fine. Line breaks are handled correctly and a new file is created if one didn&apos;t exist yet.&lt;/p&gt;\n    ","\n&lt;p&gt;This code will fulifil your need:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;   FileWriter fw=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;C:\\\\file.json&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n   fw.write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ssssss&quot;&lt;/span&gt;);\n   fw.close();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In case you want to &lt;strong&gt;ADD SOME TEXT IN SPECIFIC LINES&lt;/strong&gt; you can first read the whole file, append the text wherever you want and then overwrite everything like in the code below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addDatatoFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String data1, String data2)&lt;/span&gt;{\n\n\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fullPath&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;/home/user/dir/file.csv&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(fullPath);\n    List&amp;lt;String&amp;gt; l = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LinkedList&lt;/span&gt;&amp;lt;String&amp;gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedReader&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;(dir))) {\n        String line;\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ((line = br.readLine()) != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(count == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){\n                &lt;span class=&quot;hljs-comment&quot;&gt;//add data at the end of second line                    &lt;/span&gt;\n                line += data1;\n            }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(count == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){\n                &lt;span class=&quot;hljs-comment&quot;&gt;//add other data at the end of third line&lt;/span&gt;\n                line += data2;\n            }\n            l.add(line);\n            count++;\n        }\n        br.close();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (FileNotFoundException e) {\n        e.printStackTrace();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n        e.printStackTrace();\n    }       \n    createFileFromList(l, dir);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;createFileFromList&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(List&amp;lt;String&amp;gt; list, File f)&lt;/span&gt;{\n\n    PrintWriter writer;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        writer = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PrintWriter&lt;/span&gt;(f, &lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (String d : list) {\n            writer.println(d.toString());\n        }\n        writer.close();             \n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (FileNotFoundException | UnsupportedEncodingException e) {\n        e.printStackTrace();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;My answer:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;JFileChooser chooser= &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JFileChooser&lt;/span&gt;();\nchooser.showOpenDialog(chooser);\n&lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; chooser.getSelectedFile();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;What you want to append to file&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; \n{\n    &lt;span class=&quot;hljs-type&quot;&gt;RandomAccessFile&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RandomAccessFile&lt;/span&gt;(file, &lt;span class=&quot;hljs-string&quot;&gt;&quot;rw&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; random.length();\n    random.setLength(length + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    random.seek(random.length());\n    random.writeBytes(Content);\n    random.close();\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception exception) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//exception handling&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**********************************************************************\n * it will write content to a specified  file\n * \n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; keyString\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@throws&lt;/span&gt; IOException\n *********************************************************************/&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;writeToFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String keyString,String textFilePAth)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// For output to file&lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(textFilePAth);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!a.exists()) {\n        a.createNewFile();\n    }\n    &lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(a.getAbsoluteFile(), &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedWriter&lt;/span&gt;(fw);\n    bw.append(keyString);\n    bw.newLine();\n    bw.close();\n}&lt;span class=&quot;hljs-comment&quot;&gt;// end of writeToFile()&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;For JDK version &amp;gt;= 7&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;You can utilise this simple method which appends the given content to the specified file:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;appendToFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String filePath, String content)&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;FileWriter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fw&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(filePath, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)) {\n    fw.write(content + System.lineSeparator());\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) { \n    &lt;span class=&quot;hljs-comment&quot;&gt;// TODO handle exception&lt;/span&gt;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;We are constructing a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/FileWriter.html#FileWriter-java.io.File-boolean-&quot; rel=&quot;nofollow noreferrer&quot;&gt;FileWriter&lt;/a&gt; object in append mode.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use the follong code to append the content in the file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; String fileName=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/home/shriram/Desktop/Images/&quot;&lt;/span&gt;+&lt;span class=&quot;hljs-string&quot;&gt;&quot;test.txt&quot;&lt;/span&gt;;\n  FileWriter fw=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(fileName,&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);    \n  fw.write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;here will be you content to insert or append in file&quot;&lt;/span&gt;);    \n  fw.close(); \n  FileWriter fw1=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileWriter&lt;/span&gt;(fileName,&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);    \n fw1.write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;another content will be here to be append in the same file&quot;&lt;/span&gt;);    \n fw1.close(); \n&lt;/code&gt;&lt;/pre&gt;\n    "],"587":["\n&lt;p&gt;You need to set the value of &lt;code&gt;upload_max_filesize&lt;/code&gt; and &lt;code&gt;post_max_size&lt;/code&gt; in your &lt;code&gt;php.ini&lt;/code&gt; :&lt;/p&gt;\n&lt;pre class=&quot;lang-ini s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;; Maximum allowed size for uploaded files.&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;upload_max_filesize&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\n\n&lt;span class=&quot;hljs-comment&quot;&gt;; Must be greater than or equal to upload_max_filesize&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;post_max_size&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;After modifying &lt;code&gt;php.ini&lt;/code&gt; file(s), you need to restart your HTTP server to use the new configuration.&lt;/p&gt;\n&lt;p&gt;If you can&apos;t change your &lt;code&gt;php.ini&lt;/code&gt;, you&apos;re out of luck. You cannot change these values at run-time; uploads of file larger than the value specified in &lt;code&gt;php.ini&lt;/code&gt; will have failed by the time execution reaches your call to &lt;code&gt;ini_set&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;See the &lt;a href=&quot;http://php.net/manual/en/ini.core.php&quot; rel=&quot;noreferrer&quot;&gt;Description of core &lt;code&gt;php.ini&lt;/code&gt; directives&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can change it via an &lt;code&gt;.htaccess&lt;/code&gt; file.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;.htaccess&lt;/code&gt; files are stored in the same directory as your &lt;code&gt;.php&lt;/code&gt; files are. They modify  configuration for that folder and all sub-folders. You simply use them by creating an &lt;code&gt;.htaccess&lt;/code&gt; file in the directory of your choice (or modify it if present).&lt;/p&gt;\n\n&lt;p&gt;The following should enable you to increase your upload limit (if the server provider allows PHP config changes via &lt;code&gt;.htaccess&lt;/code&gt;).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_value upload_max_filesize &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\nphp_value post_max_size &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I had the same problem and i created a .user.ini file and put it in the directory in which the upload script was located. Than inside that file i set these these two values:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;  upload_max_filesize = &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\n\n  post_max_size = &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and it worked great for me!&lt;/p&gt;\n    ","\n&lt;p&gt;You can also use &lt;a href=&quot;http://php.net/manual/en/function.ini-set.php&quot;&gt;ini_set function&lt;/a&gt; (only for PHP version below 5.3):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;post_max_size&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;64M&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;upload_max_filesize&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;64M&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Like @acme said, in php 5.3 and above this settings are PHP_INI_PERDIR directives so they can&apos;t be set using ini_set. You can use user.ini instead.&lt;/p&gt;\n    ","\n&lt;p&gt;To locate the ini file, first run&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php -i | grep -i &lt;span class=&quot;hljs-string&quot;&gt;&quot;loaded configuration file&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then open the file and change&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;upload_max_filesize = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;M\npost_max_size = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;replacing the 2M with the size you want, for instance 100M.&lt;/p&gt;\n\n&lt;p&gt;I&apos;ve got a blog post about with a little more info too &lt;a href=&quot;http://www.seanbehan.com/how-to-increase-or-change-the-file-upload-size-in-the-php-ini-file-for-wordpress&quot;&gt;http://www.seanbehan.com/how-to-increase-or-change-the-file-upload-size-in-the-php-ini-file-for-wordpress&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I have the same problem in the past .. and i fixed it through &lt;code&gt;.htaccess&lt;/code&gt; file&lt;/p&gt;\n\n&lt;p&gt;When you make change on php configration through &lt;code&gt;.htaccess&lt;/code&gt; you should put configrations in \n&lt;code&gt;IfModule&lt;/code&gt; tag, other that the &lt;strong&gt;Internal server error&lt;/strong&gt; will arise.&lt;/p&gt;\n\n&lt;p&gt;This is an example, it works fine for me:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&amp;lt;IfModule mod_php5.c&amp;gt;\n   php_value upload_max_filesize &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\n   php_value post_max_size &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\n&amp;lt;/IfModule&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this is php referance if you want to understand more.\n&lt;a href=&quot;http://php.net/manual/en/configuration.changes.php&quot; rel=&quot;noreferrer&quot;&gt;http://php.net/manual/en/configuration.changes.php&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I resolved this issue by creating a file called &lt;code&gt;.user.ini&lt;/code&gt; in the directory where the PHP file scripts reside (this means any PHP script in this directory gets the new file size limit)&lt;/p&gt;\n\n&lt;p&gt;The contents of &lt;code&gt;.user.ini&lt;/code&gt; were:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;upload_max_filesize = &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\npost_max_size = &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;the answers are a bit incomplete, 3 things you have to do&lt;/p&gt;\n\n&lt;p&gt;in php.ini of your php installation (note: depending if you want it for CLI, apache, or nginx, find the right php.ini to manipulate. For nginx it is usually located in &lt;code&gt;/etc/php/7.1/fpm&lt;/code&gt; where 7.1 depends on your version. For apache usually &lt;code&gt;/etc/php/7.1/apache2&lt;/code&gt;)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;post_max_size=&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;M\n\nupload_max_filesize=&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;M\n\nmemory_limit=&lt;span class=&quot;hljs-number&quot;&gt;900&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or set other values. Restart/reload apache if you have apache installed or &lt;strong&gt;php-fpm&lt;/strong&gt; for nginx if you use nginx.&lt;/p&gt;\n    ","\n&lt;p&gt;many times i have noticed that site wit shared hosting do not allow to change settings in php.ini files.  one also can not even crate .htaaccess file at all. in such situation one can try following things&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;upload_max_filesize&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;10M&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;post_max_size&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;10M&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;max_input_time&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;max_execution_time&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Perhaps this should be a comment to @seanb123 and @Fredrick Gauss commenting on his comment, but for me in Drupal 8.1 with PHP 7 the file I needed to modify was located here:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;/etc/php/&lt;span class=&quot;hljs-number&quot;&gt;7.0&lt;/span&gt;/apache2/php.ini\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I modded probably four other php.ini files, including the one my system called the &quot;Loaded Configuration File&quot; (&lt;code&gt;php -i | grep -i &quot;loaded configuration file&quot;&lt;/code&gt;) and the one found on the info.php page but none of them helped. The key to discovering the correct path was found on a site from 2012. They said the path &lt;code&gt;&quot;/etc/php5/apache2/php.ini&quot;&lt;/code&gt; was deprecated even BACK THEN but it gave me a clue where to find it. For PHP7 it&apos;s a little different than in PHP5 but the concept is the same.&lt;/p&gt;\n\n&lt;p&gt;Maybe this will help some otherwise helpless schmuck like myself.&lt;/p&gt;\n\n&lt;p&gt;That being said, the answer to the OP in my case would be that someone with admin privileges on the box would have to do it.&lt;/p&gt;\n\n&lt;p&gt;The site that helped me: &lt;a href=&quot;http://www.evilbox.ro/linux/remove-ispconfig-maximum-upload-size-of-2m-for-wordpress/&quot; rel=&quot;noreferrer&quot;&gt;http://www.evilbox.ro/linux/remove-ispconfig-maximum-upload-size-of-2m-for-wordpress/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is also addressed here: &lt;a href=&quot;https://stackoverflow.com/questions/3958615/import-file-size-limit-in-phpmyadmin&quot;&gt;Import file size limit in PHPMyAdmin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;EDIT:\nthe full text of my note to myself:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;In order to change the max upload size, edit upload_max_filesize and\n  [if needed?] post_max_size in /etc/php/7.0/apache2/php.ini (or in\n  older versions: /etc/php5/apache2/php.ini )&lt;/p&gt;\n  \n  &lt;p&gt;/etc/init.d/apache2 restart&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;EDIT AGAIN:\nsince you&apos;re importing big files you may need to change the timeout for processing them. In my case, the file named, &quot;config.default.php&quot; was found at &lt;code&gt;/usr/share/phpmyadmin/libraries/config.default.php&lt;/code&gt; with the variable &lt;code&gt;$cfg[&apos;ExecTimeLimit&apos;] = 300;&lt;/code&gt;\nI changed mine to 900 for a huge import, for instance.\nAfterward you need to restart apache&lt;/p&gt;\n    ","\n&lt;p&gt;I had the same problem. I have tried three ways that were usually suggested:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;functions.php&lt;/li&gt;\n&lt;li&gt;php.ini&lt;/li&gt;\n&lt;li&gt;.htaccess&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;none if which solved my problem. I am using godaddy and came across a suggested solution which was:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;got to &lt;strong&gt;Web Hosting&lt;/strong&gt;, then &lt;strong&gt;Manage&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;Under &lt;strong&gt;Software&lt;/strong&gt; select &lt;strong&gt;Select PHP version&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;Select &lt;strong&gt;Switch to PHP Options&lt;/strong&gt; found on the top right corner of the table in font color: blue&lt;/li&gt;\n&lt;li&gt;On the bottom most part, you&apos;ll probably have &lt;code&gt;upload_max_filesize = 2M&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Now, feel free to change it&lt;/li&gt;\n&lt;li&gt;Be sure to click the &lt;strong&gt;Save&lt;/strong&gt; button!&lt;/li&gt;\n&lt;li&gt;Now go to your wp-admin panel, select &lt;strong&gt;Media&lt;/strong&gt; then &lt;strong&gt;Add&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;&lt;em&gt;Voila! Now you have a different max upload file size :)&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Well, I would like to add my 2 cents here.&lt;/p&gt;\n\n&lt;p&gt;I&apos;m using shared webhosting and I tackled this problem many times, tried to resolve it on my own but to no avail. \nFinally I managed to resolve it through checking various web sources and contacting my hosting service provider. My questions were &quot;How can I change php value &lt;code&gt;memory_limit&lt;/code&gt; in shared webhosting?&quot;, &quot;How can I change php value &lt;code&gt;upload_max_filesize&lt;/code&gt; in shared webhosting?&quot;, &quot;How can I change php value &lt;code&gt;max_input_vars&lt;/code&gt; in shared webhosting?&quot;, &quot;How can I change php value &lt;code&gt;max_execution_time&lt;/code&gt; in shared webhosting?&quot;, &quot;How can I change php value &lt;code&gt;max_input_time&lt;/code&gt; in shared webhosting?&quot; and many more by configuring or changing php.ini or &lt;code&gt;.htaccess&lt;/code&gt; file. I tried to change them but problems arose. Finally I contacted my hosting provider, and it turns out that I set my php to native, they changed it to php 5.6, here is their answer: &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&quot;Your PHP was set to &apos;native&apos; mode which means you can&apos;t override\n  those values. I&apos;ve changed you to just &apos;5.6&apos; so you should be good to\n  go.&quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;After that I connected my website through ftp Filezilla, also don&apos;t forget to make both your ftp service to show hidden files, and your local computer to do so, because &lt;code&gt;.htaccess&lt;/code&gt; file was hidden in my local laptop and in my website. It was available in public_html folder, I just downloaded it and added the following codes to the end of the file and then uploaded it back to the server: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_value memory_limit &lt;span class=&quot;hljs-number&quot;&gt;256&lt;/span&gt;M\nphp_value post_max_size &lt;span class=&quot;hljs-number&quot;&gt;256&lt;/span&gt;M\nphp_value upload_max_filesize &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;M\nphp_value max_input_vars &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;\nphp_value max_execution_time &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;\nphp_value max_input_time &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/74dv0.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/74dv0.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/cjXR5.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/cjXR5.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/5lxT3.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/5lxT3.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/VdKm8.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/VdKm8.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/NnTF6.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/NnTF6.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Everything is working properly for the time being, if any of you overcome with some problems please write here and warn me so that I can change the above-shown codes. By the way, I also upload some pictures which shows the change. &lt;/p&gt;\n\n&lt;p&gt;One more thing I almost forgot to mention ZipArchive installation on your shared webhosting service, I managed that requirement to tick by just going to php settings through my cpanel, click on php selector extensions and then tick zip section, that&apos;s all.&lt;/p&gt;\n\n&lt;p&gt;Thanks.&lt;/p&gt;\n\n&lt;p&gt;PS: I&apos;m open to good practices, and if you see any bad practice here please let me know, I&apos;ll try to change them. Thanks.&lt;/p&gt;\n    ","\n&lt;p&gt;Non of those solutions work for me!! (already set to 32M by default).The problem is in most case &lt;code&gt;max_allowed_packet&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I am working on localhost and using &lt;code&gt;MAMP&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Here is solutions;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1. If you don&apos;t have &lt;code&gt;my.ini&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;--max_allowed_packet=&lt;span class=&quot;hljs-number&quot;&gt;168435456&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;To&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;...\\MAMP\\bin\\startMysql.sh\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;2.  If you have my.ini&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Under&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;[mysqld]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;max_allowed_packet=&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;DONE!&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As changing globally is somewhat risky, I was trying to increase max upload value for a &lt;strong&gt;single script&lt;/strong&gt; &lt;code&gt;big_file_upload.php&lt;/code&gt;. For some reason &lt;code&gt;ini_set&lt;/code&gt; didn&apos;t help. After some reasearch I&apos;ve come up with this. Put it in &lt;code&gt;.htaccess&lt;/code&gt; (unless name changed via &lt;code&gt;AccessFileName&lt;/code&gt;)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&amp;lt;If &lt;span class=&quot;hljs-string&quot;&gt;&quot;%{REQUEST_URI} == &apos;/subfolder/big_file_upload.php&apos;&quot;&lt;/span&gt; &amp;gt;\nphp_value upload_max_filesize &lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;M\nphp_value post_max_size &lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;M\n&amp;lt;/If&amp;gt;\n&amp;lt;Else&amp;gt;\nphp_value upload_max_filesize &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;M\nphp_value post_max_size &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;M\n&amp;lt;/Else&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Worked for me.&lt;/p&gt;\n    ","\n&lt;p&gt;With &lt;code&gt;WAMP&lt;/code&gt; it&apos;s all pretty easy&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;WAMP&lt;/code&gt; Icon &amp;gt; PHP &amp;gt; PHP Settings &amp;gt; upload_max_filesize = nM &amp;gt; n = (2M, 4M, 8M, 16M, 32M, 64M, 128M, 256M, 512M, or Choose (custom)).&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Service(s) reload automatically.&lt;/p&gt;\n&lt;p&gt;But, if you truly have &lt;em&gt;no&lt;/em&gt; access to the server, you might want to explore writing a &lt;code&gt;chunking&lt;/code&gt; API.&lt;/p&gt;\n&lt;p&gt;Here is an image on how to do it.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/ViISN.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/ViISN.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Three things you need to check.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;upload_max_filesize&lt;/code&gt;, &lt;code&gt;memory_limit&lt;/code&gt; and &lt;code&gt;post_max_size&lt;/code&gt; in the php.ini configuration file exactly.&lt;/p&gt;\n\n&lt;p&gt;All of these three settings limit the maximum size of data that can be submitted and handled by PHP.&lt;/p&gt;\n\n&lt;p&gt;Typically &lt;code&gt;post_max_size&lt;/code&gt; and &lt;code&gt;memory_limit&lt;/code&gt; need to be larger than &lt;code&gt;upload_max_filesize&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;So three variables &lt;strong&gt;total&lt;/strong&gt; you need to check to be absolutely sure.&lt;/p&gt;\n    ","\n&lt;p&gt;If you edited the right php.ini file, restarted Apache or Nginx and still doesn&apos;t work, then you have to restart &lt;strong&gt;php-fpm&lt;/strong&gt; too: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;sudo service php-fpm restart \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I also had this issue, and fixed it by setting this setting in &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;client_max_body_size &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;0, as in unlimited.&lt;/p&gt;\n\n&lt;p&gt;And also, if you have a reverse proxy running with nginx, that server should also have this setting (This is what threw me off here)&lt;/p&gt;\n    ","\n&lt;p&gt;Existing answers all have partial solutions so here is the compiled answer:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Solution 1: Edit .htaccess file&lt;/strong&gt;\nSuitable for Apache servers&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_value upload_max_filesize &lt;span class=&quot;hljs-number&quot;&gt;128&lt;/span&gt;M\nphp_value post_max_size &lt;span class=&quot;hljs-number&quot;&gt;132&lt;/span&gt;M\nphp_value memory_limit &lt;span class=&quot;hljs-number&quot;&gt;256&lt;/span&gt;M\nphp_value max_execution_time &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;\nphp_value max_input_time &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Solution 2: Edit wp-config.php file&lt;/strong&gt;\nSuitable for Wordpress application&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;@&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;upload_max_filesize&apos;&lt;/span&gt; , &lt;span class=&quot;hljs-string&quot;&gt;&apos;128M&apos;&lt;/span&gt; );\n@&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;post_max_size&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;132M&apos;&lt;/span&gt;);\n@&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;memory_limit&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;256M&apos;&lt;/span&gt; );\n@&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;max_execution_time&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;300&apos;&lt;/span&gt; );\n@&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;max_input_time&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;300&apos;&lt;/span&gt; );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Solution 3: Edit php.ini file&lt;/strong&gt;\nSuitable for nginx servers or where php.ini is modifiable&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;upload_max_filesize = &lt;span class=&quot;hljs-number&quot;&gt;128&lt;/span&gt;M\npost_max_size = &lt;span class=&quot;hljs-number&quot;&gt;132&lt;/span&gt;M\nmemory_limit = &lt;span class=&quot;hljs-number&quot;&gt;256&lt;/span&gt;M\nmax_execution_time = &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;\nmax_input_time = &lt;span class=&quot;hljs-number&quot;&gt;300&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Optional: Nginx Server&lt;/strong&gt;&lt;br&gt;\nFor nginx increase maximum file upload size limit (default 1MB) by adding &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;client_max_body_size 128M;&lt;/code&gt;&lt;/a&gt; directive in &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;server&lt;/code&gt; block.]&lt;/p&gt;\n&lt;h3&gt;Important Explanation of the settings:&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;upload_max_filesize&lt;/em&gt;  set this to a value &amp;gt; than your file size&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;post_max_size&lt;/em&gt;  set this to a value &amp;gt; than your &lt;em&gt;upload_max_filesize&lt;/em&gt; because overall size of the posted fields may be higher than the filesize&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;memory_limit&lt;/em&gt;  set this to a value &amp;gt; than your file size because it  limits the maximum amount of memory a script may consume&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;max_execution_time&lt;/em&gt;  Maximum execution time of each script, in seconds. Set this to 0 (infinite) if your script requires long time to process file&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;max_input_time&lt;/em&gt; - Maximum amount of time each script may spend parsing request data. Default is 60 seconds. Set this to -1 if scripts requires more time&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;And finally don&apos;t forget to restart your server.&lt;/strong&gt; Apply below what is suitable for you:&lt;/p&gt;\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# if php-fpm is used for processing php&lt;/span&gt;\nsudo service php7.4-fpm restart\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# for nginx&lt;/span&gt;\nsudo service nginx restart\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# for apache&lt;/span&gt;\nsudo service httpd restart\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Open the php.ini file.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Search keyword like upload_max_filesize in php.ini.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Then change the size of file.&lt;/p&gt;\n&lt;p&gt;upload_max_filesize = 400M&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Need to change the max post value.&lt;/p&gt;\n&lt;p&gt;post_max_size = 400M&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;After spending hours, I went through almost all the posts but no luck. And finally resolved the issue with these steps. This might be weird solution but worked for me.&lt;/p&gt;\n&lt;p&gt;Step 1: find php.ini file in /etc folder  or / folder by running below cmd:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;grep -rl &lt;span class=&quot;hljs-string&quot;&gt;&quot;post_max_size&quot;&lt;/span&gt; | xargs ls -lrth\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here I have used the post_max_size keyword to search the &quot;php.ini&quot; file in /etc folder ,but in some systems you can find this on /var/www/html or /var/www/wordpress folders.&lt;/p&gt;\n&lt;p&gt;We have multiple posts on the internet as if the php.ini file is not present in the WordPress folder then you can create but in my case that doesn&apos;t work.&lt;/p&gt;\n&lt;p&gt;Step 2:&lt;/p&gt;\n&lt;p&gt;Edit php.ini file and change the value like this.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;post_max_size = &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;M   \nupload_max_filesize = &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In the above you can set any value as per your requirement.&lt;/p&gt;\n&lt;p&gt;Step 3:&lt;/p&gt;\n&lt;p&gt;Restart the httpd or Nginx or apache and PHP service, or as per setup, you can restart the web service.&lt;/p&gt;\n&lt;p&gt;For me httpd and php-fpm service restart worked in centos 8 :&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;service httpd restart\nservice php-fpm restart\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;you have to find the where is php installed you will see the &lt;em&gt;&lt;strong&gt;php.ini&lt;/strong&gt;&lt;/em&gt; file&lt;/p&gt;\n&lt;p&gt;just open that file into any editor and replace th value&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;max_file_upload : &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;M\n\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;First Option:&lt;/strong&gt;&lt;/em&gt; Use this option in case you have permission to edit the php.ini file.&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;&lt;strong&gt;upload_max_filesize&lt;/strong&gt;&lt;/em&gt; and the &lt;em&gt;&lt;strong&gt;post_max_size&lt;/strong&gt;&lt;/em&gt; settings in the &lt;strong&gt;php.ini&lt;/strong&gt; need to changed to support  larger files than the php default allowed size.&lt;/p&gt;\n&lt;p&gt;set &lt;em&gt;&lt;strong&gt;upload_max_filesize&lt;/strong&gt;&lt;/em&gt;  to the maximum size of  file which need to be uploaded.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;post_max_size&lt;/strong&gt;&lt;/em&gt; should be set to greater than  &lt;em&gt;&lt;strong&gt;upload_max_filesize&lt;/strong&gt;&lt;/em&gt; to handle the  file and the size of form post variables part of file upload form.\nIn case multiple files are uploaded in the file upload form at a time, the &lt;em&gt;&lt;strong&gt;post_max_size&lt;/strong&gt;&lt;/em&gt; should be set to (upload_max_filesize * no of files)+ size of post variables.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;upload_max_filesize=&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;M\npost_max_size=&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;M\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;No need to update &lt;em&gt;&lt;strong&gt;memory_limit&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;max_execution_time&lt;/strong&gt;&lt;/em&gt; php settings, in case file is just moved using the move_uploaded_file to the final path in file upload php script.\nBut if  the file upload script is processing the file or reading the file to a variable or doing any other processing which use memory and time etc, &lt;em&gt;&lt;strong&gt;memory_limit&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;max_execution_time&lt;/strong&gt;&lt;/em&gt; should be set.&lt;/p&gt;\n&lt;p&gt;Set &lt;em&gt;&lt;strong&gt;memory_limit&lt;/strong&gt;&lt;/em&gt; to amount of memory needed for the php script to run and  &lt;em&gt;&lt;strong&gt;max_execution_time&lt;/strong&gt;&lt;/em&gt; to the time in seconds required to run the script.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;memory_limit = &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;M\nmax_execution_time = &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Restart the webserver after the php.ini is changed for it to take effect.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;Second Option:&lt;/strong&gt;&lt;/em&gt; Use this  option in case you do not have permission to update the global php.ini settings or to improve security.&lt;/p&gt;\n&lt;p&gt;Copy the upload php scripts to a new Child folder say &quot;Upload&quot; and create a file &quot;.user.ini&quot; in the new folder. Also make sure to update the file upload form action attribute to post to the new Script under the &quot;Upload&quot; Folder.&lt;/p&gt;\n&lt;p&gt;Add below settings to the newly created file. &quot;.user.ini&quot;.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;upload_max_filesize=&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;M\npost_max_size=&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;M\n\n;below are optional\nmemory_limit = &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;M\nmax_execution_time = &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&quot;user_ini.filename&quot;  php.ini setting can updated to give the user setting file another name.&lt;/p&gt;\n&lt;p&gt;This option improves the security as the &lt;strong&gt;upload_max_filesize, post_max_size,memory_limit, max_execution_time&lt;/strong&gt;  are changed only for the\nscripts in the new folder and  will not impact php settings for scripts in other folders and prevents any unwanted resource utilization by bad scripts.&lt;/p&gt;\n&lt;p&gt;Please refer below links for more information on &quot;.user.ini&quot; settings&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/en/configuration.changes.modes.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.php.net/manual/en/configuration.changes.modes.php&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/en/ini.list.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.php.net/manual/en/ini.list.php&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/en/configuration.file.per-user.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.php.net/manual/en/configuration.file.per-user.php&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Restart the webserver for the new .user.ini  changes to take effect.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;&lt;strong&gt;memory_limit&lt;/strong&gt;&lt;/em&gt;  and &lt;em&gt;&lt;strong&gt;max_execution_time&lt;/strong&gt;&lt;/em&gt; setting  can also be set in the php upload script using &lt;em&gt;&lt;strong&gt;ini_set&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;set_time_limit&lt;/strong&gt;&lt;/em&gt; function  instead of updating php.ini file .&lt;/p&gt;\n&lt;p&gt;If this option is used, not need to update the &lt;em&gt;&lt;strong&gt;memory_limit&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;max_execution_time&lt;/strong&gt;&lt;/em&gt; setting in the ini file.&lt;/p&gt;\n&lt;p&gt;Add below to the top of the php file upload script&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;memory_limit&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;100M&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;set_time_limit&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    "],"588":["\n&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;input&lt;/code&gt; function in Python 2.7, evaluates whatever your enter, as a Python expression. If you simply want to read strings, then use &lt;code&gt;raw_input&lt;/code&gt; function in Python 2.7, which will not evaluate the read strings.&lt;/p&gt;\n\n&lt;p&gt;If you are using Python 3.x, &lt;code&gt;raw_input&lt;/code&gt; has been renamed to &lt;code&gt;input&lt;/code&gt;. Quoting the &lt;a href=&quot;https://docs.python.org/3.0/whatsnew/3.0.html#builtins&quot; rel=&quot;noreferrer&quot;&gt;Python 3.0 release notes&lt;/a&gt;,&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;code&gt;raw_input()&lt;/code&gt; was renamed to &lt;code&gt;input()&lt;/code&gt;. That is, the new &lt;code&gt;input()&lt;/code&gt; function reads a line from &lt;code&gt;sys.stdin&lt;/code&gt; and returns it with the trailing newline stripped. It raises &lt;code&gt;EOFError&lt;/code&gt; if the input is terminated prematurely. To get the old behavior of &lt;code&gt;input()&lt;/code&gt;, use &lt;code&gt;eval(input())&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;In Python 2.7&lt;/strong&gt;, there are two functions which can be used to accept user inputs. One is &lt;a href=&quot;http://docs.python.org/2/library/functions.html#input&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and the other one is &lt;a href=&quot;http://docs.python.org/2/library/functions.html#raw_input&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;raw_input&lt;/code&gt;&lt;/a&gt;. You can think of the relation between them as follows&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(raw_input)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Consider the following piece of code to understand this better&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dude = &lt;span class=&quot;hljs-string&quot;&gt;&quot;thefourtheye&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;input_variable = &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\nEnter your name: dude\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;input_variable\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;thefourtheye&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;input&lt;/code&gt; accepts a string from the user and evaluates the string in the current Python context. When I type &lt;code&gt;dude&lt;/code&gt; as input, it finds that &lt;code&gt;dude&lt;/code&gt; is bound to the value &lt;code&gt;thefourtheye&lt;/code&gt; and so the result of evaluation becomes &lt;code&gt;thefourtheye&lt;/code&gt; and that gets assigned to &lt;code&gt;input_variable&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;If I enter something else which is not there in the current python context, it will fail will the &lt;code&gt;NameError&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\nEnter your name: dummy\nTraceback (most recent call last):\n  File &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;input&amp;gt;&quot;&lt;/span&gt;, line &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;\n  File &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;string&amp;gt;&quot;&lt;/span&gt;, line &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;\nNameError: name &lt;span class=&quot;hljs-string&quot;&gt;&apos;dummy&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; defined\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Security considerations with Python 2.7&apos;s &lt;code&gt;input&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Since whatever user types is evaluated, it imposes security issues as well. For example, if you have already loaded &lt;code&gt;os&lt;/code&gt; module in your program with &lt;code&gt;import os&lt;/code&gt;, and then the user types in&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;os.remove(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/etc/hosts&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this will be evaluated as a function call expression by python and it will be executed. If you are executing Python with elevated privileges, &lt;code&gt;/etc/hosts&lt;/code&gt; file will be deleted. See, how dangerous it could be?&lt;/p&gt;\n\n&lt;p&gt;To demonstrate this, let&apos;s try to execute &lt;code&gt;input&lt;/code&gt; function again.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dude = &lt;span class=&quot;hljs-string&quot;&gt;&quot;thefourtheye&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\nEnter your name: &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name again: &quot;&lt;/span&gt;)\nEnter your name again: dude\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, when &lt;code&gt;input(&quot;Enter your name: &quot;)&lt;/code&gt; is executed, it waits for the user input and the user input is a valid Python function invocation and so that is also invoked. That is why we are seeing &lt;code&gt;Enter your name again:&lt;/code&gt; prompt again.&lt;/p&gt;\n\n&lt;p&gt;So, you are better off with &lt;code&gt;raw_input&lt;/code&gt; function, like this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;input_variable = raw_input(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you need to convert the result to some other type, then you can use appropriate functions to convert the string returned by &lt;code&gt;raw_input&lt;/code&gt;. For example, to read inputs as integers, use the &lt;code&gt;int&lt;/code&gt; function, like shown in &lt;a href=&quot;https://stackoverflow.com/a/20449433/1903116&quot;&gt;this answer&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;In python 3.x&lt;/strong&gt;, there is only one function to get user inputs and that is called &lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt;, which is equivalent to Python 2.7&apos;s &lt;code&gt;raw_input&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You are running Python 2, not Python 3.  For this to work in Python 2, use &lt;code&gt;raw_input&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;input_variable = raw_input (&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;your name is&quot;&lt;/span&gt; + input_variable)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Since you are writing for Python 3.x, you&apos;ll want to begin your script with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It will default to Python 2.x. These go on the first line of your script, if there is nothing that starts with &lt;em&gt;#!&lt;/em&gt; (aka the shebang).&lt;/p&gt;\n\n&lt;p&gt;If your scripts just start with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#! python&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can change it to:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#! python3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Although this shorter formatting is only recognized by a few programs, such as the launcher, so it is not the best choice. &lt;/p&gt;\n\n&lt;p&gt;The first two examples are much more widely used and will help ensure your code will work on any machine that has Python installed.&lt;/p&gt;\n    ","\n&lt;p&gt;I also encountered this issue with a module that was supposed to be compatible for python 2.7 and 3.7&lt;/p&gt;\n\n&lt;p&gt;what i found to fix the issue was importing:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; six.moves &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this fixed the usability for both interpreters &lt;/p&gt;\n\n&lt;p&gt;you can read more about the six library &lt;a href=&quot;https://pythonhosted.org/six/&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You should use &lt;code&gt;raw_input&lt;/code&gt; because you are using python-2.7. When you use &lt;code&gt;input()&lt;/code&gt; on a variable (for example: &lt;code&gt;s = input(&apos;Name: &apos;)&lt;/code&gt;), it will execute the command ON the Python environment without saving what you wrote on the variable (&lt;code&gt;s&lt;/code&gt;) and create an error if what you wrote is not defined.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;raw_input()&lt;/code&gt; will save correctly what you wrote on the variable (for example: &lt;code&gt;f = raw_input(&apos;Name : &apos;)&lt;/code&gt;), and it will not execute it in the Python environment without creating any possible error: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;input_variable = raw_input(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Enter Your Name : &apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Your Name Is  : &quot;&lt;/span&gt; + (input_variable))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;input_variable = &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;your name is&quot;&lt;/span&gt; + input_variable)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You have to enter input in either single or double quotes&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;Ex:&lt;span class=&quot;hljs-string&quot;&gt;&apos;dude&apos;&lt;/span&gt; -&amp;gt; correct\n\n    dude -&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; correct\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;For python 3 and above&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;s = raw_input()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;it will solve the problem on pycharm IDE\nif you are solving on online site exactly hackerrank then use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;s = &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;We are using the following that works both &lt;strong&gt;python 2 and python 3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#Works in Python 2 and 3:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt; = raw_input\n&lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt; NameError: &lt;span class=&quot;hljs-keyword&quot;&gt;pass&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could either do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;x = raw_input(&lt;span class=&quot;hljs-string&quot;&gt;&quot;enter your name&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;your name is %s &quot;&lt;/span&gt; % x\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;x = &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;enter your name&quot;&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;your name is %s&quot;&lt;/span&gt; % x\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There are two ways to fix these issues,&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;1st is simple without code change that is&lt;br&gt;\n&lt;strong&gt;run your script by Python3,&lt;/strong&gt; &lt;br&gt;\n&lt;strong&gt;if you still want to run on python2&lt;/strong&gt; then\nafter running your python script, when you are entering the input keep in mind&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;if you want to enter &lt;code&gt;string&lt;/code&gt; then just start typing down with &quot;input goes with double-quote&quot; and it will work in python2.7 and &lt;/li&gt;\n&lt;li&gt;if you want to enter character then use the input with a single quote like &apos;your input goes here&apos;&lt;/li&gt;\n&lt;li&gt;if you want to enter number not an issue you simply type the number&lt;/li&gt;\n&lt;/ol&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;2nd way is with code  changes&lt;br&gt;\nuse the below import and run with any version of python&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;from six.moves import input&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;raw_input()&lt;/code&gt; function instead of &lt;code&gt;input()&lt;/code&gt; function in your code with any import&lt;/li&gt;\n&lt;li&gt;sanitise your code with &lt;code&gt;str()&lt;/code&gt; function like &lt;code&gt;str(input())&lt;/code&gt; and then assign to any variable&lt;/li&gt;\n&lt;/ol&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;As error implies&lt;/strong&gt;:&lt;br&gt; name &apos;dude&apos; is not defined \ni.e. for python &apos;dude&apos; become variable here and it&apos;s not having any value of python defined type assigned&lt;br&gt;so only its crying like baby so if we define a &apos;dude&apos; variable and assign any value and pass to it, it will work but that&apos;s not what we want as we don&apos;t know what user will enter and moreover we want to capture the user input.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;Fact about these method:&lt;/strong&gt;&lt;br&gt;\n  &lt;code&gt;input()&lt;/code&gt; function: This function takes the value and type of the input you enter as it is without modifying it type.&lt;br&gt; &lt;code&gt;raw_input()&lt;/code&gt;\n  function: This function explicitly converts the input you give into type string,\n  &lt;br&gt;&lt;/p&gt;\n  \n  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;br&gt; The vulnerability in input() method lies in the fact that\n  the variable accessing the value of input can be accessed by anyone\n  just by using the name of variable or method.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;For anyone else that may run into this issue, turns out that even if you include &lt;code&gt;#!/usr/bin/env python3&lt;/code&gt; at the beginning of your script, the shebang is ignored if the file isn&apos;t executable.&lt;/p&gt;\n\n&lt;p&gt;To determine whether or not your file is executable:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;run &lt;code&gt;./filename.py&lt;/code&gt; from the command line&lt;/li&gt;\n&lt;li&gt;if you get &lt;code&gt;-bash: ./filename.py: Permission denied&lt;/code&gt;, run &lt;code&gt;chmod a+x filename.py&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;run &lt;code&gt;./filename.py&lt;/code&gt; again&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you&apos;ve included &lt;code&gt;import sys; print(sys.version)&lt;/code&gt; as Kevin suggested, you&apos;ll now see that the script is being interpreted by python3&lt;/p&gt;\n    ","\n&lt;p&gt;Good contributions the previous ones.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; sys; &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(sys.version)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ingreso&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;nombre&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hi &apos;&lt;/span&gt;, nombre, &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;(nombre))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bienvenida&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;nombre&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hi &quot;&lt;/span&gt;+nombre+&lt;span class=&quot;hljs-string&quot;&gt;&quot;, bye &quot;&lt;/span&gt;)\n\nnombre = raw_input(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\n\ningreso(nombre)\nbienvenida(nombre)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#Works in Python 2 and 3:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt; = raw_input\n&lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt; NameError: &lt;span class=&quot;hljs-keyword&quot;&gt;pass&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Your name: &quot;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;Enter your name: Joe\n(&apos;Hi &apos;, &apos;Joe&apos;, &amp;lt;type &apos;str&apos;&amp;gt;)\nHi Joe, bye \n\nYour name: Joe\nJoe\n&lt;/pre&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n    ","\n&lt;p&gt;Try using &lt;code&gt;raw_input&lt;/code&gt; rather than &lt;code&gt;input&lt;/code&gt; if you simply want to read strings.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Enter your name: &quot;&lt;/span&gt;)\nx = raw_input()\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, &quot;&lt;/span&gt;+x)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/a3jfT.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/a3jfT.png&quot; alt=&quot;Image contains the output screen&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can change which python you&apos;re using with your IDE, if you&apos;ve already downloaded python 3.x it shouldn&apos;t be too hard to switch. But your script works fine on python 3.x, I would just change&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;your name is&quot;&lt;/span&gt; + input_variable)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;your name is&quot;&lt;/span&gt;, input_variable)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because with the comma it prints with a whitespace in between &lt;code&gt;your name is&lt;/code&gt; and whatever the user inputted. AND: if you&apos;re using 2.7 just use &lt;code&gt;raw_input&lt;/code&gt; instead of input. &lt;/p&gt;\n    ","\n&lt;p&gt;Here is an input function which is compatible with both Python 2.7 and Python 3+:\n(Slightly modified answer by @Hardian) to avoid &lt;code&gt;UnboundLocalError: local variable &apos;input&apos; referenced before assignment&lt;/code&gt; error&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;input_compatible&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;prompt=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n        input_func = raw_input\n    &lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt; NameError:\n        input_func = &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; input_func(prompt)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Also here is another alternative without a &lt;code&gt;try&lt;/code&gt; block:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;input_compatible&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;prompt=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    input_func = raw_input &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;raw_input&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; __builtins__.__dict__ &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; input_func(prompt)\n&lt;/code&gt;&lt;/pre&gt;\n    "],"589":["\n&lt;p&gt;This &lt;a href=&quot;http://www.movable-type.co.uk/scripts/latlong.html&quot; rel=&quot;noreferrer&quot;&gt;link&lt;/a&gt; might be helpful to you, as it details the use of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Haversine_formula&quot; rel=&quot;noreferrer&quot;&gt;Haversine formula&lt;/a&gt; to calculate the distance.&lt;/p&gt;\n\n&lt;p&gt;Excerpt:&lt;/p&gt;\n\n\n\n&lt;blockquote&gt;\n  &lt;p&gt;This script [in Javascript] calculates great-circle distances between the two points \n  that is, the shortest distance over the earths surface  using the\n  Haversine formula.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getDistanceFromLatLonInKm&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lat1,lon1,lat2,lon2&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; R = &lt;span class=&quot;hljs-number&quot;&gt;6371&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Radius of the earth in km&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dLat = &lt;span class=&quot;hljs-title function_&quot;&gt;deg2rad&lt;/span&gt;(lat2-lat1);  &lt;span class=&quot;hljs-comment&quot;&gt;// deg2rad below&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dLon = &lt;span class=&quot;hljs-title function_&quot;&gt;deg2rad&lt;/span&gt;(lon2-lon1); \n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = \n    &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sin&lt;/span&gt;(dLat/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sin&lt;/span&gt;(dLat/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) +\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;cos&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;deg2rad&lt;/span&gt;(lat1)) * &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;cos&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;deg2rad&lt;/span&gt;(lat2)) * \n    &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sin&lt;/span&gt;(dLon/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sin&lt;/span&gt;(dLon/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n    ; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;atan2&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sqrt&lt;/span&gt;(a), &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;-a)); \n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = R * c; &lt;span class=&quot;hljs-comment&quot;&gt;// Distance in km&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; d;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deg2rad&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;deg&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; deg * (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;PI&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;180&lt;/span&gt;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I needed to calculate a lot of distances between the points for my project, so I went ahead and tried to optimize the code, I have found here. On average in different browsers my new implementation &lt;strong&gt;runs 2 times faster&lt;/strong&gt; than the most upvoted answer.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;distance&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lat1, lon1, lat2, lon2&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;hljs-number&quot;&gt;0.017453292519943295&lt;/span&gt;;    &lt;span class=&quot;hljs-comment&quot;&gt;// Math.PI / 180&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;cos&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; - &lt;span class=&quot;hljs-title function_&quot;&gt;c&lt;/span&gt;((lat2 - lat1) * p)/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; + \n          &lt;span class=&quot;hljs-title function_&quot;&gt;c&lt;/span&gt;(lat1 * p) * &lt;span class=&quot;hljs-title function_&quot;&gt;c&lt;/span&gt;(lat2 * p) * \n          (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;hljs-title function_&quot;&gt;c&lt;/span&gt;((lon2 - lon1) * p))/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12742&lt;/span&gt; * &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;asin&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sqrt&lt;/span&gt;(a)); &lt;span class=&quot;hljs-comment&quot;&gt;// 2 * R; R = 6371 km&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can play with my jsPerf and see the &lt;a href=&quot;http://jsperf.com/haversine-salvador/8&quot; rel=&quot;noreferrer&quot;&gt;results here&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Recently I needed to do the same in python, so here is a &lt;strong&gt;python implementation&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-python s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cos, asin, sqrt, pi\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;distance&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lat1, lon1, lat2, lon2&lt;/span&gt;):\n    p = pi/&lt;span class=&quot;hljs-number&quot;&gt;180&lt;/span&gt;\n    a = &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; - cos((lat2-lat1)*p)/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; + cos(lat1*p) * cos(lat2*p) * (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;-cos((lon2-lon1)*p))/&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12742&lt;/span&gt; * asin(sqrt(a)) &lt;span class=&quot;hljs-comment&quot;&gt;#2*R*asin...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And for the sake of completeness: &lt;a href=&quot;https://en.wikipedia.org/wiki/Haversine_formula&quot; rel=&quot;noreferrer&quot;&gt;Haversine&lt;/a&gt; on Wikipedia.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a C# Implementation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DistanceAlgorithm&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; PIx = &lt;span class=&quot;hljs-number&quot;&gt;3.141592653589793&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; RADIUS = &lt;span class=&quot;hljs-number&quot;&gt;6378.16&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; Convert degrees to Radians&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;x&quot;&amp;gt;&lt;/span&gt;Degrees&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;The equivalent in radians&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Radians&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; x&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x * PIx / &lt;span class=&quot;hljs-number&quot;&gt;180&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; Calculate the distance between two places.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;lon1&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;lat1&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;lon2&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;lat2&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DistanceBetweenPlaces&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; lon1,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; lat1,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; lon2,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; lat2&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; dlon = Radians(lon2 - lon1);\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; dlat = Radians(lat2 - lat1);\n\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; a = (Math.Sin(dlat / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * Math.Sin(dlat / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)) + Math.Cos(Radians(lat1)) * Math.Cos(Radians(lat2)) * (Math.Sin(dlon / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * Math.Sin(dlon / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;));\n        &lt;span class=&quot;hljs-built_in&quot;&gt;double&lt;/span&gt; angle = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * Math.Atan2(Math.Sqrt(a), Math.Sqrt(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; - a));\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; angle * RADIUS;\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a java implementation of the Haversine formula.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;AVERAGE_RADIUS_OF_EARTH_KM&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6371&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;calculateDistanceInKilometer&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; userLat, &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; userLng,\n  &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; venueLat, &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; venueLng)&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;latDistance&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Math.toRadians(userLat - venueLat);\n    &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lngDistance&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Math.toRadians(userLng - venueLng);\n\n    &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Math.sin(latDistance / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * Math.sin(latDistance / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n      + Math.cos(Math.toRadians(userLat)) * Math.cos(Math.toRadians(venueLat))\n      * Math.sin(lngDistance / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * Math.sin(lngDistance / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * Math.atan2(Math.sqrt(a), Math.sqrt(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; - a));\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;) (Math.round(AVERAGE_RADIUS_OF_EARTH_KM * c));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that here we are rounding the answer to the nearest km.&lt;/p&gt;\n    ","\n&lt;p&gt;Thanks very much for all this. I used the following code in my Objective-C iPhone app:&lt;/p&gt;\n\n\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; PIx = &lt;span class=&quot;hljs-number&quot;&gt;3.141592653589793&lt;/span&gt;;\n&lt;span class=&quot;hljs-type&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; RADIO = &lt;span class=&quot;hljs-number&quot;&gt;6371&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Mean radius of Earth in Km&lt;/span&gt;\n\n&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;convertToRadians&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; val)&lt;/span&gt; {\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val * PIx / &lt;span class=&quot;hljs-number&quot;&gt;180&lt;/span&gt;;\n}\n\n-(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt;)kilometresBetweenPlace1:(CLLocationCoordinate2D) place1 andPlace2:(CLLocationCoordinate2D) place2 {\n\n        &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; dlon = convertToRadians(place2.longitude - place1.longitude);\n        &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; dlat = convertToRadians(place2.latitude - place1.latitude);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; a = ( &lt;span class=&quot;hljs-built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;sin&lt;/span&gt;(dlat / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) + &lt;span class=&quot;hljs-built_in&quot;&gt;cos&lt;/span&gt;(convertToRadians(place1.latitude))) * &lt;span class=&quot;hljs-built_in&quot;&gt;cos&lt;/span&gt;(convertToRadians(place2.latitude)) * &lt;span class=&quot;hljs-built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;sin&lt;/span&gt;(dlon / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n        &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; angle = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;hljs-built_in&quot;&gt;asin&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;sqrt&lt;/span&gt;(a));\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; angle * RADIO;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Latitude and Longitude are in decimal. I didn&apos;t use min() for the asin() call as the distances that I&apos;m using are so small that they don&apos;t require it.&lt;/p&gt;\n\n&lt;p&gt;It gave incorrect answers until I passed in the values in Radians - now it&apos;s pretty much the same as the values obtained from Apple&apos;s Map app :-)&lt;/p&gt;\n\n&lt;p&gt;Extra update:&lt;/p&gt;\n\n&lt;p&gt;If you are using iOS4 or later then Apple provide some methods to do this so the same functionality would be achieved with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;-(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt;)kilometresBetweenPlace1:(CLLocationCoordinate2D) place1 andPlace2:(CLLocationCoordinate2D) place2 {\n\n    MKMapPoint  start, finish;\n\n\n    start = MKMapPointForCoordinate(place1);\n    finish = MKMapPointForCoordinate(place2);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; MKMetersBetweenMapPoints(start, finish) / &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is a simple PHP function that will give a very reasonable approximation (under +/-1% error margin).  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;distance&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$lat1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$lon1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$lat2&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$lon2&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-variable&quot;&gt;$pi80&lt;/span&gt; = M_PI / &lt;span class=&quot;hljs-number&quot;&gt;180&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$lat1&lt;/span&gt; *= &lt;span class=&quot;hljs-variable&quot;&gt;$pi80&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$lon1&lt;/span&gt; *= &lt;span class=&quot;hljs-variable&quot;&gt;$pi80&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$lat2&lt;/span&gt; *= &lt;span class=&quot;hljs-variable&quot;&gt;$pi80&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$lon2&lt;/span&gt; *= &lt;span class=&quot;hljs-variable&quot;&gt;$pi80&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-variable&quot;&gt;$r&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;6372.797&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// mean radius of Earth in km&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$dlat&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$lat2&lt;/span&gt; - &lt;span class=&quot;hljs-variable&quot;&gt;$lat1&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$dlon&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$lon2&lt;/span&gt; - &lt;span class=&quot;hljs-variable&quot;&gt;$lon1&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sin&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dlat&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sin&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dlat&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) + &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;cos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$lat1&lt;/span&gt;) * &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;cos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$lat2&lt;/span&gt;) * &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sin&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dlon&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) * &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sin&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dlon&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable&quot;&gt;$c&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;atan2&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;), &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;));\n    &lt;span class=&quot;hljs-variable&quot;&gt;$km&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$r&lt;/span&gt; * &lt;span class=&quot;hljs-variable&quot;&gt;$c&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//echo &apos;&amp;lt;br/&amp;gt;&apos;.$km;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$km&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As said before; the earth is NOT a sphere.  It is like an old, old baseball that Mark McGwire decided to practice with - it is full of dents and bumps.  The simpler calculations (like this) treat it like a sphere.&lt;/p&gt;\n\n&lt;p&gt;Different methods may be more or less precise according to where you are on this irregular ovoid AND how far apart your points are (the closer they are the smaller the absolute error margin).  The more precise your expectation, the more complex the math.&lt;/p&gt;\n\n&lt;p&gt;For more info: &lt;a href=&quot;http://en.wikipedia.org/wiki/Geographical_distance&quot; rel=&quot;noreferrer&quot;&gt;wikipedia geographic distance&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I post here my working example.&lt;/p&gt;\n\n&lt;p&gt;List all points in table having distance between a designated point (we use a random point - lat:45.20327, long:23.7806) less than 50 KM, with latitude &amp;amp; longitude, in MySQL (the table fields are coord_lat and coord_long):&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;List all having DISTANCE&amp;lt;50, in Kilometres (considered Earth radius 6371 KM):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; denumire, (&lt;span class=&quot;hljs-number&quot;&gt;6371&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;acos&lt;/span&gt;( &lt;span class=&quot;hljs-built_in&quot;&gt;cos&lt;/span&gt;( radians(&lt;span class=&quot;hljs-number&quot;&gt;45.20327&lt;/span&gt;) ) &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;cos&lt;/span&gt;( radians( coord_lat ) ) &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;cos&lt;/span&gt;( radians( &lt;span class=&quot;hljs-number&quot;&gt;23.7806&lt;/span&gt; ) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; radians(coord_long) ) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;sin&lt;/span&gt;( radians(&lt;span class=&quot;hljs-number&quot;&gt;45.20327&lt;/span&gt;) ) &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;sin&lt;/span&gt;( radians(coord_lat) ) )) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; distanta \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; obiective \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; coord_lat&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; coord_long&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;HAVING&lt;/span&gt; distanta&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; distanta &lt;span class=&quot;hljs-keyword&quot;&gt;desc&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The above example was tested in MySQL 5.0.95 and 5.5.16 (Linux). &lt;/p&gt;\n    ","\n&lt;p&gt;In the other answers an implementation in &lt;a href=&quot;/questions/tagged/r&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;r&apos;&quot; rel=&quot;tag&quot;&gt;r&lt;/a&gt; is missing.&lt;/p&gt;\n\n&lt;p&gt;Calculating the distance between two point is quite straightforward with the &lt;code&gt;distm&lt;/code&gt; function from the &lt;code&gt;geosphere&lt;/code&gt; package:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;distm(p1, p2, fun = distHaversine)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;where:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p1 = longitude/latitude for point(s)\np2 = longitude/latitude for point(s)\n# type of distance calculation\nfun = distCosine / distHaversine / distVincentySphere / distVincentyEllipsoid \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As the earth is not perfectly spherical, the &lt;a href=&quot;http://en.wikipedia.org/wiki/Vincenty%27s_formulae&quot; rel=&quot;noreferrer&quot;&gt;Vincenty formula for ellipsoids&lt;/a&gt; is probably the best way to calculate distances. Thus in the &lt;code&gt;geosphere&lt;/code&gt; package you use then:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;distm(p1, p2, fun = distVincentyEllipsoid)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Off course you don&apos;t necessarily have to use &lt;code&gt;geosphere&lt;/code&gt; package, you can also calculate the distance in base &lt;code&gt;R&lt;/code&gt; with a function:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;hav.dist &amp;lt;- function(long1, lat1, long2, lat2) {\n  R &amp;lt;- 6371\n  diff.long &amp;lt;- (long2 - long1)\n  diff.lat &amp;lt;- (lat2 - lat1)\n  a &amp;lt;- sin(diff.lat/2)^2 + cos(lat1) * cos(lat2) * sin(diff.long/2)^2\n  b &amp;lt;- 2 * asin(pmin(1, sqrt(a))) \n  d = R * b\n  return(d)\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The haversine is definitely a good formula for probably most cases, other answers already include it so I am not going to take the space. But it is important to note that no matter what formula is used (yes not just one). Because of the huge range of accuracy possible as well as the computation time required. The choice of formula requires a bit more thought than a simple no brainer answer. &lt;/p&gt;\n\n&lt;p&gt;This posting from a person at nasa, is the best one I found at discussing the options&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.cs.nyu.edu/visual/home/proj/tiger/gisfaq.html&quot; rel=&quot;noreferrer&quot;&gt;http://www.cs.nyu.edu/visual/home/proj/tiger/gisfaq.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For example, if you are just sorting rows by distance in a 100 miles radius. The flat earth formula will be much faster than the haversine.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;HalfPi = 1.5707963;\nR = 3956; /* the radius gives you the measurement unit*/\n\na = HalfPi - latoriginrad;\nb = HalfPi - latdestrad;\nu = a * a + b * b;\nv = - 2 * a * b * cos(longdestrad - longoriginrad);\nc = sqrt(abs(u + v));\nreturn R * c;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Notice there is just one cosine and one square root. Vs 9 of them on the Haversine formula.&lt;/p&gt;\n    ","\n&lt;p&gt;There could be a simpler solution, and more correct: The perimeter of earth is 40,000Km at the equator, about 37,000 on Greenwich (or any longitude) cycle. Thus:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pythagoras = function (lat1, lon1, lat2, lon2) {\n   function sqr(x) {return x * x;}\n   function cosDeg(x) {return Math.cos(x * Math.PI / 180.0);}\n\n   var earthCyclePerimeter = 40000000.0 * cosDeg((lat1 + lat2) / 2.0);\n   var dx = (lon1 - lon2) * earthCyclePerimeter / 360.0;\n   var dy = 37000000.0 * (lat1 - lat2) / 360.0;\n\n   return Math.sqrt(sqr(dx) + sqr(dy));\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I agree that it should be fine-tuned as, I myself said that it&apos;s an ellipsoid, so the radius to be multiplied by the cosine varies. But it&apos;s a bit more accurate. Compared with Google Maps and it did reduce the error significantly.&lt;/p&gt;\n    ","\n&lt;p&gt;All the above answers assumes the earth is a sphere. However, a more accurate approximation would be that of an oblate spheroid.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a= 6378.137#equitorial radius in km\nb= 6356.752#polar radius in km\n\ndef Distance(lat1, lons1, lat2, lons2):\n    lat1=math.radians(lat1)\n    lons1=math.radians(lons1)\n    R1=(((((a**2)*math.cos(lat1))**2)+(((b**2)*math.sin(lat1))**2))/((a*math.cos(lat1))**2+(b*math.sin(lat1))**2))**0.5 #radius of earth at lat1\n    x1=R*math.cos(lat1)*math.cos(lons1)\n    y1=R*math.cos(lat1)*math.sin(lons1)\n    z1=R*math.sin(lat1)\n\n    lat2=math.radians(lat2)\n    lons2=math.radians(lons2)\n    R1=(((((a**2)*math.cos(lat2))**2)+(((b**2)*math.sin(lat2))**2))/((a*math.cos(lat2))**2+(b*math.sin(lat2))**2))**0.5 #radius of earth at lat2\n    x2=R*math.cos(lat2)*math.cos(lons2)\n    y2=R*math.cos(lat2)*math.sin(lons2)\n    z2=R*math.sin(lat2)\n\n    return ((x1-x2)**2+(y1-y2)**2+(z1-z2)**2)**0.5\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;code&gt;pip install haversine&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;Python implementation&lt;/p&gt;\n&lt;p&gt;Origin is the center of the contiguous United States.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;from haversine import haversine, Unit\norigin = (39.50, 98.35)\nparis = (48.8567, 2.3508)\nhaversine(origin, paris, unit=Unit.MILES)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To get the answer in kilometers simply set &lt;code&gt;unit=Unit.KILOMETERS&lt;/code&gt; (that&apos;s the default).&lt;/p&gt;\n    ","\n&lt;p&gt;I don&apos;t like adding yet another answer, but the Google maps API v.3 has spherical geometry (and more). After converting your WGS84 to decimal degrees you can do this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&quot;http://maps.google.com/maps/api/js?sensor=false&amp;amp;libraries=geometry&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;  \n\ndistance = google.maps.geometry.spherical.computeDistanceBetween(\n    new google.maps.LatLng(fromLat, fromLng), \n    new google.maps.LatLng(toLat, toLng));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;No word about how accurate Google&apos;s calculations are or even what model is used (though it does say &quot;spherical&quot; rather than &quot;geoid&quot;.  By the way, the &quot;straight line&quot; distance will obviously be different from the distance if one travels on the surface of the earth which is what everyone seems to be presuming.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use the build in CLLocationDistance to calculate this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;CLLocation *location1 = [[CLLocation alloc] initWithLatitude:latitude1 longitude:longitude1];\nCLLocation *location2 = [[CLLocation alloc] initWithLatitude:latitude2 longitude:longitude2];\n[self distanceInMetersFromLocation:location1 toLocation:location2]\n\n- (int)distanceInMetersFromLocation:(CLLocation*)location1 toLocation:(CLLocation*)location2 {\n    CLLocationDistance distanceInMeters = [location1 distanceFromLocation:location2];\n    return distanceInMeters;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In your case if you want kilometers just divide by 1000.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a &lt;strong&gt;typescript&lt;/strong&gt; implementation of the Haversine formula&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;static getDistanceFromLatLonInKm(lat1: number, lon1: number, lat2: number, lon2: number): number {\n    var deg2Rad = deg =&amp;gt; {\n        return deg * Math.PI / 180;\n    }\n\n    var r = 6371; // Radius of the earth in km\n    var dLat = deg2Rad(lat2 - lat1);   \n    var dLon = deg2Rad(lon2 - lon1);\n    var a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(deg2Rad(lat1)) * Math.cos(deg2Rad(lat2)) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = r * c; // Distance in km\n    return d;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As pointed out, an accurate calculation should take into account that the earth is not a perfect sphere. Here are some comparisons of the various algorithms offered here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;geoDistance(50,5,58,3)\nHaversine: 899 km\nMaymenn: 833 km\nKeerthana: 897 km\ngoogle.maps.geometry.spherical.computeDistanceBetween(): 900 km\n\ngeoDistance(50,5,-58,-3)\nHaversine: 12030 km\nMaymenn: 11135 km\nKeerthana: 10310 km\ngoogle.maps.geometry.spherical.computeDistanceBetween(): 12044 km\n\ngeoDistance(.05,.005,.058,.003)\nHaversine: 0.9169 km\nMaymenn: 0.851723 km\nKeerthana: 0.917964 km\ngoogle.maps.geometry.spherical.computeDistanceBetween(): 0.917964 km\n\ngeoDistance(.05,80,.058,80.3)\nHaversine: 33.37 km\nMaymenn: 33.34 km\nKeerthana: 33.40767 km\ngoogle.maps.geometry.spherical.computeDistanceBetween(): 33.40770 km\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Over small distances, Keerthana&apos;s algorithm does seem to coincide with that of Google Maps. Google Maps does not seem to follow any simple algorithm, suggesting that it may be the most accurate method here.&lt;/p&gt;\n\n&lt;p&gt;Anyway, here is a Javascript implementation of Keerthana&apos;s algorithm:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function geoDistance(lat1, lng1, lat2, lng2){\n    const a = 6378.137; // equitorial radius in km\n    const b = 6356.752; // polar radius in km\n\n    var sq = x =&amp;gt; (x*x);\n    var sqr = x =&amp;gt; Math.sqrt(x);\n    var cos = x =&amp;gt; Math.cos(x);\n    var sin = x =&amp;gt; Math.sin(x);\n    var radius = lat =&amp;gt; sqr((sq(a*a*cos(lat))+sq(b*b*sin(lat)))/(sq(a*cos(lat))+sq(b*sin(lat))));\n\n    lat1 = lat1 * Math.PI / 180;\n    lng1 = lng1 * Math.PI / 180;\n    lat2 = lat2 * Math.PI / 180;\n    lng2 = lng2 * Math.PI / 180;\n\n    var R1 = radius(lat1);\n    var x1 = R1*cos(lat1)*cos(lng1);\n    var y1 = R1*cos(lat1)*sin(lng1);\n    var z1 = R1*sin(lat1);\n\n    var R2 = radius(lat2);\n    var x2 = R2*cos(lat2)*cos(lng2);\n    var y2 = R2*cos(lat2)*sin(lng2);\n    var z2 = R2*sin(lat2);\n\n    return sqr(sq(x1-x2)+sq(y1-y2)+sq(z1-z2));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is the SQL Implementation to calculate the distance in km,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SELECT UserId, ( 3959 * acos( cos( radians( your latitude here ) ) * cos( radians(latitude) ) * \ncos( radians(longitude) - radians( your longitude here ) ) + sin( radians( your latitude here ) ) * \nsin( radians(latitude) ) ) ) AS distance FROM user HAVING\ndistance &amp;lt; 5  ORDER BY distance LIMIT 0 , 5;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For further details in the implementation by programming langugage, you can just go through the php script given &lt;a href=&quot;https://www.geodatasource.com/developers/php&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This script [in PHP] calculates distances between the two points.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public static function getDistanceOfTwoPoints($source, $dest, $unit=&apos;K&apos;) {\n        $lat1 = $source[0];\n        $lon1 = $source[1];\n        $lat2 = $dest[0];\n        $lon2 = $dest[1];\n\n        $theta = $lon1 - $lon2;\n        $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));\n        $dist = acos($dist);\n        $dist = rad2deg($dist);\n        $miles = $dist * 60 * 1.1515;\n        $unit = strtoupper($unit);\n\n        if ($unit == &quot;K&quot;) {\n            return ($miles * 1.609344);\n        }\n        else if ($unit == &quot;M&quot;)\n        {\n            return ($miles * 1.609344 * 1000);\n        }\n        else if ($unit == &quot;N&quot;) {\n            return ($miles * 0.8684);\n        } \n        else {\n            return $miles;\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;Java implementation in according &lt;a href=&quot;https://en.wikipedia.org/wiki/Haversine_formula&quot; rel=&quot;nofollow noreferrer&quot;&gt;Haversine formula&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;calculateDistance&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; latPoint1, &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; lngPoint1, \n                         &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; latPoint2, &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; lngPoint2)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(latPoint1 == latPoint2 &amp;amp;&amp;amp; lngPoint1 == lngPoint2) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0d&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;EARTH_RADIUS&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6371.0&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//km value;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//converting to radians&lt;/span&gt;\n    latPoint1 = Math.toRadians(latPoint1);\n    lngPoint1 = Math.toRadians(lngPoint1);\n    latPoint2 = Math.toRadians(latPoint2);\n    lngPoint2 = Math.toRadians(lngPoint2);\n\n    &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;distance&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Math.pow(Math.sin((latPoint2 - latPoint1) / &lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) \n            + Math.cos(latPoint1) * Math.cos(latPoint2)\n            * Math.pow(Math.sin((lngPoint2 - lngPoint1) / &lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n    distance = &lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt; * EARTH_RADIUS * Math.asin(Math.sqrt(distance));\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; distance; &lt;span class=&quot;hljs-comment&quot;&gt;//km value&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To calculate the distance between two points on a sphere you need to do the &lt;a href=&quot;http://en.wikipedia.org/wiki/Great-circle_distance&quot; rel=&quot;nofollow noreferrer&quot;&gt;Great Circle calculation&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;There are a number of C/C++ libraries to help with map projection at &lt;a href=&quot;http://www.maptools.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;MapTools&lt;/a&gt; if you need to reproject your distances to a flat surface.  To do this you will need the projection string of the various coordinate systems.&lt;/p&gt;\n\n&lt;p&gt;You may also find &lt;a href=&quot;http://www.mapwindow.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;MapWindow&lt;/a&gt; a useful tool to visualise the points.  Also as its open source its a useful guide to how to use the proj.dll library, which appears to be the core open source projection library.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is my java implementation for calculation distance via decimal degrees after some search. I used mean radius of world (from wikipedia) in km. İf you want result miles then use world radius in miles.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public static double distanceLatLong2(double lat1, double lng1, double lat2, double lng2) \n{\n  double earthRadius = 6371.0d; // KM: use mile here if you want mile result\n\n  double dLat = toRadian(lat2 - lat1);\n  double dLng = toRadian(lng2 - lng1);\n\n  double a = Math.pow(Math.sin(dLat/2), 2)  + \n          Math.cos(toRadian(lat1)) * Math.cos(toRadian(lat2)) * \n          Math.pow(Math.sin(dLng/2), 2);\n\n  double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n  return earthRadius * c; // returns result kilometers\n}\n\npublic static double toRadian(double degrees) \n{\n  return (degrees * Math.PI) / 180.0d;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s the accepted answer implementation ported to Java in case anyone needs it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package com.project529.garage.util;\n\n\n/**\n * Mean radius.\n */\nprivate static double EARTH_RADIUS = 6371;\n\n/**\n * Returns the distance between two sets of latitudes and longitudes in meters.\n * &amp;lt;p/&amp;gt;\n * Based from the following JavaScript SO answer:\n * http://stackoverflow.com/questions/27928/calculate-distance-between-two-latitude-longitude-points-haversine-formula,\n * which is based on https://en.wikipedia.org/wiki/Haversine_formula (error rate: ~0.55%).\n */\npublic double getDistanceBetween(double lat1, double lon1, double lat2, double lon2) {\n    double dLat = toRadians(lat2 - lat1);\n    double dLon = toRadians(lon2 - lon1);\n\n    double a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *\n                    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    double d = EARTH_RADIUS * c;\n\n    return d;\n}\n\npublic double toRadians(double degrees) {\n    return degrees * (Math.PI / 180);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;here is an example in &lt;strong&gt;postgres&lt;/strong&gt; sql (in km, for miles version, replace 1.609344 by 0.8684 version)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;CREATE OR REPLACE FUNCTION public.geodistance(alat float, alng float, blat  \n\nfloat, blng  float)\n  RETURNS float AS\n$BODY$\nDECLARE\n    v_distance float;\nBEGIN\n\n    v_distance = asin( sqrt(\n            sin(radians(blat-alat)/2)^2 \n                + (\n                    (sin(radians(blng-alng)/2)^2) *\n                    cos(radians(alat)) *\n                    cos(radians(blat))\n                )\n          )\n        ) * cast(&apos;7926.3352&apos; as float) * cast(&apos;1.609344&apos; as float) ;\n\n\n    RETURN v_distance;\nEND \n$BODY$\nlanguage plpgsql VOLATILE SECURITY DEFINER;\nalter function geodistance(alat float, alng float, blat float, blng float)\nowner to postgres;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For those looking for an Excel formula based on WGS-84 &amp;amp; GRS-80 standards:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=ACOS(COS(RADIANS(90-Lat1))*COS(RADIANS(90-Lat2))+SIN(RADIANS(90-Lat1))*SIN(RADIANS(90-Lat2))*COS(RADIANS(Long1-Long2)))*6371\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://bluemm.blogspot.com/2007/01/excel-formula-to-calculate-distance.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I made a custom function in R to calculate haversine distance(km) between two spatial points using functions available in R base package.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;custom_hav_dist &amp;lt;- function(lat1, lon1, lat2, lon2) {\nR &amp;lt;- 6371\nRadian_factor &amp;lt;- 0.0174533\nlat_1 &amp;lt;- (90-lat1)*Radian_factor\nlat_2 &amp;lt;- (90-lat2)*Radian_factor\ndiff_long &amp;lt;-(lon1-lon2)*Radian_factor\n\ndistance_in_km &amp;lt;- 6371*acos((cos(lat_1)*cos(lat_2))+ \n                 (sin(lat_1)*sin(lat_2)*cos(diff_long)))\nrm(lat1, lon1, lat2, lon2)\nreturn(distance_in_km)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Sample output&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;custom_hav_dist(50.31,19.08,54.14,19.39)\n[1] 426.3987\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;PS: To calculate distances in miles, substitute R in function (6371) with 3958.756 (and for nautical miles, use 3440.065).&lt;/p&gt;\n    ","\n&lt;p&gt;there is a good example in here to calculate distance with PHP &lt;a href=&quot;http://www.geodatasource.com/developers/php&quot; rel=&quot;nofollow&quot;&gt;http://www.geodatasource.com/developers/php&lt;/a&gt; :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; function distance($lat1, $lon1, $lat2, $lon2, $unit) {\n\n     $theta = $lon1 - $lon2;\n     $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));\n     $dist = acos($dist);\n     $dist = rad2deg($dist);\n     $miles = $dist * 60 * 1.1515;\n     $unit = strtoupper($unit);\n\n     if ($unit == &quot;K&quot;) {\n         return ($miles * 1.609344);\n     } else if ($unit == &quot;N&quot;) {\n          return ($miles * 0.8684);\n     } else {\n          return $miles;\n     }\n }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is the implementation VB.NET, this implementation will give you the result in KM or Miles based on an Enum value you pass.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Public Enum DistanceType\n    Miles\n    KiloMeters\nEnd Enum\n\nPublic Structure Position\n    Public Latitude As Double\n    Public Longitude As Double\nEnd Structure\n\nPublic Class Haversine\n\n    Public Function Distance(Pos1 As Position,\n                             Pos2 As Position,\n                             DistType As DistanceType) As Double\n\n        Dim R As Double = If((DistType = DistanceType.Miles), 3960, 6371)\n\n        Dim dLat As Double = Me.toRadian(Pos2.Latitude - Pos1.Latitude)\n\n        Dim dLon As Double = Me.toRadian(Pos2.Longitude - Pos1.Longitude)\n\n        Dim a As Double = Math.Sin(dLat / 2) * Math.Sin(dLat / 2) + Math.Cos(Me.toRadian(Pos1.Latitude)) * Math.Cos(Me.toRadian(Pos2.Latitude)) * Math.Sin(dLon / 2) * Math.Sin(dLon / 2)\n\n        Dim c As Double = 2 * Math.Asin(Math.Min(1, Math.Sqrt(a)))\n\n        Dim result As Double = R * c\n\n        Return result\n\n    End Function\n\n    Private Function toRadian(val As Double) As Double\n\n        Return (Math.PI / 180) * val\n\n    End Function\n\nEnd Class\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I condensed the computation down by simplifying the formula.&lt;/p&gt;\n\n&lt;p&gt;Here it is in Ruby:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;include Math\nearth_radius_mi = 3959\nradians = lambda { |deg| deg * PI / 180 }\ncoord_radians = lambda { |c| { :lat =&amp;gt; radians[c[:lat]], :lng =&amp;gt; radians[c[:lng]] } }\n\n# from/to = { :lat =&amp;gt; (latitude_in_degrees), :lng =&amp;gt; (longitude_in_degrees) }\ndef haversine_distance(from, to)\n  from, to = coord_radians[from], coord_radians[to]\n  cosines_product = cos(to[:lat]) * cos(from[:lat]) * cos(from[:lng] - to[:lng])\n  sines_product = sin(to[:lat]) * sin(from[:lat])\n  return earth_radius_mi * acos(cosines_product + sines_product)\nend\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre&gt;&lt;code&gt;function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2,units) {\n  var R = 6371; // Radius of the earth in km\n  var dLat = deg2rad(lat2-lat1);  // deg2rad below\n  var dLon = deg2rad(lon2-lon1); \n  var a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n  var d = R * c; \n  var miles = d / 1.609344; \n\nif ( units == &apos;km&apos; ) {  \nreturn d; \n } else {\nreturn miles;\n}}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Chuck&apos;s solution, valid for miles also.&lt;/p&gt;\n    ","\n&lt;p&gt;In Mysql use the following function pass the parameters as using  &lt;code&gt;POINT(LONG,LAT)&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;CREATE FUNCTION `distance`(a POINT, b POINT)\n RETURNS double\n    DETERMINISTIC\nBEGIN\n\nRETURN\n\nGLength( LineString(( PointFromWKB(a)), (PointFromWKB(b)))) * 100000; -- To Make the distance in meters\n\nEND;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"590":["\n&lt;p&gt;There is a standards based replacement,&lt;code&gt;DOMContentLoaded&lt;/code&gt; that is supported by over &lt;a href=&quot;http://caniuse.com/#search=DOMContentLoaded&quot; rel=&quot;noreferrer&quot;&gt;99% of browsers&lt;/a&gt;, though not IE8:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) { \n  &lt;span class=&quot;hljs-comment&quot;&gt;//do work&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;jQuery&apos;s native function is much more complicated than just window.onload, as depicted below.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bindReady&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( readyBound ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    readyBound = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Mozilla, Opera and webkit nightlies currently support this event&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt; ) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Use the handy event callback&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;removeEventListener&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;callee&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; );\n            jQuery.&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;();\n        }, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; );\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// If IE event model is used&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;attachEvent&lt;/span&gt; ) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// ensure firing before onload,&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// maybe late but safe also for iframes&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;onreadystatechange&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt; ) {\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;detachEvent&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;onreadystatechange&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;callee&lt;/span&gt; );\n                jQuery.&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;();\n            }\n        });\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// If IE and not an iframe&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// continually check to see if the document is ready&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;doScroll&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt; == &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; ) (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( jQuery.&lt;span class=&quot;hljs-property&quot;&gt;isReady&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// If IE is used, use the trick by Diego Perini&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// http://javascript.nwbox.com/IEContentLoaded/&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;doScroll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;left&quot;&lt;/span&gt;);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;( error ) {\n                &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;( &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;callee&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; );\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n            }\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// and execute any waiting functions&lt;/span&gt;\n            jQuery.&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;();\n        })();\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// A fallback to window.onload, that will always work&lt;/span&gt;\n    jQuery.&lt;span class=&quot;hljs-property&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;( &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;load&quot;&lt;/span&gt;, jQuery.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt; );\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Edit:&lt;/p&gt;\n\n&lt;h2&gt;Here is a viable replacement for jQuery ready&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;callback&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;// in case the document is already rendered&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt;!=&lt;span class=&quot;hljs-string&quot;&gt;&apos;loading&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;callback&lt;/span&gt;();\n    &lt;span class=&quot;hljs-comment&quot;&gt;// modern browsers&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt;) &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, callback);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// IE &amp;lt;= 8&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onreadystatechange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt;==&lt;span class=&quot;hljs-string&quot;&gt;&apos;complete&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;callback&lt;/span&gt;();\n    });\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Taken from\n&lt;a href=&quot;https://plainjs.com/javascript/events/running-code-when-the-document-is-ready-15/&quot; rel=&quot;noreferrer&quot;&gt;https://plainjs.com/javascript/events/running-code-when-the-document-is-ready-15/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/jfriend00/docReady&quot; rel=&quot;noreferrer&quot;&gt;Another good domReady function here&lt;/a&gt; taken from &lt;a href=&quot;https://stackoverflow.com/a/9899701/175071&quot;&gt;https://stackoverflow.com/a/9899701/175071&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;As the accepted answer was very far from complete, I stitched together a &quot;ready&quot; function like &lt;code&gt;jQuery.ready()&lt;/code&gt; based on jQuery 1.6.2 source:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ready = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; readyList,\n        &lt;span class=&quot;hljs-title class_&quot;&gt;DOMContentLoaded&lt;/span&gt;,\n        class2type = {};\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object Boolean]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;boolean&quot;&lt;/span&gt;;\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object Number]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;number&quot;&lt;/span&gt;;\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object String]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;string&quot;&lt;/span&gt;;\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object Function]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;function&quot;&lt;/span&gt;;\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object Array]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;array&quot;&lt;/span&gt;;\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object Date]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;date&quot;&lt;/span&gt;;\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object RegExp]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;regexp&quot;&lt;/span&gt;;\n        class2type[&lt;span class=&quot;hljs-string&quot;&gt;&quot;[object Object]&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt; = {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Is the DOM ready to be used? Set to true once it occurs.&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;isReady&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-comment&quot;&gt;// A counter to track how many items to wait for before&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// the ready event fires. See #6781&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;readyWait&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Hold (or release) the ready event&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;holdReady&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; hold &lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( hold ) {\n                &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyWait&lt;/span&gt;++;\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;( &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; );\n            }\n        },\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Handle when the DOM is ready&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;ready&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; wait &lt;/span&gt;) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Either a released hold or an DOMready/load event and not yet ready&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( (wait === &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; &amp;amp;&amp;amp; !--&lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyWait&lt;/span&gt;) || (wait !== &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isReady&lt;/span&gt;) ) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( !&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt; ) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; );\n                }\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Remember that the DOM is ready&lt;/span&gt;\n                &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isReady&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// If a normal DOM Ready event fired, decrement, and wait if need be&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( wait !== &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; &amp;amp;&amp;amp; --&lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyWait&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n                }\n                &lt;span class=&quot;hljs-comment&quot;&gt;// If there are functions bound, to execute&lt;/span&gt;\n                readyList.&lt;span class=&quot;hljs-title function_&quot;&gt;resolveWith&lt;/span&gt;( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;, [ &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt; ] );\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Trigger any bound ready events&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;//if ( ReadyObj.fn.trigger ) {&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;//    ReadyObj( document ).trigger( &quot;ready&quot; ).unbind( &quot;ready&quot; );&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;//}&lt;/span&gt;\n            }\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;bindReady&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( readyList ) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n            }\n            readyList = &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;_Deferred&lt;/span&gt;();\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Catch cases where $(document).ready() is called after the&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// browser event has already occurred.&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt; ) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Handle it asynchronously to allow scripts the opportunity to delay ready&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; );\n            }\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Mozilla, Opera and webkit nightlies currently support this event&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt; ) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Use the handy event callback&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;DOMContentLoaded&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; );\n                &lt;span class=&quot;hljs-comment&quot;&gt;// A fallback to window.onload, that will always work&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;load&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; );\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// If IE event model is used&lt;/span&gt;\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;attachEvent&lt;/span&gt; ) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// ensure firing before onload,&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// maybe late but safe also for iframes&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;onreadystatechange&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;DOMContentLoaded&lt;/span&gt; );\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// A fallback to window.onload, that will always work&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;onload&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt; );\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// If IE and not a frame&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// continually check to see if the document is ready&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; toplevel = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    toplevel = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;frameElement&lt;/span&gt; == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) {}\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;doScroll&lt;/span&gt; &amp;amp;&amp;amp; toplevel ) {\n                    &lt;span class=&quot;hljs-title function_&quot;&gt;doScrollCheck&lt;/span&gt;();\n                }\n            }\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;_Deferred&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// callbacks list&lt;/span&gt;\n                callbacks = [],\n                &lt;span class=&quot;hljs-comment&quot;&gt;// stored [ context , args ]&lt;/span&gt;\n                fired,\n                &lt;span class=&quot;hljs-comment&quot;&gt;// to avoid firing when already doing so&lt;/span&gt;\n                firing,\n                &lt;span class=&quot;hljs-comment&quot;&gt;// flag to know if the deferred has been cancelled&lt;/span&gt;\n                cancelled,\n                &lt;span class=&quot;hljs-comment&quot;&gt;// the deferred itself&lt;/span&gt;\n                deferred  = {\n\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// done( f1, f2, ...)&lt;/span&gt;\n                    &lt;span class=&quot;hljs-attr&quot;&gt;done&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( !cancelled ) {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; args = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;,\n                                i,\n                                length,\n                                elem,\n                                type,\n                                _fired;\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( fired ) {\n                                _fired = fired;\n                                fired = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n                            }\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, length = args.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; length; i++ ) {\n                                elem = args[ i ];\n                                type = &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;type&lt;/span&gt;( elem );\n                                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( type === &lt;span class=&quot;hljs-string&quot;&gt;&quot;array&quot;&lt;/span&gt; ) {\n                                    deferred.&lt;span class=&quot;hljs-property&quot;&gt;done&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;( deferred, elem );\n                                } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( type === &lt;span class=&quot;hljs-string&quot;&gt;&quot;function&quot;&lt;/span&gt; ) {\n                                    callbacks.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;( elem );\n                                }\n                            }\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( _fired ) {\n                                deferred.&lt;span class=&quot;hljs-title function_&quot;&gt;resolveWith&lt;/span&gt;( _fired[ &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ], _fired[ &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ] );\n                            }\n                        }\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n                    },\n\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// resolve with given context and args&lt;/span&gt;\n                    &lt;span class=&quot;hljs-attr&quot;&gt;resolveWith&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; context, args &lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( !cancelled &amp;amp;&amp;amp; !fired &amp;amp;&amp;amp; !firing ) {\n                            &lt;span class=&quot;hljs-comment&quot;&gt;// make sure args are available (#8421)&lt;/span&gt;\n                            args = args || [];\n                            firing = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                                &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;( callbacks[ &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ] ) {\n                                    callbacks.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;( context, args );&lt;span class=&quot;hljs-comment&quot;&gt;//shifts a callback, and applies it to document&lt;/span&gt;\n                                }\n                            }\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {\n                                fired = [ context, args ];\n                                firing = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n                            }\n                        }\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n                    },\n\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// resolve with this as context and given arguments&lt;/span&gt;\n                    &lt;span class=&quot;hljs-attr&quot;&gt;resolve&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n                        deferred.&lt;span class=&quot;hljs-title function_&quot;&gt;resolveWith&lt;/span&gt;( &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt; );\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n                    },\n\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// Has this deferred been resolved?&lt;/span&gt;\n                    &lt;span class=&quot;hljs-attr&quot;&gt;isResolved&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !!( firing || fired );\n                    },\n\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// Cancel&lt;/span&gt;\n                    &lt;span class=&quot;hljs-attr&quot;&gt;cancel&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n                        cancelled = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n                        callbacks = [];\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n                    }\n                };\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; deferred;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; obj &lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ?\n                &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;( obj ) :\n                class2type[ &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(obj) ] || &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// The DOM ready check for Internet Explorer&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doScrollCheck&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isReady&lt;/span&gt; ) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// If IE is used, use the trick by Diego Perini&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// http://javascript.nwbox.com/IEContentLoaded/&lt;/span&gt;\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;doScroll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;left&quot;&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;( doScrollCheck, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; );\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// and execute any waiting functions&lt;/span&gt;\n        &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Cleanup functions for the document ready method&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt; ) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;DOMContentLoaded&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;removeEventListener&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;DOMContentLoaded&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; );\n            &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;();\n        };\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;attachEvent&lt;/span&gt; ) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;DOMContentLoaded&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt; ) {\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;detachEvent&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;onreadystatechange&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;DOMContentLoaded&lt;/span&gt; );\n                &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;();\n            }\n        };\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; fn &lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Attach the listeners&lt;/span&gt;\n        &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;bindReady&lt;/span&gt;();\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; type = &lt;span class=&quot;hljs-title class_&quot;&gt;ReadyObj&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;type&lt;/span&gt;( fn );\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Add the callback&lt;/span&gt;\n        readyList.&lt;span class=&quot;hljs-title function_&quot;&gt;done&lt;/span&gt;( fn );&lt;span class=&quot;hljs-comment&quot;&gt;//readyList is result of _Deferred()&lt;/span&gt;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ready;\n})();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How to use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;It works!&apos;&lt;/span&gt;);\n    });\n    &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Also works!&apos;&lt;/span&gt;);\n    });\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I am not sure how functional this code is, but it worked fine with my superficial tests. This took quite a while, so I hope you and others can benefit from it.&lt;/p&gt;\n\n&lt;p&gt;PS.: I suggest &lt;a href=&quot;http://closure-compiler.appspot.com/home&quot; rel=&quot;noreferrer&quot;&gt;compiling&lt;/a&gt; it.&lt;/p&gt;\n\n&lt;p&gt;Or you can use &lt;a href=&quot;http://dustindiaz.com/smallest-domready-ever&quot; rel=&quot;noreferrer&quot;&gt;http://dustindiaz.com/smallest-domready-ever&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;r&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;f&lt;/span&gt;){&lt;span class=&quot;hljs-regexp&quot;&gt;/in/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt;)?&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(r,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;,f):&lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;()}\n&lt;span class=&quot;hljs-title function_&quot;&gt;r&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){&lt;span class=&quot;hljs-comment&quot;&gt;/*code to run*/&lt;/span&gt;});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or the native function if you only need to support the new browsers (Unlike jQuery ready, this won&apos;t run if you add this after the page has loaded)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){&lt;span class=&quot;hljs-comment&quot;&gt;/*fun code to run*/&lt;/span&gt;})\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Three options:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;If &lt;code&gt;script&lt;/code&gt; is the last tag of the body, the DOM would be ready before script tag executes&lt;/li&gt;\n&lt;li&gt;When the DOM is ready, &quot;readyState&quot; will change to &quot;complete&quot;&lt;/li&gt;\n&lt;li&gt;Put everything under &apos;DOMContentLoaded&apos; event listener&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;onreadystatechange&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onreadystatechange&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt;) {\n     &lt;span class=&quot;hljs-comment&quot;&gt;// document is ready. Do your stuff here&lt;/span&gt;\n   }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Source: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document.readyState&quot; rel=&quot;noreferrer&quot;&gt;MDN&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;DOMContentLoaded&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;document is ready. I can sleep now&apos;&lt;/span&gt;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Concerned about stone age browsers:&lt;/em&gt;&lt;/strong&gt;\nGo to the jQuery source code and use the &lt;code&gt;ready&lt;/code&gt; function. In that case you are not parsing+executing the whole library you&apos;re are doing only a very small part of it.&lt;/p&gt;\n    ","\n&lt;p&gt;Place your &lt;code&gt;&amp;lt;script&amp;gt;/*JavaScript code*/&amp;lt;/script&amp;gt;&lt;/code&gt; right &lt;strong&gt;before the closing&lt;/strong&gt; &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;\n\n&lt;p&gt;Admittedly, this might not suit everyone&apos;s purposes since it requires changing the HTML file rather than just doing something in the JavaScript file a la &lt;code&gt;document.ready&lt;/code&gt;, but still...&lt;/p&gt;\n    ","\n&lt;p&gt;Poor man&apos;s solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; checkLoad = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {   \n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; !== &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt; ? &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(checkLoad, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;) : &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;loaded!&quot;&lt;/span&gt;);   \n};  \n\n&lt;span class=&quot;hljs-title function_&quot;&gt;checkLoad&lt;/span&gt;();  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/squadjot/s4EzY/&quot; rel=&quot;noreferrer&quot;&gt;View Fiddle&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Added this one, a bit better I guess, own scope, and non recursive&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tId = &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;onComplete&lt;/span&gt;()\n    }, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onComplete&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;(tId);    \n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;loaded!&quot;&lt;/span&gt;);    \n    };\n})()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/squadjot/XD7ZF/&quot; rel=&quot;noreferrer&quot;&gt;View Fiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I use this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-comment&quot;&gt;//Do work&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: This probably only works with newer browsers, especially these: &lt;a href=&quot;http://caniuse.com/#feat=domcontentloaded&quot;&gt;http://caniuse.com/#feat=domcontentloaded&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;It is year 2020 and &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag has &lt;code&gt;defer&lt;/code&gt; attribute.&lt;/p&gt;\n\n&lt;p&gt;for example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;demo_defer.js&quot;&lt;/span&gt; defer&amp;gt;&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;it specifies that the script is executed when the page has finished parsing.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/tags/att_script_defer.asp&quot; rel=&quot;noreferrer&quot;&gt;https://www.w3schools.com/tags/att_script_defer.asp&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This question was asked quite a long time ago.  For anyone just seeing this question, there is now a site called &lt;a href=&quot;http://youmightnotneedjquery.com/&quot; rel=&quot;noreferrer&quot;&gt;&quot;you might not need jquery&quot;&lt;/a&gt;  which breaks down - by level of IE support required - all the functionality of jquery and provides some alternative, smaller libraries.&lt;/p&gt;\n\n&lt;p&gt;IE8 document ready script according to &lt;a href=&quot;http://youmightnotneedjquery.com/&quot; rel=&quot;noreferrer&quot;&gt;you might not need jquery&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fn&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;loading&apos;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt;)\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, fn);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onreadystatechange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;loading&apos;&lt;/span&gt;)\n                &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;();\n        });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Really, if you care about &lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_9&quot; rel=&quot;noreferrer&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;9+&lt;/a&gt;&lt;/strong&gt; only, this code would be enough to replace &lt;code&gt;jQuery.ready&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, callback);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;If you worry about &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot; rel=&quot;noreferrer&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and some really strange and rare browsers, this will work:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;domReady&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;callback&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Mozilla, Opera and WebKit&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, callback, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// If Internet Explorer, the event model is used&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;attachEvent&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;onreadystatechange&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt; ) {\n                &lt;span class=&quot;hljs-title function_&quot;&gt;callback&lt;/span&gt;();\n            }\n        });\n        &lt;span class=&quot;hljs-comment&quot;&gt;// A fallback to window.onload, that will always work&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; oldOnload = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            oldOnload &amp;amp;&amp;amp; &lt;span class=&quot;hljs-title function_&quot;&gt;oldOnload&lt;/span&gt;();\n            &lt;span class=&quot;hljs-title function_&quot;&gt;callback&lt;/span&gt;();\n        }\n    }\n},\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Cross-browser (old browsers too) and a simple solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; docLoaded = &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; !== &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;(docLoaded);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/*\n        Your code goes here i.e. init()\n    */&lt;/span&gt;\n}, &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://jsfiddle.net/z6Lq6oxg/&quot; rel=&quot;noreferrer&quot;&gt;Showing alert in jsfiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I was recently using this for a mobile site. This is John Resig&apos;s simplified version from &quot;Pro JavaScript Techniques&quot;. It depends on addEvent.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ready = ( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; f &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( ready.&lt;span class=&quot;hljs-property&quot;&gt;done&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( ready.&lt;span class=&quot;hljs-property&quot;&gt;timer&lt;/span&gt; ) {\n      ready.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(f);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;addEvent&lt;/span&gt;( &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;load&quot;&lt;/span&gt;, isDOMReady );\n      ready.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt; = [ f ];\n      ready.&lt;span class=&quot;hljs-property&quot;&gt;timer&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(isDOMReady, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;);\n    }\n  };\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isDOMReady&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( ready.&lt;span class=&quot;hljs-property&quot;&gt;done&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getElementsByTagName&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getElementById&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt; ) {\n      &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;( ready.&lt;span class=&quot;hljs-property&quot;&gt;timer&lt;/span&gt; );\n      ready.&lt;span class=&quot;hljs-property&quot;&gt;timer&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; ready.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++ ) {\n        ready.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt;[i]();\n      }\n      ready.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n      ready.&lt;span class=&quot;hljs-property&quot;&gt;done&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    }\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ready;\n})();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;2022 version&lt;/h1&gt;\n&lt;p&gt;In 2022, all you need to do is put the defer attribute on your script, and load it in the head!&lt;/p&gt;\n&lt;p&gt;Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!doctype html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/script.js&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;defer&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;In 2022, all you need to do is put the defer attribute on your script, and load it in the head!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The jQuery answer was pretty useful to me. With a little refactory it fitted my needs well.\nI hope it helps anybody else.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onReady&lt;/span&gt; ( callback ){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; addListener = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;attachEvent&lt;/span&gt;,\n        removeListener =  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;removeEventListener&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;detachEvent&lt;/span&gt;\n        eventName = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;onreadystatechange&quot;&lt;/span&gt;\n\n    addListener.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;, eventName, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-title function_&quot;&gt;removeListener&lt;/span&gt;( eventName, &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;callee&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; )\n        &lt;span class=&quot;hljs-title function_&quot;&gt;callback&lt;/span&gt;()\n    }, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; )\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is the &lt;strong&gt;smallest code snippet to test DOM ready&lt;/strong&gt; which works across all browsers (even IE 8):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;r&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOM Ready!&apos;&lt;/span&gt;);\n});\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;r&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;f&lt;/span&gt;){&lt;span class=&quot;hljs-regexp&quot;&gt;/in/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt;)?&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;r(&apos;&lt;/span&gt;+f+&lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;):&lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;()}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See this &lt;a href=&quot;https://stackoverflow.com/questions/9899372/pure-javascript-equivalent-to-jquerys-ready-how-to-call-a-function-when-the/30319853#30319853&quot;&gt;answer&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Just add this to the bottom of your HTML page...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Your&lt;/span&gt;_Function();\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because, HTML documents are parsed by top-bottom.&lt;/p&gt;\n    ","\n&lt;h1&gt;Most minimal and 100% working&lt;/h1&gt;\n\n&lt;p&gt;I have picked the answer from &lt;a href=&quot;https://plainjs.com/javascript/events/running-code-when-the-document-is-ready-15/&quot; rel=&quot;noreferrer&quot;&gt;PlainJS&lt;/a&gt; and it&apos;s working fine for me. It extends &lt;code&gt;DOMContentLoaded&lt;/code&gt; so that it can be accepted at all the browsers.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;This function is the equivalent of jQuery&apos;s &lt;code&gt;$(document).ready()&lt;/code&gt; method:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, in contrast to jQuery, this code will only run properly in modern browsers (IE &amp;gt; 8) and it won&apos;t in case the document is already rendered at the time this script gets inserted (e.g. via Ajax). Therefore, we need to extend this a little bit:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// in case the document is already rendered&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt;!=&lt;span class=&quot;hljs-string&quot;&gt;&apos;loading&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;();\n&lt;span class=&quot;hljs-comment&quot;&gt;// modern browsers&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt;) \n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, run);\n&lt;span class=&quot;hljs-comment&quot;&gt;// IE &amp;lt;= 8&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onreadystatechange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt;==&lt;span class=&quot;hljs-string&quot;&gt;&apos;complete&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;();\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This covers basically all possibilities and is a viable replacement for the jQuery helper.&lt;/p&gt;\n    ","\n&lt;p&gt;It is worth looking in &lt;em&gt;&lt;a href=&quot;http://www.dustindiaz.com/rock-solid-addevent/&quot; rel=&quot;nofollow&quot;&gt;Rock Solid addEvent()&lt;/a&gt;&lt;/em&gt; and &lt;a href=&quot;http://www.braksator.com/how-to-make-your-own-jquery&quot; rel=&quot;nofollow&quot;&gt;http://www.braksator.com/how-to-make-your-own-jquery&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Here is the code in case the site goes down&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addEvent&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, type, fn&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt;) {\n        obj.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(type, fn, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-title class_&quot;&gt;EventCache&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(obj, type, fn);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj.&lt;span class=&quot;hljs-property&quot;&gt;attachEvent&lt;/span&gt;) {\n        obj[&lt;span class=&quot;hljs-string&quot;&gt;&quot;e&quot;&lt;/span&gt;+type+fn] = fn;\n        obj[type+fn] = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { obj[&lt;span class=&quot;hljs-string&quot;&gt;&quot;e&quot;&lt;/span&gt;+type+fn]( &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;event&lt;/span&gt; ); }\n        obj.&lt;span class=&quot;hljs-title function_&quot;&gt;attachEvent&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&quot;on&quot;&lt;/span&gt;+type, obj[type+fn] );\n        &lt;span class=&quot;hljs-title class_&quot;&gt;EventCache&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(obj, type, fn);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        obj[&lt;span class=&quot;hljs-string&quot;&gt;&quot;on&quot;&lt;/span&gt;+type] = obj[&lt;span class=&quot;hljs-string&quot;&gt;&quot;e&quot;&lt;/span&gt;+type+fn];\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EventCache&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; listEvents = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n        listEvents : listEvents,\n        add : &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;node, sEventName, fHandler&lt;/span&gt;){\n            listEvents.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;);\n        },\n        flush : &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i, item;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i = listEvents.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i = i - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){\n                item = listEvents[i];\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(item[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;removeEventListener&lt;/span&gt;){\n                    item[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;removeEventListener&lt;/span&gt;(item[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], item[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], item[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]);\n                };\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(item[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) != &lt;span class=&quot;hljs-string&quot;&gt;&quot;on&quot;&lt;/span&gt;){\n                    item[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;on&quot;&lt;/span&gt; + item[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n                };\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(item[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;detachEvent&lt;/span&gt;){\n                    item[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;detachEvent&lt;/span&gt;(item[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], item[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n                };\n                item[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][item[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]] = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n            };\n        }\n    };\n}();\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;addEvent&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;unload&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;EventCache&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;flush&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;addEvent&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;load&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;I&apos;m ready&quot;&lt;/span&gt;);});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It&apos;s always good to use JavaScript equivalents as compared to jQuery. One reason is one fewer library to depend on and they are much faster than the jQuery equivalents.&lt;/p&gt;\n\n&lt;p&gt;One fantastic reference for jQuery equivalents is &lt;a href=&quot;http://youmightnotneedjquery.com/&quot; rel=&quot;noreferrer&quot;&gt;http://youmightnotneedjquery.com/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;As far as your question is concerned, I took the below code from the above link :)\nOnly caveat is it only works with &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_9&quot; rel=&quot;noreferrer&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;9&lt;/a&gt; and later.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fn&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;loading&apos;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, fn);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This cross-browser code will call a function once the DOM is ready:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; domReady=&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;func&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; scriptText=&lt;span class=&quot;hljs-string&quot;&gt;&apos;(&apos;&lt;/span&gt;+func+&lt;span class=&quot;hljs-string&quot;&gt;&apos;)();&apos;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; scriptElement=&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;script&apos;&lt;/span&gt;);\n    scriptElement.&lt;span class=&quot;hljs-property&quot;&gt;innerText&lt;/span&gt;=scriptText;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(scriptElement);\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&apos;s how it works:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;The first line of &lt;code&gt;domReady&lt;/code&gt; calls the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method of the function to get a string representation of the function you pass in and wraps it in an expression that immediately calls the function.&lt;/li&gt;\n&lt;li&gt;The rest of &lt;code&gt;domReady&lt;/code&gt; creates a script element with the expression and appends it to the &lt;code&gt;body&lt;/code&gt; of the document.&lt;/li&gt;\n&lt;li&gt;The browser runs script tags appended to &lt;code&gt;body&lt;/code&gt; after the DOM is ready.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;For example, if you do this: &lt;code&gt;domReady(function(){alert();});&lt;/code&gt;, the following will appended to the &lt;code&gt;body&lt;/code&gt; element:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &amp;lt;script&amp;gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;();})();&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that this works only for user-defined functions. The following won&apos;t work: &lt;code&gt;domReady(alert);&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;How about this solution?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// other onload attached earlier&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt;=&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;test&apos;&lt;/span&gt;);\n};\n\ntmpPreviousFunction=&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; ? &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// our onload function&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt;=&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;another message&apos;&lt;/span&gt;);\n\n   &lt;span class=&quot;hljs-comment&quot;&gt;// execute previous one&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (tmpPreviousFunction) &lt;span class=&quot;hljs-title function_&quot;&gt;tmpPreviousFunction&lt;/span&gt;();\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;We found a quick-and-dirty cross browser implementation of ours that may do the trick for most simple cases with a minimal implementation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onReady&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onReady&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fn&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt; ? &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;() : &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-title function_&quot;&gt;onReady&lt;/span&gt;(fn);},&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;);\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I simply use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;//reference/manipulate DOM here&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And unlike &lt;code&gt;document.addEventListener(&quot;DOMContentLoaded&quot; //etc&lt;/code&gt; as in the very top answer, it works as far back as IE9 -- &lt;a href=&quot;http://caniuse.com/#search=DOMContentLoaded&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://caniuse.com/#search=DOMContentLoaded&lt;/a&gt; only indicates as recently as IE11. &lt;/p&gt;\n\n&lt;p&gt;Interestingly I stumbled upon this &lt;code&gt;setTimeout&lt;/code&gt; solution in 2009: &lt;a href=&quot;https://stackoverflow.com/questions/1381481/is-checking-for-the-readiness-of-the-dom-overkill&quot;&gt;Is checking for the readiness of the DOM overkill?&lt;/a&gt;, which probably could have been worded slightly better, as I meant &quot;is it overkill to use various frameworks&apos; more complicated approaches to check for the readiness of the DOM&quot;.&lt;/p&gt;\n\n&lt;p&gt;My best explanation for why this technique works is that, when the script with such a setTimeout has been reached, the DOM is in the middle of being parsed, so execution of the code within the setTimeout gets deferred until that operation is finished.&lt;/p&gt;\n    ","\n&lt;h1&gt;Comparison&lt;/h1&gt;\n&lt;p&gt;Here (in below snippet) is comparison of chosen available browser &quot;built-in&quot; methods and their execution sequence. Remarks&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;the &lt;code&gt;document.onload&lt;/code&gt; (X) is not supported by any modern browser (event is never &lt;a href=&quot;https://stackoverflow.com/q/5135638/860099&quot;&gt;fired&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;if you use &lt;code&gt;&amp;lt;body onload=&quot;bodyOnLoad()&quot;&amp;gt;&lt;/code&gt; (F) and at the same time &lt;code&gt;window.onload&lt;/code&gt; (E) then only first one will be executed (because it override second one)&lt;/li&gt;\n&lt;li&gt;event handler given in &lt;code&gt;&amp;lt;body onload=&quot;...&quot;&amp;gt;&lt;/code&gt; (F)  is wrapped by additional &lt;code&gt;onload&lt;/code&gt; function&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;document.onreadystatechange&lt;/code&gt; (D) not override &lt;code&gt;document .addEventListener(&apos;readystatechange&apos;...)&lt;/code&gt; (C) probably cecasue &lt;code&gt;onXYZevent-like&lt;/code&gt; methods are independent than &lt;code&gt;addEventListener&lt;/code&gt; queues (which allows add multiple listeners). Probably nothing happens between execution this two handlers.&lt;/li&gt;\n&lt;li&gt;all scripts write their timestamp in console - but scripts which also have access to &lt;code&gt;div&lt;/code&gt; write their timestamps also in body (click &quot;Full Page&quot; link after script execution to see it).&lt;/li&gt;\n&lt;li&gt;solutions &lt;code&gt;readystatechange&lt;/code&gt; (C,D) are executed multiple times by browser but for different document states:&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;loading&lt;/em&gt; - the document is loading (no fired in snippet)&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;interactive&lt;/em&gt; - the document is parsed, fired before &lt;code&gt;DOMContentLoaded&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;complete&lt;/em&gt; - the document and resources are loaded, fired before &lt;code&gt;body/window onload&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution A&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`[timestamp: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;.now()}&lt;/span&gt;] A: Head script`&lt;/span&gt;) ;\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution B&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`[timestamp: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;.now()}&lt;/span&gt;] B: DOMContentLoaded`&lt;/span&gt;);\n    });\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution C&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;readystatechange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`[timestamp: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;.now()}&lt;/span&gt;] C: ReadyState: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.readyState}&lt;/span&gt;`&lt;/span&gt;);\n    });\n   \n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution D&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onreadystatechange&lt;/span&gt; = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;=&amp;gt;&lt;/span&gt; {&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`[timestamp: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;.now()}&lt;/span&gt;] D: document.onreadystatechange ReadyState: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.readyState}&lt;/span&gt;`&lt;/span&gt;)};\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution E (never executed)&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`E: &amp;lt;body onload=&quot;...&quot;&amp;gt; override this handler`&lt;/span&gt;);\n    };\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution F&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bodyOnLoad&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`[timestamp: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;.now()}&lt;/span&gt;] F: &amp;lt;body onload=&apos;...&apos;&amp;gt;`&lt;/span&gt;);      \n      &lt;span class=&quot;hljs-title function_&quot;&gt;infoAboutOnLoad&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// additional info&lt;/span&gt;\n    }\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution X&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`document.onload is never fired`&lt;/span&gt;)};\n\n\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// HELPERS&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;txt&lt;/span&gt;) { \n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(txt);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(mydiv) mydiv.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; += txt.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;lt;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;gt;&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;gt;&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;infoAboutOnLoad&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;window.onload (after  override):&quot;&lt;/span&gt;, (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\s+/g&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;));\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`body.onload==window.onload --&amp;gt; &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.body.onload==&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.onload}&lt;/span&gt;`&lt;/span&gt;);\n    }\n            \n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;window.onload (before override):&quot;&lt;/span&gt;, (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\s+/g&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;));\n\n  &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onload&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;bodyOnLoad()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;mydiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- this script must te at the bottom of &amp;lt;body&amp;gt; --&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// solution G&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`[timestamp: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;.now()}&lt;/span&gt;] G: &amp;lt;body&amp;gt; bottom script`&lt;/span&gt;);\n  &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;Simplest way using pure JavaScript. Without jQuery:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-comment&quot;&gt;// Your code to run since DOM is loaded and ready&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you don&apos;t have to support very old browsers, here is a way to do it even when your external script is loaded with &lt;em&gt;async&lt;/em&gt; attribute:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;HTMLDocument&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&quot;loading&quot;&lt;/span&gt;)\n      &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;();\n   &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n         &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;();\n      });\n});\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ready&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;document.ready&quot;&lt;/span&gt;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For IE9+:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fn&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;loading&apos;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;();\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, fn);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s what I use, it&apos;s fast and covers all bases I think; works for everything except IE&amp;lt;9.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; { &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;On document ready&quot; commands:&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt;);\n};  \n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readyState&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;loading&apos;&lt;/span&gt;) {&lt;span class=&quot;hljs-title function_&quot;&gt;fn&lt;/span&gt;()}\n  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, fn)}\n})();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This seems to catch all cases:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;fires immediately if the DOM is already ready (if the DOM is not &quot;loading&quot;,    but either &quot;interactive&quot; or &quot;complete&quot;)&lt;/li&gt;\n&lt;li&gt;if  the DOM is still loading, it sets up an event listener for when the DOM\nis available (interactive).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The DOMContentLoaded event is available in IE9 and everything else, so I personally think it&apos;s OK to use this. Rewrite the arrow function declaration to a regular anonymous function if you&apos;re not transpiling your code from ES2015  to ES5.&lt;/p&gt;\n\n&lt;p&gt;If you want to wait until all assets are loaded, all images displayed etc then use window.onload instead.&lt;/p&gt;\n    ","\n&lt;p&gt;The setTimeout/setInterval solutions presented here will only work in specific circumstances.&lt;/p&gt;\n\n&lt;p&gt;The problem shows up especially in older Internet Explorer versions up to 8.&lt;/p&gt;\n\n&lt;p&gt;The variables affecting the success of these setTimeout/setInterval solutions are:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) dynamic or &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;HTML&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) cached or non cached requests\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) size &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; the complete &lt;span class=&quot;hljs-variable constant_&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) chunked or non chunked transfer encoding\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the original (native Javascript) code solving this specific issue is here:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;https&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//github.com/dperini/ContentLoaded&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//javascript.nwbox.com/ContentLoaded (test)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this is the code from which the jQuery team have built their implementation.&lt;/p&gt;\n    ","\n&lt;p&gt;Nowadays you should use modules. Put your code into the default function of a module and import the function into a script element.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;client.js&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n  alert (&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;hljs-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;test&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;module&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; main &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;./client.js&apos;&lt;/span&gt;;\n      main ();\n    &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you are loading jQuery near the bottom of BODY, but are having trouble with code that writes out jQuery(&amp;lt;func&amp;gt;) or jQuery(document).ready(&amp;lt;func&amp;gt;), check out &lt;a href=&quot;https://github.com/withjam/jqshim-head&quot; rel=&quot;nofollow&quot;&gt;jqShim&lt;/a&gt; on Github.&lt;/p&gt;\n\n&lt;p&gt;Rather than recreate its own document ready function, it simply holds onto the functions until jQuery is available then proceeds with jQuery as expected. The point of moving jQuery to the bottom of body is to speed up page load, and you can still accomplish it by inlining the jqShim.min.js in the head of your template.&lt;/p&gt;\n\n&lt;p&gt;I ended up writing this code to make moving all the scripts in &lt;a href=&quot;http://en.wikipedia.org/wiki/WordPress&quot; rel=&quot;nofollow&quot;&gt;WordPress&lt;/a&gt; to the footer, and just this shim code now sits directly in the header.&lt;/p&gt;\n    "]},"page":"5","randomQuestions":[{"title":"How do I profile C++ code running on Linux?","slug":"how-do-i-profile-c++-code-running-on-linux-1657384754272"},{"title":"What is dependency injection?","slug":"what-is-dependency-injection-1657387953056"},{"title":"Transitions on the CSS display property","slug":"transitions-on-the-css-display-property-1657387761601"},{"title":"Reference — What does this symbol mean in PHP?","slug":"reference-what-does-this-symbol-mean-in-php-1657384561666"},{"title":"Dynamic tabs with user-click chosen components","slug":"dynamic-tabs-with-user-click-chosen-components-1657388465232"},{"title":"How do you remove duplicates from a list whilst preserving order?","slug":"how-do-you-remove-duplicates-from-a-list-whilst-preserving-order-1657387877978"},{"title":"How to store objects in HTML5 localStorage","slug":"how-to-store-objects-in-html5-localstorage-1657387568907"},{"title":"How to create a MySQL hierarchical recursive query?","slug":"how-to-create-a-mysql-hierarchical-recursive-query-1657387662163"},{"title":"Deep cloning objects","slug":"deep-cloning-objects-1657387930865"},{"title":"How do I detect a click outside an element?","slug":"how-do-i-detect-a-click-outside-an-element-1657387505351"},{"title":"Methods in ES6 objects: using arrow functions","slug":"methods-in-es6-objects:-using-arrow-functions-1657388249058"},{"title":"Why does \"a == x or y or z\" always evaluate to True?","slug":"why-does-\"a-x-or-y-or-z\"-always-evaluate-to-true-1657384855216"},{"title":"How can I sort arrays and data in PHP?","slug":"how-can-i-sort-arrays-and-data-in-php-1657384726665"},{"title":"Error in finding last used cell in Excel with VBA","slug":"error-in-finding-last-used-cell-in-excel-with-vba-1657384584748"},{"title":"How to deal with floating point number precision in JavaScript?","slug":"how-to-deal-with-floating-point-number-precision-in-javascript-1657387293762"},{"title":"Merge/flatten an array of arrays","slug":"mergeflatten-an-array-of-arrays-1657387827427"},{"title":"Random number generator only generating one random number","slug":"random-number-generator-only-generating-one-random-number-1657385468315"},{"title":"What is __init__.py for?","slug":"what-is-__init__.py-for-1657388415243"},{"title":"Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?","slug":"should-i-avoid-the-use-of-set(preferredormaximumorminimum)size-methods-in-java-swing-1657384628399"},{"title":"The Definitive C++ Book Guide and List","slug":"the-definitive-c++-book-guide-and-list-1657384247395"}]},"__N_SSG":true}