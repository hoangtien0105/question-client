{"pageProps":{"data":{"count":610,"rows":[{"id":185,"title":"Why does this PDO statement silently fail?","slug":"why-does-this-pdo-statement-silently-fail-1657384892133","postType":"QUESTION","createdAt":"2022-07-09T16:41:32.000Z","updatedAt":"2022-07-09T16:41:32.000Z","tags":[]},{"id":184,"title":"Retrieve only the queried element in an object array in MongoDB collection","slug":"retrieve-only-the-queried-element-in-an-object-array-in-mongodb-collection-1657384890457","postType":"QUESTION","createdAt":"2022-07-09T16:41:30.000Z","updatedAt":"2022-07-09T16:41:30.000Z","tags":[{"id":675,"name":"mongodb","slug":"mongodb","createdAt":"2022-07-09T16:41:30.000Z","updatedAt":"2022-07-09T16:41:30.000Z","Questions_Tags":{"questionId":184,"tagId":675}},{"id":676,"name":"mongodb-query","slug":"mongodb-query","createdAt":"2022-07-09T16:41:30.000Z","updatedAt":"2022-07-09T16:41:30.000Z","Questions_Tags":{"questionId":184,"tagId":676}},{"id":677,"name":"aggregation-framework","slug":"aggregation-framework","createdAt":"2022-07-09T16:41:30.000Z","updatedAt":"2022-07-09T16:41:30.000Z","Questions_Tags":{"questionId":184,"tagId":677}},{"id":678,"name":"projection","slug":"projection","createdAt":"2022-07-09T16:41:30.000Z","updatedAt":"2022-07-09T16:41:30.000Z","Questions_Tags":{"questionId":184,"tagId":678}}]},{"id":183,"title":"Retrieving the last record in each group - MySQL","slug":"retrieving-the-last-record-in-each-group-mysql-1657384887369","postType":"QUESTION","createdAt":"2022-07-09T16:41:27.000Z","updatedAt":"2022-07-09T16:41:27.000Z","tags":[]},{"id":182,"title":"When does SQLiteOpenHelper onCreate() / onUpgrade() run?","slug":"when-does-sqliteopenhelper-oncreate()-onupgrade()-run-1657384883864","postType":"QUESTION","createdAt":"2022-07-09T16:41:23.000Z","updatedAt":"2022-07-09T16:41:23.000Z","tags":[{"id":667,"name":"android-sqlite","slug":"android-sqlite","createdAt":"2022-07-09T16:41:23.000Z","updatedAt":"2022-07-09T16:41:23.000Z","Questions_Tags":{"questionId":182,"tagId":667}},{"id":668,"name":"sqlexception","slug":"sqlexception","createdAt":"2022-07-09T16:41:23.000Z","updatedAt":"2022-07-09T16:41:23.000Z","Questions_Tags":{"questionId":182,"tagId":668}},{"id":669,"name":"sqliteopenhelper","slug":"sqliteopenhelper","createdAt":"2022-07-09T16:41:23.000Z","updatedAt":"2022-07-09T16:41:23.000Z","Questions_Tags":{"questionId":182,"tagId":669}}]},{"id":181,"title":"How does Access-Control-Allow-Origin header work?","slug":"how-does-access-control-allow-origin-header-work-1657384881723","postType":"QUESTION","createdAt":"2022-07-09T16:41:21.000Z","updatedAt":"2022-07-09T16:41:21.000Z","tags":[{"id":663,"name":"cross-domain","slug":"cross-domain","createdAt":"2022-07-09T16:41:21.000Z","updatedAt":"2022-07-09T16:41:21.000Z","Questions_Tags":{"questionId":181,"tagId":663}}]}]},"answers":{"181":["\n&lt;p&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; is a &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot; rel=&quot;noreferrer&quot;&gt;CORS (Cross-Origin Resource Sharing) header&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;When Site A tries to fetch content from Site B,  Site B can send an &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; response header to tell the browser that the content of this page is accessible to certain origins. (An &lt;em&gt;origin&lt;/em&gt; is a &lt;a href=&quot;https://stackoverflow.com/a/19542686/710446&quot;&gt;domain, plus a scheme and port number&lt;/a&gt;.)  By default, Site B&apos;s pages are &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot; rel=&quot;noreferrer&quot;&gt;not accessible to any other origin&lt;/a&gt;; using the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header opens a door for cross-origin access by specific requesting origins.&lt;/p&gt;\n\n&lt;p&gt;For each resource/page that Site B wants to make accessible to Site A, Site B should serve its pages with the response header:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt;: &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//siteA.com&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Modern browsers will not block cross-domain requests outright.  If Site A requests a page from Site B, the browser will actually fetch the requested page &lt;em&gt;on the network level&lt;/em&gt; and check if the response headers list Site A as a permitted requester domain.  If Site B has not indicated that Site A is allowed to access this page, the browser will trigger the &lt;code&gt;XMLHttpRequest&lt;/code&gt;&apos;s &lt;code&gt;error&lt;/code&gt; event and  deny the response data to the requesting JavaScript code.&lt;/p&gt;\n\n&lt;h1&gt;Non-simple requests&lt;/h1&gt;\n\n&lt;p&gt;What happens on the network level can be &lt;em&gt;slightly&lt;/em&gt; more complex than explained above. If the request is a &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/#toc-handling-a-not-so-simple-request&quot; rel=&quot;noreferrer&quot;&gt;&quot;non-simple&quot; request&lt;/a&gt;, the browser first sends a data-less &quot;preflight&quot; OPTIONS request, to verify that the server will accept the request. A request is non-simple when either (or both):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;using an HTTP verb other than GET or POST (e.g. PUT, DELETE)&lt;/li&gt;\n&lt;li&gt;using non-simple request headers; the only simple requests headers are:\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Accept-Language&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;Content-Type&lt;/code&gt; (this is only simple when its value is &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain&lt;/code&gt;)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If the server responds to the OPTIONS preflight with appropriate response headers (&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; for non-simple headers, &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; for non-simple verbs) that match the non-simple verb and/or non-simple headers, then the browser sends the actual request.&lt;/p&gt;\n\n&lt;p&gt;Supposing that Site A wants to send a PUT request for &lt;code&gt;/somePage&lt;/code&gt;, with a non-simple &lt;code&gt;Content-Type&lt;/code&gt; value of &lt;code&gt;application/json&lt;/code&gt;, the browser would first send a preflight request:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable constant_&quot;&gt;OPTIONS&lt;/span&gt; /somePage &lt;span class=&quot;hljs-variable constant_&quot;&gt;HTTP&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1.1&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt;: &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//siteA.com&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Request&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Method&lt;/span&gt;: &lt;span class=&quot;hljs-variable constant_&quot;&gt;PUT&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Request&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Content&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Type&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; and &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; are added by the browser automatically; you do not need to add them. This OPTIONS preflight gets the successful response headers:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt;: &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//siteA.com&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Methods&lt;/span&gt;: &lt;span class=&quot;hljs-variable constant_&quot;&gt;GET&lt;/span&gt;, &lt;span class=&quot;hljs-variable constant_&quot;&gt;POST&lt;/span&gt;, &lt;span class=&quot;hljs-variable constant_&quot;&gt;PUT&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Content&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Type&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When sending the actual request (after preflight is done), the behavior is identical to how a simple request is handled. In other words, a non-simple request whose preflight is successful is treated the same as a simple request (i.e., the server must still send &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; again for the actual response).&lt;/p&gt;\n\n&lt;p&gt;The browsers sends the actual request:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable constant_&quot;&gt;PUT&lt;/span&gt; /somePage &lt;span class=&quot;hljs-variable constant_&quot;&gt;HTTP&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1.1&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt;: &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//siteA.com&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Content&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Type&lt;/span&gt;: application/json\n\n{ &lt;span class=&quot;hljs-string&quot;&gt;&quot;myRequestContent&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;JSON is so great&quot;&lt;/span&gt; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the server sends back an &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;, just as it would for a simple request:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt;: &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//siteA.com&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://stackoverflow.com/a/13400954/710446&quot;&gt;Understanding XMLHttpRequest over CORS&lt;/a&gt; for a little more information about non-simple requests.&lt;/p&gt;\n    ","\n&lt;p&gt;Cross-Origin Resource Sharing - &lt;code&gt;CORS&lt;/code&gt; (A.K.A. Cross-Domain AJAX request) is an issue that most web developers might encounter, according to Same-Origin-Policy, browsers restrict client JavaScript in a security sandbox, usually JS cannot directly communicate with a remote server from a different domain. In the past developers created many tricky ways to achieve Cross-Domain resource request, most commonly using ways are:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Use Flash/Silverlight or server side as a &quot;proxy&quot; to communicate\nwith remote. &lt;/li&gt;\n&lt;li&gt;JSON With Padding (&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot; rel=&quot;noreferrer&quot;&gt;JSONP&lt;/a&gt;). &lt;/li&gt;\n&lt;li&gt;Embeds remote server in an iframe and communicate through fragment or window.name, refer &lt;a href=&quot;http://www.ibm.com/developerworks/library/wa-crossdomaincomm/#N10120&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Those tricky ways have more or less some issues, for example JSONP might result in security hole if developers simply &quot;eval&quot; it, and #3 above, although it works, both domains should build strict contract between each other, it neither flexible nor elegant IMHO:)&lt;/p&gt;\n\n&lt;p&gt;W3C had introduced Cross-Origin Resource Sharing (CORS) as a standard solution to provide a safe, flexible and a recommended standard way to solve this issue. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The Mechanism&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;From a high level we can simply deem CORS is a contract between client AJAX call from domain A and a page hosted on domain B, a typical Cross-Origin request/response would be:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;DomainA AJAX request headers&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DomainB&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;com&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;User&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Agent&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mozilla&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;5.0&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;NT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6.1&lt;/span&gt;; &lt;span class=&quot;hljs-title class_&quot;&gt;WOW64&lt;/span&gt;; &lt;span class=&quot;hljs-attr&quot;&gt;rv&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt;) &lt;span class=&quot;hljs-title class_&quot;&gt;Gecko&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;20100101&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Firefox&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;4.0&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Accept&lt;/span&gt; text/html,application/xhtml+xml,application/xml;q=&lt;span class=&quot;hljs-number&quot;&gt;0.9&lt;/span&gt;,*&lt;span class=&quot;hljs-comment&quot;&gt;/*;q=0.8,application/json\nAccept-Language en-us;\nAccept-Encoding gzip, deflate\nKeep-Alive 115\nOrigin http://DomainA.com \n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;DomainB response headers&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Cache&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt; private\n&lt;span class=&quot;hljs-title class_&quot;&gt;Content&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Type&lt;/span&gt; application/json; charset=utf-&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DomainA&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;com&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Content&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;87&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Proxy&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Connection&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Keep&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Alive&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Connection&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Keep&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Alive&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The blue parts I marked above were the kernal facts, &quot;Origin&quot; request header &quot;indicates where the cross-origin request or preflight request originates from&quot;, the &quot;Access-Control-Allow-Origin&quot; response header indicates this page allows remote request from DomainA (if the value is * indicate allows remote requests from any domain).&lt;/p&gt;\n\n&lt;p&gt;As I mentioned above, W3 recommended browser to implement a &quot;&lt;strong&gt;preflight request&lt;/strong&gt;&quot; before submiting the actually Cross-Origin HTTP request, in a nutshell it is an HTTP &lt;code&gt;OPTIONS&lt;/code&gt; request:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable constant_&quot;&gt;OPTIONS&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DomainB&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;com&lt;/span&gt;/foo.&lt;span class=&quot;hljs-property&quot;&gt;aspx&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;HTTP&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1.1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If foo.aspx supports OPTIONS HTTP verb, it might return response like below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable constant_&quot;&gt;HTTP&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1.1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;OK&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Wed&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mar&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GMT&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt;: &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//DomainA.com&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Methods&lt;/span&gt;: &lt;span class=&quot;hljs-variable constant_&quot;&gt;POST&lt;/span&gt;, &lt;span class=&quot;hljs-variable constant_&quot;&gt;GET&lt;/span&gt;, &lt;span class=&quot;hljs-variable constant_&quot;&gt;OPTIONS&lt;/span&gt;, &lt;span class=&quot;hljs-variable constant_&quot;&gt;HEAD&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt;: X-&lt;span class=&quot;hljs-title class_&quot;&gt;Requested&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;With&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Max&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1728000&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Connection&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Keep&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Alive&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Content&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Type&lt;/span&gt;: application/json\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Only if the response contains &quot;Access-Control-Allow-Origin&quot; AND its value is &quot;*&quot; or contain the domain who submitted the CORS request, by satisfying this mandtory condition browser will submit the actual Cross-Domain request, and cache the result in &quot;&lt;strong&gt;Preflight-Result-Cache&lt;/strong&gt;&quot;.&lt;/p&gt;\n\n&lt;p&gt;I blogged about CORS three years ago: &lt;a href=&quot;http://wayneye.com/Blog/Ajax-Cross-Origin-HTTP-request&quot; rel=&quot;noreferrer&quot;&gt;AJAX Cross-Origin HTTP request&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Question is a bit too old to answer, but I am posting this for any future reference to this question.&lt;/p&gt;\n\n&lt;p&gt;According to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot; rel=&quot;noreferrer&quot;&gt;this&lt;/a&gt; Mozilla Developer Network article,&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;A resource makes a &lt;strong&gt;cross-origin HTTP request&lt;/strong&gt; when it requests a resource from a different domain, or port than the one which the first resource itself serves.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/zn3sT.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/zn3sT.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;An &lt;strong&gt;HTML page&lt;/strong&gt; served from &lt;code&gt;http://domain-a.com&lt;/code&gt; makes an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; src request for &lt;code&gt;http://domain-b.com/image.jpg&lt;/code&gt;.&lt;br&gt;\nMany pages on the web today load resources like &lt;strong&gt;CSS stylesheets&lt;/strong&gt;, &lt;strong&gt;images&lt;/strong&gt; and &lt;strong&gt;scripts&lt;/strong&gt; from separate domains (thus it should be cool).&lt;/p&gt;\n\n&lt;h1&gt;Same-Origin Policy&lt;/h1&gt;\n\n&lt;p&gt;For security reasons, browsers restrict &lt;strong&gt;cross-origin HTTP&lt;/strong&gt; requests &lt;strong&gt;initiated from within scripts&lt;/strong&gt;.&lt;br&gt;\nFor example, &lt;code&gt;XMLHttpRequest&lt;/code&gt; and &lt;code&gt;Fetch&lt;/code&gt; follow the &lt;strong&gt;same-origin policy&lt;/strong&gt;.&lt;br&gt;\nSo, a web application using &lt;code&gt;XMLHttpRequest&lt;/code&gt; or &lt;code&gt;Fetch&lt;/code&gt; could only make &lt;strong&gt;HTTP requests&lt;/strong&gt; to &lt;strong&gt;its own domain&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;h1&gt;Cross-Origin Resource Sharing (CORS)&lt;/h1&gt;\n\n&lt;p&gt;To improve web applications, developers asked browser vendors to allow cross-domain requests.&lt;/p&gt;\n\n&lt;p&gt;The &lt;strong&gt;Cross-Origin Resource Sharing (CORS)&lt;/strong&gt; mechanism gives web servers &lt;strong&gt;cross-domain access controls&lt;/strong&gt;, which enable secure cross-domain data transfers.&lt;br&gt;\nModern browsers use &lt;strong&gt;CORS&lt;/strong&gt; in an &lt;strong&gt;API container&lt;/strong&gt; - such as &lt;code&gt;XMLHttpRequest&lt;/code&gt; or &lt;code&gt;Fetch&lt;/code&gt; - to mitigate risks of cross-origin HTTP requests.&lt;/p&gt;\n\n&lt;h2&gt;How CORS works (&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header)&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot; rel=&quot;noreferrer&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The CORS standard describes new HTTP headers which provide browsers and servers a way to request remote URLs only when they have permission.&lt;/p&gt;\n  \n  &lt;p&gt;Although some validation and authorization can be performed by the server, &lt;strong&gt;it is generally the browser&apos;s responsibility&lt;/strong&gt; to support these headers and honor the restrictions they impose.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;h1&gt;Example&lt;/h1&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;The browser sends the &lt;code&gt;OPTIONS&lt;/code&gt; request with an &lt;code&gt;Origin HTTP&lt;/code&gt; header. &lt;/p&gt;\n\n&lt;p&gt;The value of this header is the domain that served the parent page. When a page from &lt;code&gt;http://www.example.com&lt;/code&gt; attempts to access a user&apos;s data in &lt;code&gt;service.example.com&lt;/code&gt;, the following request header would be sent to &lt;code&gt;service.example.com&lt;/code&gt;:&lt;/p&gt;\n\n&lt;p&gt;Origin: &lt;a href=&quot;http://www.example.com&quot; rel=&quot;noreferrer&quot;&gt;http://www.example.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The server at &lt;code&gt;service.example.com&lt;/code&gt; may respond with:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;An &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; (ACAO) header in its response indicating which origin sites are allowed.&lt;br&gt;\nFor example:  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Access-Control-Allow-Origin: http://www.example.com&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;An error page if the server does not allow the cross-origin request&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;An &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; (ACAO) header with a wildcard that allows all domains:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;Whenever I start thinking about CORS, my intuition about which site hosts the headers is incorrect, just as you described in your question. For me, it helps to think about the purpose of the same origin policy.&lt;/p&gt;\n&lt;p&gt;The purpose of the same origin policy is to protect you from malicious JavaScript on siteA.com accessing private information you&apos;ve chosen to share only with siteB.com. Without the same origin policy, JavaScript written by the authors of siteA.com could make your browser make requests to siteB.com, using your authentication cookies for siteB.com. In this way, siteA.com could steal the secret information you share with siteB.com.&lt;/p&gt;\n&lt;p&gt;Sometimes you need to work cross domain, which is where CORS comes in. CORS relaxes the same origin policy for siteB.com, using the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header to list other domains (siteA.com) that are trusted to run JavaScript that can interact with siteB.com.&lt;/p&gt;\n&lt;p&gt;To understand which domain should serve the CORS headers, consider this. You visit malicious.com, which contains some JavaScript that tries to make a cross domain request to mybank.com. It should be up to mybank.com, not malicious.com, to decide whether or not it sets CORS headers that relax the same origin policy allowing the JavaScript from malicious.com to interact with it. If malicous.com could set its own CORS headers allowing its own JavaScript access to mybank.com, this would completely nullify the same origin policy.&lt;/p&gt;\n&lt;p&gt;I think the reason for my bad intuition is the point of view I have when developing a site. It&apos;s &lt;strong&gt;my&lt;/strong&gt; site, with all &lt;strong&gt;my&lt;/strong&gt; JavaScript, therefore it isn&apos;t doing anything malicious and it should be up to &lt;strong&gt;me&lt;/strong&gt; to specify which other sites &lt;strong&gt;my&lt;/strong&gt; JavaScript can interact with. When in fact I should be thinking which &lt;strong&gt;other&lt;/strong&gt; sites JavaScript are trying to interact with my site and should I use CORS to allow them?&lt;/p&gt;\n    ","\n&lt;p&gt;From my own experience, it&apos;s hard to find a simple explanation why CORS is even a concern.&lt;/p&gt;\n&lt;p&gt;Once you understand why it&apos;s there, the headers and discussion becomes a lot clearer.  I&apos;ll give it a shot in a few lines.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;It&apos;s all about cookies. Cookies are stored on a client by their domain.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;An example story: On your computer, there&apos;s a cookie for &lt;code&gt;yourbank.com&lt;/code&gt;. Maybe your session is in there.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Key point:&lt;/strong&gt; When a client makes a request to the server, it will send the cookies stored under the domain for that request.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;You&apos;re logged in on your browser to &lt;code&gt;yourbank.com&lt;/code&gt;.  You request to see all your accounts, and cookies are sent for &lt;code&gt;yourbank.com&lt;/code&gt;.  &lt;code&gt;yourbank.com&lt;/code&gt; receives the pile of cookies and sends back its response (your accounts).&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;If another client makes a &lt;em&gt;cross origin&lt;/em&gt; request to a server, those cookies are sent along, just as before.  Ruh roh.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;You browse to &lt;code&gt;malicious.com&lt;/code&gt;. Malicious makes a bunch of requests to different banks, including &lt;code&gt;yourbank.com&lt;/code&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Since the cookies are validated as expected, the server will authorize the response.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Those cookies get gathered up and sent along - and now, &lt;code&gt;malicious.com&lt;/code&gt; has a response from &lt;code&gt;yourbank&lt;/code&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Yikes.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;So now, a few questions and answers become apparent:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&quot;Why don&apos;t we just block the browser from doing that?&quot; Yep. CORS.&lt;/li&gt;\n&lt;li&gt;&quot;How do we get around it?&quot; Have the server tell the request that CORS is OK.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;em&gt;1. A client downloads javascript code MyCode.js from &lt;a href=&quot;http://siteA&quot; rel=&quot;noreferrer&quot;&gt;http://siteA&lt;/a&gt; - the origin.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;The code that does the downloading - your html script tag or xhr from javascript or whatever - came from, let&apos;s say, &lt;a href=&quot;http://siteZ&quot; rel=&quot;noreferrer&quot;&gt;http://siteZ&lt;/a&gt;.  And, when the browser requests MyCode.js, it sends an Origin: header saying &quot;Origin: &lt;a href=&quot;http://siteZ&quot; rel=&quot;noreferrer&quot;&gt;http://siteZ&lt;/a&gt;&quot;, because it can see that you&apos;re requesting to siteA and siteZ != siteA.  (You cannot stop or interfere with this.)&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;2. The response header of MyCode.js contains Access-Control-Allow-Origin: &lt;a href=&quot;http://siteB&quot; rel=&quot;noreferrer&quot;&gt;http://siteB&lt;/a&gt;, which I thought meant that MyCode.js was allowed to make cross-origin references to the site B.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;no.  It means, Only siteB is allowed to do this request.  So your request for MyCode.js from siteZ gets an error instead, and the browser typically gives you nothing.  But if you make your server return A-C-A-O: siteZ instead, you&apos;ll get MyCode.js .  Or if it sends &apos;*&apos;, that&apos;ll work, that&apos;ll let everybody in.  Or if the server always sends the string from the Origin: header... but... for security, if you&apos;re afraid of hackers, your server should only allow origins on a shortlist, that are allowed to make those requests.&lt;/p&gt;\n\n&lt;p&gt;Then, MyCode.js comes from siteA.  When it makes requests to siteB, they are all cross-origin, the browser sends Origin: siteA, and siteB has to take the siteA, recognize it&apos;s on the short list of allowed requesters, and send back A-C-A-O: siteA.  Only then will the browser let your script get the result of those requests.&lt;/p&gt;\n    ","\n&lt;p&gt;Using &lt;strong&gt;React&lt;/strong&gt; and &lt;strong&gt;Axios&lt;/strong&gt;, join proxy link to the URL and add header as shown below&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;https://cors-anywhere.herokuapp.com/&lt;/code&gt; + &lt;code&gt;Your API URL&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Just by adding the Proxy link will work, but it can also throw error for No Access again. Hence better to add header as shown below.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;axios.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`https://cors-anywhere.herokuapp.com/[YOUR_API_URL]`&lt;/span&gt;,{&lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: {&lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;*&apos;&lt;/span&gt;}})\n      .&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-attr&quot;&gt;response&lt;/span&gt;:data);\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h1&gt;WARNING: Not to be used in Production&lt;/h1&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;This is just a quick fix, if you&apos;re struggling with why you&apos;re not able to get a response, you CAN use this.\n  But again it&apos;s &lt;strong&gt;not the best answer for production.&lt;/strong&gt;&lt;/p&gt;\n  \n  &lt;p&gt;Got several downvotes and it completely makes sense, I should have added the warning a long time ago.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;If you want just to test a cross domain application in which the browser blocks your request, then you can just open your browser in unsafe mode and test your application without changing your code and without making your code unsafe.\nFrom MAC OS you can do this from the terminal line:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;open -a &lt;span class=&quot;hljs-title class_&quot;&gt;Google&lt;/span&gt;\\ &lt;span class=&quot;hljs-title class_&quot;&gt;Chrome&lt;/span&gt; --args --disable-web-security --user-data-dir\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you are using PHP, try adding the following code at the beginning of the php file:&lt;/p&gt;\n\n&lt;p&gt;If you are using localhost, try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Origin: *&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are using external domains such as server, try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Origin: http://www.website.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I work with express 4 and node 7.4 and angular,I had the same problem me help this:&lt;br&gt;\na) server side: in file app.js I give headers to all response like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;app.&lt;span class=&quot;hljs-title function_&quot;&gt;use&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;req, res, next&lt;/span&gt;) {  \n      res.&lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt;, req.&lt;span class=&quot;hljs-property&quot;&gt;headers&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;origin&lt;/span&gt;);\n      res.&lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Headers&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Origin, X-Requested-With, Content-Type, Accept&quot;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;();\n });  \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;this must have before all router&lt;/strong&gt;.&lt;br&gt;\nI saw a lot of added this headers:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;res.&lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Headers&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;);\nres.&lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Credentials&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\nres.&lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Methods&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;GET,PUT,POST,DELETE&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;but i dont need that,&lt;br&gt;\nb) client side: in send ajax you need add: &quot;withCredentials: true,&quot; like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$http({\n     &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n     &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;url, \n     withCredentials: true,\n     data : {}\n   }).then(function(response){\n        // code  \n   }, function (response) {\n         // code \n   });\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In Python I have been using the &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Flask-CORS&lt;/code&gt; library&lt;/a&gt; with great success. It makes dealing with CORS super easy and painless. I added some code from the library&apos;s documentation below. &lt;/p&gt;\n\n&lt;p&gt;Installing:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$ pip install -U flask-cors\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Simple example that allows CORS for all domains on all routes:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Flask&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_cors &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;CORS&lt;/span&gt;\n\napp = &lt;span class=&quot;hljs-title class_&quot;&gt;Flask&lt;/span&gt;(__name__)\n&lt;span class=&quot;hljs-title function_&quot;&gt;CORS&lt;/span&gt;(app)\n\n@app.&lt;span class=&quot;hljs-title function_&quot;&gt;route&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;)\ndef &lt;span class=&quot;hljs-title function_&quot;&gt;helloWorld&lt;/span&gt;():\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, cross-origin-world!&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more specific examples see the documentation. I have used the simple example above to get around the CORS issue in an ionic application I am building that has to access a separate flask server.&lt;/p&gt;\n    ","\n&lt;p&gt;For cross origin sharing, set header: &lt;code&gt;&apos;Access-Control-Allow-Origin&apos;:&apos;*&apos;;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Php: &lt;code&gt;header(&apos;Access-Control-Allow-Origin&apos;:&apos;*&apos;);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Node: &lt;code&gt;app.use(&apos;Access-Control-Allow-Origin&apos;:&apos;*&apos;);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This will allow to share content for different domain.&lt;/p&gt;\n    ","\n&lt;p&gt;Simply paste the following code in your web.config file.&lt;/p&gt;\n\n&lt;p&gt;Noted that, you have to paste the following code under &lt;code&gt;&amp;lt;system.webServer&amp;gt;&lt;/code&gt; tag&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &amp;lt;httpProtocol&amp;gt;  \n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;customHeaders&lt;/span&gt;&amp;gt;&lt;/span&gt;  \n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  \n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Headers&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  \n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Methods&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;GET, POST, PUT, DELETE, OPTIONS&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;  \n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;customHeaders&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;  \n  &amp;lt;/httpProtocol&amp;gt;  \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I can&apos;t configure it in back-end server but with these extensions in browsers work for me:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;For Firefox:&lt;/strong&gt;\n&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/cors-everywhere/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Cors Everywhere&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;For Google Chrome:&lt;/strong&gt;\n&lt;a href=&quot;https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf?hl=en-US&quot; rel=&quot;nofollow noreferrer&quot;&gt;Allow CORS: Access-Control-Allow-Origin&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Note: CORS work for me with this configuration:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/eDD7P.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/eDD7P.jpg&quot; alt=&quot;Allow CORS options&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/27QWb.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/27QWb.jpg&quot; alt=&quot;CORS Everywhere options&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;Nginx and Appache&lt;/h1&gt;\n&lt;p&gt;As addition to &lt;a href=&quot;https://stackoverflow.com/a/10636765/860099&quot;&gt;apsillers answer&lt;/a&gt; I would like to add &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing#How_CORS_works&quot; rel=&quot;nofollow noreferrer&quot;&gt;wiki graph&lt;/a&gt; which shows when request is simple or not (and OPTIONS pre-flight request is send or not)&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/BTFel.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/BTFel.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;For simple request (e.g. &lt;a href=&quot;https://en.wikipedia.org/wiki/Inline_linking&quot; rel=&quot;nofollow noreferrer&quot;&gt;hotlinking images&lt;/a&gt;) you don&apos;t need to change your server configuration files but you can add headers in application (hosted on server, e.g. in php) like Melvin Guerrero mention in his &lt;a href=&quot;https://stackoverflow.com/a/41723271/860099&quot;&gt;answer&lt;/a&gt; - but &lt;a href=&quot;https://stackoverflow.com/a/46917668/860099&quot;&gt;remember&lt;/a&gt;: if you add full cors headers in you server (config) and at same time you allow simple cors on application (e.g. php) this will not work at all.&lt;/p&gt;\n&lt;p&gt;And here are configurations for two popular servers&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;turn on &lt;strong&gt;CORS on Nginx&lt;/strong&gt; (&lt;code&gt;nginx.conf&lt;/code&gt; file)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;location ~ ^&lt;span class=&quot;hljs-regexp&quot;&gt;/index\\.php(/&lt;/span&gt;|$) {\n   ...\n    add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;$http_origin&quot;&lt;/span&gt; always; # &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; you change &lt;span class=&quot;hljs-string&quot;&gt;&quot;$http_origin&quot;&lt;/span&gt; to &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; you shoud get same result - allow all domain to &lt;span class=&quot;hljs-variable constant_&quot;&gt;CORS&lt;/span&gt; (but better change it to your particular domain)\n    add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Credentials&apos;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;true&apos;&lt;/span&gt; always;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ($request_method = &lt;span class=&quot;hljs-variable constant_&quot;&gt;OPTIONS&lt;/span&gt;) {\n        add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Origin&apos;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;$http_origin&quot;&lt;/span&gt;; # &lt;span class=&quot;hljs-variable constant_&quot;&gt;DO&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;NOT&lt;/span&gt; remove &lt;span class=&quot;hljs-variable constant_&quot;&gt;THIS&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;LINES&lt;/span&gt; (doubled &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; outside &lt;span class=&quot;hljs-string&quot;&gt;&apos;if&apos;&lt;/span&gt; above)\n        add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Credentials&apos;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;true&apos;&lt;/span&gt;;\n        add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Max-Age&apos;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1728000&lt;/span&gt;; # cache preflight value &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; days\n        add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Methods&apos;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;GET, POST, OPTIONS&apos;&lt;/span&gt;;  # arbitrary methods\n        add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Headers&apos;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;My-First-Header,My-Second-Header,Authorization,Content-Type,Accept,Origin&apos;&lt;/span&gt;; # arbitrary headers\n        add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Length&apos;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        add_header &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;text/plain charset=UTF-8&apos;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;204&lt;/span&gt;;\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;turn on &lt;strong&gt;CORS on Appache&lt;/strong&gt; (&lt;code&gt;.htaccess&lt;/code&gt; file)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;# ------------------------------------------------------------------------------\n# | &lt;span class=&quot;hljs-title class_&quot;&gt;Cross&lt;/span&gt;-domain &lt;span class=&quot;hljs-title class_&quot;&gt;Ajax&lt;/span&gt; requests                                                 |\n# ------------------------------------------------------------------------------\n\n# &lt;span class=&quot;hljs-title class_&quot;&gt;Enable&lt;/span&gt; cross-origin &lt;span class=&quot;hljs-title class_&quot;&gt;Ajax&lt;/span&gt; requests.\n# &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//code.google.com/p/html5security/wiki/CrossOriginRequestSecurity&lt;/span&gt;\n# &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//enable-cors.org/&lt;/span&gt;\n\n# change * (allow any domain) below to your domain\n&lt;span class=&quot;hljs-title class_&quot;&gt;Header&lt;/span&gt; set &lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Header&lt;/span&gt; always set &lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Methods&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST, GET, OPTIONS, DELETE, PUT&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Header&lt;/span&gt; always set &lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Headers&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;My-First-Header,My-Second-Header,Authorization, content-type, csrf-token&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Header&lt;/span&gt; always set &lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Credentials&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;The Access-Control-Allow-Origin response header indicates whether the\n  response can be shared with requesting code from the given origin.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Header&lt;/span&gt; type &lt;span class=&quot;hljs-title class_&quot;&gt;Response&lt;/span&gt;       header\n&lt;span class=&quot;hljs-title class_&quot;&gt;Forbidden&lt;/span&gt; header name      no\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;A response that tells the browser to allow code from any origin to\n  access a resource will include the following:&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Access&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Control&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Allow&lt;/span&gt;-&lt;span class=&quot;hljs-title class_&quot;&gt;Origin&lt;/span&gt;: *\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more info, visit &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;....&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;ONLY TEMPORARY SOLUTION for Testing:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Who can&apos;t control backend for &lt;code&gt;Options 405 Method Not Allowed&lt;/code&gt;.&lt;br&gt;\nWorkaround for Chrome browser.&lt;br&gt;\nexecute in command line:&lt;br&gt;\n&lt;code&gt;&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot; --disable-web-security --user-data-dir=&quot;path_to_profile&quot;&lt;/code&gt;&lt;br&gt;\nExample:&lt;br&gt;\n&lt;code&gt;&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot; --disable-web-security --user-data-dir=&quot;C:\\Users\\vital\\AppData\\Local\\Google\\Chrome\\User Data\\Profile 2&quot;&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;For .NET Core 3.1 API With Angular&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Startup.cs&lt;/strong&gt; : Add CORS&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;//SERVICES&lt;/span&gt;\n    public &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ConfigureServices&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;IServiceCollection&lt;/span&gt; services){\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//CORS (Cross Origin Resource Sharing)&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//=====================================&lt;/span&gt;\n        services.&lt;span class=&quot;hljs-title class_&quot;&gt;AddCors&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//MIDDLEWARES&lt;/span&gt;\n    public &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Configure&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;IApplicationBuilder&lt;/span&gt; app, &lt;span class=&quot;hljs-title class_&quot;&gt;IWebHostEnvironment&lt;/span&gt; env)\n    {\n        app.&lt;span class=&quot;hljs-title class_&quot;&gt;UseRouting&lt;/span&gt;();\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//ORDER: CORS -&amp;gt; Authentication -&amp;gt; Authorization)&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//CORS (Cross Origin Resource Sharing)&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//=====================================  &lt;/span&gt;\n        app.&lt;span class=&quot;hljs-title class_&quot;&gt;UseCors&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;=&amp;gt;&lt;/span&gt;x.&lt;span class=&quot;hljs-title class_&quot;&gt;AllowAnyHeader&lt;/span&gt;().&lt;span class=&quot;hljs-title class_&quot;&gt;AllowAnyMethod&lt;/span&gt;().&lt;span class=&quot;hljs-title class_&quot;&gt;WithOrigins&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:4200&quot;&lt;/span&gt;));\n\n        app.&lt;span class=&quot;hljs-title class_&quot;&gt;UseHttpsRedirection&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt; : Enable CORS For Authorized Controller&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//Authorize all methods inside this controller&lt;/span&gt;\n [&lt;span class=&quot;hljs-title class_&quot;&gt;Authorize&lt;/span&gt;]\n [&lt;span class=&quot;hljs-title class_&quot;&gt;EnableCors&lt;/span&gt;()]\n public &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UsersController&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ControllerBase&lt;/span&gt;\n {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//ActionMethods&lt;/span&gt;\n }\n&lt;/code&gt;&lt;/pre&gt;\n    "],"182":["\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;SQLiteOpenHelper&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#onCreate%28android.database.sqlite.SQLiteDatabase%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;onCreate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#onUpgrade%28android.database.sqlite.SQLiteDatabase,%20int,%20int%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;onUpgrade()&lt;/code&gt;&lt;/a&gt; callbacks are invoked when the database is actually opened, for example by a call to &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#getWritableDatabase%28%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;getWritableDatabase()&lt;/code&gt;&lt;/a&gt;. The database is not opened when the database helper object itself is created.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;SQLiteOpenHelper&lt;/code&gt; versions the database files. The version number is the &lt;code&gt;int&lt;/code&gt; argument passed to the &lt;a href=&quot;http://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html#SQLiteOpenHelper%28android.content.Context,%20java.lang.String,%20android.database.sqlite.SQLiteDatabase.CursorFactory,%20int%29&quot; rel=&quot;noreferrer&quot;&gt;constructor&lt;/a&gt;. In the database file, the version number is stored in &lt;a href=&quot;http://www.sqlite.org/pragma.html#pragma_schema_version&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;PRAGMA user_version&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;onCreate()&lt;/code&gt; is only run when the database file did not exist and was just created. If &lt;code&gt;onCreate()&lt;/code&gt; returns successfully (doesn&apos;t throw an exception), the database is assumed to be created with the requested version number. As an implication, you should not catch &lt;code&gt;SQLException&lt;/code&gt;s in &lt;code&gt;onCreate()&lt;/code&gt; yourself.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;onUpgrade()&lt;/code&gt; is only called when the database file exists but the stored version number is lower than requested in the constructor. The &lt;code&gt;onUpgrade()&lt;/code&gt; should update the table schema to the requested version.&lt;/p&gt;\n\n&lt;p&gt;When changing the table schema in code (&lt;code&gt;onCreate()&lt;/code&gt;), you should make sure the database is updated. Two main approaches:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Delete the old database file so that &lt;code&gt;onCreate()&lt;/code&gt; is run again. This is often preferred at development time where you have control over the installed versions and data loss is not an issue. Some ways to delete the database file:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Uninstall the application. Use the application manager or &lt;code&gt;adb uninstall your.package.name&lt;/code&gt; from the shell.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Clear application data. Use the application manager.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Increment the database version so that &lt;code&gt;onUpgrade()&lt;/code&gt; is invoked. This is slightly more complicated as more code is needed.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;For development time schema upgrades where data loss is not an issue, you can just use &lt;code&gt;execSQL(&quot;DROP TABLE IF EXISTS &amp;lt;tablename&amp;gt;&quot;)&lt;/code&gt; in to remove your existing tables and call &lt;code&gt;onCreate()&lt;/code&gt; to recreate the database.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;For released versions, you should implement data migration in &lt;code&gt;onUpgrade()&lt;/code&gt; so your users don&apos;t lose their data.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;To further add missing points here, as per the request by Jaskey&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Database version is stored within the &lt;code&gt;SQLite&lt;/code&gt; database file.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;catch is the constructor&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;SQLiteOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; version)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So when the database helper constructor is called with a &lt;code&gt;name&lt;/code&gt; (2nd param), platform checks if the database exists or not and if the database exists, it gets the version information from the database file header and triggers the right call back&lt;/p&gt;\n\n&lt;p&gt;As already explained in the older answer, if the database with the name doesn&apos;t exists, it triggers &lt;code&gt;onCreate&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Below explanation explains &lt;code&gt;onUpgrade&lt;/code&gt; case with an example.&lt;/p&gt;\n\n&lt;p&gt;Say, your first version of application had the &lt;code&gt;DatabaseHelper&lt;/code&gt; (extending &lt;code&gt;SQLiteOpenHelper&lt;/code&gt;) with constructor passing version as &lt;code&gt;1&lt;/code&gt; and then you provided an upgraded application with the new source code having version passed as &lt;code&gt;2&lt;/code&gt;, then automatically when the &lt;code&gt;DatabaseHelper&lt;/code&gt; is constructed, platform triggers &lt;code&gt;onUpgrade&lt;/code&gt; by seeing the file already exists, but the version is lower than the current version which you have passed.&lt;/p&gt;\n\n&lt;p&gt;Now say you are planing to give a third version of application with db version as &lt;code&gt;3&lt;/code&gt; (db version is increased only when database schema is to be modified). In such incremental upgrades, you have to write the upgrade logic from each version incrementally for a better maintainable code&lt;/p&gt;\n\n&lt;p&gt;Example pseudo code below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\npublic void onUpgrade(SQLiteDatabase db, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; oldVersion, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; newVersion) {\n  switch(oldVersion) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:\n       &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;upgrade logic &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; version &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:\n       &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;upgrade logic &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; version &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;:\n       &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;upgrade logic &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; version &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n       break;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:\n       throw &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(\n                &quot;onUpgrade() with unknown oldVersion &quot; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; oldVersion);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Notice the missing &lt;code&gt;break&lt;/code&gt; statement in case &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;. This is what I mean by incremental upgrade.&lt;/p&gt;\n\n&lt;p&gt;Say if the old version is &lt;code&gt;2&lt;/code&gt; and new version is &lt;code&gt;4&lt;/code&gt;, then the logic will upgrade the database from &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;3&lt;/code&gt; and then to &lt;code&gt;4&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;If old version is &lt;code&gt;3&lt;/code&gt; and new version is &lt;code&gt;4&lt;/code&gt;, it will just run the upgrade logic for &lt;code&gt;3&lt;/code&gt; to &lt;code&gt;4&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;onCreate()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;When we create DataBase at a first time (i.e Database is not exists) &lt;code&gt;onCreate()&lt;/code&gt; create database with version which is passed in \n&lt;code&gt;SQLiteOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;onCreate()&lt;/code&gt; method is creating the tables youve defined and executing any other code youve written. However, this method will only be called if the SQLite file is missing in your apps data directory (&lt;code&gt;/data/data/your.apps.classpath/databases&lt;/code&gt;).  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;This method will not be called if youve changed your code and relaunched in the emulator.  If you want &lt;code&gt;onCreate()&lt;/code&gt; to run you need to use adb to delete the SQLite database file.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;onUpgrade()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;SQLiteOpenHelper&lt;/code&gt; should call the super constructor.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;onUpgrade()&lt;/code&gt; method will only be called when the version integer is larger than the current version running in the app.&lt;/li&gt;\n&lt;li&gt;If you want the &lt;code&gt;onUpgrade()&lt;/code&gt; method to be called, you need to increment the version number in your code.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;May be I am too late but I would like to share my short and sweet answer.\nPlease check &lt;a href=&quot;https://stackoverflow.com/a/31605916/2110812&quot;&gt;&lt;strong&gt;Answer&lt;/strong&gt;&lt;/a&gt;  for a same problem. It will definitely help you. No more deep specifications.&lt;/p&gt;\n\n&lt;p&gt;If you are confident about syntax for creating table, than it may happen when you add new column in your same table, for that...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1) Uninstall from your device and run it again.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2) Setting -&amp;gt; app -&amp;gt; ClearData&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; Change &lt;code&gt;DATABASE_VERSION&lt;/code&gt; in your &quot;DatabaseHandler&quot; class (If you have added new column than it will upgrade automatically)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;public DatabaseHandler(Context context) {\n    super(context, DATABASE_NAME, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, DATABASE_VERSION);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; Change &lt;code&gt;DATABASE_NAME&lt;/code&gt; in your &quot;DatabaseHandler&quot; class (I faced same problem. But I succeed by changing &lt;code&gt;DATABASE_NAME&lt;/code&gt;.)&lt;/p&gt;\n    ","\n&lt;p&gt;Points to remember when extending &lt;code&gt;SQLiteOpenHelper&lt;/code&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;super(context, DBName, null, DBversion);&lt;/code&gt; - This should be invoked first line of constructor&lt;/li&gt;\n&lt;li&gt;override &lt;code&gt;onCreate&lt;/code&gt; and &lt;code&gt;onUpgrade&lt;/code&gt; (if needed)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;onCreate&lt;/code&gt; will be invoked only when &lt;code&gt;getWritableDatabase()&lt;/code&gt; or &lt;code&gt;getReadableDatabase()&lt;/code&gt; is executed. And this will only invoked once when a &lt;code&gt;DBName&lt;/code&gt; specified in the first step is not available. You can add create table query on &lt;code&gt;onCreate&lt;/code&gt; method&lt;/li&gt;\n&lt;li&gt;Whenever you want to add new table just change &lt;code&gt;DBversion&lt;/code&gt; and do the queries in &lt;code&gt;onUpgrade&lt;/code&gt; table or simply uninstall then install the app.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;You can create database &amp;amp; table like &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;public class DbHelper extends SQLiteOpenHelper {\nprivate &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; String DBNAME &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &quot;testdatbase.db&quot;;\nprivate &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; VERSION &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n\npublic DbHelper(Context context) {\n    super(context, DBNAME, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, VERSION);\n    &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated constructor stub\n}\n\n&lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\npublic void onCreate(SQLiteDatabase db) {\n    &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated &lt;span class=&quot;hljs-keyword&quot;&gt;method&lt;/span&gt; stub\n    db.execSQL(&quot;create table BookDb(id integer primary key autoincrement,BookName text,Author text,IssuedOn text,DueDate text,Fine text,Totalfine text&quot;);\n\n}\n\n&lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\npublic void onUpgrade(SQLiteDatabase db, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; oldVersion, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; newVersion) {\n    db.execSQL(&quot;DROP TABLE IF EXISTS BookDb&quot;);\n    onCreate(db);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Note : if you want create another table or add columns or no such table, just increment the VERSION&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;onCreate&lt;/strong&gt; is called for the first time when creation of tables are needed. We need to override this method where we write the script for table creation which is executed by SQLiteDatabase. execSQL method. After executing in first time deployment, this method will not be called onwards.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;onUpgrade&lt;/em&gt;&lt;/strong&gt;\nThis method is called when database version is upgraded. Suppose for the first time deployment , database version was 1 and in second deployment there was change in database structure like adding extra column in table. Suppose database version is 2 now.&lt;/p&gt;\n    ","\n&lt;p&gt;Sqlite database override two methods &lt;/p&gt;\n\n&lt;p&gt;1) onCreate():\nThis method invoked only once when the application is start at first time . So it called only once &lt;/p&gt;\n\n&lt;p&gt;2)onUpgrade()\nThis method called when we change the database version,then this methods gets invoked.It is used for the alter the table structure like adding new column after creating DB Schema&lt;/p&gt;\n    ","\n&lt;p&gt;no such table found is mainly when you have not opened the &lt;code&gt;SQLiteOpenHelper&lt;/code&gt; class with &lt;code&gt;getwritabledata()&lt;/code&gt; and before this you also have to call make constructor with databasename &amp;amp; version. \nAnd &lt;code&gt;OnUpgrade&lt;/code&gt; is called whenever there is upgrade value in version number given in &lt;code&gt;SQLiteOpenHelper&lt;/code&gt; class.&lt;/p&gt;\n\n&lt;p&gt;Below is the code snippet (No such column found may be because of spell in column name):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;public class database_db {\n    entry_data endb;\n    String file_name&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&quot;Record.db&quot;;\n    SQLiteDatabase sq;\n    public database_db(Context c)\n    {\n        endb&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; entry_data(c, file_name, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;);\n    }\n    public database_db &lt;span class=&quot;hljs-keyword&quot;&gt;open&lt;/span&gt;()\n    {\n        sq&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;endb.getWritableDatabase();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; this;\n    }\n    public &lt;span class=&quot;hljs-keyword&quot;&gt;Cursor&lt;/span&gt; getdata(String &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sq.query(&lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;);\n    }\n    public long insert_data(String &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;,ContentValues &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sq.insert(&lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\n    }\n    public void &lt;span class=&quot;hljs-keyword&quot;&gt;close&lt;/span&gt;()\n    {\n        sq.close();\n    }\n    public void &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt;(String &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;)\n    {\n        sq.delete(&lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;);\n    }\n}\nclass entry_data extends SQLiteOpenHelper\n{\n\n    public entry_data(Context context, String name, SQLiteDatabase.CursorFactory factory,\n                      &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; version) {\n        super(context, name, factory, version);\n        &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated constructor stub\n    }\n\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Override&lt;/span&gt;\n    public void onCreate(SQLiteDatabase sqdb) {\n        &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; TODO Auto&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;generated &lt;span class=&quot;hljs-keyword&quot;&gt;method&lt;/span&gt; stub\n\n        sqdb.execSQL(&quot;CREATE TABLE IF NOT EXISTS &apos;YOUR_TABLE_NAME&apos;(Column_1 text not null,Column_2 text not null);&quot;);\n\n    }\n\n    public void onUpgrade(SQLiteDatabase db, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; oldVersion, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; newVersion) {\n          onCreate(db);\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you forget to provide a &quot;name&quot; string as the second argument to the constructor, it creates an &quot;in-memory&quot; database which gets erased when you close the app.&lt;/p&gt;\n    ","\n&lt;p&gt;Uninstall your application from the emulator or device. Run the app again. (OnCreate() is not executed when the database already exists)&lt;/p&gt;\n    ","\n&lt;p&gt;Your database name must end with .db also your query strings must have a terminator (;)&lt;/p&gt;\n    ","\n&lt;p&gt;Recheck your query in ur DatabaseHandler/DatabaseManager class(which ever you have took)&lt;/p&gt;\n    ","\n&lt;p&gt;In my case I get items from XML-file with &lt;code&gt;&amp;lt;string-array&amp;gt;&lt;/code&gt;, where I store &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s. In these &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s I hold SQL strings and apply one-by-one with &lt;code&gt;databaseBuilder.addMigrations(migration)&lt;/code&gt;. I made one mistake, forgot to add &lt;code&gt;\\&lt;/code&gt; before quote and got the exception:&lt;/p&gt;\n\n&lt;p&gt;android.database.sqlite.SQLiteException: no such column: some_value (code 1 SQLITE_ERROR): , while compiling: INSERT INTO table_name(id, name) VALUES(1, some_value)&lt;/p&gt;\n\n&lt;p&gt;So, this is a right variant:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;item&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; table_name(id, name) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \\&quot;some_value\\&quot;)\n&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;item&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Sqliteopenhelper&apos;s method have methods create and upgrade,create is used when any table is first time created and upgrade method will called everytime whenever table&apos;s number of column is changed.&lt;/p&gt;\n    "],"183":["\n&lt;p&gt;MySQL 8.0 now supports &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/window-functions.html&quot; rel=&quot;noreferrer&quot;&gt;windowing functions&lt;/a&gt;, like almost all popular SQL implementations. With this standard syntax, we can write greatest-n-per-group queries:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; ranked_messages &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; m.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rn\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; m\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; ranked_messages &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; rn &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This and other approaches to finding &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/example-maximum-column-group-row.html&quot; rel=&quot;noreferrer&quot;&gt;groupwise maximal rows&lt;/a&gt; are illustrated in the MySQL manual.&lt;/p&gt;\n&lt;p&gt;Below is the original answer I wrote for this question in 2009:&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;I write the solution this way:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; m1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages m1 &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; messages m2\n &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; (m1.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; m2.name &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; m1.id &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; m2.id)\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; m2.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Regarding performance, one solution or the other can be better, depending on the nature of your data. So you should test both queries and use the one that is better at performance given your database.&lt;/p&gt;\n&lt;p&gt;For example, I have a copy of the &lt;a href=&quot;https://archive.org/details/stackexchange&quot; rel=&quot;noreferrer&quot;&gt;StackOverflow August data dump&lt;/a&gt;.  I&apos;ll use that for benchmarking.  There are 1,114,357 rows in the &lt;code&gt;Posts&lt;/code&gt; table.  This is running on &lt;a href=&quot;https://www.mysql.com/&quot; rel=&quot;noreferrer&quot;&gt;MySQL&lt;/a&gt; 5.0.75 on my Macbook Pro 2.40GHz.&lt;/p&gt;\n&lt;p&gt;I&apos;ll write a query to find the most recent post for a given user ID (mine).&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;First using the technique &lt;a href=&quot;https://stackoverflow.com/questions/1313120/sql-retrieving-the-last-record-in-each-group/1313140#1313140&quot;&gt;shown&lt;/a&gt; by @Eric with the &lt;code&gt;GROUP BY&lt;/code&gt; in a subquery:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; p1.postid\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Posts p1\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; pi.owneruserid, &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(pi.postid) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; maxpostid\n            &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Posts pi &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; pi.owneruserid) p2\n  &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; (p1.postid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p2.maxpostid)\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; p1.owneruserid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20860&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; min &lt;span class=&quot;hljs-number&quot;&gt;17.89&lt;/span&gt; sec)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Even the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/using-explain.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;EXPLAIN&lt;/code&gt; analysis&lt;/a&gt; takes over 16 seconds:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-------------+------------+--------+----------------------------+-------------+---------+--------------+---------+-------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; select_type &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; type   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; possible_keys              &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; key         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; key_len &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ref&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;rows&lt;/span&gt;    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Extra       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-------------+------------+--------+----------------------------+-------------+---------+--------------+---------+-------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;derived2&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;                       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;76756&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; \n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; p1         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; eq_ref &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt;,PostId,OwnerUserId &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; p2.maxpostid &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; \n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DERIVED     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; pi         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; index  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;                       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; OwnerUserId &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1151268&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt; index &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; \n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-------------+------------+--------+----------------------------+-------------+---------+--------------+---------+-------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;16.09&lt;/span&gt; sec)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Now produce the same query result using &lt;a href=&quot;https://stackoverflow.com/questions/121387/fetch-the-row-which-has-the-max-value-for-a-column/123481#123481&quot;&gt;my technique&lt;/a&gt; with &lt;code&gt;LEFT JOIN&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; p1.postid\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Posts p1 &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; posts p2\n  &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; (p1.owneruserid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p2.owneruserid &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; p1.postid &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; p2.postid)\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; p2.postid &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; p1.owneruserid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20860&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;0.28&lt;/span&gt; sec)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;EXPLAIN&lt;/code&gt; analysis shows that both tables are able to use their indexes:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-------------+-------+------+----------------------------+-------------+---------+-------+------+--------------------------------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; select_type &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; type &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; possible_keys              &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; key         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; key_len &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ref&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Extra                                &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-------------+-------+------+----------------------------+-------------+---------+-------+------+--------------------------------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; SIMPLE      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; p1    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ref&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; OwnerUserId                &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; OwnerUserId &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; const &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1384&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt; index                          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; \n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; SIMPLE      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; p2    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ref&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt;,PostId,OwnerUserId &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; OwnerUserId &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; const &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1384&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt; index; &lt;span class=&quot;hljs-keyword&quot;&gt;Not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; \n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-------------+-------+------+----------------------------+-------------+---------+-------+------+--------------------------------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Here&apos;s the DDL for my &lt;code&gt;Posts&lt;/code&gt; table:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; `posts` (\n  `PostId` &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) unsigned &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; auto_increment,\n  `PostTypeId` &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) unsigned &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `AcceptedAnswerId` &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) unsigned &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `ParentId` &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) unsigned &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `CreationDate` datetime &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `Score` &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt;,\n  `ViewCount` &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt;,\n  `Body` text &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `OwnerUserId` &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) unsigned &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `OwnerDisplayName` &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `LastEditorUserId` &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) unsigned &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `LastEditDate` datetime &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `LastActivityDate` datetime &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  `Title` &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;,\n  `Tags` &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;150&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;,\n  `AnswerCount` &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt;,\n  `CommentCount` &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt;,\n  `FavoriteCount` &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt;,\n  `ClosedDate` datetime &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY  (`PostId`),\n  &lt;span class=&quot;hljs-keyword&quot;&gt;UNIQUE&lt;/span&gt; KEY `PostId` (`PostId`),\n  KEY `PostTypeId` (`PostTypeId`),\n  KEY `AcceptedAnswerId` (`AcceptedAnswerId`),\n  KEY `OwnerUserId` (`OwnerUserId`),\n  KEY `LastEditorUserId` (`LastEditorUserId`),\n  KEY `ParentId` (`ParentId`),\n  &lt;span class=&quot;hljs-keyword&quot;&gt;CONSTRAINT&lt;/span&gt; `posts_ibfk_1` &lt;span class=&quot;hljs-keyword&quot;&gt;FOREIGN&lt;/span&gt; KEY (`PostTypeId`) &lt;span class=&quot;hljs-keyword&quot;&gt;REFERENCES&lt;/span&gt; `posttypes` (`PostTypeId`)\n) ENGINE&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;InnoDB;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Note to commenters: If you want another benchmark with a different version of MySQL, a different dataset, or different table design, feel free to do it yourself. I have shown the technique above. Stack Overflow is here to show you how to do software development work, not to do all the work for you.&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;UPD: 2017-03-31, the version &lt;a href=&quot;https://dev.mysql.com/doc/relnotes/mysql/5.7/en/news-5-7-5.html#mysqld-5-7-5-sql-mode&quot; rel=&quot;noreferrer&quot;&gt;5.7.5&lt;/a&gt; of MySQL made the ONLY_FULL_GROUP_BY switch enabled by default (hence, non-deterministic GROUP BY queries became disabled). Moreover, they updated the GROUP BY implementation and the solution might not work as expected anymore even with the disabled switch. One needs to check.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Bill Karwin&apos;s solution above works fine when item count within groups is rather small, but the performance of the query becomes bad when the groups are rather large, since the solution requires about &lt;code&gt;n*n/2 + n/2&lt;/code&gt; of only &lt;code&gt;IS NULL&lt;/code&gt; comparisons.&lt;/p&gt;\n\n&lt;p&gt;I made my tests on a InnoDB table of &lt;code&gt;18684446&lt;/code&gt; rows with &lt;code&gt;1182&lt;/code&gt; groups. The table contains testresults for functional tests and has the &lt;code&gt;(test_id, request_id)&lt;/code&gt; as the primary key. Thus, &lt;code&gt;test_id&lt;/code&gt; is a group and I was searching for the last &lt;code&gt;request_id&lt;/code&gt; for each &lt;code&gt;test_id&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Bill&apos;s solution has already been running for several hours on my dell e4310 and I do not know when it is going to finish even though it operates on a coverage index (hence &lt;code&gt;using index&lt;/code&gt; in EXPLAIN).&lt;/p&gt;\n\n&lt;p&gt;I have a couple of other solutions that are based on the same ideas:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;if the underlying index is BTREE index (which is usually the case), the largest &lt;code&gt;(group_id, item_value)&lt;/code&gt; pair is the last value within each &lt;code&gt;group_id&lt;/code&gt;, that is the first for each &lt;code&gt;group_id&lt;/code&gt; if we walk through the index in descending order;&lt;/li&gt;\n&lt;li&gt;if we read the values which are covered by an index, the values are read in the order of the index;&lt;/li&gt;\n&lt;li&gt;each index implicitly contains primary key columns appended to that (that is the primary key is in the coverage index). In solutions below I operate directly on the primary key, in you case, you will just need to add primary key columns in the result.&lt;/li&gt;\n&lt;li&gt;in many cases it is much cheaper to collect the required row ids in the required order in a subquery and join the result of the subquery on the id. Since for each row in the subquery result MySQL will need a single fetch based on primary key, the subquery will be put first in the join and the rows will be output in the order of the ids in the subquery (if we omit explicit ORDER BY for the join)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.mysqlperformanceblog.com/2009/09/12/3-ways-mysql-uses-indexes&quot; rel=&quot;noreferrer&quot;&gt;3 ways MySQL uses indexes&lt;/a&gt; is a great article to understand some details.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Solution 1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This one is incredibly fast, it takes about 0,8 secs on my 18M+ rows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; test_id, &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(request_id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; request_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; testresults\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; test_id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to change the order to ASC, put it in a subquery, return the ids only and use that as the subquery to join to the rest of the columns:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; test_id, request_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; test_id, &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(request_id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; request_id\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; testresults\n    &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; test_id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ids\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; test_id;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This one takes about 1,2 secs on my data.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Solution 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Here is another solution that takes about 19 seconds for my table:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; test_id, request_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; testresults, (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@group&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; init\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; IF(IFNULL(&lt;span class=&quot;hljs-variable&quot;&gt;@group&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@group&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;test_id, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; test_id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;, request_id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It returns tests in descending order as well. It is much slower since it does a full index scan but it is here to give you an idea how to output N max rows for each group. &lt;/p&gt;\n\n&lt;p&gt;The disadvantage of the query is that its result cannot be cached by the query cache.&lt;/p&gt;\n    ","\n&lt;p&gt;Use your &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/subqueries.html&quot; rel=&quot;noreferrer&quot;&gt;subquery&lt;/a&gt; to return the correct grouping, because you&apos;re halfway there.&lt;/p&gt;\n\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n    a.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;\n    messages a\n    &lt;span class=&quot;hljs-keyword&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; \n        (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; name, &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(id) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; maxid &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; name) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt;\n        a.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.maxid\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If it&apos;s not &lt;code&gt;id&lt;/code&gt; you want the max of:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n    a.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;\n    messages a\n    &lt;span class=&quot;hljs-keyword&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; \n        (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; name, &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(other_col) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; other_col \n         &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; name) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt;\n        a.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.name\n        &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; a.other_col &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.other_col\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This way, you avoid correlated subqueries and/or ordering in your subqueries, which tend to be very slow/inefficient.&lt;/p&gt;\n    ","\n&lt;p&gt;I arrived at a different solution, which is to get the IDs for the last post within each group, then select from the messages table using the result from the first query as the argument for a &lt;code&gt;WHERE x IN&lt;/code&gt; construct:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; id, name, other_columns\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(id)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages\n    &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I don&apos;t know how this performs compared to some of the other solutions, but it worked spectacularly for my table with 3+ million rows. (4 second execution with 1200+ results)&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;This should work both on MySQL and SQL Server.&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Solution by sub query &lt;a href=&quot;http://sqlfiddle.com/#!9/a2bdc/1&quot; rel=&quot;noreferrer&quot;&gt;fiddle Link&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;\n(&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(id) &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; Name)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Solution By join condition &lt;a href=&quot;http://sqlfiddle.com/#!9/a2bdc/3&quot; rel=&quot;noreferrer&quot;&gt;fiddle link&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; m1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; messages m1 \n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;outer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; messages m2 \n&lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; ( m1.id&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;m2.id &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; m1.name&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;m2.name )\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; m2.id &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Reason for this post is to give fiddle link only.\nSame SQL is already provided in other answers.&lt;/p&gt;\n    ","\n&lt;p&gt;An approach with considerable speed is as follows.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages a\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; Id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(Id) &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; a.Name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Name)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;Id  Name    Other_Columns\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   A   A_data_3\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   B   B_data_2\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   C   C_data_1\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here are two suggestions.  First, if mysql supports ROW_NUMBER(), it&apos;s very simple:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; Ranked &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Id, Name, OtherColumns,\n    &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (\n      &lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Name\n      &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rk\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages\n)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Id, Name, OtherColumns\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; rk &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&apos;m assuming by &quot;last&quot; you mean last in Id order. If not, change the ORDER BY clause of the ROW_NUMBER() window accordingly. If ROW_NUMBER() isn&apos;t available, this is another solution:&lt;/p&gt;\n\n&lt;p&gt;Second, if it doesn&apos;t, this is often a good way to proceed:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  Id, Name, OtherColumns\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;EXISTS&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; M2\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; M2.Name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; messages.Name\n  &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; M2.Id &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; messages.Id\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In other words, select messages where there is no later-Id message with the same Name.&lt;/p&gt;\n    ","\n&lt;p&gt;we will look at how you can use MySQL at getting the last record in a Group By of records. For example if you have this result set of posts.&lt;/p&gt;\n\n&lt;h2&gt;&lt;code&gt;id   category_id  post_title&lt;/code&gt;&lt;/h2&gt;\n\n&lt;p&gt;&lt;code&gt;1      1                 Title 1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;2      1                 Title 2&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;3      1                 Title 3&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;4      2                 Title 4&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;5      2                 Title 5&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;6      3                 Title 6&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;I want to be able to get the last post in each category which are Title 3, Title 5 and Title 6. To get the posts by the category you will use the MySQL Group By keyboard.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;select * from posts group by category_id&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;But the results we get back from this query is.&lt;/p&gt;\n\n&lt;h2&gt;&lt;code&gt;id   category_id  post_title&lt;/code&gt;&lt;/h2&gt;\n\n&lt;p&gt;&lt;code&gt;1      1                  Title 1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;4      2                  Title 4&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;6      3                  Title 6&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;The group by will always return the first record in the group on the result set.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;SELECT id, category_id, post_title\nFROM posts\nWHERE id IN (\n    SELECT MAX(id)\n    FROM posts\n    GROUP BY category_id\n);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This will return the posts with the highest IDs in each group.&lt;/p&gt;\n\n&lt;h2&gt;&lt;code&gt;id   category_id  post_title&lt;/code&gt;&lt;/h2&gt;\n\n&lt;p&gt;&lt;code&gt;3      1                  Title 3&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;5      2                  Title 5&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;6      3                  Title 6&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://paulund.co.uk/get-last-record-in-each-mysql-group&quot; rel=&quot;noreferrer&quot;&gt;Reference Click Here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Clearly there are lots of different ways of getting the same results, your question seems to be what is an efficient way of getting the last results in each group in MySQL. If you are working with huge amounts of data and assuming you are using InnoDB with even the latest versions of MySQL (such as 5.7.21 and 8.0.4-rc) then there might not be an efficient way of doing this.&lt;/p&gt;\n\n&lt;p&gt;We sometimes need to do this with tables with even more than 60 million rows.&lt;/p&gt;\n\n&lt;p&gt;For these examples I will use data with only about 1.5 million rows where the queries would need to find results for all groups in the data. In our actual cases we would often need to return back data from about 2,000 groups (which hypothetically would not require examining very much of the data).&lt;/p&gt;\n\n&lt;p&gt;I will use the following tables:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; temperature(\n  id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; UNSIGNED &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT, \n  groupID &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; UNSIGNED &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;, \n  recordedTimestamp &lt;span class=&quot;hljs-type&quot;&gt;TIMESTAMP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;, \n  recordedValue &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n  INDEX groupIndex(groupID, recordedTimestamp), \n  &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY (id)\n);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; TEMPORARY &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; selected_group(id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; UNSIGNED &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY(id)); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The temperature table is populated with about 1.5 million random records, and with 100 different groups.\nThe selected_group is populated with those 100 groups (in our cases this would normally be less than 20% for all of the groups).&lt;/p&gt;\n\n&lt;p&gt;As this data is random it means that multiple rows can have the same recordedTimestamps. What we want is to get a list of all of the selected groups in order of groupID with the last recordedTimestamp for each group, and if the same group has more than one matching row like that then the last matching id of those rows.&lt;/p&gt;\n\n&lt;p&gt;If hypothetically MySQL had a last() function which returned values from the last row in a special ORDER BY clause then we could simply do: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;last&lt;/span&gt;(t1.id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id, \n  t1.groupID, \n  &lt;span class=&quot;hljs-keyword&quot;&gt;last&lt;/span&gt;(t1.recordedTimestamp) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; recordedTimestamp, \n  &lt;span class=&quot;hljs-keyword&quot;&gt;last&lt;/span&gt;(t1.recordedValue) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; recordedValue\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t1.recordedTimestamp, t1.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t1.groupID;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which would only need to examine a few 100 rows in this case as it doesn&apos;t use any of the normal GROUP BY functions. This would execute in 0 seconds and hence be highly efficient.\nNote that normally in MySQL we would see an ORDER BY clause following the GROUP BY clause however this ORDER BY clause is used to determine the ORDER for the last() function, if it was after the GROUP BY then it would be ordering the GROUPS. If no GROUP BY clause is present then the last values will be the same in all of the returned rows.&lt;/p&gt;\n\n&lt;p&gt;However MySQL does not have this so let&apos;s look at different ideas of what it does have and prove that none of these are efficient.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.id, t1.groupID, t1.recordedTimestamp, t1.recordedValue\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t2.id\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; temperature t2 \n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n  &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t2.recordedTimestamp &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;, t2.id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n  LIMIT &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This examined 3,009,254 rows and took ~0.859 seconds on 5.7.21 and slightly longer on 8.0.4-rc&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.id, t1.groupID, t1.recordedTimestamp, t1.recordedValue \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; temperature t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; ( \n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(t2.id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id   \n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; temperature t2\n  &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t3.groupID, &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(t3.recordedTimestamp) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; recordedTimestamp\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g\n    &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t3 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t3.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n    &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t3.groupID\n  ) t4 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t4.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; t4.recordedTimestamp &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.recordedTimestamp\n  &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t2.groupID\n) t5 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t5.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.id;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This examined 1,505,331 rows and took ~1.25 seconds on 5.7.21 and slightly longer on 8.0.4-rc&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.id, t1.groupID, t1.recordedTimestamp, t1.recordedValue \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; temperature t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; ( \n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(t2.id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id   \n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; temperature t2\n  &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t3.groupID, &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(t3.recordedTimestamp) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; recordedTimestamp\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g\n    &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t3 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t3.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n    &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t3.groupID\n  ) t4 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t4.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; t4.recordedTimestamp &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.recordedTimestamp\n  &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t2.groupID\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t1.groupID;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This examined 3,009,685 rows and took ~1.95 seconds on 5.7.21 and slightly longer on 8.0.4-rc&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 4&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.id, t1.groupID, t1.recordedTimestamp, t1.recordedValue\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(t2.id)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; temperature t2 \n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; t2.recordedTimestamp &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (\n      &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(t3.recordedTimestamp)\n      &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; temperature t3 \n      &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t3.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n    )\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This examined 6,137,810 rows and took ~2.2 seconds on 5.7.21 and slightly longer on 8.0.4-rc&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 5&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.id, t1.groupID, t1.recordedTimestamp, t1.recordedValue\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    t2.id, \n    t2.groupID, \n    t2.recordedTimestamp, \n    t2.recordedValue, \n    &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (\n      &lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t2.recordedTimestamp &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;, t2.id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rowNumber\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g \n  &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n) t1 &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.rowNumber &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This examined 6,017,808 rows and took ~4.2 seconds on 8.0.4-rc&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 6&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.id, t1.groupID, t1.recordedTimestamp, t1.recordedValue \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-built_in&quot;&gt;last_value&lt;/span&gt;(t2.id) &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; w &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id, \n    t2.groupID, \n    &lt;span class=&quot;hljs-built_in&quot;&gt;last_value&lt;/span&gt;(t2.recordedTimestamp) &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; w &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; recordedTimestamp, \n    &lt;span class=&quot;hljs-built_in&quot;&gt;last_value&lt;/span&gt;(t2.recordedValue) &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; w &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; recordedValue\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g\n  &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WINDOW&lt;/span&gt; w &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t2.groupID \n    &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t2.recordedTimestamp, t2.id \n    &lt;span class=&quot;hljs-keyword&quot;&gt;RANGE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BETWEEN&lt;/span&gt; UNBOUNDED PRECEDING &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; UNBOUNDED FOLLOWING\n  )\n) t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t1.groupID;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This examined 6,017,908 rows and took ~17.5 seconds on 8.0.4-rc&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example 7&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.id, t1.groupID, t1.recordedTimestamp, t1.recordedValue \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; selected_group g\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t1 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t1.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; temperature t2 \n  &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.groupID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.id \n  &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; (\n    t2.recordedTimestamp &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; t1.recordedTimestamp \n    &lt;span class=&quot;hljs-keyword&quot;&gt;OR&lt;/span&gt; (t2.recordedTimestamp &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.recordedTimestamp &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; t2.id &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; t1.id)\n  )\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t2.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t1.groupID;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This one was taking forever so I had to kill it.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is another way to get the last related record using &lt;code&gt;GROUP_CONCAT&lt;/code&gt; with order by and &lt;code&gt;SUBSTRING_INDEX&lt;/code&gt; to pick one of the record from the list &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n  `Id`,\n  `Name`,\n  SUBSTRING_INDEX(\n    GROUP_CONCAT(\n      `Other_Columns` \n      &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `Id` &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt; \n      SEPARATOR &lt;span class=&quot;hljs-string&quot;&gt;&apos;||&apos;&lt;/span&gt;\n    ),\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;||&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  ) Other_Columns \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n  messages \n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `Name` \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Above query will group the all the &lt;code&gt;Other_Columns&lt;/code&gt; that are in same &lt;code&gt;Name&lt;/code&gt; group  and using &lt;code&gt;ORDER BY id DESC&lt;/code&gt; will join all the &lt;code&gt;Other_Columns&lt;/code&gt; in a specific group in descending order  with the provided separator in my case i have used &lt;code&gt;||&lt;/code&gt; ,using &lt;code&gt;SUBSTRING_INDEX&lt;/code&gt; over this list will pick the first one &lt;/p&gt;\n\n&lt;h2&gt;&lt;a href=&quot;http://sqlfiddle.com/#!2/843079/4&quot; rel=&quot;noreferrer&quot;&gt;Fiddle Demo&lt;/a&gt;&lt;/h2&gt;\n    ","\n&lt;p&gt;I&apos;ve not yet tested with large DB but I think this could be faster than joining tables:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;Max&lt;/span&gt;(Id) &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Name\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n  column1,\n  column2 \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n  table_name \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; \n  (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(id) \n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n    table_name \n  &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; column1) \n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; column1 ;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Hi @Vijay Dev if your table &lt;strong&gt;messages&lt;/strong&gt; contains &lt;strong&gt;Id&lt;/strong&gt; which is auto increment primary key then to fetch the latest record basis on the primary key your query should read as below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; m1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages m1 &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(Id) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; lastmsgId &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Name) m2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; m1.Id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;m2.lastmsgId\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can take view from here as well. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/ef42b/9&quot; rel=&quot;noreferrer&quot;&gt;http://sqlfiddle.com/#!9/ef42b/9&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;FIRST SOLUTION&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; d1.ID,Name,City &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Demo_User d1\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n(&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(ID) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; ID &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Demo_User &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;By&lt;/span&gt; NAME) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; P &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; (d1.ID&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;P.ID);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;SECOND SOLUTION&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Demo_User &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; ID &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; T &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; NAME ;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Is there any way we could use this method to delete duplicates in a table? The result set is basically a collection of unique records, so if we could delete all records not in the result set, we would effectively have no duplicates? I tried this but mySQL gave a 1093 error. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt;\n (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; m1.id  \n &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages m1 &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; messages m2  \n &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; (m1.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; m2.name &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; m1.id &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; m2.id)  \n &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; m2.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is there a way to maybe save the output to a temp variable then delete from  NOT IN (temp variable)? @Bill thanks for a very useful solution.&lt;/p&gt;\n\n&lt;p&gt;EDIT: Think i found the solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; IF &lt;span class=&quot;hljs-keyword&quot;&gt;EXISTS&lt;/span&gt; UniqueIDs; \n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; Temporary &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; UniqueIDs (id &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;)); \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; UniqueIDs \n    (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; T1.ID &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Table&lt;/span&gt; T1 &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Table&lt;/span&gt; T2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; \n    (T1.Field1 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; T2.Field1 &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; T1.Field2 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; T2.Field2 #Comparison Fields  \n    &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; T1.ID &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; T2.ID) \n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; T2.ID &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;); \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; ID &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; UniqueIDs);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; jos_categories.title &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; name,\n       joined .catid,\n       joined .title,\n       joined .introtext\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   jos_categories\n       &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; `title`,\n                                  catid,\n                                  `created`,\n                                  introtext\n                           &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   `jos_content`\n                           &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;  `sectionid` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n                           &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `id` &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; yes\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `yes`.`catid` &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `yes`.`created` &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; joined\n         &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;( joined.catid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jos_categories.id )  \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is my solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; NAME,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(MESSAGES) &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; NAME) MESSAGES \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; MESSAGE;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table_name &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; primary_key &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(primary_key) &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table_name &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; column_name )\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;**&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hi, this query might help :&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;** &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n  &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n  message \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; \n  `Id` &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n      &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(`Id`) \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n      message \n    &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; \n      `Name`\n  ) \n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; \n   `Id` &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;i find best solution in &lt;a href=&quot;https://dzone.com/articles/get-last-record-in-each-mysql-group&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://dzone.com/articles/get-last-record-in-each-mysql-group&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; `data` &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; `id` &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(`id`) &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; `data` &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; `name_id`)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The below query will work fine as per your question.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; M1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; MESSAGES M1,\n(\n &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; SUBSTR(Others_data,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),&lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(Others_data) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; Max_Others_data\n &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; MESSAGES\n &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n) M2\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; M1.Others_data &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; M2.Max_Others_data\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Others_data;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you want the last row for each &lt;code&gt;Name&lt;/code&gt;, then you can give a row number to each row group by the &lt;code&gt;Name&lt;/code&gt; and order by &lt;code&gt;Id&lt;/code&gt; in descending order.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;QUERY&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.Id, \n       t1.Name, \n       t1.Other_Columns\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n(\n     &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Id, \n            Name, \n            Other_Columns,\n    (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;CASE&lt;/span&gt; Name &lt;span class=&quot;hljs-keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@curA&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@curRow&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@curRow&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@curRow&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@curA&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Name &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; \n    ) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rn \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages t, \n    (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@curRow&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@curA&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) r \n    &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Name,Id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt; \n)t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.rn &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t1.Id;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/7c6d90/3&quot; rel=&quot;nofollow&quot;&gt;SQL Fiddle&lt;/a&gt;&lt;/h1&gt;\n    ","\n&lt;p&gt;How about this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; (name) &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name, id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I had similar issue (on postgresql tough) and on a 1M records table. This solution takes 1.7s vs 44s produced by the one with LEFT JOIN.\nIn my case I had to filter the corrispondant of your &lt;em&gt;name&lt;/em&gt; field against NULL values, resulting in even better performances by 0.2 secs&lt;/p&gt;\n    ","\n&lt;p&gt;If performance is really your concern you can introduce a new column on the table called &lt;code&gt;IsLastInGroup&lt;/code&gt; of type BIT. &lt;/p&gt;\n\n&lt;p&gt;Set it to true on the columns which are last and maintain it with every row insert/update/delete. Writes will be slower, but you&apos;ll benefit on reads. It depends on your use case and I recommend it only if you&apos;re read-focused.&lt;/p&gt;\n\n&lt;p&gt;So your query will look like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Messages &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; IsLastInGroup &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;What about:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(id) &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; messages &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; name \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I have tested it on sqlite and it returns all columns and max id value for all names.&lt;/p&gt;\n    ","\n&lt;p&gt;MariaDB 10.3 and newer using &lt;a href=&quot;https://mariadb.com/kb/en/group_concat/&quot; rel=&quot;nofollow noreferrer&quot;&gt;GROUP_CONCAT&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;The idea is to use &lt;code&gt;ORDER BY&lt;/code&gt; + &lt;code&gt;LIMIT&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; GROUP_CONCAT(id &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt; LIMIT &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id,\n       name,\n       GROUP_CONCAT(Other_columns &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt; LIMIT &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; Other_columns\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://dbfiddle.uk/?rdbms=mariadb_10.3&amp;amp;fiddle=85d1fe8efc39f44a6723303522e0e23b&quot; rel=&quot;nofollow noreferrer&quot;&gt;db&amp;lt;&amp;gt;fiddle demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you need the most recent or oldest record of a text column in a grouped query, and you would rather not use a subquery, you can do this...&lt;/p&gt;\n&lt;p&gt;Ex. You have a list of movies and need to get the count in the series and the latest movie&lt;/p&gt;\n&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th style=&quot;text-align: left;&quot;&gt;id&lt;/th&gt;\n&lt;th style=&quot;text-align: left;&quot;&gt;series&lt;/th&gt;\n&lt;th style=&quot;text-align: left;&quot;&gt;name&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;1&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;Star Wars&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;A New hope&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;2&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;Star Wars&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;The Empire Strikes Back&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;3&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;Star Wars&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;Return of The Jedi&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;(id), series, &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(CONCAT(id, name)), LENGTH(id) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Movies\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; series\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This returns...&lt;/p&gt;\n&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th style=&quot;text-align: left;&quot;&gt;id&lt;/th&gt;\n&lt;th style=&quot;text-align: left;&quot;&gt;series&lt;/th&gt;\n&lt;th style=&quot;text-align: left;&quot;&gt;name&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;3&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;Star Wars&lt;/td&gt;\n&lt;td style=&quot;text-align: left;&quot;&gt;Return of The Jedi&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;p&gt;MAX will return the row with the highest value, so by concatenating the id to the name, you now will get the newest record, then just strip off the id for your final result.&lt;/p&gt;\n&lt;p&gt;More efficient than using a subquery.&lt;/p&gt;\n&lt;p&gt;So for the given example:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(Id), Name, &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(CONCAT(Id, Other_Columns)), LENGTH(Id) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Name\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Happy coding, and &quot;May The Force Be With You&quot; :)&lt;/p&gt;\n    ","\n&lt;p&gt;Hope below Oracle query can help:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; Temp_table &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; id, name, othercolumns, &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; ID \n    &lt;span class=&quot;hljs-keyword&quot;&gt;desc&lt;/span&gt;)&lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; rank &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; messages\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; id, name,othercolumns &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; Temp_table &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; rank&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another approach : &lt;/p&gt;\n\n&lt;p&gt;Find the propertie with the max m2_price withing each program (n properties in 1 program) : &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; properties p\n&lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(m2_price) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; max_price \n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; properties \n    &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; program_id\n) p2 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; (p.program_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p2.program_id)\n&lt;span class=&quot;hljs-keyword&quot;&gt;having&lt;/span&gt; p.m2_price &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; max_price\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As of MySQL 8.0.14, this can also be achieved using &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/lateral-derived-tables.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Lateral Derived Tables&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages t\n&lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;LATERAL&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; name, &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; id \n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; messages t1\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.name\n  &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name\n) trn &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; trn.name &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; t.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; trn.id\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://dbfiddle.uk/?rdbms=mysql_8.0&amp;amp;fiddle=3d743790ddac81e6b5b99a762fa41c31&quot; rel=&quot;nofollow noreferrer&quot;&gt;db&amp;lt;&amp;gt;fiddle&lt;/a&gt;&lt;/p&gt;\n    "],"184":["\n&lt;p&gt;MongoDB 2.2&apos;s new &lt;a href=&quot;http://docs.mongodb.org/manual/reference/projection/elemMatch/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;$elemMatch&lt;/code&gt;&lt;/a&gt; projection operator provides another way to alter the returned document to contain only the &lt;strong&gt;&lt;em&gt;first&lt;/em&gt;&lt;/strong&gt; matched &lt;code&gt;shapes&lt;/code&gt; element:&lt;/p&gt;\n\n\n\n&lt;pre class=&quot;lang-javascript s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(\n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}, \n    {&lt;span class=&quot;hljs-attr&quot;&gt;_id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;$elemMatch&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}}});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Returns:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-javascript s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; : [{&lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;circle&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}]}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In 2.2 you can also do this using the &lt;a href=&quot;http://docs.mongodb.org/manual/reference/operator/projection/positional/#proj._S_&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;$ projection operator&lt;/code&gt;&lt;/a&gt;, where the &lt;code&gt;$&lt;/code&gt; in a projection object field name represents the index of the field&apos;s first matching array element from the query.  The following returns the same results as above:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-javascript s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;_id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;shapes.$&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;MongoDB 3.2 Update&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Starting with the 3.2 release, you can use the new &lt;a href=&quot;https://docs.mongodb.org/master/reference/operator/aggregation/filter/#exp._S_filter&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;$filter&lt;/code&gt;&lt;/a&gt; aggregation operator to filter an array during projection, which has the benefit of including &lt;em&gt;all&lt;/em&gt; matches, instead of just the first one.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-javascript s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;([\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Get just the docs that contain a shapes element where color is &apos;red&apos;&lt;/span&gt;\n    {&lt;span class=&quot;hljs-attr&quot;&gt;$match&lt;/span&gt;: {&lt;span class=&quot;hljs-string&quot;&gt;&apos;shapes.color&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;}},\n    {&lt;span class=&quot;hljs-attr&quot;&gt;$project&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;$filter&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-attr&quot;&gt;input&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;$shapes&apos;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;as&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;shape&apos;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;cond&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;$eq&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;$$shape.color&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;]}\n        }},\n        &lt;span class=&quot;hljs-attr&quot;&gt;_id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    }}\n])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Results:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-javascript s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[ \n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; : [ \n            {\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;circle&quot;&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n            }\n        ]\n    }\n]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The new &lt;a href=&quot;http://docs.mongodb.org/manual/applications/aggregation/&quot;&gt;Aggregation Framework&lt;/a&gt; in MongoDB 2.2+ provides an alternative to Map/Reduce.  The &lt;a href=&quot;http://docs.mongodb.org/manual/reference/aggregation/unwind/#_S_unwind&quot;&gt;&lt;code&gt;$unwind&lt;/code&gt;&lt;/a&gt; operator can be used to separate your &lt;code&gt;shapes&lt;/code&gt; array into a stream of documents that can be matched:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;(\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Start with a $match pipeline which can take advantage of an index and limit documents processed&lt;/span&gt;\n  { $match : {\n     &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n  }},\n  { $unwind : &lt;span class=&quot;hljs-string&quot;&gt;&quot;$shapes&quot;&lt;/span&gt; },\n  { $match : {\n     &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n  }}\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Results in:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt; : [\n        {\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectId&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;504425059b7c9fa7ec92beec&quot;&lt;/span&gt;),\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; : {\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;circle&quot;&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n            }\n        }\n    ],\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;ok&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;Caution:&lt;/strong&gt; This answer provides a solution that was relevant &lt;em&gt;at that time&lt;/em&gt;, before the new features of MongoDB 2.2 and up were introduced. See the other answers if you are using a more recent version of MongoDB.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The field selector parameter is limited to complete properties. It cannot be used to select part of an array, only the entire array. I tried using the &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Updating#Updating-The%24positionaloperator&quot; rel=&quot;noreferrer&quot;&gt;$ positional operator&lt;/a&gt;, but that didn&apos;t work.&lt;/p&gt;\n\n&lt;p&gt;The easiest way is to just filter the shapes &lt;strong&gt;in the client&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;If you really &lt;em&gt;need&lt;/em&gt; the correct output directly from MongoDB, you can &lt;strong&gt;use a map-reduce&lt;/strong&gt; to filter the shapes.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  filteredShapes = [];\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;shapes&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (s.&lt;span class=&quot;hljs-property&quot;&gt;color&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;) {\n      filteredShapes.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(s);\n    }\n  });\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;emit&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_id&lt;/span&gt;, { &lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: filteredShapes });\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, values&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n}\n\nres = db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;mapReduce&lt;/span&gt;(map, reduce, { &lt;span class=&quot;hljs-attr&quot;&gt;query&lt;/span&gt;: { &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt; } })\n\ndb[res.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another interesing way is to use &lt;a href=&quot;http://docs.mongodb.org/manual/reference/operator/aggregation/redact/&quot;&gt;&lt;strong&gt;$redact&lt;/strong&gt;&lt;/a&gt;, which is one of the new aggregation features of &lt;strong&gt;MongoDB 2.6&lt;/strong&gt;. If you are using 2.6, you don&apos;t need an $unwind which might cause you performance problems if you have large arrays. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;([\n    { &lt;span class=&quot;hljs-attr&quot;&gt;$match&lt;/span&gt;: { \n         &lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;$elemMatch&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;} } \n    }},\n    { $redact : {\n         &lt;span class=&quot;hljs-attr&quot;&gt;$cond&lt;/span&gt;: {\n             &lt;span class=&quot;hljs-attr&quot;&gt;if&lt;/span&gt;: { $or : [{ &lt;span class=&quot;hljs-attr&quot;&gt;$eq&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$color&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;] }, { $not : &lt;span class=&quot;hljs-string&quot;&gt;&quot;$color&quot;&lt;/span&gt; }]},\n             &lt;span class=&quot;hljs-attr&quot;&gt;then&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;$$DESCEND&quot;&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;else&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;$$PRUNE&quot;&lt;/span&gt;\n         }\n    }}]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;$redact&lt;/code&gt; &lt;em&gt;&quot;restricts the contents of the documents based on information stored in the documents themselves&quot;&lt;/em&gt;. So it will run only &lt;em&gt;inside of the document&lt;/em&gt;. It basically scans your document top to the bottom, and checks if it matches with your &lt;code&gt;if&lt;/code&gt; condition which is in &lt;code&gt;$cond&lt;/code&gt;, if there is match it will either keep the content(&lt;code&gt;$$DESCEND&lt;/code&gt;) or remove(&lt;code&gt;$$PRUNE&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;In the example  above, first &lt;code&gt;$match&lt;/code&gt; returns the whole &lt;code&gt;shapes&lt;/code&gt; array, and $redact strips it down to the expected result. &lt;/p&gt;\n\n&lt;p&gt;Note that &lt;code&gt;{$not:&quot;$color&quot;}&lt;/code&gt; is necessary, because it will scan the top document as well, and if &lt;code&gt;$redact&lt;/code&gt; does not find a &lt;code&gt;color&lt;/code&gt; field on the top level this will return &lt;code&gt;false&lt;/code&gt; that might strip the whole document which we don&apos;t want. &lt;/p&gt;\n    ","\n&lt;p&gt;Better you can query in matching array element using &lt;code&gt;$slice&lt;/code&gt; is it helpful to returning the significant object in an array.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.$&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;$slice&lt;/code&gt; is helpful when you know the index of the element, but sometimes you want\nwhichever array element matched your criteria. You can return the matching element\nwith the &lt;code&gt;$&lt;/code&gt; operator.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; db.&lt;span class=&quot;hljs-title function_&quot;&gt;getCollection&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;aj&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.$&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;OUTPUTS&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; : [ \n       {\n           &lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;circle&quot;&lt;/span&gt;,\n           &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n       }\n   ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The syntax for find in mongodb is &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    db.&amp;lt;collection name&amp;gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(query, projection);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and the second query that you have written, that is&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(\n    {&lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: {&lt;span class=&quot;hljs-string&quot;&gt;&quot;$elemMatch&quot;&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}}}, \n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;in this you have used the &lt;code&gt;$elemMatch&lt;/code&gt; operator in query part, whereas if you use this operator in the projection part then you will get the desired result. You can write down your query as &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;     db.&lt;span class=&quot;hljs-property&quot;&gt;users&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(\n     {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;},\n     {&lt;span class=&quot;hljs-attr&quot;&gt;_id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: {$elemMatch : {&lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}}})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will give you the desired result.&lt;/p&gt;\n    ","\n&lt;h2&gt;Thanks to &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/users/1259510/johnnyhk&quot;&gt;JohnnyHK&lt;/a&gt;&lt;/em&gt;.&lt;/h2&gt;\n\n&lt;p&gt;Here I just want to add some more complex usage.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Document &lt;/span&gt;\n{ \n&lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; : [\n  {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;square&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;circle&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;green&quot;&lt;/span&gt;}\n  ] \n} \n\n{ \n&lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; : [\n  {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;square&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;circle&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;green&quot;&lt;/span&gt;}\n  ] \n} \n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// The Query   &lt;/span&gt;\ndb.&lt;span class=&quot;hljs-property&quot;&gt;contents&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;({\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectId&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n},{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; :{\n       &lt;span class=&quot;hljs-string&quot;&gt;&quot;$elemMatch&quot;&lt;/span&gt;:{\n           &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n       } \n    }\n}) \n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//And the Result&lt;/span&gt;\n\n{&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt;:[\n    {\n       &lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;square&quot;&lt;/span&gt;,\n       &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n    }\n]}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You just need to run query&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(\n{&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}, \n{&lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;$elemMatch&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}}});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;output of this query is&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectId&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;562e7c594c12942f08fe4192&quot;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes&quot;&lt;/span&gt; : [ \n        {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shape&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;circle&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}\n    ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;as you expected it&apos;ll gives the exact field from array that matches color:&apos;red&apos;.&lt;/p&gt;\n    ","\n&lt;p&gt;Along with  &lt;code&gt;$project&lt;/code&gt; it will be more appropriate  other wise matching elements will be clubbed together with other elements in document.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;(\n  { &lt;span class=&quot;hljs-string&quot;&gt;&quot;$unwind&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;$shapes&quot;&lt;/span&gt; },\n  { &lt;span class=&quot;hljs-string&quot;&gt;&quot;$match&quot;&lt;/span&gt; : { &lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt; } },\n  { \n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;$project&quot;&lt;/span&gt;: {\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;item&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    }\n  }\n)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Likewise you can find for the multiple&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-title function_&quot;&gt;getCollection&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;localData&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;([\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Get just the docs that contain a shapes element where color is &apos;red&apos;&lt;/span&gt;\n  {&lt;span class=&quot;hljs-attr&quot;&gt;$match&lt;/span&gt;: {&lt;span class=&quot;hljs-string&quot;&gt;&apos;shapes.color&apos;&lt;/span&gt;: {$in : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;yellow&apos;&lt;/span&gt;] } }},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;$project&lt;/span&gt;: {\n     &lt;span class=&quot;hljs-attr&quot;&gt;shapes&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;$filter&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;input&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;$shapes&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;as&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;shape&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;cond&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;$in&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;$$shape.color&apos;&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;red&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;yellow&apos;&lt;/span&gt;]]}\n     }}\n  }}\n])\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;test&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;( {&lt;span class=&quot;hljs-string&quot;&gt;&quot;shapes.color&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;_id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;})\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use aggregation function and &lt;code&gt;$project&lt;/code&gt; to get specific object field in document&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-title function_&quot;&gt;getCollection&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;geolocations&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;aggregate&lt;/span&gt;([ { $project : { geolocation : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;} } ])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;result:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectId&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;5e3ee15968879c0d5942464b&quot;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;geolocation&quot;&lt;/span&gt; : [ \n        {\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectId&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;5e3ee3ee68879c0d5942465e&quot;&lt;/span&gt;),\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;latitude&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;12.9718313&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;longitude&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;77.593551&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;country&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;India&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;city&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;Chennai&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;zipcode&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;560001&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;streetName&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sidney Road&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;countryCode&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;in&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;ip&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;116.75.115.248&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;date&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ISODate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2020-02-08T16:38:06.584Z&quot;&lt;/span&gt;)\n        }\n    ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Although the question was asked 9.6 years ago, this has been of immense help to numerous people, me being one of them. Thank you everyone for all your queries, hints and answers. Picking up from one of the answers here.. I found that the following method can also be used to project other fields in the parent document.This may be helpful to someone. &lt;/p&gt;\n\n&lt;p&gt;For the following document, the need was to find out if an employee (emp #7839) has his leave history set for the year 2020. Leave history is implemented as an embedded document within the parent Employee document. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;db.&lt;span class=&quot;hljs-property&quot;&gt;employees&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;( {&lt;span class=&quot;hljs-string&quot;&gt;&quot;leave_history.calendar_year&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2020&lt;/span&gt;}, \n    {&lt;span class=&quot;hljs-attr&quot;&gt;leave_history&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;$elemMatch&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;calendar_year&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2020&lt;/span&gt;}},&lt;span class=&quot;hljs-attr&quot;&gt;empno&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;ename&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;}).&lt;span class=&quot;hljs-title function_&quot;&gt;pretty&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n\n\n{\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectId&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;5e907ad23997181dde06e8fc&quot;&lt;/span&gt;),\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;empno&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;7839&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;ename&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;KING&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;mgrno&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;hiredate&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;1990-05-09&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;sal&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;100000&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;deptno&quot;&lt;/span&gt; : {\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;_id&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectId&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;5e9065f53997181dde06e8f8&quot;&lt;/span&gt;)\n        },\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;is_admin&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;N&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;is_approver&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;Y&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;is_manager&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;Y&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;user_role&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;AP&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;admin_approval_received&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;Y&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;active&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;Y&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;created_date&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;2020-04-10&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;updated_date&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;2020-04-10&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;application_usage_log&quot;&lt;/span&gt; : [\n                {\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;logged_in_as&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;AP&quot;&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;log_in_date&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;2020-04-10&quot;&lt;/span&gt;\n                },\n                {\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;logged_in_as&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;EM&quot;&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;log_in_date&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;ISODate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2020-04-16T07:28:11.959Z&quot;&lt;/span&gt;)\n                }\n        ],\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;leave_history&quot;&lt;/span&gt; : [\n                {\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;calendar_year&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;2020&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;pl_used&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;cl_used&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;sl_used&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n                },\n                {\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;calendar_year&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;2021&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;pl_used&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;cl_used&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;sl_used&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n                }\n        ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;if you want to do &lt;strong&gt;filter, set and find&lt;/strong&gt; at the same time.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; post = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;findOneAndUpdate&lt;/span&gt;(\n          {\n            &lt;span class=&quot;hljs-attr&quot;&gt;_id&lt;/span&gt;: req.&lt;span class=&quot;hljs-property&quot;&gt;params&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;tasks&lt;/span&gt;: {\n              &lt;span class=&quot;hljs-attr&quot;&gt;$elemMatch&lt;/span&gt;: {\n                &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: req.&lt;span class=&quot;hljs-property&quot;&gt;params&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;jobId&lt;/span&gt;,\n                date,\n              },\n            },\n          },\n          {\n            &lt;span class=&quot;hljs-attr&quot;&gt;$set&lt;/span&gt;: {\n              &lt;span class=&quot;hljs-string&quot;&gt;&apos;jobs.$[i].performer&apos;&lt;/span&gt;: performer,\n              &lt;span class=&quot;hljs-string&quot;&gt;&apos;jobs.$[i].status&apos;&lt;/span&gt;: status,\n              &lt;span class=&quot;hljs-string&quot;&gt;&apos;jobs.$[i].type&apos;&lt;/span&gt;: type,\n            },\n          },\n          {\n            &lt;span class=&quot;hljs-attr&quot;&gt;arrayFilters&lt;/span&gt;: [\n              {\n                &lt;span class=&quot;hljs-string&quot;&gt;&apos;i.id&apos;&lt;/span&gt;: req.&lt;span class=&quot;hljs-property&quot;&gt;params&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;jobId&lt;/span&gt;,\n              },\n            ],\n            &lt;span class=&quot;hljs-attr&quot;&gt;new&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n          }\n        );\n&lt;/code&gt;&lt;/pre&gt;\n    "],"185":["\n&lt;h3&gt;TL;DR&lt;/h3&gt;\n&lt;ol&gt;\n&lt;li&gt;Always have set &lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt; to &lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt; in your PDO connection code. It will let the database tell you what the actual problem is, be it with query, server, database or whatever.&lt;/li&gt;\n&lt;li&gt;Always replace every PHP variable in the SQL query with a question mark, and execute the query using &lt;a href=&quot;https://phpdelusions.net/pdo_examples/select#prepare&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;prepared statement&lt;/strong&gt;&lt;/a&gt;. It will help to avoid syntax errors of all sorts.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h3&gt;Explanation&lt;/h3&gt;\n&lt;p&gt;Sometimes your PDO code produces an error like &lt;code&gt;Call to a member function execute()&lt;/code&gt; or similar. Or even without any error but the query doesn&apos;t work all the same. It means that your query failed to execute.&lt;/p&gt;\n&lt;p&gt;Every time a query fails, MySQL has an error message that &lt;strong&gt;explains the reason&lt;/strong&gt;. Unfortunately, by default such errors are not transferred to PHP, and all you have is a silence or a cryptic error message mentioned above.  Hence it is very important to configure PHP and PDO to report you MySQL errors. And once you get the error message, it will be a no-brainer to fix the issue.&lt;/p&gt;\n&lt;p&gt;In order to get the detailed information about the problem, either put the following line in your code right after connect&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$dbh&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;setAttribute&lt;/span&gt;( PDO::&lt;span class=&quot;hljs-variable constant_&quot;&gt;ATTR_ERRMODE&lt;/span&gt;, PDO::&lt;span class=&quot;hljs-variable constant_&quot;&gt;ERRMODE_EXCEPTION&lt;/span&gt; );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(where &lt;code&gt;$dbh&lt;/code&gt; is the name of your PDO instance variable) or - better - add this parameter as a &lt;a href=&quot;https://phpdelusions.net/pdo_examples/connect_to_mysql#example&quot; rel=&quot;nofollow noreferrer&quot;&gt;connection option&lt;/a&gt;. After that all database errors will be translated into PDO exceptions which, if left alone, would act just as regular PHP errors.&lt;/p&gt;\n&lt;p&gt;After getting the error message, you have to read and comprehend it. It sounds too obvious, but learners often overlook the &lt;em&gt;meaning&lt;/em&gt; of the error message. Yet most of time it explains the problem pretty straightforward:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Say, if it says that a particular table doesn&apos;t exist, you have to check spelling, typos, letter case. Also you have to make sure that your PHP script connects to a correct database&lt;/li&gt;\n&lt;li&gt;Or, if it says there is an error in the SQL syntax, then you have to examine your SQL. And the problem spot is right &lt;strong&gt;before&lt;/strong&gt; the query part cited in the error message.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;You have to also &lt;em&gt;trust&lt;/em&gt; the error message. If it says that number of tokens doesn&apos;t match the number of bound variables then it &lt;em&gt;is&lt;/em&gt; so. Same goes for absent tables or columns. Given the choice, whether it&apos;s your own mistake or the error message is wrong, always stick to the former. Again it sounds condescending, but hundreds of questions on this very site prove this advice extremely useful.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Note that in order to see PDO errors, you have to be able to see PHP errors in general. To do so, you have to configure PHP depends on the site environment:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;on a &lt;strong&gt;development&lt;/strong&gt; server it is very handy to have errors right on the screen, for which displaying errors have to be turned on:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;while on a &lt;strong&gt;live&lt;/strong&gt; site, all errors have to be &lt;strong&gt;logged, but never shown&lt;/strong&gt; to the client. For this, configure PHP this way:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;log_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that &lt;code&gt;error_reporting&lt;/code&gt; should be set to &lt;code&gt;E_ALL&lt;/code&gt; all the time.&lt;/p&gt;\n&lt;p&gt;Also note that despite the common delusion, &lt;strong&gt;no try-catch have to be used for the error reporting&lt;/strong&gt;. PHP will report you PDO errors already, and in a way better form. An uncaught exception is very good for development, yet if you want to show a customized error page, still don&apos;t use try catch for this, but just set a &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot; rel=&quot;nofollow noreferrer&quot;&gt;custom error handler&lt;/a&gt;. In a nutshell, you don&apos;t have to treat PDO errors as something special but regard them as any other error in your code.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;\nSometimes there is no error but no results either. Then it means, &lt;em&gt;there is no data to match your criteria&lt;/em&gt;. So you have to admit this fact, even if you can swear the data and the criteria are all right. They are not. You have to check them again. I&apos;ve short answer that would help you to pinpoint the matching issue, &lt;a href=&quot;https://stackoverflow.com/a/57986043/285587&quot;&gt;Having issue with matching rows in the database using PDO&lt;/a&gt;. Just follow this instruction, and the linked tutorial step by step and either have your problem solved or have an answerable question for Stack Overflow.&lt;/p&gt;\n    "]},"page":"86","randomQuestions":[{"title":"Percentage Height HTML 5/CSS","slug":"percentage-height-html-5css-1657387471048"},{"title":"How do I make a list of data frames?","slug":"how-do-i-make-a-list-of-data-frames-1657385480437"},{"title":"How to check if element is visible after scrolling?","slug":"how-to-check-if-element-is-visible-after-scrolling-1657387987960"},{"title":"How do I execute a program or call a system command?","slug":"how-do-i-execute-a-program-or-call-a-system-command-1657385465629"},{"title":"Strange result when removing item from a list while iterating over it [duplicate]","slug":"strange-result-when-removing-item-from-a-list-while-iterating-over-it-duplicate-1657387735759"},{"title":"Why does this UnboundLocalError occur (closure)? [duplicate]","slug":"why-does-this-unboundlocalerror-occur-(closure)-duplicate-1657388531538"},{"title":"The difference between bracket [ ] and double bracket [[ ]] for accessing the elements of a list or dataframe","slug":"the-difference-between-bracket-and-double-bracket-for-accessing-the-elements-of-a-list-or-dataframe-1657388451711"},{"title":"How to use Regular Expressions (Regex) in Microsoft Excel both in-cell and loops","slug":"how-to-use-regular-expressions-(regex)-in-microsoft-excel-both-in-cell-and-loops-1657387487287"},{"title":"How do I vertically center text with CSS? [duplicate]","slug":"how-do-i-vertically-center-text-with-css-duplicate-1657387645821"},{"title":"How to reshape data from long to wide format","slug":"how-to-reshape-data-from-long-to-wide-format-1657384486421"},{"title":"Understanding slicing","slug":"understanding-slicing-1657384397680"},{"title":"Example images for code and mark-up Q&As [closed]","slug":"example-images-for-code-and-mark-up-qandas-closed-1657387690222"},{"title":"How to unnest (explode) a column in a pandas DataFrame, into multiple rows","slug":"how-to-unnest-(explode)-a-column-in-a-pandas-dataframe-into-multiple-rows-1657387806735"},{"title":"Why does printf not flush after the call unless a newline is in the format string?","slug":"why-does-printf-not-flush-after-the-call-unless-a-newline-is-in-the-format-string-1657387853407"},{"title":"\"Notice: Undefined variable\", \"Notice: Undefined index\", \"Warning: Undefined array key\", and \"Notice: Undefined offset\" using PHP","slug":"\"notice:-undefined-variable\"-\"notice:-undefined-index\"-\"warning:-undefined-array-key\"-and-\"notice:-undefined-offset\"-using-php-1657384250748"},{"title":"Is there a difference between \"==\" and \"is\"?","slug":"is-there-a-difference-between-\"\"-and-\"is\"-1657387902231"},{"title":"How can I parse a JSON file with PHP? [duplicate]","slug":"how-can-i-parse-a-json-file-with-php-duplicate-1657388002325"},{"title":"What is the difference between client-side and server-side programming?","slug":"what-is-the-difference-between-client-side-and-server-side-programming-1657384372926"},{"title":"How to deal with floating point number precision in JavaScript?","slug":"how-to-deal-with-floating-point-number-precision-in-javascript-1657387293762"},{"title":"Is there a built in function for string natural sort?","slug":"is-there-a-built-in-function-for-string-natural-sort-1657388069553"}]},"__N_SSG":true}