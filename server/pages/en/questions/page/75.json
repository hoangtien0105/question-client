{"pageProps":{"data":{"count":610,"rows":[{"id":240,"title":"WebDriverWait not working as expected","slug":"webdriverwait-not-working-as-expected-1657387373148","postType":"QUESTION","createdAt":"2022-07-09T17:22:53.000Z","updatedAt":"2022-07-09T17:22:53.000Z","tags":[{"id":1586,"name":"web-scraping","slug":"web-scraping","createdAt":"2022-07-09T17:22:53.000Z","updatedAt":"2022-07-09T17:22:53.000Z","Questions_Tags":{"questionId":240,"tagId":1586}}]},{"id":239,"title":"How to filter Pandas dataframe using 'in' and 'not in' like in SQL","slug":"how-to-filter-pandas-dataframe-using-'in'-and-'not-in'-like-in-sql-1657387371355","postType":"QUESTION","createdAt":"2022-07-09T17:22:51.000Z","updatedAt":"2022-07-09T17:22:51.000Z","tags":[{"id":1583,"name":"sql-function","slug":"sql-function","createdAt":"2022-07-09T17:22:51.000Z","updatedAt":"2022-07-09T17:22:51.000Z","Questions_Tags":{"questionId":239,"tagId":1583}}]},{"id":238,"title":"jQuery Ajax File Upload","slug":"jquery-ajax-file-upload-1657387368970","postType":"QUESTION","createdAt":"2022-07-09T17:22:48.000Z","updatedAt":"2022-07-09T17:22:48.000Z","tags":[{"id":1578,"name":"post","slug":"post","createdAt":"2022-07-09T17:22:49.000Z","updatedAt":"2022-07-09T17:22:49.000Z","Questions_Tags":{"questionId":238,"tagId":1578}}]},{"id":237,"title":"Cleansing User Passwords","slug":"cleansing-user-passwords-1657387365583","postType":"QUESTION","createdAt":"2022-07-09T17:22:45.000Z","updatedAt":"2022-07-09T17:22:45.000Z","tags":[]},{"id":236,"title":"Secure hash and salt for PHP passwords","slug":"secure-hash-and-salt-for-php-passwords-1657387363258","postType":"QUESTION","createdAt":"2022-07-09T17:22:43.000Z","updatedAt":"2022-07-09T17:22:43.000Z","tags":[{"id":1569,"name":"hash","slug":"hash","createdAt":"2022-07-09T17:22:43.000Z","updatedAt":"2022-07-09T17:22:43.000Z","Questions_Tags":{"questionId":236,"tagId":1569}}]}]},"answers":{"236":["\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: This answer was written in 2008.&lt;/p&gt;\n  \n  &lt;p&gt;Since then, PHP has given us &lt;a href=&quot;http://php.net/manual/en/function.password-hash.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;password_hash&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/en/function.password-verify.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;password_verify&lt;/code&gt;&lt;/a&gt; and, since their introduction, they are the recommended password hashing &amp;amp; checking method.&lt;/p&gt;\n  \n  &lt;p&gt;The theory of the answer is still a good read though.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;h2&gt;TL;DR&lt;/h2&gt;\n\n&lt;h3&gt;Don&apos;ts&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Don&apos;t limit what characters users can enter for passwords. Only idiots do this.&lt;/li&gt;\n&lt;li&gt;Don&apos;t limit the length of a password. If your users want a sentence with supercalifragilisticexpialidocious in it, don&apos;t prevent them from using it.&lt;/li&gt;\n&lt;li&gt;Don&apos;t strip or escape HTML and special characters in the password.&lt;/li&gt;\n&lt;li&gt;Never store your user&apos;s password in plain-text.&lt;/li&gt;\n&lt;li&gt;Never email a password to your user &lt;em&gt;except when they have lost theirs, and you sent a temporary one.&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;Never, ever log passwords in any manner.&lt;/li&gt;\n&lt;li&gt;Never hash passwords with &lt;a href=&quot;http://arstechnica.com/security/2012/12/oh-great-new-attack-makes-some-password-cracking-faster-easier-than-ever/&quot; rel=&quot;noreferrer&quot;&gt;SHA1&lt;/a&gt; or MD5 or even SHA256! &lt;a href=&quot;http://securityledger.com/new-25-gpu-monster-devours-passwords-in-seconds/&quot; rel=&quot;noreferrer&quot;&gt;Modern crackers&lt;/a&gt; can exceed 60 and 180 billion hashes/second (respectively).&lt;/li&gt;\n&lt;li&gt;Don&apos;t mix &lt;a href=&quot;http://blog.ircmaxell.com/2015/03/security-issue-combining-bcrypt-with.html&quot; rel=&quot;noreferrer&quot;&gt;bcrypt and with the &lt;em&gt;raw&lt;/em&gt; output of hash()&lt;/a&gt;, either use hex output or base64_encode it. (This applies to any input that may have a rogue &lt;code&gt;\\0&lt;/code&gt; in it, which can seriously weaken security.)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3&gt;Dos&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Use scrypt when you can; bcrypt if you cannot.&lt;/li&gt;\n&lt;li&gt;Use PBKDF2 if you cannot use either bcrypt or scrypt, with SHA2 hashes.&lt;/li&gt;\n&lt;li&gt;Reset everyone&apos;s passwords when the database is compromised.&lt;/li&gt;\n&lt;li&gt;Implement a reasonable 8-10 character minimum length, plus require at least 1 upper case letter, 1 lower case letter, a number, and a symbol. This will improve the entropy of the password, in turn making it harder to crack. (See the &quot;What makes a good password?&quot; section for some debate.)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Why hash passwords anyway?&lt;/h2&gt;\n\n&lt;p&gt;The objective behind hashing passwords is simple: preventing malicious access to user accounts by compromising the database. So the goal of password hashing is to deter a hacker or cracker by costing them too much time or money to calculate the plain-text passwords. And time/cost are the best deterrents in your arsenal.&lt;/p&gt;\n\n&lt;p&gt;Another reason that you want a good, robust hash on a user accounts is to give you enough time to change all the passwords in the system. If your database is compromised you will need enough time to at &lt;em&gt;least&lt;/em&gt; lock the system down, if not change every password in the database.&lt;/p&gt;\n\n&lt;p&gt;Jeremiah Grossman, CTO of Whitehat Security, &lt;a href=&quot;https://www.whitehatsec.com/blog/cracking-aes-256-dmgs-and-epic-self-pwnage/&quot; rel=&quot;noreferrer&quot;&gt;stated on White Hat Security blog&lt;/a&gt; after a recent password recovery that required brute-force breaking of his password protection:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Interestingly, in living out this nightmare, I learned A LOT I didnt know about password cracking, storage, and complexity. &lt;em&gt;Ive come to appreciate why password storage is ever so much more important than password complexity. If you dont know how your password is stored, then all you really can depend upon is complexity.&lt;/em&gt; This might be common knowledge to password and crypto pros, but for the average InfoSec or Web Security expert, I highly doubt it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;(Emphasis mine.)&lt;/p&gt;\n\n&lt;h2&gt;What makes a &lt;em&gt;good&lt;/em&gt; password anyway?&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://xkcd.com/936/&quot; rel=&quot;noreferrer&quot;&gt;Entropy&lt;/a&gt;. (Not that I fully subscribe to Randall&apos;s viewpoint.)&lt;/p&gt;\n\n&lt;p&gt;In short, entropy is how much variation is within the password. When a password is only lowercase roman letters, that&apos;s only 26 characters. That isn&apos;t much variation. Alpha-numeric passwords are better, with 36 characters. But allowing upper and lower case, with symbols, is roughly 96 characters. That&apos;s a lot better than just letters. One problem is, to make our passwords memorable we insert patternswhich reduces entropy. Oops!&lt;/p&gt;\n\n&lt;p&gt;Password entropy is &lt;a href=&quot;https://ritcyberselfdefense.wordpress.com/2011/09/24/how-to-calculate-password-entropy/&quot; rel=&quot;noreferrer&quot;&gt;approximated&lt;/a&gt; easily. Using the full range of ascii characters (roughly 96 typeable characters) yields an entropy of 6.6 per character, which at 8 characters for a password is still too low (52.679 bits of entropy) for future security. But the good news is: longer passwords, and passwords with unicode characters, really increase the entropy of a password and make it harder to crack.&lt;/p&gt;\n\n&lt;p&gt;There&apos;s a longer discussion of password entropy on the &lt;a href=&quot;https://crypto.stackexchange.com/questions/374/how-should-i-calculate-the-entropy-of-a-password&quot;&gt;Crypto StackExchange&lt;/a&gt; site. A good Google search will also turn up a lot of results.&lt;/p&gt;\n\n&lt;p&gt;In the comments I talked with @popnoodles, who pointed out that &lt;em&gt;enforcing&lt;/em&gt; a password policy of X length with X many letters, numbers, symbols, etc, can actually reduce entropy by making the password scheme more predictable. I do agree. Randomess, as truly random as possible, is always the safest but least memorable solution.&lt;/p&gt;\n\n&lt;p&gt;So far as I&apos;ve been able to tell, making the world&apos;s best password is a Catch-22. Either its not memorable, too predictable, too short, too many unicode characters (hard to type on a Windows/Mobile device), too long, etc. No password is truly good enough for our purposes, so we must protect them as though they were in Fort Knox.&lt;/p&gt;\n\n&lt;h2&gt;Best practices&lt;/h2&gt;\n\n&lt;p&gt;Bcrypt and &lt;a href=&quot;http://www.tarsnap.com/scrypt.html&quot; rel=&quot;noreferrer&quot;&gt;scrypt&lt;/a&gt; are the current best practices. &lt;a href=&quot;http://www.tarsnap.com/scrypt.html&quot; rel=&quot;noreferrer&quot;&gt;Scrypt&lt;/a&gt; will be better than bcrypt in time, but it hasn&apos;t seen adoption as a standard by Linux/Unix or by webservers, and hasn&apos;t had in-depth reviews of its algorithm posted yet. But still, the future of the algorithm does look promising. If you are working with Ruby there is an &lt;a href=&quot;http://rubygems.org/gems/scrypt&quot; rel=&quot;noreferrer&quot;&gt;scrypt gem&lt;/a&gt; that will help you out, and Node.js now has its own &lt;a href=&quot;https://npmjs.org/package/scrypt&quot; rel=&quot;noreferrer&quot;&gt;scrypt&lt;/a&gt; package. You can use Scrypt in PHP either via the &lt;a href=&quot;https://pecl.php.net/package/scrypt&quot; rel=&quot;noreferrer&quot;&gt;Scrypt&lt;/a&gt; extension or the &lt;a href=&quot;https://paragonie.com/book/pecl-libsodium/read/07-password-hashing.md&quot; rel=&quot;noreferrer&quot;&gt;Libsodium&lt;/a&gt; extension (both are available in PECL).&lt;/p&gt;\n\n&lt;p&gt;I highly suggest reading the documentation for the &lt;a href=&quot;http://us.php.net/crypt&quot; rel=&quot;noreferrer&quot;&gt;crypt function&lt;/a&gt; if you want to understand how to use bcrypt, or finding yourself a &lt;a href=&quot;https://stackoverflow.com/questions/4795385/how-do-you-use-bcrypt-for-hashing-passwords-in-php/6337021#6337021&quot;&gt;good&lt;/a&gt; &lt;a href=&quot;https://gist.github.com/1070401&quot; rel=&quot;noreferrer&quot;&gt;wrapper&lt;/a&gt; or use something like &lt;a href=&quot;http://www.openwall.com/phpass/&quot; rel=&quot;noreferrer&quot;&gt;PHPASS&lt;/a&gt; for a more legacy implementation. I recommend a minimum of 12 rounds of bcrypt, if not 15 to 18.&lt;/p&gt;\n\n&lt;p&gt;I changed my mind about using bcrypt when I learned that bcrypt only uses blowfish&apos;s key schedule, with a variable cost mechanism. The latter lets you increase the cost to brute-force a password by increasing blowfish&apos;s already expensive key schedule.&lt;/p&gt;\n\n&lt;h2&gt;Average practices&lt;/h2&gt;\n\n&lt;p&gt;I almost can&apos;t imagine this situation anymore. &lt;a href=&quot;http://www.openwall.com/phpass/&quot; rel=&quot;noreferrer&quot;&gt;PHPASS&lt;/a&gt; supports PHP 3.0.18 through 5.3, so it is usable on almost every installation imaginableand should be used if you don&apos;t &lt;em&gt;know for certain&lt;/em&gt; that your environment supports bcrypt.&lt;/p&gt;\n\n&lt;p&gt;But suppose that you cannot use bcrypt or PHPASS at all. What then?&lt;/p&gt;\n\n&lt;p&gt;Try an implementation of &lt;a href=&quot;http://www.itnewb.com/tutorial/Encrypting-Passwords-with-PHP-for-Storage-Using-the-RSA-PBKDF2-Standard&quot; rel=&quot;noreferrer&quot;&gt;PDKBF2&lt;/a&gt; with the &lt;a href=&quot;https://security.stackexchange.com/questions/3959/recommended-of-iterations-when-using-pkbdf2-sha256&quot;&gt;maximum number of rounds&lt;/a&gt; that your environment/application/user-perception can tolerate. The lowest number I&apos;d recommend is 2500 rounds. Also, make sure to use &lt;a href=&quot;http://php.net/hash_hmac&quot; rel=&quot;noreferrer&quot;&gt;hash_hmac()&lt;/a&gt; if it is available to make the operation harder to reproduce.&lt;/p&gt;\n\n&lt;h2&gt;Future Practices&lt;/h2&gt;\n\n&lt;p&gt;Coming in PHP 5.5 is a &lt;a href=&quot;http://php.net/manual/en/ref.password.php&quot; rel=&quot;noreferrer&quot;&gt;full password protection library&lt;/a&gt; that abstracts away any pains of working with bcrypt. While most of us are stuck with PHP 5.2 and 5.3 in most common environments, especially shared hosts, @ircmaxell has built a &lt;a href=&quot;https://github.com/ircmaxell/password_compat&quot; rel=&quot;noreferrer&quot;&gt;compatibility layer&lt;/a&gt; for the coming API that is backward compatible to PHP 5.3.7.&lt;/p&gt;\n\n&lt;h2&gt;Cryptography Recap &amp;amp; Disclaimer&lt;/h2&gt;\n\n&lt;p&gt;The computational power required to actually &lt;em&gt;crack&lt;/em&gt; a hashed password doesn&apos;t exist. The only way for computers to &quot;crack&quot; a password is to recreate it and simulate the hashing algorithm used to secure it. The speed of the hash is linearly related to its ability to be brute-forced. Worse still, most hash algorithms can be easily parallelized to perform even faster. This is why costly schemes like bcrypt and scrypt are so important.&lt;/p&gt;\n\n&lt;p&gt;You cannot possibly foresee all threats or avenues of attack, and so you must make your best effort to protect your users &lt;strong&gt;up front&lt;/strong&gt;. If you do not, then you might even miss the fact that you were attacked until it&apos;s too late... &lt;em&gt;and you&apos;re liable&lt;/em&gt;. To avoid that situation, act paranoid to begin with. Attack your own software (internally) and attempt to steal user credentials, or modify other user&apos;s accounts or access their data. If you don&apos;t test the security of your system, then you cannot blame anyone but yourself.&lt;/p&gt;\n\n&lt;p&gt;Lastly: I am not a cryptographer. Whatever I&apos;ve said is my opinion, but I happen to think it&apos;s based on good ol&apos; common sense ... and lots of reading. Remember, be as paranoid as possible, make things as hard to intrude as possible, and then, if you are still worried, contact a white-hat hacker or cryptographer to see what they say about your code/system.&lt;/p&gt;\n    ","\n&lt;p&gt;A much shorter and safer answer - &lt;strong&gt;don&apos;t write your own password mechanism at all&lt;/strong&gt;, use a tried and tested mechanism.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;PHP 5.5 or higher: &lt;a href=&quot;http://php.net/manual/en/function.password-hash.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;password_hash()&lt;/a&gt; is good quality and part of PHP core.&lt;/li&gt;\n&lt;li&gt;PHP 4.x (obsolete): OpenWall&apos;s &lt;a href=&quot;http://www.openwall.com/phpass/&quot; rel=&quot;nofollow noreferrer&quot;&gt;phpass&lt;/a&gt; library is much better than most custom code - used in WordPress, Drupal, etc.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Most programmers just don&apos;t have the expertise to write crypto related code safely without introducing vulnerabilities.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Quick self-test:&lt;/strong&gt; what is password stretching and how many iterations should you use?  If you don&apos;t know the answer, you should use &lt;code&gt;password_hash()&lt;/code&gt;, as password stretching is now a critical feature of password mechanisms due to much faster CPUs and the use of &lt;a href=&quot;http://blog.crackpassword.com/2012/07/accelerating-password-recovery-the-addition-of-fpga/&quot; rel=&quot;nofollow noreferrer&quot;&gt;GPUs and FPGAs&lt;/a&gt; to crack passwords at rates of &lt;a href=&quot;http://en.wikipedia.org/wiki/Password_cracking#Time_needed_for_password_searches&quot; rel=&quot;nofollow noreferrer&quot;&gt;billions of guesses per second&lt;/a&gt; (with GPUs).&lt;/p&gt;\n&lt;p&gt;As of 2012, you could &lt;a href=&quot;http://arstechnica.com/security/2012/12/25-gpu-cluster-cracks-every-standard-windows-password-in-6-hours/&quot; rel=&quot;nofollow noreferrer&quot;&gt;crack all 8-character Windows passwords in 6 hours&lt;/a&gt; using 25 GPUs installed in 5 desktop PCs.  This is brute-forcing i.e. enumerating and checking &lt;em&gt;every 8-character Windows password&lt;/em&gt;, including special characters, and is not a dictionary attack. With modern GPUs, you can of course crack more passwords or use fewer GPUs - or rent the GPUs in the cloud for a few hours at reasonable cost.&lt;/p&gt;\n&lt;p&gt;There are also many rainbow table attacks on Windows passwords that run on ordinary CPUs and are very fast.&lt;/p&gt;\n&lt;p&gt;All this is because Windows &lt;em&gt;still&lt;/em&gt; &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/security/kerberos/passwords-technical-overview&quot; rel=&quot;nofollow noreferrer&quot;&gt;doesn&apos;t salt or stretch&lt;/a&gt; its passwords, &lt;a href=&quot;https://www.guidingtech.com/61991/cracking-windows-10-password-prevent/&quot; rel=&quot;nofollow noreferrer&quot;&gt;even in Windows 10&lt;/a&gt;.  This is still true in 2021.  Don&apos;t make the same mistake as Microsoft did!&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;See also:&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1581610/how-can-i-store-my-users-passwords-safely/1581919#1581919&quot;&gt;excellent answer&lt;/a&gt; with more about why &lt;code&gt;password_hash()&lt;/code&gt; or &lt;code&gt;phpass&lt;/code&gt; are the best way to go.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2015/march/enough-with-the-salts-updates-on-secure-password-schemes/&quot; rel=&quot;nofollow noreferrer&quot;&gt;good blog article&lt;/a&gt; giving recommmended &apos;work factors&apos; (number of iterations) for main algorithms including bcrypt, scrypt and PBKDF2.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I would not store the password hashed in two different ways, because then the system is at least as weak as the weakest of the hash algorithms in use.&lt;/p&gt;\n    ","\n&lt;p&gt;As of PHP 5.5, PHP has simple, secure functions for hashing and verifying passwords, &lt;a href=&quot;http://php.net/manual/en/function.password-hash.php&quot; rel=&quot;noreferrer&quot;&gt;password_hash()&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/en/function.password-verify.php&quot; rel=&quot;noreferrer&quot;&gt;password_verify()&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;anna&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$hash&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;password_hash&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;, PASSWORD_DEFAULT);\n&lt;span class=&quot;hljs-variable&quot;&gt;$expensiveHash&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;password_hash&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;, PASSWORD_DEFAULT, &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;cost&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;password_verify&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;anna&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$hash&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//Returns true&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;password_verify&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;anna&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$expensiveHash&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//Also returns true&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;password_verify&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;elsa&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$hash&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//Returns false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When &lt;code&gt;password_hash()&lt;/code&gt; is used, it generates a random salt and includes it in the outputted hash (along with the the cost and algorithm used.) &lt;code&gt;password_verify()&lt;/code&gt; then reads that hash and determines the salt and encryption method used, and verifies it against the provided plaintext password.&lt;/p&gt;\n\n&lt;p&gt;Providing the &lt;code&gt;PASSWORD_DEFAULT&lt;/code&gt; instructs PHP to use the default hashing algorithm of the installed version of PHP. Exactly which algorithm that means is intended to change over time in future versions, so that it will always be one of the strongest available algorithms.&lt;/p&gt;\n\n&lt;p&gt;Increasing cost (which defaults to 10) makes the hash harder to brute-force but also means generating hashes and verifying passwords against them will be more work for your server&apos;s CPU.&lt;/p&gt;\n\n&lt;p&gt;Note that even though the default hashing algorithm may change, old hashes will continue to verify just fine because the algorithm used is stored in the hash and &lt;code&gt;password_verify()&lt;/code&gt; picks up on it.&lt;/p&gt;\n    ","\n&lt;p&gt;Though the question has been answered, I just want to reiterate that salts used for hashing should be random and not like email address as suggested in first answer. &lt;/p&gt;\n\n&lt;p&gt;More explanation is available at- &lt;a href=&quot;http://www.pivotalsecurity.com/blog/password-hashing-salt-should-it-be-random/&quot; rel=&quot;noreferrer&quot;&gt;http://www.pivotalsecurity.com/blog/password-hashing-salt-should-it-be-random/&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Recently I had a discussion whether password hashes salted with random\n  bits are more secure than the one salted with guessable or known\n  salts. Lets see: If the system storing password is compromised as\n  well as the system which stores the random salt, the attacker will\n  have access to hash as well as salt, so whether the salt is random or\n  not, doesnt matter. The attacker will can generate pre-computed\n  rainbow tables to crack the hash. Here comes the interesting part- it\n  is not so trivial to generate pre-computed tables. Let us take example\n  of WPA security model. Your WPA password is actually never sent to\n  Wireless Access Point. Instead, it is hashed with your SSID (the\n  network name- like Linksys, Dlink etc). A very good explanation of how\n  this works is here. In order to retrieve password from hash, you will\n  need to know the password as well as salt (network name). Church of\n  Wifi has already pre-computed hash tables which has top 1000 SSIDs and\n  about 1 million passwords. The size is of all tables is about 40 GB.\n  As you can read on their site, someone used 15 FGPA arrays for 3 days\n  to generate  these tables. Assuming victim is using the SSID as\n  a387csf3 and password as 123456, will it be cracked by those\n  tables? No! .. it cannot. Even if the password is weak, the tables\n  dont have hashes for SSID a387csf3.  This is the beauty of having\n  random salt. It will deter crackers who thrive upon pre-computed\n  tables. Can it stop a determined hacker? Probably not. But using\n  random salts does provide additional layer of defense. While we are on\n  this topic, let us discuss additional advantage of storing random\n  salts on a separate system. Scenario #1 : Password hashes are stored\n  on system X and salt values used for hashing are stored on system Y.\n  These salt values are guessable or known (e.g. username) Scenario#2 :\n  Password hashes are stored on system X and salt values used for\n  hashing are stored on system Y. These salt values are random. In case\n  system X has been compromised, as you can guess, there is a huge\n  advantage of using random salt on a separate system (Scenario #2) .\n  The attacker will need to guess addition values to be able to crack\n  hashes. If a 32 bit salt is used, 2^32= 4,294,967,296 (about 4.2\n  billion) iterations will can be required for each password guessed.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;I just want to point out that PHP 5.5 includes a &lt;a href=&quot;http://www.php.net/manual/en/ref.password.php&quot;&gt;password hashing API&lt;/a&gt; that provides a wrapper around &lt;code&gt;crypt()&lt;/code&gt;. This API significantly simplifies the task of hashing, verifying and rehashing password hashes. The author has also released a &lt;a href=&quot;https://github.com/ircmaxell/password_compat&quot;&gt;compatibility pack&lt;/a&gt; (in the form of a single password.php file that you simply &lt;code&gt;require&lt;/code&gt; to use), for those using PHP 5.3.7 and later and want to use this right now.&lt;/p&gt;\n\n&lt;p&gt;It only supports BCRYPT for now, but it aims to be easily extended to include other password hashing techniques and because the technique and cost is stored as part of the hash, changes to your prefered hashing technique/cost will not invalidate current hashes, the framework will automagically, use the correct technique/cost when validating. It also handles generating a &quot;secure&quot; salt if you do not explicitly define your own.&lt;/p&gt;\n\n&lt;p&gt;The API exposes four functions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;password_get_info()&lt;/code&gt; - returns information about the given hash&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;password_hash()&lt;/code&gt; - creates a password hash&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;password_needs_rehash()&lt;/code&gt; - checks if the given hash matches the given options. Useful to check if the hash conforms to your current technique/cost scheme allowing you to rehash if necessary&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;password_verify()&lt;/code&gt; - verifies that a password matches a hash&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;At the moment these functions accept the PASSWORD_BCRYPT and PASSWORD_DEFAULT password constants, which are synonymous at the moment, the difference being that PASSWORD_DEFAULT &quot;may change in newer PHP releases when newer, stronger hashing algorithms are supported.&quot; Using PASSWORD_DEFAULT and password_needs_rehash() on login (and rehashing if necessary) should ensure that your hashes are reasonably resilient to brute-force attacks with little to no work for you.&lt;/p&gt;\n\n&lt;p&gt;EDIT: I just realised that this is mentioned briefly in Robert K&apos;s answer. I&apos;ll leave this answer here since I think it provides a bit more information about how it works and the ease of use it provides for those who don&apos;t know security.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m using &lt;a href=&quot;http://www.openwall.com/phpass/&quot;&gt;Phpass&lt;/a&gt; which is a simple one-file PHP class that could be implemented very easily in nearly every PHP project. See also &lt;a href=&quot;http://www.h-online.com/security/features/Storing-passwords-in-uncrackable-form-1255576.html?page=4&quot;&gt;The H&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;By default it used strongest available encryption that is implemented in Phpass, which is &lt;code&gt;bcrypt&lt;/code&gt; and falls back to other encryptions down to MD5 to provide backward compatibility to frameworks like Wordpress.&lt;/p&gt;\n\n&lt;p&gt;The returned hash could be stored in database as it is. Sample use for generating hash is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$t_hasher&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PasswordHash&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;FALSE&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$hash&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$t_hasher&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;HashPassword&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To verify password, one can use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$t_hasher&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PasswordHash&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;FALSE&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$check&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$t_hasher&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;CheckPassword&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$hash&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;THINGS TO REMEMBER&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;A lot has been said about Password encryption for PHP, most of which is very good advice, but before you even start the process of using PHP for password encryption make sure you have the following implemented or ready to be implemented.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;SERVER&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;PORTS&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;No matter how good your encryption is if you don&apos;t properly secure the server that runs the PHP and DB all your efforts are worthless. Most servers function relatively the same way, they have ports assigned to allow you to access them remotely either through ftp or shell. Make sure that you change the default port of which ever remote connection you have active. By not doing this you in effect have made the attacker do one less step in accessing your system. &lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;USERNAME&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;For all that is good in the world do not use the username admin, root or something similar. Also if you are on a unix based system DO NOT make the root account login accessible, it should always be sudo only.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;PASSWORD&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;You tell your users to make good passwords to avoid getting hacked, do the same. What is the point in going through all the effort of locking your front door when you have the backdoor wide open.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;DATABASE&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;SERVER&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Ideally you want your DB and APPLICATION on separate servers. This is not always possible due to cost, but it does allow for some safety as the attacker will have to go through two steps to fully access the system.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;USER&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Always have your application have its own account to access the DB, and only give it the privileges it will need. &lt;/p&gt;\n\n&lt;p&gt;Then have a separate user account for you that is not stored anywhere on the server, not even in the application. &lt;/p&gt;\n\n&lt;p&gt;Like always DO NOT make this root or something similar.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;PASSWORD&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Follow the same guidelines as with all good passwords. Also don&apos;t reuse the same password on any SERVER or DB accounts on the same system.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;PASSWORD&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;NEVER EVER store a password in your DB, instead store the hash and unique salt, I will explain why later.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;HASHING&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;ONE WAY HASHING!!!!!!!, Never hash a password in a way that it can be reversed, Hashes should be one way, meaning you don&apos;t reverse them and compare them to the password, you instead hash the entered password the same way and compare the two hashes. This means that even if an attacker gets access to the DB he doesn&apos;t know what the actually password is, just its resulting hash. Which means more security for your users in the worst possible scenario.&lt;/p&gt;\n\n&lt;p&gt;There are a lot of good hashing functions out there (&lt;code&gt;password_hash&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, etc...) but you need to select a good algorithm for the hash to be effective. (bcrypt and ones similar to it are decent algorithms.) &lt;/p&gt;\n\n&lt;p&gt;When hashing speed is the key, the slower the more resistant to Brute Force attacks. &lt;/p&gt;\n\n&lt;p&gt;One of the most common mistakes in hashing is that hashes are not unique to the users. This is mainly because salts are not uniquely generated.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;SALTING&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Passwords should always be salted before hashed. Salting adds a random string to the password so similar passwords don&apos;t appear the same in the DB. However if the salt is not unique to each user (ie: you use a hard coded salt) than you pretty much have made your salt worthless. Because once an attacker figures out one password salt he has the salt for all of them. &lt;/p&gt;\n\n&lt;p&gt;When you create a salt make sure it is unique to the password it is salting, then store both the completed hash and salt in your DB. What this will do is make it so that an attacker will have to individually crack each salt and hash before they can gain access. This means a lot more work and time for the attacker. &lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;USERS CREATING PASSWORDS&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;If the user is creating a password through the frontend that means it has to be sent to the server. This opens up a security issue because that means the unencrypted password is being sent to the server and if a attacker is able to listen and access that all your security in PHP is worthless. ALWAYS transmit the data SECURELY, this is done through SSL, but be weary even SSL is not flawless (OpenSSL&apos;s Heartbleed flaw is an example of this). &lt;/p&gt;\n\n&lt;p&gt;Also make the user create a secure password, it is simple and should always be done, the user will be grateful for it in the end.&lt;/p&gt;\n\n&lt;p&gt;Finally, no matter the security measures you take nothing is 100% secure, the more advanced the technology to protect becomes the more advanced the attacks become. But following these steps will make your site more secure and far less desirable for attackers to go after.&lt;/p&gt;\n\n&lt;p&gt;Here is a PHP class that creates a hash and salt for a password easily&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://git.io/mSJqpw&quot;&gt;http://git.io/mSJqpw&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Google says SHA256 is available to PHP.&lt;/p&gt;\n\n&lt;p&gt;You should definitely use a salt. I&apos;d recommend using random bytes (and not restrict yourself to characters and numbers). As usually, the longer you choose, the safer, slower it gets. 64 bytes ought to be fine, i guess.&lt;/p&gt;\n    ","\n&lt;p&gt;In the end, double-hashing, mathematically, provides no benefit.  In practice, however, it is useful for preventing rainbow table-based attacks.  In other words, it is of no more benefit than hashing with a salt, which takes far less processor time in your application or on your server.&lt;/p&gt;\n    ","\n&lt;p&gt;I found perfect topic on this matter here: &lt;a href=&quot;https://crackstation.net/hashing-security.htm&quot; rel=&quot;noreferrer&quot;&gt;https://crackstation.net/hashing-security.htm&lt;/a&gt;, I wanted you to get benefit from it, here is source code also that provided prevention against time-based attack also.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/*\n * Password hashing with PBKDF2.\n * Author: havoc AT defuse.ca\n * www: https://defuse.ca/php-pbkdf2.htm\n */&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// These constants may be changed without breaking existing hashes.&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PBKDF2_HASH_ALGORITHM&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;sha256&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PBKDF2_ITERATIONS&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PBKDF2_SALT_BYTES&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PBKDF2_HASH_BYTES&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HASH_SECTIONS&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HASH_ALGORITHM_INDEX&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HASH_ITERATION_INDEX&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HASH_SALT_INDEX&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HASH_PBKDF2_INDEX&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;create_hash&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;&lt;/span&gt;)\n&lt;/span&gt;{\n    &lt;span class=&quot;hljs-comment&quot;&gt;// format: algorithm:iterations:salt:hash&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$salt&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;base64_encode&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mcrypt_create_iv&lt;/span&gt;(PBKDF2_SALT_BYTES, MCRYPT_DEV_URANDOM));\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; PBKDF2_HASH_ALGORITHM . &lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt; . PBKDF2_ITERATIONS . &lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt; .  &lt;span class=&quot;hljs-variable&quot;&gt;$salt&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt; . \n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;base64_encode&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pbkdf2&lt;/span&gt;(\n            PBKDF2_HASH_ALGORITHM,\n            &lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;,\n            &lt;span class=&quot;hljs-variable&quot;&gt;$salt&lt;/span&gt;,\n            PBKDF2_ITERATIONS,\n            PBKDF2_HASH_BYTES,\n            &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n        ));\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;validate_password&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$good_hash&lt;/span&gt;&lt;/span&gt;)\n&lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$params&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$good_hash&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$params&lt;/span&gt;) &amp;lt; HASH_SECTIONS)\n       &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; \n    &lt;span class=&quot;hljs-variable&quot;&gt;$pbkdf2&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;base64_decode&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$params&lt;/span&gt;[HASH_PBKDF2_INDEX]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;slow_equals&lt;/span&gt;(\n        &lt;span class=&quot;hljs-variable&quot;&gt;$pbkdf2&lt;/span&gt;,\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pbkdf2&lt;/span&gt;(\n            &lt;span class=&quot;hljs-variable&quot;&gt;$params&lt;/span&gt;[HASH_ALGORITHM_INDEX],\n            &lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;,\n            &lt;span class=&quot;hljs-variable&quot;&gt;$params&lt;/span&gt;[HASH_SALT_INDEX],\n            (&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt;)&lt;span class=&quot;hljs-variable&quot;&gt;$params&lt;/span&gt;[HASH_ITERATION_INDEX],\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$pbkdf2&lt;/span&gt;),\n            &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n        )\n    );\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Compares two strings $a and $b in length-constant time.&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;slow_equals&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;&lt;/span&gt;)\n&lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$diff&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;) ^ &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;) &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;); &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;++)\n    {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$diff&lt;/span&gt; |= &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ord&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;]) ^ &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ord&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;]);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$diff&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; \n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/*\n * PBKDF2 key derivation function as defined by RSA&apos;s PKCS #5: https://www.ietf.org/rfc/rfc2898.txt\n * $algorithm - The hash algorithm to use. Recommended: SHA256\n * $password - The password.\n * $salt - A salt that is unique to the password.\n * $count - Iteration count. Higher is better, but slower. Recommended: At least 1000.\n * $key_length - The length of the derived key in bytes.\n * $raw_output - If true, the key is returned in raw binary format. Hex encoded otherwise.\n * Returns: A $key_length-byte key derived from the password and salt.\n *\n * Test vectors can be found here: https://www.ietf.org/rfc/rfc6070.txt\n *\n * This implementation of PBKDF2 was originally created by https://defuse.ca\n * With improvements by http://www.variations-of-shadow.com\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;pbkdf2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$algorithm&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$salt&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$count&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$key_length&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$raw_output&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;)\n&lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$algorithm&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtolower&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$algorithm&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;in_array&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$algorithm&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;hash_algos&lt;/span&gt;(), &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;PBKDF2 ERROR: Invalid hash algorithm.&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$count&lt;/span&gt; &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || &lt;span class=&quot;hljs-variable&quot;&gt;$key_length&lt;/span&gt; &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;PBKDF2 ERROR: Invalid parameters.&apos;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-variable&quot;&gt;$hash_length&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;hash&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$algorithm&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;));\n    &lt;span class=&quot;hljs-variable&quot;&gt;$block_count&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ceil&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$key_length&lt;/span&gt; / &lt;span class=&quot;hljs-variable&quot;&gt;$hash_length&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt; &amp;lt;= &lt;span class=&quot;hljs-variable&quot;&gt;$block_count&lt;/span&gt;; &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;++) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// $i encoded as 4 bytes, big endian.&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$last&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$salt&lt;/span&gt; . &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pack&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;N&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// first iteration&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$last&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$xorsum&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;hash_hmac&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$algorithm&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$last&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// perform the other $count - 1 iterations&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$j&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-variable&quot;&gt;$j&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-variable&quot;&gt;$count&lt;/span&gt;; &lt;span class=&quot;hljs-variable&quot;&gt;$j&lt;/span&gt;++) {\n            &lt;span class=&quot;hljs-variable&quot;&gt;$xorsum&lt;/span&gt; ^= (&lt;span class=&quot;hljs-variable&quot;&gt;$last&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;hash_hmac&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$algorithm&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$last&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;));\n        }\n        &lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt; .= &lt;span class=&quot;hljs-variable&quot;&gt;$xorsum&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$raw_output&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$key_length&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;bin2hex&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$key_length&lt;/span&gt;));\n}\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I usually use SHA1 and salt with the user ID (or some other user-specific piece of information), and sometimes I additionally use a constant salt (so I have 2 parts to the salt).&lt;/p&gt;\n\n&lt;p&gt;SHA1 is now also considered somewhat compromised, but to a far lesser degree than MD5.  By using a salt (any salt), you&apos;re preventing the use of a generic &lt;a href=&quot;http://en.wikipedia.org/wiki/Rainbow_table&quot; rel=&quot;noreferrer&quot;&gt;rainbow table&lt;/a&gt; to attack your hashes (some people have even had success using Google as a sort of rainbow table by searching for the hash).  An attacker could conceivably generate a rainbow table using your salt, so that&apos;s why you should include a user-specific salt.  That way, they will have to generate a rainbow table for each and every record in your system, not just one for your entire system!  With that type of salting, even MD5 is decently secure.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://php.net/sha1&quot; rel=&quot;noreferrer&quot;&gt;SHA1&lt;/a&gt; and a salt should suffice (depending, naturally, on whether you are coding something for &lt;a href=&quot;http://en.wikipedia.org/wiki/United_States_Bullion_Depository&quot; rel=&quot;noreferrer&quot;&gt;Fort Knox&lt;/a&gt; or a login system for your shopping list) for the foreseeable future. If SHA1 isn&apos;t good enough for you, use &lt;a href=&quot;http://php.net/manual/en/function.hash.php&quot; rel=&quot;noreferrer&quot;&gt;SHA256&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The idea of a salt is to throw the hashing results off balance, so to say. It is known, for example, that the MD5-hash of an empty string is &lt;code&gt;d41d8cd98f00b204e9800998ecf8427e&lt;/code&gt;. So, if someone with good enough a memory would see that hash and know that it&apos;s the hash of an empty string. But if the string is salted (say, with the string &quot;&lt;code&gt;MY_PERSONAL_SALT&lt;/code&gt;&quot;), the hash for the &apos;empty string&apos; (i.e. &quot;&lt;code&gt;MY_PERSONAL_SALT&lt;/code&gt;&quot;) becomes &lt;code&gt;aeac2612626724592271634fb14d3ea6&lt;/code&gt;, hence non-obvious to backtrace. What I&apos;m trying to say, that it&apos;s better to use &lt;em&gt;any&lt;/em&gt; salt, than not to. Therefore, it&apos;s not too much of an importance to know &lt;em&gt;which&lt;/em&gt; salt to use.&lt;/p&gt;\n\n&lt;p&gt;There are actually &lt;a href=&quot;http://gdataonline.com/seekhash.php&quot; rel=&quot;noreferrer&quot;&gt;websites that do just this&lt;/a&gt; - you can feed it a (md5) hash, and it spits out a known plaintext that generates that particular hash. If you would get access to a database that stores plain md5-hashes, it would be trivial for you to enter the hash for the admin to such a service, and log in. But, if the passwords were salted, such a service would become ineffective.&lt;/p&gt;\n\n&lt;p&gt;Also, double-hashing is generally regarded as bad method, because it diminishes the result space. All popular hashes are fixed-length. Thus, you can have only a finite values of this fixed length, and the results become less varied. This &lt;em&gt;could&lt;/em&gt; be regarded as another form of salting, but I wouldn&apos;t recommend it.&lt;/p&gt;\n    ","\n&lt;p&gt;ok\nin the fitsy we need salt\nsalt must be unique\nso let generate it&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;   &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Generating string\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; $size\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; string\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Uniwur_string&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$size&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable&quot;&gt;$text&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;md5&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;uniqid&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;rand&lt;/span&gt;(), &lt;span class=&quot;hljs-literal&quot;&gt;TRUE&lt;/span&gt;));\n        RETURN &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$text&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$size&lt;/span&gt;);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;also we need the hash\nI`m using sha512\nit is the best and it is in php &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;   &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Hashing string\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; $string\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; string\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;hash&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;hash&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;sha512&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt;);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;so now we can use this functions to generate safe password&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// generating unique password&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Uniwur_string&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// or you can add manual password&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// generating 32 character salt&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$salt&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Uniwur_string&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// now we can manipulate this informations&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// hashin salt for safe&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$hash_salt&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;hash&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$salt&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// hashing password&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$hash_psw&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;hash&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$password&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$hash_salt&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;now we need to save in database our $hash_psw variable value and $salt variable&lt;/p&gt;\n\n&lt;p&gt;and for authorize we will use same steps...&lt;/p&gt;\n\n&lt;p&gt;it is the best way to safe our clients passwords...&lt;/p&gt;\n\n&lt;p&gt;P.s. for last 2 steps you can use your own algorithm...\nbut be sure that you can generate this hashed password in the future \nwhen you need to authorize user...&lt;/p&gt;\n    "],"237":["\n&lt;p&gt;You should never escape, trim or use any other cleansing mechanism on passwords you&apos;ll be hashing with PHP&apos;s &lt;a href=&quot;http://php.net/manual/en/function.password-hash.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;password_hash()&lt;/code&gt;&lt;/a&gt; for a number of reasons, the single largest of which is because doing additional cleansing to the password requires unnecessary additional code.&lt;/p&gt;\n\n&lt;p&gt;You will argue (and you see it in every post where user data is accepted for use in your systems) that we should cleanse all user input and you would be right for every other piece of information we&apos;re accepting from our users. Passwords are different. &lt;em&gt;Hashed passwords cannot offer any SQL injection threat because the string is turned into hash prior to storing in the database.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;The act of hashing a password is the act of making the password safe to store in your database.  The hash function doesn&apos;t give special meaning to any bytes, so no cleansing of its input is required for security reasons&lt;/p&gt;\n\n&lt;p&gt;If you follow the mantras of allowing users to use the &lt;a href=&quot;https://xkcd.com/936/&quot; rel=&quot;noreferrer&quot;&gt;passwords / phrases&lt;/a&gt; they desire and you &lt;a href=&quot;http://jayblanchard.net/security_fail_passwords.html&quot; rel=&quot;noreferrer&quot;&gt;don&apos;t limit passwords&lt;/a&gt;, allowing any length, any number of spaces and any special characters hashing will make the password/passphrase safe no matter what is contained within the password. As of right now the most common hash (the default), &lt;a href=&quot;http://php.net/manual/en/password.constants.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;PASSWORD_BCRYPT&lt;/code&gt;&lt;/a&gt;, turns the password into a 60 character wide string containing a random salt along with the hashed password information and a cost (the algorithmic cost of creating the hash):&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;PASSWORD_BCRYPT is used to create new password hashes using the CRYPT_BLOWFISH algorithm. This will always result in a hash using the &quot;$2y$&quot; crypt format, which is always 60 characters wide.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The space requirements for storing the hash are subject to change as different hashing methods are added to the function, so it is always better to go larger on the column type for the stored hash, such as &lt;code&gt;VARCHAR(255)&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You could use a complete SQL query as your password and it would be hashed, making it unexecutable by the SQL engine e.g.,&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `users`;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Could be hashed to &lt;code&gt;$2y$10$1tOKcWUWBW5gBka04tGMO.BH7gs/qjAHZsC5wyG0zmI2C.KgaqU5G&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Let&apos;s see how different sanitizing methods affect the password -&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The password is &lt;code&gt;I&apos;m a &quot;dessert topping&quot; &amp;amp; a &amp;lt;floor wax&amp;gt;!&lt;/code&gt; (There are 5 spaces at the end of the password which are not displayed here.)&lt;/p&gt;\n\n&lt;p&gt;When we apply the following methods of trimming we get some wildy different results:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lisp&quot;&gt;var_dump(&lt;span class=&quot;hljs-name&quot;&gt;trim&lt;/span&gt;($_POST[&apos;upassword&apos;]))&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\nvar_dump(&lt;span class=&quot;hljs-name&quot;&gt;htmlentities&lt;/span&gt;($_POST[&apos;upassword&apos;]))&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\nvar_dump(&lt;span class=&quot;hljs-name&quot;&gt;htmlspecialchars&lt;/span&gt;($_POST[&apos;upassword&apos;]))&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\nvar_dump(&lt;span class=&quot;hljs-name&quot;&gt;addslashes&lt;/span&gt;($_POST[&apos;upassword&apos;]))&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\nvar_dump(&lt;span class=&quot;hljs-name&quot;&gt;strip_tags&lt;/span&gt;($_POST[&apos;upassword&apos;]))&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Results:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;) &lt;span class=&quot;hljs-string&quot;&gt;&quot;I&apos;m a &quot;&lt;/span&gt;dessert topping&lt;span class=&quot;hljs-string&quot;&gt;&quot; &amp;amp; a &amp;lt;floor wax&amp;gt;!&quot;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// spaces at the end are missing&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;) &lt;span class=&quot;hljs-string&quot;&gt;&quot;I&apos;m a &amp;amp;quot;dessert topping&amp;amp;quot; &amp;amp;amp; a &amp;amp;lt;floor wax&amp;amp;gt;!     &quot;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// double quotes, ampersand and braces have been changed&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;) &lt;span class=&quot;hljs-string&quot;&gt;&quot;I&apos;m a &amp;amp;quot;dessert topping&amp;amp;quot; &amp;amp;amp; a &amp;amp;lt;floor wax&amp;amp;gt;!     &quot;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// same here&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;) &lt;span class=&quot;hljs-string&quot;&gt;&quot;I\\&apos;m a \\&quot;dessert topping\\&quot; &amp;amp; a &amp;lt;floor wax&amp;gt;!     &quot;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// escape characters have been added&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;) &lt;span class=&quot;hljs-string&quot;&gt;&quot;I&apos;m a &quot;&lt;/span&gt;dessert topping&lt;span class=&quot;hljs-string&quot;&gt;&quot; &amp;amp; a !     &quot;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// looks like we have something missing&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What happens when we send these to &lt;code&gt;password_hash()&lt;/code&gt;? They all get hashed, just as the query did above. The problem comes in when you try to verify the password. If we employ one or more of these methods we must re-employ them prior to comparing them with &lt;a href=&quot;http://php.net/manual/en/function.password-verify.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;password_verify()&lt;/code&gt;&lt;/a&gt;. The following would fail:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;password_verify(&lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;upassword&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$hashed_password&lt;/span&gt;); // &lt;span class=&quot;hljs-built_in&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$hashed_password&lt;/span&gt; comes from a database query\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You would have to run the posted password through the cleansing method you chose before using the result of that in password verification. It is an unnecessary set of steps and will make the hash no better.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Using a PHP version less than 5.5? You can use the &lt;code&gt;password_hash()&lt;/code&gt; &lt;a href=&quot;https://github.com/ircmaxell/password_compat&quot; rel=&quot;noreferrer&quot;&gt;compatibility pack&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;You really shouldn&apos;t use &lt;a href=&quot;https://security.stackexchange.com/questions/19906/is-md5-considered-insecure&quot;&gt;MD5 password hashes&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Before hashing the password, you should normalise it as described in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7613#section-4&quot; rel=&quot;nofollow noreferrer&quot;&gt;section 4 of RFC 7613&lt;/a&gt;.  In particular:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;Additional Mapping Rule: Any instances of non-ASCII space MUST be\nmapped to ASCII space (U+0020); a non-ASCII space is any Unicode\ncode point having a Unicode general category of &quot;Zs&quot; (with the\nexception of U+0020).&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;and:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;ol start=&quot;4&quot;&gt;\n&lt;li&gt;Normalization Rule: Unicode Normalization Form C (NFC) MUST be\napplied to all characters.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This attempts to ensure that if the user types the same password but using a different input method, the password should still be accepted.&lt;/p&gt;\n    "],"238":["\n&lt;p&gt;File upload is &lt;strike&gt;not&lt;/strike&gt; possible through AJAX.&lt;br&gt;\nYou can upload file, without refreshing page by using &lt;code&gt;IFrame&lt;/code&gt;.&lt;br&gt;\nYou can check further details &lt;a href=&quot;http://www.ajaxf1.com/tutorial/ajax-file-upload-tutorial.html&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;UPDATE&lt;/h2&gt;\n\n&lt;p&gt;With XHR2, File upload through AJAX is supported. E.g. through &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Using_FormData_Objects&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object, but unfortunately it is not supported by all/old browsers.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;FormData&lt;/code&gt; support starts from following desktop browsers versions.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;IE 10+&lt;/li&gt;\n&lt;li&gt;Firefox 4.0+&lt;/li&gt;\n&lt;li&gt;Chrome 7+&lt;/li&gt;\n&lt;li&gt;Safari 5+&lt;/li&gt;\n&lt;li&gt;Opera 12+&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;For more detail, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XMLHttpRequest/FormData&quot; rel=&quot;noreferrer&quot;&gt;MDN link&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Iframes is no longer needed for uploading files through ajax. I&apos;ve recently done it by myself. Check out these pages:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4006520/using-html5-file-uploads-with-ajax-and-jquery&quot;&gt;Using HTML5 file uploads with AJAX and jQuery&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://dev.w3.org/2006/webapi/FileAPI/#FileReader-interface&quot; rel=&quot;noreferrer&quot;&gt;http://dev.w3.org/2006/webapi/FileAPI/#FileReader-interface&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Updated the answer and cleaned it up. Use the getSize function to check size or use getType function to check types.\nAdded progressbar html and css code.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Upload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;file&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt; = file;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Upload&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getType&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt;;\n};\n&lt;span class=&quot;hljs-title class_&quot;&gt;Upload&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getSize&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;size&lt;/span&gt;;\n};\n&lt;span class=&quot;hljs-title class_&quot;&gt;Upload&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getName&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;;\n};\n&lt;span class=&quot;hljs-title class_&quot;&gt;Upload&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;doUpload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; that = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// add assoc key values, this will be posts values&lt;/span&gt;\n    formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getName&lt;/span&gt;());\n    formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;upload_file&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n        &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;script&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;xhr&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myXhr = $.ajaxSettings.&lt;span class=&quot;hljs-title function_&quot;&gt;xhr&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (myXhr.&lt;span class=&quot;hljs-property&quot;&gt;upload&lt;/span&gt;) {\n                myXhr.&lt;span class=&quot;hljs-property&quot;&gt;upload&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;progress&apos;&lt;/span&gt;, that.&lt;span class=&quot;hljs-property&quot;&gt;progressHandling&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; myXhr;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// your callback here&lt;/span&gt;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;error&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// handle error&lt;/span&gt;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formData,\n        &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;timeout&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;60000&lt;/span&gt;\n    });\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Upload&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;progressHandling&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; percent = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; position = event.&lt;span class=&quot;hljs-property&quot;&gt;loaded&lt;/span&gt; || event.&lt;span class=&quot;hljs-property&quot;&gt;position&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; total = event.&lt;span class=&quot;hljs-property&quot;&gt;total&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; progress_bar_id = &lt;span class=&quot;hljs-string&quot;&gt;&quot;#progress-wrp&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (event.&lt;span class=&quot;hljs-property&quot;&gt;lengthComputable&lt;/span&gt;) {\n        percent = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ceil&lt;/span&gt;(position / total * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// update progressbars classes so it fits your code&lt;/span&gt;\n    $(progress_bar_id + &lt;span class=&quot;hljs-string&quot;&gt;&quot; .progress-bar&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;width&quot;&lt;/span&gt;, +percent + &lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt;);\n    $(progress_bar_id + &lt;span class=&quot;hljs-string&quot;&gt;&quot; .status&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(percent + &lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt;);\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How to use the Upload class&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//Change id to your id&lt;/span&gt;\n$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#ingredient_file&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;change&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; upload = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Upload&lt;/span&gt;(file);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// maby check size or type here with upload.getSize() and upload.getType()&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// execute upload&lt;/span&gt;\n    upload.&lt;span class=&quot;hljs-title function_&quot;&gt;doUpload&lt;/span&gt;();\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Progressbar html code&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;progress-wrp&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;progress-bar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;status&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;0%&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Progressbar css code&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#progress-wrp&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#0099CC&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: left;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;box-shadow&lt;/span&gt;: inset &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6px&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0.12&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#progress-wrp&lt;/span&gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.progress-bar&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#f39ac7&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;box-shadow&lt;/span&gt;: inset &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0.11&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#progress-wrp&lt;/span&gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.status&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000000&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Ajax post and upload file is possible. I&apos;m using &lt;code&gt;jQuery $.ajax&lt;/code&gt; function to load my files. I tried to use the XHR object but could not get results on the server side with PHP.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\nformData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;, $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#file&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n       url : &lt;span class=&quot;hljs-string&quot;&gt;&apos;upload.php&apos;&lt;/span&gt;,\n       type : &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n       data : formData,\n       &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// tell jQuery not to process the data&lt;/span&gt;\n       &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// tell jQuery not to set contentType&lt;/span&gt;\n       success : &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n           &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(data);\n           &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(data);\n       }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As you can see, you must create a FormData object, empty or from (serialized? - &lt;code&gt;$(&apos;#yourForm&apos;).serialize())&lt;/code&gt; existing form, and then attach the input file.&lt;/p&gt;\n\n&lt;p&gt;Here is more information: \n- &lt;a href=&quot;https://stackoverflow.com/questions/9622901/how-to-upload-a-file-using-jquery-ajax-and-formdata&quot;&gt;How to upload a file using jQuery.ajax and FormData&lt;/a&gt;\n- &lt;a href=&quot;https://stackoverflow.com/questions/20452853/uploading-files-via-jquery-object-formdata-is-provided-and-no-file-name-get-re&quot;&gt;Uploading files via jQuery, object FormData is provided and no file name, GET request&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For the PHP process you can use something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//print_r($_FILES);&lt;/span&gt;\n$fileName = $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;];\n$fileType = $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;type&apos;&lt;/span&gt;];\n$fileError = $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;error&apos;&lt;/span&gt;];\n$fileContent = &lt;span class=&quot;hljs-title function_&quot;&gt;file_get_contents&lt;/span&gt;($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;tmp_name&apos;&lt;/span&gt;]);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;($fileError == &lt;span class=&quot;hljs-variable constant_&quot;&gt;UPLOAD_ERR_OK&lt;/span&gt;){\n   &lt;span class=&quot;hljs-comment&quot;&gt;//Processes your file here&lt;/span&gt;\n}&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;($fileError){\n     &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;UPLOAD_ERR_INI_SIZE&lt;/span&gt;:   \n          $message = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error al intentar subir un archivo que excede el tamaño permitido.&apos;&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;UPLOAD_ERR_FORM_SIZE&lt;/span&gt;:  \n          $message = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error al intentar subir un archivo que excede el tamaño permitido.&apos;&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;UPLOAD_ERR_PARTIAL&lt;/span&gt;:    \n          $message = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error: no terminó la acción de subir el archivo.&apos;&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;UPLOAD_ERR_NO_FILE&lt;/span&gt;:    \n          $message = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error: ningún archivo fue subido.&apos;&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;UPLOAD_ERR_NO_TMP_DIR&lt;/span&gt;: \n          $message = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error: servidor no configurado para carga de archivos.&apos;&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;UPLOAD_ERR_CANT_WRITE&lt;/span&gt;: \n          $message= &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error: posible falla al grabar el archivo.&apos;&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;UPLOAD_ERR_EXTENSION&lt;/span&gt;: \n          $message = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error: carga de archivo no completada.&apos;&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n     &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;: $message = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error: carga de archivo no completada.&apos;&lt;/span&gt;;\n              &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n    }\n      echo &lt;span class=&quot;hljs-title function_&quot;&gt;json_encode&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;array&lt;/span&gt;(\n               &lt;span class=&quot;hljs-string&quot;&gt;&apos;error&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n               &lt;span class=&quot;hljs-string&quot;&gt;&apos;message&apos;&lt;/span&gt; =&amp;gt; $message\n            ));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple Upload Form&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n\n   &lt;span class=&quot;hljs-comment&quot;&gt;//form Submit&lt;/span&gt;\n   $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;evt&lt;/span&gt;){   \n\n      evt.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n\n      $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n          &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;fileUpload&apos;&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formData,\n          &lt;span class=&quot;hljs-attr&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;multipart/form-data&apos;&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) {\n         \n             &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(response);\n          }\n       });\n\n       &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    });\n\n&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!--Upload Form--&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;colspan&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;File Upload&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;Select File &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;csv&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;csv&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;colspan&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt; \n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m pretty late for this but I was looking for an ajax based image uploading solution and the answer I was looking for was kinda scattered throughout this post. The solution I settled on involved the FormData object. I assembled a basic form of the code I put together. You can see it demonstrates how to add a custom field to the form with fd.append() as well as how to handle response data when the ajax request is done.&lt;/p&gt;\n\n&lt;p&gt;Upload html:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!&lt;span class=&quot;hljs-variable constant_&quot;&gt;DOCTYPE&lt;/span&gt; html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Image Upload Form&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;//code.jquery.com/jquery-1.9.1.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;submitForm&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit event&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fd = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;fileinfo&quot;&lt;/span&gt;));\n            fd.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;label&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;WEBUPLOAD&quot;&lt;/span&gt;);\n            $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n              &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;upload.php&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: fd,\n              &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// tell jQuery not to process the data&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;   &lt;span class=&quot;hljs-comment&quot;&gt;// tell jQuery not to set contentType&lt;/span&gt;\n            }).&lt;span class=&quot;hljs-title function_&quot;&gt;done&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; data &lt;/span&gt;) {\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PHP Output:&quot;&lt;/span&gt;);\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( data );\n            });\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fileinfo&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fileinfo&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onsubmit&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;return submitForm();&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Select a file:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;required&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Upload&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;output&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In case you are working with php here&apos;s a way to handle the upload that includes making use of both of the custom fields demonstrated in the above html.&lt;/p&gt;\n\n&lt;p&gt;Upload.php&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;?php\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ($_POST[&lt;span class=&quot;hljs-string&quot;&gt;&quot;label&quot;&lt;/span&gt;]) {\n    $label = $_POST[&lt;span class=&quot;hljs-string&quot;&gt;&quot;label&quot;&lt;/span&gt;];\n}\n$allowedExts = &lt;span class=&quot;hljs-title function_&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;gif&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;jpeg&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;jpg&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;png&quot;&lt;/span&gt;);\n$temp = &lt;span class=&quot;hljs-title function_&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;, $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;]);\n$extension = &lt;span class=&quot;hljs-title function_&quot;&gt;end&lt;/span&gt;($temp);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;image/gif&quot;&lt;/span&gt;)\n|| ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;image/jpeg&quot;&lt;/span&gt;)\n|| ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;image/jpg&quot;&lt;/span&gt;)\n|| ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;image/pjpeg&quot;&lt;/span&gt;)\n|| ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;image/x-png&quot;&lt;/span&gt;)\n|| ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;))\n&amp;amp;&amp;amp; ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;size&quot;&lt;/span&gt;] &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;200000&lt;/span&gt;)\n&amp;amp;&amp;amp; &lt;span class=&quot;hljs-title function_&quot;&gt;in_array&lt;/span&gt;($extension, $allowedExts)) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;error&quot;&lt;/span&gt;] &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n        echo &lt;span class=&quot;hljs-string&quot;&gt;&quot;Return Code: &quot;&lt;/span&gt; . $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;error&quot;&lt;/span&gt;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        $filename = $label.&lt;span class=&quot;hljs-property&quot;&gt;$_FILES&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;];\n        echo &lt;span class=&quot;hljs-string&quot;&gt;&quot;Upload: &quot;&lt;/span&gt; . $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        echo &lt;span class=&quot;hljs-string&quot;&gt;&quot;Type: &quot;&lt;/span&gt; . $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        echo &lt;span class=&quot;hljs-string&quot;&gt;&quot;Size: &quot;&lt;/span&gt; . ($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;size&quot;&lt;/span&gt;] / &lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt;) . &lt;span class=&quot;hljs-string&quot;&gt;&quot; kB&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        echo &lt;span class=&quot;hljs-string&quot;&gt;&quot;Temp file: &quot;&lt;/span&gt; . $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;tmp_name&quot;&lt;/span&gt;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;file_exists&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploads/&quot;&lt;/span&gt; . $filename)) {\n            echo $filename . &lt;span class=&quot;hljs-string&quot;&gt;&quot; already exists. &quot;&lt;/span&gt;;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-title function_&quot;&gt;move_uploaded_file&lt;/span&gt;($_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&quot;tmp_name&quot;&lt;/span&gt;],\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;uploads/&quot;&lt;/span&gt; . $filename);\n            echo &lt;span class=&quot;hljs-string&quot;&gt;&quot;Stored in: &quot;&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;uploads/&quot;&lt;/span&gt; . $filename;\n        }\n    }\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    echo &lt;span class=&quot;hljs-string&quot;&gt;&quot;Invalid file&quot;&lt;/span&gt;;\n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;An AJAX upload is indeed possible with &lt;code&gt;XMLHttpRequest()&lt;/code&gt;. No iframes necessary. Upload progress can be shown.&lt;/p&gt;\n\n&lt;p&gt;For details see: Answer &lt;a href=&quot;https://stackoverflow.com/a/4943774/873282&quot;&gt;https://stackoverflow.com/a/4943774/873282&lt;/a&gt; to question &lt;a href=&quot;https://stackoverflow.com/questions/4856917/jquery-upload-progress-and-ajax-file-upload&quot;&gt;jQuery Upload Progress and AJAX file upload&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s how I got this working: &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;process-file-button&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;Process&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;JS&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#process-file-button&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; files = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(), &lt;span class=&quot;hljs-comment&quot;&gt;// you can consider this as &apos;data bag&apos;&lt;/span&gt;\n        url = &lt;span class=&quot;hljs-string&quot;&gt;&apos;yourUrl&apos;&lt;/span&gt;;\n\n    files.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fileName&apos;&lt;/span&gt;, $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#file&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// append selected file to the bag named &apos;file&apos;&lt;/span&gt;\n\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n        &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;post&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: url,\n        &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: files,\n        &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(response);\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;err&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(err);\n        }\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isset&lt;/span&gt;($_FILES) &amp;amp;&amp;amp; !&lt;span class=&quot;hljs-title function_&quot;&gt;empty&lt;/span&gt;($_FILES)) {\n    $file = $_FILES[&lt;span class=&quot;hljs-string&quot;&gt;&apos;fileName&apos;&lt;/span&gt;];\n    $name = $file[&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;];\n    $path = $file[&lt;span class=&quot;hljs-string&quot;&gt;&apos;tmp_name&apos;&lt;/span&gt;];\n\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// process your file&lt;/span&gt;\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Using pure js it is easier&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;saveFile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;inp&lt;/span&gt;) \n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();           \n    formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;, inp.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/upload/somedata&apos;&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;body&lt;/span&gt;: formData});    \n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;success&apos;&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;saveFile(this)&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;In server side you can read original file name (and other info) which is automatically included to request.&lt;/li&gt;\n&lt;li&gt;You do NOT need to set header &quot;Content-Type&quot; to &quot;multipart/form-data&quot; browser will set it automatically&lt;/li&gt;\n&lt;li&gt;This solutions should work on all major browsers.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Here is more developed snippet with error handling, timeout and additional json sending&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;saveFile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;inp&lt;/span&gt;) \n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; user = { &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;john&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt; };\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; photo = inp.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];      \n         \n    formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;photo&quot;&lt;/span&gt;, photo);\n    formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;user&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(user));  \n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; ctrl = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AbortController&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// timeout&lt;/span&gt;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; ctrl.&lt;span class=&quot;hljs-title function_&quot;&gt;abort&lt;/span&gt;(), &lt;span class=&quot;hljs-number&quot;&gt;50000&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; r = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/upload/image&apos;&lt;/span&gt;, \n         {&lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;body&lt;/span&gt;: formData, &lt;span class=&quot;hljs-attr&quot;&gt;signal&lt;/span&gt;: ctrl.&lt;span class=&quot;hljs-property&quot;&gt;signal&lt;/span&gt;}); \n       &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;HTTP response code:&apos;&lt;/span&gt;,r.&lt;span class=&quot;hljs-property&quot;&gt;status&lt;/span&gt;); \n       &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;success&apos;&lt;/span&gt;);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) {\n       &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Huston we have problem...:&apos;&lt;/span&gt;, e);\n    }\n    \n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;saveFile(this)&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\nBefore selecting the file Open chrome console &amp;gt; network tab to see the request details.\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;small&lt;/span&gt;&amp;gt;&lt;/span&gt;Because in this example we send request to https://stacksnippets.net/upload/image the response code will be 404 ofcourse...&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;small&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#submit_car&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#car_cost_form&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n  $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n     &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;car_costs.php&apos;&lt;/span&gt;,\n     &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formData,\n     &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n     &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n     &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n     &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n     &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n       &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n     },\n  });\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;edit: Note contentype and process data\nYou can simply use this to upload files via Ajax...... submit input cannot be outside form element :)&lt;/p&gt;\n    ","\n&lt;p&gt;In case you want to do it like that:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;upload&lt;/span&gt;( form.&lt;span class=&quot;hljs-property&quot;&gt;action&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;( myForm))\n.&lt;span class=&quot;hljs-title function_&quot;&gt;progress&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; progressEvent, upload&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( progressEvent.&lt;span class=&quot;hljs-property&quot;&gt;lengthComputable&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; percent = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;( progressEvent.&lt;span class=&quot;hljs-property&quot;&gt;loaded&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; / progressEvent.&lt;span class=&quot;hljs-property&quot;&gt;total&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( upload) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( percent + &lt;span class=&quot;hljs-string&quot;&gt;&apos; uploaded&apos;&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( percent + &lt;span class=&quot;hljs-string&quot;&gt;&apos; downloaded&apos;&lt;/span&gt;);\n        }\n    }\n})\n.&lt;span class=&quot;hljs-title function_&quot;&gt;done&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;Finished upload&apos;&lt;/span&gt;);                    \n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;than &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/lgersman/jquery.orangevolt-ampere/blob/master/src/jquery.upload.js&quot;&gt;https://github.com/lgersman/jquery.orangevolt-ampere/blob/master/src/jquery.upload.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;might be your solution.&lt;/p&gt;\n    ","\n&lt;p&gt;Use FormData. It works really well :-) ...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jform = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\njform.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;user&apos;&lt;/span&gt;,$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#user&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;());\njform.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;image&apos;&lt;/span&gt;,$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#image&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// Here&apos;s the important bit&lt;/span&gt;\n\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;/your-form-processing-page-url-here&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: jform,\n    &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;json&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;mimeType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;multipart/form-data&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// this too&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data, status, jqXHR&lt;/span&gt;){\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hooray! All is well.&apos;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(data);\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(status);\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(jqXHR);\n\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;jqXHR,status,error&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Hopefully we should never reach here&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(jqXHR);\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(status);\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(error);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;2019 update:&lt;/p&gt;\n\n&lt;p&gt;html&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fr&quot;&lt;/span&gt; method=&lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt; enctype=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt; {% csrf_token %}\n&amp;lt;textarea name=&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;example_image&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;js&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;submit&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;.fr&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({ \n        &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;post&apos;&lt;/span&gt;, \n        &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: url, &lt;span class=&quot;language-xml&quot;&gt;&amp;lt;--- you insert proper URL path to call your views.py function here.\n        enctype: &apos;multipart/form-data&apos;,\n        processData: false,\n        contentType: false,\n        data: new FormData(this) ,\n        success: function(data) {\n             console.log(data);\n        }\n        });\n        return false;\n\n    });\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;views.py&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;form = &lt;span class=&quot;hljs-title class_&quot;&gt;ThisForm&lt;/span&gt;(request.&lt;span class=&quot;hljs-property&quot;&gt;POST&lt;/span&gt;, request.&lt;span class=&quot;hljs-property&quot;&gt;FILES&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; form.&lt;span class=&quot;hljs-title function_&quot;&gt;is_valid&lt;/span&gt;():\n    text = form.&lt;span class=&quot;hljs-property&quot;&gt;cleaned_data&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;)\n    example_image = request.&lt;span class=&quot;hljs-property&quot;&gt;FILES&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;example_image&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;ul&gt;\n&lt;li&gt;Use a hidden iframe and set your form&apos;s target to that iframe&apos;s name.  This way, when the form is submitted, only the iframe will be refreshed.&lt;/li&gt;\n&lt;li&gt;Have an event handler registered for the iframe&apos;s load event to parse the response.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I have handled these in a simple code. You can download a working demo from &lt;a href=&quot;http://whats-online.info/science-and-tutorials/30/select-preview-rename-and-upload-image-using-jquery-Ajax/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For your case, these very possible. I will take you step by step how you can upload a file to the server using AJAX jquery. &lt;/p&gt;\n\n&lt;p&gt;First let&apos;s us create an HTML file to add the following form file element as shown below.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form action=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;formContent&quot;&lt;/span&gt; method=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt; enctype=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt; &amp;gt;\n         &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;upload&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n         &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submitI&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;Upload Image&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt; \n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Secondly create a jquery.js file and add the following code to handle our file submission to the server&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#formContent&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){\n        e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formdata = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n            &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;ajax_upload_image.php&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formdata,\n            &lt;span class=&quot;hljs-attr&quot;&gt;mimeTypes&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;file successfully submitted&quot;&lt;/span&gt;);\n            },&lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;okey&quot;&lt;/span&gt;);\n            }\n         });\n      });\n    });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There you are done . &lt;a href=&quot;http://whats-online.info/science-and-tutorials/30/select-preview-rename-and-upload-image-using-jquery-Ajax/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;View more&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Using FormData is the way to go as indicated by many answers.  here is a bit of code that works great for this purpose.  I also agree with the comment of nesting ajax blocks to complete complex circumstances.  By including e.PreventDefault(); in my experience makes the code more cross browser compatible. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#UploadB1&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){        \n    e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!fileupload.&lt;span class=&quot;hljs-title function_&quot;&gt;valid&lt;/span&gt;()) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;            \n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myformData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();        \n    myformData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;, $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#uploadFile&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#UpdateMessage5&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Uploading file ....&quot;&lt;/span&gt;);\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#UpdateMessage5&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;background&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;url(../include/images/loaderIcon.gif) no-repeat right&quot;&lt;/span&gt;);\n\n    myformData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;mode&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;fileUpload&apos;&lt;/span&gt;);\n    myformData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myid&apos;&lt;/span&gt;, $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myid&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;());\n    myformData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;type&apos;&lt;/span&gt;, $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#fileType&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;());\n    &lt;span class=&quot;hljs-comment&quot;&gt;//formData.append(&apos;myfile&apos;, file, file.name); &lt;/span&gt;\n\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n        &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;include/fetch.php&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;post&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: myformData,\n        &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;multipart/form-data&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;){\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#UpdateMessage5&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(response); &lt;span class=&quot;hljs-comment&quot;&gt;//.delay(2000).hide(1); &lt;/span&gt;\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#UpdateMessage5&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;background&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;file successfully submitted&quot;&lt;/span&gt;);\n        },&lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;not okay&quot;&lt;/span&gt;);\n        }\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I have implemented a multiple file select with instant preview and upload after removing unwanted files from preview via ajax. &lt;/p&gt;\n\n&lt;p&gt;Detailed documentation can be found here: &lt;a href=&quot;http://anasthecoder.blogspot.ae/2014/12/multi-file-select-preview-without.html&quot; rel=&quot;noreferrer&quot;&gt;http://anasthecoder.blogspot.ae/2014/12/multi-file-select-preview-without.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Demo: &lt;a href=&quot;http://jsfiddle.net/anas/6v8Kz/7/embedded/result/&quot; rel=&quot;noreferrer&quot;&gt;http://jsfiddle.net/anas/6v8Kz/7/embedded/result/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;jsFiddle: &lt;a href=&quot;http://jsfiddle.net/anas/6v8Kz/7/&quot; rel=&quot;noreferrer&quot;&gt;http://jsfiddle.net/anas/6v8Kz/7/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Javascript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    $(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ev&lt;/span&gt;){\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.overlay&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n        $(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;scrollTop&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;upload_images_selected&lt;/span&gt;(ev, ev.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;);\n    })\n})\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;add_new_file_uploader&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;addBtn&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; currentRow = $(addBtn).&lt;span class=&quot;hljs-title function_&quot;&gt;parent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;parent&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newRow = $(currentRow).&lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;();\n    $(newRow).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.previewImage, .imagePreviewTable&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;hide&lt;/span&gt;();\n    $(newRow).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.removeButton&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    $(newRow).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;table.imagePreviewTable&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;tr&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;();\n    $(newRow).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input.multipleImageFileInput&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n    $(addBtn).&lt;span class=&quot;hljs-title function_&quot;&gt;parent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;parent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;parent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(newRow);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;remove_file_uploader&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;removeBtn&lt;/span&gt;) {\n    $(removeBtn).&lt;span class=&quot;hljs-title function_&quot;&gt;parent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;parent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;show_image_preview&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;file_selector&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//files selected using current file selector&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; files = file_selector.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Container of image previews&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; imageContainer = $(file_selector).&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;table.imagePreviewTable&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Number of images selected&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; number_of_images = files.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Build image preview row&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; imagePreviewRow = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;tr class=&quot;imagePreviewRow_0&quot;&amp;gt;&amp;lt;td valign=top style=&quot;width: 510px;&quot;&amp;gt;&amp;lt;/td&amp;gt;&apos;&lt;/span&gt; +\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;td valign=top&amp;gt;&amp;lt;input type=&quot;button&quot; value=&quot;X&quot; title=&quot;Remove Image&quot; class=&quot;removeImageButton&quot; imageIndex=&quot;0&quot; onclick=&quot;remove_selected_image(this)&quot; /&amp;gt;&amp;lt;/td&amp;gt;&apos;&lt;/span&gt; +\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/tr&amp;gt; &apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Add image preview row&lt;/span&gt;\n    $(imageContainer).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(imagePreviewRow);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (number_of_images &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i =&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i&amp;lt;number_of_images; i++) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;/**\n             *Generate class name of the respective image container appending index of selected images, \n             *sothat we can match images selected and the one which is previewed\n             */&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newImagePreviewRow = $(imagePreviewRow).&lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;removeClass&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;imagePreviewRow_0&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addClass&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;imagePreviewRow_&apos;&lt;/span&gt;+i);\n            $(newImagePreviewRow).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[type=&quot;button&quot;]&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;imageIndex&apos;&lt;/span&gt;, i);\n            $(imageContainer).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(newImagePreviewRow);\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; files.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file = files[i];\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Allow only images\n         */&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; imageType = &lt;span class=&quot;hljs-regexp&quot;&gt;/image.*/&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!file.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(imageType)) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Create an image dom object dynamically\n         */&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; img = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;img&quot;&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Get preview area of the image\n         */&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; preview = $(imageContainer).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;tr.imagePreviewRow_&apos;&lt;/span&gt;+i).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;td:first&apos;&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Append preview of selected image to the corresponding container\n         */&lt;/span&gt;\n        preview.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(img); \n\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Set style of appended preview(Can be done via css also)\n         */&lt;/span&gt;\n        preview.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;img&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addClass&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;previewImage&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&apos;max-width&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;500px&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;max-height&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;500px&apos;&lt;/span&gt;});\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Initialize file reader\n         */&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Onload event of file reader assign target image to the preview\n         */&lt;/span&gt;\n        reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;aImg&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) { aImg.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;; }; })(img);\n        &lt;span class=&quot;hljs-comment&quot;&gt;/**\n         * Initiate read\n         */&lt;/span&gt;\n        reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file);\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Show preview\n     */&lt;/span&gt;\n    $(imageContainer).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;remove_selected_image&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;close_button&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Remove this image from preview\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; imageIndex = $(close_button).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;imageindex&apos;&lt;/span&gt;);\n    $(close_button).&lt;span class=&quot;hljs-title function_&quot;&gt;parents&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.imagePreviewRow_&apos;&lt;/span&gt; + imageIndex).&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;upload_images_selected&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event, formObj&lt;/span&gt;)\n{\n    event.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Get number of images&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; imageCount = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.previewImage&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Get all multi select inputs&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fileInputs = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelectorAll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.multipleImageFileInput&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Url where the image is to be uploaded&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url= &lt;span class=&quot;hljs-string&quot;&gt;&quot;/upload-directory/&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Get number of inputs&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; number_of_inputs = $(fileInputs).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inputCount = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Iterate through each file selector input&lt;/span&gt;\n    $(fileInputs).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;index, input&lt;/span&gt;){\n\n        fileList = input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Create a new FormData object.&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Extra parameters can be added to the form data object&lt;/span&gt;\n        formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bulk_upload&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n        formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;username&apos;&lt;/span&gt;, $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[name=&quot;username&quot;]&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;());\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Iterate throug each images selected by each file selector and find if the image is present in the preview&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; fileList.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ($(input).&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.imagePreviewTable&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.imagePreviewRow_&apos;&lt;/span&gt;+i).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; != &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file = fileList[i];\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Check the file type.&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!file.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;image.*&apos;&lt;/span&gt;)) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n                }\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Add the file to the request.&lt;/span&gt;\n                formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;image_uploader_multiple[&apos;&lt;/span&gt; +(inputCount++)+ &lt;span class=&quot;hljs-string&quot;&gt;&apos;]&apos;&lt;/span&gt;, file, file.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;);\n            }\n        }\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Set up the request.&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; xhr = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;XMLHttpRequest&lt;/span&gt;();\n        xhr.&lt;span class=&quot;hljs-title function_&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;, url, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n        xhr.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (xhr.&lt;span class=&quot;hljs-property&quot;&gt;status&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonResponse = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(xhr.&lt;span class=&quot;hljs-property&quot;&gt;responseText&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (jsonResponse.&lt;span class=&quot;hljs-property&quot;&gt;status&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n                    $(jsonResponse.&lt;span class=&quot;hljs-property&quot;&gt;file_info&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                        &lt;span class=&quot;hljs-comment&quot;&gt;//Iterate through response and find data corresponding to each file uploaded&lt;/span&gt;\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uploaded_file_name = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;original&lt;/span&gt;;\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; saved_file_name = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;;\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file_name_input = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;input type=&quot;hidden&quot; class=&quot;image_name&quot; name=&quot;image_names[]&quot; value=&quot;&apos;&lt;/span&gt; +saved_file_name+ &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot; /&amp;gt;&apos;&lt;/span&gt;;\n                        file_info_container.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(file_name_input);\n\n                        imageCount--;\n                    })\n                    &lt;span class=&quot;hljs-comment&quot;&gt;//Decrement count of inputs to find all images selected by all multi select are uploaded&lt;/span&gt;\n                    number_of_inputs--;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(number_of_inputs == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-comment&quot;&gt;//All images selected by each file selector is uploaded&lt;/span&gt;\n                        &lt;span class=&quot;hljs-comment&quot;&gt;//Do necessary acteion post upload&lt;/span&gt;\n                        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.overlay&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;hide&lt;/span&gt;();\n                    }\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jsonResponse.&lt;span class=&quot;hljs-property&quot;&gt;error_field_name&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-comment&quot;&gt;//Do appropriate error action&lt;/span&gt;\n                    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(jsonResponse.&lt;span class=&quot;hljs-property&quot;&gt;message&lt;/span&gt;);\n                    }\n                    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.overlay&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;hide&lt;/span&gt;();\n                    event.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                }\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                &lt;span class=&quot;hljs-comment&quot;&gt;/*alert(&apos;Something went wrong!&apos;);*/&lt;/span&gt;\n                $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.overlay&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;hide&lt;/span&gt;();\n                event.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n            }\n        };\n        xhr.&lt;span class=&quot;hljs-title function_&quot;&gt;send&lt;/span&gt;(formData);\n    })\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Yes you can, just use javascript to get the file, making sure you read the file as a data URL. Parse out the stuff before base64 to actually get the base 64 encoded data and then if you are using php or really any back end language you can decode the base 64 data and save into a file like shown below&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Javascript&lt;/span&gt;:\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\nreader.&lt;span class=&quot;hljs-property&quot;&gt;onloadend&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n  dataToBeSent = reader.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;base64,&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n  $.&lt;span class=&quot;hljs-title function_&quot;&gt;post&lt;/span&gt;(url, {&lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;:dataToBeSent});\n}\nreader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n\n\n&lt;span class=&quot;hljs-attr&quot;&gt;PHP&lt;/span&gt;:\n    &lt;span class=&quot;hljs-title function_&quot;&gt;file_put_contents&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;my.pdf&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_&quot;&gt;base64_decode&lt;/span&gt;($_POST[&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;]));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Of course you will probably want to do some validation like checking which file type you are dealing with and stuff like that but this is the idea. &lt;/p&gt;\n    ","\n&lt;p&gt;To get all your form inputs, including the &lt;em&gt;type=&quot;file&quot;&lt;/em&gt; you need to use &lt;strong&gt;&lt;em&gt;FormData object&lt;/em&gt;&lt;/strong&gt;. \nyou will be able to see the formData content in the &lt;em&gt;debugger -&amp;gt; network -&amp;gt;Headers&lt;/em&gt; after you will submit the form.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-string&quot;&gt;&quot;YOUR_URL&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; form = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#YOUR_FORM_ID&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(form);\n\n\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;(url, {\n    &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;post&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formData\n}).&lt;span class=&quot;hljs-title function_&quot;&gt;done&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.&lt;span class=&quot;hljs-property&quot;&gt;success&lt;/span&gt;){ \n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Files uploaded&quot;&lt;/span&gt;);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Error while uploading the files&quot;&lt;/span&gt;);\n    }\n}).&lt;span class=&quot;hljs-title function_&quot;&gt;fail&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(data);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Error while uploading the files&quot;&lt;/span&gt;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;html&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Ajax file upload&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n            $(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#uploadimage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;submit&apos;&lt;/span&gt;, (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n            e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n                    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n                    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;upload.php&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// Url to which the request is send&lt;/span&gt;\n                            &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// Type of request to be send, called as method&lt;/span&gt;\n                            &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;), &lt;span class=&quot;hljs-comment&quot;&gt;// Data sent to server, a set of key/value pairs (i.e. form fields and values)&lt;/span&gt;\n                            &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// The content type used when sending data to the server.&lt;/span&gt;\n                            &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// To unable request pages to be cached&lt;/span&gt;\n                            &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// To send DOMDocument or non processed data file it is set to false&lt;/span&gt;\n                            &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;)   &lt;span class=&quot;hljs-comment&quot;&gt;// A function to be called if request succeeds&lt;/span&gt;\n                            {\n                            &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(data);\n                            }\n                    });\n            }));\n        &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Ajax Image Upload&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadimage&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image_preview&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;previewing&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;noimage.png&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;line&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;selectImage&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Select Your Image&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n                    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;required&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n                    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Upload&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;to upload a file which is submitted by user as a part of form using jquery please follow the below code :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\nformData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;userfile&quot;&lt;/span&gt;, fileInputElement.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then send the form data object to server.&lt;/p&gt;\n\n&lt;p&gt;We can also append a File or Blob directly to the FormData object.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;data.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myfile&quot;&lt;/span&gt;, myBlob, &lt;span class=&quot;hljs-string&quot;&gt;&quot;filename.txt&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use method ajaxSubmit as follow :)\nwhen you select a file that need upload to server, form be submit to server :)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; options = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;target&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;#output&apos;&lt;/span&gt;,   &lt;span class=&quot;hljs-comment&quot;&gt;// target element(s) to be updated with server response&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;timeout&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30000&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;jqXHR, textStatus&lt;/span&gt;) {\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#output&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;have any error&apos;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: afterSuccess,  &lt;span class=&quot;hljs-comment&quot;&gt;// post-submit callback&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;resetForm&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// reset the form after successful submit&lt;/span&gt;\n};\n\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#idOfInputFile&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;change&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#idOfForm&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ajaxSubmit&lt;/span&gt;(options);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// always return false to prevent standard browser submit and page navigation&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n});\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you want to upload file using AJAX here is code which you can use for file uploading.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; options = { \n                &lt;span class=&quot;hljs-attr&quot;&gt;beforeSubmit&lt;/span&gt;:  showRequest,\n        &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;:       showResponse,\n        &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;json&apos;&lt;/span&gt; \n        }; \n    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;body&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;delegate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#image&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;change&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#upload&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ajaxForm&lt;/span&gt;(options).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;();        \n    }); \n});     \n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showRequest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;formData, jqForm, options&lt;/span&gt;) { \n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#validation-errors&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;hide&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;empty&lt;/span&gt;();\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#output&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;none&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; \n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showResponse&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response, statusText, xhr, $form&lt;/span&gt;)  { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(response.&lt;span class=&quot;hljs-property&quot;&gt;success&lt;/span&gt; == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = response.&lt;span class=&quot;hljs-property&quot;&gt;errors&lt;/span&gt;;\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(arr, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;index, value&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; != &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n            {\n                $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#validation-errors&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;div class=&quot;alert alert-error&quot;&amp;gt;&amp;lt;strong&amp;gt;&apos;&lt;/span&gt;+ value +&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/strong&amp;gt;&amp;lt;div&amp;gt;&apos;&lt;/span&gt;);\n            }\n        });\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#validation-errors&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n         $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#output&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;img src=&apos;&quot;&lt;/span&gt;+response.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt;+&lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos; /&amp;gt;&quot;&lt;/span&gt;);\n         $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#output&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;block&apos;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is the HTML for Upload the file&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form-horizontal&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;upload&quot;&lt;/span&gt; enctype=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt; method=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt; action=&lt;span class=&quot;hljs-string&quot;&gt;&quot;upload/image&apos;&quot;&lt;/span&gt; autocomplete=&lt;span class=&quot;hljs-string&quot;&gt;&quot;off&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt; \n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dataform = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#myform&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n&lt;span class=&quot;hljs-comment&quot;&gt;//console.log(dataform);&lt;/span&gt;\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;url&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: dataform,\n    &lt;span class=&quot;hljs-attr&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;res&lt;/span&gt;) {\n        response data;\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here was an idea I was thinking of:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Have&lt;/span&gt; an iframe on page and have a referencer.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Have a form in which you move the input type file element to.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Form&lt;/span&gt;:  A processing page &lt;span class=&quot;hljs-variable constant_&quot;&gt;AND&lt;/span&gt; a target &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; the &lt;span class=&quot;hljs-variable constant_&quot;&gt;FRAME&lt;/span&gt;.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The result will post to the iframe, and then you can just send the fetched data up a level to the image tag you want with something like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;:image/png;base64,asdfasdfasdfasdfa\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and the page loads.&lt;/p&gt;\n&lt;p&gt;I believe it works for me, and depending you might be able to do something like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;aftersubmit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;stopPropagation&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// or some other code which would prevent a refresh.&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form-control cu-b-border&quot;&lt;/span&gt; type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;formFile&quot;&lt;/span&gt;&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myImg&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In js&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\n    formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;, $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#formFile&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n        &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;/GetData/UploadImage&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formData,\n        &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// tell jQuery not to process the data&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// tell jQuery not to set contentType&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(data);\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myImg&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;, data);\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;xhr, ajaxOptions, thrownError&lt;/span&gt;) {\n        }\n    })\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In controller&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;public &lt;span class=&quot;hljs-title class_&quot;&gt;ActionResult&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UploadImage&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;HttpPostedFileBase&lt;/span&gt; file)\n        {\n            string filePath = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (file != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            {\n                string path = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/uploads/Temp/&quot;&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Directory&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;Exists&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Server&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;MapPath&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;~&quot;&lt;/span&gt; + path)))\n                {\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Directory&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;CreateDirectory&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Server&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;MapPath&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;~&quot;&lt;/span&gt; + path));\n                }\n                filePath = &lt;span class=&quot;hljs-title class_&quot;&gt;FileUpload&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;SaveUploadedFile&lt;/span&gt;(file, path);\n            }\n            \n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Json&lt;/span&gt;(filePath, &lt;span class=&quot;hljs-title class_&quot;&gt;JsonRequestBehavior&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;AllowGet&lt;/span&gt;);\n        }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#form-id&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n   e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n});\n\n$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#form-id&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formObj = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formURL = formObj.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;action&quot;&lt;/span&gt;);\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n          $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n             &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: formURL,\n             &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formData,\n             &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;json&quot;&lt;/span&gt;,\n             &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n                 &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.&lt;span class=&quot;hljs-property&quot;&gt;success&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(data.&lt;span class=&quot;hljs-property&quot;&gt;success&lt;/span&gt;)\n                 } \n                                \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;  (data.&lt;span class=&quot;hljs-property&quot;&gt;error&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(data.&lt;span class=&quot;hljs-property&quot;&gt;error&lt;/span&gt;)\n                 } \n             }\n         });\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form-horizontal&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form-id&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;masterFileController&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;btn-success btn&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;btn-save&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;Submit&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;servlet responce as &quot;out.print(&quot;your responce&quot;);&quot;&lt;/p&gt;\n    ","\n&lt;p&gt;This is my code that it works&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; files = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[type=file]&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; files.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (files[i].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; || files[i].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(files[i].&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;, files[i].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n}\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formSerializeArray = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#Form&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; formSerializeArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n  formData.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(formSerializeArray[i].&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;, formSerializeArray[i].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;)\n}\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: formData,\n &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n &lt;span class=&quot;hljs-attr&quot;&gt;processData&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n &lt;span class=&quot;hljs-attr&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;/Controller/Action&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) {\n &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (response.&lt;span class=&quot;hljs-property&quot;&gt;Success&lt;/span&gt; == &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n }\n &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n }\n },\n &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n },\n &lt;span class=&quot;hljs-attr&quot;&gt;failure&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n }\n });\n&lt;/code&gt;&lt;/pre&gt;\n    "],"239":["\n&lt;p&gt;You can use &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.isin.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;pd.Series.isin&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;For &quot;IN&quot; use: &lt;code&gt;something.isin(somewhere)&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;Or for &quot;NOT IN&quot;: &lt;code&gt;~something.isin(somewhere)&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;As a worked example:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df\n  country\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     China\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;countries_to_keep\n[&lt;span class=&quot;hljs-string&quot;&gt;&apos;UK&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;China&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df.country.isin(countries_to_keep)\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\nName: country, dtype: &lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df[df.country.isin(countries_to_keep)]\n  country\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     China\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df[~df.country.isin(countries_to_keep)]\n  country\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Alternative solution that uses &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#the-query-method&quot; rel=&quot;noreferrer&quot;&gt;.query()&lt;/a&gt; method:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]: df.query(&lt;span class=&quot;hljs-string&quot;&gt;&quot;countries in @countries_to_keep&quot;&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]:\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     China\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]: df.query(&lt;span class=&quot;hljs-string&quot;&gt;&quot;countries not in @countries_to_keep&quot;&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]:\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;h2&gt;How to implement &apos;in&apos; and &apos;not in&apos; for a pandas DataFrame?&lt;/h2&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Pandas offers two methods: &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.isin.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;Series.isin&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.isin.html#pandas.DataFrame.isin&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;DataFrame.isin&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; for Series and DataFrames, respectively.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Filter DataFrame Based on ONE Column (also applies to Series)&lt;/h2&gt;\n\n&lt;p&gt;The most common scenario is applying an &lt;code&gt;isin&lt;/code&gt; condition on a specific column to filter rows in a DataFrame.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;US&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;UK&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Germany&apos;&lt;/span&gt;, np.nan, &lt;span class=&quot;hljs-string&quot;&gt;&apos;China&apos;&lt;/span&gt;]})\ndf\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     China\n\nc1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;UK&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;China&apos;&lt;/span&gt;]             &lt;span class=&quot;hljs-comment&quot;&gt;# list&lt;/span&gt;\nc2 = {&lt;span class=&quot;hljs-string&quot;&gt;&apos;Germany&apos;&lt;/span&gt;}                 &lt;span class=&quot;hljs-comment&quot;&gt;# set&lt;/span&gt;\nc3 = pd.Series([&lt;span class=&quot;hljs-string&quot;&gt;&apos;China&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;US&apos;&lt;/span&gt;])  &lt;span class=&quot;hljs-comment&quot;&gt;# Series&lt;/span&gt;\nc4 = np.array([&lt;span class=&quot;hljs-string&quot;&gt;&apos;US&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;UK&apos;&lt;/span&gt;])      &lt;span class=&quot;hljs-comment&quot;&gt;# array&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Series.isin&lt;/code&gt; accepts various types as inputs. The following are all valid ways of getting what you want:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;].isin(c1)\n\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\nName: countries, dtype: &lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# `in` operation&lt;/span&gt;\ndf[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;].isin(c1)]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     China\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# `not in` operation&lt;/span&gt;\ndf[~df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;].isin(c1)]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;       NaN\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Filter with `set` (tuples work too)&lt;/span&gt;\ndf[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;].isin(c2)]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Filter with another Series&lt;/span&gt;\ndf[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;].isin(c3)]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     China\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Filter with array&lt;/span&gt;\ndf[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;].isin(c4)]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Filter on MANY Columns&lt;/h2&gt;\n\n&lt;p&gt;Sometimes, you will want to apply an &apos;in&apos; membership check with some search terms over multiple columns,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df2 = pd.DataFrame({\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;z&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;q&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;w&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, np.nan, &lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;: np.arange(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)})\ndf2\n\n   A    B  C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  x    w  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  y    a  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  z  NaN  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  q    x  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n\nc1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;w&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;p&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To apply the &lt;code&gt;isin&lt;/code&gt; condition to both columns &quot;A&quot; and &quot;B&quot;, use &lt;code&gt;DataFrame.isin&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df2[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]].isin(c1)\n\n      A      B\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;   &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;  &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;  &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;   &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From this, &lt;strong&gt;to retain rows where at least one column is &lt;code&gt;True&lt;/code&gt;&lt;/strong&gt;, we can use &lt;code&gt;any&lt;/code&gt; along the first axis:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df2[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]].isin(c1).&lt;span class=&quot;hljs-built_in&quot;&gt;any&lt;/span&gt;(axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\ndtype: &lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;\n\ndf2[df2[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]].isin(c1).&lt;span class=&quot;hljs-built_in&quot;&gt;any&lt;/span&gt;(axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)]\n\n   A  B  C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  x  w  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  q  x  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that if you want to search every column, you&apos;d just omit the column selection step and do &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df2.isin(c1).&lt;span class=&quot;hljs-built_in&quot;&gt;any&lt;/span&gt;(axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Similarly, &lt;strong&gt;to retain rows where ALL columns are &lt;code&gt;True&lt;/code&gt;&lt;/strong&gt;, use &lt;code&gt;all&lt;/code&gt; in the same manner as before.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df2[df2[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]].isin(c1).&lt;span class=&quot;hljs-built_in&quot;&gt;all&lt;/span&gt;(axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)]\n\n   A  B  C\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  x  w  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Notable Mentions: &lt;code&gt;numpy.isin&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt;, list comprehensions (string data)&lt;/h2&gt;\n\n&lt;p&gt;In addition to the methods described above, you can also use the numpy equivalent: &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.isin.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;numpy.isin&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# `in` operation&lt;/span&gt;\ndf[np.isin(df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;], c1)]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     China\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# `not in` operation&lt;/span&gt;\ndf[np.isin(df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;], c1, invert=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;       NaN\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Why is it worth considering? NumPy functions are usually a bit faster than their pandas equivalents because of lower overhead. Since this is an elementwise operation that does not depend on index alignment, there are very few situations where this method is not an appropriate replacement for pandas&apos; &lt;code&gt;isin&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Pandas routines are usually iterative when working with strings, because string operations are hard to vectorise. &lt;a href=&quot;https://stackoverflow.com/questions/54028199/for-loops-with-pandas-when-should-i-care&quot;&gt;There is a lot of evidence to suggest that list comprehensions will be faster here.&lt;/a&gt;.\nWe resort to an &lt;code&gt;in&lt;/code&gt; check now. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;c1_set = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(c1) &lt;span class=&quot;hljs-comment&quot;&gt;# Using `in` with `sets` is a constant time operation... &lt;/span&gt;\n                 &lt;span class=&quot;hljs-comment&quot;&gt;# This doesn&apos;t matter for pandas because the implementation differs.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# `in` operation&lt;/span&gt;\ndf[[x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; c1_set &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;]]]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        UK\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     China\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# `not in` operation&lt;/span&gt;\ndf[[x &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; c1_set &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;]]]\n\n  countries\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        US\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Germany\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;       NaN\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It is a lot more unwieldy to specify, however, so don&apos;t use it unless you know what you&apos;re doing.&lt;/p&gt;\n\n&lt;p&gt;Lastly, there&apos;s also &lt;code&gt;DataFrame.query&lt;/code&gt; which has been covered in &lt;a href=&quot;https://stackoverflow.com/a/45190397/4909087&quot;&gt;this answer&lt;/a&gt;. numexpr FTW!&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve been usually doing generic filtering over rows like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;criterion = &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; row: row[&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; countries\nnot_in = df[df.apply(criterion, axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Collating possible solutions from the answers:&lt;/p&gt;\n\n&lt;p&gt;For IN: &lt;code&gt;df[df[&apos;A&apos;].isin([3, 6])]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;For NOT IN:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;df[-df[&quot;A&quot;].isin([3, 6])]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;df[~df[&quot;A&quot;].isin([3, 6])]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;df[df[&quot;A&quot;].isin([3, 6]) == False]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;df[np.logical_not(df[&quot;A&quot;].isin([3, 6]))]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;I wanted to filter out dfbc rows that had a BUSINESS_ID that was also in the BUSINESS_ID of dfProfilesBusIds&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;dfbc = dfbc[~dfbc[&lt;span class=&quot;hljs-string&quot;&gt;&apos;BUSINESS_ID&apos;&lt;/span&gt;].isin(dfProfilesBusIds[&lt;span class=&quot;hljs-string&quot;&gt;&apos;BUSINESS_ID&apos;&lt;/span&gt;])]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Why is no one talking about the performance of various filtering methods? In fact, this topic often pops up here (see the example). I did my own performance test for a large data set. It is very interesting and instructive.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;animals&apos;&lt;/span&gt;: np.random.choice([&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mouse&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;birds&apos;&lt;/span&gt;], size=&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;**&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;), \n                   &lt;span class=&quot;hljs-string&quot;&gt;&apos;number&apos;&lt;/span&gt;: np.random.randint(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;, size=(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;**&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,))})\n\ndf.info()\n\n&amp;lt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;pandas.core.frame.DataFrame&apos;&lt;/span&gt;&amp;gt;\nRangeIndex: &lt;span class=&quot;hljs-number&quot;&gt;10000000&lt;/span&gt; entries, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; to &lt;span class=&quot;hljs-number&quot;&gt;9999999&lt;/span&gt;\nData columns (total &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; columns):\n &lt;span class=&quot;hljs-comment&quot;&gt;#   Column   Dtype &lt;/span&gt;\n---  ------   ----- \n &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;   animals  &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt;\n &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   number   int64 \ndtypes: int64(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\nmemory usage: &lt;span class=&quot;hljs-number&quot;&gt;152.6&lt;/span&gt;+ MB\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%%timeit\n&lt;span class=&quot;hljs-comment&quot;&gt;# .isin() by one column&lt;/span&gt;\nconditions = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;]\ndf[df.animals.isin(conditions)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;367&lt;/span&gt; ms ± &lt;span class=&quot;hljs-number&quot;&gt;2.34&lt;/span&gt; ms per loop (mean ± std. dev. of &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loop each)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%%timeit\n&lt;span class=&quot;hljs-comment&quot;&gt;# .query() by one column&lt;/span&gt;\nconditions = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;]\ndf.query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;animals in @conditions&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;395&lt;/span&gt; ms ± &lt;span class=&quot;hljs-number&quot;&gt;3.9&lt;/span&gt; ms per loop (mean ± std. dev. of &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loop each)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%%timeit\n&lt;span class=&quot;hljs-comment&quot;&gt;# .loc[]&lt;/span&gt;\ndf.loc[(df.animals==&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;)|(df.animals==&lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;987&lt;/span&gt; ms ± &lt;span class=&quot;hljs-number&quot;&gt;5.17&lt;/span&gt; ms per loop (mean ± std. dev. of &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loop each)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%%timeit\ndf[df.apply(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: x[&lt;span class=&quot;hljs-string&quot;&gt;&apos;animals&apos;&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;], axis=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;41.9&lt;/span&gt; s ± &lt;span class=&quot;hljs-number&quot;&gt;490&lt;/span&gt; ms per loop (mean ± std. dev. of &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loop each)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%%timeit\nnew_df = df.set_index(&lt;span class=&quot;hljs-string&quot;&gt;&apos;animals&apos;&lt;/span&gt;)\nnew_df.loc[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;], :]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;3.64&lt;/span&gt; s ± &lt;span class=&quot;hljs-number&quot;&gt;62.5&lt;/span&gt; ms per loop (mean ± std. dev. of &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loop each)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%%timeit\nnew_df = df.set_index(&lt;span class=&quot;hljs-string&quot;&gt;&apos;animals&apos;&lt;/span&gt;)\nnew_df[new_df.index.isin([&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;])]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;469&lt;/span&gt; ms ± &lt;span class=&quot;hljs-number&quot;&gt;8.98&lt;/span&gt; ms per loop (mean ± std. dev. of &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loop each)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%%timeit\ns = pd.Series([&lt;span class=&quot;hljs-string&quot;&gt;&apos;cat&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dog&apos;&lt;/span&gt;], name=&lt;span class=&quot;hljs-string&quot;&gt;&apos;animals&apos;&lt;/span&gt;)\ndf.merge(s, on=&lt;span class=&quot;hljs-string&quot;&gt;&apos;animals&apos;&lt;/span&gt;, how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;inner&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;796&lt;/span&gt; ms ± &lt;span class=&quot;hljs-number&quot;&gt;30.9&lt;/span&gt; ms per loop (mean ± std. dev. of &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; loop each)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Thus, the &lt;code&gt;isin&lt;/code&gt; method turned out to be the fastest and the method with &lt;code&gt;apply()&lt;/code&gt; was the slowest, which is not surprising.&lt;/p&gt;\n    ","\n&lt;p&gt;You can also use &lt;a href=&quot;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.isin.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;.isin()&lt;/code&gt;&lt;/a&gt; inside &lt;a href=&quot;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.query.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;.query()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;country.isin(@countries_to_keep).values&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# Or alternatively:&lt;/span&gt;\ndf.query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;country.isin([&quot;UK&quot;, &quot;China&quot;]).values&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To negate your query, use &lt;code&gt;~&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;~country.isin(@countries_to_keep).values&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Another way is to use comparison operators:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;country == @countries_to_keep&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# Or alternatively:&lt;/span&gt;\ndf.query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;country == [&quot;UK&quot;, &quot;China&quot;]&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And to negate the query, use &lt;code&gt;!=&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;country != @countries_to_keep&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;countries&apos;&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;US&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;UK&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;Germany&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;China&apos;&lt;/span&gt;]})\ncountries = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;UK&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;China&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;implement in&lt;/strong&gt;:    &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df[df.countries.isin(countries)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;implement not in&lt;/strong&gt; as in of rest countries:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df[df.countries.isin([x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; np.unique(df.countries) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; countries])]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A trick if you want to keep the order of the list:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({&lt;span class=&quot;hljs-string&quot;&gt;&apos;country&apos;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;US&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;UK&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Germany&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;China&apos;&lt;/span&gt;]})\ncountries_to_keep = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Germany&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;US&apos;&lt;/span&gt;]\n\n\nind=[df.index[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;country&apos;&lt;/span&gt;]==i].tolist() &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; countries_to_keep]\nflat_ind=[item &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; sublist &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; ind &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; sublist]\n\ndf.reindex(flat_ind)\n\n   country\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  Germany\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;       US\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;My 2c worth:\nI needed a combination of in and ifelse statements for a dataframe, and this worked for me.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;sale_method = pd.DataFrame(model_data[&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sale Method&quot;&lt;/span&gt;].&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.upper())\nsale_method[&lt;span class=&quot;hljs-string&quot;&gt;&quot;sale_classification&quot;&lt;/span&gt;] = np.where(\n    sale_method[&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sale Method&quot;&lt;/span&gt;].isin([&lt;span class=&quot;hljs-string&quot;&gt;&quot;PRIVATE&quot;&lt;/span&gt;]),\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;private&quot;&lt;/span&gt;,\n    np.where(\n        sale_method[&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sale Method&quot;&lt;/span&gt;].&lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;.contains(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AUCTION&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&quot;auction&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;other&quot;&lt;/span&gt;\n    ),\n)\n&lt;/code&gt;&lt;/pre&gt;\n    "],"240":["\n&lt;p&gt;Once you wait for the element and moving forward as you are trying to invoke &lt;code&gt;click()&lt;/code&gt; method instead of using &lt;code&gt;presence_of_element_located()&lt;/code&gt; method you need to use &lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.element_to_be_clickable&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;element_to_be_clickable()&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; as follows :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n    myElem = WebDriverWait(self.browser, delay).until(EC.element_to_be_clickable((By.XPATH , xpath)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Update&lt;/h2&gt;\n\n&lt;p&gt;As per your counter question in the comments here are the details of the three methods :&lt;/p&gt;\n\n&lt;h2&gt;presence_of_element_located&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.presence_of_element_located&quot; rel=&quot;noreferrer&quot;&gt;presence_of_element_located(locator)&lt;/a&gt; is defined as follows :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;selenium&lt;/span&gt;.webdriver.support.expected_conditions.presence_of_element_located(locator)\n\nParameter : locator - used to find the element returns the WebElement once it &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; located\n\nDescription : An expectation &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; checking that an element &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; present on the DOM of a page. This does &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; necessarily mean that the element &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; visible &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; interactable (i.e. clickable). \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;visibility_of_element_located&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.visibility_of_element_located&quot; rel=&quot;noreferrer&quot;&gt;visibility_of_element_located(locator)&lt;/a&gt; is defined as follows :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;selenium&lt;/span&gt;.webdriver.support.expected_conditions.visibility_of_element_located(locator)\n\nParameter : locator -  used to find the element returns the WebElement once it &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; located &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; visible\n\nDescription : An expectation &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; checking that an element &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; present on the DOM of a page &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; visible. Visibility means that the element &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; only displayed but also has a height &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; width that &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; greater than &lt;span class=&quot;hljs-number&quot;&gt;0.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;element_to_be_clickable&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.element_to_be_clickable&quot; rel=&quot;noreferrer&quot;&gt;element_to_be_clickable(locator)&lt;/a&gt; is defined as follows :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;selenium&lt;/span&gt;.webdriver.support.expected_conditions.element_to_be_clickable(locator)\n\nParameter : locator - used to find the element returns the WebElement once it &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; visible, enabled &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; interactable (i.e. clickable).\n\nDescription : An Expectation &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; checking an element &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; visible, enabled &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; interactable such that you can click it. \n&lt;/code&gt;&lt;/pre&gt;\n    "]},"page":"75","randomQuestions":[{"title":"How to avoid having class data shared among instances?","slug":"how-to-avoid-having-class-data-shared-among-instances-1657387687732"},{"title":"What do querySelectorAll and getElementsBy* methods return?","slug":"what-do-queryselectorall-and-getelementsby*-methods-return-1657384425935"},{"title":"Selenium \"selenium.common.exceptions.NoSuchElementException\" when using Chrome","slug":"selenium-\"selenium.common.exceptions.nosuchelementexception\"-when-using-chrome-1657388136699"},{"title":"Of the many findElement(s)/By functions in Selenium, when would you use one over the other?","slug":"of-the-many-findelement(s)by-functions-in-selenium-when-would-you-use-one-over-the-other-1657388412658"},{"title":"What happens if you use the 32-bit int 0x80 Linux ABI in 64-bit code?","slug":"what-happens-if-you-use-the-32-bit-int-0x80-linux-abi-in-64-bit-code-1657388560485"},{"title":"commandButton/commandLink/ajax action/listener method not invoked or input value not set/updated","slug":"commandbuttoncommandlinkajax-actionlistener-method-not-invoked-or-input-value-not-setupdated-1657384667519"},{"title":"Make container shrink-to-fit child elements as they wrap","slug":"make-container-shrink-to-fit-child-elements-as-they-wrap-1657388134549"},{"title":"event.preventDefault() vs. return false","slug":"event.preventdefault()-vs.-return-false-1657387458377"},{"title":"How can I remove a specific item from an array?","slug":"how-can-i-remove-a-specific-item-from-an-array-1657387552077"},{"title":"Why is using 'eval' a bad practice?","slug":"why-is-using-'eval'-a-bad-practice-1657387348760"},{"title":"How to compare arrays in JavaScript?","slug":"how-to-compare-arrays-in-javascript-1657387352277"},{"title":"Most efficient method to groupby on an array of objects","slug":"most-efficient-method-to-groupby-on-an-array-of-objects-1657387580538"},{"title":"Why do I need to override the equals and hashCode methods in Java?","slug":"why-do-i-need-to-override-the-equals-and-hashcode-methods-in-java-1657388359877"},{"title":"How to center an element horizontally and vertically","slug":"how-to-center-an-element-horizontally-and-vertically-1657388132330"},{"title":"How do I add a delay in a JavaScript loop?","slug":"how-do-i-add-a-delay-in-a-javascript-loop-1657388544679"},{"title":"\"Cross origin requests are only supported for HTTP.\" error when loading a local file","slug":"\"cross-origin-requests-are-only-supported-for-http.\"-error-when-loading-a-local-file-1657387942403"},{"title":"Why do I get a segmentation fault when writing to a \"char *s\" initialized with a string literal, but not \"char s[]\"?","slug":"why-do-i-get-a-segmentation-fault-when-writing-to-a-\"char-*s\"-initialized-with-a-string-literal-but-not-\"char-s\"-1657385511046"},{"title":"Dynamically access object property using variable","slug":"dynamically-access-object-property-using-variable-1657384439324"},{"title":"Why are floating point numbers inaccurate?","slug":"why-are-floating-point-numbers-inaccurate-1657387346111"},{"title":"What and where are the stack and heap?","slug":"what-and-where-are-the-stack-and-heap-1657387415361"}]},"__N_SSG":true}