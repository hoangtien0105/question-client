{"pageProps":{"data":{"count":610,"rows":[{"id":290,"title":"Crash or \"segmentation fault\" when data is copied/scanned/read to an uninitialized pointer","slug":"crash-or-\"segmentation-fault\"-when-data-is-copiedscannedread-to-an-uninitialized-pointer-1657387520581","postType":"QUESTION","createdAt":"2022-07-09T17:25:20.000Z","updatedAt":"2022-07-09T17:25:20.000Z","tags":[]},{"id":289,"title":"What is the `self` parameter in class methods?","slug":"what-is-the-self-parameter-in-class-methods-1657387518448","postType":"QUESTION","createdAt":"2022-07-09T17:25:18.000Z","updatedAt":"2022-07-09T17:25:18.000Z","tags":[{"id":1759,"name":"self","slug":"self","createdAt":"2022-07-09T17:25:18.000Z","updatedAt":"2022-07-09T17:25:18.000Z","Questions_Tags":{"questionId":289,"tagId":1759}}]},{"id":288,"title":"What is the difference between JSON and Object Literal Notation?","slug":"what-is-the-difference-between-json-and-object-literal-notation-1657387515710","postType":"QUESTION","createdAt":"2022-07-09T17:25:15.000Z","updatedAt":"2022-07-09T17:25:15.000Z","tags":[{"id":1755,"name":"object-notation","slug":"object-notation","createdAt":"2022-07-09T17:25:15.000Z","updatedAt":"2022-07-09T17:25:15.000Z","Questions_Tags":{"questionId":288,"tagId":1755}}]},{"id":287,"title":"Maintain the aspect ratio of a div with CSS","slug":"maintain-the-aspect-ratio-of-a-div-with-css-1657387513615","postType":"QUESTION","createdAt":"2022-07-09T17:25:13.000Z","updatedAt":"2022-07-09T17:25:13.000Z","tags":[{"id":1751,"name":"responsive-design","slug":"responsive-design","createdAt":"2022-07-09T17:25:13.000Z","updatedAt":"2022-07-09T17:25:13.000Z","Questions_Tags":{"questionId":287,"tagId":1751}},{"id":1752,"name":"aspect-ratio","slug":"aspect-ratio","createdAt":"2022-07-09T17:25:13.000Z","updatedAt":"2022-07-09T17:25:13.000Z","Questions_Tags":{"questionId":287,"tagId":1752}}]},{"id":286,"title":"How do I modify the URL without reloading the page?","slug":"how-do-i-modify-the-url-without-reloading-the-page-1657387509731","postType":"QUESTION","createdAt":"2022-07-09T17:25:09.000Z","updatedAt":"2022-07-09T17:25:09.000Z","tags":[{"id":1747,"name":"url-rewriting","slug":"url-rewriting","createdAt":"2022-07-09T17:25:09.000Z","updatedAt":"2022-07-09T17:25:09.000Z","Questions_Tags":{"questionId":286,"tagId":1747}}]}]},"answers":{"286":["\n&lt;p&gt;This can now be done in Chrome, Safari, Firefox 4+, and Internet&amp;nbsp;Explorer&amp;nbsp;10pp4+!&lt;/p&gt;\n\n&lt;p&gt;See this question&apos;s answer for more information:\n&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3338642/updating-address-bar-with-new-url-without-hash-or-reloading-the-page&quot;&gt;Updating address bar with new URL without hash or reloading the page&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;processAjaxData&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response, urlPath&lt;/span&gt;){\n     &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = response.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;;\n     &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;title&lt;/span&gt; = response.&lt;span class=&quot;hljs-property&quot;&gt;pageTitle&lt;/span&gt;;\n     &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;html&quot;&lt;/span&gt;:response.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageTitle&quot;&lt;/span&gt;:response.&lt;span class=&quot;hljs-property&quot;&gt;pageTitle&lt;/span&gt;},&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;, urlPath);\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can then use &lt;code&gt;window.onpopstate&lt;/code&gt; to detect the back/forward button navigation:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onpopstate&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt;){\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = e.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;title&lt;/span&gt; = e.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageTitle&lt;/span&gt;;\n    }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;For a more in-depth look at manipulating browser history, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history&quot; rel=&quot;noreferrer&quot;&gt;this MDN article&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;HTML5 introduced the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History/pushState&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;history.pushState()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;history.replaceState()&lt;/code&gt;&lt;/a&gt; methods, which allow you to add and modify history entries, respectively.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;page2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Title&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/page2.php&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Read more about this from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can also use HTML5 &lt;strong&gt;replaceState&lt;/strong&gt; if you want to change the url but don&apos;t want to add the entry to the browser history:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;replaceState&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-comment&quot;&gt;//prevents browser from storing history with each change:&lt;/span&gt;\n   &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replaceState&lt;/span&gt;(statedata, title, url);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This would &apos;break&apos; the back button functionality. This may be required in some instances such as an image gallery (where you want the back button to return back to the gallery index page instead of moving back through each and every image you viewed) whilst giving each image its own unique url.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is my solution (newUrl is your new URL which you want to replace with the current one):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;history.pushState({}, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, newUrl);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;NOTE: If you are working with an HTML5 browser then you should ignore this answer. This is now possible as can be seen in the other answers.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;There is no way to modify the &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_locator&quot; rel=&quot;noreferrer&quot;&gt;URL&lt;/a&gt; in the browser without reloading the page. The URL represents what the last loaded page was. If you change it (&lt;code&gt;document.location&lt;/code&gt;) then it will reload the page.&lt;/p&gt;\n\n&lt;p&gt;One obvious reason being, you write a site on &lt;code&gt;www.mysite.com&lt;/code&gt; that looks like a bank login page. Then you change the browser URL bar to say &lt;code&gt;www.mybank.com&lt;/code&gt;. The user will be totally unaware that they are really looking at &lt;code&gt;www.mysite.com&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;parent.location.hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In modern &lt;strong&gt;browsers and HTML5&lt;/strong&gt;, there is a method called &lt;code&gt;pushState&lt;/code&gt; on window &lt;code&gt;history&lt;/code&gt;. That will change the URL and push it to the history without loading the page.&lt;/p&gt;\n&lt;p&gt;You can use it like this, it will take 3 parameters, 1) state object 2) title and a URL):&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;another&quot;&lt;/span&gt;}, &lt;span class=&quot;hljs-string&quot;&gt;&quot;another page&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;example.html&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This will change the URL, but not reload the page. Also, it doesn&apos;t check if the page exists, so if you do some JavaScript code that is reacting to the URL, you can work with them like this.&lt;/p&gt;\n&lt;p&gt;Also, there is &lt;code&gt;history.replaceState()&lt;/code&gt; which does exactly the same thing, except it will modify the current history instead of creating a new one!&lt;/p&gt;\n&lt;p&gt;Also you can create a function to check if &lt;code&gt;history.pushState&lt;/code&gt; exist, then carry on with the rest like this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;goTo&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;page, title, url&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt; !== &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; history.&lt;span class=&quot;hljs-property&quot;&gt;pushState&lt;/span&gt;) {\n    history.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt;: page}, title, url);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(url);\n  }\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;goTo&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;another page&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;example&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;example.html&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Also, you can change the &lt;code&gt;#&lt;/code&gt; for &lt;code&gt;&amp;lt;HTML5 browsers&lt;/code&gt;, which won&apos;t reload the page. That&apos;s the way Angular uses to do &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-page_application&quot; rel=&quot;noreferrer&quot;&gt;SPA&lt;/a&gt; according to hashtag...&lt;/p&gt;\n&lt;p&gt;Changing &lt;code&gt;#&lt;/code&gt; is quite easy, doing like:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;window.location.hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;example&quot;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And you can detect it like this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onhashchange&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#changed&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The HTML5 replaceState is the answer, as already mentioned by Vivart and geo1701. However it is not supported in all browsers/versions.\n&lt;a href=&quot;https://github.com/balupton/history.js&quot; rel=&quot;noreferrer&quot;&gt;History.js&lt;/a&gt; wraps HTML5 state features and provides additional support for HTML4 browsers.&lt;/p&gt;\n    ","\n&lt;p&gt;Before HTML5 we can use:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;parent.location.hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http:www.example.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This method will reload your page, but HTML5 introduced the &lt;code&gt;history.pushState(page, caption, replace_url)&lt;/code&gt; that should not reload your page.&lt;/p&gt;\n    ","\n&lt;p&gt;If what you&apos;re trying to do is allow users to bookmark/share pages, and you don&apos;t need it to be exactly the right URL, and you&apos;re not using hash anchors for anything else, then you can do this in two parts; you use the location. hash discussed above, and then implement a check on the home page, to look for a URL with a hash anchor in it, and redirect you to the subsequent result.&lt;/p&gt;\n&lt;p&gt;For instance:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;User is on &lt;code&gt;www.site.com/section/page/4&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;User does some action which changes the URL to &lt;code&gt;www.site.com/#/section/page/6&lt;/code&gt; (with the hash). Say you&apos;ve loaded the correct content for page 6 into the page, so apart from the hash the user is not too disturbed.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;User passes this URL on to someone else, or bookmarks it&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Someone else, or the same user at a later date, goes to &lt;code&gt;www.site.com/#/section/page/6&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Code on &lt;code&gt;www.site.com/&lt;/code&gt; redirects the user to &lt;code&gt;www.site.com/section/page/6&lt;/code&gt;, using something like this:&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){ \n   &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Hope that makes sense! It&apos;s a useful approach for some situations.&lt;/p&gt;\n    ","\n&lt;p&gt;Below is the function to change the URL without reloading the page. It is only supported for HTML5.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ChangeUrl&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;page, url&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; (history.&lt;span class=&quot;hljs-property&quot;&gt;pushState&lt;/span&gt;) != &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;span class=&quot;hljs-title class_&quot;&gt;Page&lt;/span&gt;: page, &lt;span class=&quot;hljs-title class_&quot;&gt;Url&lt;/span&gt;: url};\n            history.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;(obj, obj.&lt;span class=&quot;hljs-property&quot;&gt;Page&lt;/span&gt;, obj.&lt;span class=&quot;hljs-property&quot;&gt;Url&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;homePage&quot;&lt;/span&gt;;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// alert(&quot;Browser does not support HTML5.&quot;);&lt;/span&gt;\n        }\n    }\n\n  &lt;span class=&quot;hljs-title class_&quot;&gt;ChangeUrl&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Page1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;homePage&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use this beautiful and simple function to do so anywhere on your application.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;changeurl&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;url, title&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; new_url = &lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt; + url;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;data&apos;&lt;/span&gt;, title, new_url);\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can not only edit the URL but you can update the title along with it.&lt;/p&gt;\n    ","\n&lt;p&gt;Any changes of the loction (either &lt;code&gt;window.location&lt;/code&gt; or &lt;code&gt;document.location&lt;/code&gt;) will cause a request on that new URL, if youre not just changing the URL fragment. If you change the URL, you change the URL.&lt;/p&gt;\n\n&lt;p&gt;Use server-side URL rewrite techniques like &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html&quot; rel=&quot;noreferrer&quot;&gt;Apaches mod_rewrite&lt;/a&gt; if you dont like the URLs you are currently using.&lt;/p&gt;\n    ","\n&lt;p&gt;You can add anchor tags. I use this on my site so that I can track with Google Analytics what people are visiting on the page.&lt;/p&gt;\n\n&lt;p&gt;I just add an anchor tag and then the part of the page I want to track:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; trackCode = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/#&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;urlencode&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myDiv&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;());\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.piano-chords.net&quot;&lt;/span&gt; + trackCode;\npageTracker.&lt;span class=&quot;hljs-title function_&quot;&gt;_trackPageview&lt;/span&gt;(trackCode);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As pointed out by Thomas Stjernegaard Jeppesen, you could use &lt;a href=&quot;https://github.com/browserstate/history.js&quot; rel=&quot;noreferrer&quot;&gt;History.js&lt;/a&gt; to modify URL parameters whilst the user navigates through your Ajax links and apps. &lt;/p&gt;\n\n&lt;p&gt;Almost an year has passed since that answer, and History.js grew and became more stable and cross-browser. Now it can be used to manage history states in HTML5-compliant as well as in many HTML4-only browsers. &lt;a href=&quot;http://browserstate.github.io/history.js/demo/?state=1&quot; rel=&quot;noreferrer&quot;&gt;In this demo&lt;/a&gt; You can see an example of how it works (as well as being able to try its functionalities and limits. &lt;/p&gt;\n\n&lt;p&gt;Should you need any help in how to use and implement this library, i suggest you to take a look at the source code of the demo page: you will see it&apos;s very easy to do.&lt;/p&gt;\n\n&lt;p&gt;Finally, for a comprehensive explanation of what can be the issues about using hashes (and hashbangs), check out &lt;a href=&quot;https://github.com/browserstate/history.js/wiki/Intelligent-State-Handling&quot; rel=&quot;noreferrer&quot;&gt;this link&lt;/a&gt; by Benjamin Lupton. &lt;/p&gt;\n    ","\n&lt;p&gt;Use &lt;code&gt;history.pushState()&lt;/code&gt; from the HTML 5 History API.&lt;/p&gt;\n\n&lt;p&gt;Refer to the &lt;a href=&quot;http://diveintohtml5.info/history.html&quot; rel=&quot;noreferrer&quot;&gt;HTML5 History API&lt;/a&gt; for more details.&lt;/p&gt;\n    ","\n&lt;p&gt;Your new url.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; newUrlIS =  &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;origin&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos;/user/profile/management&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In a sense, calling pushState() is similar to setting window.location = &quot;#foo&quot;, in that both will also create and activate another history entry associated with the current document. But pushState() has a few advantages:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;history.pushState({}, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, newUrlIS);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can check out the root: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/History_API&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This code works for me. I used it into my application in ajax.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;history.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pushState&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt; }, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/bank&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Once a page load into an ID using ajax, It does change the browser url automatically without reloading the page.&lt;/p&gt;\n&lt;p&gt;This is ajax function bellow.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showData&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n      &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n      &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Bank.php&quot;&lt;/span&gt;, \n      &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: {}, \n      &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;html&lt;/span&gt;){          \n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(html).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;margin-left&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;0px&quot;&lt;/span&gt;);\n      }\n    });\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Example: From any page or controller like &quot;Dashboard&quot;, When I click on the bank, it loads bank list using the ajax code without reloading the page. At this time, browser URL will not be changed.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;history.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pushState&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt; }, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/bank&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But when I use this code into the ajax, it change the browser url without reloading the page.\nThis is the full ajax code here in the bellow.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showData&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n          &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Bank.php&quot;&lt;/span&gt;, \n          &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: {}, \n          &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;html&lt;/span&gt;){          \n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(html).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;margin-left&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;0px&quot;&lt;/span&gt;);\n            history.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt; }, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/bank&apos;&lt;/span&gt;);\n          }\n        });\n      }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;This is all you will need to navigate without reload&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// add setting without reload &lt;/span&gt;\nlocation.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;setting&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// if url change with hash do somthing&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hashchange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;url hash changed!&apos;&lt;/span&gt;);\n});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// if url change do somthing (dont detect changes with hash)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//window.addEventListener(&apos;locationchange&apos;, function(){&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//    console.log(&apos;url changed!&apos;);&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//})&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// remove #setting without reload &lt;/span&gt;\n\nhistory.&lt;span class=&quot;hljs-title function_&quot;&gt;back&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Simply use, it will not reload the page, but just the URL :&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#form_name&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;action&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/shop/index.htm&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    "],"287":["\n&lt;p&gt;Just create a wrapper &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with a percentage value for &lt;code&gt;padding-bottom&lt;/code&gt;, like this:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.demoWrapper&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: white;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;box-sizing&lt;/span&gt;: border-box;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;resize&lt;/span&gt;: horizontal;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; dashed;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;16px&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;75%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: gold; &lt;span class=&quot;hljs-comment&quot;&gt;/** &amp;lt;-- For the demo **/&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;demoWrapper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;It will result in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with height equal to 75% of the width of its container (a 4:3 aspect ratio).&lt;/p&gt;\n&lt;p&gt;This relies on the fact that for padding :&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The percentage is calculated with respect to the &lt;strong&gt;width&lt;/strong&gt; of the generated box&apos;s containing block [...]  (source: &lt;a href=&quot;http://www.w3.org/TR/2011/REC-CSS2-20110607/box.html#padding-properties&quot; rel=&quot;noreferrer&quot;&gt;w3.org&lt;/a&gt;, emphasis mine)&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Padding-bottom values for other aspect ratios and 100% width :&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;aspect ratio  | padding-bottom value\n--------------|----------------------\n    16:9      |       56.25%\n    4:3       |       75%\n    3:2       |       66.66%\n    8:5       |       62.5%\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Placing content in the div :&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;In order to keep the aspect ratio of the div and prevent its content from stretching it, you need to add an absolutely positioned child and stretch it to the edges of the wrapper with:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.stretchy-wrapper&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.stretchy-wrapper&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;http://dabblet.com/gist/2590942&quot; rel=&quot;noreferrer&quot;&gt;Here&apos;s a &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; and another more in depth &lt;a href=&quot;http://jsbin.com/vatuqiyebu/edit&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There are &lt;strong&gt;several ways to specify a fixed aspect ratio&lt;/strong&gt; on an element like a div, here are 2 of them:&lt;/p&gt;\n&lt;h1&gt;1. The &lt;code&gt;aspect-ratio&lt;/code&gt; CSS property &lt;em&gt;(new)&lt;/em&gt;&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: teal;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 1 / 1;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;This is the most simple and flexible solution&lt;/strong&gt;. It directly specifies a fixed width to height (or height to width) aspect ratio for an element. This means you can also specify an aspect ratio according to the elements &lt;em&gt;height&lt;/em&gt;.&lt;br&gt;\nIt doesn&apos;t rely on the parent width (like the padding technique) or the viewport size (like the following &lt;code&gt;vw&lt;/code&gt; unit technique) it relies on the element&apos;s own width or height &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio&quot; rel=&quot;noreferrer&quot;&gt;More info on MDN&lt;/a&gt;. That is what make it so powerfull compared to other workarounds.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;This is a modern property&lt;/strong&gt; (2021). All modern browsers support it, see &lt;a href=&quot;https://caniuse.com/mdn-css_properties_aspect-ratio&quot; rel=&quot;noreferrer&quot;&gt;caniuse for precise browser support&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Here are a few examples with different aspect ratios :&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.ar-1-1&lt;/span&gt;  {aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ar-3-2&lt;/span&gt;  {aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ar-4-3&lt;/span&gt;  {aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ar-16-9&lt;/span&gt; {aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ar-2-3&lt;/span&gt;  {aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ar-3-4&lt;/span&gt;  {aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ar-9-16&lt;/span&gt; {aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;;}\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/** For the demo : **/&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;:wrap;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;:flex-start;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: teal;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;23%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;:center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ar-1-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 1 / 1;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ar-3-2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 3 / 2;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ar-4-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 4 / 3;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ar-16-9&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 16 / 9;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ar-2-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 2 / 3;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ar-3-4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 3 / 4;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ar-9-16&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;aspect-ratio: 9 / 16;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h1&gt;2. Using &lt;code&gt;vw&lt;/code&gt; units:&lt;/h1&gt;\n&lt;p&gt;You can use &lt;code&gt;vw&lt;/code&gt; units for both the width and height of the element. This allows the element&apos;s aspect ratio to be preserved, &lt;strong&gt;based on the viewport width&lt;/strong&gt;.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;vw : 1/100th of the width of the viewport.  [&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length#Viewport-percentage_lengths&quot; rel=&quot;noreferrer&quot;&gt;MDN&lt;/a&gt;&lt;/em&gt;]&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Alternatively, you can also use &lt;code&gt;vh&lt;/code&gt; for viewport height, or even &lt;code&gt;vmin&lt;/code&gt;/&lt;code&gt;vmax&lt;/code&gt; to use the lesser/greater of the viewport dimensions (discussion &lt;a href=&quot;https://stackoverflow.com/questions/23630140/fit-responsive-square-in-viewport-according-to-width-and-height/23631436#23631436&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Example: 1:1 aspect ratio&lt;/strong&gt;\n&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20vw&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20vw&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: gold;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;For other aspect ratios, you can use the following table to calculate the value for height according to the width of the element :&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;aspect ratio  |  multiply width by\n-----------------------------------\n     1:1      |         1\n     1:3      |         3\n     4:3      |        0.75\n    16:9      |       0.5625\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Example: 4x4 grid of square divs&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: space-between;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;23vw&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;23vw&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0.5vw&lt;/span&gt; auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: gold;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Here is a &lt;a href=&quot;http://jsfiddle.net/webtiki/dAebS/606/&quot; rel=&quot;noreferrer&quot;&gt;Fiddle with this demo&lt;/a&gt; and here is a solution to make a &lt;a href=&quot;https://stackoverflow.com/q/20456694/1811992&quot;&gt;responsive grid of squares with verticaly and horizontaly centered content&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Browser support for vh/vw units is IE9+ see &lt;a href=&quot;http://caniuse.com/viewport-units&quot; rel=&quot;noreferrer&quot;&gt;canIuse for more info&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;2022 solution - use the &lt;code&gt;aspect-ratio&lt;/code&gt; CSS property&lt;/h1&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;demo&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.demo {\n  background: black;\n  width: 500px;\n  aspect-ratio: 4/3;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Update: &lt;a href=&quot;https://caniuse.com/?search=aspect-ratio&quot; rel=&quot;noreferrer&quot;&gt;this solution is now supported by all evergreen browsers&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I stumbled upon what I consider &lt;a href=&quot;https://codeburst.io/keeping-aspect-ratio-with-html-and-no-padding-tricks-40705656808b&quot; rel=&quot;noreferrer&quot;&gt;a smart solution&lt;/a&gt; for this problem, using &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; and &lt;code&gt;display:grid&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;A &lt;code&gt;display:grid&lt;/code&gt; element allows you to occupy the same space with two (or more) of its children, using the same &lt;code&gt;grid-area&lt;/code&gt;.&lt;br&gt;\nThis means means they are all flow content, overlapped, and out of the box &lt;strong&gt;the taller one sets the ratio&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;One of them will be an &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; in charge of setting the ratio. The other, actual content. If actual content is short and never fills up the entire ratio (and you just want it centered in a space with this ratio), simply center it (see first runnable snippet below).&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0 0 1 1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    I&apos;m square\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; &amp;gt; * {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Set &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;s ratio to whatever you want:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;&amp;lt;svg viewBox=&quot;0 0 4 3&quot;&amp;gt;&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;&amp;lt;svg viewBox=&quot;0 0 16 9&quot;&amp;gt;&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; &amp;gt; * {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* below code NOT needed for setting the ratio \n * I just wanted to mark it visually\n * and center contents\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid red;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0 0 7 1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    Fixed ratio 7:1\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;If you need a solution where the content element has more content you want confined into a scrollable area with desired ratio, set &lt;code&gt;position:relative&lt;/code&gt; on the parent and &lt;code&gt;position:absolute; height:100%; overflow-y: auto;&lt;/code&gt; on the content, allowing the flow content element (the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;) to set the size, therefore the ratio.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; &amp;gt; * {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow-y&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  \n  &lt;span class=&quot;hljs-comment&quot;&gt;/* the rest is not needed */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid red;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1rem&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0 0 7 2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Fixed ratio 7:2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. A scelerisque purus semper eget. Sem nulla pharetra diam sit amet nisl suscipit adipiscing bibendum. A cras semper auctor neque vitae tempus quam pellentesque nec. Morbi enim nunc faucibus a pellentesque sit amet porttitor. Arcu odio ut sem nulla. Sed viverra ipsum nunc aliquet bibendum enim facilisis gravida neque. Cras tincidunt lobortis feugiat vivamus at augue eget. Laoreet sit amet cursus sit amet. Amet nulla facilisi morbi tempus iaculis urna id volutpat. Leo in vitae turpis massa sed elementum tempus egestas sed. Egestas integer eget aliquet nibh. Dolor sit amet consectetur adipiscing elit.\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Ut aliquam purus sit amet. Eget magna fermentum iaculis eu non diam phasellus vestibulum. Diam in arcu cursus euismod quis viverra nibh. Nullam vehicula ipsum a arcu cursus vitae congue. Vel orci porta non pulvinar neque laoreet suspendisse. At tellus at urna condimentum mattis pellentesque. Tristique senectus et netus et malesuada. Vel pretium lectus quam id leo in. Interdum velit euismod in pellentesque. Velit euismod in pellentesque massa placerat duis. Vitae suscipit tellus mauris a diam maecenas sed enim.\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Mauris a diam maecenas sed enim ut sem. In hendrerit gravida rutrum quisque. Amet dictum sit amet justo donec enim diam. Diam vulputate ut pharetra sit amet aliquam id. Urna porttitor rhoncus dolor purus non enim praesent. Purus in massa tempor nec feugiat nisl pretium. Sagittis vitae et leo duis ut. Facilisi nullam vehicula ipsum a arcu cursus vitae congue mauris. Volutpat odio facilisis mauris sit amet massa vitae tortor condimentum. Aliquam purus sit amet luctus venenatis lectus magna. Sit amet purus gravida quis blandit turpis. Enim eu turpis egestas pretium aenean. Consequat mauris nunc congue nisi. Nunc sed id semper risus in hendrerit gravida rutrum. Ante metus dictum at tempor. Blandit massa enim nec dui nunc mattis enim ut.\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;As @emjay noted in a comment below, the ratio svg can be placed in one of the parent&apos;s pseudo-elements, as long as it&apos;s properly encoded:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.three-squares&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid red;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.three-squares&lt;/span&gt; &amp;gt; *, &lt;span class=&quot;hljs-selector-class&quot;&gt;.three-squares&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.three-squares&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data:image/svg+xml,%3Csvg xmlns=&apos;http://www.w3.org/2000/svg&apos; viewBox=&apos;0 0 3 1&apos;%3E%3C/svg%3E&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;three-squares&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  \n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;I&apos;m 3:1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;When used inside a pseudo-element, the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; becomes a &lt;em&gt;replaced element&lt;/em&gt; which, by default, sits on a baseline of variable height (&lt;code&gt;4px&lt;/code&gt; in Chrome, &lt;code&gt;3.5px&lt;/code&gt; in Firefox). The height of the baseline varies according to &lt;code&gt;line-height&lt;/code&gt;, which is why we need to set &lt;code&gt;line-height: 0&lt;/code&gt; on the pseudo to get an accurate ratio. More details &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=1179090&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;I personally prefer the version where the &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; is placed in markup, as I can have a single class (&lt;code&gt;.ratio&lt;/code&gt;) dealing with containers of various ratios (as opposed to having a class for each individual ratio I might need).&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve found a way to do this using CSS, but you have to be careful as it may change depending on the flow of your own web site.  I&apos;ve done it in order to embed video with a constant aspect ratio within a fluid width portion of my web site.&lt;/p&gt;\n\n&lt;p&gt;Say you have an embedded video like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;object&lt;/span&gt;&amp;gt;&lt;/span&gt;\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;...\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;embed&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt;&amp;lt;/&lt;span class=&quot;hljs-attr&quot;&gt;embed&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;object&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You could then place this all inside a div with a &quot;video&quot; class.  This video class will probably be the fluid element in your website such that, by itself, it has no direct height constraints, but when you resize the browser it will change in width according to the flow of the web site.  This would be the element you are probably trying to get your embedded video in while maintaining a certain aspect ratio of the video.&lt;/p&gt;\n\n&lt;p&gt;In order to do this, I put an image before the embedded object within the &quot;video&quot; class div.  &lt;/p&gt;\n\n&lt;p&gt;!!! The important part is that the image has the correct aspect ratio you wish to maintain.  Also, make sure the size of the image is AT LEAST as big as the smallest you expect the video (or whatever you are maintaining the A.R. of) to get based on your layout.  This will avoid any potential issues in the resolution of the image when it is percentage-resized.  For example, if you wanted to maintain an aspect ratio of 3:2, don&apos;t just use a 3px by 2px image.  It may work under some circumstances, but I haven&apos;t tested it, and it would probably be a good idea to avoid.  &lt;/p&gt;\n\n&lt;p&gt;You should probably already have a minimum width like this defined for fluid elements of your web site.  If not, it is a good idea to do so in order to avoid chopping elements off or having overlap when the browser window gets too small.  It is better to have a scroll bar at some point.  The smallest in width a web page should get is somewhere around ~600px (including any fixed width columns) because screen resolutions don&apos;t come smaller unless you are dealing with phone-friendly sites. !!!&lt;/p&gt;\n\n&lt;p&gt;I use a completely transparent png but I don&apos;t really think it ends up mattering if you do it right. Like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;video&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;maintainaspectratio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;maintainaspectratio.png&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;object&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;...\n          &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;embed&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt;&amp;lt;/&lt;span class=&quot;hljs-attr&quot;&gt;embed&lt;/span&gt;&amp;gt;&lt;/span&gt;\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;object&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you should be able to add CSS similar to the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;div.video { ...; position: relative; }\ndiv.video img.maintainaspectratio { width: 100%; }\ndiv.video object { position: absolute; top: 0px; left: 0px; width: 100%; height: 100%; }\ndiv.video embed {width: 100%; height: 100%; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Make sure you also remove any explicit height or width declaration within the object and embed tags that usually come with copy/pasted embed code.&lt;/p&gt;\n\n&lt;p&gt;The way it works depends on the position properties of the video class element and the item you want have maintain a certain aspect ratio.  It takes advantage of the way an image will maintain its proper aspect ratio when resized in an element.  It tells whatever else is in video class element to take full-advantage of the real estate provided by the dynamic image by forcing its width/height to 100% of the video class element being adjusted by the image. &lt;/p&gt;\n\n&lt;p&gt;Pretty cool, eh?&lt;/p&gt;\n\n&lt;p&gt;You might have to play around with it a bit to get it to work with your own design, but this actually works surprisingly well for me.  The general concept is there.&lt;/p&gt;\n    ","\n&lt;p&gt;Elliot inspired me to this solution - thanks:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;aspectratio.png&lt;/code&gt; is a completely transparent PNG-file with the size of your preferred aspect-ratio, in my case 30x10 pixels.&lt;/p&gt;\n\n&lt;h3&gt;HTML&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;eyecatcher&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/img/aspectratio.png&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;CSS3&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.eyecatcher img {\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  background-image: url(../img/autoresized-picture.jpg);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; &lt;code&gt;background-size&lt;/code&gt; is a css3-feature which might not work with your target-browsers. You may check interoperability (f.e. on &lt;a href=&quot;http://caniuse.com/#search=background-size&quot;&gt;caniuse.com&lt;/a&gt;).&lt;/p&gt;\n    ","\n&lt;p&gt;As stated in &lt;a href=&quot;http://www.w3schools.com/cssref/pr_padding.asp&quot; rel=&quot;noreferrer&quot;&gt;here on w3schools.com&lt;/a&gt; and somewhat reiterated in this &lt;a href=&quot;https://stackoverflow.com/a/10441480/3786856&quot;&gt;accepted answer&lt;/a&gt;, padding values as percentages (emphasis mine):&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Specifies the padding in percent of the width of the &lt;strong&gt;containing element&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Ergo, a correct example of a responsive DIV that keeps a 16:9 aspect ratio is as follows:&lt;/p&gt;\n\n&lt;p&gt;CSS&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.parent {\n    position: relative;\n    width: 100%;\n}\n.child {\n    position: relative;\n    padding-bottom: calc(100% * 9 / 16);\n}\n.child &amp;gt; div {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;HTML&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;Aspect is kept when resizing&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://jsfiddle.net/marcandrews/qaez1mLw/&quot; rel=&quot;noreferrer&quot;&gt;Demo on JSFiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As @web-tiki already show a way to use &lt;code&gt;vh&lt;/code&gt;/&lt;code&gt;vw&lt;/code&gt;, I also need a way to center in the screen, here is a snippet code for &lt;strong&gt;9:16&lt;/strong&gt; portrait.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.container {\n  width: 100vw;\n  height: calc(100vw * 16 / 9);\n  transform: translateY(calc((100vw * 16 / 9 - 100vh) / -2));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;translateY&lt;/code&gt; will keep this center in the screen. &lt;code&gt;calc(100vw * 16 / 9)&lt;/code&gt; is expected height for 9/16.&lt;code&gt;(100vw * 16 / 9 - 100vh)&lt;/code&gt; is overflow height, so, pull up &lt;code&gt;overflow height/2&lt;/code&gt; will keep it center on screen.&lt;/p&gt;\n\n&lt;p&gt;For landscape, and keep &lt;strong&gt;16:9&lt;/strong&gt;, you show use&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.container {\n  width: 100vw;\n  height: calc(100vw * 9 / 16);\n  transform: translateY(calc((100vw * 9 / 16 - 100vh) / -2));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The ratio 9/16 is ease to change, no need to predefined &lt;code&gt;100:56.25&lt;/code&gt; or &lt;code&gt;100:75&lt;/code&gt;.If you want to ensure height first, you should switch width and height, e.g. &lt;code&gt;height:100vh;width: calc(100vh * 9 / 16)&lt;/code&gt; for 9:16 portrait.&lt;/p&gt;\n\n&lt;p&gt;If you want to adapted for different screen size, you may also interest&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/background-size#cover&quot; rel=&quot;noreferrer&quot;&gt;background-size&lt;/a&gt; cover/contain\n\n&lt;ul&gt;\n&lt;li&gt;Above style is similar to contain, depends on width:height ratio.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit#&quot; rel=&quot;noreferrer&quot;&gt;object-fit&lt;/a&gt;\n\n&lt;ul&gt;\n&lt;li&gt;cover/contain for img/video tag&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;@media (orientation: portrait)&lt;/code&gt;/&lt;code&gt;@media (orientation: landscape)&lt;/code&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Media query for &lt;code&gt;portrait&lt;/code&gt;/&lt;code&gt;landscape&lt;/code&gt; to change the ratio.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;To add to Web_Designer&apos;s answer, the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will have a height (entirely made up of bottom padding) of 75% of the width of it&apos;s &lt;strong&gt;containing element&lt;/strong&gt;. Here&apos;s a good summary: &lt;a href=&quot;http://mattsnider.com/css-using-percent-for-margin-and-padding/&quot;&gt;http://mattsnider.com/css-using-percent-for-margin-and-padding/&lt;/a&gt;. I&apos;m not sure why this should be so, but that&apos;s how it is.&lt;/p&gt;\n\n&lt;p&gt;If you want your div to be a width other than 100%, you need another wrapping div on which to set the width:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;div.ar-outer{\n    width: 60%; /* container; whatever width you want */\n    margin: 0 auto; /* centered if you like */\n}\ndiv.ar {\n    width:100%; /* 100% of width of container */\n    padding-bottom: 75%; /* 75% of width of container */\n    position:relative;\n}\ndiv.ar-inner {\n    position: absolute;\n    top: 0; bottom: 0; left: 0; right: 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I used something similar to Elliot&apos;s image trick recently to allow me to use CSS media queries to serve a different logo file depending on device resolution, but still scale proportionally as an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; would naturally do (I set the logo as background image to a transparent .png with the correct aspect ratio). But Web_Designer&apos;s solution would save me an http request.&lt;/p&gt;\n    ","\n&lt;p&gt;This is an improvement on the accepted answer:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Uses pseudo elements instead of wrapper divs&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;The aspect ratio is based on the width of the box instead of its parent&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;The box will stretch vertically when the content becomes taller&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1em&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1em&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#CCC&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.fixed-ar&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: left;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.fixed-ar&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.fixed-ar-16-9&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;56.25%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.fixed-ar-3-2&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;66.66%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.fixed-ar-4-3&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;75%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.fixed-ar-1-1&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.width-50&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.width-20&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20%&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-16-9&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16:9 full width&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-16-9 width-50&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16:9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-16-9 width-20&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16:9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-3-2 width-20&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3:2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-4-3 width-20&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;4:3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-1-1 width-20&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1:1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-16-9 width-20&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16:9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box fixed-ar fixed-ar-16-9 width-50&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;16:9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;2021 UPDATE - CSS &lt;em&gt;&lt;strong&gt;ASPECT RATIO&lt;/strong&gt;&lt;/em&gt; PROPERTY&lt;/h1&gt;\n&lt;p&gt;&lt;strong&gt;Well, we&apos;ve recently received the ability to use the &lt;code&gt;aspect-ratio&lt;/code&gt; property in CSS.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://twitter.com/Una/status/1260980901934137345/photo/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://twitter.com/Una/status/1260980901934137345/photo/1&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;s&gt;Note: Support is not the best yet ...&lt;/s&gt;&lt;/p&gt;\n&lt;p&gt;NOTE: Support is getting pretty decent!&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://caniuse.com/#search=aspect-ratio&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://caniuse.com/#search=aspect-ratio&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;EDIT: Aspect ratio is now available !&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://web.dev/aspect-ratio/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://web.dev/aspect-ratio/&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;If you are interested how to use it - take a look at the below super easy example&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;    .yourClass {\n       aspect-ratio: 4/3;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use an svg. Make the container/wrapper position relative, put the svg first as staticly positioned and then put absolutely positioned content (top: 0; left:0; right:0; bottom:0;)&lt;/p&gt;\n\n&lt;p&gt;Example with 16:9 proportions:&lt;/p&gt;\n\n&lt;p&gt;image.svg: (can be inlined in src)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0 0 16 9&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;16&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;9&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;CSS:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.container {\n  position: relative;\n}\n.content {\n  position: absolute;\n  top:0; left:0; right:0; bottom:0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;HTML:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width: 100%&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image.svg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that inline svg doesn&apos;t seem to work, but you can urlencode the svg and embed it in img src attribute like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2016%209%22%20width%3D%2216%22%20height%3D%229%22%2F%3E&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width: 100%;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Actually the high-voted answer is a very good solution but there is a new CSS feature that name is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;aspect-ratio&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;It could be used like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.someClass&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It automatically determine its height, but please see the table of compatibility:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/UsBh9.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/UsBh9.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;If browser support is important for your project do not use it. use the &lt;code&gt;padding-bottom&lt;/code&gt; technic.&lt;/p&gt;\n    ","\n&lt;p&gt;Basing on your solutions I&apos;ve made some trick:&lt;/p&gt;\n\n&lt;p&gt;When you use it, your HTML will be only&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;data-keep-ratio&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;75%&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;Main content&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To use it this way make:\nCSS:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;*[data-keep-ratio] {\n    display: block;\n    width: 100%;\n    position: relative;\n}\n*[data-keep-ratio] &amp;gt; * {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and js (jQuery)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;$(&apos;*[data-keep-ratio]&apos;).each(function(){ \n    var ratio = $(this).data(&apos;keep-ratio&apos;);\n    $(this).css(&apos;padding-bottom&apos;, ratio);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And having this you just set attr &lt;code&gt;data-keep-ratio&lt;/code&gt; to height/width and that&apos;s it.&lt;/p&gt;\n    ","\n&lt;h2&gt;2020 solution - using Grid and padding of pseudo element&lt;/h2&gt;\n&lt;p&gt;I have found some more fresh way to solve this case. This solution is a descendant of a any &lt;code&gt;padding-bottom&lt;/code&gt; method, but without any &lt;code&gt;position: absolute&lt;/code&gt; children, just using &lt;code&gt;display: grid;&lt;/code&gt; and pseudo element.&lt;/p&gt;\n&lt;p&gt;Here we have &lt;code&gt;.ratio::before&lt;/code&gt; with good old &lt;code&gt;padding-bottom: XX%&lt;/code&gt; and &lt;code&gt;grid-area: 1 / 1 / 1 / 1;&lt;/code&gt;, which forces the pseudo element to keep the position in grid. Although here we have &lt;code&gt;width: 0;&lt;/code&gt; to prevent overflowing main element by this one (we cold use &lt;code&gt;z-index&lt;/code&gt; here, but this one is shorter).&lt;/p&gt;\n&lt;p&gt;And our main element &lt;code&gt;.ratio &amp;gt; *:first-child&lt;/code&gt; has the same position as &lt;code&gt;.ratio::before&lt;/code&gt;, which is &lt;code&gt;grid-area: 1 / 1 / 1 / 1;&lt;/code&gt;, so they both shares the same grid cell place. Now we can put any content in our div, and the pseudo element is the one who determines the width/height ratio. More about &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area&quot; rel=&quot;noreferrer&quot;&gt;grid-area&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-template-columns&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;fr;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* just for instance, can be 100% and depends on parent */&lt;/span&gt;  \n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-bottom&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt; / (&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;/* here you can place any ratio */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt;&amp;gt;*&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:first&lt;/span&gt;-child {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* the same as ::before */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0.1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;/* just for instance */&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;16/9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Although you can use CSS val and place you ratio in HTML using &lt;code&gt;style&lt;/code&gt; attribute. Works with &lt;code&gt;display: inline-grid&lt;/code&gt; as well.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-grid;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-template-columns&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;fr;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* just for instance, can be 100% and depends on parent */&lt;/span&gt; \n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* just for instance */&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-bottom&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt; / (&lt;span class=&quot;hljs-built_in&quot;&gt;var&lt;/span&gt;(--r))); &lt;span class=&quot;hljs-comment&quot;&gt;/* here you can place any ratio */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt;&amp;gt;*&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:first&lt;/span&gt;-child {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-area&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* the same as ::before */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0.1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;/* just for instance */&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;--r: 4/3;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;4/3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;--r: 16/9;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;16/9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s how I do it :&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;[data-aspect-ratio] {\n    display: block;\n    max-width: 100%;\n    position: relative;\n}\n\n[data-aspect-ratio]:before {\n    content: &apos;&apos;;\n    display: block;\n}\n\n[data-aspect-ratio] &amp;gt; * {\n    display: block;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n}\n[data-aspect-ratio=&quot;3:1&quot;]:before {\n    padding-top: 33.33%;\n}\n[data-aspect-ratio=&quot;2:1&quot;]:before {\n    padding-top: 50%;\n}\n[data-aspect-ratio=&quot;16:9&quot;]:before {\n    padding-top: 56.25%;\n}\n[data-aspect-ratio=&quot;3:2&quot;]:before {\n    padding-top: 66.66%;\n}\n[data-aspect-ratio=&quot;4:3&quot;]:before {\n    padding-top: 75%;\n}\n[data-aspect-ratio=&quot;1:1&quot;]:before {\n    padding-top: 100%;\n}\n[data-aspect-ratio=&quot;3:4&quot;]:before {\n    padding-top: 133.33%;\n}\n[data-aspect-ratio=&quot;2:3&quot;]:before {\n    padding-top: 150%;\n}\n[data-aspect-ratio=&quot;9:16&quot;]:before {\n    padding-top: 177.77%;\n}\n[data-aspect-ratio=&quot;1:2&quot;]:before {\n    padding-top: 200%;\n}\n[data-aspect-ratio=&quot;1:3&quot;]:before {\n    padding-top: 300%;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For example :&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;data-aspect-ratio&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;16:9&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;http://zzzzbov.com/blag/scalable-videos-with-aspect-ratio&quot; rel=&quot;nofollow noreferrer&quot;&gt;source&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;While most answers are very cool, most of them require to have an image already sized correctly... Other solutions only work for a width and do not care of the height available, but sometimes you want to fit the content in a certain height too.&lt;/p&gt;\n\n&lt;p&gt;I&apos;ve tried to couple them together to bring a fully portable and re-sizable solution... The trick is to use to auto scaling of an image but use an inline svg element instead of using a pre-rendered image or any form of second HTTP request...&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.holder&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;:red;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n}\nsvg, &lt;span class=&quot;hljs-selector-tag&quot;&gt;img&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;:blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;:auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;max-width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;max-height&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.content_sizer&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;:relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.content&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;:absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;155&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;holder&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content_sizer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;10000&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;5000&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Notice that I have used big values in the width and height attributes of the SVG, as it needs to be bigger than the maximum expected size as it can only shrink. The example makes the div&apos;s ratio 10:5&lt;/p&gt;\n    ","\n&lt;p&gt;If you want to fit a square inside the viewport on either portrait or landscape view (as big as possible, but nothing sticking outside), switch between using &lt;code&gt;vw&lt;/code&gt;/&lt;code&gt;vh&lt;/code&gt; on orientation &lt;code&gt;portrait&lt;/code&gt;/&lt;code&gt;landscape&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;@media (orientation:portrait ) {\n  .square {\n    width :100vw;\n    height:100vw;\n  }\n} \n@media (orientation:landscape) {\n  .square {\n    width :100vh;\n    height:100vh;\n  }\n} \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can achieve that by using SVG.&lt;/p&gt;\n\n&lt;p&gt;It depends on a case, but in some it is really usefull. As an example - you can set &lt;code&gt;background-image&lt;/code&gt; without setting fixed height or use it to embed youtube &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; with ratio &lt;code&gt;16:9&lt;/code&gt; and &lt;code&gt;position:absolute&lt;/code&gt; etc.&lt;/p&gt;\n\n&lt;p&gt;For &lt;code&gt;3:2&lt;/code&gt; ratio set &lt;code&gt;viewBox=&quot;0 0 3 2&quot;&lt;/code&gt; and so on.&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;:red\n}\nsvg{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:block;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;visibility&lt;/span&gt;:hidden\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.demo-1&lt;/span&gt;{&lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;35%&lt;/span&gt;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.demo-2&lt;/span&gt;{&lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;20%&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;demo-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0 0 3 2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;demo-2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0 0 3 2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;d like to share my solution, where I have an &lt;code&gt;img&lt;/code&gt;-tag filling a certain aspect ratio. I couldn&apos;t use &lt;code&gt;background&lt;/code&gt; because of lack of support of the CMS and I&apos;d not prefer to use a style tag like so: &lt;code&gt;&amp;lt;img style=&quot;background:url(...)&quot; /&amp;gt;&lt;/code&gt;. Also, the width is 100%, so it doesn&apos;t need to be set at a fixed size as in some of the solutions. It will scale responsively!&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.wrapper&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.image-container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.image-container&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.image-container&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;img&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;object-fit&lt;/span&gt;: cover;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio-4-3&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;75%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio-3-1&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio-2-1&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- Just to make things a bit smaller --&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Example of an 4:3 aspect ratio, filled by an image with an 1:1 ratio.\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image-container ratio-4-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- Lets go for a 4:3 aspect ratio --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://placekitten.com/1000/1000/&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Kittens!&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Just place other block elements around it; it will work just fine.\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I have run into this issue quite some times, so I made a JS solution for it. This basically adjust the height of the domElement according the width of the element by the ratio you specify. You could use it as followed:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;lt;div ratio=&quot;4x3&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Please be aware that since it is setting the height of the element, the element should be either a &lt;code&gt;display:block&lt;/code&gt; or &lt;code&gt;display:inline-block&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/JeffreyArts/html-ratio-component&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/JeffreyArts/html-ratio-component&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;A simple way of maintaining the aspect ratio, using the canvas element.&lt;/h1&gt;\n&lt;h3&gt;Try resizing the div below to see it in action.&lt;/h3&gt;\n&lt;p&gt;For me, this approach worked best, so I am sharing it with others so they can benefit from it as well.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cont&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt; solid blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;300px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;resize&lt;/span&gt;: horizontal;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;cont&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;16&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;9&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;I am 16:9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h1&gt;Also works with dynamic height!&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cont&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt; solid blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;170px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;resize&lt;/span&gt;: vertical;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block; &lt;span class=&quot;hljs-comment&quot;&gt;/* so the div doesn&apos;t automatically expand to max width */&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.ratio&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;cont&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ratio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;16&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;9&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;I am 16:9&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif16&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;lets say you have 2 divs the outher div is a container and the inner could be any element that you need to keep its ratio (img or an youtube iframe or whatever )&lt;/p&gt;\n&lt;p&gt;html looks like this :&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;container&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;element&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- end of element --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- end of container --&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;lets say you need to keep the ratio of the &quot;element&quot;\nratio =&amp;gt; 4 to 1 or 2 to 1 ...&lt;/p&gt;\n&lt;p&gt;css looks like this&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.container{\n  position: relative;\n  height: 0\n  padding-bottom : 75% /* for 4 to 3 ratio */ 25% /* for 4 to 1 ratio ..*/\n  \n}\n\n.element{\n  width : 100%;\n  height: 100%;\n  position: absolute; \n  top : 0 ;\n  bottom : 0 ;\n  background : red; /* just for illustration */\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;padding when specified in % it is calculated based on width not height.\n..\nso basically you it doesn&apos;t matter what your width it height will always be calculated based of that . which will keep the ratio .&lt;/p&gt;\n    ","\n&lt;p&gt;Just an idea or a hack.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;transition&lt;/span&gt;: background-color &lt;span class=&quot;hljs-number&quot;&gt;0.5s&lt;/span&gt;, width &lt;span class=&quot;hljs-number&quot;&gt;0.5s&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:hover&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: red;\n}\n  \n&lt;span class=&quot;hljs-selector-tag&quot;&gt;img&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;visibility&lt;/span&gt;: hidden;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- use an image with target aspect ratio. sample is a square --&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://i.imgur.com/9OPnZNk.png&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif17&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The new aspect-ratio tag would be awesome, but it messed up the positioning of my divs.\nThe traditional solution of padding a wrapper div, works, but only adjusts the size according to the width of the parent or the viewport, which makes it &lt;strong&gt;problematic when the height is the limiting factor&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;I found the &lt;code&gt;min()&lt;/code&gt; function to be very useful, and adjusted the traditional method like so:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt;{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-image&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;linear-gradient&lt;/span&gt;(to top right, &lt;span class=&quot;hljs-number&quot;&gt;#FFE6B5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;#B3CEBF&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;overflow-y&lt;/span&gt;: hidden; &lt;span class=&quot;hljs-comment&quot;&gt;/* this is to avoid scrolling when the height of the viewport is less than what the aspect ratio requires */&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.wrapper&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vw&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.sixteen-by-nine&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.aspect-ratio&lt;/span&gt; { \n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding-bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;56.25%&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;/* 9:16 ratio */&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.content&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: green\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translate&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;177.8vh&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;/* this always keeps a 16:9 ratio within the viewport */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3vh&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1.7vw&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;/* if you are also interested in scaling the font size */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: blue\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sixteen-by-nine aspect-ratio&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- stuff goes here --&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif18&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Say that you like to maintain Width: 100px and the Height: 50px (i.e., 2:1) \nJust do this math:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.pb-2to1 {\n  padding-bottom: calc(50 / 100 * 100%); // i.e., 2:1\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;New in Chrome 88 and soon to follow in other browsers is the new CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;aspect-ratio&lt;/code&gt;&lt;/a&gt; property.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The aspect-ratio  CSS property sets a preferred aspect ratio for the box, which will be used in the calculation of auto sizes and some other layout functions.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/new-in-chrome-88-aspect-ratio/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;CSS Tricks Article&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/almanac/properties/a/aspect-ratio/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;More Information&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: rebeccapurple;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1em&lt;/span&gt; auto;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.square&lt;/span&gt; {\n  aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  }&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;square&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  \n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif19&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;CSS has a new property for this: &lt;code&gt;aspect-ratio&lt;/code&gt;.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;@supports&lt;/span&gt; (&lt;span class=&quot;hljs-attribute&quot;&gt;aspect-ratio&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n    aspect-ratio: &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: orange;\n  }  \n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width: 200px&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width: 400px&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height: 50px&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height: 10px&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif20&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Chrome and Edge have been supporting this fully since V88, and Firefox has been supporting it &lt;em&gt;behind a flag&lt;/em&gt; since V81 (set &lt;code&gt;layout.css.aspect-ratio.enabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in &lt;a href=&quot;http://about:config&quot; rel=&quot;nofollow noreferrer&quot;&gt;about:config&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;For compatibility information, check &lt;a href=&quot;https://caniuse.com/mdn-css_properties_aspect-ratio&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://caniuse.com/mdn-css_properties_aspect-ratio&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;We solved it like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.square {\n  width: 100%;\n  max-height: 100%;\n  aspect-ratio: 1;\n  background: red;\n  position: relative;\n  margin: auto;\n  top: 50%;\n  transform: translateY(-50%);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;see &lt;a href=&quot;https://jsfiddle.net/r1jL3oqa/1/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://jsfiddle.net/r1jL3oqa/1/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I just created a 2:1 div that resized to occupy the full width, but then shrinks the width if it would cause the top or bottom to exceed. But note, this will only work with the size of the window, not the size of the parent.&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#scene {\n    position: relative;\n    top: 50vh;\n    left: 50vw;\n    width: 100vw;\n    height: 50vw;\n    max-height: 100vh;\n    max-width: calc(100vh * 2);\n    transform: translate(-50%, -50%);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I&apos;m sure you can work out the correct %&apos;s to use for &lt;code&gt;4:3&lt;/code&gt; instead of &lt;code&gt;2:1&lt;/code&gt;.&lt;/p&gt;\n    "],"288":["\n&lt;p&gt;Lets clarify first what &lt;a href=&quot;http://www.json.org/&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;JSON&lt;/em&gt;&lt;/a&gt; actually is. JSON is a &lt;em&gt;textual&lt;/em&gt;, language-independent data-exchange format, much like XML, CSV or YAML.&lt;/p&gt;\n\n&lt;p&gt;Data can be stored in many ways, but if it should be stored in a text file and be readable by a computer, it needs to follow some structure. JSON is one of the many formats that define such a structure.&lt;/p&gt;\n\n&lt;p&gt;Such formats are typically language-independent, meaning they can be processed by Java, Python, JavaScript, PHP, you name it.&lt;/p&gt;\n\n&lt;p&gt;In contrast, &lt;em&gt;JavaScript&lt;/em&gt; is a programming language. Of course JavaScript also provides a way to define/describe data, but the syntax is very specific to JavaScript.&lt;/p&gt;\n\n&lt;p&gt;As a counter example, Python has the concept of &lt;em&gt;tuples&lt;/em&gt;, their syntax is &lt;code&gt;(x, y)&lt;/code&gt;. JavaScript doesn&apos;t have something like this.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Lets look at the syntactical differences between JSON and JavaScript object literals.&lt;/p&gt;\n\n&lt;p&gt;JSON has the following syntactical constraints:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Object &lt;em&gt;keys&lt;/em&gt; must be &lt;strong&gt;strings&lt;/strong&gt; (i.e. a character sequence enclosed in double quotes &lt;code&gt;&quot;&lt;/code&gt;). &lt;/li&gt;\n&lt;li&gt;The values can be either:\n\n&lt;ul&gt;\n&lt;li&gt;a string&lt;/li&gt;\n&lt;li&gt;a number&lt;/li&gt;\n&lt;li&gt;an (JSON) object&lt;/li&gt;\n&lt;li&gt;an array&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;true&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Duplicate keys (&lt;code&gt;{&quot;foo&quot;:&quot;bar&quot;,&quot;foo&quot;:&quot;baz&quot;}&lt;/code&gt;) produce undefined, implementation-specific results; the JSON specification specifically does not define their semantics&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In JavaScript, object literals can have&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;String literals, number literals or identifier names as keys (since ES6, keys can now also be computed, which introduces yet another syntax).&lt;/li&gt;\n&lt;li&gt;The values can be any valid JavaScript expression, including function definitions and &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Duplicate keys produce defined, specified results (in loose mode, the latter definition replaces the former; in strict mode, it&apos;s an error).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Knowing that, just by looking at the &lt;em&gt;syntax&lt;/em&gt;, your example is not JSON because of two reasons:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Your keys are not strings (literals). They are &lt;em&gt;identifier names&lt;/em&gt;.&lt;/li&gt;\n&lt;li&gt;You cannot assign a function as a value to a &quot;JSON object&quot; (because JSON doesn&apos;t define any syntax for functions).&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;But most importantly, to repeat my explanation from the beginning: You are in a JavaScript context. You define a JavaScript object. If any, a &quot;JSON object&quot; can only be contained in a string:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;}; &lt;span class=&quot;hljs-comment&quot;&gt;// creates a JavaScript object (this is *not* JSON)&lt;/span&gt;\n &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; json = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;foo&quot;: 452}&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// creates a string containing JSON&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That is, if you&apos;re writing JavaScript source code, and not dealing with a &lt;em&gt;string&lt;/em&gt;, you&apos;re not dealing with JSON. Maybe you received the data as JSON (e.g., via ajax or reading from a file), but once you or a library you&apos;re using has parsed it, it&apos;s not JSON anymore.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Only because object literals and JSON look &lt;em&gt;similar&lt;/em&gt;, it does not mean that you can name them interchangeably.&lt;/strong&gt; See also &lt;a href=&quot;http://benalman.com/news/2010/03/theres-no-such-thing-as-a-json/&quot; rel=&quot;noreferrer&quot;&gt;There&apos;s no such thing as a &quot;JSON Object&quot;&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://json.org&quot; rel=&quot;noreferrer&quot;&gt;JSON&lt;/a&gt; has a much more limited syntax including:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Key values must be quoted&lt;/li&gt;\n&lt;li&gt;Strings must be quoted with &lt;code&gt;&quot;&lt;/code&gt; and not &lt;code&gt;&apos;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;You have a more limited range of values (e.g. no functions allowed)&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;There is really no such thing as a &quot;JSON Object&quot;.&lt;/p&gt;\n\n&lt;p&gt;The JSON spec is a syntax for encoding data as a string.  What people call a &quot;JSON Object&quot; ( in javascript ) is really just an ordinary javascript object that has (probably) been de-serialized from a valid JSON string, and can be easily re-serialized as a valid JSON string.  This generally means that it contains only data ( and not functions ).  It also means that there are no dates, because JSON does not have a date type ( probably the most painful thing about JSON ;)&lt;/p&gt;\n\n&lt;p&gt;Furthermore, (side-rant...) when people talk about a &quot;JSON Object&quot;, they almost always mean data that has the &quot;curly-braces&quot; at the top-level.  This corresponds nicely to a javascript object.  However, the JSON spec does not require that there be a single &quot;curly-braces&quot; object at the top-level of a JSON string.  It is perfectly valid JSON to have a list at the top-level, or even to have just a single value.  So, while every &quot;JSON Object&quot; corresponds to valid JSON, not all valid JSON strings correspond to what we would call a &quot;JSON Object&quot;! ( because the string could represent a list or an atomic value )&lt;/p&gt;\n    ","\n&lt;p&gt;According to &lt;a href=&quot;http://www.json.org/js.html&quot; rel=&quot;noreferrer&quot;&gt;JSON in JavaScript&lt;/a&gt;,&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;JSON is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Subset&quot; rel=&quot;noreferrer&quot;&gt;subset&lt;/a&gt; of the object\n  literal notation of JavaScript.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In other words, valid JSON is also valid JavaScript object literal notation but not necessarily the other way around.&lt;/p&gt;\n\n&lt;p&gt;In addition to reading the &lt;a href=&quot;http://www.json.org/&quot; rel=&quot;noreferrer&quot;&gt;documentation&lt;/a&gt;, as @Filix King suggested, I also suggest playing around with the &lt;a href=&quot;http://www.jsonlint.com/&quot; rel=&quot;noreferrer&quot;&gt;JSONLint online JSON validator&lt;/a&gt;. That&apos;s how I learned that the keys of JSON objects must be strings.&lt;/p&gt;\n    ","\n&lt;p&gt; &lt;strong&gt;&lt;a href=&quot;http://www.json.org/fatfree.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;JSON&lt;/a&gt;: The Fat-Free Alternative to XML&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;JSON has been widely adopted by people who found that it made it a lot easier to produce distributed applications and services. The official Internet media type for JSON is &lt;code&gt;application/json&lt;/code&gt; &lt;strong&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4627/?include_text=1&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;RFC 4627&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;. JSON filenames use the extension &lt;code&gt;.json&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt; JavaScript Object Notation (&lt;a href=&quot;http://www.json.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;) is a lightweight, text-based, language-independent data interchange format. JSON has been used to exchange data between applications written in any Programming language.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The JSON object is a single object that contains two functions, parse and stringify, that are used to parse and construct JSON texts.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;JSON.stringify produces a String that conforms to the following JSON grammar.&lt;/li&gt;\n&lt;li&gt;JSON.parse accepts a String that conforms to the JSON grammar.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The parseJSON method will be included in the &lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Fourth Edition of ECMAScript&lt;/code&gt;&lt;/a&gt;. In the meantime, a JavaScript implementation is available at json.org.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objLiteral = {&lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;}; &lt;span class=&quot;hljs-comment&quot;&gt;// JavaScript Object&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Object Literal : &apos;&lt;/span&gt;, objLiteral ); &lt;span class=&quot;hljs-comment&quot;&gt;// Object {foo: 42}foo: 42__proto__: Object&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// This is a JSON String, like what you&apos;d get back from an AJAX request.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonString = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;foo&quot;: 452}&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;JOSN String : &apos;&lt;/span&gt;, jsonString ); &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;foo&quot;: 452}&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// This is how you deserialize that JSON String into an Object.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; serverResposnceObject = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;( jsonString );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Converting Ajax response to JavaScript Object : &apos;&lt;/span&gt;, serverResposnceObject); &lt;span class=&quot;hljs-comment&quot;&gt;// Object {foo: 42}foo: 42 __proto__: Object&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// And this is how you serialize an Object into a JSON String.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; serverRequestJSON = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( objLiteral );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Reqesting server with JSON Data : &apos;&lt;/span&gt;, serverRequestJSON); &lt;span class=&quot;hljs-comment&quot;&gt;// &apos;{&quot;foo&quot;: 452}&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;JSON is subset of JavaScript. &lt;a href=&quot;http://javascript.crockford.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Javascript&lt;/a&gt; was derived from the ECMAScript Programming Language Standard.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt; ECMAScript&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;ECMAScript has grown to be one of the world&apos;s most widely used general purpose programming languages. It is best known as the language embedded in web browsers but has also been widely adopted for server and embedded applications.&lt;/em&gt; &lt;strong&gt;&lt;em&gt;ECMAScript is based on several originating technologies, the most well-known being &lt;code&gt;JavaScript&lt;/code&gt; (Netscape Communications)) and &lt;code&gt;JScript&lt;/code&gt; (Microsoft Corporation).)&lt;/em&gt;&lt;/strong&gt;. &lt;em&gt;Though before 1994, ECMA was known as &quot;European Computer Manufacturers Association&quot;, after 1994, when the organization became global, the &quot;trademark&quot; &quot;Ecma&quot; was kept for historical reasons.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;ECMAScript is the language, whereas JavaScript, JScript, and even ActionScript are called &lt;strong&gt;&lt;code&gt;&quot;Dialects&quot;&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Dialects have been derived from the same language. They are are quite similar to each other as they have been derived from the same language but they have undergone some changes.\nA dialect is a variation in the language itself. It is derived from a single language.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;SQL Language - Hibernate MySQL Dialect, Oracle Dialect,.. which have some changes or added functionality.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Information about the browser and computer of your users.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;navigator.&lt;span class=&quot;hljs-property&quot;&gt;appName&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Netscape&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;ECMAScript is the scripting language that forms the basis of JavaScript. &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;language resources&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;kbd&gt;&lt;strong&gt;&lt;code&gt;          ECMA-262        &lt;/code&gt;&lt;/strong&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;strong&gt;&lt;code&gt; Links &lt;/code&gt;&lt;/strong&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;Initial Edition, June 1997&lt;/code&gt;\n&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%201st%20edition,%20June%201997.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;PDF&lt;/a&gt;. &lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;2nd Edition, August   1998&lt;/code&gt;\n&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%202nd%20edition,%20August%201998.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;PDF&lt;/a&gt;. &lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;3rd Edition, December 1999&lt;/code&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;PDF&lt;/a&gt;. &lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;5th Edition, December 2009&lt;/code&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262%205th%20edition%20December%202009.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;PDF&lt;/a&gt;. &lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;5.1 Edition, June     2011&lt;/code&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-15.12.1&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML&lt;/a&gt;.&lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;6th Edition, June     2015&lt;/code&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/index.html#sec-json-object&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML&lt;/a&gt;.&lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;7ʰ Edition, June     2016&lt;/code&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-json-object&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML&lt;/a&gt;.&lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;8th edition, June     2017&lt;/code&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;http://www.ecma-international.org/ecma-262/8.0/index.html#sec-json-object&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML&lt;/a&gt;.&lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;\n&lt;kbd&gt;&lt;code&gt;9th Edition,          2018&lt;/code&gt;&lt;/kbd&gt;&lt;kbd&gt;&lt;code&gt;  &lt;a href=&quot;https://tc39.github.io/ecma262/&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML&lt;/a&gt;.&lt;/code&gt;&lt;/kbd&gt;&lt;br&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;NOTE «&lt;/strong&gt; &lt;a href=&quot;https://www.ecma-international.org/activities/Languages/Language%20overview.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;4th edition&lt;/a&gt; of ECMAScript not &lt;a href=&quot;https://stackoverflow.com/a/2329662/5081877&quot;&gt;published as the work was incomplete&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;blockquote&gt;\n&lt;p&gt;JSON defines a small set of formatting rules for the portable representation of structured data.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt; Key values must be quoted, only Strings are allowed for keys. If you use other than String it will convert to String. But not recommended to use keys other than String&apos;s. Check an example like this - &lt;code&gt;{ &apos;key&apos;:&apos;val&apos; }&lt;/code&gt; over &lt;a href=&quot;https://jsonformatter.curiousconcept.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;RFC 4627 - jsonformatter&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; storage = {\n   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,\n   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;\n };\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( storage[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] ); &lt;span class=&quot;hljs-comment&quot;&gt;// Hello&lt;/span&gt;\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( storage ) ); &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;0&quot;:null,&quot;1&quot;:&quot;Hello&quot;,&quot;2&quot;:&quot;world!&quot;}&lt;/span&gt;\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objLiteral = {&lt;span class=&quot;hljs-string&quot;&gt;&apos;key1&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;val1&apos;&lt;/span&gt;};\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;], arr2 = [ &lt;span class=&quot;hljs-string&quot;&gt;&apos;Yash&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Sam&apos;&lt;/span&gt; ];\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = { &lt;span class=&quot;hljs-attr&quot;&gt;k&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;v&apos;&lt;/span&gt; }, obj2 = { &lt;span class=&quot;hljs-attr&quot;&gt;k2&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;v2&apos;&lt;/span&gt; };\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fun = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;keyFun&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {} ;\n\n objLiteral[ arr ] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;ArrayVal&apos;&lt;/span&gt;;     objLiteral[ arr2 ] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;OverridenArrayVal&apos;&lt;/span&gt;;\n objLiteral[ obj ] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;ObjectVal&apos;&lt;/span&gt;;    objLiteral[ obj2 ] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;OverridenObjectVal&apos;&lt;/span&gt;;\n objLiteral[ fun ] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;FunctionVal&apos;&lt;/span&gt;;\n\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( objLiteral );\n &lt;span class=&quot;hljs-comment&quot;&gt;// Object {key1: &quot;val1&quot;, 10,20: &quot;ArrayVal&quot;, Yash,Sam: &quot;OverridenArrayVal&quot;, [object Object]: &quot;OverridenObjectVal&quot;, function keyFun() {}: &quot;FunctionVal&quot;}&lt;/span&gt;\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( objLiteral ) );\n &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;key1&quot;:&quot;val1&quot;,&quot;10,20&quot;:&quot;ArrayVal&quot;,&quot;Yash,Sam&quot;:&quot;OverridenArrayVal&quot;,&quot;[object Object]&quot;:&quot;OverridenObjectVal&quot;,&quot;function keyFun() {}&quot;:&quot;FunctionVal&quot;}&lt;/span&gt;\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( objLiteral ) ) );\n &lt;span class=&quot;hljs-comment&quot;&gt;// Object {key1: &quot;val1&quot;, 10,20: &quot;ArrayVal&quot;, Yash,Sam: &quot;OverridenArrayVal&quot;, [object Object]: &quot;OverridenObjectVal&quot;, function keyFun() {}: &quot;FunctionVal&quot;}&lt;/span&gt;\n\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Accessing Array  Val : &apos;&lt;/span&gt;, objLiteral[ [&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;] ] );\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Accessing Object Val : &apos;&lt;/span&gt;, objLiteral[ &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Object]&apos;&lt;/span&gt; ] );\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Accessing Function Val : &apos;&lt;/span&gt;, objLiteral[ &lt;span class=&quot;hljs-string&quot;&gt;&apos;function keyFun() {}&apos;&lt;/span&gt; ] );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt; JSON Strings must be quoted with &quot; and not &apos;. A string is very much like a C or Java string. &lt;strong&gt;Strings should be wrapped in double quotes.&lt;/strong&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;blockquote&gt;\n&lt;ul&gt;\n&lt;li&gt;Literals are fixed values, not variables, that you literally provide in your script.&lt;/li&gt;\n&lt;li&gt;A string is a sequence of zero or more characters wrapped in quotes with backslash escapement, the same notation used in most programming languages.&lt;/li&gt;\n&lt;li&gt;  - Special Symbols are allowed in String but not recomended to use.&lt;/li&gt;\n&lt;li&gt;&quot;  - Special characters can be escaped. But not recomended to escape (&apos;) Single Quotes.\nIn Strict mode it will throw and Error - &lt;code&gt;SyntaxError: Unexpected token &apos; in JSON&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Check with this code &lt;code&gt;{ &quot;Hai\\&quot; \\n Team &quot;:5, &quot;Bye \\&apos;&quot;: 7 }&lt;/code&gt; over online JSON Edtions. &lt;code&gt;Modes &lt;/code&gt;&lt;a href=&quot;http://www.jsoneditoronline.org/?id=14c0acaf4e147250022deaa3834e7bd9&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;notStrict&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;http://json.parser.online.fr/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Strinct&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonString = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{&apos;foo&apos;: 452}&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// {&apos;foo&apos;: 452}&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonStr = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;foo&quot;: 452}&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;foo&quot;: 452}&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;( jsonString ); &lt;span class=&quot;hljs-comment&quot;&gt;// Unexpected token &apos; in JSON at position 1()&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;( jsonStr ); &lt;span class=&quot;hljs-comment&quot;&gt;// Object {foo: 452}&lt;/span&gt;\n\n    objLiteral[&lt;span class=&quot;hljs-string&quot;&gt;&apos;key&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Object {foo: 42, key: &quot;val&quot;}&lt;/span&gt;\n    objLiteral.&lt;span class=&quot;hljs-property&quot;&gt;key2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// objLiteral.key\\n3 - SyntaxError: Invalid or unexpected token&lt;/span&gt;\n    objLiteral[&lt;span class=&quot;hljs-string&quot;&gt;&apos;key\\n3&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Object {&quot;foo&quot;: &quot;42&quot;, key: &quot;val&quot;, key2: &quot;val&quot;, &quot;key3&quot;: &quot;val&quot;}&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( objLiteral ); &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;foo&quot;:&quot;42&quot;,&quot;key&quot;:&quot;val&quot;,&quot;key2&quot;:&quot;val&quot;,&quot;key\\n3&quot;:&quot;val&quot;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Object &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors&quot; rel=&quot;nofollow noreferrer&quot;&gt;Property accessors&lt;/a&gt;  provide access to an object&apos;s properties by using the dot notation or the bracket notation.&lt;/p&gt;\n&lt;ol start=&quot;3&quot;&gt;\n&lt;li&gt;&lt;p&gt; You have a more limited range of values (e.g. no functions allowed). A value can be a string in double quotes, number, boolean, null, object, or array. These structures can be nested.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objLiteral = {};\n objLiteral.&lt;span class=&quot;hljs-property&quot;&gt;funKey&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sayHello&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n     &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Object Key with function as value - Its outcome message.&apos;&lt;/span&gt;);\n };\n\n objLiteral[&lt;span class=&quot;hljs-string&quot;&gt;&apos;Key&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Val&apos;&lt;/span&gt;;\n\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Object Literal Fun : &apos;&lt;/span&gt;, objLiteral );\n &lt;span class=&quot;hljs-comment&quot;&gt;// Object Literal Fun :  Object {Key: &quot;Val&quot;}Key: &quot;Val&quot;funKey: sayHello()__proto__: Object&lt;/span&gt;\n &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( objLiteral ) ); &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;Key&quot;:&quot;Val&quot;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/rq9Th.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/rq9Th.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt; &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; is the most popular implementation of the ECMAScript Standard.\nThe core features of Javascript are based on the ECMAScript standard,  but Javascript also has other additional features that are not in the ECMA specifications/standard. &lt;strong&gt;Every browser has a JavaScript interpreter.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;JavaScript is a dynamically typed language. That means you don&apos;t have to specify the data type of a variable when you declare it, and data types are converted automatically as needed during script execution.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Literals&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Literals&lt;/code&gt;&lt;/a&gt; :&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;37&apos;&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// 30&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;37&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;377&quot;&lt;/span&gt;\n+&lt;span class=&quot;hljs-string&quot;&gt;&apos;37&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;hljs-comment&quot;&gt;// 44&lt;/span&gt;\n+&lt;span class=&quot;hljs-string&quot;&gt;&apos;37&apos;&lt;/span&gt;       &lt;span class=&quot;hljs-comment&quot;&gt;// 37&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;37&apos;&lt;/span&gt;        &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;37&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;37&apos;&lt;/span&gt;);     &lt;span class=&quot;hljs-comment&quot;&gt;// 37&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;3.7&apos;&lt;/span&gt;);    &lt;span class=&quot;hljs-comment&quot;&gt;// 3&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;parseFloat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.7&lt;/span&gt;);    &lt;span class=&quot;hljs-comment&quot;&gt;// 3.7&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// An alternative method of retrieving a number from a string is with the + (unary plus) operator:&lt;/span&gt;\n+&lt;span class=&quot;hljs-string&quot;&gt;&apos;3.7&apos;&lt;/span&gt;              &lt;span class=&quot;hljs-comment&quot;&gt;// 3.7&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Object literals&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7159#page-6&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;em&gt;&lt;code&gt;RFC 7159&lt;/code&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;An object structure is represented as a pair of curly brackets surrounding zero or more name/value pairs (or members).  A name is a\nstring.  A single colon comes after each name, separating the name from the value.  A single comma separates a value from a following\nname.  The names within an object SHOULD be unique.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;ECMAScript supports prototype-based inheritance. Every constructor has an associated prototype, and every object created by that constructor has an implicit reference to the prototype (called the objects\nprototype) associated with its constructor. Furthermore, a prototype may have a non-null implicit reference to its prototype, and so on; this is called the prototype chain.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tc39/ecma262/master/img/figure-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;In a class-based object-oriented language, in general, state is carried by instances, methods are carried by classes, and inheritance is only of structure and behavior. In ECMAScript, the state and methods are carried by objects, and structure, behavior, and state are all inherited.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;A prototype is an object used to implement structure, state, and behavior inheritance in ECMAScript. When a constructor creates an object, that object implicitly references the constructors associated prototype for the purpose of resolving property references. The constructors associated prototype can\nbe referenced by the program expression constructor.prototype, and properties added to an objects prototype are shared, through inheritance, by all objects sharing the prototype.&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As far as I understand the main difference is the &lt;strong&gt;&lt;em&gt;flexibility&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;p&gt;JSON is a kind of wrapper on &quot;JavaScript Object Notation&quot; which forces users to obey more strict rules for defining the objects. And it does this by limiting the possible object declaration ways provided by JavaScript Object Notation feature.&lt;/p&gt;\n\n&lt;p&gt;As a result we have a simpler and more standardized objects which suits better on data-exchange between platforms.&lt;/p&gt;\n\n&lt;p&gt;So basically, the newObject in my example above is an object defined by using JavaScript Objeect Notation; but it is not a &apos;valid&apos; JSON object because it does not follow the rules that JSON standards require.&lt;/p&gt;\n\n&lt;p&gt;This link is also quite helpful:\n&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb299886.aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://msdn.microsoft.com/en-us/library/bb299886.aspx&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For the ones who still think that RFC are more important than blogs and opinion based misconceptions, let&apos;s try to answer clarifying some points.\nI&apos;m not going to repeat all the correct differences already mentioned in previous answers, here I&apos;m just trying adding value summarizing some crucial part rfc7159&lt;/p&gt;\n&lt;p&gt;Extracts from &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7159&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.rfc-editor.org/rfc/rfc7159&lt;/a&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;JavaScript &lt;strong&gt;Object&lt;/strong&gt; Notation (JSON) is a text format for the\nserialization of structured data.  It is derived from the &lt;strong&gt;object&lt;/strong&gt;\nliterals of JavaScript, as defined in the ECMAScript Programming\nLanguage Standard, Third Edition [ECMA-262].&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;JSON can represent four primitive types (strings, numbers, booleans,\nand null) and two structured types (&lt;strong&gt;objects&lt;/strong&gt; and arrays).&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;An &lt;strong&gt;object&lt;/strong&gt; is an unordered collection of zero or more name/value\npairs, where a name is a string and a value is a string, number,\nboolean, null, &lt;strong&gt;object&lt;/strong&gt;, or array.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;begin-object&lt;/strong&gt;    = ws %x7B ws  ; { left curly bracket&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;end-object&lt;/strong&gt;      = ws %x7D ws  ; } right curly bracket&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;A JSON value MUST be an &lt;strong&gt;object&lt;/strong&gt;, array, number, or string, or one of\nthe following three literal names: false null true&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;An &lt;strong&gt;object&lt;/strong&gt; structure is represented as a pair of curly brackets&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The names within an &lt;strong&gt;object&lt;/strong&gt; SHOULD be unique.\n&lt;strong&gt;object&lt;/strong&gt; = &lt;strong&gt;begin-object&lt;/strong&gt; [ member *( value-separator member ) ]\n&lt;strong&gt;end-object&lt;/strong&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;An &lt;strong&gt;object&lt;/strong&gt; whose names are all unique is interoperable in the sense\nthat all software implementations receiving that &lt;strong&gt;object&lt;/strong&gt; will agree on\nthe name-value mappings.  When the names within an &lt;strong&gt;object&lt;/strong&gt; are not\nunique, the behavior of software that receives such an &lt;strong&gt;object&lt;/strong&gt; is\nunpredictable.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Examples (from page 12 of RFC)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;This is a JSON object:&lt;/strong&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;      {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;Image&quot;&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;Width&quot;&lt;/span&gt;:  &lt;span class=&quot;hljs-number&quot;&gt;800&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;Height&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;600&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;Title&quot;&lt;/span&gt;:  &lt;span class=&quot;hljs-string&quot;&gt;&quot;View from 15th Floor&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;Thumbnail&quot;&lt;/span&gt;: {\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;Url&quot;&lt;/span&gt;:    &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.example.com/image/481989943&quot;&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;Height&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;125&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;Width&quot;&lt;/span&gt;:  &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;\n            },\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;Animated&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;IDs&quot;&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;116&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;943&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;234&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38793&lt;/span&gt;]\n          }\n      }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Its Image member is an &lt;strong&gt;object&lt;/strong&gt; whose Thumbnail member is an &lt;strong&gt;object&lt;/strong&gt; and\nwhose IDs member is an array of numbers.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;There is really no such thing as a &quot;JSON Object&quot;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Really?&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;First you should know what JSON is:&lt;/p&gt;\n\n&lt;p&gt;It is language agnostic data-interchange format.\nThe syntax of JSON was inspired by the JavaScript Object Literal notation, but there are differences between them.&lt;/p&gt;\n\n&lt;p&gt;For example, in JSON all keys must be quoted, while in object literals this is not necessary:&lt;/p&gt;\n\n&lt;p&gt;// JSON:\n{ &quot;foo&quot;: &quot;bar&quot; }&lt;/p&gt;\n\n&lt;p&gt;// Object literal:\nvar o = { foo: &quot;bar&quot; };\nThe quotes are mandatory on JSON because in JavaScript (more exactly in ECMAScript 3rd. Edition), the usage of reserved words as property names is disallowed, for example:&lt;/p&gt;\n\n&lt;p&gt;var o = { if: &quot;foo&quot; }; // SyntaxError in ES3\nWhile, using a string literal as a property name (quoting the property name) gives no problems:&lt;/p&gt;\n\n&lt;p&gt;var o = { &quot;if&quot;: &quot;foo&quot; }; \nSo for &quot;compatibility&quot; (and easy eval&apos;ing maybe?) the quotes are mandatory.&lt;/p&gt;\n\n&lt;p&gt;The data types in JSON are also restricted to the following values:&lt;/p&gt;\n\n&lt;p&gt;string\nnumber\nobject\narray\nA literal as:\ntrue\nfalse\nnull\nThe grammar of Strings changes. They have to be delimited by double quotes, while in JavaScript, you can use single or double quotes interchangeably.&lt;/p&gt;\n\n&lt;p&gt;// Invalid JSON:\n{ &quot;foo&quot;: &apos;bar&apos; }\nThe accepted JSON grammar of Numbers also changes, in JavaScript you can use Hexadecimal Literals, for example 0xFF, or (the infamous) Octal Literals e.g. 010. In JSON you can use only Decimal Literals.&lt;/p&gt;\n\n&lt;p&gt;// Invalid JSON:\n{ &quot;foo&quot;: 0xFF }&lt;/p&gt;\n    ","\n&lt;p&gt;Here is one surprising difference: you can not use &lt;code&gt;undefined&lt;/code&gt; in json and all object fields with undefined values will disappear after &lt;code&gt;JSON.stringify&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; object =  { &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; } ;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; badJSON= &lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;a&quot;: undefined }&apos;&lt;/span&gt;;\n\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;valid JS object :&apos;&lt;/span&gt;, object );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;JSON from object:&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(object) );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;invalid json    :&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(badJSON) );&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;h1&gt;&lt;/h1&gt;\n    ","\n&lt;h2&gt;Javascript Object Literal vs JSON:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Object literal syntax is a very convenient way to create javascript objects&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;JSON&lt;/code&gt; language, which stands for &apos;Javascript object notation&apos;, has its syntax derived from javascript object literal syntax. It is used as a programming language independent textual data transfer format.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;JS object notation, used in JS to create objects in the code conveniently:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; JS_Object = {\n  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// the key here is the number 1, the value is the number 2&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// the key is the string a, the value is the string b&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;func&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hi&apos;&lt;/span&gt;) }\n  &lt;span class=&quot;hljs-comment&quot;&gt;// the key is func, the value is the function&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Example of JSON:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;hljs-attr&quot;&gt;&quot;widget&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;window&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sample Konfabulator Widget&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;main_window&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; \n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Images/Sun.png&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;sun1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;hOffset&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;vOffset&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;alignment&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Click Here&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;style&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;bold&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;text1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;hOffset&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;vOffset&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;alignment&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;onMouseUp&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;sun1.opacity = (sun1.opacity / 100) * 90;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Main differences:&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;All object keys in JSON must be strings. In Javascript object keys can be strings or numbers&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;All strings in JSON must be quoted in &quot;double quotes&quot;. Whereas in Javascript both single quotes and double quotes are allowed. Even with no quotes in the Javascript object notation the object keys are implicitly casted to strings.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;In JSON a function cannot be defined as a value of an object (since this is Javascript specific). In Javascript this is completely legal.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;Javascript build in &lt;code&gt;JSON&lt;/code&gt; object:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;JSON&lt;/code&gt; objects can be easily converted to Javascript and vice versa using the built in &lt;code&gt;JSON&lt;/code&gt; object which Javascript offers in its runtime. For example:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;property1&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;property2&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n}; &lt;span class=&quot;hljs-comment&quot;&gt;// creating object with JS object literal syntax&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;_object = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// stringify JS object to a JSON string&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;_object); &lt;span class=&quot;hljs-comment&quot;&gt;// note that the (string) keys are in double quotes&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; JS_object = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;_object);  &lt;span class=&quot;hljs-comment&quot;&gt;// parse JSON string to JS object&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(JS_object.&lt;span class=&quot;hljs-property&quot;&gt;property1&lt;/span&gt;, JS_object.&lt;span class=&quot;hljs-property&quot;&gt;property2&lt;/span&gt;); \n&lt;span class=&quot;hljs-comment&quot;&gt;// accessing keys of the newly created object&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    "],"289":["\n&lt;p&gt;The reason you need to use &lt;code&gt;self.&lt;/code&gt; is because Python does not use the &lt;code&gt;@&lt;/code&gt; syntax to refer to instance attributes. Python decided to do methods in a way that makes the instance to which the method belongs be &lt;em&gt;passed&lt;/em&gt; automatically, but not &lt;em&gt;received&lt;/em&gt; automatically: the first parameter of methods is the instance the method is called on. That makes methods entirely the same as functions, and leaves the actual name to use up to you (although &lt;code&gt;self&lt;/code&gt; is the convention, and people will generally frown at you when you use something else.) &lt;code&gt;self&lt;/code&gt; is not special to the code, it&apos;s just another object.&lt;/p&gt;\n\n&lt;p&gt;Python could have done something else to distinguish normal names from attributes -- special syntax like Ruby has, or requiring declarations like C++ and Java do, or perhaps something  yet more different -- but it didn&apos;t. Python&apos;s all for making things explicit, making it obvious what&apos;s what, and although it doesn&apos;t do it entirely everywhere, it does do it for instance attributes. That&apos;s why assigning to an instance attribute needs to know what instance to assign to, and that&apos;s why it needs &lt;code&gt;self.&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Let&apos;s say you have a class &lt;code&gt;ClassA&lt;/code&gt; which contains a method &lt;code&gt;methodA&lt;/code&gt; defined as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;methodA&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, arg1, arg2&lt;/span&gt;):\n    &lt;span class=&quot;hljs-comment&quot;&gt;# do something&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and &lt;code&gt;ObjectA&lt;/code&gt; is an instance of this class.&lt;/p&gt;\n\n&lt;p&gt;Now when &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; is called, python internally converts it for you as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;ClassA.methodA(ObjectA, arg1, arg2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;self&lt;/code&gt; variable refers to the object itself.&lt;/p&gt;\n    ","\n&lt;p&gt;Lets take a simple vector class:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Vector&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, x, y&lt;/span&gt;):\n        self.x = x\n        self.y = y\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We want to have a method which calculates the length. What would it look like if we wanted to define it inside the class?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; math.sqrt(self.x ** &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; + self.y ** &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What should it look like when we were to define it as a global method/function?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;length_global&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;vector&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; math.sqrt(vector.x ** &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; + vector.y ** &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So the whole structure stays the same. How can me make use of this? If we assume for a moment that we hadnt written a &lt;code&gt;length&lt;/code&gt; method for our &lt;code&gt;Vector&lt;/code&gt; class, we could do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;Vector.length_new = length_global\nv = Vector(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(v.length_new()) &lt;span class=&quot;hljs-comment&quot;&gt;# 5.0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works because the first parameter of &lt;code&gt;length_global&lt;/code&gt;, can be re-used as the &lt;code&gt;self&lt;/code&gt; parameter in &lt;code&gt;length_new&lt;/code&gt;. This would not be possible without an explicit &lt;code&gt;self&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Another way of understanding the need for the explicit &lt;code&gt;self&lt;/code&gt; is to see where Python adds some syntactical sugar. When you keep in mind, that basically, a call like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;v_instance.length()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is internally transformed to&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;Vector.length(v_instance)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;it is easy to see where the &lt;code&gt;self&lt;/code&gt; fits in. You don&apos;t actually write instance methods in Python; what you write is class methods which must take an instance as a first parameter. And therefore, youll have to place the instance parameter somewhere explicitly.&lt;/p&gt;\n    ","\n&lt;p&gt;When objects are instantiated, the object itself is passed into the self parameter. &lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/whCZm.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;Because of this, the objects data is bound to the object. Below is an example of how you might like to visualize what each objects data might look. Notice how self is replaced with the objects name. I&apos;m not saying this example diagram below is wholly accurate but it hopefully with serve a purpose in visualizing the use of self. &lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/5daR6.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;The Object is passed into the self parameter so that the object can keep hold of its own data.&lt;/p&gt;\n\n&lt;p&gt;Although this may not be wholly accurate, think of the process of instantiating an object like this: When an object is made it uses the class as a template for its own data and methods. Without passing it&apos;s own name into the self parameter, the attributes and methods in the class would remain as a general template and would not be referenced to (belong to) the object. So by passing the object&apos;s name into the self parameter it means that if 100 objects are instantiated from the one class, they can all keep track of their own data and methods.&lt;/p&gt;\n\n&lt;p&gt;See the illustration below:&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/oZZe5.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I like this example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;A&lt;/span&gt;: \n    foo = []\na, b = A(), A()\na.foo.append(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\nb.foo\nans: [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;A&lt;/span&gt;: \n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;): \n        self.foo = []\na, b = A(), A()\na.foo.append(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\nb.foo\nans: []\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I will demonstrate with code that &lt;strong&gt;does not use classes&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;state_init&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;state&lt;/span&gt;):\n    state[&lt;span class=&quot;hljs-string&quot;&gt;&apos;field&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;init&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;state_add&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;state, x&lt;/span&gt;):\n    state[&lt;span class=&quot;hljs-string&quot;&gt;&apos;field&apos;&lt;/span&gt;] += x\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;state_mult&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;state, x&lt;/span&gt;):\n    state[&lt;span class=&quot;hljs-string&quot;&gt;&apos;field&apos;&lt;/span&gt;] *= x\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;state_getField&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;state&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; state[&lt;span class=&quot;hljs-string&quot;&gt;&apos;field&apos;&lt;/span&gt;]\n\nmyself = {}\nstate_init(myself)\nstate_add(myself, &lt;span class=&quot;hljs-string&quot;&gt;&apos;added&apos;&lt;/span&gt;)\nstate_mult(myself, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;( state_getField(myself) )\n&lt;span class=&quot;hljs-comment&quot;&gt;#--&amp;gt; &apos;initaddedinitadded&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Classes are just a way to avoid passing in this &quot;state&quot; thing all the time (and other nice things like initializing, class composition, the rarely-needed metaclasses, and supporting custom methods to override operators).&lt;/p&gt;\n\n&lt;p&gt;Now let&apos;s demonstrate the above code using the built-in python class machinery, to show how it&apos;s basically the same thing.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;State&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;object&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.field = &lt;span class=&quot;hljs-string&quot;&gt;&apos;init&apos;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, x&lt;/span&gt;):\n        self.field += x\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;mult&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, x&lt;/span&gt;):\n        self.field *= x\n\ns = State()\ns.add(&lt;span class=&quot;hljs-string&quot;&gt;&apos;added&apos;&lt;/span&gt;)    &lt;span class=&quot;hljs-comment&quot;&gt;# self is implicitly passed in&lt;/span&gt;\ns.mult(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)         &lt;span class=&quot;hljs-comment&quot;&gt;# self is implicitly passed in&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;( s.field )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;[migrated my answer from duplicate closed question]&lt;/p&gt;\n    ","\n&lt;p&gt;The following excerpts are from the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot; rel=&quot;noreferrer&quot;&gt;Python documentation about self&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;As in Modula-3, there are no shorthands [in Python] for referencing the objects members from its methods: the method function is declared with an explicit first argument representing the object, which is provided implicitly by the call.&lt;/p&gt;\n&lt;p&gt;Often, the first argument of a method is called self. This is nothing more than a convention: the name self has absolutely no special meaning to Python. Note, however, that by not following the convention your code may be less readable to other Python programmers, and it is also conceivable that a class browser program might be written that relies upon such a convention.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;For more information, see the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot; rel=&quot;noreferrer&quot;&gt;Python documentation tutorial on classes&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;As well as all the other reasons already stated, it allows for easier access to overridden methods; you can call &lt;code&gt;Class.some_method(inst)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;An example of where its useful:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;C1&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;object&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n         &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C1 init&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;C2&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;C1&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;): &lt;span class=&quot;hljs-comment&quot;&gt;#overrides C1.__init__&lt;/span&gt;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C2 init&quot;&lt;/span&gt;\n        C1.__init__(self) &lt;span class=&quot;hljs-comment&quot;&gt;#but we still want C1 to init the class too&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;C2()\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;C2 init&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;C1 init&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Its use is similar to the use of &lt;code&gt;this&lt;/code&gt; keyword in Java, i.e. to give a reference to the current object.&lt;/p&gt;\n    ","\n&lt;p&gt;Python is not a language built for Object Oriented Programming unlike Java or C++. &lt;/p&gt;\n\n&lt;p&gt;When calling a static method in Python, one simply writes a method with regular arguments inside it. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Animal&lt;/span&gt;():\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;staticMethod&lt;/span&gt;():\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a static method&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, an object method, which requires you to make a variable, which is an Animal, in this case, needs the self argument&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Animal&lt;/span&gt;():\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objectMethod&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is an object method which needs an instance of a class&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The self method is also used to refer to a variable field within the class. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Animal&lt;/span&gt;():\n    &lt;span class=&quot;hljs-comment&quot;&gt;#animalName made in constructor&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Animal&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.animalName = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getAnimalName&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; self.animalName\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, self is referring to the animalName variable of the entire class. REMEMBER: If you have a variable within a method, self will not work. That variable is simply existent only while that method is running. For defining fields (the variables of the entire class), you have to define them OUTSIDE the class methods. &lt;/p&gt;\n\n&lt;p&gt;If you don&apos;t understand a single word of what I am saying, then Google &quot;Object Oriented Programming.&quot; Once you understand this, you won&apos;t even need to ask that question :).&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;self&lt;/code&gt; is an object reference to the object itself, therefore, they are same.\nPython methods are not called in the context of the object itself.\n&lt;code&gt;self&lt;/code&gt; in Python may be used to deal with custom object models or something.&lt;/p&gt;\n    ","\n&lt;p&gt;Its there to follow the Python zen explicit is better than implicit. Its indeed a reference to your class object. In Java and PHP, for example, it&apos;s called &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;If &lt;code&gt;user_type_name&lt;/code&gt; is a field on your model you access it by &lt;code&gt;self.user_type_name&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;First of all, self is a conventional name, you could put anything else (being coherent) in its stead.&lt;/p&gt;\n\n&lt;p&gt;It refers to the object itself, so when you are using it, you are declaring that .name and .age are properties of the Student objects (note, not of the Student class) you are going to create.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Student&lt;/span&gt;:\n    &lt;span class=&quot;hljs-comment&quot;&gt;#called each time you create a new Student instance&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self,name,age&lt;/span&gt;): &lt;span class=&quot;hljs-comment&quot;&gt;#special method to initialize&lt;/span&gt;\n        self.name=name\n        self.age=age\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__str__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;): &lt;span class=&quot;hljs-comment&quot;&gt;#special method called for example when you use print&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Student %s is %s years old&quot;&lt;/span&gt; %(self.name,self.age)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, msg&lt;/span&gt;): &lt;span class=&quot;hljs-comment&quot;&gt;#silly example for custom method&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hey, %s! &quot;&lt;/span&gt;+msg) %self.name\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#initializing two instances of the student class&lt;/span&gt;\nbob=Student(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Bob&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)\nalice=Student(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Alice&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#using them&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; bob.name\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; bob.age\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; alice &lt;span class=&quot;hljs-comment&quot;&gt;#this one only works if you define the __str__ method&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; alice.call(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Come here!&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;#notice you don&apos;t put a value for self&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#you can modify attributes, like when alice ages&lt;/span&gt;\nalice.age=&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; alice\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://labs.codecademy.com/DJ9z#:workspace&quot; rel=&quot;noreferrer&quot;&gt;Code is here &lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m surprised nobody has brought up Lua. Lua also uses the &apos;self&apos; variable however it can be omitted but still used. C++ does the same with &apos;this&apos;. I don&apos;t see any reason to have to declare &apos;self&apos; in each function but you should still be able to use it just like you can with lua and C++. For a language that prides itself on being brief it&apos;s odd that it requires you to declare the self variable.&lt;/p&gt;\n    ","\n&lt;p&gt;The use of the argument, conventionally called &lt;code&gt;self&lt;/code&gt; isn&apos;t as hard to understand, as is why is it necessary? Or as to why explicitly mention it? That, I suppose, is a bigger question for most users who look up this question, or if it is not, they will certainly have the same question as they move forward learning python. I recommend them to read these couple of blogs:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://pythontips.com/2013/08/07/the-self-variable-in-python-explained/&quot; rel=&quot;noreferrer&quot;&gt;1: Use of self explained&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Note that it is not a keyword.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The first argument of every class method, including init, is always a reference to the current instance of the class. By convention, this argument is always named self. In the init method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called. For example the below code is the same as the above code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot; rel=&quot;noreferrer&quot;&gt;2: Why do we have it this way and why can we not eliminate it as an argument, like Java, and have a keyword instead&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Another thing I would like to add is, an optional &lt;code&gt;self&lt;/code&gt; argument allows me to declare static methods inside a class, by not writing &lt;code&gt;self&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Code examples:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyClass&lt;/span&gt;():\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;staticMethod&lt;/span&gt;():\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a static method&quot;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objectMethod&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is an object method which needs an instance of a class, and that is what self refers to&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;:This works only in Python 3.x.&lt;/p&gt;\n\n&lt;p&gt;In previous versions, you have to explicitly add &lt;code&gt;@staticmethod&lt;/code&gt; decorator, otherwise &lt;code&gt;self&lt;/code&gt; argument is obligatory. &lt;/p&gt;\n    ","\n&lt;p&gt;Take a look at the following example, which clearly explains the purpose of &lt;code&gt;self&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Restaurant&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;object&lt;/span&gt;):  \n    bankrupt = &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;open_branch&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; self.bankrupt:\n           &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;branch opened&quot;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#create instance1&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x = Restaurant()\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x.bankrupt\n&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#create instance2&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y = Restaurant()\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y.bankrupt = &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;   \n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y.bankrupt\n&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x.bankrupt\n&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;self&lt;/code&gt; is used/needed to distinguish between instances.&lt;/p&gt;\n\n&lt;p&gt;Source: &lt;a href=&quot;https://pythontips.com/2013/08/07/the-self-variable-in-python-explained/&quot; rel=&quot;nofollow noreferrer&quot;&gt;self variable in python explained - Pythontips&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Is because by the way python is designed the alternatives would hardly work. Python is designed to allow methods or functions to be defined in a context where both implicit &lt;code&gt;this&lt;/code&gt; (a-la Java/C++) or explicit &lt;code&gt;@&lt;/code&gt; (a-la ruby) wouldn&apos;t work. Let&apos;s have an example with the explicit approach with python conventions:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fubar&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;):\n    self.x = x\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;C&lt;/span&gt;:\n    frob = fubar\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now the &lt;code&gt;fubar&lt;/code&gt; function wouldn&apos;t work since it would assume that &lt;code&gt;self&lt;/code&gt; is a global variable (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative would be to execute method&apos;s with a replaced global scope (where &lt;code&gt;self&lt;/code&gt; is the object).&lt;/p&gt;\n\n&lt;p&gt;The implicit approach would be&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fubar&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;)\n    myX = x\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;C&lt;/span&gt;:\n    frob = fubar\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This would mean that &lt;code&gt;myX&lt;/code&gt; would be interpreted as a local variable in &lt;code&gt;fubar&lt;/code&gt; (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative here would be to execute methods with a replaced local scope which is retained between calls, but that would remove the posibility of method local variables.&lt;/p&gt;\n\n&lt;p&gt;However the current situation works out well:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fubar&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, x&lt;/span&gt;)\n     self.x = x\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;C&lt;/span&gt;:\n     frob = fubar\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;here when called as a method &lt;code&gt;frob&lt;/code&gt; will receive the object on which it&apos;s called via the &lt;code&gt;self&lt;/code&gt; parameter, and &lt;code&gt;fubar&lt;/code&gt; can still be called with an object as parameter and work the same (it &lt;em&gt;is&lt;/em&gt; the same as &lt;code&gt;C.frob&lt;/code&gt; I think).&lt;/p&gt;\n    ","\n&lt;p&gt;In the &lt;code&gt;__init__&lt;/code&gt; method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called.&lt;/p&gt;\n\n&lt;p&gt;self, as a name, is &lt;strong&gt;&lt;em&gt;just a convention&lt;/em&gt;&lt;/strong&gt;, call it as you want ! but when using it, for example to delete the object, you have to use the same name: &lt;code&gt;__del__(var)&lt;/code&gt;, where &lt;code&gt;var&lt;/code&gt; was used in the &lt;code&gt;__init__(var,[...])&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;You should take a look at &lt;code&gt;cls&lt;/code&gt; too, to have &lt;strong&gt;&lt;em&gt;the bigger picture&lt;/em&gt;&lt;/strong&gt;. This &lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;/a&gt; could be helpful.&lt;/p&gt;\n    ","\n&lt;p&gt;self is acting as like current object name or instance of class .&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Self explanation.&lt;/span&gt;\n\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;classname&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;object&lt;/span&gt;):\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self,name&lt;/span&gt;):\n\n        self.name=name\n        &lt;span class=&quot;hljs-comment&quot;&gt;# Self is acting as a replacement of object name.&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;#self.name=object1.name&lt;/span&gt;\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;display&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n      &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name of the person is :&quot;&lt;/span&gt;,self.name)\n      &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;object name:&quot;&lt;/span&gt;,object1.name)\n\n\n object1=classname(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Bucky&quot;&lt;/span&gt;)\n object2=classname(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ford&quot;&lt;/span&gt;)\n\n object1.display()\n object2.display()\n\n&lt;span class=&quot;hljs-comment&quot;&gt;###### Output &lt;/span&gt;\nName of the person &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; : Bucky\n&lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; name: Bucky\nName of the person &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; : ford\n&lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; name: Bucky\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;&lt;em&gt;&lt;code&gt;self&lt;/code&gt; is inevitable.&lt;/em&gt;&lt;/h3&gt;\n\n&lt;p&gt;There was just a &lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot; rel=&quot;nofollow noreferrer&quot;&gt;question&lt;/a&gt; should &lt;code&gt;self&lt;/code&gt; be implicit or explicit.\n&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Guido van Rossum&lt;/code&gt;&lt;/a&gt; resolved this question saying &lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;self&lt;/code&gt; has to stay&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h3&gt;&lt;em&gt;So where the &lt;code&gt;self&lt;/code&gt; live?&lt;/em&gt;&lt;/h3&gt;\n\n&lt;p&gt;If we would just stick to functional programming we would not need &lt;code&gt;self&lt;/code&gt;.\nOnce we enter the &lt;em&gt;Python OOP&lt;/em&gt; we find &lt;code&gt;self&lt;/code&gt; there.&lt;/p&gt;\n\n&lt;p&gt;Here is the typical use case &lt;code&gt;class C&lt;/code&gt; with the method &lt;code&gt;m1&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;C&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;m1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, arg&lt;/span&gt;):\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(self, &lt;span class=&quot;hljs-string&quot;&gt;&apos; inside&apos;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;pass&lt;/span&gt;\n\nci =C()\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(ci, &lt;span class=&quot;hljs-string&quot;&gt;&apos; outside&apos;&lt;/span&gt;)\nci.m1(&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;hex&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;id&lt;/span&gt;(ci))) &lt;span class=&quot;hljs-comment&quot;&gt;# hex memory address&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;This program will output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&amp;lt;__main__.C &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; at &lt;span class=&quot;hljs-number&quot;&gt;0x000002B9D79C6CC0&lt;/span&gt;&amp;gt;  outside\n&amp;lt;__main__.C &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; at &lt;span class=&quot;hljs-number&quot;&gt;0x000002B9D79C6CC0&lt;/span&gt;&amp;gt;  inside\n&lt;span class=&quot;hljs-number&quot;&gt;0x2b9d79c6cc0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So &lt;code&gt;self&lt;/code&gt; holds the memory address of the class instance.\n&lt;em&gt;The purpose&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt; would be to hold the reference for &lt;em&gt;instance methods&lt;/em&gt; and for us to have &lt;strong&gt;explicit&lt;/strong&gt; access to that reference.     &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;sub&gt;Note there are three different types of class methods: &lt;/sub&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;sub&gt;static methods (read: functions), &lt;/sub&gt;&lt;/li&gt;\n&lt;li&gt;&lt;sub&gt;class methods, &lt;/sub&gt;&lt;/li&gt;\n&lt;li&gt;&lt;sub&gt;instance methods (mentioned).&lt;/sub&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&quot;self&quot; keyword holds the reference of class and it is upto you if you want to use it or not but if you notice, whenever you create a new method in python, python automatically write self keyword for you. If you do some R&amp;amp;D, you will notice that if you create say two methods in a class and try to call one inside another, it does not recognize method unless you add self (reference of class).&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;testA&lt;/span&gt;:\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ads&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;m1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;method 1&apos;&lt;/span&gt;)\n    self.m2()\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;m2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;method 2&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Below code throws unresolvable reference error.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;testA&lt;/span&gt;:\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ads&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;m1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;method 1&apos;&lt;/span&gt;)\n    m2()  &lt;span class=&quot;hljs-comment&quot;&gt;#throws unresolvable reference error as class does not know if m2 exist in class scope&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;m2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;method 2&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now let see below example&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;testA&lt;/span&gt;:\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ads&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;m1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;method 1&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;m2&lt;/span&gt;():\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;method 2&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now when you create object of class testA, you can call method m1() using class object like this as method m1() has included self keyword&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;obj = testA()\nobj.m1()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But if you want to call method m2(), because is has no self reference so you can call m2() directly using class name like below&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;testA.m2()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But keep in practice to live with self keyword as there are other benefits too of it like creating global variable inside and so on.&lt;/p&gt;\n    ","\n&lt;p&gt;The word &apos;self&apos; refers to instance of a class&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;foo&lt;/span&gt;:\n      &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, num1, num2&lt;/span&gt;):\n             self.n1 = num1 &lt;span class=&quot;hljs-comment&quot;&gt;#now in this it will make the perimeter num1 and num2 access across the whole class&lt;/span&gt;\n             self.n2 = num2\n      &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n             &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; self.n1 + self.n2 &lt;span class=&quot;hljs-comment&quot;&gt;# if we had not written self then if would throw an error that n1 and n2 is not defined and we have to include self in the function&apos;s perimeter to access it&apos;s variables&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;it&apos;s an explicit reference to the class instance object. &lt;/p&gt;\n    ","\n&lt;p&gt;from the &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot; rel=&quot;nofollow noreferrer&quot;&gt;docs&lt;/a&gt;, &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;the special thing about methods is that the instance object is passed as the first argument of the function. In our example, the call &lt;code&gt;x.f()&lt;/code&gt; is exactly equivalent to &lt;code&gt;MyClass.f(x)&lt;/code&gt;. In general, calling a method with a list of n arguments is equivalent to calling the corresponding function with an argument list that is created by inserting the methods instance object before the first argument.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;preceding this the related snippet,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyClass&lt;/span&gt;:\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;A simple example class&quot;&quot;&quot;&lt;/span&gt;\n    i = &lt;span class=&quot;hljs-number&quot;&gt;12345&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;hello world&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;x = MyClass()\n&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I would say for Python at least, the self parameter can be thought of as a placeholder.\nTake a look at this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;:\n  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, name, age&lt;/span&gt;):\n    self.name = name\n    self.age = age\n\np1 = Person(&lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(p1.name)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(p1.age)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Self in this case and a lot of others was used as a method to say store the name value. However, after that, we use the p1 to assign it to the class we&apos;re using. Then when we print it we use the same p1 keyword.&lt;/p&gt;\n&lt;p&gt;Hope this helps for Python!&lt;/p&gt;\n    ","\n&lt;p&gt;my little 2 cents&lt;/p&gt;\n&lt;p&gt;In this class Person, we defined out &lt;strong&gt;init&lt;/strong&gt; method with the self and interesting thing to notice here is the memory location of both the &lt;strong&gt;self&lt;/strong&gt; and instance variable &lt;strong&gt;p&lt;/strong&gt; is same &lt;code&gt;&amp;lt;__main__.Person object at 0x106a78fd0&amp;gt;&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;:\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, name, age&lt;/span&gt;):\n        self.name = name \n        self.age = age \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;say_hi&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the self is at:&quot;&lt;/span&gt;, self)\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;((&lt;span class=&quot;hljs-string&quot;&gt;f&quot;hey there, my name is &lt;span class=&quot;hljs-subst&quot;&gt;{self.name}&lt;/span&gt; and I am &lt;span class=&quot;hljs-subst&quot;&gt;{self.age}&lt;/span&gt; years old&quot;&lt;/span&gt;))\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;say_bye&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the self is at:&quot;&lt;/span&gt;, self)\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;f&quot;good to see you &lt;span class=&quot;hljs-subst&quot;&gt;{self.name}&lt;/span&gt;&quot;&lt;/span&gt;)\n\np = Person(&lt;span class=&quot;hljs-string&quot;&gt;&quot;john&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;78&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;the p is at&quot;&lt;/span&gt;,p)\np.say_hi()  \np.say_bye() \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;so as explained in above, both self and instance variable are same object.&lt;/p&gt;\n    "],"290":["\n&lt;p&gt;A pointer is a special type of variable, which can only contain an address of another variable. It cannot contain any data. You cannot &quot;copy/store data into a pointer&quot; - that doesn&apos;t make any sense. You can only set a pointer to point at data allocated elsewhere.&lt;/p&gt;\n\n&lt;p&gt;This means that in order for a pointer to be meaningful, it must always point at a valid memory location. For example it could point at memory allocated on the stack:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;{\n  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; data = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;* ptr = &amp;amp;data;\n  ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or memory allocated dynamically on the heap:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;* ptr = &lt;span class=&quot;hljs-built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It is always a bug to use a pointer before it has been initialized. It does not yet point at valid memory. &lt;/p&gt;\n\n&lt;p&gt;These examples could all lead to program crashes or other kinds of unexpected behavior, such as &quot;segmentation faults&quot;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*** examples of incorrect use of pointers ***/&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 1.&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;* bad;\n*bad = &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 2.&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;* bad;\n&lt;span class=&quot;hljs-built_in&quot;&gt;strcpy&lt;/span&gt;(bad, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Instead, you must ensure that the pointer points at (enough) allocated memory:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*** examples of correct use of pointers ***/&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 1.&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; var;\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;* good = &amp;amp;var;\n*good = &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 2.&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;* good = &lt;span class=&quot;hljs-built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// allocates memory for 5 characters *and*  the null terminator&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;strcpy&lt;/span&gt;(good, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Note that you can also set a pointer to point at a well-defined &quot;nowhere&quot;, by letting it point to &lt;code&gt;NULL&lt;/code&gt;. This makes it a &lt;em&gt;null pointer&lt;/em&gt;, which is a pointer that is guaranteed not to point at any valid memory. This is different from leaving the pointer completely uninitialized.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;* p1 = &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// pointer to nowhere&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;* p2;        &lt;span class=&quot;hljs-comment&quot;&gt;// uninitialized pointer, pointer to &quot;anywhere&quot;, cannot be used yet&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Yet, should you attempt to access the memory pointed at by a null pointer, you can get similar problems as when using an uninitialized pointer: crashes or segmentation faults. In the best case, your system notices that you are trying to access the address null and then throws a &quot;null pointer exception&quot;. &lt;/p&gt;\n\n&lt;p&gt;The solution for null pointer exception bugs is the same: you must set the pointer to point at valid memory before using it.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;em&gt;Further reading:&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Pointers pointing at invalid data&lt;/strong&gt;&lt;br&gt;\n&lt;a href=&quot;https://stackoverflow.com/questions/4570366/pointer-to-local-variable&quot;&gt;How to access a local variable from a different function using pointers?&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://stackoverflow.com/questions/6441218/can-a-local-variables-memory-be-accessed-outside-its-scope&quot;&gt;Can a local variable&apos;s memory be accessed outside its scope?&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Segmentation fault and causes&lt;/strong&gt;&lt;br&gt;\n&lt;a href=&quot;https://stackoverflow.com/questions/2346806/what-is-segmentation-fault&quot;&gt;What is a segmentation fault?&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://stackoverflow.com/questions/164194/why-do-i-get-a-segmentation-fault-when-writing-to-a-string-initialized-with-cha&quot;&gt;Why do I get a segmentation fault when writing to a string initialized with &quot;char *s&quot; but not &quot;char s[]&quot;?&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://stackoverflow.com/questions/1704407/what-is-the-difference-between-char-s-and-char-s-in-c&quot;&gt;What is the difference between char s[] and char *s?&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://stackoverflow.com/questions/33047452/definitive-list-of-common-reasons-for-segmentation-faults&quot;&gt;Definitive List of Common Reasons for Segmentation Faults&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://stackoverflow.com/questions/212466/what-is-a-bus-error&quot;&gt;What is a bus error?&lt;/a&gt; &lt;/p&gt;\n    ","\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Pointers only point to a memory location. You created a pointer but you did not bind to a memory location yet. &lt;code&gt;strcpy&lt;/code&gt; wants you to pass two pointers (&lt;em&gt;first one mustn&apos;t be constant&lt;/em&gt;) that point to two character arrays like this signature:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; * &lt;span class=&quot;hljs-title function_&quot;&gt;strcpy&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;( &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; * destination, &lt;span class=&quot;hljs-type&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; * source )&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;sample usage:&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;* ptr = &lt;span class=&quot;hljs-built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;);  \n&lt;span class=&quot;hljs-built_in&quot;&gt;strcpy&lt;/span&gt;(ptr, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n \n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; str[&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;];  \n&lt;span class=&quot;hljs-built_in&quot;&gt;strcpy&lt;/span&gt;(str, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;You can try the following code snippet to read string until reaching newline character (*you can also add other whitespace characters like &lt;code&gt;&quot;%[^\\t\\n]s&quot;&lt;/code&gt;(&lt;em&gt;tab, newline&lt;/em&gt;) or &lt;code&gt;&quot;%[^ \\t\\n]s&quot;&lt;/code&gt; (&lt;em&gt;space, tab, newline&lt;/em&gt;)).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; *ptr = &lt;span class=&quot;hljs-built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;);\n&lt;span class=&quot;hljs-built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%31[^\\n]&quot;&lt;/span&gt;, ptr);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(In real life, don&apos;t forget to check the return value from &lt;code&gt;scanf()&lt;/code&gt;!)&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;One situation that frequently occurs while learning C is trying to use single quotes to denote a string literal:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; ptr[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;];\n&lt;span class=&quot;hljs-built_in&quot;&gt;strcpy&lt;/span&gt;(ptr, &lt;span class=&quot;hljs-string&quot;&gt;&apos;hello&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// crash here!&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//            ^     ^   because of &apos; instead of &quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In C, &lt;code&gt;&apos;h&apos;&lt;/code&gt; is a single character literal, while &lt;code&gt;&quot;h&quot;&lt;/code&gt; is a string literal containing an &lt;code&gt;&apos;h&apos;&lt;/code&gt; and a null terminator &lt;code&gt;\\0&lt;/code&gt; (that is, a 2 char array). Also, in C, the type of a character literal is &lt;code&gt;int&lt;/code&gt;, that is, &lt;code&gt;sizeof(&apos;h&apos;)&lt;/code&gt; is equivalent to &lt;code&gt;sizeof(int)&lt;/code&gt;, while &lt;code&gt;sizeof(char)&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; h = &lt;span class=&quot;hljs-string&quot;&gt;&apos;h&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Size: %zu\\n&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;sizeof&lt;/span&gt;(h));     &lt;span class=&quot;hljs-comment&quot;&gt;// Size: 1&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Size: %zu\\n&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;h&apos;&lt;/span&gt;));   &lt;span class=&quot;hljs-comment&quot;&gt;// likely output: Size: 4&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This happens because you have &lt;strong&gt;not allocated&lt;/strong&gt; memory for the &lt;strong&gt;pointer&lt;/strong&gt; &lt;code&gt;char* ptr&lt;/code&gt; .\nIn this case you have to &lt;em&gt;dynamically allocate&lt;/em&gt; memory for the pointer.&lt;/p&gt;\n\n&lt;p&gt;Two functions &lt;code&gt;malloc()&lt;/code&gt; and &lt;code&gt;calloc()&lt;/code&gt; can be used for &lt;code&gt;dynamic memory allocation&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Try this code :-&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;* ptr;\nptr = &lt;span class=&quot;hljs-built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// allocate space for 50 characters.&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;strcpy&lt;/span&gt;(ptr, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When the use of &lt;code&gt;*ptr&lt;/code&gt; over don&apos;t forget to &lt;em&gt;deallocate memory&lt;/em&gt; allocated for &lt;code&gt;*ptr&lt;/code&gt; .This can be done using &lt;code&gt;free()&lt;/code&gt; function.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;free&lt;/span&gt;(ptr);  &lt;span class=&quot;hljs-comment&quot;&gt;// deallocating memory.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Size of &lt;em&gt;dynamically allocated memory&lt;/em&gt; can be changed by using &lt;code&gt;realloc()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; *tmp = &lt;span class=&quot;hljs-built_in&quot;&gt;realloc&lt;/span&gt;(ptr, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// allocate space for 100 characters.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (! tmp) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// reallocation failed, ptr not freed&lt;/span&gt;\n    perror(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Resize failed&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-built_in&quot;&gt;exit&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);       \n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// reallocation succeeded, old ptr freed&lt;/span&gt;\n    ptr = tmp;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In most cases &lt;strong&gt;&quot;segmentation fault&quot;&lt;/strong&gt; happens due to error in &lt;em&gt;memory allocation&lt;/em&gt; or &lt;em&gt;array out of bound&lt;/em&gt; cases.&lt;/p&gt;\n    ","\n&lt;p&gt;For making a modifiable copy of a string, instead of using &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;strlen&lt;/code&gt; and &lt;code&gt;strcpy&lt;/code&gt;, the POSIX C library has a handy function called &lt;code&gt;strdup&lt;/code&gt; in &lt;code&gt;&amp;lt;string.h&amp;gt;&lt;/code&gt; that will return a copy of the passed-in null-terminated string with allocated storage duration. After use the pointer should be released with &lt;code&gt;free&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;* ptr;\nptr = strdup(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);\nptr[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;H&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-built_in&quot;&gt;puts&lt;/span&gt;(ptr);\n&lt;span class=&quot;hljs-built_in&quot;&gt;free&lt;/span&gt;(ptr);\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"page":"65","randomQuestions":[{"title":"What does this symbol mean in JavaScript?","slug":"what-does-this-symbol-mean-in-javascript-1657387632971"},{"title":"GUI not working after rewriting to MVC","slug":"gui-not-working-after-rewriting-to-mvc-1657388388035"},{"title":"How do I match any character across multiple lines in a regular expression?","slug":"how-do-i-match-any-character-across-multiple-lines-in-a-regular-expression-1657387839720"},{"title":"How to center an element horizontally and vertically","slug":"how-to-center-an-element-horizontally-and-vertically-1657388132330"},{"title":"How to use variables in SQL statement in Python?","slug":"how-to-use-variables-in-sql-statement-in-python-1657388479077"},{"title":"Why are these numbers not equal?","slug":"why-are-these-numbers-not-equal-1657384729559"},{"title":"What is the purpose of the var keyword and when should I use it (or omit it)?","slug":"what-is-the-purpose-of-the-var-keyword-and-when-should-i-use-it-(or-omit-it)-1657387525538"},{"title":"The ViewData item that has the key 'XXX' is of type 'System.Int32' but must be of type 'IEnumerable<SelectListItem>'","slug":"the-viewdata-item-that-has-the-key-'xxx'-is-of-type-'system.int32'-but-must-be-of-type-'ienumerablelessselectlistitemgreater'-1657388454191"},{"title":"Why are these constructs using pre and post-increment undefined behavior?","slug":"why-are-these-constructs-using-pre-and-post-increment-undefined-behavior-1657384520109"},{"title":"How do I make a flat list out of a list of lists?","slug":"how-do-i-make-a-flat-list-out-of-a-list-of-lists-1657384500439"},{"title":"The Definitive C++ Book Guide and List","slug":"the-definitive-c++-book-guide-and-list-1657384247395"},{"title":"How can I validate an email address using a regular expression?","slug":"how-can-i-validate-an-email-address-using-a-regular-expression-1657384549233"},{"title":"What's the simplest way to print a Java array?","slug":"what's-the-simplest-way-to-print-a-java-array-1657384702397"},{"title":"Iterating through a Collection, avoiding ConcurrentModificationException when removing objects in a loop","slug":"iterating-through-a-collection-avoiding-concurrentmodificationexception-when-removing-objects-in-a-loop-1657387311824"},{"title":"How can I parse a JSON file with PHP? [duplicate]","slug":"how-can-i-parse-a-json-file-with-php-duplicate-1657388002325"},{"title":"What are the basic rules and idioms for operator overloading?","slug":"what-are-the-basic-rules-and-idioms-for-operator-overloading-1657384449752"},{"title":"What is the (function() { } )() construct in JavaScript?","slug":"what-is-the-(function()-)()-construct-in-javascript-1657385508348"},{"title":"MySQL Error 1093 - Can't specify target table for update in FROM clause","slug":"mysql-error-1093-can't-specify-target-table-for-update-in-from-clause-1657388078961"},{"title":"Undefined behavior and sequence points","slug":"undefined-behavior-and-sequence-points-1657384639493"},{"title":"Why is \"using namespace std;\" considered bad practice?","slug":"why-is-\"using-namespace-std\"-considered-bad-practice-1657384296377"}]},"__N_SSG":true}