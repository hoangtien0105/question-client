{"pageProps":{"data":{"count":610,"rows":[{"id":340,"title":"How to avoid having class data shared among instances?","slug":"how-to-avoid-having-class-data-shared-among-instances-1657387687732","postType":"QUESTION","createdAt":"2022-07-09T17:28:07.000Z","updatedAt":"2022-07-09T17:28:07.000Z","tags":[]},{"id":339,"title":"UnboundLocalError on local variable when reassigned after first use","slug":"unboundlocalerror-on-local-variable-when-reassigned-after-first-use-1657387685248","postType":"QUESTION","createdAt":"2022-07-09T17:28:05.000Z","updatedAt":"2022-07-09T17:28:05.000Z","tags":[]},{"id":338,"title":"How to use SharedPreferences in Android to store, fetch and edit values [closed]","slug":"how-to-use-sharedpreferences-in-android-to-store-fetch-and-edit-values-closed-1657387683057","postType":"QUESTION","createdAt":"2022-07-09T17:28:03.000Z","updatedAt":"2022-07-09T17:28:03.000Z","tags":[{"id":1931,"name":"sharedpreferences","slug":"sharedpreferences","createdAt":"2022-07-09T17:28:03.000Z","updatedAt":"2022-07-09T17:28:03.000Z","Questions_Tags":{"questionId":338,"tagId":1931}}]},{"id":337,"title":"Sort ArrayList of custom Objects by property","slug":"sort-arraylist-of-custom-objects-by-property-1657387678339","postType":"QUESTION","createdAt":"2022-07-09T17:27:58.000Z","updatedAt":"2022-07-09T17:27:58.000Z","tags":[{"id":1930,"name":"comparator","slug":"comparator","createdAt":"2022-07-09T17:27:58.000Z","updatedAt":"2022-07-09T17:27:58.000Z","Questions_Tags":{"questionId":337,"tagId":1930}}]},{"id":336,"title":"Object comparison in JavaScript [duplicate]","slug":"object-comparison-in-javascript-duplicate-1657387675463","postType":"QUESTION","createdAt":"2022-07-09T17:27:55.000Z","updatedAt":"2022-07-09T17:27:55.000Z","tags":[{"id":1926,"name":"object-comparison","slug":"object-comparison","createdAt":"2022-07-09T17:27:55.000Z","updatedAt":"2022-07-09T17:27:55.000Z","Questions_Tags":{"questionId":336,"tagId":1926}}]}]},"answers":{"336":["\n&lt;p&gt;Unfortunately there is no perfect way, unless you use &lt;code&gt;_proto_&lt;/code&gt; recursively and access all non-enumerable properties, but this works in Firefox only.&lt;/p&gt;\n\n&lt;p&gt;So the best I can do is to guess usage scenarios.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;&lt;strong&gt;1) Fast and limited.&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;Works when you have simple JSON-style objects without methods and DOM nodes inside:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj1) === &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj2) \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The ORDER of the properties IS IMPORTANT, so this method will return false for following objects:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; x = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;};\n y = {&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;&lt;strong&gt;2) Slow and more generic.&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;Compares objects without digging into prototypes, then compares properties&apos; projections recursively, and also compares constructors.&lt;/p&gt;\n\n&lt;p&gt;This is almost correct algorithm:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deepCompare&lt;/span&gt; () {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i, l, leftChain, rightChain;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare2Objects&lt;/span&gt; (x, y) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// remember that NaN === NaN returns false&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// and isNaN(undefined) returns true&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;isNaN&lt;/span&gt;(x) &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;isNaN&lt;/span&gt;(y) &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; x === &lt;span class=&quot;hljs-string&quot;&gt;&apos;number&apos;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; y === &lt;span class=&quot;hljs-string&quot;&gt;&apos;number&apos;&lt;/span&gt;) {\n         &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Compare primitives and functions.     &lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Check if both arguments link to the same object.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Especially useful on the step where we compare prototypes&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (x === y) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Works in case when functions are created in constructor.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Comparing dates is a common scenario. Another built-ins?&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// We can even handle functions passed across iframes&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; x === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; y === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;) ||\n       (x &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt; &amp;amp;&amp;amp; y &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;) ||\n       (x &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt; &amp;amp;&amp;amp; y &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;) ||\n       (x &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &amp;amp;&amp;amp; y &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;) ||\n       (x &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt; &amp;amp;&amp;amp; y &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() === y.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// At last checking prototypes as good as we can&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!(x &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; &amp;amp;&amp;amp; y &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (x.&lt;span class=&quot;hljs-title function_&quot;&gt;isPrototypeOf&lt;/span&gt;(y) || y.&lt;span class=&quot;hljs-title function_&quot;&gt;isPrototypeOf&lt;/span&gt;(x)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (x.&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt; !== y.&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (x.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt; !== y.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Check for infinitive linking loops&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (leftChain.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(x) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; || rightChain.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(y) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n         &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Quick checking of one object being a subset of another.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// todo: cache the structure of arguments[0] for performance&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; y) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (y.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p) !== x.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p)) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; y[p] !== &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; x[p]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; x) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (y.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p) !== x.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p)) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; y[p] !== &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; x[p]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; (x[p])) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;:\n\n                leftChain.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(x);\n                rightChain.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(y);\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!compare2Objects (x[p], y[p])) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                }\n\n                leftChain.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;();\n                rightChain.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;();\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (x[p] !== y[p]) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                }\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Die silently? Don&apos;t know how to handle such case, please help...&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// throw &quot;Need two or more arguments to compare&quot;;&lt;/span&gt;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, l = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; l; i++) {\n\n      leftChain = []; &lt;span class=&quot;hljs-comment&quot;&gt;//Todo: this can be cached&lt;/span&gt;\n      rightChain = [];\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title function_&quot;&gt;compare2Objects&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[i])) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n      }\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Known issues (well, they have very low priority, probably you&apos;ll never notice them):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;objects with different prototype structure but same projection&lt;/li&gt;\n&lt;li&gt;functions may have identical text but refer to different closures&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Tests:&lt;/strong&gt; passes tests are from &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/16788517/139361&quot;&gt;How to determine equality for two JavaScript objects?&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is my &lt;strong&gt;ES3&lt;/strong&gt; commented solution (gory details after the code):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;object_equals&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; x, y &lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( x === y ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// if both x and y are null or undefined and exactly the same&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( ! ( x &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; ) || ! ( y &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; ) ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// if they are not strictly equal, they both need to be Objects&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( x.&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt; !== y.&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// they must have the exact same prototype chain, the closest we can do is&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// test there constructor.&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; x ) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( ! x.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;( p ) ) &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// other properties were tested using x.constructor === y.constructor&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( ! y.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;( p ) ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// allows to compare x[ p ] and y[ p ] when set to undefined&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( x[ p ] === y[ p ] ) &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// if they have the same strict value or identity then they are equal&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;( x[ p ] ) !== &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// Numbers, Strings, Functions, Booleans must be strictly equal&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( ! &lt;span class=&quot;hljs-title function_&quot;&gt;object_equals&lt;/span&gt;( x[ p ],  y[ p ] ) ) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// Objects and Arrays must be tested recursively&lt;/span&gt;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; y )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( y.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;( p ) &amp;amp;&amp;amp; ! x.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;( p ) )\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// allows x[ p ] to be set to undefined&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In developing this solution, I took a particular look at corner cases, efficiency, yet trying to yield a simple solution that works, hopefully with some elegance. JavaScript allows both &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; properties and objects have &lt;strong&gt;&lt;em&gt;prototypes chains&lt;/em&gt;&lt;/strong&gt; that can lead to very different behaviors if not checked.&lt;/p&gt;\n\n&lt;p&gt;First I have chosen to not extend &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt;, mostly because &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; could not be one of the objects of the comparison and that I believe that &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; should be a valid object to compare with another. There are also other legitimate concerns noted by others regarding the extension of &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt; regarding possible side effects on other&apos;s code.&lt;/p&gt;\n\n&lt;p&gt;Special care must taken to deal the possibility that JavaScript allows object properties can be set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, i.e. there exists properties which values are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;. The above solution verifies that both objects have the same properties set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; to report equality. This can only be accomplished by checking the existence of properties using &lt;strong&gt;&lt;em&gt;Object.hasOwnProperty( property_name )&lt;/em&gt;&lt;/strong&gt;. Also note that &lt;strong&gt;&lt;em&gt;JSON.stringify()&lt;/em&gt;&lt;/strong&gt; removes properties that are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, and that therefore comparisons using this form will ignore properties set to the value &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;p&gt;Functions should be considered equal only if they share the same reference, not just the same code, because this would not take into account these functions prototype. So comparing the code string does not work to guaranty that they have the same prototype object.&lt;/p&gt;\n\n&lt;p&gt;The two objects should have the same &lt;strong&gt;&lt;em&gt;prototype chain&lt;/em&gt;&lt;/strong&gt;, not just the same properties. This can only be tested cross-browser by comparing the &lt;strong&gt;&lt;em&gt;constructor&lt;/em&gt;&lt;/strong&gt; of both objects for strict equality. ECMAScript 5 would allow to test their actual prototype using &lt;strong&gt;&lt;em&gt;Object.getPrototypeOf()&lt;/em&gt;&lt;/strong&gt;. Some web browsers also offer a &lt;strong&gt;__proto__&lt;/strong&gt; property that does the same thing. A possible improvement of the above code would allow to use one of these methods whenever available.&lt;/p&gt;\n\n&lt;p&gt;The use of strict comparisons is paramount here because &lt;strong&gt;&lt;em&gt;2&lt;/em&gt;&lt;/strong&gt; should not be considered equal to &lt;strong&gt;&lt;em&gt;&quot;2.0000&quot;&lt;/em&gt;&lt;/strong&gt;, nor &lt;strong&gt;&lt;em&gt;false&lt;/em&gt;&lt;/strong&gt; should be considered equal to &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;em&gt;0&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Efficiency considerations lead me to compare for equality of properties as soon as possible. Then, only if that failed, look for the &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; these properties. The speed boost could be significant on large objects with lots of scalar properties.&lt;/p&gt;\n\n&lt;p&gt;No more that two loops are required, the first to check properties from the left object, the second to check properties from the right and verify only existence (not value), to catch these properties which are defined with the &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; value.&lt;/p&gt;\n\n&lt;p&gt;Overall this code handles most corner cases in only 16 lines of code (without comments).&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Update (8/13/2015)&lt;/strong&gt;. I have implemented a better version, as the function &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js&quot; rel=&quot;noreferrer&quot;&gt;value_equals()&lt;/a&gt; that is faster, handles properly corner cases such as NaN and 0 different than -0, optionally enforcing objects&apos; properties order and testing for cyclic references, backed by more than &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/test/src/value_equals.coffee&quot; rel=&quot;noreferrer&quot;&gt;100 automated tests&lt;/a&gt; as part of the &lt;a href=&quot;https://github.com/ReactiveSets/toubkal&quot; rel=&quot;noreferrer&quot;&gt;Toubkal&lt;/a&gt; project test suite.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-title class_&quot;&gt;Utils&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;compareObjects&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o1, o2&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o1){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(o1.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p)){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(o1[p] !== o2[p]){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n            }\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o2){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(o2.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(p)){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(o1[p] !== o2[p]){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n            }\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Simple way to compare ONE-LEVEL only objects.&lt;/p&gt;\n    ","\n&lt;p&gt;Certainly not the only way - you could prototype a method (against Object here but I certainly wouldn&apos;t suggest using Object for live code) to replicate C#/Java style comparison methods.&lt;/p&gt;\n\n&lt;p&gt;Edit, since a general example seems to be expected:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;equals&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p]))\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(x[p])) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; }; &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(x[p])==&lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt; || (p != &lt;span class=&quot;hljs-string&quot;&gt;&apos;equals&apos;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() != x[p].&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;())) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; }; &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p] != x[p]) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; }\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; x)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p])==&lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;}\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that testing methods with toString() is &lt;em&gt;absolutely not good enough&lt;/em&gt; but a method which would be acceptable is very hard because of the problem of whitespace having meaning or not, never mind synonym methods and methods producing the same result with different implementations. &lt;em&gt;And&lt;/em&gt; the problems of prototyping against Object in general.&lt;/p&gt;\n    ","\n&lt;p&gt;The following algorithm will deal with self-referential data structures, numbers, strings, dates, and of course plain nested javascript objects:&lt;/p&gt;\n\n&lt;p&gt;Objects are considered equivalent when&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;They are exactly equal per &lt;code&gt;===&lt;/code&gt; (String and Number are unwrapped first to ensure &lt;code&gt;42&lt;/code&gt; is equivalent to &lt;code&gt;Number(42)&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;or they are both dates and have the same &lt;code&gt;valueOf()&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;or they are both of the same type and not null and...\n&lt;ul&gt;\n&lt;li&gt;they are not objects and are equal per &lt;code&gt;==&lt;/code&gt; (catches numbers/strings/booleans)&lt;/li&gt;\n&lt;li&gt;or, ignoring properties with &lt;code&gt;undefined&lt;/code&gt; value they have the same properties all of which are considered recursively equivalent.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt; are not considered identical by function text.  This test is insufficient because functions may have differing closures.  Functions are only considered equal if &lt;code&gt;===&lt;/code&gt; says so (but you could easily extend that equivalent relation should you choose to do so).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Infinite loops&lt;/strong&gt;, potentially caused by circular datastructures, are avoided.  When &lt;code&gt;areEquivalent&lt;/code&gt; attempts to disprove equality and recurses into an object&apos;s properties to do so, it keeps track of the objects for which this sub-comparison is needed.  If equality can be disproved, then some reachable property path differs between the objects, and then there must be a shortest such reachable path, and that shortest reachable path cannot contain cycles present in both paths; i.e. it is OK to assume equality when recursively comparing objects.  The assumption is stored in a property &lt;code&gt;areEquivalent_Eq_91_2_34&lt;/code&gt;, which is deleted after use, but if the object graph already contains such a property, behavior is undefined.  The use of such a marker property is necessary because javascript doesn&apos;t support dictionaries using arbitrary objects as keys.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unwrapStringOrNumber&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (obj &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt; || obj &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; \n            ? obj.&lt;span class=&quot;hljs-title function_&quot;&gt;valueOf&lt;/span&gt;() \n            : obj);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;areEquivalent&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) {\n    a = &lt;span class=&quot;hljs-title function_&quot;&gt;unwrapStringOrNumber&lt;/span&gt;(a);\n    b = &lt;span class=&quot;hljs-title function_&quot;&gt;unwrapStringOrNumber&lt;/span&gt;(b);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a === b) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//e.g. a and b both null&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; || b === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; (a) !== &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; (b)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;) \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt; &amp;amp;&amp;amp; a.&lt;span class=&quot;hljs-title function_&quot;&gt;valueOf&lt;/span&gt;() === b.&lt;span class=&quot;hljs-title function_&quot;&gt;valueOf&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; (a) !== &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a == b; &lt;span class=&quot;hljs-comment&quot;&gt;//for boolean, number, string, xml&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newA = (a.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;),\n        newB = (b.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (newA) a.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt; = [];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(\n            &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;other&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; other === b; })) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (newB) b.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt; = [];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (b.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(\n            &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;other&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; other === a; })) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        a.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(b);\n        b.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(a);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tmp = {};\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prop &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; a) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(prop != &lt;span class=&quot;hljs-string&quot;&gt;&quot;areEquivalent_Eq_91_2_34&quot;&lt;/span&gt;) \n                tmp[prop] = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prop &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; b) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (prop != &lt;span class=&quot;hljs-string&quot;&gt;&quot;areEquivalent_Eq_91_2_34&quot;&lt;/span&gt;) \n                tmp[prop] = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prop &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; tmp) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title function_&quot;&gt;areEquivalent&lt;/span&gt;(a[prop], b[prop]))\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (newA) &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; a.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (newB) &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; b.&lt;span class=&quot;hljs-property&quot;&gt;areEquivalent_Eq_91_2_34&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I wrote this piece of code for object comparison, and it seems to work. check the assertions:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;countProps&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; obj) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(k)) {\n            count++;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; count;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v1, v2&lt;/span&gt;) {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(v1) !== &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(v2)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(v1) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;function&quot;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; v1.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() === v2.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (v1 &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; &amp;amp;&amp;amp; v2 &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;countProps&lt;/span&gt;(v1) !== &lt;span class=&quot;hljs-title function_&quot;&gt;countProps&lt;/span&gt;(v2)) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; v1) {\n            r = &lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(v1[k], v2[k]);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!r) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; v1 === v2;\n    }\n}\n\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isFalse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;));\n\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hi&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;hi&quot;&lt;/span&gt;));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isFalse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;));\n\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;([],[]));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isFalse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isFalse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]));\n\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;({},{}));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isFalse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;}));\n\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;({&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;}},{&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;}}));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isFalse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;({&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;}},{&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;}}));\n\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isTrue&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x;},&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x;}));\nassert.&lt;span class=&quot;hljs-title function_&quot;&gt;isFalse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;objectEquals&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x;},&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;y&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; y+&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;}));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I have modified a bit the code above. for me &lt;em&gt;0 !== false&lt;/em&gt; and &lt;em&gt;null !== undefined&lt;/em&gt;. If you do not need such strict check remove one &quot;&lt;em&gt;=&lt;/em&gt;&quot; sign in &quot;&lt;em&gt;this[p] !== x[p]&lt;/em&gt;&quot; inside the code.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;equals&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p]) !== &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(x[p])) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;((&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p]===&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) !== (x[p]===&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p])) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(x[p]) != &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p]!==&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; x[p]!==&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() !== x[p].&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() || !&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(x[p]))) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (p != &lt;span class=&quot;hljs-string&quot;&gt;&apos;equals&apos;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() != x[p].&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;()) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p] !== x[p]) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then I have tested it with next objects:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; e = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; f = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;; }};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; g = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;; }};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; h = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;; }};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],\n        &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;;\n        }\n    }\n};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],\n        &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;;\n        }\n    }\n};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; l = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;a==b expected true; returned true&lt;/p&gt;\n\n&lt;p&gt;a==c expected false; returned false&lt;/p&gt;\n\n&lt;p&gt;c==d expected false; returned false&lt;/p&gt;\n\n&lt;p&gt;a==e expected false; returned false&lt;/p&gt;\n\n&lt;p&gt;f==g expected true; returned true&lt;/p&gt;\n\n&lt;p&gt;h==g expected false; returned false&lt;/p&gt;\n\n&lt;p&gt;i==j expected true; returned true&lt;/p&gt;\n\n&lt;p&gt;d==k expected false; returned false&lt;/p&gt;\n\n&lt;p&gt;k==l expected false; returned false&lt;/p&gt;\n    ","\n&lt;p&gt;Here is my version, pretty much stuff from this thread is integrated (same counts for the test cases):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;equals&quot;&lt;/span&gt;, {\n    &lt;span class=&quot;hljs-attr&quot;&gt;enumerable&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; === obj) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// some checks for native types first&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// function and sring&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;function&quot;&lt;/span&gt; || &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;string&quot;&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;) { \n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() === obj.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n        }\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// number&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt; || &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;number&quot;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt; || &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(obj) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;number&quot;&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;valueOf&lt;/span&gt;() === obj.&lt;span class=&quot;hljs-title function_&quot;&gt;valueOf&lt;/span&gt;();\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// null.equals(null) and undefined.equals(undefined) do not inherit from the &lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Object.prototype so we can return false when they are passed as obj&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) !== &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(obj) || obj === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(obj) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt; (o) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = {};\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; o !== &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n            }\n\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(o).&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n                result[key] = &lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;(o[key]);\n            });\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)) { &lt;span class=&quot;hljs-comment&quot;&gt;// check on arrays&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) === &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj);                \n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;hljs-comment&quot;&gt;// anyway objects&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (p &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p]) !== &lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(obj[p])) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                    }\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p] === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) !== (obj[p] === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                    }\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p])) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;:\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;typeof&lt;/span&gt;(obj[p]) !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                        }\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;:\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p] !== &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; \n                                &amp;amp;&amp;amp; obj[p] !== &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; \n                                &amp;amp;&amp;amp; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() !== obj[p].&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() \n                                        || !&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(obj[p]))) {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                        }\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;:\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p].&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;() !== obj[p].&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;()) {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                        }\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                    &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;:\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[p] !== obj[p]) {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n                        }\n                    }\n                };\n\n            }\n        }\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// at least check them with JSON&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)) === &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;(obj));\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is my TestCase:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;({}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;({}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;));\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;String&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hi&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hi&quot;&lt;/span&gt;));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Number&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Number&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Number+String&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;));\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;([].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;([]));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]));\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2011-03-31&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2011-03-31&quot;&lt;/span&gt;)));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2011-03-31&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1970-01-01&quot;&lt;/span&gt;)));\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;({}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;({}));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;}));\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;({&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;}}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;({&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;}}));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;({&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;}}.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;({&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mhc&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;}, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;arb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;}}));\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Function&quot;&lt;/span&gt;, (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x;}).&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x;}));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Function&quot;&lt;/span&gt;, (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x;}).&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;y&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; y+&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;}));\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; e = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; f = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;; }};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; g = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;; }};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; h = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;; }};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = {\n        &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],\n            &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;;\n            }\n        }\n    };\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = {\n        &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],\n            &lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;b&lt;/span&gt;;\n            }\n        }\n    };\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; l = {&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;};\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;(a.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(b));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(a.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(c));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(c.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(d));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(a.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(e));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;(f.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(g));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(h.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(g));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertTrue&lt;/span&gt;(i.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(j));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(d.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(k));\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assertFalse&lt;/span&gt;(k.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(l));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods.&lt;/p&gt;\n    ","\n&lt;p&gt;If you work without the JSON library, maybe this will help you out:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;equals&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; a) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; b[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; b[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!b[i].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(a[i])) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(b[i] != a[i]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; b) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; a[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; a[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!a[i].&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(b[i])) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(a[i] != b[i]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = {&lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;bar&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;blub&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bla&apos;&lt;/span&gt;}};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = {&lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;bar&lt;/span&gt;: {&lt;span class=&quot;hljs-attr&quot;&gt;blub&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;blob&apos;&lt;/span&gt;}};\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(a.&lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(b)); &lt;span class=&quot;hljs-comment&quot;&gt;// alert&apos;s a false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"337":["\n&lt;p&gt;Since &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; implements &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, it has a &lt;code&gt;compareTo&lt;/code&gt; method just like &lt;code&gt;String&lt;/code&gt; does.&lt;/p&gt;\n&lt;p&gt;So your custom &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; could look like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CustomComparator&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;MyObject&amp;gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(MyObject o1, MyObject o2)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o1.getStartDate().compareTo(o2.getStartDate());\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;compare()&lt;/code&gt; method must return an &lt;code&gt;int&lt;/code&gt;, so you couldn&apos;t directly return a &lt;code&gt;boolean&lt;/code&gt; like you were planning to anyway.&lt;/p&gt;\n&lt;p&gt;Your sorting code would be just about like you wrote:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(Database.arrayList, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CustomComparator&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A slightly shorter way to write all this, if you don&apos;t need to reuse your comparator, is to write it as an inline anonymous class:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(Database.arrayList, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;MyObject&amp;gt;() {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(MyObject o1, MyObject o2)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o1.getStartDate().compareTo(o2.getStartDate());\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h1&gt;Since &lt;a href=&quot;/questions/tagged/java-8&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;java-8&apos;&quot; rel=&quot;tag&quot;&gt;java-8&lt;/a&gt;&lt;/h1&gt;\n&lt;p&gt;You can now write the last example in a shorter form by using a &lt;a href=&quot;//docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot; rel=&quot;noreferrer&quot;&gt;lambda expression&lt;/a&gt; for the &lt;code&gt;Comparator&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(Database.arrayList, \n                        (o1, o2) -&amp;gt; o1.getStartDate().compareTo(o2.getStartDate()));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And &lt;code&gt;List&lt;/code&gt; has a &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/List.html#sort-java.util.Comparator-&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;sort(Comparator)&lt;/code&gt;&lt;/a&gt; method, so you can shorten this even further:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Database.arrayList.sort((o1, o2) -&amp;gt; o1.getStartDate().compareTo(o2.getStartDate()));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is such a common idiom that there&apos;s &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-&quot; rel=&quot;noreferrer&quot;&gt;a built-in method&lt;/a&gt; to generate a &lt;code&gt;Comparator&lt;/code&gt; for a class with a &lt;code&gt;Comparable&lt;/code&gt; key:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Database.arrayList.sort(Comparator.comparing(MyObject::getStartDate));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;All of these are equivalent forms.&lt;/p&gt;\n    ","\n&lt;p&gt;Classes that has a natural sort order (a class Number, as an example) should implement the Comparable interface, whilst classes that has no natural sort order (a class Chair, as an example) should be provided with a Comparator (or an anonymous Comparator class).&lt;/p&gt;\n\n&lt;p&gt;Two examples:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparable&lt;/span&gt;&amp;lt;Number&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; value;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; value)&lt;/span&gt; { &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.value = value; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Number anotherInstance)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.value - anotherInstance.value;\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Chair&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; weight;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; height;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Chair&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; weight, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; height)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.weight = weight;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.height = height;\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;/* Omitting getters and setters */&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ChairWeightComparator&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Chair&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Chair chair1, Chair chair2)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; chair1.getWeight() - chair2.getWeight();\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ChairHeightComparator&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Chair&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Chair chair1, Chair chair2)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; chair1.getHeight() - chair2.getHeight();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Number&amp;gt; numbers = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Number&amp;gt;();\n...\nCollections.sort(numbers);\n\nList&amp;lt;Chair&amp;gt; chairs = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Chair&amp;gt;();\n&lt;span class=&quot;hljs-comment&quot;&gt;// Sort by weight:&lt;/span&gt;\nCollections.sort(chairs, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ChairWeightComparator&lt;/span&gt;());\n&lt;span class=&quot;hljs-comment&quot;&gt;// Sort by height:&lt;/span&gt;\nCollections.sort(chairs, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ChairHeightComparator&lt;/span&gt;());\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// You can also create anonymous comparators;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Sort by color:&lt;/span&gt;\nCollections.sort(chairs, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Chair&amp;gt;() {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Chair chair1, Chair chair2)&lt;/span&gt; {\n        ...\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For sorting an &lt;code&gt;ArrayList&lt;/code&gt; you could use the following code snippet:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(studList, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Student&amp;gt;(){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Student s1, Student s2)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; s1.getFirstName().compareToIgnoreCase(s2.getFirstName());\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;JAVA 8 lambda expression&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(studList, (Student s1, Student s2) -&amp;gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; s1.getFirstName().compareToIgnoreCase(s2.getFirstName());\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;OR&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Comparator&amp;lt;Student&amp;gt; c = (s1, s2) -&amp;gt; s1.firstName.compareTo(s2.firstName);\nstudList.sort(c)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Yes, you can.  There are two options with comparing items, the &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html&quot; rel=&quot;noreferrer&quot;&gt;Comparable&lt;/a&gt; interface, and the &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Comparator.html&quot; rel=&quot;noreferrer&quot;&gt;Comparator&lt;/a&gt; interface.&lt;/p&gt;\n\n&lt;p&gt;Both of these interfaces allow for different behavior.  Comparable allows you to make the object act like you just described Strings (in fact, String implements Comparable).  The second, Comparator, allows you to do what you are asking to do.  You would do it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(myArrayList, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyComparator&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That will cause the Collections.sort method to use your comparator for it&apos;s sorting mechanism.  If the objects in the ArrayList implement comparable, you can instead do something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(myArrayList);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Collections.html&quot; rel=&quot;noreferrer&quot;&gt;Collections&lt;/a&gt; class contains a number of these useful, common tools.&lt;/p&gt;\n    ","\n&lt;p&gt;With Java 8 you can use a method reference for your comparator:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; java.util.Comparator.comparing;\n\nCollections.sort(list, comparing(MyObject::getStartDate));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Since technologies appear everyday, the answer will change in the time. I took a look at LambdaJ and seems very interesting.&lt;/p&gt;\n\n&lt;p&gt;You can try solving these tasks with &lt;strong&gt;LambdaJ&lt;/strong&gt;. You can find it here: &lt;a href=&quot;http://code.google.com/p/lambdaj/&quot; rel=&quot;noreferrer&quot;&gt;http://code.google.com/p/lambdaj/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here you have an example:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Sort Iterative&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Person&amp;gt; sortedByAgePersons = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Person&amp;gt;(persons);\nCollections.sort(sortedByAgePersons, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Person&amp;gt;() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Person p1, Person p2)&lt;/span&gt; {\n           &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; Integer.valueOf(p1.getAge()).compareTo(p2.getAge());\n        }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Sort with lambda&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Person&amp;gt; sortedByAgePersons = sort(persons, on(Person.class).getAge()); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Of course, having this kind of beauty impacts in the performance (an average of 2 times), but can you find a more readable code?&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.text.ParseException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.text.SimpleDateFormat;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Collections;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Comparator;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Date;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;test&lt;/span&gt; {\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String name;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; id;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Date hireDate;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String iname, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; iid, Date ihireDate)&lt;/span&gt; {\n        name = iname;\n        id = iid;\n        hireDate = ihireDate;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; name + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; + id + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; + hireDate.toString();\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Comparator&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CompId&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Person&amp;gt; {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Person arg0, Person arg1)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arg0.id - arg1.id;\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CompDate&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Person&amp;gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;CompDate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; desc)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (desc) mod =-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Person arg0, Person arg1)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mod*arg0.hireDate.compareTo(arg1.hireDate);\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mm-dd-yyyy&quot;&lt;/span&gt;);\n    ArrayList&amp;lt;Person&amp;gt; people;\n    people = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Person&amp;gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        people.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Joe&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;92422&lt;/span&gt;, df.parse(&lt;span class=&quot;hljs-string&quot;&gt;&quot;12-12-2010&quot;&lt;/span&gt;)));\n        people.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Joef&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24122&lt;/span&gt;, df.parse(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1-12-2010&quot;&lt;/span&gt;)));\n        people.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Joee&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24922&lt;/span&gt;, df.parse(&lt;span class=&quot;hljs-string&quot;&gt;&quot;12-2-2010&quot;&lt;/span&gt;)));\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (ParseException e) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated catch block&lt;/span&gt;\n        e.printStackTrace();\n    }\n\n    Collections.sort(people, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;.CompId());\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;BY ID&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (Person p : people) {\n        System.out.println(p.toString());\n    }\n\n    Collections.sort(people, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;.CompDate(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;));\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;BY Date asc&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (Person p : people) {\n        System.out.println(p.toString());\n    }\n    Collections.sort(people, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt;.CompDate(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;));\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;BY Date desc&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (Person p : people) {\n        System.out.println(p.toString());\n    }\n\n}\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Best easy way with JAVA 8 is for English Alphabetic sort&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Class Implementation&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;NewspaperClass&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparable&lt;/span&gt;&amp;lt;NewspaperClass&amp;gt;{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String name;\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(NewspaperClass another)&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; name.compareTo(another.name);\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Sort&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  Collections.sort(Your List);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to sort for alphabet that contains non English characters you can use Locale... Below code use Turkish character sort...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Class Implementation&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;NewspaperClass&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;NewspaperClass&amp;gt; {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String name;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Boolean isUserNewspaper=&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Collator&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;trCollator&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Collator.getInstance(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Locale&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;tr_TR&quot;&lt;/span&gt;));\n\n\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(NewspaperClass lhs, NewspaperClass rhs)&lt;/span&gt; {\n      trCollator.setStrength(Collator.PRIMARY);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; trCollator.compare(lhs.name,rhs.name);\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Sort&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(your array list,&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;NewspaperClass&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Function &amp;amp; method reference&lt;/h1&gt;\n\n&lt;p&gt;The &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#sort(java.util.List,java.util.Comparator)&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Collections.sort&lt;/code&gt;&lt;/a&gt; method can sort a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/List.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; using a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; you pass. That &lt;code&gt;Comparator&lt;/code&gt; can be implemented using the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html#comparing(java.util.function.Function)&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Comparator.comparing&lt;/code&gt;&lt;/a&gt; method where you can pass a &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html&quot; rel=&quot;noreferrer&quot;&gt;method reference&lt;/a&gt; as the necessary &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/Function.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;. Fortunately, the actual code is much simpler and shorter than this description.&lt;/p&gt;\n\n&lt;p&gt;For Java 8:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(list, comparing(ClassName::getName));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(list, comparing(ClassName::getName).reversed());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another way is&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(list, comparing(ClassName::getName, Comparator.nullsLast(Comparator.naturalOrder())));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;You can Sort using  java 8&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;yourList.sort(Comparator.comparing(Classname::getName));\n\nor\n\nyourList.stream().forEach(a -&amp;gt; a.getBObjects().sort(Comparator.comparing(Classname::getValue)));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;From &lt;code&gt;Java 8&lt;/code&gt; and onward we don&apos;t have to use &lt;code&gt;Collections.sort()&lt;/code&gt; directly. &lt;code&gt;List&lt;/code&gt; interface has a default &lt;code&gt;sort()&lt;/code&gt; method:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;User&amp;gt; users = Arrays.asList(user1,user2,user3);\nusers.sort( (u1, u2) -&amp;gt; { \n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; u1.getFirstName.compareTo(u2.getFirstName());}); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;http://visvv.blogspot.in/2016/01/sorting-objects-in-java-8.html&quot; rel=&quot;noreferrer&quot;&gt;http://visvv.blogspot.in/2016/01/sorting-objects-in-java-8.html&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Java 8 Lambda shortens the sort.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(stdList, (o1, o2) -&amp;gt; o1.getName().compareTo(o2.getName()));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use the &lt;a href=&quot;http://tips4java.wordpress.com/2008/10/23/bean-comparator/&quot; rel=&quot;noreferrer&quot;&gt;Bean Comparator&lt;/a&gt; to sort on any property in your custom class.&lt;/p&gt;\n    ","\n&lt;p&gt;Yes, that&apos;s possible for instance  in &lt;a href=&quot;https://stackoverflow.com/questions/2784218/get-indexes-of-n-smallest-elements-in-an-array/2784353#2784353&quot;&gt;this answer&lt;/a&gt; I sort by the property &lt;code&gt;v&lt;/code&gt; of the class &lt;code&gt;IndexValue&lt;/code&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// Sorting by property v using a custom comparator.&lt;/span&gt;\n    Arrays.sort( array, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;IndexValue&amp;gt;(){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;( IndexValue a, IndexValue b )&lt;/span&gt;{\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.v - b.v;\n        }\n    });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you notice here I&apos;m creating a &lt;em&gt;anonymous inner class&lt;/em&gt; ( which is the Java for closures ) and passing it directly to the &lt;code&gt;sort&lt;/code&gt; method of the class &lt;code&gt;Arrays&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;Your object may also implement &lt;code&gt;Comparable&lt;/code&gt; ( that&apos;s what String and most of the core libraries in Java does ) but that would define the &quot;natural sort order&quot; of the class it self, and doesn&apos;t let you plug new ones.&lt;/p&gt;\n    ","\n&lt;p&gt;I found most if not all of these answers rely on the underlying class (Object) to implement comparable or to have a helper comparable interface.&lt;/p&gt;\n\n&lt;p&gt;Not with my solution! The following code lets you compare object&apos;s field by knowing their string name. You could easily modify it not to use the name, but then you need to expose it or construct one of the Objects you want to compare against.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(anArrayListOfSomeObjectPerhapsUsersOrSomething, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ReflectiveComparator&lt;/span&gt;(). &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ListComparator&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ReflectiveComparator&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FieldComparator&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Object&amp;gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String fieldName;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;FieldComparator&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String fieldName)&lt;/span&gt;{\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.fieldName = fieldName;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings({ &quot;unchecked&quot;, &quot;rawtypes&quot; })&lt;/span&gt;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Object object1, Object object2)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; object1.getClass().getDeclaredField(fieldName);\n                field.setAccessible(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n\n                &lt;span class=&quot;hljs-type&quot;&gt;Comparable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;object1FieldValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Comparable) field.get(object1);\n                &lt;span class=&quot;hljs-type&quot;&gt;Comparable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;object2FieldValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Comparable) field.get(object2);\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; object1FieldValue.compareTo(object2FieldValue);\n            }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e){}\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ListComparator&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Object&amp;gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String fieldName;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ListComparator&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String fieldName)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.fieldName = fieldName;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings({ &quot;unchecked&quot;, &quot;rawtypes&quot; })&lt;/span&gt;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Object object1, Object object2)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; object1.getClass().getDeclaredField(fieldName);\n                field.setAccessible(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n                &lt;span class=&quot;hljs-type&quot;&gt;Comparable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;o1FieldValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Comparable) field.get(object1);\n                &lt;span class=&quot;hljs-type&quot;&gt;Comparable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;o2FieldValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Comparable) field.get(object2);\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o1FieldValue == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;}\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o2FieldValue == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;}\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o1FieldValue.compareTo(o2FieldValue);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (NoSuchFieldException e) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IllegalStateException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Field doesn&apos;t exist&quot;&lt;/span&gt;, e);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IllegalAccessException e) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IllegalStateException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Field inaccessible&quot;&lt;/span&gt;, e);\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can try Guava &lt;a href=&quot;http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Ordering.html&quot; rel=&quot;noreferrer&quot;&gt;Ordering&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Function&amp;lt;Item, Date&amp;gt; getStartDate = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;&amp;lt;Item, Date&amp;gt;() {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Date &lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Item item)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; item.getStartDate();\n    }\n};\n\nList&amp;lt;Item&amp;gt; orderedItems = Ordering.natural().onResultOf(getStartDate).\n                          sortedCopy(items);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Well if you using Java 8 or older version Here is the Best solution.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(studentList, Comparator.comparing(Student::getCgpa).reversed().thenComparing(Student:: getFname).thenComparing(Student::getId));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In this case, it will first sort with &apos;getCgpa&apos; first and for the second part it will sort with getFname and getId.  Which is field into the pojo class.&lt;/p&gt;\n    ","\n&lt;p&gt;your customComparator class must implement java.util.Comparator in order to be used.\nit must also overide compare() AND equals()&lt;/p&gt;\n\n&lt;p&gt;compare() must answer the question:  Is object 1 less than, equal to or greater than object 2?&lt;/p&gt;\n\n&lt;p&gt;full docs: &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Comparator.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Comparator.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This code snippets might be useful. If you want to sort an Object\nin my case I want to sort by VolumeName:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Volume&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getSortedVolumes&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; SystemException {\n    List&amp;lt;Volume&amp;gt; volumes = VolumeLocalServiceUtil.getAllVolumes();\n    Collections.sort(volumes, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparator&lt;/span&gt;&amp;lt;Volume&amp;gt;() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Volume o1, Volume o2)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;Volume&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Volume) o1;\n            &lt;span class=&quot;hljs-type&quot;&gt;Volume&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Volume) o2;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; p1.getVolumeName().compareToIgnoreCase(\n                    p2.getVolumeName());\n        }\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; volumes;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works. I use it in my jsp.&lt;/p&gt;\n    ","\n&lt;p&gt;With this library &lt;a href=&quot;https://github.com/ipillars/public/tree/master/java/utils/com/ipillars/sorter&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; you can sort the list of custom objects on multiple columns. The library uses version 8.0 features. Sample is also available there. Here is a sample to do&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SortKeys&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sortKeys&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SortKeys&lt;/span&gt;();\nsortKeys.addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;)\n            .addField(&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// This (true) will sort the age descending&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Other ways to specify a property to the sorter are&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//      .addField(&quot;lastName&quot;, String.class);&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//      .addField(&quot;dob&quot;, Date.class, true);&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Instantiate a ListSorter&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;ListSorter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;listSorter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ListSorter&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Pass the data to sort (listToSort) and the &quot;by keys&quot; to sort (sortKeys)&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sortedList&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (List&amp;lt;Person&amp;gt;) listSorter.sortList(listToSort, sortKeys);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can have a look into this &lt;a href=&quot;http://2016.java-forum-stuttgart.de/_data/D4_Wiedeking.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;presentation&lt;/a&gt; hold at the Java Forum in Stuttgart Germany in 2016.&lt;/p&gt;\n\n&lt;p&gt;Only a few slides use German language, 99% of the content is &quot;English based&quot; Java source code; like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;someCollection.sort(\n  OurCustomComparator\n    .comparing(Person::getName)\n    .thenComparing(Person::getId)\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;where &lt;code&gt;OurCustomComparator&lt;/code&gt; is using default methods (and other interesting ideas). As shown, leading to very concise code to pick some getter method for sorting; and super simple chaining (or reversing) of sort criteria. &lt;/p&gt;\n\n&lt;p&gt;If you are into java8, you find a lot of material there to get you started.&lt;/p&gt;\n    ","\n&lt;p&gt;New since 1.8 is a List.sort() method instead of using the Collection.sort()\nso you directly call  mylistcontainer.sort()&lt;/p&gt;\n\n&lt;p&gt;Here is a code snippet which demonstrates the List.sort() feature:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Fruit&amp;gt; fruits = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Fruit&amp;gt;();\nfruits.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Fruit&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Kiwi&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;green&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;));\nfruits.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Fruit&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Banana&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;yellow&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;));\nfruits.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Fruit&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Apple&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;mixed green,red&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;));\nfruits.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Fruit&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Cherry&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// a) using an existing compareto() method&lt;/span&gt;\nfruits.sort((Fruit f1,Fruit f2) -&amp;gt; f1.getFruitName().compareTo(f2.getFruitName()));\nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Using String.compareTo(): &quot;&lt;/span&gt; + fruits);\n&lt;span class=&quot;hljs-comment&quot;&gt;//Using String.compareTo(): [Apple is: mixed green,red, Banana is: yellow, Cherry is: red, Kiwi is: green]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// b) Using a comparable class&lt;/span&gt;\nfruits.sort((Fruit f1,Fruit f2) -&amp;gt; f1.compareTo(f2));  \nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Using a Comparable Fruit class (sort by color): &quot;&lt;/span&gt; + fruits);\n&lt;span class=&quot;hljs-comment&quot;&gt;// Using a Comparable Fruit class (sort by color): [Kiwi is green, Apple is: mixed green,red, Cherry is: red, Banana is: yellow]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The Fruit class is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Fruit&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparable&lt;/span&gt;&amp;lt;Fruit&amp;gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String name;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String color;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; quantity;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name,String color,&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; quantity)&lt;/span&gt;\n    { &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.name = name; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.color = color; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.quantity = quantity; }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getFruitName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; name; }        \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getColor&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; color; }  \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getQuantity&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; quantity; }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Fruit f)&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// sorting the color&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.color.compareTo(f.color);\n    }     \n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\n    {   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (name + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is: &quot;&lt;/span&gt; + color);\n    }\n} &lt;span class=&quot;hljs-comment&quot;&gt;// end of Fruit class   &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I prefer this process:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SortUtil&lt;/span&gt;\n{    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; List&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(List&amp;lt;T&amp;gt; list, String sortByProperty)&lt;/span&gt;\n    {\n            Collections.sort(list, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BeanComparator&lt;/span&gt;(sortByProperty));\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; list;\n    }\n}\n\nList&amp;lt;T&amp;gt; sortedList = SortUtil&amp;lt;T&amp;gt;.sort(unsortedList, &lt;span class=&quot;hljs-string&quot;&gt;&quot;startDate&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you list of objects has a property called &lt;code&gt;startDate&lt;/code&gt;, you call use this over and over.  You can even chain them &lt;code&gt;startDate.time&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;This requires your object to be &lt;code&gt;Comparable&lt;/code&gt; which means you need a &lt;code&gt;compareTo&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;hashCode&lt;/code&gt; implementation.&lt;/p&gt;\n\n&lt;p&gt;Yes, it could be faster... But now you don&apos;t have to make a new Comparator for each type of sort.  If you can save on dev time and give up on runtime, you might go with this one.&lt;/p&gt;\n    ","\n&lt;p&gt;using the java-8 stream api you can sort an &lt;code&gt;ArrayList&lt;/code&gt; by:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; Comparator&amp;lt;Person&amp;gt; birthdayComparator = Comparator.comparing(Person::getBirthday);\n List&amp;lt;Person&amp;gt; sortedList = list.stream().sorted(birthdayComparator).collect(toList());\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using Java 8 use can define the &lt;code&gt;Comparator&lt;/code&gt; in one line using &lt;code&gt;Comparator.comparing()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Use any of the following way:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;listToBeSorted.sort(Comparator.comparing(CustomObject::getStartDate));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Collections.sort(listToBeSorted, Comparator.comparing(CustomObject::getStartDate));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Your custom class can implement the &quot;Comparable&quot; interface, which requires an implementation of the CompareTo method. In the CompareTo method, you can then define what it means that an object is &lt;em&gt;less than or more than&lt;/em&gt; the other object. So in your example, it can look something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyCustomClass&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparable&lt;/span&gt;&amp;lt;MyCustomClass&amp;gt;{\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;..........&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(MyCustomClass a)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getStartDate().before(a.getStartDate())){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(a.getStartDate().before(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getStartDate())){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A negative number indicates that &lt;strong&gt;this&lt;/strong&gt; is smaller than the object being compared to. A positive number indicates that &lt;strong&gt;this&lt;/strong&gt; is larger than the compared to object and a Zero means that the objects are equal.&lt;/p&gt;\n\n&lt;p&gt;You can then use the collections.sort(myList) to sort your list without having to feed in a comparator. This method also has the advantage of having things sorted automatically if you use a sorted collection data structures like a TreeSet or a TreeMap. &lt;/p&gt;\n\n&lt;p&gt;You can check this article if you would like to read more about the Comparable interface (disclosure: I am the author ;) )\n&lt;a href=&quot;https://nullbeans.com/the-java-comparable-interface-automatic-sort-of-collections/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://nullbeans.com/the-java-comparable-interface-automatic-sort-of-collections/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You could also use Springs &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/support/PropertyComparator.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;PropertyComparator&lt;/a&gt; if you have just a String property path to the (nested) property you want to sort:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;SomeObject&amp;gt; list = ...;\nPropertyComparator&amp;lt;HitWithInfo&amp;gt; propertyComparator = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PropertyComparator&lt;/span&gt;&amp;lt;&amp;gt;(\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;property.nested.myProperty&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\nlist.sort(propertyComparator);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The drawback is, that this comparator silently ignores properties which does not exist or are not accessible and handles this as &lt;em&gt;null&lt;/em&gt; value for comparison. This means, you should carefully test such a comparator or validate the existence of the property path somehow.&lt;/p&gt;\n    ","\n&lt;p&gt;I have tried lots of different solutions available on internet but solution which works for me is available at below link.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://www.java67.com/2017/07/how-to-sort-arraylist-of-objects-using.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.java67.com/2017/07/how-to-sort-arraylist-of-objects-using.html&lt;/a&gt;&lt;/p&gt;\n    "],"338":["\n&lt;p&gt;To obtain shared preferences, use the following method\nIn your activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getSharedPreferences(\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.app&quot;&lt;/span&gt;, Context.MODE_PRIVATE);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To read preferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; dateTimeKey = &lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.app.datetime&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt; use a &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; value using &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;()\nlong l = prefs.getLong(dateTimeKey, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Date&lt;/span&gt;().getTime()); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To edit and save preferences&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;Date dt = &lt;span class=&quot;hljs-built_in&quot;&gt;getSomeDate&lt;/span&gt;();\nprefs.&lt;span class=&quot;hljs-built_in&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-built_in&quot;&gt;putLong&lt;/span&gt;(dateTimeKey, dt.&lt;span class=&quot;hljs-built_in&quot;&gt;getTime&lt;/span&gt;()).&lt;span class=&quot;hljs-built_in&quot;&gt;apply&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The android sdk&apos;s sample directory contains an example of retrieving and storing shared preferences. Its located in the:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;android-sdk-home&lt;/span&gt;&amp;gt;&lt;/span&gt;/samples/android-&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;platformversion&lt;/span&gt;&amp;gt;&lt;/span&gt;/ApiDemos directory\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit==&amp;gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I noticed, it is important to write difference between &lt;code&gt;commit()&lt;/code&gt; and &lt;code&gt;apply()&lt;/code&gt; here as well.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/strong&gt; return &lt;code&gt;true&lt;/code&gt; if value saved successfully otherwise &lt;code&gt;false&lt;/code&gt;. It save values to SharedPreferences &lt;strong&gt;synchronously&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/strong&gt; was added in 2.3 and doesn&apos;t return any value either on success or failure. It saves values to SharedPreferences immediately but starts an &lt;strong&gt;asynchronous&lt;/strong&gt; commit.\nMore detail is &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.Editor.html#apply()&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;To store values in shared preferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PreferenceManager.getDefaultSharedPreferences(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\nSharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Harneet&quot;&lt;/span&gt;);\neditor.apply();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To retrieve values from shared preferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PreferenceManager.getDefaultSharedPreferences(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!name.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;))\n{\n    name = name + &lt;span class=&quot;hljs-string&quot;&gt;&quot;  Sethi&quot;&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;/* Edit the value here*/&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To &lt;strong&gt;edit&lt;/strong&gt; data from &lt;code&gt;sharedpreference&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt; SharedPreferences.Editor editor = &lt;span class=&quot;hljs-built_in&quot;&gt;getPreferences&lt;/span&gt;(MODE_PRIVATE).&lt;span class=&quot;hljs-built_in&quot;&gt;edit&lt;/span&gt;();\n editor.&lt;span class=&quot;hljs-built_in&quot;&gt;putString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;, mSaved.&lt;span class=&quot;hljs-built_in&quot;&gt;getText&lt;/span&gt;().&lt;span class=&quot;hljs-built_in&quot;&gt;toString&lt;/span&gt;());\n editor.&lt;span class=&quot;hljs-built_in&quot;&gt;putInt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;selection-start&quot;&lt;/span&gt;, mSaved.&lt;span class=&quot;hljs-built_in&quot;&gt;getSelectionStart&lt;/span&gt;());\n editor.&lt;span class=&quot;hljs-built_in&quot;&gt;putInt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;selection-end&quot;&lt;/span&gt;, mSaved.&lt;span class=&quot;hljs-built_in&quot;&gt;getSelectionEnd&lt;/span&gt;());\n editor.&lt;span class=&quot;hljs-built_in&quot;&gt;apply&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To &lt;strong&gt;retrieve&lt;/strong&gt; data from &lt;code&gt;sharedpreference&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPreferences(MODE_PRIVATE); \n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;restoredText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (restoredText != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) \n{\n  &lt;span class=&quot;hljs-comment&quot;&gt;//mSaved.setText(restoredText, TextView.BufferType.EDITABLE);&lt;/span&gt;\n  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;selectionStart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;selection-start&quot;&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;selectionEnd&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;selection-end&quot;&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  &lt;span class=&quot;hljs-comment&quot;&gt;/*if (selectionStart != -1 &amp;amp;&amp;amp; selectionEnd != -1)\n  {\n     mSaved.setSelection(selectionStart, selectionEnd);\n  }*/&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I took this snippet from API Demo sample. It had an &lt;code&gt;EditText&lt;/code&gt; box there . In this &lt;code&gt;context&lt;/code&gt; it is not required.I am commenting the same .&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;To Write :&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AUTHENTICATION_FILE_NAME&quot;&lt;/span&gt;, Context.MODE_PRIVATE);\nSharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Authentication_Id&quot;&lt;/span&gt;,userid.getText().toString());\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Authentication_Password&quot;&lt;/span&gt;,password.getText().toString());\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Authentication_Status&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);\neditor.apply();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;To Read :&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prfs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AUTHENTICATION_FILE_NAME&quot;&lt;/span&gt;, Context.MODE_PRIVATE);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Astatus&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prfs.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Authentication_Status&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Easiest way:&lt;/p&gt;\n\n&lt;p&gt;To save:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;getPreferences&lt;/span&gt;(MODE_PRIVATE)&lt;span class=&quot;hljs-selector-class&quot;&gt;.edit&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.putString&lt;/span&gt;(&quot;Name of variable&quot;,value)&lt;span class=&quot;hljs-selector-class&quot;&gt;.commit&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To retrieve:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;your_variable&lt;/span&gt; = getPreferences(MODE_PRIVATE).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name of variable&quot;&lt;/span&gt;,default value)&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Singleton Shared Preferences Class. it may help for others in future.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;app&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Activity&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;content&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Context&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;content&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SharedPreferences&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPref&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt; mSharedPref;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; final &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;NAME&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;NAME&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; final &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;AGE&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;AGE&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; final &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;IS_SELECT&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;IS_SELECT&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPref&lt;/span&gt;()\n    {\n\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(mSharedPref == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            mSharedPref = context.&lt;span class=&quot;hljs-title function_&quot;&gt;getSharedPreferences&lt;/span&gt;(context.&lt;span class=&quot;hljs-title function_&quot;&gt;getPackageName&lt;/span&gt;(), &lt;span class=&quot;hljs-title class_&quot;&gt;Activity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;MODE_PRIVATE&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;read&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; defValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mSharedPref.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(key, defValue);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Editor&lt;/span&gt; prefsEditor = mSharedPref.&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;();\n        prefsEditor.&lt;span class=&quot;hljs-title function_&quot;&gt;putString&lt;/span&gt;(key, value);\n        prefsEditor.&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;read&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; defValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mSharedPref.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoolean&lt;/span&gt;(key, defValue);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Editor&lt;/span&gt; prefsEditor = mSharedPref.&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;();\n        prefsEditor.&lt;span class=&quot;hljs-title function_&quot;&gt;putBoolean&lt;/span&gt;(key, value);\n        prefsEditor.&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;read&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, int defValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mSharedPref.&lt;span class=&quot;hljs-title function_&quot;&gt;getInt&lt;/span&gt;(key, defValue);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, Integer value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Editor&lt;/span&gt; prefsEditor = mSharedPref.&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;();\n        prefsEditor.&lt;span class=&quot;hljs-title function_&quot;&gt;putInt&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Simply call &lt;code&gt;SharedPref.init()&lt;/code&gt; on &lt;code&gt;MainActivity&lt;/code&gt; once&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;SharedPref.&lt;span class=&quot;hljs-keyword&quot;&gt;init&lt;/span&gt;(getApplicationContext());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To Write data &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;SharedPref&lt;span class=&quot;hljs-selector-class&quot;&gt;.write&lt;/span&gt;(SharedPref.NAME, &quot;XXXX&quot;);&lt;span class=&quot;hljs-comment&quot;&gt;//save string in shared preference.&lt;/span&gt;\nSharedPref&lt;span class=&quot;hljs-selector-class&quot;&gt;.write&lt;/span&gt;(SharedPref.AGE, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;);&lt;span class=&quot;hljs-comment&quot;&gt;//save int in shared preference.&lt;/span&gt;\nSharedPref&lt;span class=&quot;hljs-selector-class&quot;&gt;.write&lt;/span&gt;(SharedPref.IS_SELECT, true);&lt;span class=&quot;hljs-comment&quot;&gt;//save boolean in shared preference.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To Read Data&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-delphi&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;name&lt;/span&gt; = SharedPref.&lt;span class=&quot;hljs-keyword&quot;&gt;read&lt;/span&gt;(SharedPref.&lt;span class=&quot;hljs-keyword&quot;&gt;NAME&lt;/span&gt;, null);&lt;span class=&quot;hljs-comment&quot;&gt;//read string in shared preference.&lt;/span&gt;\nint age = SharedPref.&lt;span class=&quot;hljs-keyword&quot;&gt;read&lt;/span&gt;(SharedPref.AGE, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);&lt;span class=&quot;hljs-comment&quot;&gt;//read int in shared preference.&lt;/span&gt;\nboolean isSelect = SharedPref.&lt;span class=&quot;hljs-keyword&quot;&gt;read&lt;/span&gt;(SharedPref.IS_SELECT, false);&lt;span class=&quot;hljs-comment&quot;&gt;//read boolean in shared preference.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;Setting values in Preference:&lt;/h3&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// MY_PREFS_NAME - a static String variable like: &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//public static final String MY_PREFS_NAME = &quot;MyPrefsFile&quot;;&lt;/span&gt;\nSharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(MY_PREFS_NAME, MODE_PRIVATE).edit();\n editor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Elena&quot;&lt;/span&gt;);\n editor.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;idName&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;);\n editor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Retrieve data from preference:&lt;/h3&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(MY_PREFS_NAME, MODE_PRIVATE); \n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;restoredText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (restoredText != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;No name defined&quot;&lt;/span&gt;);&lt;span class=&quot;hljs-comment&quot;&gt;//&quot;No name defined&quot; is the default value.&lt;/span&gt;\n  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;idName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;idName&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//0 is the default value.&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;more info:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/data/data-storage.html#pref&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Using Shared Preferences&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Shared Preferences&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;To store information&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(PREFS_NAME,Context.MODE_PRIVATE);\nSharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;, username.getText().toString());\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;, password.getText().toString());\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;logged&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;logged&quot;&lt;/span&gt;);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To reset your preferences&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;SharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.edit();\neditor.clear();\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you are making a large application with other developers in your team and intend to have everything well organized without scattered code or different SharedPreferences instances, you may do something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//SharedPreferences manager class&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPrefs&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//SharedPreferences file name&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;SHARED_PREFS_FILE_NAME&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;my_app_shared_prefs&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//here you can centralize all your shared prefs keys&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;KEY_MY_SHARED_BOOLEAN&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;my_shared_boolean&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;KEY_MY_SHARED_FOO&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;my_shared_foo&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//get the SharedPreferences object instance&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//create SharedPreferences file if not present&lt;/span&gt;\n\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; context.&lt;span class=&quot;hljs-title function_&quot;&gt;getSharedPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;SHARED_PREFS_FILE_NAME&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Context&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;MODE_PRIVATE&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Save Booleans&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;savePref&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putBoolean&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();       \n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Get Booleans&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getBoolean&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getBoolean&lt;/span&gt;(key, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Get Booleans if not found return a predefined default value&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getBoolean&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; defaultValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getBoolean&lt;/span&gt;(key, defaultValue);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Strings&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;save&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putString&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(key, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; defaultValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(key, defaultValue);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Integers&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;save&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, int value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putInt&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; int &lt;span class=&quot;hljs-title function_&quot;&gt;getInt&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getInt&lt;/span&gt;(key, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; int &lt;span class=&quot;hljs-title function_&quot;&gt;getInt&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, int defaultValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getInt&lt;/span&gt;(key, defaultValue);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Floats&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;save&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, float value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putFloat&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; float &lt;span class=&quot;hljs-title function_&quot;&gt;getFloat&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getFloat&lt;/span&gt;(key, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; float &lt;span class=&quot;hljs-title function_&quot;&gt;getFloat&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, float defaultValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getFloat&lt;/span&gt;(key, defaultValue);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Longs&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;save&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, long value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putLong&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; long &lt;span class=&quot;hljs-title function_&quot;&gt;getLong&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getLong&lt;/span&gt;(key, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; long &lt;span class=&quot;hljs-title function_&quot;&gt;getLong&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, long defaultValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getLong&lt;/span&gt;(key, defaultValue);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//StringSets&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;save&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;&amp;gt; value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putStringSet&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getStringSet&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getStringSet&lt;/span&gt;(key, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getStringSet&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;&amp;gt; defaultValue&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPrefs&lt;/span&gt;(context).&lt;span class=&quot;hljs-title function_&quot;&gt;getStringSet&lt;/span&gt;(key, defaultValue);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In your activity you may save SharedPreferences this way&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//saving a boolean into prefs&lt;/span&gt;\nSharedPrefs.savePref(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SharedPrefs.KEY_MY_SHARED_BOOLEAN, booleanVar);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and you may retrieve your SharedPreferences this way&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//getting a boolean from prefs&lt;/span&gt;\nbooleanVar = SharedPrefs.getBoolean(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SharedPrefs.KEY_MY_SHARED_BOOLEAN);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In any application, there are default preferences that can accessed through the &lt;code&gt;PreferenceManager&lt;/code&gt; instance and its related method &lt;code&gt;getDefaultSharedPreferences(Context)&lt;/code&gt; .&lt;/p&gt;\n\n&lt;p&gt;With the &lt;code&gt;SharedPreference&lt;/code&gt; instance one can retrieve the int value of the any preference with the &lt;strong&gt;getInt(String key, int defVal)&lt;/strong&gt;. The preference we are interested in this case is counter .&lt;/p&gt;\n\n&lt;p&gt;In our case, we can modify the &lt;code&gt;SharedPreference&lt;/code&gt; instance in our case using the edit() and use the &lt;code&gt;putInt(String key, int newVal)&lt;/code&gt; We increased the count for our application that presist beyond the application and displayed accordingly.&lt;/p&gt;\n\n&lt;p&gt;To further demo this, restart and you application again, you will notice that the count will increase each time you restart the application. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;PreferencesDemo.java&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Code:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; org.example.preferences;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.&lt;span class=&quot;hljs-type&quot;&gt;Activity&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.preference.&lt;span class=&quot;hljs-type&quot;&gt;PreferenceManager&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;;\n\npublic &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;PreferencesDemo&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;{\n   &lt;span class=&quot;hljs-comment&quot;&gt;/** Called when the activity is first created. */&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    public void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.main);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Get the app&apos;s shared preferences&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; app_preferences = \n        &lt;span class=&quot;hljs-type&quot;&gt;PreferenceManager&lt;/span&gt;.getDefaultSharedPreferences(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Get the value for the run counter&lt;/span&gt;\n        int counter = app_preferences.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;counter&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Update the TextView&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; text = (&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.text);\n        text.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;This app has been started &quot;&lt;/span&gt; + counter + &lt;span class=&quot;hljs-string&quot;&gt;&quot; times.&quot;&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Increment the counter&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; editor = app_preferences.edit();\n        editor.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;counter&quot;&lt;/span&gt;, ++counter);\n        editor.commit(); &lt;span class=&quot;hljs-comment&quot;&gt;// Very important&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;main.xml&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;android:orientation&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;vertical&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TextView&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/text&quot;&lt;/span&gt;  \n            &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt; \n            &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt; \n            &lt;span class=&quot;hljs-attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@string/hello&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;LinearLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To store values in shared preferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PreferenceManager.getDefaultSharedPreferences(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\nSharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jayesh&quot;&lt;/span&gt;);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To retrieve values from shared preferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PreferenceManager.getDefaultSharedPreferences(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Second parameter is the default value.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple solution of how to store login value in by &lt;code&gt;SharedPreferences&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can extend the &lt;code&gt;MainActivity&lt;/code&gt; class or other class where you will store the &quot;value of something you want to keep&quot;. Put this into writer and reader classes:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;GAME_PREFERENCES_LOGIN&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Login&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here &lt;code&gt;InputClass&lt;/code&gt; is input and &lt;code&gt;OutputClass&lt;/code&gt; is output class, respectively.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// This is a storage, put this in a class which you can extend or in both classes:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//(input and output)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;GAME_PREFERENCES_LOGIN&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Login&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// String from the text input (can be from anywhere)&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; inputLogin.getText().toString();\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// then to add a value in InputCalss &quot;SAVE&quot;,&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(GAME_PREFERENCES_LOGIN, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; example.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;, login);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can use it somewhere else, like other class. The following is &lt;code&gt;OutputClass&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;SharedPreferences example = &lt;span class=&quot;hljs-built_in&quot;&gt;getSharedPreferences&lt;/span&gt;(GAME_PREFERENCES_LOGIN, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\nString userString = example.&lt;span class=&quot;hljs-built_in&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;defValue&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// the following will print it out in console&lt;/span&gt;\nLogger.&lt;span class=&quot;hljs-built_in&quot;&gt;getLogger&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name of a OutputClass&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;getName&lt;/span&gt;()).&lt;span class=&quot;hljs-built_in&quot;&gt;log&lt;/span&gt;(Level.INFO, userString);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Store in SharedPreferences&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;temp&quot;&lt;/span&gt;, getApplicationContext().MODE_PRIVATE);\n&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, name);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Fetch in SharedPreferences&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;SharedPreferences preferences=getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;temp&quot;&lt;/span&gt;, getApplicationContext().MODE_PRIVATE);\n&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; name=preferences.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: &quot;temp&quot; is sharedpreferences name and &quot;name&quot; is input value. if value does&apos;t exit then return null &lt;/p&gt;\n    ","\n&lt;p&gt;Edit&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pref&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;YourPref&quot;&lt;/span&gt;, MODE_PRIVATE);\nSharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; pref.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;yourValue&quot;&lt;/span&gt;, value);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Read&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pref&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;YourPref&quot;&lt;/span&gt;, MODE_PRIVATE);\nvalue= pref.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;yourValue&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;editor&lt;span class=&quot;hljs-selector-class&quot;&gt;.putString&lt;/span&gt;(&quot;text&quot;, mSaved.getText()&lt;span class=&quot;hljs-selector-class&quot;&gt;.toString&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here, &lt;code&gt;mSaved&lt;/code&gt; can be any &lt;code&gt;TextView&lt;/code&gt; or &lt;code&gt;EditText&lt;/code&gt; from where we can extract a string. you can simply specify a string. Here text will be the key which hold the value obtained from the &lt;code&gt;mSaved&lt;/code&gt; (&lt;code&gt;TextView&lt;/code&gt; or &lt;code&gt;EditText&lt;/code&gt;).    &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.app&quot;&lt;/span&gt;, Context.MODE_PRIVATE);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also there is no need to save the preference file using the package name i.e., &quot;com.example.app&quot;. You can mention your own preferred name.  Hope this helps !&lt;/p&gt;\n    ","\n&lt;p&gt;Basic idea of &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot; rel=&quot;noreferrer&quot;&gt;SharedPreferences&lt;/a&gt; is to store things on XML file. &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Declare your xml file path.(if you don&apos;t have this file, Android will create it. If you have this file, Android will access it.)&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.app&quot;&lt;/span&gt;, Context.MODE_PRIVATE);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Write value to Shared Preferences&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;prefs&lt;span class=&quot;hljs-selector-class&quot;&gt;.edit&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.putLong&lt;/span&gt;(&quot;preference_file_key&quot;, &lt;span class=&quot;hljs-number&quot;&gt;1010101&lt;/span&gt;)&lt;span class=&quot;hljs-selector-class&quot;&gt;.apply&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the &lt;code&gt;preference_file_key&lt;/code&gt; is the name of shared preference files. And the &lt;code&gt;1010101&lt;/code&gt; is the value you need to store. &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;apply()&lt;/code&gt; at last is to save the changes. If you get error from &lt;code&gt;apply()&lt;/code&gt;, change it to &lt;code&gt;commit()&lt;/code&gt;. So this alternative sentence is&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;prefs&lt;span class=&quot;hljs-selector-class&quot;&gt;.edit&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.putLong&lt;/span&gt;(&quot;preference_file_key&quot;, &lt;span class=&quot;hljs-number&quot;&gt;1010101&lt;/span&gt;)&lt;span class=&quot;hljs-selector-class&quot;&gt;.commit&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Read from Shared Preferences&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.app&quot;&lt;/span&gt;, Context.MODE_PRIVATE);\n&lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lsp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.getLong(&lt;span class=&quot;hljs-string&quot;&gt;&quot;preference_file_key&quot;&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;lsp&lt;/code&gt; will be &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;preference_file_key&lt;/code&gt; has no value. If &apos;preference_file_key&apos; has a value, it will return the value of this.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;The whole code for writing is&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;    SharedPreferences prefs = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;getSharedPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.app&quot;&lt;/span&gt;, Context.MODE_PRIVATE);    &lt;span class=&quot;hljs-comment&quot;&gt;// Declare xml file&lt;/span&gt;\n    prefs.&lt;span class=&quot;hljs-built_in&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-built_in&quot;&gt;putLong&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;preference_file_key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1010101&lt;/span&gt;).&lt;span class=&quot;hljs-built_in&quot;&gt;apply&lt;/span&gt;();    &lt;span class=&quot;hljs-comment&quot;&gt;// Write the value to key.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The code for reading is&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sf&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.app&quot;&lt;/span&gt;, Context.MODE_PRIVATE);    &lt;span class=&quot;hljs-comment&quot;&gt;// Declare xml file&lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lsp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.getLong(&lt;span class=&quot;hljs-string&quot;&gt;&quot;preference_file_key&quot;&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);    &lt;span class=&quot;hljs-comment&quot;&gt;// Read the key and store in lsp&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can save value using this method:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;savePreferencesForReasonCode&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context,\n    &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt; sharedPreferences = &lt;span class=&quot;hljs-title class_&quot;&gt;PreferenceManager&lt;/span&gt;\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;getDefaultSharedPreferences&lt;/span&gt;(context);\n    &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Editor&lt;/span&gt; editor = sharedPreferences.&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;();\n    editor.&lt;span class=&quot;hljs-title function_&quot;&gt;putString&lt;/span&gt;(key, value);\n    editor.&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And using this method you can get value from SharedPreferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; prefKey&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt; sharedPreferences = &lt;span class=&quot;hljs-title class_&quot;&gt;PreferenceManager&lt;/span&gt;\n .&lt;span class=&quot;hljs-title function_&quot;&gt;getDefaultSharedPreferences&lt;/span&gt;(context);\n &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sharedPreferences.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(prefKey, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here &lt;code&gt;prefKey&lt;/code&gt; is the key that you used to saved the specific value. Thanks.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;to save&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;PreferenceManager.&lt;span class=&quot;hljs-built_in&quot;&gt;getDefaultSharedPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-built_in&quot;&gt;edit&lt;/span&gt;().&lt;span class=&quot;hljs-built_in&quot;&gt;putString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;VarName&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;your value&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-built_in&quot;&gt;apply&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;to retreive :&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PreferenceManager.getDefaultSharedPreferences(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;VarName&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;defaultValue&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;default value is : Values to return if this preference does not exist.&lt;/p&gt;\n  \n  &lt;p&gt;you can change &quot;&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;&quot; with &lt;strong&gt;&lt;em&gt;getActivity()&lt;/em&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;em&gt;getApplicationContext()&lt;/em&gt;&lt;/strong&gt; in\n  some cases&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;There are many ways people recommend how to use &lt;strong&gt;SharedPreferences&lt;/strong&gt;. I have made a &lt;a href=&quot;https://github.com/akhgupta/Android-PreferenceDemo&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;demo project here&lt;/strong&gt;&lt;/a&gt;. Key point in sample is to use &lt;strong&gt;ApplicationContext &amp;amp; single sharedpreferences object&lt;/strong&gt;. This demonstrates how to use &lt;strong&gt;SharedPreferences&lt;/strong&gt; with following features:-&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Using singelton class to access/update SharedPreferences&lt;/li&gt;\n&lt;li&gt;No need to pass context always for read/write SharedPreferences&lt;/li&gt;\n&lt;li&gt;It uses apply() instead of commit()&lt;/li&gt;\n&lt;li&gt;apply() is asynchronus save, doesn&apos;t return anything, it update value in memory first &amp;amp; changes are written to disk later\nasynchronusly.&lt;/li&gt;\n&lt;li&gt;commit() is synchronus save, it return true/false based on outcome. Changes are written to disk synchronusly&lt;/li&gt;\n&lt;li&gt;works on android 2.3+ versions&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Usage example as below:-&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;MyAppPreference.getInstance().setSampleStringKey(&lt;span class=&quot;hljs-string&quot;&gt;&quot;some_value&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value= MyAppPreference.getInstance().getSampleStringKey();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/akhgupta/Android-PreferenceDemo&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Get source code here&lt;/strong&gt;&lt;/a&gt;\n&amp;amp; Detailed API&apos;s can be found &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.Editor.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; on developer.android.com &lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Best practice ever&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Create &lt;strong&gt;Interface&lt;/strong&gt; named with &lt;strong&gt;PreferenceManager&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Interface to save values in shared preferences and also for retrieve values from shared preferences&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;PreferenceManager&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-function&quot;&gt;SharedPreferences &lt;span class=&quot;hljs-title&quot;&gt;getPreferences&lt;/span&gt;()&lt;/span&gt;;\n    &lt;span class=&quot;hljs-function&quot;&gt;Editor &lt;span class=&quot;hljs-title&quot;&gt;editPreferences&lt;/span&gt;()&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key, String &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=&quot;hljs-function&quot;&gt;String &lt;span class=&quot;hljs-title&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key&lt;/span&gt;)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setBoolean&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key, boolean &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=&quot;hljs-function&quot;&gt;boolean &lt;span class=&quot;hljs-title&quot;&gt;getBoolean&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key&lt;/span&gt;)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setInteger&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key, &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getInteger&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key&lt;/span&gt;)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setFloat&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key, &lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getFloat&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String key&lt;/span&gt;)&lt;/span&gt;;\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How to use with &lt;strong&gt;Activity&lt;/strong&gt; / &lt;strong&gt;Fragment&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HomeActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PreferenceManager&lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Bundle savedInstanceState&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);\n        &lt;span class=&quot;hljs-title function_&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;layout_activity_home&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getSharedPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SP_TITLE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Context&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;MODE_PRIVATE&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedPreferences&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;editPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;edit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;editPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putString&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(key, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setBoolean&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;editPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putBoolean&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getBoolean&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;hljs-title function_&quot;&gt;getPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getBoolean&lt;/span&gt;(key, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setInteger&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, int value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;editPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putInt&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; int &lt;span class=&quot;hljs-title function_&quot;&gt;getInteger&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getInt&lt;/span&gt;(key, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setFloat&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key, float value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;editPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;putFloat&lt;/span&gt;(key, value).&lt;span class=&quot;hljs-title function_&quot;&gt;commit&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; float &lt;span class=&quot;hljs-title function_&quot;&gt;getFloat&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; key&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPreferences&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getFloat&lt;/span&gt;(key, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Replace your key of SharedPreference with &lt;strong&gt;SP_TITLE&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Store string&lt;/strong&gt; in &lt;strong&gt;shareperence&lt;/strong&gt;: &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lisp&quot;&gt;setString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;my_key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;my_value&quot;&lt;/span&gt;)&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Get string&lt;/strong&gt; from &lt;strong&gt;shareperence&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; strValue = getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;my_key&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope this will help you.&lt;/p&gt;\n    ","\n&lt;p&gt;I write a helper class for sharedpreferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Context;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.SharedPreferences;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Created by mete_ on 23.12.2016.\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HelperSharedPref&lt;/span&gt; {\n\nContext mContext;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HelperSharedPref&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context mContext)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.mContext = mContext;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n *\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; key Constant RC\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; value Only String, Integer, Long, Float, Boolean types\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;saveToSharedPref&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, Object value)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception {\n    SharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mContext.getSharedPreferences(key, Context.MODE_PRIVATE).edit();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; String) {\n        editor.putString(key, (String) value);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; Integer) {\n        editor.putInt(key, (Integer) value);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; Long) {\n        editor.putLong(key, (Long) value);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; Float) {\n        editor.putFloat(key, (Float) value);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; Boolean) {\n        editor.putBoolean(key, (Boolean) value);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Exception&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Unacceptable object type&quot;&lt;/span&gt;);\n    }\n\n    editor.commit();\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Return String\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; key\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; null default is null\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;loadStringFromSharedPref&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception {\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mContext.getSharedPreferences(key, Context.MODE_PRIVATE);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;restoredText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getString(key, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; restoredText;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Return int\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; key\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; null default is -1\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;hljs-title function_&quot;&gt;loadIntegerFromSharedPref&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception {\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mContext.getSharedPreferences(key, Context.MODE_PRIVATE);\n    &lt;span class=&quot;hljs-type&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;restoredText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getInt(key, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; restoredText;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Return float\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; key\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; null default is -1\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Float &lt;span class=&quot;hljs-title function_&quot;&gt;loadFloatFromSharedPref&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception {\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mContext.getSharedPreferences(key, Context.MODE_PRIVATE);\n    &lt;span class=&quot;hljs-type&quot;&gt;Float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;restoredText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getFloat(key, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; restoredText;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Return long\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; key\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; null default is -1\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Long &lt;span class=&quot;hljs-title function_&quot;&gt;loadLongFromSharedPref&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception {\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mContext.getSharedPreferences(key, Context.MODE_PRIVATE);\n    &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;restoredText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getLong(key, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; restoredText;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Return boolean\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; key\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; null default is false\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Boolean &lt;span class=&quot;hljs-title function_&quot;&gt;loadBooleanFromSharedPref&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception {\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mContext.getSharedPreferences(key, Context.MODE_PRIVATE);\n    &lt;span class=&quot;hljs-type&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;restoredText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getBoolean(key, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; restoredText;\n}\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To store values in shared preferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PreferenceManager.getDefaultSharedPreferences(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\nSharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jayesh&quot;&lt;/span&gt;);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To retrieve values from shared preferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PreferenceManager.getDefaultSharedPreferences(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Use used this example simple and clear and checked&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;\n   &lt;span class=&quot;hljs-attr&quot;&gt;package&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.example.sairamkrishna.myapplication&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;android:allowBackup&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;android:icon&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;android:label&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@string/app_name&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;android:theme&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@style/AppTheme&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;activity&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;.MainActivity&quot;&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;android:label&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@string/app_name&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n\n         &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.intent.action.MAIN&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.intent.category.LAUNCHER&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n         &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;activity&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;manifest&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AppCompatActivity&lt;/span&gt; {\n   EditText ed1,ed2,ed3;\n   Button b1;\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;MyPREFERENCES&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;MyPrefs&quot;&lt;/span&gt; ;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;nameKey&quot;&lt;/span&gt;;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Phone&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;phoneKey&quot;&lt;/span&gt;;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Email&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;emailKey&quot;&lt;/span&gt;;\n\n   SharedPreferences sharedpreferences;\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n      &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n      setContentView(R.layout.activity_main);\n\n      ed1=(EditText)findViewById(R.id.editText);\n      ed2=(EditText)findViewById(R.id.editText2);\n      ed3=(EditText)findViewById(R.id.editText3);\n\n      b1=(Button)findViewById(R.id.button);\n      sharedpreferences = getSharedPreferences(MyPREFERENCES, Context.MODE_PRIVATE);\n\n      b1.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n         &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n         &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;n&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ed1.getText().toString();\n            &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ph&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ed2.getText().toString();\n            &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;e&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ed3.getText().toString();\n\n            SharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sharedpreferences.edit();\n\n            editor.putString(Name, n);\n            editor.putString(Phone, ph);\n            editor.putString(Email, e);\n            editor.commit();\n            Toast.makeText(MainActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Thanks&quot;&lt;/span&gt;,Toast.LENGTH_LONG).show();\n         }\n      });\n   }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using this &lt;a href=&quot;https://github.com/kcochibili/TinyDB--Android-Shared-Preferences-Turbo&quot; rel=&quot;nofollow&quot;&gt;simple library&lt;/a&gt;, here is how you make the calls to SharedPreferences..&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;TinyDB&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;tinydb&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TinyDB&lt;/span&gt;(context);\n\ntinydb.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;clickCount&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n\ntinydb.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;userName&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;john&quot;&lt;/span&gt;);\ntinydb.putBoolean(&lt;span class=&quot;hljs-string&quot;&gt;&quot;isUserMale&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;); \n\ntinydb.putList(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MyUsers&quot;&lt;/span&gt;, mUsersArray);\ntinydb.putImagePNG(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DropBox/WorkImages&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;MeAtlunch.png&quot;&lt;/span&gt;, lunchBitmap);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//These plus the corresponding get methods are all Included&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I wanted to add here that most of the snippets for this question will have something like MODE_PRIVATE when using SharedPreferences. Well, MODE_PRIVATE means that whatever you write into this shared preference can only be read by your application only.&lt;/p&gt;\n\n&lt;p&gt;Whatever key you pass to getSharedPreferences() method, android creates a file with that name and stores the preference data into it.\nAlso remember that getSharedPreferences() is supposed to be used when you intend to have multiple preference files for your application. If you intend to use single preference file and store all key-value pairs into it then use the getSharedPreference() method. Its weird why everyone (including myself) simply uses getSharedPreferences() flavor without even understanding the difference between the above two.&lt;/p&gt;\n\n&lt;p&gt;The following video tutorial should help\n&lt;a href=&quot;https://www.youtube.com/watch?v=2PcAQ1NBy98&quot; rel=&quot;nofollow&quot;&gt;https://www.youtube.com/watch?v=2PcAQ1NBy98&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;Simple and hassle-free ::  &quot;Android-SharedPreferences-Helper&quot; library&lt;/h2&gt;\n\n&lt;p&gt;Better late than never: I created &lt;a href=&quot;https://github.com/viralypatel/Android-SharedPreferences-Helper&quot; rel=&quot;nofollow&quot;&gt;the &quot;Android-SharedPreferences-Helper&quot; library&lt;/a&gt; to help reduce the complexity and effort of using &lt;code&gt;SharedPreferences&lt;/code&gt;. It also provides some extended functionality. Few things that it offers are as follows:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;ul&gt;\n  &lt;li&gt;One line initialization and setup&lt;/li&gt;\n  &lt;li&gt;Easily selecting whether to use default preferences or a custom preference file&lt;/li&gt;\n  &lt;li&gt;Predefined (data type defaults) and customizable (what you may choose) default values for each datatype&lt;/li&gt;\n  &lt;li&gt;Ability to set different default value for single use with just an additional param&lt;/li&gt;\n  &lt;li&gt;You can register and unregister OnSharedPreferenceChangeListener as you do for default class&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-less&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;dependencies&lt;/span&gt; {\n    ...\n    ...\n    &lt;span class=&quot;hljs-selector-tag&quot;&gt;compile&lt;/span&gt;(&lt;span class=&quot;hljs-attribute&quot;&gt;group&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;com.viralypatel.sharedpreferenceshelper&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attribute&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;library&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attribute&quot;&gt;version&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;1.1.0&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attribute&quot;&gt;ext&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;aar&apos;&lt;/span&gt;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Declaration of SharedPreferencesHelper object: (recommended at class\n  level)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-undefined&quot;&gt;SharedPreferencesHelper sph; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Instantiation of the SharedPreferencesHelper object: (recommended in\n  onCreate() method)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// use one of the following ways to instantiate&lt;/span&gt;\nsph = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SharedPreferencesHelper(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//this will use default shared preferences&lt;/span&gt;\nsph = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SharedPreferencesHelper(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;myappprefs&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// this will create a named shared preference file&lt;/span&gt;\nsph = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SharedPreferencesHelper(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;myappprefs&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// this will allow you to specify a mode&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Putting values into shared preferences&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Fairly simple! Unlike the default way (when using the SharedPreferences class) you&apos;ll NOT need to call &lt;code&gt;.edit()&lt;/code&gt; and &lt;code&gt;.commit()&lt;/code&gt; ever time.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;sph.putBoolean(&lt;span class=&quot;hljs-string&quot;&gt;&quot;boolKey&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\nsph.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;intKey&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;123&lt;/span&gt;);\nsph.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;stringKey&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;string value&quot;&lt;/span&gt;);\nsph.putLong(&lt;span class=&quot;hljs-string&quot;&gt;&quot;longKey&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;456876451&lt;/span&gt;);\nsph.putFloat(&lt;span class=&quot;hljs-string&quot;&gt;&quot;floatKey&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1.51f&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// putStringSet is supported only for android versions above HONEYCOMB&lt;/span&gt;\nSet name = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; HashSet();\nname.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Viral&quot;&lt;/span&gt;);\nname.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Patel&quot;&lt;/span&gt;);\nsph.putStringSet(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, name);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That&apos;s it! Your values are stored in the shared preferences.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Getting values from shared preferences&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Again, just one simple method call with the key name.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;sph.getBoolean(&lt;span class=&quot;hljs-string&quot;&gt;&quot;boolKey&quot;&lt;/span&gt;);\nsph.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;intKey&quot;&lt;/span&gt;);\nsph.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;stringKey&quot;&lt;/span&gt;);\nsph.getLong(&lt;span class=&quot;hljs-string&quot;&gt;&quot;longKey&quot;&lt;/span&gt;);\nsph.getFloat(&lt;span class=&quot;hljs-string&quot;&gt;&quot;floatKey&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// getStringSet is supported only for android versions above HONEYCOMB&lt;/span&gt;\nsph.getStringSet(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;It has a lot of other extended functionality&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Check the details of extended functionality, usage and installation instructions etc on the &lt;a href=&quot;https://github.com/viralypatel/Android-SharedPreferences-Helper&quot; rel=&quot;nofollow&quot;&gt;GitHub Repository Page&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I have created a Helper class to make my Life easy. This is a generic class and has a-lot of methods those are commonly used in Apps like Shared Preferences, Email Validity, Date Time Format. Copy this class in your code and access it&apos;s methods wherever you need.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.AlertDialog;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.ProgressDialog;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Context;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.DialogInterface;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.SharedPreferences;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.support.v4.app.FragmentActivity;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.view.inputmethod.InputMethodManager;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.EditText;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.Toast;\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.text.ParseException;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.text.SimpleDateFormat;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Date;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Random;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.regex.Matcher;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.regex.Pattern;\n &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.regex.PatternSyntaxException;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n* Created by Zohaib Hassan on 3/4/2016.\n*/&lt;/span&gt;\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Helper&lt;/span&gt; {\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; ProgressDialog pd;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;saveData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, String value, Context context)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; context.getApplicationContext()\n            .getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;appData&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    SharedPreferences.Editor editor;\n    editor = sp.edit();\n    editor.putString(key, value);\n    editor.commit();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deleteData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, Context context)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; context.getApplicationContext()\n            .getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;appData&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    SharedPreferences.Editor editor;\n    editor = sp.edit();\n    editor.remove(key);\n    editor.commit();\n\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getSaveData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, Context context)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; context.getApplicationContext()\n            .getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;appData&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sp.getString(key, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; data;\n\n}\n\n\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dateToUnix&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String dt, String format)&lt;/span&gt; {\n    SimpleDateFormat formatter;\n    &lt;span class=&quot;hljs-type&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; unixtime;\n    formatter = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SimpleDateFormat&lt;/span&gt;(format);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        date = formatter.parse(dt);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception ex) {\n\n        ex.printStackTrace();\n    }\n    unixtime = date.getTime();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; unixtime;\n\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; unixTime, String formate)&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;unixSeconds&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; unixTime;\n    &lt;span class=&quot;hljs-type&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(unixSeconds);\n    &lt;span class=&quot;hljs-type&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sdf&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SimpleDateFormat&lt;/span&gt;(formate);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;formattedDate&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sdf.format(date);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; formattedDate;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getFormattedDate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String date, String currentFormat,\n                                      String desiredFormat)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getData(dateToUnix(date, currentFormat), desiredFormat);\n}\n\n\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; lat1, &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; lon1, &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; lat2,\n                              &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; lon2, &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; unit)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;theta&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; lon1 - lon2;\n    &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dist&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Math.sin(deg2rad(lat1)) * Math.sin(deg2rad(lat2))\n            + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2))\n            * Math.cos(deg2rad(theta));\n    dist = Math.acos(dist);\n    dist = rad2deg(dist);\n    dist = dist * &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;1.1515&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (unit == &lt;span class=&quot;hljs-string&quot;&gt;&apos;K&apos;&lt;/span&gt;) {\n        dist = dist * &lt;span class=&quot;hljs-number&quot;&gt;1.609344&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (unit == &lt;span class=&quot;hljs-string&quot;&gt;&apos;N&apos;&lt;/span&gt;) {\n        dist = dist * &lt;span class=&quot;hljs-number&quot;&gt;0.8684&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (dist);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/* :: This function converts decimal degrees to radians : */&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/* ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; deg)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (deg * Math.PI / &lt;span class=&quot;hljs-number&quot;&gt;180.0&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/* :: This function converts radians to decimal degrees : */&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/* ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;rad2deg&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; rad)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (rad * &lt;span class=&quot;hljs-number&quot;&gt;180.0&lt;/span&gt; / Math.PI);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getRendNumber&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Random&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r.nextInt(&lt;span class=&quot;hljs-number&quot;&gt;360&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;hideKeyboard&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, EditText editText)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;InputMethodManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;imm&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (InputMethodManager) context\n            .getSystemService(Context.INPUT_METHOD_SERVICE);\n    imm.hideSoftInputFromWindow(editText.getWindowToken(), &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showLoder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, String message)&lt;/span&gt; {\n    pd = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt;(context);\n\n    pd.setCancelable(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    pd.setMessage(message);\n    pd.show();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showLoderImage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, String message)&lt;/span&gt; {\n    pd = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt;(context);\n    pd.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\n    pd.setCancelable(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    pd.setMessage(message);\n    pd.show();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dismissLoder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n    pd.dismiss();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;toast&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, String text)&lt;/span&gt; {\n\n    Toast.makeText(context, text, Toast.LENGTH_LONG).show();\n}\n&lt;span class=&quot;hljs-comment&quot;&gt;/*\n     public static Boolean connection(Context context) {\n    ConnectionDetector connection = new ConnectionDetector(context);\n    if (!connection.isConnectingToInternet()) {\n\n        Helper.showAlert(context, &quot;No Internet access...!&quot;);\n        //Helper.toast(context, &quot;No internet access..!&quot;);\n        return false;\n    } else\n        return true;\n}*/&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeMapFrgment&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(FragmentActivity fa, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; id)&lt;/span&gt; {\n\n    android.support.v4.app.Fragment fragment;\n    android.support.v4.app.FragmentManager fm;\n    android.support.v4.app.FragmentTransaction ft;\n    fm = fa.getSupportFragmentManager();\n    fragment = fm.findFragmentById(id);\n    ft = fa.getSupportFragmentManager().beginTransaction();\n    ft.remove(fragment);\n    ft.commit();\n\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; AlertDialog &lt;span class=&quot;hljs-title function_&quot;&gt;showDialog&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, String message)&lt;/span&gt; {\n    AlertDialog.&lt;span class=&quot;hljs-type&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AlertDialog&lt;/span&gt;.Builder(context);\n    builder.setMessage(message);\n\n    builder.setPositiveButton(&lt;span class=&quot;hljs-string&quot;&gt;&quot;OK&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DialogInterface&lt;/span&gt;.OnClickListener() {\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; id)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n\n        }\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; builder.create();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showAlert&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, String message)&lt;/span&gt; {\n    AlertDialog.&lt;span class=&quot;hljs-type&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AlertDialog&lt;/span&gt;.Builder(context);\n    builder.setTitle(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Alert&quot;&lt;/span&gt;);\n    builder.setMessage(message)\n            .setPositiveButton(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Ok&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DialogInterface&lt;/span&gt;.OnClickListener() {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(DialogInterface dialog, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; id)&lt;/span&gt; {\n                    dialog.dismiss();\n                }\n            }).show();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isURL&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String url)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (url == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foundMatch&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;Pattern&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;regex&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Pattern\n                .compile(\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\b(?:(https?|ftp|file)://|www\\\\.)?[-A-Z0-9+&amp;amp;#/%?=~_|$!:,.;]*[A-Z0-9+&amp;amp;@#/%=~_|$]\\\\.[-A-Z0-9+&amp;amp;@#/%?=~_|$!:,.;]*[A-Z0-9+&amp;amp;@#/%=~_|$]&quot;&lt;/span&gt;,\n                        Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);\n        &lt;span class=&quot;hljs-type&quot;&gt;Matcher&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;regexMatcher&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; regex.matcher(url);\n        foundMatch = regexMatcher.matches();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; foundMatch;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (PatternSyntaxException ex) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Syntax error in the regular expression&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;atLeastOneChr&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String string)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (string == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foundMatch&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;Pattern&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;regex&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Pattern.compile(&lt;span class=&quot;hljs-string&quot;&gt;&quot;[a-zA-Z0-9]&quot;&lt;/span&gt;,\n                Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);\n        &lt;span class=&quot;hljs-type&quot;&gt;Matcher&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;regexMatcher&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; regex.matcher(string);\n        foundMatch = regexMatcher.matches();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; foundMatch;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (PatternSyntaxException ex) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Syntax error in the regular expression&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isValidEmail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String email, Context context)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;expression&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[\\\\w\\\\.-]+@([\\\\w\\\\-]+\\\\.)+[A-Z]{2,4}$&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-type&quot;&gt;CharSequence&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;inputStr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; email;\n    &lt;span class=&quot;hljs-type&quot;&gt;Pattern&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Pattern.compile(expression, Pattern.CASE_INSENSITIVE);\n    &lt;span class=&quot;hljs-type&quot;&gt;Matcher&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;matcher&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; pattern.matcher(inputStr);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (matcher.matches()) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Helper.toast(context, &quot;Email is not valid..!&quot;);&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isValidUserName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String email, Context context)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;expression&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[0-9a-zA-Z]+$&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-type&quot;&gt;CharSequence&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;inputStr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; email;\n    &lt;span class=&quot;hljs-type&quot;&gt;Pattern&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Pattern.compile(expression, Pattern.CASE_INSENSITIVE);\n    &lt;span class=&quot;hljs-type&quot;&gt;Matcher&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;matcher&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; pattern.matcher(inputStr);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (matcher.matches()) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        Helper.toast(context, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Username is not valid..!&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isValidDateSlash&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String inDate)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dateFormat&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dd/mm/yyyy&quot;&lt;/span&gt;);\n    dateFormat.setLenient(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        dateFormat.parse(inDate.trim());\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (ParseException pe) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isValidDateDash&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String inDate)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dateFormat&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dd-mm-yyyy&quot;&lt;/span&gt;);\n    dateFormat.setLenient(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        dateFormat.parse(inDate.trim());\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (ParseException pe) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isValidDateDot&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String inDate)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dateFormat&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SimpleDateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dd.mm.yyyy&quot;&lt;/span&gt;);\n    dateFormat.setLenient(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        dateFormat.parse(inDate.trim());\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (ParseException pe) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;SharedPreferences.&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;identifier&quot;&lt;/span&gt;, \nMODE_PRIVATE).edit();\n&lt;span class=&quot;hljs-comment&quot;&gt;//identifier is the unique to fetch data from your SharedPreference.&lt;/span&gt;\n\n\neditor.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;keyword&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;); \n&lt;span class=&quot;hljs-comment&quot;&gt;// saved value place with 0.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//use this &quot;keyword&quot; to fetch saved value again.&lt;/span&gt;\neditor.commit();&lt;span class=&quot;hljs-comment&quot;&gt;//important line without this line your value is not stored in preference   &lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// fetch the stored data using ....&lt;/span&gt;\n\n&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;identifier&quot;&lt;/span&gt;, MODE_PRIVATE); \n&lt;span class=&quot;hljs-comment&quot;&gt;// here both identifier will same&lt;/span&gt;\n\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fetchvalue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;keyword&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// here keyword will same as used above.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// 0 is default value when you nothing save in preference that time fetch value is 0.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;you need to use SharedPreferences in AdapterClass or any other.\nthat time just use this declaration and use same ass above.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vhdl&quot;&gt;SharedPreferences.Editor editor = &lt;span class=&quot;hljs-keyword&quot;&gt;context&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;idetifier&quot;&lt;/span&gt;, \n&lt;span class=&quot;hljs-keyword&quot;&gt;Context&lt;/span&gt;.MODE_PRIVATE).edit();\nSharedPreferences prefs = &lt;span class=&quot;hljs-keyword&quot;&gt;context&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;identifier&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;Context&lt;/span&gt;.MODE_PRIVATE);\n\n//here &lt;span class=&quot;hljs-keyword&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; your application &lt;span class=&quot;hljs-keyword&quot;&gt;context&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;for string or boolean value &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;editor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;stringkeyword&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;your string&quot;&lt;/span&gt;); \neditor.putBoolean(&lt;span class=&quot;hljs-string&quot;&gt;&quot;booleankeyword&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;your boolean value&quot;&lt;/span&gt;);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;fetch data same as above &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; fetchvalue = prefs.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;keyword&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-built_in&quot;&gt;Boolean&lt;/span&gt; fetchvalue = prefs.getBoolean(&lt;span class=&quot;hljs-string&quot;&gt;&quot;keyword&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;2.for Storing in shared prefrence  &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;SharedPreferences.Editor editor = \n&lt;span class=&quot;hljs-built_in&quot;&gt;getSharedPreferences&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DeviceToken&quot;&lt;/span&gt;,MODE_PRIVATE).&lt;span class=&quot;hljs-built_in&quot;&gt;edit&lt;/span&gt;();\n                    editor.&lt;span class=&quot;hljs-built_in&quot;&gt;putString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DeviceTokenkey&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;ABABABABABABABB12345&quot;&lt;/span&gt;);\neditor.&lt;span class=&quot;hljs-built_in&quot;&gt;apply&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2.for retrieving the same use&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DeviceToken&quot;&lt;/span&gt;, \n MODE_PRIVATE);\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceToken&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DeviceTokenkey&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here i have created an Helper class to use preferences in android.&lt;/p&gt;\n\n&lt;p&gt;This is the helper class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;public class PrefsUtil {\n\npublic static SharedPreferences &lt;span class=&quot;hljs-built_in&quot;&gt;getPreference&lt;/span&gt;() {\n    return PreferenceManager&lt;span class=&quot;hljs-selector-class&quot;&gt;.getDefaultSharedPreferences&lt;/span&gt;(Applicatoin.getAppContext());\n}\n\npublic static void &lt;span class=&quot;hljs-built_in&quot;&gt;putBoolean&lt;/span&gt;(String key, boolean value) {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;getPreference&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.edit&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.putBoolean&lt;/span&gt;(key, value)\n            &lt;span class=&quot;hljs-selector-class&quot;&gt;.apply&lt;/span&gt;();\n}\n\npublic static boolean &lt;span class=&quot;hljs-built_in&quot;&gt;getBoolean&lt;/span&gt;(String key) {\n    return &lt;span class=&quot;hljs-built_in&quot;&gt;getPreference&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.getBoolean&lt;/span&gt;(key, false);\n}\n\npublic static void &lt;span class=&quot;hljs-built_in&quot;&gt;putInt&lt;/span&gt;(String key, int value) {\n\n    &lt;span class=&quot;hljs-built_in&quot;&gt;getPreference&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.edit&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.putInt&lt;/span&gt;(key, value)&lt;span class=&quot;hljs-selector-class&quot;&gt;.apply&lt;/span&gt;();\n\n}\n\npublic static void &lt;span class=&quot;hljs-built_in&quot;&gt;delKey&lt;/span&gt;(String key) {\n\n    &lt;span class=&quot;hljs-built_in&quot;&gt;getPreference&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.edit&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.remove&lt;/span&gt;(key)&lt;span class=&quot;hljs-selector-class&quot;&gt;.apply&lt;/span&gt;();\n\n}\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"339":["\n&lt;p&gt;Python treats variables in functions differently depending on whether you assign values to them from inside or outside the function.  If a variable is assigned within a function, it is treated by default as a local variable.  Therefore, when you uncomment the line, you are trying to reference the local variable &lt;code&gt;c&lt;/code&gt; before any value has been assigned to it.&lt;/p&gt;\n&lt;p&gt;If you want the variable &lt;code&gt;c&lt;/code&gt; to refer to the global &lt;code&gt;c = 3&lt;/code&gt; assigned before the function, put&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; c\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;as the first line of the function.&lt;/p&gt;\n&lt;p&gt;As for python 3, there is now&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;nonlocal&lt;/span&gt; c\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;that you can use to refer to the nearest enclosing function scope that has a &lt;code&gt;c&lt;/code&gt; variable.&lt;/p&gt;\n    ","\n&lt;p&gt;Python is a little weird in that it keeps everything in a dictionary for the various scopes.  The original a,b,c are in the uppermost scope and so in that uppermost dictionary.  The function has its own dictionary.  When you reach the &lt;code&gt;print(a)&lt;/code&gt; and &lt;code&gt;print(b)&lt;/code&gt; statements, there&apos;s nothing by that name in the dictionary, so Python looks up the list and finds them in the global dictionary.&lt;/p&gt;\n\n&lt;p&gt;Now we get to &lt;code&gt;c+=1&lt;/code&gt;, which is, of course, equivalent to &lt;code&gt;c=c+1&lt;/code&gt;.  When Python scans that line, it says &quot;aha, there&apos;s a variable named c, I&apos;ll put it into my local scope dictionary.&quot;  Then when it goes looking for a value for c for the c on the right hand side of the assignment, it finds its &lt;em&gt;local variable named c&lt;/em&gt;, which has no value yet, and so throws the error.&lt;/p&gt;\n\n&lt;p&gt;The statement &lt;code&gt;global c&lt;/code&gt; mentioned above simply tells the parser that it uses the &lt;code&gt;c&lt;/code&gt; from the global scope and so doesn&apos;t need a new one.&lt;/p&gt;\n\n&lt;p&gt;The reason it says there&apos;s an issue on the line it does is because it is effectively looking for the names before it tries to generate code, and so in some sense doesn&apos;t think it&apos;s really doing that line yet.  I&apos;d argue that is a usability bug, but it&apos;s generally a good practice to just learn not to take a compiler&apos;s messages &lt;em&gt;too&lt;/em&gt; seriously.&lt;/p&gt;\n\n&lt;p&gt;If it&apos;s any comfort, I spent probably a day digging and experimenting with this same issue before I found something Guido had written about the dictionaries that Explained Everything.&lt;/p&gt;\n\n&lt;h3&gt;Update, see comments:&lt;/h3&gt;\n\n&lt;p&gt;It doesn&apos;t scan the code twice, but it does scan the code in two phases, lexing and parsing.&lt;/p&gt;\n\n&lt;p&gt;Consider how the parse of this line of code works.  The lexer reads the source text and breaks it into lexemes, the &quot;smallest components&quot; of the grammar.  So when it hits the line&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;c+=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;it breaks it up into something like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;SYMBOL(c) OPERATOR(+=) DIGIT(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The parser eventually wants to make this into a parse tree and execute it, but since it&apos;s an assignment, before it does, it looks for the name c in the local dictionary, doesn&apos;t see it, and inserts it in the dictionary, marking it as uninitialized. In a fully compiled language, it would just go into the symbol table and wait for the parse, but since it WON&apos;T have the luxury of a second pass, the lexer does a little extra work to make life easier later on.   Only, then it sees the OPERATOR, sees that the rules say &quot;if you have an operator += the left hand side must have been initialized&quot; and says &quot;whoops!&quot;&lt;/p&gt;\n\n&lt;p&gt;The point here is that it &lt;em&gt;hasn&apos;t really started the parse of the line yet&lt;/em&gt;.  This is all happening sort of preparatory to the actual parse, so the line counter hasn&apos;t advanced to the next line.  Thus when it signals the error, it still thinks its on the previous line.&lt;/p&gt;\n\n&lt;p&gt;As I say, you could argue it&apos;s a usability bug, but its actually a fairly common thing.  Some compilers are more honest about it and say &quot;error on or around line XXX&quot;, but this one doesn&apos;t.&lt;/p&gt;\n    ","\n&lt;p&gt;Taking a look at the disassembly may clarify what is happening:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;():\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;   &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; a\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;   &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; b\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;   a = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; dis\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dis.dis(f)\n\n  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; LOAD_FAST                &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; (a)\n              &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; PRINT_ITEM\n              &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; PRINT_NEWLINE\n\n  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; LOAD_GLOBAL              &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; (b)\n              &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt; PRINT_ITEM\n              &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; PRINT_NEWLINE\n\n  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; LOAD_CONST               &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n             &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt; STORE_FAST               &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; (a)\n             &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt; LOAD_CONST               &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; (&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;)\n             &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt; RETURN_VALUE\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As you can see, the bytecode for accessing a is &lt;code&gt;LOAD_FAST&lt;/code&gt;, and for b, &lt;code&gt;LOAD_GLOBAL&lt;/code&gt;.  This is because the compiler has identified that a is assigned to within the function, and classified it as a local variable.  The access mechanism for locals is fundamentally different for globals - they are statically assigned an offset in the frame&apos;s variables table, meaning lookup is a quick index, rather than the more expensive dict lookup as for globals.  Because of this, Python is reading the &lt;code&gt;print a&lt;/code&gt; line as &quot;get the value of local variable &apos;a&apos; held in slot 0, and print it&quot;, and when it detects that this variable is still uninitialised, raises an exception.&lt;/p&gt;\n    ","\n&lt;p&gt;Python has rather interesting behavior when you try traditional global variable semantics.  I don&apos;t remember the details, but you can read the value of a variable declared in &apos;global&apos; scope just fine, but if you want to modify it, you have to use the &lt;code&gt;global&lt;/code&gt; keyword.  Try changing &lt;code&gt;test()&lt;/code&gt; to this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;():\n    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; c\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a)\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(b)\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(c)    &lt;span class=&quot;hljs-comment&quot;&gt;# (A)&lt;/span&gt;\n    c+=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        &lt;span class=&quot;hljs-comment&quot;&gt;# (B)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, the reason you are getting this error is because you can also declare a new variable inside that function with the same name as a &apos;global&apos; one, and it would be completely separate.  The interpreter thinks you are trying to make a new variable in this scope called &lt;code&gt;c&lt;/code&gt; and modify it all in one operation, which isn&apos;t allowed in Python because this new &lt;code&gt;c&lt;/code&gt; wasn&apos;t initialized.&lt;/p&gt;\n    ","\n&lt;p&gt;The best example that makes it clear is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;bar = &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;foo&lt;/span&gt;():\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; bar\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;:\n        bar = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;when calling &lt;code&gt;foo()&lt;/code&gt; , this also &lt;strong&gt;raises&lt;/strong&gt; &lt;code&gt;UnboundLocalError&lt;/code&gt; although we will never reach to line &lt;code&gt;bar=0&lt;/code&gt;, so logically local variable should never be created.&lt;/p&gt;\n\n&lt;p&gt;The mystery lies in &quot;&lt;strong&gt;Python is an Interpreted Language&lt;/strong&gt;&quot; and the declaration of the function &lt;code&gt;foo&lt;/code&gt; is interpreted as a single statement (i.e. a compound statement), it just interprets it dumbly and creates local and global scopes. So &lt;code&gt;bar&lt;/code&gt; is recognized in local scope before execution.&lt;/p&gt;\n\n&lt;p&gt;For &lt;strong&gt;more examples&lt;/strong&gt; like this Read this post: &lt;a href=&quot;http://blog.amir.rachum.com/blog/2013/07/09/python-common-newbie-mistakes-part-2/&quot; rel=&quot;noreferrer&quot;&gt;http://blog.amir.rachum.com/blog/2013/07/09/python-common-newbie-mistakes-part-2/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This post provides a Complete Description and Analyses of the Python Scoping of variables:&lt;/p&gt;\n    ","\n&lt;p&gt;Here are two links that may help&lt;/p&gt;\n\n&lt;p&gt;1: &lt;a href=&quot;http://docs.python.org/3.1/faq/programming.html?highlight=nonlocal#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value&quot; rel=&quot;nofollow noreferrer&quot;&gt;docs.python.org/3.1/faq/programming.html?highlight=nonlocal#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;2: &lt;a href=&quot;http://docs.python.org/3.1/faq/programming.html?highlight=nonlocal#how-do-i-write-a-function-with-output-parameters-call-by-reference&quot; rel=&quot;nofollow noreferrer&quot;&gt;docs.python.org/3.1/faq/programming.html?highlight=nonlocal#how-do-i-write-a-function-with-output-parameters-call-by-reference&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;link one describes the error UnboundLocalError.  Link two can help with with re-writing your test function.  Based on link two, the original problem could be rewritten as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a, b, c = (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (a, b, c)\n(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt; (a, b, c):\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (a)\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (b)\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (c)\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;    c += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a, b, c\n...\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a, b, c = test (a, b, c)\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (a, b ,c)\n(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is not a direct answer to your question, but it is closely related, as it&apos;s another gotcha caused by the relationship between augmented assignment and function scopes.&lt;/p&gt;\n\n&lt;p&gt;In most cases, you tend to think of augmented assignment (&lt;code&gt;a += b&lt;/code&gt;) as exactly equivalent to simple assignment (&lt;code&gt;a = a + b&lt;/code&gt;). It is possible to get into some trouble with this though, in one corner case. Let me explain:&lt;/p&gt;\n\n&lt;p&gt;The way Python&apos;s simple assignment works means that if &lt;code&gt;a&lt;/code&gt; is passed into a function (like &lt;code&gt;func(a)&lt;/code&gt;; note that Python is always pass-by-reference), then &lt;code&gt;a = a + b&lt;/code&gt; will not modify the &lt;code&gt;a&lt;/code&gt; that is passed in. Instead, it will just modify the local pointer to &lt;code&gt;a&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;But if you use &lt;code&gt;a += b&lt;/code&gt;, then it is sometimes implemented as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;a = a + b\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or sometimes (if the method exists) as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;a.__iadd__(b)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the first case (as long as &lt;code&gt;a&lt;/code&gt; is not declared global), there are no side-effects outside local scope, as the assignment to &lt;code&gt;a&lt;/code&gt; is just a pointer update.&lt;/p&gt;\n\n&lt;p&gt;In the second case, &lt;code&gt;a&lt;/code&gt; will actually modify itself, so all references to &lt;code&gt;a&lt;/code&gt; will point to the modified version. This is demonstrated by the following code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;copy_on_write&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;):\n      a = a + a\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;inplace_add&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;):\n      a += a\na = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\ncopy_on_write(a)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; a &lt;span class=&quot;hljs-comment&quot;&gt;# [1]&lt;/span&gt;\ninplace_add(a)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; a &lt;span class=&quot;hljs-comment&quot;&gt;# [1, 1]&lt;/span&gt;\nb = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\ncopy_on_write(b)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; b &lt;span class=&quot;hljs-comment&quot;&gt;# [1]&lt;/span&gt;\ninplace_add(b)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; b &lt;span class=&quot;hljs-comment&quot;&gt;# 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So the trick is to avoid augmented assignment on function arguments (I try to only use it for local/loop variables). Use simple assignment, and you will be safe from ambiguous behaviour. &lt;/p&gt;\n    ","\n&lt;p&gt;The Python interpreter will read a function as a complete unit. I think of it as reading it in two passes, once to gather its closure (the local variables), then again to turn it into byte-code.&lt;/p&gt;\n\n&lt;p&gt;As I&apos;m sure you were already aware, any name used on the left of a &apos;=&apos; is implicitly a local variable. More than once I&apos;ve been caught out by changing a variable access to a += and it&apos;s suddenly a different variable.&lt;/p&gt;\n\n&lt;p&gt;I also wanted to point out it&apos;s not really anything to do with global scope specifically. You get the same behaviour with nested functions.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;c+=1&lt;/code&gt; assigns &lt;code&gt;c&lt;/code&gt;, python assumes assigned variables are local, but in this case it hasn&apos;t been declared locally.&lt;/p&gt;\n\n&lt;p&gt;Either use the &lt;code&gt;global&lt;/code&gt; or &lt;code&gt;nonlocal&lt;/code&gt; keywords. &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;nonlocal&lt;/code&gt; works only in python 3, so if you&apos;re using python 2 and don&apos;t want to make your variable global, you can use a mutable object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;my_variables = { &lt;span class=&quot;hljs-comment&quot;&gt;# a mutable object&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;():\n    my_variables[&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;] +=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\ntest()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The best way to reach class variable is directly accesing by class name&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Employee&lt;/span&gt;:\n    counter=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        Employee.counter+=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can also get this message if you define a variable with the same name as a method.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;teams&lt;/span&gt;():\n    ...\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;some_other_method&lt;/span&gt;():\n    teams = teams()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The solution, is to rename method &lt;code&gt;teams()&lt;/code&gt; to something else like &lt;code&gt;get_teams()&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Since it is only used locally, the Python message is rather misleading!&lt;/p&gt;\n&lt;p&gt;You end up with something like this to get around it:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;teams&lt;/span&gt;():\n    ...\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;some_other_method&lt;/span&gt;():\n    teams = get_teams()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This issue can also occur when the &lt;code&gt;del&lt;/code&gt; keyword is utilized on the variable down the line, after initialization, typically in a loop or a conditional block.&lt;/p&gt;\n    ","\n&lt;p&gt;The same problem bothers me. Using &lt;code&gt;nonlocal&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt; can solve the problem.&lt;br&gt;\nHowever, attention is needed for the usage of &lt;code&gt;nonlocal&lt;/code&gt;, it works for nested functions. However, at the module level, it does not work. See &lt;a href=&quot;https://www.programiz.com/python-programming/global-local-nonlocal-variables#Nonlocal%20Variables&quot; rel=&quot;nofollow noreferrer&quot;&gt;examples&lt;/a&gt; here.&lt;/p&gt;\n    "],"340":["\n&lt;p&gt;You want this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;a&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt; = []\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Declaring the variables inside the class declaration makes them &quot;class&quot; members and not instance members. Declaring them inside the &lt;code&gt;__init__&lt;/code&gt; method makes sure that a new instance of the members is created alongside every new instance of the object, which is the behavior you&apos;re looking for.&lt;/p&gt;\n    ","\n&lt;p&gt;The accepted answer works but a little more explanation does not hurt. &lt;/p&gt;\n\n&lt;p&gt;Class attributes do not become instance attributes when an instance is created. They become instance attributes when a value is assigned to them.&lt;/p&gt;\n\n&lt;p&gt;In the original code no value is assigned to &lt;code&gt;list&lt;/code&gt; attribute after instantiation; so it remains a class attribute. Defining list inside &lt;code&gt;__init__&lt;/code&gt; works because &lt;code&gt;__init__&lt;/code&gt; is called after instantiation. Alternatively, this code would also produce the desired output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;a&lt;/span&gt;:\n    &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt; = []\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y = a()\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x = a()\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt; = []\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt; = []\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;.append(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;.append(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;.append(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;.append(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(x.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;)\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(y.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;)\n[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, the confusing scenario in the question will never happen to immutable objects such as numbers and strings, because their value cannot be changed without assignment. For example a code similar to the original with string attribute type works without any problem:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;a&lt;/span&gt;:\n    string = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x = a()\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y = a()\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x.string += &lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y.string += &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x.string\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y.string\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So to summarize: &lt;strong&gt;class attributes become instance attributes if and only if a value is assigned to them after instantiation, being in the &lt;code&gt;__init__&lt;/code&gt; method or not&lt;/strong&gt;. This is a good thing because this way you can have static attributes if you never assign a value to an attribute after instantiation.&lt;/p&gt;\n    ","\n&lt;p&gt;Although the accepted anwer is spot on, I would like to add a bit description.&lt;/p&gt;\n\n&lt;p&gt;Let&apos;s do a small exercise &lt;/p&gt;\n\n&lt;p&gt;first of all define a class as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;A&lt;/span&gt;:\n    temp = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Skyharbor&apos;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, x&lt;/span&gt;):\n        self.x = x\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, y&lt;/span&gt;):\n        self.temp = y\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So what do we have here?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;We have a very simple class which has an attribute &lt;code&gt;temp&lt;/code&gt; which is a string&lt;/li&gt;\n&lt;li&gt;An &lt;code&gt;__init__&lt;/code&gt; method which sets &lt;code&gt;self.x&lt;/code&gt; &lt;/li&gt;\n&lt;li&gt;A change method sets &lt;code&gt;self.temp&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Pretty straight forward so far yeah? Now let&apos;s start playing around with this class. Let&apos;s initialize  this class first:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;a = A(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Tesseract&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now do the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a.temp)\nSkyharbor\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(A.temp)\nSkyharbor\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Well, &lt;code&gt;a.temp&lt;/code&gt; worked as expected but how the hell did &lt;code&gt;A.temp&lt;/code&gt; work? Well it worked because temp is a class attribute. Everything in python is an object. Here A is also an object of class &lt;code&gt;type&lt;/code&gt;. Thus the attribute temp is an attribute held by the &lt;code&gt;A&lt;/code&gt; class and if you change the value of temp through &lt;code&gt;A&lt;/code&gt; (and not through an instance of &lt;code&gt;a&lt;/code&gt;), the changed value is going to be reflected in all the instance of &lt;code&gt;A&lt;/code&gt; class.\nLet&apos;s go ahead and do that:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;A.temp = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Monuments&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(A.temp)\nMonuments\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a.temp)\nMonuments\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Interesting isn&apos;t it? And &lt;strong&gt;note that &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt; are still the same&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Any Python object is automatically given a &lt;code&gt;__dict__&lt;/code&gt; attribute, which contains its list of attributes. Let&apos;s investigate what this dictionary contains for our example objects:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(A.__dict__)\n{\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;change&apos;&lt;/span&gt;: &amp;lt;function change at &lt;span class=&quot;hljs-number&quot;&gt;0x7f5e26fee6e0&lt;/span&gt;&amp;gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;__module__&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;__main__&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;__init__&apos;&lt;/span&gt;: &amp;lt;function __init__ at &lt;span class=&quot;hljs-number&quot;&gt;0x7f5e26fee668&lt;/span&gt;&amp;gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;temp&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Monuments&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;__doc__&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a.__dict__)\n{x: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tesseract&apos;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Note that &lt;code&gt;temp&lt;/code&gt; attribute is listed among &lt;code&gt;A&lt;/code&gt; class&apos;s attributes while &lt;code&gt;x&lt;/code&gt; is listed for the instance.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;So how come that we get a defined value of &lt;code&gt;a.temp&lt;/code&gt; if it is not even listed for the instance &lt;code&gt;a&lt;/code&gt;. Well that&apos;s the magic of &lt;code&gt;__getattribute__()&lt;/code&gt; method. In Python the dotted syntax automatically invokes this method so when we write &lt;code&gt;a.temp&lt;/code&gt;, Python executes &lt;code&gt;a.__getattribute__(&apos;temp&apos;)&lt;/code&gt;. That method performs the attribute lookup action, i.e. finds the value of the attribute by looking in different places.&lt;/p&gt;\n\n&lt;p&gt;The standard implementation of &lt;code&gt;__getattribute__()&lt;/code&gt; searches first the internal dictionary (&lt;strong&gt;dict&lt;/strong&gt;) of an object, then the type of the object itself. In this case &lt;code&gt;a.__getattribute__(&apos;temp&apos;)&lt;/code&gt; executes first &lt;code&gt;a.__dict__[&apos;temp&apos;]&lt;/code&gt; and then &lt;code&gt;a.__class__.__dict__[&apos;temp&apos;]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Okay now let&apos;s use our &lt;code&gt;change&lt;/code&gt; method:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.change(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Intervals&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a.temp)\nIntervals\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(A.temp)\nMonuments\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Well now that we have used &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;print(a.temp)&lt;/code&gt; gives us a different value from &lt;code&gt;print(A.temp)&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Now if we compare &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt;, they will be different.&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You declared &quot;list&quot; as a &quot;class level property&quot; and not &quot;instance level property&quot;.  In order to have properties scoped at the instance level, you need to initialize them through referencing with the &quot;self&quot; parameter in the &lt;code&gt;__init__&lt;/code&gt; method (or elsewhere depending on the situation).&lt;/p&gt;\n\n&lt;p&gt;You don&apos;t strictly have to initialize the instance properties in the &lt;code&gt;__init__&lt;/code&gt; method but it makes for easier understanding.&lt;/p&gt;\n    ","\n&lt;p&gt;So nearly every response here seems to miss a particular point.  Class variables &lt;strong&gt;never&lt;/strong&gt; become instance variables as demonstrated by the code below.  By utilizing a metaclass to intercept variable assignment at the class level, we can see that when a.myattr is reassigned, the field assignment magic method on the class is not called.  This is because the assignment &lt;strong&gt;creates a new instance variable&lt;/strong&gt;.  This behavior has &lt;strong&gt;absolutely nothing&lt;/strong&gt; to do with the class variable as demonstrated by the second class which has no class variables and yet still allows field assignment.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;mymeta&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;type&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;cls, name, bases, d&lt;/span&gt;):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;pass&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__setattr__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;cls, attr, value&lt;/span&gt;):\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;setting &quot;&lt;/span&gt; + attr)\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(mymeta, cls).__setattr__(attr, value)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;myclass&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;object&lt;/span&gt;):\n    __metaclass__ = mymeta\n    myattr = []\n\na = myclass()\na.myattr = []           &lt;span class=&quot;hljs-comment&quot;&gt;#NOTHING IS PRINTED&lt;/span&gt;\nmyclass.myattr = [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]    &lt;span class=&quot;hljs-comment&quot;&gt;#change is printed here&lt;/span&gt;\nb = myclass()\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(b.myattr)         &lt;span class=&quot;hljs-comment&quot;&gt;#pass through lookup on the base class&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;expando&lt;/span&gt;(&lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;object&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;pass&lt;/span&gt;\n\na = expando()\na.random = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;            &lt;span class=&quot;hljs-comment&quot;&gt;#no class variable required&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(a.random)         &lt;span class=&quot;hljs-comment&quot;&gt;#but it still works&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;IN SHORT&lt;/strong&gt; Class variables have NOTHING to do with instance variables.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;More clearly&lt;/strong&gt; They just happen to be in the scope for lookups on instances. Class variables are in fact &lt;em&gt;instance variables&lt;/em&gt; on the class object itself.  You can also have &lt;em&gt;metaclass variables&lt;/em&gt; if you want as well because metaclasses themselves are objects too.  Everything is an object whether it is used to create other objects or not, so do not get bound up in the semantics of other languages usage of the word class.  In python, a class is really just an object that is used to determine how to create other objects and what their behaviors will be.  Metaclasses are classes that create classes, just to further illustrate this point. &lt;/p&gt;\n    ","\n&lt;p&gt;Yes you must declare in the &quot;constructor&quot; if you want that the list becomes an object property and not a class property.&lt;/p&gt;\n    ","\n&lt;p&gt;To protect your variable shared by other instance you need to create new instance variable each time you create an instance. When you are declaring a variable inside a class it&apos;s class variable and shared by all instance. If you want to make it for instance wise need to use the &lt;strong&gt;init&lt;/strong&gt; method to reinitialize the variable as  refer to the instance  &lt;/p&gt;\n\n&lt;p&gt;From &lt;a href=&quot;https://www.programiz.com/python-programming/class&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;em&gt;Python Objects and Class&lt;/em&gt; by Programiz.com&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;code&gt;__init__()&lt;/code&gt; function. This special function gets called whenever a new object of that class is instantiated.&lt;/p&gt;\n  \n  &lt;p&gt;This type of function is also called constructors in Object Oriented\n  Programming (OOP). We normally use it to initialize all the variables.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;example&lt;/span&gt;:\n    &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;=[] &lt;span class=&quot;hljs-comment&quot;&gt;#This is class variable shared by all instance&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt; = [] &lt;span class=&quot;hljs-comment&quot;&gt;#This is instance variable referred to specific instance&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"page":"55","randomQuestions":[{"title":"Is there a CSS parent selector?","slug":"is-there-a-css-parent-selector-1657384430692"},{"title":"Difference between sh and Bash","slug":"difference-between-sh-and-bash-1657388197713"},{"title":"How do I format a date in JavaScript?","slug":"how-do-i-format-a-date-in-javascript-1657384649498"},{"title":"What are the rules about using an underscore in a C++ identifier?","slug":"what-are-the-rules-about-using-an-underscore-in-a-c++-identifier-1657384557197"},{"title":"How to count the number of set bits in a 32-bit integer?","slug":"how-to-count-the-number-of-set-bits-in-a-32-bit-integer-1657388437370"},{"title":"Why does my function that calls an API or launches a coroutine return an empty or null value?","slug":"why-does-my-function-that-calls-an-api-or-launches-a-coroutine-return-an-empty-or-null-value-1657388483820"},{"title":"Secure hash and salt for PHP passwords","slug":"secure-hash-and-salt-for-php-passwords-1657387363258"},{"title":"How to evaluate a math expression given in string form?","slug":"how-to-evaluate-a-math-expression-given-in-string-form-1657387797852"},{"title":"Submit same Partial View called multiple times data to controller?","slug":"submit-same-partial-view-called-multiple-times-data-to-controller-1657387887213"},{"title":"What does \"list comprehension\" and similar mean? How does it work and how can I use it?","slug":"what-does-\"list-comprehension\"-and-similar-mean-how-does-it-work-and-how-can-i-use-it-1657387996940"},{"title":"Is there a \"previous sibling\" selector?","slug":"is-there-a-\"previous-sibling\"-selector-1657384771067"},{"title":"The Definitive C++ Book Guide and List","slug":"the-definitive-c++-book-guide-and-list-1657384247395"},{"title":"Error in finding last used cell in Excel with VBA","slug":"error-in-finding-last-used-cell-in-excel-with-vba-1657384584748"},{"title":"Why can templates only be implemented in the header file?","slug":"why-can-templates-only-be-implemented-in-the-header-file-1657384341933"},{"title":"What is ViewModel in MVC?","slug":"what-is-viewmodel-in-mvc-1657387451244"},{"title":"Methods in ES6 objects: using arrow functions","slug":"methods-in-es6-objects:-using-arrow-functions-1657388249058"},{"title":"Why can't I store a value and a reference to that value in the same struct?","slug":"why-can't-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct-1657387506828"},{"title":"Why are these numbers not equal?","slug":"why-are-these-numbers-not-equal-1657384729559"},{"title":"How can I read inputs as numbers?","slug":"how-can-i-read-inputs-as-numbers-1657384503324"},{"title":"UTF-8 all the way through","slug":"utf-8-all-the-way-through-1657384323434"}]},"__N_SSG":true}