{"pageProps":{"data":{"count":610,"rows":[{"id":330,"title":"Cross-thread operation not valid: Control accessed from a thread other than the thread it was created on","slug":"cross-thread-operation-not-valid:-control-accessed-from-a-thread-other-than-the-thread-it-was-created-on-1657387659019","postType":"QUESTION","createdAt":"2022-07-09T17:27:39.000Z","updatedAt":"2022-07-09T17:27:39.000Z","tags":[{"id":1902,"name":"invoke","slug":"invoke","createdAt":"2022-07-09T17:27:39.000Z","updatedAt":"2022-07-09T17:27:39.000Z","Questions_Tags":{"questionId":330,"tagId":1902}},{"id":1903,"name":"winforms","slug":"winforms","createdAt":"2022-07-09T17:27:39.000Z","updatedAt":"2022-07-09T17:27:39.000Z","Questions_Tags":{"questionId":330,"tagId":1903}}]},{"id":329,"title":"Get the values from the \"GET\" parameters (JavaScript) [duplicate]","slug":"get-the-values-from-the-\"get\"-parameters-(javascript)-duplicate-1657387656693","postType":"QUESTION","createdAt":"2022-07-09T17:27:36.000Z","updatedAt":"2022-07-09T17:27:36.000Z","tags":[{"id":1899,"name":"url-parameters","slug":"url-parameters","createdAt":"2022-07-09T17:27:36.000Z","updatedAt":"2022-07-09T17:27:36.000Z","Questions_Tags":{"questionId":329,"tagId":1899}}]},{"id":328,"title":"How can I convert ereg expressions to preg in PHP?","slug":"how-can-i-convert-ereg-expressions-to-preg-in-php-1657387652855","postType":"QUESTION","createdAt":"2022-07-09T17:27:32.000Z","updatedAt":"2022-07-09T17:27:32.000Z","tags":[{"id":1893,"name":"preg-replace","slug":"preg-replace","createdAt":"2022-07-09T17:27:32.000Z","updatedAt":"2022-07-09T17:27:32.000Z","Questions_Tags":{"questionId":328,"tagId":1893}},{"id":1894,"name":"preg-match","slug":"preg-match","createdAt":"2022-07-09T17:27:32.000Z","updatedAt":"2022-07-09T17:27:32.000Z","Questions_Tags":{"questionId":328,"tagId":1894}},{"id":1895,"name":"pcre","slug":"pcre","createdAt":"2022-07-09T17:27:32.000Z","updatedAt":"2022-07-09T17:27:32.000Z","Questions_Tags":{"questionId":328,"tagId":1895}},{"id":1896,"name":"ereg","slug":"ereg","createdAt":"2022-07-09T17:27:32.000Z","updatedAt":"2022-07-09T17:27:32.000Z","Questions_Tags":{"questionId":328,"tagId":1896}}]},{"id":327,"title":"Copy array by value","slug":"copy-array-by-value-1657387649531","postType":"QUESTION","createdAt":"2022-07-09T17:27:29.000Z","updatedAt":"2022-07-09T17:27:29.000Z","tags":[]},{"id":326,"title":"How do I vertically center text with CSS? [duplicate]","slug":"how-do-i-vertically-center-text-with-css-duplicate-1657387645821","postType":"QUESTION","createdAt":"2022-07-09T17:27:25.000Z","updatedAt":"2022-07-09T17:27:25.000Z","tags":[]}]},"answers":{"326":["\n&lt;p&gt;You can try this basic approach:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; dashed &lt;span class=&quot;hljs-number&quot;&gt;#f69c55&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Hello World!\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;It only works for a single line of text though, because we set the line&apos;s height to the same height as the containing box element.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;A more versatile approach&lt;/h2&gt;\n\n&lt;p&gt;This is another way to align text vertically. This solution will work for a single line and multiple lines of text, but it still requires a fixed height container:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; dashed &lt;span class=&quot;hljs-number&quot;&gt;#f69c55&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;span&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: normal;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello World!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;The CSS just sizes the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, vertically center aligns the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; by setting the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&apos;s line-height equal to its height, and makes the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; an inline-block with &lt;code&gt;vertical-align: middle&lt;/code&gt;. Then it sets the line-height back to normal for the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, so its contents will flow naturally inside the block.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Simulating table display&lt;/h2&gt;\n\n&lt;p&gt;And here is another option, which may not work on older &lt;a href=&quot;http://caniuse.com/css-table&quot; rel=&quot;noreferrer&quot;&gt;browsers that don&apos;t support &lt;code&gt;display: table&lt;/code&gt; and &lt;code&gt;display: table-cell&lt;/code&gt;&lt;/a&gt; (basically just Internet Explorer 7). Using CSS we simulate table behavior (since tables support vertical alignment), and the HTML is the same as the second example:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; dashed &lt;span class=&quot;hljs-number&quot;&gt;#f69c55&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;span&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello World!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Using absolute positioning&lt;/h2&gt;\n\n&lt;p&gt;This technique uses an absolutely positioned element setting top, bottom, left and right to 0. It is described in more detail in an article in Smashing Magazine, &lt;em&gt;&lt;a href=&quot;http://coding.smashingmagazine.com/2013/08/09/absolute-horizontal-vertical-centering-css/&quot; rel=&quot;noreferrer&quot;&gt;Absolute Horizontal And Vertical Centering In CSS&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; dashed &lt;span class=&quot;hljs-number&quot;&gt;#f69c55&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello World!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Another way (not mentioned here yet) is with &lt;a href=&quot;http://www.w3.org/TR/css3-flexbox/&quot; rel=&quot;noreferrer&quot;&gt;Flexbox&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Just add the following code to the &lt;strong&gt;container&lt;/strong&gt; element:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;display: flex;\njustify-content: center; /* align horizontal */\nalign-items: center; /* align vertical */\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;&lt;a href=&quot;http://jsfiddle.net/danield770/4rrL4/594/&quot; rel=&quot;noreferrer&quot;&gt;Flexbox demo 1&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;24px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-style&lt;/span&gt;: oblique;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* align horizontal */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* align vertical */&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Alternatively, instead of aligning the content via the &lt;em&gt;container&lt;/em&gt;, flexbox can also center a &lt;strong&gt;flex item&lt;/strong&gt; with an &lt;a href=&quot;https://www.w3.org/TR/css-flexbox-1/#auto-margins&quot; rel=&quot;noreferrer&quot;&gt;auto margin&lt;/a&gt; &lt;em&gt;when there is only one flex-item in the flex container&lt;/em&gt; (like the example given in the question above).&lt;/p&gt;\n&lt;p&gt;So to center the flex item both horizontally and vertically just set it with &lt;code&gt;margin:auto&lt;/code&gt;&lt;/p&gt;\n&lt;h2&gt;&lt;a href=&quot;http://jsfiddle.net/danield770/4rrL4/815/&quot; rel=&quot;noreferrer&quot;&gt;Flexbox Demo 2&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;24px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-style&lt;/span&gt;: oblique;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;span&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;margin:auto on a flex item centers it both horizontally and vertically&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; \n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; All the above applies to centering items while laying them out in &lt;strong&gt;horizontal rows&lt;/strong&gt;. This is also the default behavior, because by default the value for &lt;code&gt;flex-direction&lt;/code&gt; is &lt;code&gt;row&lt;/code&gt;. If, however flex-items need to be laid out in &lt;strong&gt;vertical columns&lt;/strong&gt;, then &lt;code&gt;flex-direction: column&lt;/code&gt; should be set on the container to set the main-axis as column and additionally the &lt;code&gt;justify-content&lt;/code&gt; and &lt;code&gt;align-items&lt;/code&gt; properties now work &lt;em&gt;the other way around&lt;/em&gt; with &lt;code&gt;justify-content: center&lt;/code&gt; centering vertically and  &lt;code&gt;align-items: center&lt;/code&gt; centering horizontally)&lt;/p&gt;\n&lt;h2&gt;&lt;a href=&quot;http://jsfiddle.net/danield770/4rrL4/888/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;flex-direction: column&lt;/code&gt; demo&lt;/a&gt;&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;18px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-style&lt;/span&gt;: oblique;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex-direction&lt;/span&gt;: column;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* vertically aligns items */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* horizontally aligns items */&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;p&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n  }&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    When flex-direction is column...\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &quot;justify-content: center&quot; - vertically aligns\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &quot;align-items: center&quot; - horizontally aligns\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;A good place to start with Flexbox to see some of its features and get syntax for maximum browser support is &lt;a href=&quot;http://the-echoplex.net/flexyboxes/&quot; rel=&quot;noreferrer&quot;&gt;flexyboxes&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Also, browser support nowadays is very good: &lt;a href=&quot;http://caniuse.com/#feat=flexbox&quot; rel=&quot;noreferrer&quot;&gt;caniuse&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;For cross-browser compatibility for &lt;code&gt;display: flex&lt;/code&gt; and &lt;code&gt;align-items&lt;/code&gt;, you can use the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;display: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\n-webkit-flex-align: center;\n-ms-flex-align: center;\n-webkit-align-items: center;\nalign-items: center;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can easily do this by adding the following piece of CSS code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;display: table-cell;\nvertical-align: middle;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That means your CSS finally looks like:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;90px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;270px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;48px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-style&lt;/span&gt;: oblique;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Some text\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For reference and to add a simpler answer:&lt;/p&gt;\n\n&lt;p&gt;Pure CSS:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.vertical-align {\n    position: relative;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or as a SASS/SCSS Mixin:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;@mixin vertical-align {\n    position: relative;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use by:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.class-to-center {\n    @include vertical-align;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;By Sebastian Ekström&apos;s blog post &lt;em&gt;&lt;a href=&quot;http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/&quot;&gt;Vertical align anything with just 3 lines of CSS&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt;\n\n&lt;p&gt;This method can cause elements to be blurry due to the element being placed on a half pixel. A solution for this is to set its parent element to preserve-3d. Like following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.parent-element {\n    -webkit-transform-style: preserve-3d;\n    -moz-transform-style: preserve-3d;\n    transform-style: preserve-3d;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We live in 2015+ and &lt;a href=&quot;https://en.wikipedia.org/wiki/CSS_Flex_Box_Layout&quot;&gt;Flex Box&lt;/a&gt; is supported by every major modern browser.&lt;/p&gt;\n\n&lt;p&gt;It will be the way websites are made from here on out.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Learn it!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;All credit goes to this link owner @Sebastian Ekström &lt;a href=&quot;http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/&quot; rel=&quot;noreferrer&quot;&gt;Link&lt;/a&gt;; please go through this. See it in action &lt;a href=&quot;http://codepen.io/sebastianekstrom/pen/kzEhe&quot; rel=&quot;noreferrer&quot;&gt;codepen&lt;/a&gt;. By reading the above article I also created &lt;a href=&quot;http://jsfiddle.net/hegvLmee/1/&quot; rel=&quot;noreferrer&quot;&gt;a demo fiddle&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;With just three lines of CSS (excluding vendor prefixes) we can do it with the help of a transform: translateY vertically centers whatever we want, even if we dont know its height.&lt;/p&gt;\n\n&lt;p&gt;The CSS property transform is usually used for rotating and scaling elements, but with its translateY function we can now vertically align elements. Usually this must be done with absolute positioning or setting line-heights, but these require you to either know the height of the element or only works on single-line text, etc.&lt;/p&gt;\n\n&lt;p&gt;So, to do this we write:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.element {\n    position: relative;\n    top: 50%;\n    transform: translateY(-50%);\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thats all you need. It is a similar technique to the absolute-position method, but with the upside that we dont have to set any height on the element or position-property on the parent. It works straight out of the box, even in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_9&quot; rel=&quot;noreferrer&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;9&lt;/a&gt;!&lt;/p&gt;\n\n&lt;p&gt;To make it even more simple, we can write it as a mixin with its vendor prefixes.&lt;/p&gt;\n    ","\n&lt;p&gt;There is a tiny magic with CSS3 flexboxes:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* Important */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;section&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -webkit-flex;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;p&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;/* Key Part */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n}\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* Unimportant, coloring and UI */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;section&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;60%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt; solid orange;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: gold;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;p&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;font-family&lt;/span&gt;: Cantarell, Calibri;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;15px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: yellow;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;15px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        I&apos;m a centered box!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n        Flexboxes are great!\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Replace the line above marked as &quot;Key Part&quot; with one of these lines, if you want to center the text:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Only vertically:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Only horizontally:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;As I noticed, this trick works with grids (i.e. &lt;code&gt;display: grid&lt;/code&gt;), also.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is another option using flexbox.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: orange;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.child&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae, nemo.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h2&gt;Result&lt;/h2&gt;\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/6d5Tv.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/p&gt;\n&lt;p&gt;Here is a great article about centering in css. &lt;a href=&quot;https://ishadeed.com/article/learn-css-centering/&quot; rel=&quot;noreferrer&quot;&gt;Check it out.&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Flexible approach&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;250px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#123456&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;span&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: normal;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I saw the previous answers, and they will work only for that width of screen (not responsive). For the responsive you have to use flex.&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;div { display:flex; align-items:center; }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The solution accepted as the answer is perfect to use &lt;code&gt;line-height&lt;/code&gt; the same as the height of div, but this solution does not work perfectly when text is wrapped OR is in two lines.&lt;/p&gt;\n\n&lt;p&gt;Try this one if text is wrapped or is on multiple lines inside a div.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#box&lt;/span&gt;\n{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more reference, see:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://css-tricks.com/vertically-center-multi-lined-text/&quot; rel=&quot;noreferrer&quot;&gt;Vertically Center Multi-Lined Text&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://www.vanseodesign.com/css/vertical-centering/&quot; rel=&quot;noreferrer&quot;&gt;6 Methods For Vertical Centering With CSS&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;You can use the following code snippet as the reference. It is working like a charm for me:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered-text&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered-text&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Yes, it&apos;s my landing page&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;Under construction, coming soon!!!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;The output of the above code snippet is as follow:&lt;/p&gt;\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/q9DkN.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Try &lt;a href=&quot;http://codepen.io/hicTech/pen/emvMBw&quot; rel=&quot;noreferrer&quot;&gt;this solution&lt;/a&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.EXTENDER&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;overflow-y&lt;/span&gt;: hidden;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;overflow-x&lt;/span&gt;: hidden;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.PADDER-CENTER&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -webkit-box;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -moz-box;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -ms-flexbox;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -webkit-flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    -webkit-box-pack: center;\n    -moz-box-pack: center;\n    -ms-&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;-pack: center;\n    -webkit-&lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n    -webkit-box-align: center;\n    -moz-box-align: center;\n    -ms-&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;-align: center;\n    -webkit-&lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXTENDER&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;PADDER-CENTER&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;contentEditable&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Edit this text...&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Built using &lt;a href=&quot;http://www.css.plus&quot; rel=&quot;noreferrer&quot;&gt;CSS+&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can also use below properties.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;display: flex; \nalign-content: center; \njustify-content : center;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another way:&lt;/p&gt;\n\n&lt;p&gt;Don&apos;t set the &lt;code&gt;height&lt;/code&gt; attribute of the &lt;code&gt;div&lt;/code&gt;, but instead use &lt;code&gt;padding:&lt;/code&gt; to achieve the effect. Similarly to line-height, it only works if you have one line of text.  Although this way, if you have more content, the text will still be centered, but the div itself will be slightly larger.&lt;/p&gt;\n\n&lt;p&gt;So instead of going with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;div {\n  height: 120px;\n  line-height: 120px;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can say:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;div {\n   padding: 60px 0; // Maybe 60 minus font-size divided by two, if you want to be exact\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will set the top and bottom &lt;code&gt;padding&lt;/code&gt; of the &lt;code&gt;div&lt;/code&gt; to &lt;code&gt;60px&lt;/code&gt;, and the left and right &lt;code&gt;padding&lt;/code&gt; to zero, making the &lt;code&gt;div&lt;/code&gt; 120 pixels (plus the height of your font) high, and placing the text vertically centered in the div.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m not sure anyone has gone the &lt;code&gt;writing-mode&lt;/code&gt; route, but I think it solves the problem cleanly and has &lt;strong&gt;broad support&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.vertical&lt;/span&gt; {\n  //&lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid green;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;writing-mode&lt;/span&gt;: vertical-lr;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.horizontal&lt;/span&gt; {\n  //&lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;writing-mode&lt;/span&gt;: horizontal-tb;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: left;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#e0e0e0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: .&lt;span class=&quot;hljs-number&quot;&gt;5em&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1em&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1em&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;vertical&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;horizontal&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      I&apos;m centered in the vertical and horizontal thing\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;This will, of course, work with any dimensions you need (besides 100% of the parent). If you uncomment the border lines, it&apos;ll be helpful to familiarize yourself.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/Neithan/gudgd26v/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JSFiddle demo&lt;/a&gt; for you to fiddle.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://caniuse.com/#feat=css-writing-mode&quot; rel=&quot;nofollow noreferrer&quot;&gt;Caniuse support&lt;/a&gt;: 85.22% + 6.26% = &lt;strong&gt;91.48%&lt;/strong&gt; (even Internet&amp;nbsp;Explorer is in!)&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;For all your vertical alignment needs!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Declare this Mixin:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;@mixin vertical-align($position: relative) {\n  position: $position;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then include it in your element:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.element{\n    @include vertical-align();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Even better idea for this. You can do like this too &lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.parent&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;white-space&lt;/span&gt;: nowrap;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.parent&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;white-space&lt;/span&gt;: normal;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif16&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For a single line of text (or a single character) you can use this technique:&lt;/p&gt;\n\n&lt;p&gt;It &lt;strong&gt;can&lt;/strong&gt; be used when &lt;code&gt;#box&lt;/code&gt; has a non-fixed, &lt;strong&gt;relative height in %&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;lt;div id=&quot;box&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#box::before {\n    display: block;\n    content: &quot;&quot;;\n    height: 50%;\n}\n\n#box::after {\n    vertical-align: top;\n    line-height: 0;\n    content: &quot;TextContent&quot;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See a live demo &lt;a href=&quot;http://jsbin.com/ipujIyeM/2/edit?html,css,output&quot; rel=&quot;nofollow noreferrer&quot;&gt;at JsBin&lt;/a&gt; (easier to edit CSS) or &lt;a href=&quot;http://jsfiddle.net/47j7a/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JsFiddle&lt;/a&gt; (easier to change height of result frame).&lt;/p&gt;\n\n&lt;p&gt;If you want to place inner text in HTML, not in CSS, then you need to wrap text content in additional &lt;em&gt;inline&lt;/em&gt; element and edit &lt;code&gt;#box::after&lt;/code&gt; to match it. (And, of course, &lt;code&gt;content:&lt;/code&gt; property should be removed.)&lt;/p&gt;\n\n&lt;p&gt;For example,\n&lt;code&gt;&amp;lt;div id=&quot;box&quot;&amp;gt;&amp;lt;span&amp;gt;TextContent&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;.\nIn this case, &lt;code&gt;#box::after&lt;/code&gt; should be replaced with &lt;code&gt;#box span&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;For Internet&amp;nbsp;Explorer&amp;nbsp;8 support you must replace &lt;code&gt;::&lt;/code&gt; with &lt;code&gt;:&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Try the transform property:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt; &lt;span class=&quot;hljs-selector-id&quot;&gt;#box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;90px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;270px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translate&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;Id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif17&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;A very simple &amp;amp; most powerful solution to vertically align center:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.outer-div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.inner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translateY&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: red;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer-div&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;No data available&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif18&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The following code will put the div in the middle of the screen regardless of screen size or &lt;code&gt;div&lt;/code&gt; size:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.center-screen&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex-direction&lt;/span&gt;: column;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center-screen&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n I&apos;m in the center\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif19&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;See more details about &lt;code&gt;flex&lt;/code&gt; &lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;\n    ","\n&lt;p&gt;The simple and versatile way is (as &lt;a href=&quot;https://stackoverflow.com/questions/8865458/how-do-i-vertically-center-text-with-css/8865463#8865463&quot;&gt;Michielvoo&apos;s\ntable approach&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;[ctrv]{\n    display:table !important;\n}\n\n[ctrv] &amp;gt; *{ /* adressing direct discendents */\n      display: table-cell;\n      vertical-align: middle;\n      // text-align: center; /* optional */\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using this attribute (or a equivalent class) on a parent tag works even for many children to align:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;ctrv&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ch1&lt;/span&gt;/&amp;gt;&lt;/span&gt;  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ch2&lt;/span&gt;/&amp;gt;&lt;/span&gt;   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try the following code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;display: table-cell;\nvertical-align: middle;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;80%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#4CAF50&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-style&lt;/span&gt;: italic;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&apos;s standard dummy text ever since the 1500s\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif20&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I would just like to extend &lt;a href=&quot;https://stackoverflow.com/questions/8865458/how-do-i-vertically-center-text-with-css/8865463#8865463&quot;&gt;the answer from Michielvoo&lt;/a&gt; in order to release need for line-height and breathing of div height. It is basically just a simplified version like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;250px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* height: 100px;\n  line-height: 100px; */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#123456&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#bbbbff&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;span&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: normal;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;All grown-ups were once children... but only few of them remember it&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;And now here is my secret, a very simple secret: It is only with the heart that one can see rightly; what is essential is invisible to the eye.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif21&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;NOTE: commented out part of &lt;code&gt;css&lt;/code&gt;is needed for &lt;code&gt;fixed-height&lt;/code&gt; of enclosing &lt;code&gt;div&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I needed a row of clickable elephants, vertically centered, but without using a table to get around some Internet&amp;nbsp;Explorer&amp;nbsp;9 weirdness.&lt;/p&gt;\n\n&lt;p&gt;I eventually found the nicest CSS (for my needs) and it&apos;s great with Firefox, Chrome, and Internet&amp;nbsp;Explorer&amp;nbsp;11. Sadly Internet&amp;nbsp;Explorer&amp;nbsp;9 is still laughing at me...&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; dotted blue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;span&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid red;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: normal;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.out&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3px&lt;/span&gt; solid silver;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;out&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;alert(1)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.birdfolk.co.uk/littleredsolo.png&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;A lovely clickable option.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;out&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;alert(2)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.birdfolk.co.uk/bang2/Ship01.png&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Something charming to click on.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif22&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Obviously you don&apos;t need the borders, but they can help you see how it works.&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;You can use the positioning method in CSS:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/mv376g1o/1/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Check the result here....&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;HTML:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;relativediv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    Make me vertical align as center\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;CSS:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.relativediv{position:relative;border:1px solid #ddd;height:300px;width:300px}\n.relativediv p{position:absolute:top:50%;transfrom:translateY(-50%);}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope you use this method too.&lt;/p&gt;\n    ","\n&lt;p&gt;Wherever you want vertically center style means you can try &lt;code&gt;display:table-cell&lt;/code&gt; and &lt;code&gt;vertical-align:middle&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#box&lt;/span&gt;\n{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;90px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;270px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;48px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-style&lt;/span&gt;: oblique;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;Id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif23&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Set it within &lt;code&gt;button&lt;/code&gt; instead of &lt;code&gt;div&lt;/code&gt; if you don&apos;t care about its little visual 3D effect.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#box&lt;/span&gt;\n{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;120px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;300px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;48px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-style&lt;/span&gt;: oblique;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#FFF&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;Id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;disabled&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif24&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Absolute Positioning and Stretching&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;As with the method above this one begins by setting positioning on the parent and child elements as relative and absolute respectively. From there things differ.&lt;/p&gt;\n\n&lt;p&gt;In the code below Ive once again used this method to center the child both horizontally and vertically, though you can use the method for vertical centering only.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Content here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#parent {position: relative;}\n#child {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 50%;\n    height: 30%;\n    margin: auto;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The idea with this method is to try to get the child element to stretch to all four edges by setting the top, bottom, right, and left vales to 0. Because our child element is smaller than our parent elements it cant reach all four edges.&lt;/p&gt;\n\n&lt;p&gt;Setting auto as the margin on all four sides however causes opposite margins to be equal and displays our child div in the center of the parent div.&lt;/p&gt;\n\n&lt;p&gt;Unfortunately the above wont work in Internet&amp;nbsp;Explorer&amp;nbsp;7 and below, and like the previous method the content inside the child div can grow too large, causing it to be hidden.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.element{position: relative;top: 50%;transform: translateY(-50%);}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Add this small code in the CSS property of your element. It is awesome. Try it!&lt;/p&gt;\n    "],"327":["\n&lt;p&gt;Use this:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; oldArray = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; newArray = oldArray.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;({newArray});&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Basically, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; operation clones the array and returns a reference to a new array.&lt;/p&gt;\n&lt;h3&gt;Also note that:&lt;/h3&gt;\n&lt;p&gt;For references, strings and numbers (and not the actual object), &lt;strong&gt;&lt;code&gt;slice()&lt;/code&gt; copies object references into the new array.&lt;/strong&gt; Both the original and new array refer to the same object. If a referenced object changes, the changes are visible to both the new and original arrays.&lt;/p&gt;\n&lt;p&gt;Primitives such as strings and numbers are immutable, so changes to the string or number are impossible.&lt;/p&gt;\n    ","\n&lt;p&gt;In Javascript, deep-copy techniques depend on the elements in an array. Let&apos;s start there.&lt;/p&gt;\n&lt;h2&gt;Three types of elements&lt;/h2&gt;\n&lt;p&gt;Elements can be: literal values, literal structures, or prototypes.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Literal values (type1)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; booleanLiteral = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; numberLiteral = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; stringLiteral = &lt;span class=&quot;hljs-string&quot;&gt;&apos;true&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Literal structures (type2)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrayLiteral = [];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; objectLiteral = {};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Prototypes (type3)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; booleanPrototype = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bool&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; numberPrototype = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; stringPrototype = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;true&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrayPrototype = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; objectPrototype = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// or `new function () {}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;From these elements we can create three types of arrays.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// 1) Array of literal-values (boolean, number, string) &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; type1 = [ &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; ];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 2) Array of literal-structures (array, object)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; type2 = [ [], {} ];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// 3) Array of prototype-objects (function)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; type3 = [ &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {}, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {} ];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Deep copy techniques depend on the three array types&lt;/h2&gt;\n&lt;p&gt;Based on the types of elements in the array, we can use various techniques to deep copy.&lt;/p&gt;\n&lt;h4&gt;Deep copy techniques&lt;/h4&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/UL33O.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/UL33O.png&quot; alt=&quot;Javascript deep copy techniques by element types&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h4&gt;Benchmarks&lt;/h4&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.measurethat.net/Benchmarks/Show/17502/0/deep-copy-comparison&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.measurethat.net/Benchmarks/Show/17502/0/deep-copy-comparison&lt;/a&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Array of literal-values (type1)&lt;/strong&gt;&lt;br&gt;\nThe &lt;code&gt;[ ...myArray ]&lt;/code&gt;, &lt;code&gt;myArray.splice(0)&lt;/code&gt;, &lt;code&gt;myArray.slice()&lt;/code&gt;, and &lt;code&gt;myArray.concat()&lt;/code&gt; techniques can be used to deep copy arrays with literal values (boolean, number, and string) only; where &lt;code&gt;slice()&lt;/code&gt; has the highest performance in Chrome, and spread &lt;code&gt;...&lt;/code&gt; has the highest performance in Firefox.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Array of literal-values (type1) and literal-structures (type2)&lt;/strong&gt;&lt;br&gt;\nThe &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; technique can be used to deep copy literal values (boolean, number, string) and literal structures (array, object), but not prototype objects.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;All arrays (type1, type2, type3)&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;The &lt;a href=&quot;https://i.stack.imgur.com/UL33O.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;Lo-dash&lt;/a&gt; &lt;code&gt;cloneDeep(myArray)&lt;/code&gt; or &lt;a href=&quot;https://lodash.com&quot; rel=&quot;nofollow noreferrer&quot;&gt;jQuery&lt;/a&gt; &lt;code&gt;extend(true, [], myArray)&lt;/code&gt; techniques can be used to deep-copy all array-types. Where the Lodash &lt;code&gt;cloneDeep()&lt;/code&gt; technique has the highest performance.&lt;/li&gt;\n&lt;li&gt;And for those who avoid third-party libraries, the custom function below will deep-copy all array-types, with lower performance than &lt;code&gt;cloneDeep()&lt;/code&gt; and higher performance than &lt;code&gt;extend(true)&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;copy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;aObject&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Prevent undefined objects&lt;/span&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// if (!aObject) return aObject;&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; bObject = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(aObject) ? [] : {};\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; value;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; key &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; aObject) {\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Prevent self-references to parent object&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// if (Object.is(aObject[key], aObject)) continue;&lt;/span&gt;\n    \n    value = aObject[key];\n\n    bObject[key] = (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; value === &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) ? &lt;span class=&quot;hljs-title function_&quot;&gt;copy&lt;/span&gt;(value) : value;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; bObject;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;So to answer the question...&lt;/h2&gt;\n&lt;h4&gt;Question&lt;/h4&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr1;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;I realized that arr2 refers to the same array as arr1, rather than a new, independent array. How can I copy the array to get two independent arrays?&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;h4&gt;Answer&lt;/h4&gt;\n&lt;p&gt;Because &lt;code&gt;arr1&lt;/code&gt; is an array of literal values (boolean, number, or string), you can use any deep copy technique discussed above, where &lt;code&gt;slice()&lt;/code&gt; and spread &lt;code&gt;...&lt;/code&gt; have the highest performance.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr2 = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;();\narr2 = [...arr1];\narr2 = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\narr2 = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;();\narr2 = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr1));\narr2 = &lt;span class=&quot;hljs-title function_&quot;&gt;copy&lt;/span&gt;(arr1); &lt;span class=&quot;hljs-comment&quot;&gt;// Custom function needed, and provided above&lt;/span&gt;\narr2 = _.&lt;span class=&quot;hljs-title function_&quot;&gt;cloneDeep&lt;/span&gt;(arr1); &lt;span class=&quot;hljs-comment&quot;&gt;// Lo-dash.js needed&lt;/span&gt;\narr2 = jQuery.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;, [], arr1); &lt;span class=&quot;hljs-comment&quot;&gt;// jQuery.js needed&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const itemsCopy = [...items];&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Also if want to create a new array with the existing one being part of it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parts = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;shoulders&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;knees&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; lyrics = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;head&apos;&lt;/span&gt;, ...parts, &lt;span class=&quot;hljs-string&quot;&gt;&apos;and&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;toes&apos;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Array spreads are now &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility&quot; rel=&quot;noreferrer&quot;&gt;supported in all major browsers&lt;/a&gt; but if you need older support use typescript or babel and compile to ES5.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot; rel=&quot;noreferrer&quot;&gt;More info on spreads&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;No jQuery needed...  &lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/KBYvL/1/&quot; rel=&quot;noreferrer&quot;&gt;Working Example&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This copys the array from the starting position &lt;code&gt;0&lt;/code&gt; through the end of the array.&lt;/p&gt;\n\n&lt;p&gt;It is important to note that it will work as expected for primitive types (string, number, etc.), and to also explain the expected behavior for reference types...&lt;/p&gt;\n\n&lt;p&gt;If you have an array of Reference types, say of type &lt;code&gt;Object&lt;/code&gt;.  The array &lt;strong&gt;will&lt;/strong&gt; be copied, but both of the arrays will contain references to the same &lt;code&gt;Object&lt;/code&gt;&apos;s.  So in this case it would seem like the array is copied by reference even though the array &lt;strong&gt;is actually copied.&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This is how I&apos;ve done it after trying many approaches:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(orgArray));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will create a new deep copy not related to the first one (not a shallow copy).&lt;/p&gt;\n\n&lt;p&gt;Also this obviously will not clone events and functions, but the good thing you can do it in one line, and it can be used for any kind of object (arrays, strings, numbers, objects ...)&lt;/p&gt;\n    ","\n&lt;p&gt;An alternative to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/a&gt;, which can be used in 2 ways. The first of these is perhaps more readable as the intended behaviour is very clear:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array2 = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(array1);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The second method is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array2 = array1.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Cohen (in the comments) pointed out that this latter method &lt;a href=&quot;https://jsperf.com/copy-simple-array&quot; rel=&quot;noreferrer&quot;&gt;has better performance&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The way this works is that the &lt;code&gt;concat&lt;/code&gt; method creates a new array consisting of the elements in the object on which it is called followed by the elements of any arrays passed to it as arguments. So when no arguments are passed, it simply copies the array.&lt;/p&gt;\n\n&lt;p&gt;Lee Penkman, also in the comments, points out that if there&apos;s a chance &lt;code&gt;array1&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, you can return an empty array as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array2 = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(array1 || []);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or, for the second method:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array2 = (array1 || []).&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that you can also do this with &lt;code&gt;slice&lt;/code&gt;: &lt;code&gt;var array2 = (array1 || []).slice();&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Important!&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Most of answers here works for &lt;em&gt;&lt;strong&gt;particular cases&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;If you don&apos;t care about deep/nested objects and props use (&lt;strong&gt;ES6&lt;/strong&gt;):&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;let clonedArray = [...array]&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;but if you want to do deep clone use this instead:&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;let cloneArray = JSON.parse(JSON.stringify(array))&lt;/code&gt;*&lt;/p&gt;\n&lt;p&gt;*functions won&apos;t be preserved (serialized) while using stringify, you will get result without them.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;For lodash users:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;let clonedArray = _.clone(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#clone&quot; rel=&quot;noreferrer&quot; title=&quot;doc&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;and&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;let clonedArray = _.cloneDeep(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#cloneDeep&quot; rel=&quot;noreferrer&quot; title=&quot;doc&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I personally think &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot; rel=&quot;noreferrer&quot;&gt;Array.from&lt;/a&gt; is a more readable solution. By the way, just beware of its browser support.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// clone&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; x = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; y = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(x);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;({y});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// deep clone&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt; = arr =&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(arr, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(item) ? &lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;(item) : item);\nx = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [], [[]]];\ny = &lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;(x);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;({y});&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Some of mentioned methods work well when working with simple data types like number or string, but when the array contains other objects these methods fail. When we try to pass any object from one array to another it is passed as a reference, not the object.&lt;/p&gt;\n\n&lt;p&gt;Add the following code in your JavaScript file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clone&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newObj = (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;) ? [] : {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-string&quot;&gt;&apos;clone&apos;&lt;/span&gt;) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i] &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i] == &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n            newObj[i] = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i].&lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;();\n        } \n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; \n            newObj[i] = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; newObj;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And simply use&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;val_1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;val_2&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;val_3&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It will work.&lt;/p&gt;\n    ","\n&lt;p&gt;From ES2015,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = [...arr1];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you are in an environment of &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition&quot; rel=&quot;noreferrer&quot;&gt;ECMAScript 6&lt;/a&gt;, using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot; rel=&quot;noreferrer&quot;&gt;Spread Operator&lt;/a&gt; you could do it this way:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = [...arr1]; &lt;span class=&quot;hljs-comment&quot;&gt;//copy arr1&lt;/span&gt;\narr2.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr1)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr2)&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.wzvang.com/snippet/ignore_this_file.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;Primitive values are always pass by its value (copied). Compound values however are passed by reference.&lt;/h1&gt;\n\n&lt;p&gt;So how do we copy this arr? &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt; Copy an Array in ES6 &lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arrCopy = [...arr]; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt; Copy n Array in ES5 &lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arrCopy = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(); \n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arrCopy = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(arr);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt; Why `let arrCopy = arr` is not passing by value?&lt;/h1&gt;\n\n&lt;p&gt;Passing one varible to another on Compound values such as Object/Array behave difrently. Using asign operator on copand values we pass reference to an object. This is why the value of both arrays are changing when removing/adding arr elements.&lt;/p&gt;\n\n&lt;h1&gt;Exceptions: &lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arrCopy[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;adding new value this way will unreference&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When you assign a new value to the variable, you are changing the reference itself and it doesnt affect the original Object/Array. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0&quot; rel=&quot;noreferrer&quot;&gt;read more&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Adding to the solution of &lt;strong&gt;array.slice();&lt;/strong&gt; be aware that if you have &lt;strong&gt;multidimensional array&lt;/strong&gt; sub-arrays will be copied by references.\nWhat you can do is to loop and slice() each sub-array individually  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;();\n\narr2[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr2[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arrCpy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrSrc, arrDis&lt;/span&gt;){\n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(elm &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; arrSrc){\n  arrDis.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(arrSrc[elm].&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;());\n}\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr3=[];\n&lt;span class=&quot;hljs-title function_&quot;&gt;arrCpy&lt;/span&gt;(arr,arr3);\n\narr3[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;77&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr3[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;same things goes to array of objects, they will be copied by reference, you have to copy them manually&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; a = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can do any one of the following to make a copy of an array.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(a); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; b = [...a];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(...a); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; b = a.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; b = a.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, if i change a,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, a is [1,2,3,5] but b is still [1,2,3] as it has different reference.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;But i think, in all the methods above&lt;/strong&gt; &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot; rel=&quot;noreferrer&quot;&gt;Array.from&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;is better and made mainly to copy an array.&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I would personally prefer this way:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( originalObject ));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You must use best practice for this question when there are a lot of answers.&lt;/p&gt;\n&lt;p&gt;I recommend to you use  array spreads  to copy arrays.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;var arr1 = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;var arr2 = [arr1];&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As we know in Javascript &lt;strong&gt;arrays&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt; are by reference, but what ways we can do copy the array without changing the original array later one? &lt;/p&gt;\n\n&lt;p&gt;Here are few ways to do it:&lt;/p&gt;\n\n&lt;p&gt;Imagine we have this array in your code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;1) Looping through the array in a function and return a new array, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;newArr&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, res = [];\n      &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(i&amp;lt;arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;){\n       res.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(arr[i]);\n        i++;\n       }\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; res;\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2) Using slice method, slice is for slicing part of the array, it will slice some part of your array without touching the original, in the slice, if don&apos;t specify the start and end of the array, it will slice the whole array and basically make a full copy of the array, so we can easily say:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// make a copy of the original array&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;3) Also contact method, this is for merging two array, but we can just specify one of arrays and then this basically make a copy of the values in the new contacted array:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;4) Also stringify and parse method, it&apos;s not recommended, but can be an easy way to copy Array and Objects:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;5) Array.from method, this is not widely supported, before use check the support in different browsers:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr2 = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(arr);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;6) ECMA6 way, also not fully supported, but babelJs can help you if you want to transpile:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr2 = [...arr];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Dan, no need to use fancy tricks. All you need to do is make copy of arr1 by doing this.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = [];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(arr1);\n\narr2.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// Now, arr2 = [[&apos;a&apos;,&apos;b&apos;,&apos;c&apos;],&apos;d&apos;]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;arr1:&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr1);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;arr2:&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr2);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Following did the trick:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr3 = [...arr1];\narr3.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// Now, arr3 = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;];&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;arr3:&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr3);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Now &lt;code&gt;arr1&lt;/code&gt; and &lt;code&gt;arr2&lt;/code&gt; are two different array variables stored in separate stacks.\n&lt;a href=&quot;https://jsfiddle.net/wm67wuzo/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Check this out on jsfiddle&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;In my particular case I needed to ensure the array remained intact so this worked for me:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Empty array&lt;/span&gt;\narr1.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Add items from source array to target array&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr2.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(arr2[i]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Make copy of multidimensional array/object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deepCopy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(obj) === &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Array]&apos;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; out = [], i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len = obj.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( ; i &amp;lt; len; i++ ) {\n         out[i] = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;callee&lt;/span&gt;(obj[i]);\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; out;\n   }\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; obj === &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; out = {}, i;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; obj ) {\n         out[i] = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;callee&lt;/span&gt;(obj[i]);\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; out;\n   }\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Thanks to James Padolsey for this function.&lt;/p&gt;\n\n&lt;p&gt;Source: &lt;a href=&quot;http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If your array contains elements of the &lt;strong&gt;primitive data type&lt;/strong&gt; such as &lt;strong&gt;int, char, or string etc&lt;/strong&gt; then you can user one of those methods which returns a copy of the original array such as .slice() or .map() or spread operator(thanks to ES6).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;new_array = old_array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;new_array = old_array.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;elem&lt;/span&gt;) =&amp;gt;&lt;/span&gt; elem)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; new_array = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(...old_array);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;BUT&lt;/strong&gt; if your array contains &lt;strong&gt;complex elements&lt;/strong&gt; such as objects(or arrays) or more &lt;strong&gt;nested objects&lt;/strong&gt;, then, you will have to make sure that you are making a copy of all the elements from the top level to the last level else reference of the inner objects will be used and that means changing values in object_elements in new_array will still affect the old_array. You can call this method of copying at each level as making a &lt;strong&gt;DEEP COPY&lt;/strong&gt;\nof the old_array.&lt;/p&gt;\n\n&lt;p&gt;For deep copying, you can use the above-mentioned methods for primitive data types at each level depending upon the type of data or you can use this &lt;strong&gt;costly method(mentioned below)&lt;/strong&gt; for making a deep copy without doing much work.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; new_array = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(old_array));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There are a lot of other methods out there which you can use depending on your requirements. I have mentioned only some of those for giving a general idea of what happens when we try to copy an array into the other &lt;strong&gt;by value&lt;/strong&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;If you want to make a new copy of an object or array, you must explicitly copy the properties of the object or the elements of the array, for example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = [];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr1.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n   arr2[i] = arr1[i];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can search for more information on Google about immutable primitive values and mutable object references.&lt;/p&gt;\n    ","\n&lt;p&gt;You could use ES6 with spread Opeartor, its simpler.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr2 = [...arr1];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There are limitations..check  docs &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot; rel=&quot;nofollow noreferrer&quot;&gt;Spread syntax @ mozilla&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;When we want to copy an array using the assignment operator ( &lt;code&gt;=&lt;/code&gt; ) it doesn&apos;t create a copy it merely copies the pointer/reference to the array. For example:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;true&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; oldArr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr = oldArr;  &lt;span class=&quot;hljs-comment&quot;&gt;// now oldArr points to the same place in memory &lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(oldArr === newArr);  &lt;span class=&quot;hljs-comment&quot;&gt;// Points to the same place in memory thus is true&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; copy = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(copy === newArr);  &lt;span class=&quot;hljs-comment&quot;&gt;// Doesn&apos;t point to the same place in memory and thus is false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Often when we transform data we want to keep our initial datastructure (e.g. Array) intact. We do this by making a exact copy of our array so this one can be transformed while the initial one stays intact.&lt;/p&gt;\n\n&lt;h2&gt;Ways of copying an array:&lt;/h2&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;true&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; oldArr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Uses the spread operator to spread out old values into the new array literal&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr1 = [...oldArr];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Slice with no arguments returns the newly copied Array&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr2 = oldArr.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Map applies the callback to every element in the array and returns a new array&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr3 = oldArr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) =&amp;gt;&lt;/span&gt; el);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Concat is used to merge arrays and returns a new array. Concat with no args copies an array&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr4 = oldArr.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Object.assign can be used to transfer all the properties into a new array literal&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr5 = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;([], oldArr);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Creating via the Array constructor using the new keyword&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr6 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(...oldArr);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// For loop&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;base&lt;/span&gt;) {\n\t&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArray = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; base.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n\t    newArray[i] = base[i];\n\t}\n\t&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; newArray;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newArr7 = &lt;span class=&quot;hljs-title function_&quot;&gt;clone&lt;/span&gt;(oldArr);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(newArr1, newArr2, newArr3, newArr4, newArr5, newArr6, newArr7);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;h2&gt;Be careful when arrays or objects are nested!:&lt;/h2&gt;\n\n&lt;p&gt;When arrays are nested the values are copied by reference. Here is an example of how this could lead to issues:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr2 = [...arr1];\n\narr2[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;// we change arr2&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr1);  &lt;span class=&quot;hljs-comment&quot;&gt;// arr1 is also changed because the array inside arr1 was copied by reference&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;So don&apos;t use these methods when there are objects or arrays inside your array you want to copy. i.e. Use these methods on arrays of primitives only. &lt;/p&gt;\n\n&lt;p&gt;If you do want to deepclone a javascript array use &lt;code&gt;JSON.parse&lt;/code&gt; in conjunction with &lt;code&gt;JSON.stringify&lt;/code&gt;, like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr2 = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr1)) ;\n\narr2[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr1);  &lt;span class=&quot;hljs-comment&quot;&gt;// now I&apos;m not modified because I&apos;m a deep clone&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;h2&gt;Performance of copying:&lt;/h2&gt;\n\n&lt;p&gt;So which one do we choose for optimal performance. It turns out that the most verbose method, the &lt;code&gt;for&lt;/code&gt; loop has the highest performance. Use the &lt;code&gt;for&lt;/code&gt; loop for really CPU intensive copying (large/many arrays). &lt;/p&gt;\n\n&lt;p&gt;After that the &lt;code&gt;.slice()&lt;/code&gt; method also has decent performance and is also less verbose and easier for the programmer to implement. I suggest to use &lt;code&gt;.slice()&lt;/code&gt; for your everyday copying of arrays which aren&apos;t very CPU intensive. Also avoid using the &lt;code&gt;JSON.parse(JSON.stringify(arr))&lt;/code&gt; (lots of overhead) if no deep clone is required and performance is an issue.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://www.codefellows.org/blog/speed-alley-the-fastest-way-to-copy-an-array/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source performance test&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n&lt;p&gt;var arr2 = arr1.slice(0);&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This way &lt;strong&gt;just&lt;/strong&gt; work for &lt;strong&gt;simple Arrays&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;If you have &lt;em&gt;&lt;strong&gt;Complex&lt;/strong&gt;&lt;/em&gt; Array like &lt;em&gt;array of Objects&lt;/em&gt; then you must use another solutions like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr2 = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr1)); \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For example, we have an array of objects that each cell have another &lt;em&gt;array field&lt;/em&gt; in its object ... in this situation if we use &lt;strong&gt;slice&lt;/strong&gt; method then the array fields will copy &lt;em&gt;&lt;strong&gt;by Ref&lt;/strong&gt;&lt;/em&gt; and that&apos;s mean these fields &lt;em&gt;updates&lt;/em&gt; will &lt;em&gt;affect&lt;/em&gt; on orginal array same element and fields.&lt;/p&gt;\n    ","\n&lt;p&gt;Using jQuery deep copy could be made as following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = $.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;, [], arr1);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can also use ES6 spread operator to copy Array&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr=[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; copyArr=[...arr];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here are few more way to copy:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; array = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrayCopy1 = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;(array);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrayCopy2 = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;([], array);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrayCopy3 = array.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt; =&amp;gt;&lt;/span&gt; i);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrayCopy4 = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;of&lt;/span&gt;(...array );&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For ES6 array containing objects&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;cloneArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ ...x }));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Quick Examples:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;If elements in the array are &lt;strong&gt;primitive types&lt;/strong&gt; (string, number, etc.)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-comment&quot;&gt;// arr1 and arr2 are independent and primitive elements are stored in &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// different places in the memory&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(); \narr2.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr1); &lt;span class=&quot;hljs-comment&quot;&gt;// [ &apos;a&apos;, &apos;b&apos;, &apos;c&apos; ]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr2); &lt;span class=&quot;hljs-comment&quot;&gt;// [ &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;If elements in the array are &lt;strong&gt;object literals, another array ({}, [])&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [{ &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;}, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\n&lt;span class=&quot;hljs-comment&quot;&gt;// arr1 and arr2 are independent and reference&apos;s/addresses are stored in different&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// places in the memory. But those reference&apos;s/addresses points to some common place&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// in the memory.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr2 = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(); \narr2.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;();      &lt;span class=&quot;hljs-comment&quot;&gt;// OK - don&apos;t affect arr1 bcos only the address in the arr2 is&lt;/span&gt;\n                 &lt;span class=&quot;hljs-comment&quot;&gt;// deleted not the data pointed by that address&lt;/span&gt;\narr2[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;z&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// not OK - affect arr1 bcos changes made in the common area &lt;/span&gt;\n                 &lt;span class=&quot;hljs-comment&quot;&gt;// pointed by the addresses in both arr1 and arr2&lt;/span&gt;\narr2[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;;\t &lt;span class=&quot;hljs-comment&quot;&gt;// not OK - same above reason&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr1); &lt;span class=&quot;hljs-comment&quot;&gt;// [ { x: &apos;z&apos;, y: &apos;b&apos; }, [ 9, 2 ], [ 3, 4 ] ]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr2); &lt;span class=&quot;hljs-comment&quot;&gt;// [ { x: &apos;z&apos;, y: &apos;b&apos; }, [ 9, 2 ] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;ol start=&quot;3&quot;&gt;\n&lt;li&gt;&lt;strong&gt;Solution for 2&lt;/strong&gt;: Deep Copy by element by element&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr1 = [{ &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;}, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\narr2 = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr1));\narr2.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;();\t  &lt;span class=&quot;hljs-comment&quot;&gt;// OK - don&apos;t affect arr1&lt;/span&gt;\narr2[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;z&apos;&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;// OK - don&apos;t affect arr1&lt;/span&gt;\narr2[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;;\t  &lt;span class=&quot;hljs-comment&quot;&gt;// OK - don&apos;t affect arr1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr1); &lt;span class=&quot;hljs-comment&quot;&gt;// [ { x: &apos;a&apos;, y: &apos;b&apos; }, [ 1, 2 ], [ 3, 4 ] ]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr2); &lt;span class=&quot;hljs-comment&quot;&gt;// [ { x: &apos;z&apos;, y: &apos;b&apos; }, [ 9, 2 ] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    "],"328":["\n&lt;p&gt;The biggest change in the syntax is the addition of &lt;a href=&quot;http://php.net/manual/en/regexp.reference.delimiters.php&quot; rel=&quot;noreferrer&quot;&gt;delimiters&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ereg&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;^hello&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/^hello/&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Delimiters can be pretty much anything that is not alpha-numeric, a backslash or a whitespace character. The most used are generally &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can also use matching brackets:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[^hello]&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(^hello)&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;{^hello}&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// etc&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If your delimiter is found in the regular expression, you have to escape it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ereg&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;^/hello&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/^\\/hello/&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can easily escape all delimiters and reserved characters in a string by using &lt;a href=&quot;http://php.net/preg_quote&quot; rel=&quot;noreferrer&quot;&gt;preg_quote&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$expr&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_quote&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/hello&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/^&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$expr&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, PCRE supports &lt;a href=&quot;http://php.net/manual/en/reference.pcre.pattern.modifiers.php&quot; rel=&quot;noreferrer&quot;&gt;modifiers&lt;/a&gt; for various things. One of the most used is the case-insensitive modifier &lt;code&gt;i&lt;/code&gt;, the alternative to &lt;a href=&quot;http://php.net/eregi&quot; rel=&quot;noreferrer&quot;&gt;eregi&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;eregi&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;^hello&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;HELLO&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/^hello/i&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;HELLO&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can find the complete reference to &lt;a href=&quot;http://php.net/manual/en/pcre.pattern.php&quot; rel=&quot;noreferrer&quot;&gt;PCRE syntax in PHP in the manual&lt;/a&gt;, as well as a &lt;a href=&quot;http://php.net/manual/en/reference.pcre.pattern.posix.php&quot; rel=&quot;noreferrer&quot;&gt;list of differences&lt;/a&gt; between POSIX regex and PCRE to help converting the expression.&lt;/p&gt;\n\n&lt;p&gt;However, in your simple example you would not use a regular expression:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;stripos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;hello world&apos;&lt;/span&gt;) === &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Ereg replacement with preg(as of PHP 5.3.0) was right move in our favor.&lt;/p&gt;\n\n&lt;p&gt;preg_match, which uses a Perl-compatible regular expression syntax, is often a faster alternative to ereg.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;You should know 4 main things to port ereg patterns to preg:&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Add delimiters&lt;/strong&gt;(/): &lt;code&gt;&apos;pattern&apos; =&amp;gt; &apos;/pattern/&apos;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Escape delimiter&lt;/strong&gt; if it is a part of the pattern: &lt;code&gt;&apos;patt/ern&apos; =&amp;gt; &apos;/patt\\/ern/&apos;&lt;/code&gt;&lt;br&gt;\nAchieve it programmatically in following way:&lt;br&gt;\n&lt;code&gt;$old_pattern = &apos;&amp;lt;div&amp;gt;.+&amp;lt;/div&amp;gt;&apos;;&lt;/code&gt;&lt;br&gt;\n&lt;code&gt;$new_pattern = &apos;/&apos; . addcslashes($old_pattern, &apos;/&apos;) . &apos;/&apos;;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;eregi&lt;/strong&gt;(case-insensitive matching): &lt;code&gt;&apos;pattern&apos; =&amp;gt; &apos;/pattern/i&apos;&lt;/code&gt;\nSo, if you are using eregi function for case insenstive matching, just add &apos;i&apos; in the end of new pattern(&apos;/pattern/&apos;).&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;ASCII values&lt;/strong&gt;: In ereg, if you use number in the pattern, it is assumed that you are referring to the ASCII of a character. But in preg, number is not treated as ASCII value. So, if your pattern contain ASCII value in the ereg expression(for example: new line, tabs etc) then convert it to hexadecimal and prefix it with \\x.&lt;br&gt;\n&lt;code&gt;Example: 9(tab) becomes \\x9 or alternatively use \\t.&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;From PHP version 5.3, &lt;code&gt;ereg&lt;/code&gt; is deprecated.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Moving from &lt;code&gt;ereg&lt;/code&gt; to &lt;code&gt;preg_match&lt;/code&gt; is just a small change in our pattern.&lt;/p&gt;\n\n&lt;p&gt;First, you have to add delimiters to your code, e.g.:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ereg&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A-Z0-9a-z&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/A-Z0-9a-z/&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;code&gt;eregi&lt;/code&gt; case-insensitive matching, put &lt;code&gt;i&lt;/code&gt; after the last delimiter, e.g.:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;eregi&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;pattern&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;/pattern/i&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There are more differences between &lt;code&gt;ereg()&lt;/code&gt; and &lt;code&gt;preg_replace()&lt;/code&gt; than just the syntax:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Return value:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;On error&lt;/em&gt;: both return &lt;code&gt;FALSE&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;On no match&lt;/em&gt;: &lt;code&gt;ereg()&lt;/code&gt; returns &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;preg_match()&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;On match&lt;/em&gt;: &lt;code&gt;ereg()&lt;/code&gt; returns string length or &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;preg_match()&lt;/code&gt; returns always &lt;code&gt;1&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Resulting array of matched substrings: If some substring is not found at all (&lt;code&gt;(b)&lt;/code&gt; in &lt;code&gt;...a(b)?&lt;/code&gt;), corresponding item in &lt;code&gt;ereg()&lt;/code&gt; result will be &lt;code&gt;FALSE&lt;/code&gt;, while in &lt;code&gt;preg_match()&lt;/code&gt; it will not be set at all.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If one is not brave enough to convert his or her &lt;code&gt;ereg()&lt;/code&gt; to &lt;code&gt;preg_match()&lt;/code&gt;, he or she may use &lt;a href=&quot;http://php.net/manual/en/function.mb-ereg.php&quot; rel=&quot;noreferrer&quot;&gt;mb_ereg()&lt;/a&gt;, which is still available in PHP 7.&lt;/p&gt;\n    "],"329":["\n&lt;p&gt;JavaScript &lt;em&gt;itself&lt;/em&gt; has nothing built in for handling query string parameters.&lt;/p&gt;\n&lt;p&gt;Code running in a (modern) browser  can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;URL&lt;/code&gt; object&lt;/a&gt; (which is part of the APIs provided by browsers to JS):&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url_string = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.example.com/t.html?a=1&amp;amp;b=3&amp;amp;c=m2-m3-m4-m5&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//window.location.href&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(url_string);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = url.&lt;span class=&quot;hljs-property&quot;&gt;searchParams&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(c);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;For older browsers (including Internet Explorer), you can use &lt;a href=&quot;https://github.com/ungap/url-search-params&quot; rel=&quot;noreferrer&quot;&gt;this polyfill&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;You could also use the code from the original version of this answer that predates &lt;code&gt;URL&lt;/code&gt;. The above polyfill is robust and well tested and I strongly recommend it over this though.&lt;/p&gt;\n&lt;p&gt;You could access &lt;code&gt;location.search&lt;/code&gt;, which would give you from the &lt;code&gt;?&lt;/code&gt; character on to the end of the URL or the start of the fragment identifier (#foo), whichever comes first.&lt;/p&gt;\n&lt;p&gt;Then you can parse it with this:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parse_query_string&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;query&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vars = query.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; query_string = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; vars.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; pair = vars[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(pair.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;());\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(pair.&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;));\n    &lt;span class=&quot;hljs-comment&quot;&gt;// If first entry with this name&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; query_string[key] === &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) {\n      query_string[key] = value;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// If second entry with this name&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; query_string[key] === &lt;span class=&quot;hljs-string&quot;&gt;&quot;string&quot;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [query_string[key], value];\n      query_string[key] = arr;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// If third or later entry with this name&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      query_string[key].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value);\n    }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; query_string;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; query_string = &lt;span class=&quot;hljs-string&quot;&gt;&quot;a=1&amp;amp;b=3&amp;amp;c=m2-m3-m4-m5&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parsed_qs = &lt;span class=&quot;hljs-title function_&quot;&gt;parse_query_string&lt;/span&gt;(query_string);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(parsed_qs.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;You can get the query string from the URL of the current page with:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; query = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qs = &lt;span class=&quot;hljs-title function_&quot;&gt;parse_query_string&lt;/span&gt;(query);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Most implementations I&apos;ve seen miss out URL-decoding the names and the values.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s a general utility function that also does proper URL-decoding:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getQueryParams&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;qs&lt;/span&gt;) {\n    qs = qs.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;+&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = {},\n        tokens,\n        re = &lt;span class=&quot;hljs-regexp&quot;&gt;/[?&amp;amp;]?([^=]+)=([^&amp;amp;]*)/g&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (tokens = re.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(qs)) {\n        params[&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(tokens[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(tokens[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//var query = getQueryParams(document.location.search);&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//alert(query.foo);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://community.esri.com/thread/33634&quot; rel=&quot;noreferrer&quot;&gt;source&lt;/a&gt;    &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;gup&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; name, url &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!url) url = location.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;;\n    name = name.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\[]/&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\\\[&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\]]/&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\\\]&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regexS = &lt;span class=&quot;hljs-string&quot;&gt;&quot;[\\\\?&amp;amp;]&quot;&lt;/span&gt;+name+&lt;span class=&quot;hljs-string&quot;&gt;&quot;=([^&amp;amp;#]*)&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;( regexS );\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; results = regex.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;( url );\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; results == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; : results[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n}\n&lt;span class=&quot;hljs-title function_&quot;&gt;gup&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;q&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;hxxp://example.com/?q=abc&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is an easy way to check just one parameter:&lt;/p&gt;\n&lt;p&gt;Example URL:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//myserver/action?myParam=2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Example Javascript:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myParam = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myParam=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;if &quot;myParam&quot; exists in the URL... variable myParam will contain &quot;2&quot;, otherwise it will be undefined.&lt;/p&gt;\n&lt;p&gt;Maybe you want a default value, in that case:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myParam = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myParam=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] ? location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myParam=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] : &lt;span class=&quot;hljs-string&quot;&gt;&apos;myDefaultValue&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; This works better:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.example.com/index.php?myParam=384&amp;amp;login=admin&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// or window.location.href for current url&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; captured = &lt;span class=&quot;hljs-regexp&quot;&gt;/myParam=([^&amp;amp;]+)/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(url)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// Value is in [1] (&apos;384&apos; in our case)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = captured ? captured : &lt;span class=&quot;hljs-string&quot;&gt;&apos;myDefaultValue&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And it works right even when URL is full of parameters.&lt;/p&gt;\n    ","\n&lt;p&gt;Browsers vendors have implemented a native way to do this via URL and URLSearchParams.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; url = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.test.com/t.html?a=1&amp;amp;b=3&amp;amp;c=m2-m3-m4-m5&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; searchParams = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(url.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(searchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;));  &lt;span class=&quot;hljs-comment&quot;&gt;// outputs &quot;m2-m3-m4-m5&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Currently supported in Firefox, Opera, Safari, Chrome and Edge. For a list of browser support &lt;a href=&quot;https://caniuse.com/#search=URLSearchParams&quot; rel=&quot;noreferrer&quot;&gt;see here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&lt;/a&gt;\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL/URL&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/URL/URL&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://url.spec.whatwg.org/&quot; rel=&quot;noreferrer&quot;&gt;https://url.spec.whatwg.org/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Eric Bidelman, an engineer at Google, &lt;a href=&quot;https://developers.google.com/web/updates/2016/01/urlsearchparams&quot; rel=&quot;noreferrer&quot;&gt;recommends&lt;/a&gt; using this &lt;a href=&quot;https://github.com/WebReflection/url-search-params&quot; rel=&quot;noreferrer&quot;&gt;polyfill&lt;/a&gt; for unsupported browsers.&lt;/p&gt;\n    ","\n&lt;p&gt;I found this ages ago, very easy:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vars = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parts = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[?&amp;amp;]+([^=&amp;amp;]+)=([^&amp;amp;]*)/gi&lt;/span&gt;,    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m,key,value&lt;/span&gt;) {\n      vars[key] = value;\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vars;\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then call it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fType = &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can get the query string in &lt;code&gt;location.search&lt;/code&gt;, then you can split everything after the question mark:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = {};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parts = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; parts.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nv = parts[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!nv[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n        params[nv[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = nv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] || &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    }\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Now you can get the parameters you want like so:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; abc = params.&lt;span class=&quot;hljs-property&quot;&gt;abc&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A super simple way using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot; rel=&quot;noreferrer&quot;&gt;URLSearchParams&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getParam&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;param&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(param);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&apos;s currently supported in Chrome, Firefox, Safari, Edge, and &lt;a href=&quot;https://caniuse.com/#feat=urlsearchparams&quot; rel=&quot;noreferrer&quot;&gt;others&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I wrote a more simple and elegant solution.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/room=([0-9]+)/&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; room = arr[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a recursive solution that has no regex, and has minimal mutation (only the params object is mutated, which I believe is unavoidable in JS).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;It&apos;s awesome because it:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Is recursive&lt;/li&gt;\n&lt;li&gt;Handles multiple parameters of the same name&lt;/li&gt;\n&lt;li&gt;Deals well with malformed parameter strings (missing values, so on)&lt;/li&gt;\n&lt;li&gt;Doesn&apos;t break if &apos;=&apos; is in the value&lt;/li&gt;\n&lt;li&gt;Performs URL decoding&lt;/li&gt;\n&lt;li&gt;And lastly, It&apos;s awesome because it...argh!!!&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; get_params = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;search_string&lt;/span&gt;) {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parse = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;params, pairs&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; pair = pairs[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parts = pair.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(parts[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(parts.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;));\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Handle multiple parameters of the same name&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; params[key] === &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) {\n      params[key] = value;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      params[key] = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(params[key], value);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pairs.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ? params : &lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(params, pairs.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n  }\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Get rid of leading ?&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; search_string.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? {} : &lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;({}, search_string.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = &lt;span class=&quot;hljs-title function_&quot;&gt;get_params&lt;/span&gt;(location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Finally, to get the param you want&lt;/span&gt;\nparams[&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I made a function that does this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getUrlParams = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;url&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = {};\n  (url + &lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;pair&lt;/span&gt;) {\n    pair = (pair + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (pair[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) {\n      params[pair[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = pair[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    }\n  });\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Update 5/26/2017, here is an ES7 implementation (runs with babel preset stage 0, 1, 2, or 3):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlParams&lt;/span&gt; = url =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${url}&lt;/span&gt;?`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;params, pair&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n    (&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; key ? {...params, [key]: val} : params)\n    (...&lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${pair}&lt;/span&gt;=`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;)), {});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Some tests:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getUrlParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://google.com/foo?a=1&amp;amp;b=2&amp;amp;c&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Will log {a: &apos;1&apos;, b: &apos;2&apos;, c: &apos;&apos;}&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getUrlParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/foo?a=1&amp;amp;b=2&amp;amp;c&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Will log {a: &apos;1&apos;, b: &apos;2&apos;, c: &apos;&apos;}&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getUrlParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?a=1&amp;amp;b=2&amp;amp;c&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Will log {a: &apos;1&apos;, b: &apos;2&apos;, c: &apos;&apos;}&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getUrlParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://google.com/&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Will log {}&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getUrlParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;a=1&amp;amp;b=2&amp;amp;c&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Will log {}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Update 3/26/2018, here is a Typescript implementation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlParams&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;search: string&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${search}&lt;/span&gt;?`&lt;/span&gt;\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n    &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;params: object, pair: string&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [key, value] = &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${pair}&lt;/span&gt;=`&lt;/span&gt;\n        .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;)\n        .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;)\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; key.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? { ...params, [key]: value } : params\n    },\n    {}\n  )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Update 2/13/2019, here is an updated TypeScript implementation that works with TypeScript 3.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;interface &lt;span class=&quot;hljs-title class_&quot;&gt;IParams&lt;/span&gt; { [&lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: string]: string }\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; paramReducer = (&lt;span class=&quot;hljs-attr&quot;&gt;params&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;IParams&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;pair&lt;/span&gt;: string): &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;IParams&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [key, value] = &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${pair}&lt;/span&gt;=`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;)\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; key.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? { ...params, [key]: value } : params\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; getUrlParams = (&lt;span class=&quot;hljs-attr&quot;&gt;search&lt;/span&gt;: string): &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;IParams&lt;/span&gt; =&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${search}&lt;/span&gt;?`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;reduce&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;IParams&lt;/span&gt;&amp;gt;(paramReducer, {})\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://sourceforge.net/p/js-urlparam-omt/wiki/Home/&quot; rel=&quot;noreferrer&quot;&gt;See this&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getURLParameters&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;paramName&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sURL = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (sURL.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrParams = sURL.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrURLParams = arrParams[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrParamNames = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(arrURLParams.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrParamValues = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(arrURLParams.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;arrURLParams.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sParam =  arrURLParams[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n            arrParamNames[i] = sParam[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (sParam[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] != &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;)\n                arrParamValues[i] = &lt;span class=&quot;hljs-built_in&quot;&gt;unescape&lt;/span&gt;(sParam[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n                arrParamValues[i] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;No Value&quot;&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;arrURLParams.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arrParamNames[i] == paramName)\n            {\n                &lt;span class=&quot;hljs-comment&quot;&gt;//alert(&quot;Parameter:&quot; + arrParamValues[i]);&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arrParamValues[i];\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;No Parameters Found&quot;&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The shortest way:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(location.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;searchParams&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;my_key&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;ECMAScript 6 solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; v.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;))\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;map, [key, value]&lt;/span&gt;) =&amp;gt;&lt;/span&gt; map.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(key, &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(value)), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;())\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use the &lt;a href=&quot;http://blog.stevenlevithan.com/archives/parseuri&quot; rel=&quot;noreferrer&quot;&gt;parseUri&lt;/a&gt; library. It allows you to do exactly what you are asking for:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uri = &lt;span class=&quot;hljs-string&quot;&gt;&apos;www.test.com/t.html&amp;amp;a=1&amp;amp;b=3&amp;amp;c=m2-m3-m4-m5&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = uri.&lt;span class=&quot;hljs-property&quot;&gt;queryKey&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-comment&quot;&gt;// c = &apos;m2-m3-m4-m5&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getVal&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;str&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; v = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(?:[\\?\\&amp;amp;]&apos;&lt;/span&gt;+str+&lt;span class=&quot;hljs-string&quot;&gt;&apos;=)([^&amp;amp;]+)&apos;&lt;/span&gt;));\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; v ? v[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;this question has too many answers, so i&apos;m adding another one.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * parses and returns URI query parameters \n * \n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;string&lt;/span&gt;} param parm\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;bool?&lt;/span&gt;} asArray if true, returns an array instead of a scalar \n * &lt;span class=&quot;hljs-doctag&quot;&gt;@returns&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;Object|Array&lt;/span&gt;} \n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getURIParameter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;param, asArray&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;p,c&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parts = c.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;param&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(param); });\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(parts.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || parts[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] != param) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (p &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;) &amp;amp;&amp;amp; !asArray ? &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; : p;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; asArray ? p.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(parts.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) : parts.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    }, []);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;getURIParameter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot;&gt;// returns the last id or null if not present&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;getURIParameter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// returns an array of all ids&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;this copes with empty parameters (those keys present without &lt;code&gt;&quot;=value&quot;&lt;/code&gt;), exposure of both a scalar and array-based value retrieval API, as well as proper URI component decoding.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is my solution. As advised by Andy E while answering &lt;a href=&quot;https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript&quot;&gt;this question&lt;/a&gt;, it&apos;s not good for your script&apos;s performance if it&apos;s repeatedly building various regex strings, running loops etc just to get a single value. So, I&apos;ve come up with a simpler script that returns all the GET parameters in a single object. You should call it just once, assign the result to a variable and then, at any point in the future, get any value you want from that variable using the appropriate key. Note that it also takes care of URI decoding (i.e things like %20) and replaces + with a space:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlQueryParams&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;url&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; queryString = url.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; keyValuePairs = queryString.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; keyValue = [];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; queryParams = {};\n  keyValuePairs.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;pair&lt;/span&gt;) {\n    keyValue = pair.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n    queryParams[keyValue[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(keyValue[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;);\n});\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; queryParams;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So, here are are a few tests of the script for you to see:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Query parameters with strings only, no special characters.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; currentParams = &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlQueryParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;example.com/foo?number=zero&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(currentParams[&lt;span class=&quot;hljs-string&quot;&gt;&quot;number&quot;&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// Gives &quot;zero&quot;.&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// For the URL you stated above...&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; someParams = &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlQueryParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;www.test.com/t.html?a=1&amp;amp;b=3&amp;amp;c=m2-m3-m4-m5 &quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(someParams[&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// Gives &quot;m2-m3-m4-m5&quot;.&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// For a query params with URI encoding...&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; someParams = &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlQueryParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;www.example.com/t.html?phrase=a%20long%20shot&amp;amp;location=Silicon+Valley%2C+USA&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(someParams[&lt;span class=&quot;hljs-string&quot;&gt;&quot;phrase&quot;&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// Gives &quot;a long shot&quot;.&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(someParams[&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;// Gives &quot;Silicon Valley, USA&quot;.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;The easiest way using the &lt;code&gt;replace()&lt;/code&gt; method:&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;From the &lt;code&gt;urlStr&lt;/code&gt; string:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;paramVal = urlStr.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/.*param_name=([^&amp;amp;]*).*|(.*)/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$1&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;strong&gt;from the current &lt;em&gt;URL&lt;/em&gt;:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;paramVal = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/.*param_name=([^&amp;amp;]*).*|(.*)/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$1&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/URL&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;document.URL&lt;/code&gt;&lt;/a&gt; - interface returns the document location (page url) as a string.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; - method returns a new string with some or all matches of a &lt;em&gt;pattern&lt;/em&gt; replaced by a &lt;em&gt;replacement&lt;/em&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;/.*param_name=([^&amp;amp;]*).*/&lt;/code&gt; - the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot; rel=&quot;noreferrer&quot;&gt;regular expression&lt;/a&gt; pattern enclosed between slashes which means:\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;.*&lt;/code&gt; - zero or more of any characters,&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;param_name=&lt;/code&gt; - param name which is serched,&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;()&lt;/code&gt; - group in regular expression,&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;[^&amp;amp;]*&lt;/code&gt; - one or more of any characters excluding &lt;code&gt;&amp;amp;&lt;/code&gt;,&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;|&lt;/code&gt; - alternation,&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;$1&lt;/code&gt; - reference to first group in regular expression.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; urlStr = &lt;span class=&quot;hljs-string&quot;&gt;&apos;www.test.com/t.html?a=1&amp;amp;b=3&amp;amp;c=m2-m3-m4-m5&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = urlStr.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/.*c=([^&amp;amp;]*).*|(.*)/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; notExisted = urlStr.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/.*not_existed=([^&amp;amp;]*).*|(.*)/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`c === &apos;&lt;span class=&quot;hljs-subst&quot;&gt;${c}&lt;/span&gt;&apos;`&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`notExisted === &apos;&lt;span class=&quot;hljs-subst&quot;&gt;${notExisted}&lt;/span&gt;&apos;`&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Yet another suggestion. &lt;/p&gt;\n\n&lt;p&gt;There are some good answers already, but I found them needlessly complex and hard to understand. This is short, simple, and returns a simple associative array with key names corresponding to the token names in the URL. &lt;/p&gt;\n\n&lt;p&gt;I added a version with comments below for those who want to learn.&lt;/p&gt;\n\n&lt;p&gt;Note this relies on jQuery ($.each) for its loop, which I recommend instead of forEach. I find it simpler to ensure cross-browser compatibility using jQuery across the board rather than plugging in individual fixes to support whichever new functions aren&apos;t supported in older browsers.&lt;/p&gt;\n\n&lt;p&gt;Edit: After I wrote this I noticed Eric Elliott&apos;s answer, which is almost the same, though it uses forEach, while I&apos;m generally against (for reasons stated above).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getTokens&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tokens = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; query = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;;\n    query = query.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    query = query.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(query, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i,value&lt;/span&gt;){    \n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; token = value.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(token[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);     \n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(token[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n        tokens[key] = data;\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; tokens;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Commented version: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getTokens&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tokens = [];            &lt;span class=&quot;hljs-comment&quot;&gt;// new array to hold result&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; query = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// everything from the &apos;?&apos; onward &lt;/span&gt;\n    query = query.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);     &lt;span class=&quot;hljs-comment&quot;&gt;// remove the first character, which will be the &apos;?&apos; &lt;/span&gt;\n    query = query.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);   &lt;span class=&quot;hljs-comment&quot;&gt;// split via each &apos;&amp;amp;&apos;, leaving us an array of something=something strings&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// iterate through each something=something string&lt;/span&gt;\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(query, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i,value&lt;/span&gt;){    \n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// split the something=something string via &apos;=&apos;, creating an array containing the token name and data&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; token = value.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);   \n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// assign the first array element (the token name) to the &apos;key&apos; variable&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(token[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);     \n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// assign the second array element (the token data) to the &apos;data&apos; variable&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(token[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n\n        tokens[key] = data;     &lt;span class=&quot;hljs-comment&quot;&gt;// add an associative key/data pair to our result array, with key names being the URI token names&lt;/span&gt;\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; tokens;  &lt;span class=&quot;hljs-comment&quot;&gt;// return the array&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For the examples below we&apos;ll assume this address:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//www.example.com/page.htm?id=4&amp;amp;name=murray&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can assign the URL tokens to your own variable:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tokens = &lt;span class=&quot;hljs-title function_&quot;&gt;getTokens&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then refer to each URL token by name like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;( tokens[&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;] );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This would print &quot;4&quot;.&lt;/p&gt;\n\n&lt;p&gt;You can also simply refer to a a token name from the function directly:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;getTokens&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;] );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...which would print &quot;murray&quot;.&lt;/p&gt;\n    ","\n&lt;p&gt;Or if you don&apos;t want to reinvent the URI parsing wheel use &lt;a href=&quot;http://medialize.github.io/URI.js/&quot;&gt;URI.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;To get the value of a parameter named foo:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URI&lt;/span&gt;((&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;search&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What that does is &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Convert document.location to a string (it&apos;s an object) &lt;/li&gt;\n&lt;li&gt;Feed that string to URI.js&apos;s URI class construtor&lt;/li&gt;\n&lt;li&gt;Invoke the search() function to get the search (query) portion of the url&lt;br&gt;\n(passing true tells it to output an object)&lt;/li&gt;\n&lt;li&gt;Access the foo property on the resulting object to get the value&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Here&apos;s a fiddle for this.... &lt;a href=&quot;http://jsfiddle.net/m6tett01/12/&quot;&gt;http://jsfiddle.net/m6tett01/12/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For &lt;strong&gt;Single Parameter Value&lt;/strong&gt; like this index.html?msg=1 use following code,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;load&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;queryString&lt;/span&gt;();\n});\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;queryString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; queryString = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; varArray = queryString.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//eg. index.html?msg=1&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; param1 = varArray[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; param2 = varArray[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;strong&gt;All Parameter&lt;/strong&gt; Value use following Code,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;load&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;queryString&lt;/span&gt;();\n});\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;queryString&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; queryString = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; varArray = queryString.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;varArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;i++) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; param = varArray[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-comment&quot;&gt;//parameter-value pair&lt;/span&gt;\n    }\n} \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here I am posting one example. But it&apos;s in jQuery. Hope it will help others:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;jquery.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;jquery.url.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&amp;lt;!-- &lt;span class=&quot;hljs-attr&quot;&gt;URL&lt;/span&gt;:  www.&lt;span class=&quot;hljs-property&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;com&lt;/span&gt;/correct/?message=done&amp;amp;year=&lt;span class=&quot;hljs-number&quot;&gt;1990&lt;/span&gt;--&amp;gt;\n\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $.url.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;protocol&apos;&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; Protocol: &quot;http&quot;&lt;/span&gt;\n    $.url.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;path&apos;&lt;/span&gt;)          &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; host: &quot;www.example.com&quot;&lt;/span&gt;\n    $.url.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;query&apos;&lt;/span&gt;)         &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; path: &quot;/correct/&quot;&lt;/span&gt;\n    $.url.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;message&apos;&lt;/span&gt;)   &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; query: &quot;done&quot;&lt;/span&gt;\n    $.url.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;year&apos;&lt;/span&gt;)      &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; query: &quot;1990&quot;&lt;/span&gt;\n});\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Read a page&apos;s GET URL variables and return them as an associative array.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vars = [], hash;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; hashes = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; hashes.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n    {\n        hash = hashes[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n        vars.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(hash[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n        vars[hash[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = hash[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vars;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage for URL: http://my.site.com/location?locationId=53cc272c0364aefcb78756cd&amp;amp;shared=false&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; id = &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&quot;locationId&quot;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Got from here: &lt;a href=&quot;http://jquery-howto.blogspot.ru/2009/09/get-url-parameters-values-with-jquery.html&quot; rel=&quot;noreferrer&quot;&gt;http://jquery-howto.blogspot.ru/2009/09/get-url-parameters-values-with-jquery.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I had the need to read a URL GET variable and complete an action based on the url parameter. I searched high and low for a solution and came across this little piece of code. It basically reads the current page url, perform some regular expression on the URL then saves the url parameters in an associative array, which we can easily access.&lt;/p&gt;\n&lt;p&gt;So as an example if we had the following url with the javascript at the bottom in place.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//TestServer/Pages/NewsArchive.aspx?year=2013&amp;amp;Month=July&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;All wed need to do to get the parameters id and page are to call this:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;The Code will be:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; first = &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&quot;year&quot;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; second = &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&quot;Month&quot;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(first);\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(second);\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vars = {};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parts = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[?&amp;amp;]+([^=&amp;amp;]+)=([^&amp;amp;]*)/gi&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m,key,value&lt;/span&gt;) {\nvars[key] = value;\n});\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vars;\n}\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple way&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getParams&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;url&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;hljs-regexp&quot;&gt;/[?&amp;amp;]([^=#]+)=([^&amp;amp;#]*)/g&lt;/span&gt;,\n            params = {},\n            match;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(match = regex.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(url)) {\n            params[match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]] = match[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;];\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then call it like getParams(url)&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Elegant, functional style solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Let&apos;s create an object containing URL param names as keys, then we can easily extract the parameter by its name:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// URL: https://example.com/?test=true&amp;amp;orderId=9381  &lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Build an object containing key-value pairs&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; queryStringParams = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;keyValue&lt;/span&gt; =&amp;gt;&lt;/span&gt; keyValue.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;))\n  .&lt;span class=&quot;hljs-property&quot;&gt;reduce&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;QueryStringParams&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;params, [key, value]&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    params[key] = value;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n  }, {});\n\ntype &lt;span class=&quot;hljs-title class_&quot;&gt;QueryStringParams&lt;/span&gt; = {\n  [&lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: string]: string;\n};\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Return URL parameter called &quot;orderId&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; queryStringParams.&lt;span class=&quot;hljs-property&quot;&gt;orderId&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It&apos;s the N++ time I am looking for a clean way to do this. &lt;br&gt;\nWill save this here in case I get back cause I know I will... &lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parseUrlQuery&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; urlParams = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(value).&lt;span class=&quot;hljs-property&quot;&gt;searchParams&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(urlParams.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, key&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    acc[key] = urlParams.&lt;span class=&quot;hljs-title function_&quot;&gt;getAll&lt;/span&gt;(key)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; acc\n  }, {})\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;parseUrlQuery&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://url/path?param1=A&amp;amp;param1=B&amp;amp;param2=ABC&amp;amp;param3=61569&apos;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here is what I do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uriParams = &lt;span class=&quot;hljs-title function_&quot;&gt;getSearchParameters&lt;/span&gt;();\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(uriParams.&lt;span class=&quot;hljs-property&quot;&gt;c&lt;/span&gt;);\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// background functions:&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Get object/associative array of URL parameters&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getSearchParameters&lt;/span&gt; () {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prmstr = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; prmstr !== &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; prmstr !== &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; ? &lt;span class=&quot;hljs-title function_&quot;&gt;transformToAssocArray&lt;/span&gt;(prmstr) : {};\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// convert parameters from url-style string to associative array&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;transformToAssocArray&lt;/span&gt; (prmstr) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = {},\n      prmarr = prmstr.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; prmarr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tmparr = prmarr[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n    params[tmparr[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = tmparr[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// http:localhost:8080/path?param_1=a&amp;amp;param_2=b&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getParamsMap = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; paramsMap = {};\n    params.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;p&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; v = p.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n        paramsMap[v[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]=&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(v[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; paramsMap;\n};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// -----------------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getParamsMap&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&quot;param_1&quot;&lt;/span&gt;]);  &lt;span class=&quot;hljs-comment&quot;&gt;// should log &quot;a&quot;     &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"330":["\n&lt;p&gt;As per &lt;a href=&quot;https://stackoverflow.com/questions/142003/cross-thread-operation-not-valid-control-accessed-from-a-thread-other-than-the#142108&quot;&gt;Prerak K&apos;s update comment&lt;/a&gt; (since deleted):&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;I guess I have not presented the question properly.&lt;/p&gt;\n&lt;p&gt;Situation is this: I want to load data into a global variable based on the value of a control. I don&apos;t want to change the value of a control from the child thread. I&apos;m not going to do it ever from a child thread.&lt;/p&gt;\n&lt;p&gt;So only accessing the value so that corresponding data can be fetched from the database.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The solution you want then should look like:&lt;/p&gt;\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;UserContrl1_LOadDataMethod()\n{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; name = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(textbox1.InvokeRequired)\n    {\n        textbox1.Invoke(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MethodInvoker(&lt;span class=&quot;hljs-built_in&quot;&gt;delegate&lt;/span&gt; { name = textbox1.text; }));\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(name == &lt;span class=&quot;hljs-string&quot;&gt;&quot;MyName&quot;&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// do whatever&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Do your serious processing in the separate thread &lt;em&gt;before&lt;/em&gt; you attempt to switch back to the control&apos;s thread. For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;UserContrl1_LOadDataMethod()\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(textbox1.text==&lt;span class=&quot;hljs-string&quot;&gt;&quot;MyName&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//&amp;lt;&amp;lt;======Now it wont give exception**&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Load data correspondin to &quot;MyName&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Populate a globale variable List&amp;lt;string&amp;gt; which will be&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//bound to grid at some later stage&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(InvokeRequired)\n        {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// after we&apos;ve done all the processing, &lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.Invoke(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MethodInvoker(&lt;span class=&quot;hljs-built_in&quot;&gt;delegate&lt;/span&gt; {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// load the control with the appropriate data&lt;/span&gt;\n            }));\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Threading Model in UI&lt;/h1&gt;\n\n&lt;p&gt;Please read the &lt;em&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/threading-model&quot; rel=&quot;noreferrer&quot;&gt;Threading Model&lt;/a&gt;&lt;/em&gt; in UI applications (&lt;a href=&quot;https://msdn.microsoft.com/library/ms741870(v=vs.100).aspx&quot; rel=&quot;noreferrer&quot;&gt;old VB link is here&lt;/a&gt;) in order to understand basic concepts. The link navigates to page that describes the WPF threading model. However, Windows Forms utilizes the same idea.&lt;/p&gt;\n\n&lt;h2&gt;The UI Thread&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;There is only one thread (UI thread), that is allowed to access &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control&lt;/a&gt; and its subclasses members.&lt;/li&gt;\n&lt;li&gt;Attempt to access member of &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control&lt;/a&gt; from different thread than UI thread will cause cross-thread exception.&lt;/li&gt;\n&lt;li&gt;Since there is only one thread, all UI operations are queued as work items into that thread:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/6MtB3.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If there is no work for UI thread, then there are idle gaps that can be used by a not-UI related computing.&lt;/li&gt;\n&lt;li&gt;In order to use mentioned gaps use &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; methods:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/WQPOJ.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;h2&gt;BeginInvoke and Invoke methods&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The computing overhead of method being invoked should be small as well as computing overhead of event handler methods because the UI thread is used there - the same that is responsible for handling user input. Regardless if this is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;To perform computing expensive operation always use separate thread. Since .NET 2.0 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot; rel=&quot;noreferrer&quot;&gt;BackgroundWorker&lt;/a&gt; is dedicated to performing computing expensive operations in Windows Forms. However in new solutions you should use the async-await pattern as described &lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Use &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; methods only to update a user interface. If you use them for heavy computations, your application will block:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/UfBqr.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;h3&gt;Invoke&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; causes separate thread to wait till invoked method is completed:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/XmFJu.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;h3&gt;BeginInvoke&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot; rel=&quot;noreferrer&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; doesn&apos;t cause the separate thread to wait till invoked method is completed:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/8k5kn.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;h2&gt;Code solution&lt;/h2&gt;\n\n&lt;p&gt;Read answers on question &lt;a href=&quot;https://stackoverflow.com/questions/661561/how-to-update-the-gui-from-another-thread-in-c&quot;&gt;How to update the GUI from another thread in C#?&lt;/a&gt;.\nFor C# 5.0 and .NET 4.5 the recommended solution is &lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You only want to use &lt;code&gt;Invoke&lt;/code&gt; or &lt;code&gt;BeginInvoke&lt;/code&gt; for the bare minimum piece of work required to change the UI. Your &quot;heavy&quot; method should execute on another thread (e.g. via &lt;code&gt;BackgroundWorker&lt;/code&gt;) but then using &lt;code&gt;Control.Invoke&lt;/code&gt;/&lt;code&gt;Control.BeginInvoke&lt;/code&gt; just to update the UI. That way your UI thread will be free to handle UI events etc.&lt;/p&gt;\n\n&lt;p&gt;See my &lt;a href=&quot;http://pobox.com/~skeet/csharp/threads&quot; rel=&quot;nofollow noreferrer&quot;&gt;threading article&lt;/a&gt; for a &lt;a href=&quot;http://pobox.com/~skeet/csharp/threads/winforms.shtml&quot; rel=&quot;nofollow noreferrer&quot;&gt;WinForms example&lt;/a&gt; - although the article was written before &lt;code&gt;BackgroundWorker&lt;/code&gt; arrived on the scene, and I&apos;m afraid I haven&apos;t updated it in that respect. &lt;code&gt;BackgroundWorker&lt;/code&gt; merely simplifies the callback a bit.&lt;/p&gt;\n    ","\n&lt;p&gt;I know its too late now. However even today if you are having trouble accessing cross thread controls? This is the shortest answer till date :P&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Invoke(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Action(() =&amp;gt;\n                {\n                    label1.Text = &lt;span class=&quot;hljs-string&quot;&gt;&quot;WooHoo!!!&quot;&lt;/span&gt;;\n                }));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is how i access any form control from a thread.&lt;/p&gt;\n    ","\n&lt;p&gt;I have had this problem with the &lt;code&gt;FileSystemWatcher&lt;/code&gt; and found that the following code solved the problem:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;fsw.SynchronizingObject = this&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;The control then uses the current form object to deal with the events, and will therefore be on the same thread.&lt;/p&gt;\n    ","\n&lt;p&gt;I find the check-and-invoke code which needs to be littered within all methods related to forms to be way too verbose and unneeded. Here&apos;s a simple extension method which lets you do away with it completely:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Extensions&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Invoke&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;TControlType&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt; TControlType control, Action&amp;lt;TControlType&amp;gt; del&lt;/span&gt;) \n        &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; TControlType : Control&lt;/span&gt;\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (control.InvokeRequired)\n                control.Invoke(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Action(() =&amp;gt; del(control)));\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n                del(control);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then you can simply do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;textbox1.Invoke(t =&amp;gt; t.Text = &lt;span class=&quot;hljs-string&quot;&gt;&quot;A&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;No more messing around - simple.&lt;/p&gt;\n    ","\n&lt;p&gt;Controls in .NET are not generally thread safe.  That means you shouldn&apos;t access a control from a thread other than the one where it lives.  To get around this, you need to &lt;em&gt;invoke&lt;/em&gt; the control, which is what your 2nd sample is attempting.  &lt;/p&gt;\n\n&lt;p&gt;However, in your case all you&apos;ve done is pass the long-running method back to the main thread.  Of course, that&apos;s not really what you want to do.  You need to rethink this a little so that all you&apos;re doing on the main thread is setting a quick property here and there.&lt;/p&gt;\n    ","\n&lt;p&gt;The cleanest (and proper) solution for UI cross-threading issues is to use SynchronizationContext, see &lt;a href=&quot;http://www.lostechies.com/blogs/gabrielschenker/archive/2009/01/23/synchronizing-calls-to-the-ui-in-a-multi-threaded-application.aspx&quot; rel=&quot;noreferrer&quot;&gt;Synchronizing calls to the UI in a multi-threaded application&lt;/a&gt; article, it explains it very nicely.&lt;/p&gt;\n    ","\n&lt;p&gt;Follow the simplest (in my opinion) way to modify objects from another thread:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Threading.Tasks;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Threading;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TESTE&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Form1&lt;/span&gt; : &lt;span class=&quot;hljs-title&quot;&gt;Form&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Form1&lt;/span&gt;()&lt;/span&gt;\n        {\n            InitializeComponent();\n        }\n\n        &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;button1_Click&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; sender, EventArgs e&lt;/span&gt;)&lt;/span&gt;\n        {\n            Action&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;&amp;gt; DelegateTeste_ModifyText = THREAD_MOD;\n            Invoke(DelegateTeste_ModifyText, &lt;span class=&quot;hljs-string&quot;&gt;&quot;MODIFY BY THREAD&quot;&lt;/span&gt;);\n        }\n\n        &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;THREAD_MOD&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; teste&lt;/span&gt;)&lt;/span&gt;\n        {\n            textBox1.Text = teste;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A new look using Async/Await and callbacks.  You only need one line of code if you keep the extension method in your project.  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; A new way to use Tasks for Asynchronous calls&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Example&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; No more delegates, background workers etc. just one line of code as shown below&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; Note it is dependent on the XTask class shown next.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ExampleMethod&lt;/span&gt;()&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Still on GUI/Original Thread here&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Do your updates before the next line of code&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; XTask.RunAsync(() =&amp;gt;\n        {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Running an asynchronous task here&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Cannot update GUI Thread here, but can do lots of work&lt;/span&gt;\n        });\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Can update GUI/Original thread on this line&lt;/span&gt;\n    }\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; A class containing extension methods for the Task class &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; Put this file in folder named Extensions&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; Use prefix of X for the class it Extends&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;XTask&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; RunAsync is an extension method that encapsulates the Task.Run using a callback&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;Code&quot;&amp;gt;&lt;/span&gt;The caller is called back on the new Task (on a different thread)&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; Task &lt;span class=&quot;hljs-title&quot;&gt;RunAsync&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Action Code&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; Task.Run(() =&amp;gt;\n        {\n            Code();\n        });\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can add other things to the Extension method such as wrapping it in a Try/Catch statement, allowing caller to tell it what type to return after completion, an exception callback to caller:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Adding Try Catch, Auto Exception Logging and CallBack&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; Run Async&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;typeparam name=&quot;T&quot;&amp;gt;&lt;/span&gt;The type to return&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/typeparam&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;Code&quot;&amp;gt;&lt;/span&gt;The callback to the code&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;Error&quot;&amp;gt;&lt;/span&gt;The handled and logged exception if one occurs&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;The type expected as a competed task&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Task&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;RunAsync&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;Func&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;,T&amp;gt; Code, Action&amp;lt;Exception&amp;gt; Error&lt;/span&gt;)&lt;/span&gt;\n    {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; done =  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; Task&amp;lt;T&amp;gt;.Run(() =&amp;gt;\n        {\n            T result = &lt;span class=&quot;hljs-literal&quot;&gt;default&lt;/span&gt;(T);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n            {\n               result = Code(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Code Here&quot;&lt;/span&gt;);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception ex)\n            {\n                Console.WriteLine(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Unhandled Exception: &quot;&lt;/span&gt; + ex.Message);\n                Console.WriteLine(ex.StackTrace);\n                Error(ex);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n\n        });\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; done;\n    }\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HowToUse&lt;/span&gt;()&lt;/span&gt;\n    {\n       &lt;span class=&quot;hljs-comment&quot;&gt;//We now inject the type we want the async routine to return!&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result =  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; RunAsync&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;&amp;gt;((code) =&amp;gt; {\n           &lt;span class=&quot;hljs-comment&quot;&gt;//write code here, all exceptions are logged via the wrapped try catch.&lt;/span&gt;\n           &lt;span class=&quot;hljs-comment&quot;&gt;//return what is needed&lt;/span&gt;\n           &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; someBoolValue;\n       }, \n       error =&amp;gt; {\n\n          &lt;span class=&quot;hljs-comment&quot;&gt;//exceptions are already handled but are sent back here for further processing&lt;/span&gt;\n       });\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result)\n        {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//we can now process the result because the code above awaited for the completion before&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//moving to this statement&lt;/span&gt;\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is not the recommended way to solve this error but you can suppress it quickly, it will do the job . I prefer this for prototypes or demos . add &lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;CheckForIllegalCrossThreadCalls = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;in &lt;code&gt;Form1()&lt;/code&gt; constructor . &lt;/p&gt;\n    ","\n&lt;p&gt;You need to look at the Backgroundworker example:&lt;br&gt;\n&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot; rel=&quot;noreferrer&quot;&gt;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&lt;/a&gt;\nEspecially how it interacts with the UI layer.  Based on your posting, this seems to answer your issues.&lt;/p&gt;\n    ","\n&lt;p&gt;I found a need for this while programming an iOS-Phone monotouch app controller in a visual studio winforms prototype project outside of xamarin stuidio. Preferring to program in VS over xamarin studio as much as possible, I wanted the controller to be completely decoupled from the phone framework. This way implementing this for other frameworks like Android and Windows Phone would be much easier for future uses.&lt;/p&gt;\n\n&lt;p&gt;I wanted a solution where the GUI could respond to events without the burden of dealing with the cross threading switching code behind every button click. Basically let the class controller handle that to keep the client code simple. You could possibly have many events on the GUI where as if you could handle it in one place in the class would be cleaner. I am not a multi theading expert, let me know if this is flawed.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Form1&lt;/span&gt; : &lt;span class=&quot;hljs-title&quot;&gt;Form&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ExampleController.MyController controller;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Form1&lt;/span&gt;()&lt;/span&gt;\n    {          \n        InitializeComponent();\n        controller = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ExampleController.MyController((ISynchronizeInvoke) &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;);\n        controller.Finished += controller_Finished;\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;controller_Finished&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; returnValue&lt;/span&gt;)&lt;/span&gt;\n    {\n        label1.Text = returnValue; \n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;button1_Click&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; sender, EventArgs e&lt;/span&gt;)&lt;/span&gt;\n    {\n        controller.SubmitTask(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Do It&quot;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The GUI form is unaware the controller is running asynchronous tasks.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FinishedTasksHandler&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; returnValue&lt;/span&gt;)&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyController&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ISynchronizeInvoke _syn; \n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyController&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ISynchronizeInvoke syn&lt;/span&gt;)&lt;/span&gt; {  _syn = syn; } \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;event&lt;/span&gt; FinishedTasksHandler Finished; \n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SubmitTask&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; someValue&lt;/span&gt;)&lt;/span&gt;\n    {\n        System.Threading.ThreadPool.QueueUserWorkItem(state =&amp;gt; submitTask(someValue));\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;submitTask&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; someValue&lt;/span&gt;)&lt;/span&gt;\n    {\n        someValue = someValue + &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; + DateTime.Now.ToString();\n        System.Threading.Thread.Sleep(&lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//Finished(someValue); This causes cross threading error if called like this.&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (Finished != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (_syn.InvokeRequired)\n            {\n                _syn.Invoke(Finished, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt;[] { someValue });\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            {\n                Finished(someValue);\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is an alternative way if the object you are working with doesn&apos;t have &lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;(InvokeRequired)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is useful if you are working with the main form in a class other than the main form with an object that is in the main form, but doesn&apos;t have InvokeRequired&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;updateMainFormObject&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;FormObjectType objectWithoutInvoke, &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; text&lt;/span&gt;)&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;updateFormObjectType&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;FormObjectType objectWithoutInvoke, &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; text&lt;/span&gt;)&lt;/span&gt;\n{\n    MainForm.Invoke(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; updateMainFormObject(UpdateObject), objectWithoutInvoke, text);\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UpdateObject&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ToolStripStatusLabel objectWithoutInvoke, &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; text&lt;/span&gt;)&lt;/span&gt;\n{\n    objectWithoutInvoke.Text = text;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It works the same as above, but it is a different approach if you don&apos;t have an object with invokerequired, but do have access to the MainForm&lt;/p&gt;\n    ","\n&lt;p&gt;Along the same lines as previous answers,\nbut a very short addition that Allows to use all Control properties without having cross thread invokation exception.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Helper Method&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; Helper method to determin if invoke required, if so will rerun method on correct thread.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; if not do nothing.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;c&quot;&amp;gt;&lt;/span&gt;Control that might require invoking&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;param name=&quot;a&quot;&amp;gt;&lt;/span&gt;action to preform on control thread if so.&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&lt;span class=&quot;hljs-doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;true if invoke required&lt;span class=&quot;hljs-doctag&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ControlInvokeRequired&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Control c, Action a&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (c.InvokeRequired) c.Invoke(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MethodInvoker(&lt;span class=&quot;hljs-built_in&quot;&gt;delegate&lt;/span&gt;\n    {\n        a();\n    }));\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Sample Usage&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// usage on textbox&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UpdateTextBox1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;String text&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Check if invoke requied if so return - as i will be recalled in correct thread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (ControlInvokeRequired(textBox1, () =&amp;gt; UpdateTextBox1(text))) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    textBox1.Text = ellapsed;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Or any control&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UpdateControl&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Color c, String s&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Check if invoke requied if so return - as i will be recalled in correct thread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (ControlInvokeRequired(myControl, () =&amp;gt; UpdateControl(c, s))) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    myControl.Text = s;\n    myControl.BackColor = c;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.Invoke(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MethodInvoker(&lt;span class=&quot;hljs-built_in&quot;&gt;delegate&lt;/span&gt;\n            {\n                &lt;span class=&quot;hljs-comment&quot;&gt;//your code here;&lt;/span&gt;\n            }));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For example to get the text from a Control of the UI thread:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Delegate&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; GetControlTextInvoker(&lt;span class=&quot;hljs-keyword&quot;&gt;ByVal&lt;/span&gt; ctl &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Control) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;Private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; GetControlText(&lt;span class=&quot;hljs-keyword&quot;&gt;ByVal&lt;/span&gt; ctl &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Control) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; ctl.InvokeRequired &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;text&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;CStr&lt;/span&gt;(ctl.Invoke(\n            &lt;span class=&quot;hljs-built_in&quot;&gt;New&lt;/span&gt; GetControlTextInvoker(&lt;span class=&quot;hljs-built_in&quot;&gt;AddressOf&lt;/span&gt; GetControlText), ctl))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;text&lt;/span&gt; = ctl.&lt;span class=&quot;hljs-keyword&quot;&gt;Text&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;text&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple and re-usable way to work around this problem.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Extension Method&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FormExts&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LoadOnUI&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt; Form frm, Action action&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (frm.InvokeRequired) frm.Invoke(action);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; action.Invoke();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Sample Usage&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;OnAnyEvent&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; sender, EventArgs args&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.LoadOnUI(() =&amp;gt;\n    {\n        label1.Text = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        button1.Text = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/661561/how-to-update-the-gui-from-another-thread-in-c&quot;&gt;Same question : how-to-update-the-gui-from-another-thread-in-c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Two Ways:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Return value in e.result and use it to set yout textbox value in backgroundWorker_RunWorkerCompleted event&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Declare some variable to hold these kind of values in a separate class (which will work as data holder) . Create static instance of this class adn you can access it over any thread.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;data_holder_for_controls&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;//it will hold value for your label&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt;  &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; status = &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;.Empty;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Demo&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt;  data_holder_for_controls d1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; data_holder_for_controls();\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Main&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;[] args&lt;/span&gt;)&lt;/span&gt;\n    {\n        ThreadStart ts = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ThreadStart(perform_logic);\n        Thread t1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Thread(ts);\n        t1.Start();\n        t1.Join();\n        &lt;span class=&quot;hljs-comment&quot;&gt;//your_label.Text=d1.status; --- can access it from any thread &lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;perform_logic&lt;/span&gt;()&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//put some code here in this function&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++)\n        {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//statements here&lt;/span&gt;\n        }\n        &lt;span class=&quot;hljs-comment&quot;&gt;//set result in status variable&lt;/span&gt;\n        d1.status = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Task done&quot;&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simply use this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.Invoke((MethodInvoker)&lt;span class=&quot;hljs-built_in&quot;&gt;delegate&lt;/span&gt;\n            {\n                YourControl.Property= &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// runs thread safe&lt;/span&gt;\n            });\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Action y; //declared inside class&lt;/p&gt;\n\n&lt;p&gt;label1.Invoke(y=()=&amp;gt;label1.Text=&quot;text&quot;);&lt;/p&gt;\n    ","\n&lt;p&gt;There are two options for cross thread operations.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Control.InvokeRequired Property \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and second one is to use &lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;SynchronizationContext Post Method\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Control.InvokeRequired is only useful when working controls inherited from Control class while SynchronizationContext can be used anywhere. Some useful information is as following links&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.ilmlinks.com/Snippets/cross-thread-update-ui-in-dotnet&quot; rel=&quot;nofollow noreferrer&quot;&gt;Cross Thread Update UI | .Net&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.ilmlinks.com/Snippets/cross-thread-update-ui-in-dotnet-synchronization-context&quot; rel=&quot;nofollow noreferrer&quot;&gt;Cross Thread Update UI using SynchronizationContext | .Net&lt;/a&gt;&lt;/p&gt;\n    "]},"page":"57","randomQuestions":[{"title":"How to remove the space between inline/inline-block elements?","slug":"how-to-remove-the-space-between-inlineinline-block-elements-1657384532273"},{"title":"How do I declare a 2d array in C++ using new?","slug":"how-do-i-declare-a-2d-array-in-c++-using-new-1657388441163"},{"title":"Undefined, unspecified and implementation-defined behavior","slug":"undefined-unspecified-and-implementation-defined-behavior-1657384516085"},{"title":"Sorting object property by values","slug":"sorting-object-property-by-values-1657388367300"},{"title":"Self-references in object literals / initializers","slug":"self-references-in-object-literals-initializers-1657384835356"},{"title":"My regex is matching too much. How do I make it stop? [duplicate]","slug":"my-regex-is-matching-too-much.-how-do-i-make-it-stop-duplicate-1657384845028"},{"title":"Android permission doesn't work even if I have declared it","slug":"android-permission-doesn't-work-even-if-i-have-declared-it-1657387726990"},{"title":"How do I make Git forget about a file that was tracked, but is now in .gitignore?","slug":"how-do-i-make-git-forget-about-a-file-that-was-tracked-but-is-now-in-.gitignore-1657387328843"},{"title":"Javascript infamous Loop issue? [duplicate]","slug":"javascript-infamous-loop-issue-duplicate-1657387498530"},{"title":"Creating multiline strings in JavaScript","slug":"creating-multiline-strings-in-javascript-1657388025414"},{"title":"\"is\" operator behaves unexpectedly with integers","slug":"\"is\"-operator-behaves-unexpectedly-with-integers-1657387563823"},{"title":"What are good ways to prevent SQL injection? [duplicate]","slug":"what-are-good-ways-to-prevent-sql-injection-duplicate-1657388431570"},{"title":"What is this weird colon-member (\" : \") syntax in the constructor?","slug":"what-is-this-weird-colon-member-(\"-:-\")-syntax-in-the-constructor-1657387264047"},{"title":"Trouble with UTF-8 characters; what I see is not what I stored","slug":"trouble-with-utf-8-characters-what-i-see-is-not-what-i-stored-1657384817490"},{"title":"How to manage startActivityForResult on Android","slug":"how-to-manage-startactivityforresult-on-android-1657387967393"},{"title":"Convert form data to JavaScript object with jQuery","slug":"convert-form-data-to-javascript-object-with-jquery-1657388036834"},{"title":"Arrays, linked lists and other data structures in cmd.exe (batch) script","slug":"arrays-linked-lists-and-other-data-structures-in-cmd.exe-(batch)-script-1657387558484"},{"title":"What methods of ‘clearfix’ can I use?","slug":"what-methods-of-'clearfix'-can-i-use-1657387672727"},{"title":"Why is processing a sorted array faster than processing an unsorted array?","slug":"why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array-1657385497444"},{"title":"MySQL pivot row into dynamic number of columns","slug":"mysql-pivot-row-into-dynamic-number-of-columns-1657387981930"}]},"__N_SSG":true}