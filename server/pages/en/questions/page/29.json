{"pageProps":{"data":{"count":610,"rows":[{"id":470,"title":"What is the difference between \"px\", \"dip\", \"dp\" and \"sp\"?","slug":"what-is-the-difference-between-\"px\"-\"dip\"-\"dp\"-and-\"sp\"-1657388093250","postType":"QUESTION","createdAt":"2022-07-09T17:34:53.000Z","updatedAt":"2022-07-09T17:34:53.000Z","tags":[{"id":2389,"name":"dimension","slug":"dimension","createdAt":"2022-07-09T17:34:53.000Z","updatedAt":"2022-07-09T17:34:53.000Z","Questions_Tags":{"questionId":470,"tagId":2389}},{"id":2390,"name":"android-layout","slug":"android-layout","createdAt":"2022-07-09T17:34:53.000Z","updatedAt":"2022-07-09T17:34:53.000Z","Questions_Tags":{"questionId":470,"tagId":2390}},{"id":2391,"name":"units-of-measurement","slug":"units-of-measurement","createdAt":"2022-07-09T17:34:53.000Z","updatedAt":"2022-07-09T17:34:53.000Z","Questions_Tags":{"questionId":470,"tagId":2391}}]},{"id":469,"title":"Is there a unique Android device ID?","slug":"is-there-a-unique-android-device-id-1657388089268","postType":"QUESTION","createdAt":"2022-07-09T17:34:49.000Z","updatedAt":"2022-07-09T17:34:49.000Z","tags":[{"id":2386,"name":"uniqueidentifier","slug":"uniqueidentifier","createdAt":"2022-07-09T17:34:49.000Z","updatedAt":"2022-07-09T17:34:49.000Z","Questions_Tags":{"questionId":469,"tagId":2386}}]},{"id":468,"title":"What's the difference between INNER JOIN, LEFT JOIN, RIGHT JOIN and FULL JOIN? [duplicate]","slug":"what's-the-difference-between-inner-join-left-join-right-join-and-full-join-duplicate-1657388082887","postType":"QUESTION","createdAt":"2022-07-09T17:34:42.000Z","updatedAt":"2022-07-09T17:34:42.000Z","tags":[]},{"id":467,"title":"How to check whether a string contains a substring in JavaScript?","slug":"how-to-check-whether-a-string-contains-a-substring-in-javascript-1657388080698","postType":"QUESTION","createdAt":"2022-07-09T17:34:40.000Z","updatedAt":"2022-07-09T17:34:40.000Z","tags":[{"id":2378,"name":"string-matching","slug":"string-matching","createdAt":"2022-07-09T17:34:40.000Z","updatedAt":"2022-07-09T17:34:40.000Z","Questions_Tags":{"questionId":467,"tagId":2378}},{"id":2379,"name":"substring","slug":"substring","createdAt":"2022-07-09T17:34:40.000Z","updatedAt":"2022-07-09T17:34:40.000Z","Questions_Tags":{"questionId":467,"tagId":2379}}]},{"id":466,"title":"MySQL Error 1093 - Can't specify target table for update in FROM clause","slug":"mysql-error-1093-can't-specify-target-table-for-update-in-from-clause-1657388078961","postType":"QUESTION","createdAt":"2022-07-09T17:34:38.000Z","updatedAt":"2022-07-09T17:34:38.000Z","tags":[{"id":2373,"name":"subquery","slug":"subquery","createdAt":"2022-07-09T17:34:39.000Z","updatedAt":"2022-07-09T17:34:39.000Z","Questions_Tags":{"questionId":466,"tagId":2373}},{"id":2374,"name":"sql-delete","slug":"sql-delete","createdAt":"2022-07-09T17:34:39.000Z","updatedAt":"2022-07-09T17:34:39.000Z","Questions_Tags":{"questionId":466,"tagId":2374}},{"id":2375,"name":"mysql-error-1093","slug":"mysql-error-1093","createdAt":"2022-07-09T17:34:39.000Z","updatedAt":"2022-07-09T17:34:39.000Z","Questions_Tags":{"questionId":466,"tagId":2375}}]}]},"answers":{"466":["\n&lt;p&gt;&lt;em&gt;Update: This answer covers the general error classification. For a more specific answer about how to best handle the OP&apos;s exact query, please see other answers to this question&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;In MySQL, you can&apos;t modify the same table which you use in the SELECT part.&lt;br&gt;\nThis behaviour is documented at:\n&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/update.html&quot; rel=&quot;noreferrer&quot;&gt;http://dev.mysql.com/doc/refman/5.6/en/update.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Maybe you can just join the table to itself&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If the logic is simple enough to re-shape the query, lose the subquery and join the table to itself, employing appropriate selection criteria. This will cause MySQL to see the table as two different things, allowing destructive changes to go ahead.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; tbl &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; tbl &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; ....\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; a.col &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.col\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Alternatively, try nesting the subquery deeper into a from clause ...&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you absolutely need the subquery, there&apos;s a workaround, but it&apos;s\nugly for several reasons, including performance:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; tbl &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; col &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; ... &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (SELECT.... &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; x);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The nested subquery in the FROM clause creates an &lt;em&gt;implicit temporary\ntable&lt;/em&gt;, so it doesn&apos;t count as the same table you&apos;re updating. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;... but watch out for the query optimiser&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;However, beware that from &lt;a href=&quot;http://dev.mysql.com/doc/relnotes/mysql/5.7/en/news-5-7-6.html&quot; rel=&quot;noreferrer&quot;&gt;MySQL 5.7.6&lt;/a&gt; and onward, the optimiser may optimise out the subquery, and still give you the error. Luckily, the  &lt;code&gt;optimizer_switch&lt;/code&gt; variable can be used to switch off this behaviour; although I couldn&apos;t recommend doing this as anything more than a short term fix, or for small one-off tasks.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; optimizer_switch &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;derived_merge=off&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Thanks to &lt;a href=&quot;https://stackoverflow.com/users/345716/peter-v-m%C3%B8rch&quot;&gt;Peter V. MÃ¸rch&lt;/a&gt; for this advice in the comments.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Example technique was from Baron Schwartz, &lt;a href=&quot;http://grokbase.com/t/mysql/mysql/08259dm24b/error-you-cant-specify-target-table-for-update-in-from-clause&quot; rel=&quot;noreferrer&quot;&gt;originally published at Nabble&lt;/a&gt;, paraphrased and extended here.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/users/445500/nexusrex&quot;&gt;NexusRex&lt;/a&gt; provided  a &lt;a href=&quot;https://stackoverflow.com/a/8620162/1101589&quot;&gt;very good solution&lt;/a&gt; for deleting with join from the same table.&lt;/p&gt;\n\n&lt;p&gt;If you do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; cid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category \n        &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; story_category &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; category_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;category.id\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;you are going to get an error.&lt;/p&gt;\n\n&lt;p&gt;But if you wrap the condition in one more select:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; cid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; cid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category \n        &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; story_category &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; category_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;category.id\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; c\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;it would do the right thing!!&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; The query optimizer does a &lt;a href=&quot;https://mariadb.com/kb/en/library/derived-table-merge-optimization/&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;derived merge optimization&lt;/em&gt;&lt;/a&gt; for the first query (which causes it to fail with the error), but the second query doesn&apos;t qualify for the &lt;em&gt;derived merge optimization&lt;/em&gt;. Hence the optimizer is forced to execute the subquery first.&lt;/p&gt;\n    ","\n&lt;p&gt;Recently i had to update records in the same table i did it like below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; skills &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; s, (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; id  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; skills &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; type &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Programming&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; p\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; s.type &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Development&apos;&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; s.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p.id;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The &lt;code&gt;inner join&lt;/code&gt; in your sub-query is unnecessary.  It looks like you want to delete the entries in &lt;code&gt;story_category&lt;/code&gt; where the &lt;code&gt;category_id&lt;/code&gt; is not in the &lt;code&gt;category&lt;/code&gt; table.&lt;/p&gt;\n&lt;p&gt;Instead of that:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n         story_category &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; category_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;category.id);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Do this:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you can&apos;t do &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; a&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt;\n    (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;condition&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;because it is the same table, you can trick and do :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; a&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt;\n    (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;condition&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; t)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;[update or delete or whatever]&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; cid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; cid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; story_category &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; category_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;category.id\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; c\n)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is what I did for updating a Priority column value by 1 if it is &amp;gt;=1 in a table and in its WHERE clause using a subquery on same table to make sure that at least one row contains Priority=1 (because that was the condition to be checked while performing update) :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; My_Table\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; Priority&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;Priority &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; Priority &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;TRUE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; My_Table &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; Priority&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; LIMIT &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; t);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I know it&apos;s a bit ugly but it does works fine.&lt;/p&gt;\n    ","\n&lt;p&gt;For the specific query the OP is trying to achieve, the ideal and most efficient way to do this is NOT to use a subquery at all.  &lt;/p&gt;\n\n&lt;p&gt;Here are the &lt;code&gt;LEFT JOIN&lt;/code&gt; versions of the OP&apos;s two queries:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; s.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category s \n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; category c \n&lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; c.id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;s.category_id \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; c.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: &lt;code&gt;DELETE s&lt;/code&gt; restricts delete operations to the &lt;code&gt;story_category&lt;/code&gt; table.&lt;br&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/delete.html#idm45469393574032&quot; rel=&quot;noreferrer&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; s \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category s \n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; category c \n&lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; c.id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;s.category_id \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; c.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The simplest way to do this is use a table alias when you are referring parent query table inside the sub query.&lt;/p&gt;\n\n&lt;p&gt;Example :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; xxx_tab (trans_id) &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; ((&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(trans_id)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; xxx_tab));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Change it to:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; xxx_tab (trans_id) &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; ((&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(P.trans_id)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; xxx_tab P));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could insert the desired rows&apos; ids into a temp table and then delete all the rows that are found in that table.&lt;/p&gt;\n\n&lt;p&gt;which may be what @Cheekysoft meant by doing it in two steps.&lt;/p&gt;\n    ","\n&lt;p&gt;According to &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/update.html&quot; rel=&quot;nofollow&quot;&gt; the Mysql UPDATE Syntax&lt;/a&gt; linked by @CheekySoft, it says right at the bottom.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Currently, you cannot update a table and select from the same table in a subquery.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I guess you are deleting from store_category while still selecting from it in the union.&lt;/p&gt;\n    ","\n&lt;p&gt;Try to save result of Select statement in separate variable and then use that for delete query.&lt;/p&gt;\n    ","\n&lt;p&gt;try this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; STORY_CATEGORY) sc;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If something does not work, when coming thru the front-door, then take the back-door:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; if &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; apples;\n&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; if &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; apples(variety &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;primary&lt;/span&gt; key, price &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; apples &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fuji&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-string&quot;&gt;&apos;gala&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; if &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; apples_new;\n&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; if &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; apples_new &lt;span class=&quot;hljs-keyword&quot;&gt;like&lt;/span&gt; apples;\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; apples_new &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; apples;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;update&lt;/span&gt; apples_new\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; price &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; price &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; apples &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; variety &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;gala&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; variety &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;fuji&apos;&lt;/span&gt;;\nrename &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; apples &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; apples_orig;\nrename &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; apples_new &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; apples;\n&lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; apples_orig;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&apos;s fast. The bigger the data, the better.&lt;/p&gt;\n    ","\n&lt;p&gt;how about this query hope it helps&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; story_category &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; category.id &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category) cat &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; story_category.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; cat.id &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; cat.id &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As far as concerns, you want to delete rows in &lt;code&gt;story_category&lt;/code&gt; that do not exist in &lt;code&gt;category&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Here is your original query to identify the rows to delete:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;  story_category \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; \n       story_category &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; category_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;category.id\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Combining &lt;code&gt;NOT IN&lt;/code&gt; with a subquery that &lt;code&gt;JOIN&lt;/code&gt;s the original table seems unecessarily convoluted. This can  be expressed in a more straight-forward manner with &lt;code&gt;not exists&lt;/code&gt; and a correlated subquery:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; sc.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; story_category sc\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; category c &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; c.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sc.category_id);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now it is easy to turn this to a &lt;code&gt;delete&lt;/code&gt; statement:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; story_category\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; category c &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; c.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; story_category.category_id);    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This quer would run on any MySQL version, as well as in most other databases that I know.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://dbfiddle.uk/?rdbms=mysql_5.7&amp;amp;fiddle=d73925fbe6a24605b1cf9fe66a94d07c&quot; rel=&quot;nofollow noreferrer&quot;&gt;Demo on DB Fiddle&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- set-up&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; story_category(category_id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; category (id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; story_category &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- your original query to identify offending rows&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;  story_category \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; category_id &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; category.id \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; \n       story_category &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; category_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;category.id);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;| category_id |\n| ----------: |\n|           1 |\n|           2 |\n|           3 |\n&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- a functionally-equivalent, simpler query for this&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; sc.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; story_category sc\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; category c &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; c.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sc.category_id)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;| category_id |\n| ----------: |\n|           1 |\n|           2 |\n|           3 |\n&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- the delete query&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; story_category\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; category c &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; c.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; story_category.category_id);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- outcome&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; story_category;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;| category_id |\n| ----------: |\n|           4 |\n|           5 |\n&lt;/pre&gt;\n    "],"467":["\n&lt;p&gt;ECMAScript&amp;nbsp;6  introduced &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;String.prototype.includes&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; string = &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; substring = &lt;span class=&quot;hljs-string&quot;&gt;&quot;oo&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(string.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(substring)); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;includes&lt;/code&gt; &lt;a href=&quot;https://caniuse.com/#feat=es6-string-includes&quot; rel=&quot;noreferrer&quot;&gt;doesnt have Internet&amp;nbsp;Explorer support&lt;/a&gt;, though. In ECMAScript&amp;nbsp;5 or older environments, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;String.prototype.indexOf&lt;/code&gt;&lt;/a&gt;, which returns -1 when a substring cannot be found:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; string = &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; substring = &lt;span class=&quot;hljs-string&quot;&gt;&quot;oo&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(string.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(substring) !== -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes&quot; rel=&quot;noreferrer&quot;&gt;There is a &lt;code&gt;String.prototype.includes&lt;/code&gt; in ES6&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;potato&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;to&quot;&lt;/span&gt;);\n&amp;gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note that this &lt;a href=&quot;https://caniuse.com/?v=1#feat=es6-string-includes&quot; rel=&quot;noreferrer&quot;&gt;does not work in Internet Explorer or some other old browsers&lt;/a&gt; with no or incomplete ES6 support. To make it work in old browsers, you may wish to use a transpiler like &lt;a href=&quot;https://babeljs.io/&quot; rel=&quot;noreferrer&quot;&gt;Babel&lt;/a&gt;, a shim library like &lt;a href=&quot;https://github.com/paulmillr/es6-shim&quot; rel=&quot;noreferrer&quot;&gt;es6-shim&lt;/a&gt;, or this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Polyfill&quot; rel=&quot;noreferrer&quot;&gt;polyfill from MDN&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;includes&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;includes&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;search, start&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;use strict&apos;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; start !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;number&apos;&lt;/span&gt;) {\n      start = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (start + search.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(search, start) !== -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    }\n  };\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another alternative is &lt;a href=&quot;https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm&quot; rel=&quot;nofollow noreferrer&quot;&gt;KMP&lt;/a&gt; (KnuthMorrisPratt).&lt;/p&gt;\n&lt;p&gt;The KMP algorithm searches for a length-&lt;em&gt;m&lt;/em&gt; substring in a length-&lt;em&gt;n&lt;/em&gt; string in worst-case O(&lt;em&gt;n&lt;/em&gt;+&lt;em&gt;m&lt;/em&gt;) time, compared to a worst-case of O(&lt;em&gt;n&lt;/em&gt;&lt;em&gt;m&lt;/em&gt;) for the naive algorithm, so using KMP may be reasonable if you care about worst-case time complexity.&lt;/p&gt;\n&lt;p&gt;Here&apos;s a JavaScript implementation by Project Nayuki, taken from &lt;a href=&quot;https://www.nayuki.io/res/knuth-morris-pratt-string-matching/kmp-string-matcher.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.nayuki.io/res/knuth-morris-pratt-string-matching/kmp-string-matcher.js&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Searches for the given pattern string in the given text string using the Knuth-Morris-Pratt string matching algorithm.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// If the pattern is found, this returns the index of the start of the earliest match in &apos;text&apos;. Otherwise -1 is returned.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;kmpSearch&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;pattern, text&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (pattern.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Immediate match&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Compute longest suffix-prefix table&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; lsp = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// Base case&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;lt; pattern.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = lsp[i - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// Start by assuming we&apos;re extending the previous LSP&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (j &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; pattern[i] !== pattern[j])\n      j = lsp[j - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (pattern[i] === pattern[j])\n      j++;\n    lsp.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(j);\n  }\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Walk through text string&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Number of chars matched in pattern&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; text.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (j &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; text[i] != pattern[j])\n      j = lsp[j - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// Fall back in the pattern&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (text[i]  == pattern[j]) {\n      j++; &lt;span class=&quot;hljs-comment&quot;&gt;// Next char matched, increment position&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (j == pattern.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; i - (j - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Not found&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;kmpSearch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ays&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;haystack&apos;&lt;/span&gt;) != -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;kmpSearch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;asdf&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;haystack&apos;&lt;/span&gt;) != -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    "],"468":["\n&lt;p&gt;Reading this original article on &lt;strong&gt;The Code Project&lt;/strong&gt; will help you a lot: &lt;a href=&quot;https://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins&quot; rel=&quot;noreferrer&quot;&gt;Visual Representation of SQL Joins&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/VQ5XP.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt;\n&lt;p&gt;Also check this post: &lt;a href=&quot;http://blog.sqlauthority.com/2008/04/22/sql-server-better-performance-left-join-or-not-in/&quot; rel=&quot;noreferrer&quot;&gt;SQL SERVER  Better Performance  LEFT JOIN or NOT IN?&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Find original one at: &lt;a href=&quot;https://stackoverflow.com/questions/3308122/how-do-i-decide-when-to-use-right-joins-left-joins-or-inner-joins-or-how-to-dete/3308153#3308153&quot;&gt;Difference between JOIN and OUTER JOIN in MySQL&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n&lt;p&gt;An SQL JOIN clause is used to combine rows from two or more tables,\nbased on a common field between them.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;There are different types of joins available in SQL:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;INNER JOIN&lt;/strong&gt;: returns rows when there is a match in both tables.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;LEFT JOIN&lt;/strong&gt;: returns all rows from the left table, even if there are no matches in the right table.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;RIGHT JOIN&lt;/strong&gt;: returns all rows from the right table, even if there are no matches in the left table.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;FULL JOIN&lt;/strong&gt;: combines the results of both left and right outer joins.&lt;/p&gt;\n&lt;p&gt;The joined table will contain all records from both the tables and fill in NULLs for missing matches on either side.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;SELF JOIN&lt;/strong&gt;: joins a table to itself as if the table were two tables, temporarily renaming at least one table in the SQL statement.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;CARTESIAN JOIN&lt;/strong&gt;: returns the Cartesian product of the sets of records from the two or more joined tables.&lt;/p&gt;\n&lt;p&gt;We can take each first four joins in Details :&lt;/p&gt;\n&lt;p&gt;We have two tables with the following values.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;TableA&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id  firstName                  lastName\n.......................................\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   arun                        prasanth                 \n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   ann                         antony                   \n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   sruthy                      abc                      \n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt;                         abc                                           \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;TableB&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id2 age Place\n................\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;  kerala\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;  usa\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;  ekm\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;  chennai\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;....................................................................&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;INNER JOIN&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : gives the intersection of the two tables, i.e.  rows TableA and TableB have in common.&lt;/p&gt;\n&lt;p&gt;Syntax&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; table1.column1, table2.column2...\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table1\n &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; table2\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; table1.common_field &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; table2.common_field;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Apply it in our sample table :&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; TableA.firstName,TableA.lastName,TableB.age,TableB.Place\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; TableA\n &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; TableB\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; TableA.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; TableB.id2;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;firstName       lastName       age  Place\n..............................................\narun            prasanth        &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;  kerala\nann             antony          &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;  usa\nsruthy          abc             &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;  ekm\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;LEFT JOIN&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : gives all selected rows in TableA, plus any common selected rows in TableB.&lt;/p&gt;\n&lt;p&gt;Syntax&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; table1.column1, table2.column2...\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table1\n  &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; table2\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; table1.common_field &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; table2.common_field;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Apply it in our sample table :&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; TableA.firstName,TableA.lastName,TableB.age,TableB.Place\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; TableA\n  &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; TableB\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; TableA.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; TableB.id2;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;firstName                   lastName                    age   Place\n...............................................................................\narun                        prasanth                    &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;    kerala\nann                         antony                      &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;    usa\nsruthy                      abc                         &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;    ekm\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt;                         abc                         &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;RIGHT JOIN&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : gives all selected rows in TableB, plus any common selected rows in TableA.&lt;/p&gt;\n&lt;p&gt;Syntax&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; table1.column1, table2.column2...\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table1\n &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; table2\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; table1.common_field &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; table2.common_field;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Apply it in our sample table :&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; TableA.firstName,TableA.lastName,TableB.age,TableB.Place\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; TableA\n &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; TableB\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; TableA.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; TableB.id2;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;firstName                   lastName                    age     Place\n...............................................................................\narun                        prasanth                    &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;     kerala\nann                         antony                      &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;     usa\nsruthy                      abc                         &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;     ekm\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;                        &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;                        &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;     chennai\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;FULL JOIN&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : returns all selected values from both tables.&lt;/p&gt;\n&lt;p&gt;Syntax&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; table1.column1, table2.column2...\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table1\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; table2\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; table1.common_field &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; table2.common_field;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Apply it in our sample table :&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; TableA.firstName,TableA.lastName,TableB.age,TableB.Place\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; TableA\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; TableB\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; TableA.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; TableB.id2;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;firstName                   lastName                    age    Place\n...............................................................................\narun                        prasanth                    &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;    kerala\nann                         antony                      &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;    usa\nsruthy                      abc                         &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;    ekm\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt;                         abc                         &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;                        &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;                        &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;    chennai\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Interesting Fact&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;For INNER joins the order doesn&apos;t matter.&lt;/li&gt;\n&lt;li&gt;For (LEFT, RIGHT or FULL) OUTER joins, the order matters.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Better to go check this &lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/9614922/does-the-join-order-matter-in-sql&quot;&gt;Link&lt;/a&gt;&lt;/strong&gt; it will give you interesting details about join order.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;INNER JOIN&lt;/strong&gt; gets all records that are common between both tables based on the supplied ON clause.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;LEFT JOIN&lt;/strong&gt; gets all records from the LEFT linked and the related record from the right table ,but if you have selected some columns from the RIGHT table, if there is no related records, these columns will contain NULL.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;RIGHT JOIN&lt;/strong&gt; is like the above but gets all records in the RIGHT table.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;FULL JOIN&lt;/strong&gt; gets all records from both tables and puts NULL in the columns where related records do not exist in the opposite table.&lt;/p&gt;\n    "],"469":["\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Settings.Secure#ANDROID_ID&lt;/code&gt;&lt;/a&gt; returns the Android ID as an &lt;em&gt;&lt;a href=&quot;https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID&quot; rel=&quot;noreferrer&quot;&gt;unique for each user&lt;/a&gt;&lt;/em&gt; 64-bit hex string.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.provider.Settings.Secure;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;android_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Secure.getString(getContext().getContentResolver(),\n                                                        Secure.ANDROID_ID);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Also read &lt;strong&gt;Best practices for unique identifiers&lt;/strong&gt;: &lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot; rel=&quot;noreferrer&quot;&gt;https://developer.android.com/training/articles/user-data-ids&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: As of recent versions of Android, many of the issues with &lt;code&gt;ANDROID_ID&lt;/code&gt; have been resolved, and I believe this approach is no longer necessary. Please take a look at &lt;a href=&quot;https://stackoverflow.com/a/2785493/231078&quot;&gt;Anthony&apos;s answer&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Full disclosure: my app used the below approach originally but no longer uses this approach, and we now use the approach outlined in the &lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Blog&lt;/a&gt; entry that &lt;a href=&quot;https://stackoverflow.com/a/5626208/231078&quot;&gt;emmby&apos;s answer&lt;/a&gt; links to (namely, generating and saving a &lt;a href=&quot;http://developer.android.com/reference/java/util/UUID.html#randomUUID()&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;UUID#randomUUID()&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;There are many answers to this question, most of which will only work &quot;some&quot; of the time, and unfortunately, that&apos;s not good enough.&lt;/p&gt;\n&lt;p&gt;Based on my tests of devices (all phones, at least one of which is not activated):&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;All devices tested returned a value for &lt;code&gt;TelephonyManager.getDeviceId()&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;All GSM devices (all tested with a SIM) returned a value for &lt;code&gt;TelephonyManager.getSimSerialNumber()&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;All CDMA devices returned null for &lt;code&gt;getSimSerialNumber()&lt;/code&gt; (as expected)&lt;/li&gt;\n&lt;li&gt;All devices with a Google account added returned a value for &lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;All CDMA devices returned the same value (or derivation of the same value) for both &lt;code&gt;ANDROID_ID&lt;/code&gt; and &lt;code&gt;TelephonyManager.getDeviceId()&lt;/code&gt; -- &lt;em&gt;as long as&lt;/em&gt; a Google account has been added during setup.&lt;/li&gt;\n&lt;li&gt;I did not yet have a chance to test GSM devices with no SIM, a GSM device with no Google account added, or any of the devices in airplane mode.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;So if you want something unique to the device itself, &lt;code&gt;TM.getDeviceId()&lt;/code&gt; &lt;em&gt;should&lt;/em&gt; be sufficient.  Obviously, some users are more paranoid than others, so it might be useful to hash 1 or more of these identifiers, so that the string is still virtually unique to the device, but does not explicitly identify the user&apos;s actual device.  For example, using &lt;code&gt;String.hashCode()&lt;/code&gt;, combined with a UUID:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;TelephonyManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;tm&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TelephonyManager) getBaseContext().getSystemService(Context.TELEPHONY_SERVICE);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; String tmDevice, tmSerial, androidId;\ntmDevice = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + tm.getDeviceId();\ntmSerial = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + tm.getSimSerialNumber();\nandroidId = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + android.provider.Settings.Secure.getString(getContentResolver(), android.provider.Settings.Secure.ANDROID_ID);\n\n&lt;span class=&quot;hljs-type&quot;&gt;UUID&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceUuid&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UUID&lt;/span&gt;(androidId.hashCode(), ((&lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt;)tmDevice.hashCode() &amp;lt;&amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;) | tmSerial.hashCode());\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; deviceUuid.toString();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;might result in something like: &lt;code&gt;00000000-54b3-e7c7-0000-000046bffd97&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;It works well enough for me.&lt;/p&gt;\n&lt;p&gt;As Richard mentions below, don&apos;t forget that you need permission to read the &lt;code&gt;TelephonyManager&lt;/code&gt; properties, so add this to your manifest:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;uses-permission&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.READ_PHONE_STATE&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;import libraries&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Context;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.telephony.TelephonyManager;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.view.View;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;#Last Updated: 6/2/15&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;After reading every Stack Overflow post about creating a unique ID, the Google developer blog, and Android documentation, I feel as if the &apos;Pseudo ID&apos; is the best possible option.&lt;/p&gt;\n&lt;h1&gt;Main Issue: Hardware vs Software&lt;/h1&gt;\n&lt;h3&gt;Hardware&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Users can change their hardware, Android tablet, or phone, so unique IDs based on hardware are not good ideas for &lt;strong&gt;TRACKING USERS&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;For &lt;strong&gt;TRACKING HARDWARE&lt;/strong&gt;, this is a great idea&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;Software&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Users can wipe/change their ROM if they are rooted&lt;/li&gt;\n&lt;li&gt;You can track users across platforms (iOS, Android, Windows, and Web)&lt;/li&gt;\n&lt;li&gt;The best want to &lt;strong&gt;TRACK AN INDIVIDUAL USER&lt;/strong&gt; with their &lt;strong&gt;consent&lt;/strong&gt; is to simply have them login (make this seamless using OAuth)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;hr&gt;\n&lt;p&gt;#Overall breakdown with Android&lt;/p&gt;\n&lt;p&gt;###- Guarantee uniqueness (include rooted devices) for API &amp;gt;= 9/10 (99.5% of Android devices)\n###- No extra permissions&lt;/p&gt;\n&lt;p&gt;Psuedo code:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; API &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;: (&lt;span class=&quot;hljs-number&quot;&gt;99.5&lt;/span&gt;% of devices)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; unique ID containing serial id (rooted devices may be different)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; the unique ID of build information (may overlap &lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt; - API &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Thanks to @stansult for posting &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/9186943/950427&quot;&gt;all of our options&lt;/a&gt;&lt;/em&gt; (in this Stack Overflow question).&lt;/p&gt;\n&lt;p&gt;##List of options - reasons why/ why not to use them:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;User Email - Software&lt;/strong&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;User could change email - HIGHLY unlikely&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;API 5+ &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.GET_ACCOUNTS&quot; /&amp;gt;&lt;/code&gt; or&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;API 14+ &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_PROFILE&quot; /&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_CONTACTS&quot; /&amp;gt;&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/2112965/how-to-get-the-android-devices-primary-e-mail-address&quot;&gt;How to get the Android device&apos;s primary e-mail address&lt;/a&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;User Phone Number - Software&lt;/strong&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Users could change phone numbers - HIGHLY unlikely&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_PHONE_STATE&quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;IMEI - Hardware&lt;/strong&gt; (only phones, needs &lt;strong&gt;&lt;code&gt;android.permission.READ_PHONE_STATE&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Most users hate the fact that it says &quot;Phone Calls&quot; in the permission. Some users give bad ratings because they believe you are simply stealing their personal information when all you really want to do is track device installs. It is obvious that you are collecting data.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_PHONE_STATE&quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Android ID - Hardware&lt;/strong&gt; (can be null, can change upon factory reset, can be altered on a rooted device)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Since it can be &apos;null&apos;, we can check for &apos;null&apos; and change its value, but this means it will no longer be unique.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If you have a user with a factory reset device, the value may have changed or altered on the rooted device so there may be duplicates entries if you are tracking user installs.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;WLAN MAC Address - Hardware&lt;/strong&gt; (needs &lt;strong&gt;&lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;This could be the second-best option, but you are still collecting and storing a unique identifier that comes directly from a user. This is obvious that you are collecting data.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.ACCESS_WIFI_STATE &quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Bluetooth MAC Address - Hardware&lt;/strong&gt; (devices with Bluetooth, needs &lt;strong&gt;&lt;code&gt;android.permission.BLUETOOTH&lt;/code&gt;&lt;/strong&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Most applications on the market do not use Bluetooth, and so if your application doesn&apos;t use Bluetooth and you are including this, the user could become suspicious.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.BLUETOOTH &quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pseudo-Unique ID - Software&lt;/strong&gt; (for all Android devices)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Very possible, may contain collisions - See my method posted below!&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;This allows you to have an &apos;almost unique&apos; ID from the user without taking anything that is private. You can create your own anonymous ID from device information.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;hr&gt;\n&lt;p&gt;I know there isn&apos;t any &apos;perfect&apos; way of getting a unique ID without using permissions; however, sometimes we only really need to track the device installation. When it comes to creating a unique ID, we can create a &apos;pseudo unique id&apos; based solely on information that the Android API gives us without using extra permissions. This way, we can show the user respect and try to offer a good user experience as well.&lt;/p&gt;\n&lt;p&gt;With a pseudo-unique id, you really only run into the fact that there may be duplicates based on the fact that there are similar devices. You can tweak the combined method to make it more unique; however, some developers need to track device installs and this will do the trick or performance based on similar devices.&lt;/p&gt;\n&lt;p&gt;##API &amp;gt;= 9:&lt;/p&gt;\n&lt;p&gt;If their Android device is API 9 or over, this is guaranteed to be unique because of the &apos;Build.SERIAL&apos; field.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;REMEMBER&lt;/strong&gt;, you are technically only missing out on around 0.5% of users &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot; rel=&quot;noreferrer&quot;&gt;who have API &amp;lt; 9&lt;/a&gt;. So you can focus on the rest: This is 99.5% of the users!&lt;/p&gt;\n&lt;p&gt;##API &amp;lt; 9:&lt;/p&gt;\n&lt;p&gt;If the user&apos;s Android device is lower than API 9; hopefully, they have not done a factory reset and their &apos;Secure.ANDROID_ID&apos; will be preserved or not &apos;null&apos;. (see &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot; rel=&quot;noreferrer&quot;&gt;http://developer.android.com/about/dashboards/index.html&lt;/a&gt;)&lt;/p&gt;\n&lt;p&gt;##If all else fails:&lt;/p&gt;\n&lt;p&gt;If all else fails, if the user does have lower than API 9 (lower than Gingerbread), has reset their device, or &apos;Secure.ANDROID_ID&apos; returns &apos;null&apos;, then simply the ID returned will be solely based on their Android device information. This is where the collisions can happen.&lt;/p&gt;\n&lt;p&gt;Changes:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Removed &apos;Android.SECURE_ID&apos; because factory resets could cause the value to change&lt;/li&gt;\n&lt;li&gt;Edited the code to change on API&lt;/li&gt;\n&lt;li&gt;Changed the Pseudo&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Please take a look at the method below:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Return pseudo unique ID\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ID&lt;/span&gt;\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUniquePsuedoID&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// If all else fails, if the user does have lower than API 9 (lower&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// than Gingerbread), has reset their device or &apos;Secure.ANDROID_ID&apos;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// returns &apos;null&apos;, then simply the ID returned will be solely based&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// off their Android device information. This is where the collisions&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// can happen.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Thanks http://www.pocketmagic.net/?p=1662!&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Try not to use DISPLAY, HOST or ID - these items could change.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// If there are collisions, there will be overlapping data&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; m_szDevIDShort = &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; + (&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;BOARD&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;BRAND&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;CPU_ABI&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;DEVICE&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;MANUFACTURER&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;MODEL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;PRODUCT&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;length&lt;/span&gt;() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Thanks to @Roman SL!&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// https://stackoverflow.com/a/4789483/950427&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Only devices with API &amp;gt;= 9 have android.os.Build.SERIAL&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// http://developer.android.com/reference/android/os/Build.html#SERIAL&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// If a user upgrades software or roots their device, there will be a duplicate entry&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; serial = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        serial = android.&lt;span class=&quot;hljs-property&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getField&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SERIAL&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Go ahead and return the serial for api =&amp;gt; 9&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;UUID&lt;/span&gt;(m_szDevIDShort.&lt;span class=&quot;hljs-title function_&quot;&gt;hashCode&lt;/span&gt;(), serial.&lt;span class=&quot;hljs-title function_&quot;&gt;hashCode&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Exception&lt;/span&gt; exception) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// String needs to be initialized&lt;/span&gt;\n        serial = &lt;span class=&quot;hljs-string&quot;&gt;&quot;serial&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// some value&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Thanks @Joe!&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// https://stackoverflow.com/a/2853253/950427&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Finally, combine the values we have found by using the UUID class to create a unique identifier&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;UUID&lt;/span&gt;(m_szDevIDShort.&lt;span class=&quot;hljs-title function_&quot;&gt;hashCode&lt;/span&gt;(), serial.&lt;span class=&quot;hljs-title function_&quot;&gt;hashCode&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;#New (for apps with ads AND Google Play Services):&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;From the Google Play Developer&apos;s console:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Beginning August 1st, 2014, the Google Play Developer Program Policy\nrequires all-new app uploads and updates to use the advertising ID in\nlieu of any other persistent identifiers for any advertising purposes.\nLearn more&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;:&lt;/p&gt;\n&lt;p&gt;Permission:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;uses-permission&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Code:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.google.android.gms.ads.identifier.AdvertisingIdClient;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.google.android.gms.ads.identifier.AdvertisingIdClient.Info;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.google.android.gms.common.GooglePlayServicesAvailabilityException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.google.android.gms.common.GooglePlayServicesNotAvailableException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;\n...\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Do not call this function from the main thread. Otherwise, &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// an IllegalStateException will be thrown.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getIdThread&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n\n  &lt;span class=&quot;hljs-type&quot;&gt;Info&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;adInfo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    adInfo = AdvertisingIdClient.getAdvertisingIdInfo(mContext);\n\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException exception) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Unrecoverable error connecting to Google Play services (e.g.,&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// the old version of the service doesn&apos;t support getting AdvertisingId).&lt;/span&gt;\n \n  } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (GooglePlayServicesAvailabilityException exception) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Encountered a recoverable error connecting to Google Play services. &lt;/span&gt;\n\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (GooglePlayServicesNotAvailableException exception) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Google Play services is not available entirely.&lt;/span&gt;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; adInfo.getId();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;isLAT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; adInfo.isLimitAdTrackingEnabled();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Source/Docs:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/google/play-services/id.html&quot; rel=&quot;noreferrer&quot;&gt;http://developer.android.com/google/play-services/id.html&lt;/a&gt;\n&lt;a href=&quot;http://developer.android.com/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.html&quot; rel=&quot;noreferrer&quot;&gt;http://developer.android.com/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.html&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;##Important:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;It is intended that the advertising ID completely replace existing\nusage of other identifiers for ads purposes (such as the use of ANDROID_ID\nin Settings.Secure) when Google Play Services is available. Cases\nwhere Google Play Services is unavailable are indicated by a\nGooglePlayServicesNotAvailableException being thrown by\ngetAdvertisingIdInfo().&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;##Warning, users can reset:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://en.kioskea.net/faq/34732-android-reset-your-advertising-id&quot; rel=&quot;noreferrer&quot;&gt;http://en.kioskea.net/faq/34732-android-reset-your-advertising-id&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;I have tried to reference every link that I took information from. If you are missing and need to be included, please comment!&lt;/p&gt;\n&lt;h2&gt;Google Player Services InstanceID&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://developers.google.com/instance-id/&quot; rel=&quot;noreferrer&quot;&gt;https://developers.google.com/instance-id/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As Dave Webb mentions, the &lt;a href=&quot;https://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Blog has an article&lt;/a&gt; that covers this.  Their preferred solution is to track app installs rather than devices, and that will work well for most use cases.  The blog post will show you the necessary code to make that work, and I recommend you check it out.&lt;/p&gt;\n\n&lt;p&gt;However, the blog post goes on to discuss solutions if you need a device identifier rather than an app installation identifier.  I spoke with someone at Google to get some additional clarification on a few items in the event that you need to do so.  Here&apos;s what I discovered about device identifiers that&apos;s NOT mentioned in the aforementioned blog post:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;ANDROID_ID is the preferred device identifier.  ANDROID_ID is perfectly reliable on versions of Android &amp;lt;=2.1 or &amp;gt;=2.3.  Only 2.2 has the problems mentioned in the post.&lt;/li&gt;\n&lt;li&gt;Several devices by several manufacturers are affected by the ANDROID_ID bug in 2.2.&lt;/li&gt;\n&lt;li&gt;As far as I&apos;ve been able to determine, all affected devices have &lt;a href=&quot;https://issuetracker.google.com/issues/36920653&quot; rel=&quot;noreferrer&quot;&gt;the same ANDROID_ID&lt;/a&gt;, which is &lt;a href=&quot;https://www.google.com/search?sourceid=chrome&amp;amp;ie=UTF-8&amp;amp;q=9774d56d682e549c&quot; rel=&quot;noreferrer&quot;&gt;9774d56d682e549c&lt;/a&gt;.  Which is also the same device id reported by the emulator, btw.&lt;/li&gt;\n&lt;li&gt;Google believes that OEMs have patched the issue for many or most of their devices, but I was able to verify that as of the beginning of April 2011, at least, it&apos;s still quite easy to find devices that have the broken ANDROID_ID.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Based on Google&apos;s recommendations, I implemented a class that will generate a unique UUID for each device, using ANDROID_ID as the seed where appropriate, falling back on TelephonyManager.getDeviceId() as necessary, and if that fails, resorting to a randomly generated unique UUID that is persisted across app restarts (but not app re-installations).&lt;/p&gt;\n\n&lt;p&gt;Note that for devices that have to fallback on the device ID, the unique ID &lt;strong&gt;WILL&lt;/strong&gt; persist across factory resets.  This is something to be aware of.  If you need to ensure that a factory reset will reset your unique ID, you may want to consider falling back directly to the random UUID instead of the device ID.&lt;/p&gt;\n\n&lt;p&gt;Again, this code is for a device ID, not an app installation ID.  For most situations, an app installation ID is probably what you&apos;re looking for.  But if you do need a device ID, then the following code will probably work for you.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Context;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.SharedPreferences;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.provider.Settings.Secure;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.telephony.TelephonyManager;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.UnsupportedEncodingException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.UUID;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceUuidFactory&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;PREFS_FILE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;device_id.xml&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;PREFS_DEVICE_ID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;device_id&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; UUID uuid;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DeviceUuidFactory&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (uuid == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;synchronized&lt;/span&gt; (DeviceUuidFactory.class) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (uuid == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;prefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; context\n                            .getSharedPreferences(PREFS_FILE, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; prefs.getString(PREFS_DEVICE_ID, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (id != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-comment&quot;&gt;// Use the ids previously computed and stored in the&lt;/span&gt;\n                        &lt;span class=&quot;hljs-comment&quot;&gt;// prefs file&lt;/span&gt;\n                        uuid = UUID.fromString(id);\n                    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;androidId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Secure.getString(\n                            context.getContentResolver(), Secure.ANDROID_ID);\n                        &lt;span class=&quot;hljs-comment&quot;&gt;// Use the Android ID unless it&apos;s broken, in which case&lt;/span&gt;\n                        &lt;span class=&quot;hljs-comment&quot;&gt;// fallback on deviceId,&lt;/span&gt;\n                        &lt;span class=&quot;hljs-comment&quot;&gt;// unless it&apos;s not available, then fallback on a random&lt;/span&gt;\n                        &lt;span class=&quot;hljs-comment&quot;&gt;// number which we store to a prefs file&lt;/span&gt;\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-string&quot;&gt;&quot;9774d56d682e549c&quot;&lt;/span&gt;.equals(androidId)) {\n                                uuid = UUID.nameUUIDFromBytes(androidId\n                                        .getBytes(&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf8&quot;&lt;/span&gt;));\n                            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                                &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (\n                                    (TelephonyManager) context\n                                    .getSystemService(Context.TELEPHONY_SERVICE))\n                                    .getDeviceId();\n                                uuid = deviceId != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ? UUID\n                                    .nameUUIDFromBytes(deviceId\n                                            .getBytes(&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf8&quot;&lt;/span&gt;)) : UUID\n                                    .randomUUID();\n                            }\n                        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (UnsupportedEncodingException e) {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RuntimeException&lt;/span&gt;(e);\n                        }\n                        &lt;span class=&quot;hljs-comment&quot;&gt;// Write the value out to the prefs file&lt;/span&gt;\n                        prefs.edit()\n                                .putString(PREFS_DEVICE_ID, uuid.toString())\n                                .commit();\n                    }\n                }\n            }\n        }\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Returns a unique UUID for the current android device. As with all UUIDs,\n     * this unique ID is &quot;very highly likely&quot; to be unique across all Android\n     * devices. Much more so than ANDROID_ID is.\n     * \n     * The UUID is generated by using ANDROID_ID as the base key if appropriate,\n     * falling back on TelephonyManager.getDeviceID() if ANDROID_ID is known to\n     * be incorrect, and finally falling back on a random UUID that&apos;s persisted\n     * to SharedPreferences if getDeviceID() does not return a usable value.\n     * \n     * In some rare circumstances, this ID may change. In particular, if the\n     * device is factory reset a new device ID may be generated. In addition, if\n     * a user upgrades their phone from certain buggy implementations of Android\n     * 2.2 to a newer, non-buggy version of Android, the device ID may change.\n     * Or, if a user uninstalls your app on a device that has neither a proper\n     * Android ID nor a Device ID, this ID may change on reinstallation.\n     * \n     * Note that if the code falls back on using TelephonyManager.getDeviceId(),\n     * the resulting ID will NOT change after a factory reset. Something to be\n     * aware of.\n     * \n     * Works around a bug in Android 2.2 for many devices when using ANDROID_ID\n     * directly.\n     * \n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@see&lt;/span&gt; http://code.google.com/p/android/issues/detail?id=10603\n     * \n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; a UUID that may be used to uniquely identify your device for most\n     *         purposes.\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; UUID &lt;span class=&quot;hljs-title function_&quot;&gt;getDeviceUuid&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; uuid;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is the code that Reto Meier used in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_I/O&quot;&gt;Google I/O&lt;/a&gt; presentation this year to get a unique id for the user:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;uniqueID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;PREF_UNIQUE_ID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;PREF_UNIQUE_ID&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (uniqueID == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sharedPrefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; context.getSharedPreferences(\n                PREF_UNIQUE_ID, Context.MODE_PRIVATE);\n        uniqueID = sharedPrefs.getString(PREF_UNIQUE_ID, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (uniqueID == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            uniqueID = UUID.randomUUID().toString();\n            &lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sharedPrefs.edit();\n            editor.putString(PREF_UNIQUE_ID, uniqueID);\n            editor.commit();\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; uniqueID;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you couple this with a backup strategy to send preferences to the cloud (also described in Reto&apos;s &lt;a href=&quot;http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html&quot;&gt;talk&lt;/a&gt;, you should have an id that ties to a user and sticks around after the device has been wiped, or even replaced. I plan to use this in analytics going forward (in other words, I have not done that bit yet :).&lt;/p&gt;\n    ","\n&lt;p&gt;It&apos;s a simple question, with no simple answer.&lt;/p&gt;\n&lt;p&gt;Moreover, all of the existing answers here are either out of date or unreliable.&lt;/p&gt;\n&lt;p&gt;So &lt;strong&gt;if you&apos;re searching for a solution after 2020&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;Here are a few things to keep in mind:&lt;/p&gt;\n&lt;p&gt;All the hardware-based identifiers (IMEI, MAC, Serial Number, etc.) are unreliable for non-google devices (except Pixels and Nexuses), which are statistically &lt;a href=&quot;https://www.appbrain.com/stats/top-manufacturers&quot; rel=&quot;noreferrer&quot;&gt;most of the android active devices worldwide&lt;/a&gt;. Therefore official &lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot; rel=&quot;noreferrer&quot;&gt;Android identifiers best practices&lt;/a&gt; clearly states:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Avoid using hardware identifiers&lt;/strong&gt;, such as IMEI, MAC address, etc...&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Which makes most of the answers here invalid. Also due to different android security updates, some of them require newer and stricter runtime permissions, which can be simply denied by the user.&lt;/p&gt;\n&lt;p&gt;For example &lt;code&gt;CVE-2018-9489&lt;/code&gt; affects all the WIFI based techniques mentioned above.&lt;/p&gt;\n&lt;p&gt;That makes those identifiers not only unreliable but also inaccessible in many cases.&lt;/p&gt;\n&lt;p&gt;So in simpler words: &lt;strong&gt;don&apos;t use those techniques&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;Many other answers here are suggesting to use the &lt;code&gt;AdvertisingIdClient&lt;/code&gt;, which is also incompatible, as it&apos;s by design only for ads profiling. It&apos;s also stated in the &lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot; rel=&quot;noreferrer&quot;&gt;official reference&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Only use an Advertising ID for user profiling or ads use cases&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;It&apos;s not only unreliable for device identification, but you also must follow the &lt;a href=&quot;https://play.google.com/about/monetization-ads/ads/#!?zippy_activeEl=ad-id#ad-id&quot; rel=&quot;noreferrer&quot;&gt;user privacy regarding ad tracking&lt;/a&gt; policy, which states clearly that users can reset or block it at any moment.&lt;/p&gt;\n&lt;p&gt;So &lt;strong&gt;don&apos;t use it either&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;Since you cannot have the desired static globally unique and reliable device identifier. Android&apos;s official reference suggests:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Use a Firebase installation ID (FID) or a privately stored GUID&lt;/strong&gt; whenever possible for all other use cases, except for payment fraud prevention and telephony.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;It&apos;s unique for the application installation on the device, so when the user uninstalls the app - it&apos;s wiped out, so it&apos;s not 100% reliable, but it&apos;s the next best thing.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; As of today the &lt;code&gt;FirebaseInstanceId&lt;/code&gt; is deprecated, you should use &lt;code&gt;FirebaseInstallations&lt;/code&gt; instead.&lt;/p&gt;\n&lt;p&gt;To use &lt;code&gt;FirebaseInstallations&lt;/code&gt; add the &lt;a href=&quot;https://firebase.google.com/support/release-notes/android#latest_sdk_versions&quot; rel=&quot;noreferrer&quot;&gt;latest firebase-messaging dependency&lt;/a&gt; into your gradle&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-delphi&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;com.google.firebase:firebase-messaging:23.0.0&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And use the code below to get the firebase ID:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-rust&quot;&gt;FirebaseInstallations.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getInstance&lt;/span&gt;().&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getId&lt;/span&gt;().&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;addOnCompleteListener&lt;/span&gt;(task &lt;span class=&quot;hljs-punctuation&quot;&gt;-&amp;gt;&lt;/span&gt; {\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;if&lt;/span&gt; (task.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;isSuccessful&lt;/span&gt;()) {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; firebaseIdentifier = task.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getResult&lt;/span&gt;();\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do what you need with firebaseIdentifier&lt;/span&gt;\n     }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you need to store the device identification on your remote server, then don&apos;t store it as is (plain text), but a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot; rel=&quot;noreferrer&quot;&gt;hash with salt&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Today it&apos;s not only a best practice, you actually must do it by law according to &lt;a href=&quot;https://gdpr.eu/eu-gdpr-personal-data/&quot; rel=&quot;noreferrer&quot;&gt;GDPR - identifiers&lt;/a&gt; and similar regulations.&lt;/p&gt;\n    ","\n&lt;p&gt;Also you might consider the Wi-Fi adapter&apos;s MAC address. Retrieved like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;WifiManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;wm&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (WifiManager)Ctxt.getSystemService(Context.WIFI_SERVICE);\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; wm.getConnectionInfo().getMacAddress();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Requires permission &lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt; in the manifest.&lt;/p&gt;\n\n&lt;p&gt;Reported to be available even when Wi-Fi is not connected. If Joe from the answer above gives this one a try on his many devices, that&apos;d be nice.&lt;/p&gt;\n\n&lt;p&gt;On some devices, it&apos;s not available when Wi-Fi is turned off.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; From Android 6.x, it returns consistent fake mac address: &lt;code&gt;02:00:00:00:00:00&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Theres rather useful info &lt;strong&gt;&lt;a href=&quot;http://www.pocketmagic.net/?p=1662&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;It covers five different ID types:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;IMEI&lt;/strong&gt; (only for Android devices with Phone use; needs &lt;code&gt;android.permission.READ_PHONE_STATE&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Pseudo-Unique ID&lt;/strong&gt; (for all Android devices)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Android ID&lt;/strong&gt; (can be null, can change upon factory reset, can be altered on rooted phone)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;WLAN MAC Address&lt;/strong&gt; string (needs &lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;BT MAC Address&lt;/strong&gt; string (devices with Bluetooth, needs &lt;code&gt;android.permission.BLUETOOTH&lt;/code&gt;)&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;The official Android Developers Blog now has a full article just about this very subject, &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Identifying App Installations&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;At &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_I/O&quot;&gt;Google I/O&lt;/a&gt; Reto Meier released a robust answer to how to approach this which should meet most developers needs to track users across installations. Anthony Nolan shows the direction in his answer, but I thought I&apos;d write out the full approach so that others can easily see how to do it (it took me a while to figure out the details).&lt;/p&gt;\n\n&lt;p&gt;This approach will give you an anonymous, secure user ID which will be persistent for the user across different devices (based on the primary Google account) and across installs. The basic approach is to generate a random user ID and to store this in the apps&apos; shared preferences. You then use Google&apos;s backup agent to store the shared preferences linked to the Google account in the cloud.&lt;/p&gt;\n\n&lt;p&gt;Let&apos;s go through the full approach. First, we need to create a backup for our SharedPreferences using the Android Backup Service. Start by registering your app via &lt;code&gt;http://developer.android.com/google/backup/signup.html&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Google will give you a backup service key which you need to add to the manifest. You also need to tell the application to use the BackupAgent as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:label&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;MyApplication&quot;&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;android:backupAgent&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;MyBackupAgent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    ...\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta-data&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.google.android.backup.api_key&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;your_backup_service_key&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;application&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you need to create the backup agent and tell it to use the helper agent for sharedpreferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyBackupAgent&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BackupAgentHelper&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-comment&quot;&gt;// The name of the SharedPreferences file&lt;/span&gt;\n    static &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;PREFS&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;user_preferences&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// A key to uniquely identify the set of backup data&lt;/span&gt;\n    static &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;PREFS_BACKUP_KEY&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;prefs&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Allocate a helper and add it to the backup agent&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    public void onCreate() {\n        &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferencesBackupHelper&lt;/span&gt; helper = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferencesBackupHelper&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;,          &lt;span class=&quot;hljs-type&quot;&gt;PREFS&lt;/span&gt;);\n        addHelper(&lt;span class=&quot;hljs-type&quot;&gt;PREFS_BACKUP_KEY&lt;/span&gt;, helper);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To complete the backup you need to create an instance of BackupManager in your main Activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;BackupManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;backupManager&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BackupManager&lt;/span&gt;(context);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Finally create a user ID, if it doesn&apos;t already exist, and store it in the SharedPreferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getUserID&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;uniqueID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;PREF_UNIQUE_ID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;PREF_UNIQUE_ID&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (uniqueID == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sharedPrefs&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; context.getSharedPreferences(\n                MyBackupAgent.PREFS, Context.MODE_PRIVATE);\n        uniqueID = sharedPrefs.getString(PREF_UNIQUE_ID, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (uniqueID == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            uniqueID = UUID.randomUUID().toString();\n            &lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sharedPrefs.edit();\n            editor.putString(PREF_UNIQUE_ID, uniqueID);\n            editor.commit();\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//backup the changes&lt;/span&gt;\n            &lt;span class=&quot;hljs-type&quot;&gt;BackupManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mBackupManager&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BackupManager&lt;/span&gt;(context);\n            mBackupManager.dataChanged();\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; uniqueID;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This User_ID will now be persistent across installations, even if the user moves device.&lt;/p&gt;\n\n&lt;p&gt;For more information on this approach see &lt;a href=&quot;http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html&quot;&gt;Reto&apos;s talk&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;And for full details of how to implement the backup agent see &lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/data/backup.html&quot;&gt;Data Backup&lt;/a&gt;&lt;/em&gt;. I particularly recommend the section at the bottom on testing as the backup does not happen instantaneously and so to test you have to force the backup.&lt;/p&gt;\n    ","\n&lt;p&gt;I think this is sure fire way of building a skeleton for a unique ID...  check it out.&lt;/p&gt;\n\n&lt;p&gt;Pseudo-Unique ID, that works on all Android devices\nSome devices don&apos;t have a phone (eg. Tablets) or for some reason, you don&apos;t want to include the READ_PHONE_STATE permission. You can still read details like ROM Version, Manufacturer name, CPU type, and other hardware details, that will be well suited if you want to use the ID for a serial key check, or other general purposes. The ID computed in this way won&apos;t be unique: it is possible to find two devices with the same ID (based on the same hardware and ROM image) but the changes in real-world applications are negligible. For this purpose you can use the Build class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-perl&quot;&gt;String m_szDevIDShort = &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt;we make this look like a valid IMEI\n            Build.BOARD.length()%10+ Build.BRAND.length()%10 +\n            Build.CPU_ABI.length()%10 + Build.DEVICE.length()%10 +\n            Build.DISPLAY.length()%10 + Build.HOST.length()%10 +\n            Build.ID.length()%10 + Build.MANUFACTURER.length()%10 +\n            Build.MODEL.length()%10 + Build.PRODUCT.length()%10 +\n            Build.TAGS.length()%10 + Build.TYPE.length()%10 +\n            Build.USER.length()%10 ; &lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt; digits\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Most of the Build members are strings, what we&apos;re doing here is to take their length and transform it via modulo in a digit. We have 13 such digits and we are adding two more in front (35) to have the same size ID as the IMEI (15 digits). There are other possibilities here are well, just have a look at these strings.\nReturns something like &lt;code&gt;355715565309247&lt;/code&gt;. No special permission is required, making this approach very convenient.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;(Extra info: The technique given above was copied from an article on &lt;a href=&quot;http://www.pocketmagic.net/?p=1662&quot; rel=&quot;noreferrer&quot;&gt;Pocket Magic&lt;/a&gt;.)&lt;/p&gt;\n    ","\n&lt;p&gt;The following code returns the device serial number using a hidden Android API. But, this code don&apos;t works on Samsung Galaxy Tab because &quot;ro.serialno&quot; isn&apos;t set on this device.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; serial = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    Class&amp;lt;?&amp;gt; c = Class.forName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.os.SystemProperties&quot;&lt;/span&gt;);\n    Method &lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt; = c.getMethod(&lt;span class=&quot;hljs-string&quot;&gt;&quot;get&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\n    serial = (&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;.invoke(c, &lt;span class=&quot;hljs-string&quot;&gt;&quot;ro.serialno&quot;&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception ignored) {\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using the code below, you can get the unique device ID of an Android OS device as a string.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;deviceId&lt;/span&gt; = Secure.getString(getApplicationContext().getContentResolver(), Secure.ANDROID_ID)&lt;span class=&quot;hljs-comment&quot;&gt;; &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A &lt;a href=&quot;http://developer.android.com/reference/android/os/Build.html#SERIAL&quot; rel=&quot;noreferrer&quot;&gt;Serial&lt;/a&gt; field was added to the &lt;code&gt;Build&lt;/code&gt; class in API level 9 (Android 2.3 - Gingerbread). Documentation says it represents the hardware serial number. Thus it should be unique, if it exists on the device. &lt;/p&gt;\n\n&lt;p&gt;I don&apos;t know whether it is actually supported (=not null) by all devices with API level &amp;gt;= 9 though.&lt;/p&gt;\n    ","\n&lt;p&gt;One thing I&apos;ll add - I have one of those unique situations.&lt;/p&gt;\n\n&lt;p&gt;Using:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;deviceId&lt;/span&gt; = Secure.getString(this.getContext().getContentResolver(), Secure.ANDROID_ID)&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Turns out that even though my Viewsonic G Tablet reports a DeviceID that is not Null, every single G Tablet reports the same number.&lt;/p&gt;\n\n&lt;p&gt;Makes it interesting playing &quot;Pocket Empires&quot; which gives you instant access to someone&apos;s account based on the &quot;unique&quot; DeviceID.&lt;/p&gt;\n\n&lt;p&gt;My device does not have a cell radio.&lt;/p&gt;\n    ","\n&lt;p&gt;For detailed instructions on how to get a unique identifier for each Android device your application is installed from, see the official Android Developers Blog posting &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot; rel=&quot;noreferrer&quot;&gt;Identifying App Installations&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;It seems the best way is for you to generate one yourself upon installation and subsequently read it when the application is re-launched.&lt;/p&gt;\n\n&lt;p&gt;I personally find this acceptable but not ideal. No one identifier provided by Android works in all instances as most are dependent on the phone&apos;s radio states (Wi-Fi on/off, cellular on/off, Bluetooth on/off). The others, like &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt; must be implemented by the manufacturer and are not guaranteed to be unique.&lt;/p&gt;\n\n&lt;p&gt;The following is an example of writing data to an &lt;em&gt;installation&lt;/em&gt; file that would be stored along with any other data the application saves locally.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Installation&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;INSTALLATION&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;INSTALLATION&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (sID == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-type&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;installation&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(context.getFilesDir(), INSTALLATION);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!installation.exists())\n                    writeInstallationFile(installation);\n                sID = readInstallationFile(installation);\n            } \n            &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RuntimeException&lt;/span&gt;(e);\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sID;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;readInstallationFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(File installation)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {\n        &lt;span class=&quot;hljs-type&quot;&gt;RandomAccessFile&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RandomAccessFile&lt;/span&gt;(installation, &lt;span class=&quot;hljs-string&quot;&gt;&quot;r&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt;[] bytes = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;byte&lt;/span&gt;[(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;) f.length()];\n        f.readFully(bytes);\n        f.close();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(bytes);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;writeInstallationFile&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(File installation)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {\n        &lt;span class=&quot;hljs-type&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileOutputStream&lt;/span&gt;(installation);\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; UUID.randomUUID().toString();\n        out.write(id.getBytes());\n        out.close();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Add Below code in class file:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;TelephonyManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;tm&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TelephonyManager) getBaseContext()\n            .getSystemService(SplashActivity.TELEPHONY_SERVICE);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; String tmDevice, tmSerial, androidId;\n    tmDevice = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + tm.getDeviceId();\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DeviceIMEI&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + tmDevice);\n    tmSerial = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + tm.getSimSerialNumber();\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;GSM devices Serial Number[simcard] &quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + tmSerial);\n    androidId = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + android.provider.Settings.Secure.getString(getContentResolver(),\n            android.provider.Settings.Secure.ANDROID_ID);\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;androidId CDMA devices&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + androidId);\n    &lt;span class=&quot;hljs-type&quot;&gt;UUID&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceUuid&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UUID&lt;/span&gt;(androidId.hashCode(),\n            ((&lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt;) tmDevice.hashCode() &amp;lt;&amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;) | tmSerial.hashCode());\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; deviceUuid.toString();\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;deviceIdUUID universally unique identifier&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + deviceId);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceModelName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; android.os.Build.MODEL;\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Model Name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + deviceModelName);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceUSER&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; android.os.Build.USER;\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name USER&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + deviceUSER);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;devicePRODUCT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; android.os.Build.PRODUCT;\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PRODUCT&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + devicePRODUCT);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceHARDWARE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; android.os.Build.HARDWARE;\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HARDWARE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + deviceHARDWARE);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;deviceBRAND&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; android.os.Build.BRAND;\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;BRAND&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + deviceBRAND);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myVersion&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; android.os.Build.VERSION.RELEASE;\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;VERSION.RELEASE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + myVersion);\n    &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sdkVersion&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; android.os.Build.VERSION.SDK_INT;\n    Log.v(&lt;span class=&quot;hljs-string&quot;&gt;&quot;VERSION.SDK_INT&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + sdkVersion);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Add in AndroidManifest.xml:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;uses-permission&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.READ_PHONE_STATE&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There are a lot of different approaches to work around those &lt;code&gt;ANDROID_ID&lt;/code&gt; issues (may be &lt;code&gt;null&lt;/code&gt; sometimes or devices of a specific model always return the same ID) with pros and cons:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Implementing a custom ID generation algorithm (based on device properties that are supposed to be static and won&apos;t change -&amp;gt; who knows)&lt;/li&gt;\n&lt;li&gt;Abusing other IDs like &lt;a href=&quot;https://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity&quot; rel=&quot;noreferrer&quot;&gt;IMEI&lt;/a&gt;, serial number, Wi-Fi/Bluetooth-MAC address (they won&apos;t exist on all devices or additional permissions become necessary)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I myself prefer using an existing OpenUDID implementation (see &lt;a href=&quot;https://github.com/ylechelle/OpenUDID&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/ylechelle/OpenUDID&lt;/a&gt;) for Android (see &lt;a href=&quot;https://github.com/vieux/OpenUDID&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/vieux/OpenUDID&lt;/a&gt;). It is easy to integrate and makes use of the &lt;code&gt;ANDROID_ID&lt;/code&gt; with fallbacks for those issues mentioned above.&lt;/p&gt;\n    ","\n&lt;p&gt;There are 30+ answers here and some are same and some are unique. This answer is based on few of those answers. One of them being @Lenn Dolling&apos;s answer.&lt;/p&gt;\n\n&lt;p&gt;It combines 3 IDs and creates a 32-digit hex string. It has worked very well for me.  &lt;/p&gt;\n\n&lt;p&gt;3 IDs are:&lt;br&gt;\n&lt;strong&gt;Pseudo-ID&lt;/strong&gt; - It is generated based on physical device specifications&lt;br&gt;\n&lt;strong&gt;ANDROID_ID&lt;/strong&gt; - &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt;&lt;br&gt;\n&lt;strong&gt;Bluetooth Address&lt;/strong&gt; - Bluetooth adapter address&lt;/p&gt;\n\n&lt;p&gt;It will return something like this:  &lt;strong&gt;551F27C060712A72730B0A0F734064B1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Note: You can always add more IDs to the &lt;code&gt;longId&lt;/code&gt; string. For example, Serial #. wifi adapter address. IMEI. This way you are making it more unique per device.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings(&quot;deprecation&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;@SuppressLint(&quot;HardwareIds&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;generateDeviceIdentifier&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pseudoId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;35&quot;&lt;/span&gt; +\n                Build.BOARD.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.BRAND.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.CPU_ABI.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.DEVICE.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.DISPLAY.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.HOST.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.ID.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.MANUFACTURER.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.MODEL.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.PRODUCT.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.TAGS.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.TYPE.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; +\n                Build.USER.length() % &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;androidId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;BluetoothAdapter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bluetoothAdapter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; BluetoothAdapter.getDefaultAdapter();\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;btId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (bluetoothAdapter != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            btId = bluetoothAdapter.getAddress();\n        }\n\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;longId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; pseudoId + androidId + btId;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;MessageDigest&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageDigest&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; MessageDigest.getInstance(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MD5&quot;&lt;/span&gt;);\n            messageDigest.update(longId.getBytes(), &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, longId.length());\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// get md5 bytes&lt;/span&gt;\n            &lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt; md5Bytes[] = messageDigest.digest();\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// creating a hex string&lt;/span&gt;\n            &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt; md5Byte : md5Bytes) {\n                &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;0xFF&lt;/span&gt; &amp;amp; md5Byte);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// if it is a single digit, make sure it have 0 in front (proper padding)&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (b &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;0xF&lt;/span&gt;) {\n                    identifier += &lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;;\n                }\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// add number to string&lt;/span&gt;\n                identifier += Integer.toHexString(b);\n            }\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// hex string to uppercase&lt;/span&gt;\n            identifier = identifier.toUpperCase();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; identifier;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {\n            Log.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, e.toString());\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;How about the &lt;a href=&quot;http://en.wikipedia.org/wiki/International_Mobile_Equipment_Identity&quot; rel=&quot;noreferrer&quot;&gt;IMEI&lt;/a&gt;. That is unique for Android or other mobile devices.&lt;/p&gt;\n    ","\n&lt;p&gt;My two cents - NB this is for a &lt;em&gt;device (err) unique ID&lt;/em&gt; - not the installation one as discussed in the &lt;a href=&quot;http://android-developers.blogspot.gr/2011/03/identifying-app-installations.html&quot; rel=&quot;noreferrer&quot;&gt;Android developers&apos;s blog&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Of note that the &lt;a href=&quot;https://stackoverflow.com/a/5626208/281545&quot;&gt;solution&lt;/a&gt; provided by @emmby falls back in a per application ID as the SharedPreferences are not synchronized across processes (see &lt;a href=&quot;https://stackoverflow.com/a/4695567/281545&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/12430507/281545&quot;&gt;here&lt;/a&gt;). So I avoided this altogether.&lt;/p&gt;\n\n&lt;p&gt;Instead, I encapsulated the various strategies for getting a (device) ID in an enum - changing the order of the enum constants affects the priority of the various ways of getting the ID. The first non-null ID is returned or an exception is thrown (as per good Java practices of not giving null a meaning). So for instance I have the TELEPHONY one first - but a good default choice would be the ANDROID_ID\n&lt;strong&gt;beta:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.Manifest.permission;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.bluetooth.BluetoothAdapter;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Context;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.pm.PackageManager;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.net.wifi.WifiManager;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.provider.Settings.Secure;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.telephony.TelephonyManager;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.util.Log;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// TODO : hash&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceIdentifier&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DeviceIdentifier&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {}\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/** &lt;span class=&quot;hljs-doctag&quot;&gt;@see&lt;/span&gt; http://code.google.com/p/android/issues/detail?id=10603 */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ANDROID_ID_BUG_MSG&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;The device suffers from &quot;&lt;/span&gt;\n        + &lt;span class=&quot;hljs-string&quot;&gt;&quot;the Android ID bug - its ID is the emulator ID : &quot;&lt;/span&gt;\n        + IDs.BUGGY_ANDROID_ID;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;volatile&lt;/span&gt; String uuid; &lt;span class=&quot;hljs-comment&quot;&gt;// volatile needed - see EJ item 71&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// need lazy initialization to get a context&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Returns a unique identifier for this device. The first (in the order the\n     * enums constants as defined in the IDs enum) non null identifier is\n     * returned or a DeviceIDException is thrown. A DeviceIDException is also\n     * thrown if ignoreBuggyAndroidID is false and the device has the Android ID\n     * bug\n     *\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; ctx\n     *            an Android constant (to retrieve system services)\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; ignoreBuggyAndroidID\n     *            if false, on a device with the android ID bug, the buggy\n     *            android ID is not returned instead a DeviceIDException is\n     *            thrown\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; a *device* ID - null is never returned, instead a\n     *         DeviceIDException is thrown\n     * &lt;span class=&quot;hljs-doctag&quot;&gt;@throws&lt;/span&gt; DeviceIDException\n     *             if none of the enum methods manages to return a device ID\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getDeviceIdentifier&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx,\n            &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; ignoreBuggyAndroidID)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; DeviceIDException {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; uuid;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;synchronized&lt;/span&gt; (DeviceIdentifier.class) {\n                result = uuid;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (IDs id : IDs.values()) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                            result = uuid = id.getId(ctx);\n                        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (DeviceIDNotUniqueException e) {\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!ignoreBuggyAndroidID)\n                                &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceIDException&lt;/span&gt;(e);\n                        }\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n                    }\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceIDException&lt;/span&gt;();\n                }\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IDs&lt;/span&gt; {\n        TELEPHONY_ID {\n\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            String &lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx)&lt;/span&gt; {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// TODO : add a SIM based mechanism ? tm.getSimSerialNumber();&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;TelephonyManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;tm&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TelephonyManager) ctx\n                        .getSystemService(Context.TELEPHONY_SERVICE);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (tm == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    w(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Telephony Manager not available&quot;&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n                }\n                assertPermission(ctx, permission.READ_PHONE_STATE);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; tm.getDeviceId();\n            }\n        },\n        ANDROID_ID {\n\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            String &lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; DeviceIDException {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// no permission needed !&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;andoidId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Secure.getString(\n                    ctx.getContentResolver(),\n                    android.provider.Settings.Secure.ANDROID_ID);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (BUGGY_ANDROID_ID.equals(andoidId)) {\n                    e(ANDROID_ID_BUG_MSG);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceIDNotUniqueException&lt;/span&gt;();\n                }\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; andoidId;\n            }\n        },\n        WIFI_MAC {\n\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            String &lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx)&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;WifiManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;wm&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (WifiManager) ctx\n                        .getSystemService(Context.WIFI_SERVICE);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (wm == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    w(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Wifi Manager not available&quot;&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n                }\n                assertPermission(ctx, permission.ACCESS_WIFI_STATE); &lt;span class=&quot;hljs-comment&quot;&gt;// I guess&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// getMacAddress() has no java doc !!!&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; wm.getConnectionInfo().getMacAddress();\n            }\n        },\n        BLUETOOTH_MAC {\n\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            String &lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx)&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;BluetoothAdapter&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ba&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; BluetoothAdapter.getDefaultAdapter();\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (ba == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    w(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Bluetooth Adapter not available&quot;&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n                }\n                assertPermission(ctx, permission.BLUETOOTH);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ba.getAddress();\n            }\n        }\n        &lt;span class=&quot;hljs-comment&quot;&gt;// TODO PSEUDO_ID&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// http://www.pocketmagic.net/2011/02/android-unique-device-id/&lt;/span&gt;\n        ;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;BUGGY_ANDROID_ID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;9774d56d682e549c&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; IDs.class.getSimpleName();\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; DeviceIDException;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String msg)&lt;/span&gt; {\n            Log.w(TAG, msg);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String msg)&lt;/span&gt; {\n            Log.e(TAG, msg);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;assertPermission&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx, String perm)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;checkPermission&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ctx.getPackageManager().checkPermission(\n            perm, ctx.getPackageName());\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (checkPermission != PackageManager.PERMISSION_GRANTED) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SecurityException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Permission &quot;&lt;/span&gt; + perm + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is required&quot;&lt;/span&gt;);\n        }\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// =========================================================================&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Exceptions&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// =========================================================================&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceIDException&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Exception&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;8083699995384519417L&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;NO_ANDROID_ID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Could not retrieve a &quot;&lt;/span&gt;\n            + &lt;span class=&quot;hljs-string&quot;&gt;&quot;device ID&quot;&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DeviceIDException&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Throwable throwable)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(NO_ANDROID_ID, throwable);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DeviceIDException&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String detailMessage)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(detailMessage);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DeviceIDException&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(NO_ANDROID_ID);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceIDNotUniqueException&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt;\n            &lt;span class=&quot;hljs-title class_&quot;&gt;DeviceIDException&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;8940090896069484955L&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DeviceIDNotUniqueException&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(ANDROID_ID_BUG_MSG);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;The unique device ID of an Android OS device as String, using &lt;code&gt;TelephonyManager&lt;/code&gt; and &lt;code&gt;ANDROID_ID&lt;/code&gt;, is obtained by:&lt;/h3&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;String deviceId;\n&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;TelephonyManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mTelephony&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mTelephony.getDeviceId() != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n    deviceId = mTelephony.getDeviceId();\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    deviceId = Secure.getString(\n                   getApplicationContext().getContentResolver(),\n                   Secure.ANDROID_ID);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But I strongly recommend a method suggested by Google, see &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.mx/2011/03/identifying-app-installations.html&quot; rel=&quot;noreferrer&quot;&gt;Identifying App Installations&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is how I am generating the unique id:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getDeviceId&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context ctx&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-title class_&quot;&gt;TelephonyManager&lt;/span&gt; tm = (&lt;span class=&quot;hljs-title class_&quot;&gt;TelephonyManager&lt;/span&gt;) ctx.&lt;span class=&quot;hljs-title function_&quot;&gt;getSystemService&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Context&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;TELEPHONY_SERVICE&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; tmDevice = tm.&lt;span class=&quot;hljs-title function_&quot;&gt;getDeviceId&lt;/span&gt;();\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; androidId = &lt;span class=&quot;hljs-title class_&quot;&gt;Secure&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(ctx.&lt;span class=&quot;hljs-title function_&quot;&gt;getContentResolver&lt;/span&gt;(), &lt;span class=&quot;hljs-title class_&quot;&gt;Secure&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ANDROID_ID&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; serial = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;VERSION&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SDK_INT&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;VERSION_CODES&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;FROYO&lt;/span&gt;) serial = &lt;span class=&quot;hljs-title class_&quot;&gt;Build&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;SERIAL&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(tmDevice != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;01&quot;&lt;/span&gt; + tmDevice;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(androidId != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;02&quot;&lt;/span&gt; + androidId;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(serial != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;03&quot;&lt;/span&gt; + serial;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// other alternatives (i.e. Wi-Fi MAC, Bluetooth MAC, etc.)&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another way is to use &lt;code&gt;/sys/class/android_usb/android0/iSerial&lt;/code&gt; in an app without any permissions whatsoever.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ruby&quot;&gt;user&lt;span class=&quot;hljs-variable&quot;&gt;@creep&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:~&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$ &lt;/span&gt;adb shell ls -l /sys/&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;/android_usb/android0/iSerial\n-rw-r--r-- root     root         &lt;span class=&quot;hljs-number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2013&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;08 iSerial\nuser&lt;span class=&quot;hljs-variable&quot;&gt;@creep&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:~&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$ &lt;/span&gt;adb shell cat /sys/&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;/android_usb/android0/iSerial\n0A3CXXXXXXXXXX5\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To do this in Java one would just use a FileInputStream to open the iSerial file and read out the characters. Just be sure you wrap it in an exception handler, because not all devices have this file. &lt;/p&gt;\n\n&lt;p&gt;At least the following devices are known to have this file world-readable:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Galaxy Nexus&lt;/li&gt;\n&lt;li&gt;Nexus S&lt;/li&gt;\n&lt;li&gt;Motorola Xoom 3G&lt;/li&gt;\n&lt;li&gt;Toshiba AT300&lt;/li&gt;\n&lt;li&gt;HTC One V&lt;/li&gt;\n&lt;li&gt;Mini MK802&lt;/li&gt;\n&lt;li&gt;Samsung Galaxy S II&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;You can also see my blog post &lt;em&gt;&lt;a href=&quot;http://insitusec.blogspot.com/2013/01/leaking-android-hardware-serial-number.html&quot; rel=&quot;noreferrer&quot;&gt;Leaking Android hardware serial number to unprivileged apps&lt;/a&gt;&lt;/em&gt; where I discuss what other files are available for information.&lt;/p&gt;\n    ","\n&lt;p&gt;For hardware recognition of a specific Android device you could check the MAC Addresses.&lt;/p&gt;\n\n&lt;p&gt;you can do it that way:&lt;/p&gt;\n\n&lt;p&gt;in AndroidManifest.xml&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;now in your code:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;List&amp;lt;NetworkInterface&amp;gt; interfacesList = Collections.list(NetworkInterface.getNetworkInterfaces());\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (NetworkInterface &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; : &lt;span class=&quot;hljs-type&quot;&gt;interfacesList) {&lt;/span&gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-comment&quot;&gt;// This will give you the interface MAC ADDRESS&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt;.getHardwareAddress();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In every Android device their is at least a &quot;wlan0&quot; Interface witch is the WI-FI chip.\nThis code works even when WI-FI is not turned on.&lt;/p&gt;\n\n&lt;p&gt;P.S.\nTheir are a bunch of other Interfaces you will get from the list containing MACS But this can change between phones.&lt;/p&gt;\n    ","\n&lt;p&gt;I use the following code to get the &lt;code&gt;IMEI&lt;/code&gt; or use Secure.&lt;code&gt;ANDROID_ID&lt;/code&gt; as an alternative, when the device doesn&apos;t have phone capabilities:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vhdl&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; identifier = &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;\nTelephonyManager tm = (TelephonyManager)&lt;span class=&quot;hljs-keyword&quot;&gt;context&lt;/span&gt;.getSystemService(&lt;span class=&quot;hljs-keyword&quot;&gt;Context&lt;/span&gt;.TELEPHONY_SERVICE));\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (tm != &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;)\n      identifier = tm.getDeviceId();\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (identifier == &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt; || identifier .length() == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n      identifier = Secure.getString(activity.getContentResolver(),Secure.ANDROID_ID);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;TelephonyManger.getDeviceId()&lt;/strong&gt; Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;TelephonyManager&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mTelephony&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);            \n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myAndroidDeviceId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mTelephony.getDeviceId(); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But i recommend to use:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Settings.Secure.ANDROID_ID&lt;/strong&gt; that returns the Android ID as an unique 64-bit hex string.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;   myAndroidDeviceId = Secure.getString(getApplicationContext().getContentResolver(), Secure.ANDROID_ID); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Sometimes &lt;strong&gt;TelephonyManger.getDeviceId()&lt;/strong&gt; will return null, so to assure an unique id you will use this method:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueID&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){    \n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; myAndroidDeviceId = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;TelephonyManager&lt;/span&gt; mTelephony = (&lt;span class=&quot;hljs-title class_&quot;&gt;TelephonyManager&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;getSystemService&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Context&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;TELEPHONY_SERVICE&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mTelephony.&lt;span class=&quot;hljs-title function_&quot;&gt;getDeviceId&lt;/span&gt;() != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){\n        myAndroidDeviceId = mTelephony.&lt;span class=&quot;hljs-title function_&quot;&gt;getDeviceId&lt;/span&gt;(); \n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n         myAndroidDeviceId = &lt;span class=&quot;hljs-title class_&quot;&gt;Secure&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getApplicationContext&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getContentResolver&lt;/span&gt;(), &lt;span class=&quot;hljs-title class_&quot;&gt;Secure&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ANDROID_ID&lt;/span&gt;); \n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; myAndroidDeviceId;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Google Instance ID&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Released at I/O 2015; on Android requires play services 7.5.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developers.google.com/instance-id/&quot; rel=&quot;noreferrer&quot;&gt;https://developers.google.com/instance-id/&lt;/a&gt;&lt;br&gt;\n&lt;a href=&quot;https://developers.google.com/instance-id/guides/android-implementation&quot; rel=&quot;noreferrer&quot;&gt;https://developers.google.com/instance-id/guides/android-implementation&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;InstanceID&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;iid&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; InstanceID.getInstance( context );   &lt;span class=&quot;hljs-comment&quot;&gt;// Google docs are wrong - this requires context&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; iid.getId();  &lt;span class=&quot;hljs-comment&quot;&gt;// blocking call&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It seems that Google intends for this ID to be used to identify installations across Android, Chrome, and iOS.&lt;/p&gt;\n\n&lt;p&gt;It identifies an installation rather then a device, but then again, ANDROID_ID (which is the accepted answer) now no longer identifies devices either.  With the ARC runtime a new ANDROID_ID is generated for every installation (&lt;a href=&quot;https://stackoverflow.com/questions/29656101/how-does-android-id-on-arc-chrome-differ-from-android&quot;&gt;details here&lt;/a&gt;), just like this new instance ID.  Also, I think that identifying installations (not devices) is what most of us are actually looking for.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The advantages of instance ID&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It appears to me that Google intends for it to be used for this purpose (identifying your installations), it is cross-platform, and can be used for a number of other purposes (see the links above).&lt;/p&gt;\n\n&lt;p&gt;If you use GCM, then you will eventually need to use this instance ID because you need it in order to get the GCM token (which replaces the old GCM registration ID).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The disadvantages/issues&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;In the current implementation (GPS 7.5) the instance ID is retrieved from a server when your app requests it.  This means that the call above is a blocking call - in my unscientific testing it takes 1-3 seconds if the device is online, and 0.5 - 1.0 seconds if off-line (presumably this is how long it waits before giving up and generating a random ID).  This was tested in North America on Nexus 5 with Android 5.1.1 and GPS 7.5.&lt;/p&gt;\n\n&lt;p&gt;If you use the ID for the purposes they intend - eg. app authentication, app identification, GCM - I think this 1-3 seconds could be a nuisance (depending on your app, of course).&lt;/p&gt;\n    ","\n&lt;p&gt;Google now has an &lt;a href=&quot;http://developer.android.com/google/play-services/id.html#get_started&quot; rel=&quot;noreferrer&quot;&gt;Advertising ID&lt;/a&gt;.&lt;br&gt;\nThis can also be used, but note that :&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The advertising ID is a user-specific, unique, resettable ID &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;and&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;enables users to reset their identifier or opt out of interest-based ads within Google Play apps.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So though this id may change, it seems that soon &lt;a href=&quot;http://www.androidpolice.com/2013/11/01/google-play-services-4-0-requires-developers-to-use-the-new-advertising-id-to-identify-your-device-enforcement-starts-aug-2014/&quot; rel=&quot;noreferrer&quot;&gt;we may not have a choice&lt;/a&gt;, depends on the purpose of this id.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/google/play-services/id.html&quot; rel=&quot;noreferrer&quot;&gt;More info @ develper.android&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/google/play-services/id.html#get_started&quot; rel=&quot;noreferrer&quot;&gt;Copy-paste code here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;HTH&lt;/p&gt;\n    ","\n&lt;p&gt;To understand the available Unique Ids in Android devices. Use this official guide. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Best practices for unique identifiers:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;IMEI, Mac Addresses, Instance Id, GUIDs, SSAID, Advertising Id, Safety Net API to verify devices. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot; rel=&quot;noreferrer&quot;&gt;https://developer.android.com/training/articles/user-data-ids&lt;/a&gt;&lt;/p&gt;\n    "],"470":["\n&lt;p&gt;From the &lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Documentation&lt;/a&gt;:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt;&lt;br&gt;\n&lt;strong&gt;Pixels&lt;/strong&gt; - corresponds to actual pixels on the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;br&gt;\n&lt;strong&gt;Inches&lt;/strong&gt; - based on the physical size of the screen.&lt;br&gt;\n1 Inch OR 2.54 centimeters&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;mm&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;strong&gt;Millimeters&lt;/strong&gt; - based on the physical size of the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;pt&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;strong&gt;Points&lt;/strong&gt; - 1/72 of an inch based on the physical size of the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;dp&lt;/strong&gt; or &lt;strong&gt;dip&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;strong&gt;Density&lt;/strong&gt;-independent Pixels - an abstract unit that is based on the physical density of the screen. These units are relative to a 160\ndpi screen, so one dp is one pixel on a 160 dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion. Note: The compiler accepts both &quot;dip&quot; and &quot;dp&quot;, though &quot;dp&quot; is more consistent with &quot;sp&quot;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt;&lt;br&gt;\n&amp;gt; &lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities#TaskUseDP&quot; rel=&quot;noreferrer&quot;&gt;Scaleable Pixels&lt;/a&gt; &lt;strong&gt;OR&lt;/strong&gt; &lt;a href=&quot;https://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;scale-independent pixels&lt;/a&gt; - this is like the dp unit, but it is also scaled by the user&apos;s font size preference. It is recommended you\nuse this unit when specifying font sizes, so they will be adjusted\nfor both the screen density and the user&apos;s preference. Note, the Android documentation is inconsistent on what &lt;code&gt;sp&lt;/code&gt; actually stands for, one &lt;a href=&quot;https://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;doc&lt;/a&gt; says &quot;scale-independent pixels&quot;, the &lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities#TaskUseDP&quot; rel=&quot;noreferrer&quot;&gt;other&lt;/a&gt; says &quot;scaleable pixels&quot;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;From &lt;a href=&quot;https://blog.mindorks.com/understanding-density-independent-pixel-sp-dp-dip-in-android&quot; rel=&quot;noreferrer&quot;&gt;Understanding Density Independence In Android&lt;/a&gt;:&lt;/p&gt;\n&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;Density Bucket&lt;/th&gt;\n&lt;th&gt;Screen Density&lt;/th&gt;\n&lt;th&gt;Physical Size&lt;/th&gt;\n&lt;th&gt;Pixel Size&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;ldpi&lt;/td&gt;\n&lt;td&gt;120 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 120 dpi = 60x60 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;mdpi&lt;/td&gt;\n&lt;td&gt;160 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 160 dpi = 80x80 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;hdpi&lt;/td&gt;\n&lt;td&gt;240 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 240 dpi = 120x120 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;xhdpi&lt;/td&gt;\n&lt;td&gt;320 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 320 dpi = 160x160 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;xxhdpi&lt;/td&gt;\n&lt;td&gt;480 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 480 dpi = 240x240 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;xxxhdpi&lt;/td&gt;\n&lt;td&gt;640 dpi&lt;/td&gt;\n&lt;td&gt;0.5 x 0.5 in&lt;/td&gt;\n&lt;td&gt;0.5 in * 640 dpi = 320x320 px&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;Unit&lt;/th&gt;\n&lt;th&gt;Description&lt;/th&gt;\n&lt;th&gt;Units Per Physical Inch&lt;/th&gt;\n&lt;th&gt;Density Independent?&lt;/th&gt;\n&lt;th&gt;Same Physical Size On Every Screen?&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;px&lt;/td&gt;\n&lt;td&gt;Pixels&lt;/td&gt;\n&lt;td&gt;Varies&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;in&lt;/td&gt;\n&lt;td&gt;Inches&lt;/td&gt;\n&lt;td&gt;1&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;mm&lt;/td&gt;\n&lt;td&gt;Millimeters&lt;/td&gt;\n&lt;td&gt;25.4&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;pt&lt;/td&gt;\n&lt;td&gt;Points&lt;/td&gt;\n&lt;td&gt;72&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;dp&lt;/td&gt;\n&lt;td&gt;Density Independent Pixels&lt;/td&gt;\n&lt;td&gt;~160&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;sp&lt;/td&gt;\n&lt;td&gt;Scale Independent Pixels&lt;/td&gt;\n&lt;td&gt;~160&lt;/td&gt;\n&lt;td&gt;Yes&lt;/td&gt;\n&lt;td&gt;No&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;p&gt;More info can be also be found in the &lt;a href=&quot;https://material.io/design/layout/pixel-density.html&quot; rel=&quot;noreferrer&quot;&gt;Google Design Documentation&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Pretty much everything about this and how to achieve the best support for multiple screens of different sizes and densities is very well documented here:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html&quot; rel=&quot;noreferrer&quot;&gt;Supporting Multiple Screens&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Screen size&lt;/strong&gt;&lt;br&gt;\nActual physical size, measured as the screen&apos;s diagonal.\nFor simplicity, Android groups all actual screen sizes into four\ngeneralized sizes: small, normal, large, and extra-large.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Screen density&lt;/strong&gt;&lt;br&gt;\nThe number of pixels within a physical area of the\nscreen; usually referred to as dpi (dots per inch). For example, a\n&quot;low&quot; density screen has fewer pixels within a given physical area,\ncompared to a &quot;normal&quot; or &quot;high&quot; density screen. For simplicity,\nAndroid groups all actual screen densities into six generalized\ndensities: low, medium, high, extra-high, extra-extra-high, and\nextra-extra-extra-high.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Orientation&lt;/strong&gt;&lt;br&gt;The orientation of the screen from the user&apos;s point of\nview. This is either landscape or portrait, meaning that the screen&apos;s\naspect ratio is either wide or tall, respectively. Be aware that not\nonly do different devices operate in different orientations by\ndefault, but the orientation can change at runtime when the user\nrotates the device.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Resolution&lt;/strong&gt;&lt;br&gt; The total number of physical pixels on\na screen. When adding support for multiple screens, applications do\nnot work directly with resolution; applications should be concerned\nonly with screen size and density, as specified by the generalized\nsize and density groups.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Density-independent pixel (dp)&lt;/strong&gt;&lt;br&gt; A virtual\npixel unit that you should use when defining UI layout, to express\nlayout dimensions or position in a density-independent way.\nThe density-independent pixel is equivalent to one physical pixel on a 160\ndpi screen, which is the baseline density assumed by the system for a\n&quot;medium&quot; density screen. At runtime, the system transparently handles\nany scaling of the dp units, as necessary, based on the actual density\nof the screen in use. The conversion of dp units to screen pixels is\nsimple:\n&lt;code&gt;px = dp * (dpi / 160)&lt;/code&gt;.\nFor example, on a 240 dpi screen, 1 dp\nequals 1.5 physical pixels. You should always use dp units when\ndefining your application&apos;s UI, to ensure proper display of your UI on\nscreens with different densities.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;If you are at all serious about developing an Android app for more than one type of device, you should have read the screens support development document at least once. In addition to that, it is always a good thing to know the actual number of active devices that have a particular screen configuration.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://developer.android.com/resources/dashboard/screens.html&quot; rel=&quot;noreferrer&quot;&gt;Screen Sizes and Densities&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I will elaborate more on how exactly does dp convert to px:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If running on an mdpi device, a &lt;code&gt;150 x 150 px&lt;/code&gt; image will take up &lt;code&gt;150 * 150 dp&lt;/code&gt; of screen space.&lt;/li&gt;\n&lt;li&gt;If running on an hdpi device, a &lt;code&gt;150 x 150 px&lt;/code&gt; image will take up &lt;code&gt;100 * 100 dp&lt;/code&gt; of screen space.&lt;/li&gt;\n&lt;li&gt;If running on an xhdpi device, a &lt;code&gt;150x150 px&lt;/code&gt; image will take up &lt;code&gt;75 * 75 dp&lt;/code&gt; of screen space.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The other way around: say, you want to add an image to your application and you need it to fill a &lt;code&gt;100 * 100 dp&lt;/code&gt; control. You&apos;ll need to create different size images for supported screen sizes:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;100 * 100 px&lt;/code&gt; image for mdpi&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;150 * 150 px&lt;/code&gt; image for hdpi&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;200 * 200 px&lt;/code&gt; image for xhdpi&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;px - Pixels&lt;/strong&gt; - point per scale corresponds to actual pixels on the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;i - Inches&lt;/strong&gt; - based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;mm - Millimeters&lt;/strong&gt; - based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;pt - Points&lt;/strong&gt; - 1/72 of an inch based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;dp - Density-independent Pixels&lt;/strong&gt; - an abstract unit that is based on the physical density of the screen.\nThese units are relative to a 160 dpi screen, so one &lt;code&gt;dp&lt;/code&gt; is one pixel on a 160 dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion.\nNote: The compiler accepts both &lt;code&gt;dip&lt;/code&gt; and &lt;code&gt;dp&lt;/code&gt;, though &lt;code&gt;dp&lt;/code&gt; is more consistent with &lt;code&gt;sp&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;sp - &lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities#TaskUseDP&quot; rel=&quot;noreferrer&quot;&gt;scalable pixels&lt;/a&gt;&lt;/strong&gt; - this is like the &lt;code&gt;dp&lt;/code&gt; unit,\nbut it is also scaled by the user&apos;s font size preference.\nIt is recommended that you use this unit when specifying font sizes,\nso they will be adjusted for both the screen density and the user&apos;s preference.&lt;/p&gt;\n&lt;p&gt;Take the example of two screens that are the same size but one has a screen density of 160 dpi (dots per inch, i.e. pixels per inch) and the other is 240 dpi.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;                          Lower resolution screen     Higher resolution, same size\nPhysical &lt;span class=&quot;hljs-attribute&quot;&gt;Width&lt;/span&gt;                      &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt; inches                        &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt; inches\nDots Per Inch (dpi)               &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;\nPixels (=width*dpi)                 &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;360&lt;/span&gt;\nDensity (factor of baseline &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;)    &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt;\n\nDensity-independent pixels          &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;                               &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;\n(dip or dp or dps)\n\nScale-independent pixels \n (sip or sp)                  Depends on user &lt;span class=&quot;hljs-attribute&quot;&gt;font&lt;/span&gt; size settings    same\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Moreover you should have a clear understanding of the following concepts:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Screen size:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Actual physical size, measured as the screen&apos;s diagonal. For simplicity, Android groups all actual screen sizes into\nfour generalized sizes: small, normal, large, and extra-large.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Screen density:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The number of pixels within a physical area of the screen; usually referred to as dpi (dots per inch). For example, a\n&quot;low&quot; density screen has fewer pixels within a given physical area,\ncompared to a &quot;normal&quot; or &quot;high&quot; density screen. For simplicity,\nAndroid groups all actual screen densities into four generalized\ndensities: low, medium, high, and extra high.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Orientation:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The orientation of the screen from the user&apos;s point of view. This is either landscape or portrait, meaning that the\nscreen&apos;s aspect ratio is either wide or tall, respectively. Be aware\nthat not only do different devices operate in different orientations\nby default, but the orientation can change at runtime when the user\nrotates the device.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Resolution:&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The total number of physical pixels on a screen. When adding support for multiple screens, applications do not work directly\nwith resolution; applications should be concerned only with screen\nsize and density, as specified by the generalized size and density\ngroups.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Density-independent pixel (dp):&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;A virtual pixel unit that you should use when defining UI layout, to express layout dimensions or\nposition in a density-independent way. The density-independent pixel\nis equivalent to one physical pixel on a 160 dpi screen, which is the\nbaseline density assumed by the system for a &quot;medium&quot; density screen.\nAt runtime, the system transparently handles any scaling of the dp\nunits, as necessary, based on the actual density of the screen in use.\nThe conversion of dp units to screen pixels is simple: px = dp * (dpi\n/ 160). For example, on a 240 dpi screen, 1 dp equals 1.5 physical\npixels. You should always use dp units when defining your\napplication&apos;s UI, to ensure proper display of your UI on screens with\ndifferent densities.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Reference: &lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html#terms&quot; rel=&quot;noreferrer&quot;&gt;Android developers site&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;dp&lt;/code&gt; is  &lt;code&gt;dip&lt;/code&gt;. Use it for everything (margin, padding, etc.).&lt;/p&gt;\n\n&lt;p&gt;Use &lt;code&gt;sp&lt;/code&gt; for {text-size} only. &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;To get the same size on different screen densities, Android translates these units into pixels at runtime, so there is no tricky math for you to do.&lt;/h2&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;See the difference between &lt;code&gt;px&lt;/code&gt;, &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;sp&lt;/code&gt; on different screen sizes.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/84sUp.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;Source: &lt;a href=&quot;http://www.bignerdranch.com/we-write/android-programming.html&quot;&gt;Android Programming: The Big Nerd Ranch Guide&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;Definitions&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt; or dot is a &lt;em&gt;pixel&lt;/em&gt; on the physical screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;dpi&lt;/strong&gt; are pixels per inch on the physical screen and represent the density of the display.&lt;/p&gt;\n\n&lt;p&gt;Android gives &lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html#range&quot; rel=&quot;noreferrer&quot;&gt;alias names to several densities&lt;/a&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;ldpi (low) ~120dpi&lt;/li&gt;\n&lt;li&gt;mdpi (medium) ~160dpi&lt;/li&gt;\n&lt;li&gt;hdpi (high) ~240dpi\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;most devices in 2015 are here&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;xhdpi (extra-high) ~320dpi\n\n&lt;ul&gt;\n&lt;li&gt;Apple iPhone 4/5/6, Nexus 4&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;xxhdpi (extra-extra-high) ~480dpi\n\n&lt;ul&gt;\n&lt;li&gt;Nexus 5&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;xxxhdpi (extra-extra-extra-high) ~640dpi&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;dip&lt;/strong&gt; or &lt;strong&gt;dp&lt;/strong&gt; are &lt;em&gt;density-indenpendant pixels&lt;/em&gt;, i.e. they correspond to more or less pixels depending on the physical density.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;1dp = 1px on mdpi&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/fAucF.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/fAucF.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt; or &lt;strong&gt;sip&lt;/strong&gt; is a &lt;em&gt;scale-independant pixel&lt;/em&gt;. They are scaled when the &lt;em&gt;Large Text&lt;/em&gt; option is turned on in &lt;kbd&gt;Settings&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;Accessibility&lt;/kbd&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;1sp = 1dp&lt;/li&gt;\n&lt;li&gt;1sp = 1.2dp with accessibility Large Text&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1&gt;What to use?&lt;/h1&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Use &lt;strong&gt;sp&lt;/strong&gt; for Text size.&lt;/p&gt;\n  \n  &lt;p&gt;Use &lt;strong&gt;dp&lt;/strong&gt; for everything else.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;I have calculated the formula below to make the conversions &lt;code&gt;dpi&lt;/code&gt; to &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;sp&lt;/code&gt;\n&lt;a href=&quot;https://i.stack.imgur.com/DoAxa.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/DoAxa.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://answersfactory.com/difference-between-px-dp-dip-and-sp-in-android&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source 1&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://stefan222devel.blogspot.com/2012/10/android-screen-densities-sizes.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source 2&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;nofollow noreferrer&quot;&gt;Source 3&lt;/a&gt;: (data from source 3 is given below)&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;These are dimension values defined in XML. A dimension is specified\nwith a number followed by a unit of measure. For example: 10px, 2in,\n5sp. The following units of measure are supported by Android:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;dp&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Density-independent Pixels - An abstract unit that is based on the\nphysical density of the screen. These units are relative to a 160 dpi\n(dots per inch) screen, on which 1dp is roughly equal to 1px. When\nrunning on a higher density screen, the number of pixels used to draw\n1dp is scaled up by a factor appropriate for the screen&apos;s dpi.\nLikewise, when on a lower density screen, the number of pixels used\nfor 1dp is scaled down. The ratio of dp-to-pixel will change with the\nscreen density, but not necessarily in direct proportion. Using dp\nunits (instead of px units) is a simple solution to making the view\ndimensions in your layout resize properly for different screen\ndensities. In other words, it provides consistency for the real-world\nsizes of your UI elements across different devices.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Scale-independent Pixels - This is like the dp unit, but it is also\nscaled by the user&apos;s font size preference. It is recommended that you use\nthis unit when specifying font sizes, so they will be adjusted for\nboth the screen density and the user&apos;s preference.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;pt&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Points - 1/72 of an inch based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Pixels - Corresponds to actual pixels on the screen. This unit of\nmeasure is not recommended because the actual representation can vary\nacross devices; each device may have a different number of pixels per\ninch and may have more or fewer total pixels available on the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;mm&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Millimeters - Based on the physical size of the screen.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Inches - Based on the physical size of the screen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A dimension is a simple resource that is referenced using the value provided in the name attribute (not the name of the XML file). As such, you can combine dimension resources with other simple resources in one XML file, under one  element.&lt;/p&gt;\n    ","\n&lt;p&gt;Basically the only time where px applies is one px, and that&apos;s if you want exactly one pixel on the screen like in the case of a divider: &lt;/p&gt;\n\n&lt;p&gt;On &amp;gt;160 dpi, you may get 2-3 pixels, &lt;/p&gt;\n\n&lt;p&gt;On &amp;gt;120 dpi, it rounds to 0.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Pixels - corresponds to actual pixels on the screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;dp or dip&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Density-independent Pixels - an abstract unit that is based on the physical density of the screen. These units are relative to a 160 dpi screen, so one dp is one pixel on a 160 dpi screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Use of dp:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Density independence&lt;/strong&gt; -\nYour application achieves density independence when it preserves the physical size (from the users point of view) of user interface elements when displayed on screens with different densities. (ie) The image should look the same size (not enlarged or shrinked) in different types of screens.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Scale-independent Pixels - this is like the dp unit, but it is also scaled by the user&apos;s font size preference.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot;&gt;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;Where to use what &amp;amp; relationship between px &amp;amp; dp?&lt;/h2&gt;\n&lt;h3&gt;Density-independent pixel (dp)&lt;/h3&gt;\n&lt;p&gt;A virtual pixel unit that you should use when defining UI layout, to express layout dimensions or position in a density-independent way. As described above, the density-independent pixel is equivalent to one physical pixel on a 160 dpi screen, which is the baseline density assumed by the system for a &quot;medium&quot; density screen. At runtime, the system transparently handles any scaling of the dp units, as necessary, based on the actual density of the screen in use. The conversion of dp units to screen pixels is\nsimple:&lt;/p&gt;\n&lt;p&gt;px = dp * (dpi / 160).&lt;/p&gt;\n&lt;p&gt;For example, on a 240 dpi screen, 1 dp equals 1.5 physical pixels. You should always use dp units when defining your application&apos;s UI, to ensure\nproper display of your UI on screens with different densities.&lt;/p&gt;\n&lt;p&gt;Understanding pixel to dp and vice versa is very essential (especially for giving exact dp values to creative team)&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;dp = px * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; / dpi\n\nMDPI = &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; dpi || Therefore, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; MDPI &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\nFor example, &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; you want to convert &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; pixel to dp, use the above formula,\ndp = &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;20.&lt;/span&gt;\nSo, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; pixel = &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; dp.\n\nHDPI = &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; dpi - So, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; HDPI &lt;span class=&quot;hljs-number&quot;&gt;1.5&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\nXHDPI = &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; dpi - So, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; XHDPI &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\nXXHDPI = &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt; dpi - So, &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; XXHDPI &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; px = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; dp\n\nFor example, &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; us consider Nexus &lt;span class=&quot;hljs-number&quot;&gt;4.&lt;/span&gt;\nIf &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; pixels to be converted to dp &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; it &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; a Nexus &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; screen, developers can\nconvert it to dp easily &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; the following calculation :\ndp = &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; dp\nScreen dimension:\n&lt;span class=&quot;hljs-number&quot;&gt;768&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;1280&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;pixel &lt;span class=&quot;hljs-title&quot;&gt;resolution&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; ppi &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt;dpi&lt;/span&gt;)\n&lt;span class=&quot;hljs-title&quot;&gt;Optional&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;screen size&lt;/span&gt;):\n 4.7&quot; diagonal\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;\n&lt;li&gt;Try to get all pixel values in even numbers from the creative team. Otherwise precision lose will happen while multiplying with 0.5.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;px&lt;/h3&gt;\n&lt;p&gt;It is explained above. Try to avoid in layout files. But there are some cases, where px is required. for example, ListView divider line. px is better here for giving a one-pixel line as a divider for all across screen resolutions.&lt;/p&gt;\n&lt;h3&gt;sp&lt;/h3&gt;\n&lt;p&gt;Use sp for font sizes. Then only the font inside the application will change while device fonts size changes (that is, Display -&amp;gt; Fonts on Device). If you want to keep a static sized font inside the app, you can give the font dimension in dp. In such a case, it will never change. Developers may get such a requirement for some specific screens, for that, developers can use dp instead of sp. In all other cases, sp is recommended.&lt;/p&gt;\n    ","\n&lt;p&gt;You can see the difference between &lt;code&gt;px&lt;/code&gt; and &lt;code&gt;dp&lt;/code&gt; from the below picture, and you can also find that the &lt;code&gt;px&lt;/code&gt; and &lt;code&gt;dp&lt;/code&gt; could not guarantee the same physical sizes on the different screens.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/KFn2N.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Anything related with the size of text and appearance must use &lt;code&gt;sp&lt;/code&gt; or &lt;code&gt;pt&lt;/code&gt;. Whereas, anything related to the size of the controls, the layouts, etc. must be used with &lt;code&gt;dp&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can use both &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;dip&lt;/code&gt; at its places.&lt;/p&gt;\n    ","\n&lt;p&gt;I would only use dp.&lt;/p&gt;\n\n&lt;p&gt;There is a lot of talk about using &quot;sp&quot; for font sizes, and while I appreciate the point, I don&apos;t think that it is the right thing to do from a design point of view. You can end up breaking your design if the user has some wonky font size selection, and the user will end up blaming &lt;em&gt;the app&lt;/em&gt;, and not their own life choices.&lt;/p&gt;\n\n&lt;p&gt;Also, if you take an sp-font app on a 160&amp;nbsp;dpi tablet, you will find that &lt;em&gt;everything&lt;/em&gt; scales up... but your font, which is going to look tiny in comparison. It isn&apos;t a good look.&lt;/p&gt;\n\n&lt;p&gt;While the idea of &quot;sp&quot; fonts has a good heart, it is a poor idea. Stick with dp for everything.&lt;/p&gt;\n    ","\n&lt;p&gt;sp = scale independent pixel&lt;/p&gt;\n&lt;p&gt;dp = dip = density independent pixels&lt;/p&gt;\n&lt;p&gt;dpi = dots per inch&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;We should avoid to use &lt;strong&gt;sp&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;We should use &lt;strong&gt;dp&lt;/strong&gt; to support multiple screens.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Android supports different screen resolutions&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;ldpi (low) ~120&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;mdpi (medium) ~160&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;hdpi (high) ~240&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;xhdpi (extra-high) ~320&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;xxhdpi (extra-extra-high) ~480&amp;nbsp;dpi&lt;/li&gt;\n&lt;li&gt;xxxhdpi (extra-extra-extra-high) ~640&amp;nbsp;dpi&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;An 120 dp ldpi device has 120 pixels in 1 inch size.&lt;/p&gt;\n&lt;p&gt;The same for other densities...&lt;/p&gt;\n&lt;p&gt;We as software engineers should use this conversion formula:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;pixel = dp * (density / 160)&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So 240 dpi device&apos;s 1 dp will have = 1 * (240/160) = 3/2 = 1.5 pixels.&lt;/p&gt;\n&lt;p&gt;And 480 dpi device&apos;s 1 dp will have = 1 * (480/160) = 3 pixels.&lt;/p&gt;\n&lt;p&gt;Using this 1.5 and 3 pixels knowledge, a software engineer can design layouts for different densities.&lt;/p&gt;\n&lt;p&gt;To check screen parameters of any device:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;DisplayMetrics&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;metrics&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DisplayMetrics&lt;/span&gt;();\ngetWindowManager().getDefaultDisplay().getMetrics(metrics);\n\nToast.makeText(\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;4:&quot;&lt;/span&gt; + metrics.heightPixels + &lt;span class=&quot;hljs-string&quot;&gt;&quot;,&quot;&lt;/span&gt; + metrics.density + &lt;span class=&quot;hljs-string&quot;&gt;&quot;,&quot;&lt;/span&gt;\n    + metrics.densityDpi, Toast.LENGTH_LONG).show();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Difference between &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;sp&lt;/code&gt; units mentioned as &quot;&lt;em&gt;user&apos;s font size preference&lt;/em&gt;&quot; by the answers copied from official documentation can be seen at run time by changing &lt;code&gt;Settings-&amp;gt;Accessibility-&amp;gt;Large Text&lt;/code&gt; option.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Large Text&lt;/code&gt; option forces text to become &lt;code&gt;1.3&lt;/code&gt; times bigger.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; LARGE_FONT_SCALE = &lt;span class=&quot;hljs-number&quot;&gt;1.3f&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This might be well of course vendor dependent since it lies in &lt;a href=&quot;https://android.googlesource.com/platform/packages/apps/Settings/+/android-4.3.1_r1/src/com/android/settings/AccessibilitySettings.java&quot; rel=&quot;noreferrer&quot;&gt;packages/apps/Settings&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;dpi -&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Dots per inches&lt;/li&gt;\n&lt;li&gt;Measuring the pixel density of the screen.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;px - pixel&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;For mapping screen pixels&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;pt - points&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;About 1/72 of an inch, with respect to physical screen size.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;in - inch\n - with respect to physical screen size(1 inch = 2.54 cm).&lt;/p&gt;\n\n&lt;p&gt;mm- milimeter\n - with respect to physical screen size.&lt;/p&gt;\n\n&lt;p&gt;sp - scale-independent pixel.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Based on user`s font size preference.&lt;/li&gt;\n&lt;li&gt;Font should be in &apos;sp&apos;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;dip -&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;dip == dp&lt;/li&gt;\n&lt;li&gt;Density independent pixel.&lt;/li&gt;\n&lt;li&gt;It varies based on Screen Density.&lt;/li&gt;\n&lt;li&gt;In 160 dpi screen, 1 dp = 1 pixel.&lt;/li&gt;\n&lt;li&gt;Use dp except the text font size.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In standard, dp and sp are used. sp for font size and dp for everything else.&lt;/p&gt;\n\n&lt;p&gt;Formula for conversion of units:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;px = dp * ( dpi / 160 );&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;Density Bucket -&amp;gt; Screen Display =&amp;gt; Physical Size        =&amp;gt; Pixel Size                   \n\nldpi         -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;x60 px   \n\nmdpi         -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;x80 px   \n\nhdpi         -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;x120 px  \n\nxhdpi        -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;x160 px  \n\nxxhdpi       -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;x240 px \n\nxxxhdpi      -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;640&lt;/span&gt; dpi          =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;         =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;640&lt;/span&gt; dpi = &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt;x320 px  \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Please read the answer from the community wiki.\nBelow mentioned is some information to be considered in addition to the above answers. Most Android developers miss this while developing apps, so I am adding these points.&lt;/p&gt;\n&lt;p&gt;sp = scale independent pixel&lt;/p&gt;\n&lt;p&gt;dp = density independent pixels&lt;/p&gt;\n&lt;p&gt;dpi = density pixels&lt;/p&gt;\n&lt;p&gt;I have gone through the above answers...not finding them exactly correct.\nsp for text size, dp for layout bounds - standard.\nBut &lt;strong&gt;sp for text size will break the layout if used carelessly&lt;/strong&gt; in most of the devices.&lt;/p&gt;\n&lt;p&gt;sp take the text size of the device, whereas dp take that of device density standard( never change in a device)\nSay 100sp text can occupy 80% of the screen or 100% of the screen depending on the font size set in the device&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/9syOs.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/9syOs.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;You can use sp for layout bounds also, it will work :)\n&lt;strong&gt;No standard app use sp for whole text&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Use sp and dp for text size considering UX.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Don&apos;t use sp for text in the toolbar( can use android dimens available for different screen sizes with dp)&lt;/li&gt;\n&lt;li&gt;Don&apos;t use sp for text in small bounded buttons, very smaller text, etc&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Some people use huge FONT size in their phone for more readability, giving them small hardcoded sized text will be a UX issue. Put sp for text where necessary, but make sure it won&apos;t break the layout when the user changes his settings.&lt;/p&gt;\n&lt;p&gt;Similarly, if you have a single app supporting all dimensions, adding xxxhdpi assets increases the app size a lot. But now xxxhdpi phones are common so we have to include xxxhdpi assets at least for icons in the sidebar, toolbar, and bottom bar. It&apos;s better to move to vector images to have a uniform and better quality images for all screen sizes.&lt;/p&gt;\n&lt;p&gt;Also, note that people use custom fonts on their phones. So lack of a font can cause problems regarding spacing and all. Say text size 12sp for a custom font may take some pixels extra than the default font.&lt;/p&gt;\n&lt;p&gt;Refer to google developer site for screen densities and base density details for android.\n&lt;a href=&quot;https://developer.android.com/training/multiscreen/screendensities&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.android.com/training/multiscreen/screendensities&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Screen Size&lt;/strong&gt; in &lt;code&gt;Android&lt;/code&gt; is grouped into categories &lt;code&gt;small&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;extra large&lt;/code&gt;, &lt;code&gt;double-extra&lt;/code&gt; and &lt;code&gt;triple-extra&lt;/code&gt;. Screen density is the number of pixels within an area (like an inch) of the screen. Generally, it is measured in dots-per-inch (dpi). Screen density is grouped as low, medium, high, and extra high. Resolution is the total number of pixels on the screen.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;dp:&lt;/strong&gt; Density Independent Pixel, varies based on screen density. In 160 dpi screen, 1 dp = 1 pixel. Except for font size, use dp always.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;dip:&lt;/strong&gt; dip == dp. In earlier Android versions dip was used and later changed to dp.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;sp:&lt;/strong&gt; Scale Independent Pixel, scaled based on users font size preference. Fonts should use sp.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;px:&lt;/strong&gt; our usual standard pixel which maps to the screen pixel.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;in:&lt;/strong&gt; inches, concerning the physical screen size.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;mm:&lt;/strong&gt; millimeters, concerning the physical screen size.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;pt:&lt;/strong&gt; 1/72 of an inch, concerning the physical screen size.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;Formula for Conversion between Units&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt; &lt;span class=&quot;hljs-attr&quot;&gt;px&lt;/span&gt; = dp * (dpi / &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;dp to px in device&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;The following example may help understand better. The scaling occurs based on bucket sizes of 120(ldpi), 160(mdpi), 240(hdpi), 320(xhdpi), 480(xxhdpi), and 640(xxxhdpi). The Google suggested ratio for designing is 3:4:6:8:12 for ldpi:mdpi:hdpi:xhdpi:xxhdpi&lt;/p&gt;\n&lt;p&gt;A 150px X 150px image will occupy,&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;ul&gt;\n&lt;li&gt;150 dp X 150 dp screen space in mdpi&lt;/li&gt;\n&lt;li&gt;100 dp X 100 dp screen space in hdpi&lt;/li&gt;\n&lt;li&gt;75 dp X 75 dp screen space in xhdpi&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;You may use the following DPI calculator to fix your image sizes and other dimensions when you wish to have a uniform UI design on all Android devices.&lt;/p&gt;\n&lt;h1&gt;DPI Calculator in Java&lt;/h1&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*\nProgram output\nLDPI: 165.0 X 60.0\nMDPI: 220.0 X 80.0\nHDPI: 330.0 X 120.0\nXHDPI: 440.0 X 160.0\nXXHDPI: 660.0 X 240.0\nXXXHDPI: 880.0 X 320.0\n*/&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DPICalculator&lt;/span&gt; {\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;LDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;MDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;HDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;XHDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;320&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;XXHDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;480&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;XXXHDPI&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;640&lt;/span&gt;;    \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; forDeviceDensity;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; width;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; height;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DPICalculator&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; forDeviceDensity, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; width, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; height)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.forDeviceDensity = forDeviceDensity;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.width = width;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.height = height;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String... args)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;DPICalculator&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dpiCalculator&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DPICalculator&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;330&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;);\n    dpiCalculator.calculateDPI();\n}\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPx&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; dp, &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; value)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; dp * (value / forDeviceDensity );        \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; px;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;calculateDPI&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ldpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(LDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ldpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(LDPI,height);\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(MDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(MDPI,height);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;hdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(HDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;hdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(HDPI,height);       \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(XHDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(XHDPI,height);\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(XXHDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(XXHDPI,height);\n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxxdpiW&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getPx(XXXHDPI,width);        \n    &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;xxxdpiH&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  getPx(XXXHDPI,height);\n    \n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;LDPI: &quot;&lt;/span&gt; + ldpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + ldpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MDPI: &quot;&lt;/span&gt; + mdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + mdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HDPI: &quot;&lt;/span&gt; + hdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + hdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;XHDPI: &quot;&lt;/span&gt; + xdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + xdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;XXHDPI: &quot;&lt;/span&gt; + xxdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + xxdpiH);\n    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;XXXHDPI: &quot;&lt;/span&gt; + xxxdpiW + &lt;span class=&quot;hljs-string&quot;&gt;&quot; X &quot;&lt;/span&gt; + xxxdpiH);        \n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;More Information refer to the following link.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://javapapers.com/android/difference-between-dp-dip-sp-px-in-mm-pt-in-android/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://javapapers.com/android/difference-between-dp-dip-sp-px-in-mm-pt-in-android/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Here&apos;s the formula used by Android:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;px = dp * (dpi / 160)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Where dpi is one of the following screen densities. For a list of all possible densities &lt;a href=&quot;http://developer.android.com/reference/android/util/DisplayMetrics.html&quot; rel=&quot;noreferrer&quot;&gt;go here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It defines the &quot;DENSITY_*&quot; constants.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;ldpi (low) ~120dpi &lt;/li&gt;\n&lt;li&gt;mdpi (medium) ~160dpi &lt;/li&gt;\n&lt;li&gt;hdpi (high) ~240dpi &lt;/li&gt;\n&lt;li&gt;xhdpi (extra-high) ~320dpi &lt;/li&gt;\n&lt;li&gt;xxhdpi (extra-extra-high) ~480dpi &lt;/li&gt;\n&lt;li&gt;xxxhdpi (extra-extra-extra-high) ~640dpi&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Taken from &lt;a href=&quot;http://developer.android.com/guide/practices/screens_support.html&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;This will sort out a lot of the confusion when translating between px and dp, if you know your screen dpi.&lt;/p&gt;\n\n&lt;p&gt;So, let&apos;s say you want an image of 60 dp for an hdpi screen then the physical pixel size of 60 dp is:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;px&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt; * (&lt;span class=&quot;hljs-number&quot;&gt;240&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;160&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;ul&gt;\n&lt;li&gt;px - one pixel, same as to what is used in CSS, JavaScript, etc.&lt;/li&gt;\n&lt;li&gt;sp - scale-independent pixels&lt;/li&gt;\n&lt;li&gt;dip - density-independent pixels&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Normally sp is used for font sizes, while dip is used (also called dp) for others.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve come across a good article about designing Android apps UI for different screen resolutions, and I&apos;d like to leave it here just for somebody searching in this area. Yes, I know that it&apos;s somehow described in Google docs (and mentioned in the posts above), I read that but it was not good for me (yeah, I may be too stupid)). It remained unclear to me how to design layouts capable to handle different screen sizes. I hate the DP concept and so on when I need to implement a &quot;flexible&quot; UI layout for different screens. (Hey iOS developers - yes, you&apos;re right it&apos;s a Storyboard concept).&lt;/p&gt;\n&lt;p&gt;Android has not bad UI concept, but lacks iOS Storyboard features, unfortunately. Designing flexible UI in Android is not an easy thing (at the best).&lt;/p&gt;\n&lt;p&gt;Here goes the article that helped me to understand what to do in Android to make layouts for different screen sizes:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://jmsliu.com/1718/decide-android-app-screen-size.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;JMSTUDIO Blog:- Decide Android App Screen Size&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;How to Design UI for Android Apps for Different Screen Size&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;To design an app UI for different screen sizes, our initial design has to\nmeet a minimum required space for each screen size. Android defines a\nminimum size (in dp) for each generalized screen type. Here is an\nAndroid screen size guideline.\n&lt;a href=&quot;https://i.stack.imgur.com/MPEMR.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/MPEMR.jpg&quot; alt=&quot;Minimum Screen Size for Android in dp&quot;&gt;&lt;/a&gt;\nWhen we get the screen size in dp, it is not enough for us to design\nthe Android app UI. For each screen size, we need to prepare graphics\nand bitmap images for each density. Here is an Android screen density\nguideline.\n&lt;a href=&quot;https://i.stack.imgur.com/Px14F.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/Px14F.jpg&quot; alt=&quot;Android Density Guideline (dpi)&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;For easy calculation, we can follow the 3:4:6:8 scaling ratio between\nthe four generalized densities. If we create a 36Ã36 pixel picture for\nldpi device, the rest densities pictures size will be 48Ã48 for mdpi,\n72Ã72 for hdpi, and 96Ã96 for xhdpi.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;How to Design Android Apps UI in Photoshop&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Many designers have problems designing Android app UI in photoshop or another pixel\nbased graphic design tools because of the density-independent unit, dp.\nDesigners dont know how to map dp to pixel. Google also doesnt give\na clear Android UI design guide for them, though they give a basic\nformula for dp and pixel translation.&lt;/p&gt;\n&lt;p&gt;As Androids definition, 1pd equal to 1px under 160 dpi device (mdpi).\nSo we want to design an Android app for xlarge Android devices with\nmdpi density, we can define our UI size in pixel as 960 pixels in width\nand 720px in height; Follow the same mapping rule, we can get\nfollowing Android App screen size UI design guideline:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/5Kt3R.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/5Kt3R.jpg&quot; alt=&quot;Android App Screen Size in Pixel Guideline&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;ADDED&lt;/strong&gt;: If you are interested in &quot;flexible&quot; UI too, have a look at this library: &lt;a href=&quot;https://github.com/intuit/sdp&quot; rel=&quot;nofollow noreferrer&quot;&gt;An Android SDK that provides a new size unit - sdp (scalable dp). This size unit scales with the screen size&lt;/a&gt; (this also mentioned in an answer here, about &lt;code&gt;SDP&lt;/code&gt; library)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;ADDED2&lt;/strong&gt; Google has finally understood the usefulness of the iOS Storeboard UI concept, and here goes &lt;code&gt;ConstraintLayout&lt;/code&gt; for Android world: &lt;a href=&quot;https://developer.android.com/training/constraint-layout/index.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Build a Responsive UI with ConstraintLayout&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;1) &lt;strong&gt;&lt;code&gt;dp: (density independent pixels)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The number of pixels represented in one unit of dp will increase as the screen resolution increases (when you have more dots/pixels per inch). Conversely on devices with lower resolution, the number of pixels represented in on unit of dp will decrease. Since this is a relative unit, it needs to have a baseline to be compared with. This baseline is a 160 dpi screen. This is the equation: &lt;code&gt;px = dp * (dpi / 160).&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;\n2) &lt;strong&gt;&lt;code&gt;sp: (scale independent pixels)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This unit scales according to the screen dpi (similar to dp) as well as the users font size preference.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;\n3) &lt;strong&gt;&lt;code&gt;px: (pixels)&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;Actual pixels or dots on the screen.&lt;/p&gt;\n\n&lt;p&gt;&lt;br&gt;&lt;/p&gt;\n\n&lt;p&gt;For more details you can visit &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/resources/more-resources.html#Dimension&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Guide &amp;gt; Dimension&lt;/a&gt;&lt;br&gt;\n  &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html#Screens&quot; rel=&quot;noreferrer&quot;&gt;Android Developer Guide &amp;gt; Screens&lt;/a&gt; &lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Screen size&lt;/strong&gt; in Android is grouped into categories &lt;code&gt;ldpi&lt;/code&gt;, &lt;code&gt;mdpi&lt;/code&gt;, &lt;code&gt;hdpi&lt;/code&gt;, &lt;code&gt;xhdpi&lt;/code&gt;, &lt;code&gt;xxhdpi&lt;/code&gt; and &lt;code&gt;xxxhdpi&lt;/code&gt;. &lt;strong&gt;Screen density&lt;/strong&gt; is the amount of pixels within an area (like inch) of the screen. Generally it is measured in dots-per-inch (&lt;code&gt;dpi&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;PX(Pixels):&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;our usual standard pixel which maps to the screen pixel. &lt;code&gt;px&lt;/code&gt; is meant for absolute pixels. This is used if you want to give in terms of absolute pixels for width or height. Not recommended.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;DP/DIP(Density pixels / Density independent pixels):&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;dip == dp&lt;/code&gt;. In earlier Android versions dip was used and later changed to &lt;code&gt;dp&lt;/code&gt;. This is alternative of &lt;code&gt;px&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Generally we never use &lt;code&gt;px&lt;/code&gt; because it is absolute value. If you use &lt;code&gt;px&lt;/code&gt; to set width or height, and if that application is being downloaded into different screen sized devices, then that view will not stretch as per the screen original size.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;dp&lt;/code&gt; is highly recommended to use in place of &lt;code&gt;px&lt;/code&gt;. Use &lt;code&gt;dp&lt;/code&gt; if you want to mention width and height to grow &amp;amp; shrink dynamically  based on screen sizes.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;if we give &lt;code&gt;dp/dip&lt;/code&gt;, android will automatically calculate the pixel size on the basis of 160 pixel sized screen.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;SP(Scale independent pixels):&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;scaled based on users font size preference. Fonts should use &lt;code&gt;sp&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;when mentioning the font sizes to fit for various screen sizes, use &lt;code&gt;sp&lt;/code&gt;. This is similar to &lt;code&gt;dp&lt;/code&gt;.Use &lt;code&gt;sp&lt;/code&gt; especially for font sizes to grow &amp;amp; shrink dynamically based on screen sizes&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Android Documentation says:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;when specifying dimensions, always use either &lt;code&gt;dp&lt;/code&gt; or &lt;code&gt;sp&lt;/code&gt; units. A &lt;code&gt;dp&lt;/code&gt; is\n  a density-independent pixel that corresponds to the physical size of a\n  pixel at 160 &lt;code&gt;dpi&lt;/code&gt;. An &lt;code&gt;sp&lt;/code&gt; is the same base unit, but is scaled by the\n  user&apos;s preferred text size (its a scale-independent pixel), so you\n  should use this measurement unit when defining text size&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;The screen of a mobile phone is made up of thousands of tiny dots known as &lt;strong&gt;pixels (px)&lt;/strong&gt;. A pixel is the smallest element which goes to make the picture. The more the number of pixels to make a picture or wording, the sharper it becomes and makes the smartphone screen more easily readable.&lt;/p&gt;\n\n&lt;p&gt;Screen resolution is measured in terms of number of pixels on the screen. Screen resolution is a commonly-used specification when buying a device, but it&apos;s actually not that useful when designing for Android because thinking of screens in terms of pixels ignores the notion of physical size, which for a touch device is really really important.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Density independent pixel (dp or dip)&lt;/strong&gt; allow the designer to create assets that appear in a expected way, no matter the resolution or density of target device.&lt;/p&gt;\n\n&lt;p&gt;A density independent pixel (dp or dip) is equal to one pixel at the baseline density or 160 dpi (dots per inch).&lt;/p&gt;\n\n&lt;p&gt;1 px/1dp = 160 dpi/160 dpi&lt;/p&gt;\n\n&lt;p&gt;2 px/1dp = 320 dpi(2x)/160 dpi&lt;/p&gt;\n\n&lt;p&gt;where,&lt;/p&gt;\n\n&lt;p&gt;dpi is dots per inch&lt;/p&gt;\n\n&lt;p&gt;So, at 320 dpi, 1 dp is equal to 2 px.&lt;/p&gt;\n\n&lt;p&gt;Formula&lt;/p&gt;\n\n&lt;p&gt;px/dp = dpi/160dpi&lt;/p&gt;\n\n&lt;p&gt;Dots per inch (dpi) is a measure of the sharpness (that is, the density of illuminated points) on a display screen. The dots per inch for a given picture resolution will differ based on the overall screen size since the same number of pixels are being spread out over a different space.&lt;/p&gt;\n\n&lt;p&gt;Working with density independent pixels help us to deal with a situation like where you have two devices with same pixel resolution, but differing amount of space. Suppose in a case, a tablet and phone has the same pixel resolution 1280 by 800 pixels (160 dpi) and 800 by 1280 pixels (320 dpi) respectively.&lt;/p&gt;\n\n&lt;p&gt;Now because a tablet is at baseline density (160 dpi) its physical and density independent pixels sizes are the same, 1280 by 800. The phone on the other hand has a higher pixel density, so it has half as many density independent pixels as physical pixels. So a phone has 400 by 640 density independent pixels. So using a density-independent pixel makes it easier to mentally picture that tablet has much more space than the phone.&lt;/p&gt;\n\n&lt;p&gt;Similarly, if you have two devices with similar screen size, but different pixel density, say one is 800 by 1280 pixels (320 dpi), and the other is 400 by 640 pixels (160 dpi), we don&apos;t need to define totally different layouts for these two devices as we can measure assets in terms of density independent pixel which is same for both devices.&lt;/p&gt;\n\n&lt;p&gt;800 by 1280 pixels (320dpi)=400 by 640 density independent pixel (dp)&lt;/p&gt;\n\n&lt;p&gt;400 by 640 pixels (160 dpi)=400 by 640 density independent pixel (dp)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Scale independent pixels(sp)&lt;/strong&gt; is the preferred unit for font size.\nFor accessibility purposes, Android allows users to customize their device&apos;s font size. Users that have trouble reading text can increase their device&apos;s font size. You can normally find this option in the display setting on your phone or tablet under font size. It&apos;s often also available through the accessibility settings.&lt;/p&gt;\n\n&lt;p&gt;With scale independent pixels, 16 sp is exactly the same as 16 dp when the device&apos;s font size is normal or 100%. But when device&apos;s font size is large, for example 125%, 16 sp will translate to 20 dp or 1.25 times 16.&lt;/p&gt;\n\n&lt;p&gt;If you use dp as the unit for font size, then that piece of text has a specific physical size no matter if the user has customize device&apos;s font size. Using sp units will make a better experience for people with impaired eyesight.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;: &lt;a href=&quot;https://www.udacity.com/courses/android&quot; rel=&quot;noreferrer&quot;&gt;Udacity&lt;/a&gt;, Google&lt;/p&gt;\n    ","\n&lt;h1&gt;Pixel density&lt;/h1&gt;\n&lt;p&gt;Screen pixel density and resolution vary depending on the platform. Device-independent pixels and scalable pixels are units that provide a flexible way to accommodate a design across platforms.&lt;/p&gt;\n&lt;h2&gt;Calculating pixel density&lt;/h2&gt;\n&lt;p&gt;The number of pixels that fit into an inch is referred to as pixel density. High-density screens have more pixels per inch than low-density ones...&lt;/p&gt;\n&lt;p&gt;The number of pixels that fit into an inch is referred to as pixel density. High-density screens have more pixels per inch than low-density ones. As a result, UI elements of the same pixel dimensions appear larger on low-density screens, and smaller on high-density screens.&lt;/p&gt;\n&lt;p&gt;To calculate screen density, you can use this equation:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Screen density = Screen width (or height) in pixels / Screen width (or height) in inches&lt;/strong&gt;&lt;/p&gt;\n&lt;h2&gt;&lt;a href=&quot;https://i.stack.imgur.com/Oy13H.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/Oy13H.png&quot; alt=&quot;Hight density vs lower density displays&quot;&gt;&lt;/a&gt;&lt;/h2&gt;\n&lt;h1&gt;Density independence&lt;/h1&gt;\n&lt;p&gt;Screen pixel density and resolution vary depending on the platform. Device-independent pixels and scalable pixels are units that provide a flexible way to accommodate a design across platforms.&lt;/p&gt;\n&lt;p&gt;Calculating pixel density\nThe number of pixels that fit into an inch is referred to as &lt;em&gt;pixel density&lt;/em&gt;. High-density screens have more pixels per inch than low-density ones...&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Density independence&lt;/strong&gt; refers to the uniform display of UI elements on screens with different densities.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Density-independent pixels&lt;/em&gt;, written as &lt;em&gt;dp&lt;/em&gt; (pronounced &lt;em&gt;dips&lt;/em&gt;), are flexible units that scale to have uniform dimensions on any screen. Material UIs use density-independent pixels to display elements consistently on screens with different densities.&lt;/p&gt;\n&lt;img src=&quot;https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1QqdZ48smdRjk9itSexZz2DcWI92iXxR7%2Flayout-unitsmeasurements-pixeldensity-lowhigh.png&quot; width=&quot;600&quot; height=&quot;300&quot;&gt;\n&lt;ol&gt;\n&lt;li&gt;Low-density screen displayed with density independence&lt;/li&gt;\n&lt;li&gt;High-density screen displayed with density independence&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;&lt;em&gt;Read full text&lt;/em&gt;\n&lt;a href=&quot;https://material.io/design/layout/pixel-density.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://material.io/design/layout/pixel-density.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Before answering this question let me decrease the number of units first. So here you go: &lt;em&gt;dp or dip&lt;/em&gt; are both the same and are known as &lt;em&gt;Density-independent pixels&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;1. px&lt;/strong&gt; - stands for pixels. Pixels are a single dot, point on a screen. Generally in the mobile industry, it is measured in PPI (pixels per inch). Screen resolution is directly proportional to PPI, the larger the number of pixels per inch the higher the screen resolution.&lt;/p&gt;\n&lt;p&gt;For example, if you draw an image of a size &lt;em&gt;200 px&lt;/em&gt; * &lt;em&gt;200 px&lt;/em&gt;, then its appearance must be different on a high-resolution device versus a low-resolution device. The reason is a &lt;em&gt;200 px&lt;/em&gt; the image on a low-resolution phone will look larger than on a high-resolution device.&lt;/p&gt;\n&lt;p&gt;Below images are showing a resolution of the same image on different phones -&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Phone with High screen resolution&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/P7X9C.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/P7X9C.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Phone with Low screen resolution&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/yLqN0.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/yLqN0.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;2. dip or dp&lt;/strong&gt; - an abstract unit that is based on the physical density of the screen. These units are relative to a &lt;em&gt;160&lt;/em&gt; dpi screen, so one dp is one pixel on a &lt;em&gt;160&lt;/em&gt; dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion. &quot;Density independence&quot; refers to the uniform display of UI elements on screens with different densities.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Image which is showing &lt;em&gt;80px (left side image)&lt;/em&gt; and &lt;em&gt;80 dp (right-side image)&lt;/em&gt;. Checkout difference.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/et1rf.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/et1rf.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;A dp is equal to one physical pixel on a screen with a density of &lt;em&gt;160&lt;/em&gt;. To calculate dp:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;dp = (width in pixels * 160) / screen density&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;3. sp&lt;/strong&gt; - stands for scalable pixels. Generally &lt;em&gt;sp&lt;/em&gt; is used for texts on the UI, and &lt;em&gt;sp&lt;/em&gt; preserves the font settings. For example, if a user selected a larger font than &lt;em&gt;30 sp&lt;/em&gt; it will auto-scale to appear large according to a user preference.&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;sp: scale independent pixel&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You should use it with texts because it is automatically scaled according to the font size that is being used by the user in his device.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;px: pixel or picture element is the single point on the screen&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Pixels(px)&lt;/strong&gt;  corresponds to actual pixels on the screen. This is used if you want to give in terms of absolute pixels for width or height.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Density-independent Pixels (dp or dip)&lt;/strong&gt;  an abstract unit that is based on the physical density of the screen. These units are relative to a 160 dpi screen, so one dp is one pixel on a 160 dpi screen. The ratio of dp-to-pixel will change with the screen density, but not necessarily in direct proportion. Note: The compiler accepts both dip and dp, though dp is more consistent with sp.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Scale-independent Pixels(sp)&lt;/strong&gt;  this is like the dp unit, but it is also scaled by the users font size preference. It is recommended you use this unit when specifying font sizes, so they will be adjusted for both the screen density and users preference.&lt;/p&gt;\n&lt;p&gt;Always use dp and sp only. sp for font sizes and dp for everything else. It will make UI compatible for Android devices with different densities.\nYou can learn more about pixel and dp from\n&lt;a href=&quot;https://www.google.com/design/spec/layout/units-measurements.html#units-measurements-density-independent-pixels-dp-&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.google.com/design/spec/layout/units-measurements.html#units-measurements-density-independent-pixels-dp-&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Source URL:- &lt;a href=&quot;http://www.androidtutorialshub.com/what-is-the-difference-between-px-dp-dip-sp-on-android/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.androidtutorialshub.com/what-is-the-difference-between-px-dp-dip-sp-on-android/&lt;/a&gt;&lt;/p&gt;\n    "]},"page":"29","randomQuestions":[{"title":"Is there any way to kill a Thread?","slug":"is-there-any-way-to-kill-a-thread-1657387859831"},{"title":"How do JavaScript closures work?","slug":"how-do-javascript-closures-work-1657384418555"},{"title":"How do I return the response from an asynchronous call?","slug":"how-do-i-return-the-response-from-an-asynchronous-call-1657384208012"},{"title":"How to replace all occurrences of a string in JavaScript","slug":"how-to-replace-all-occurrences-of-a-string-in-javascript-1657384895467"},{"title":"CSS selector for first element with class","slug":"css-selector-for-first-element-with-class-1657388028765"},{"title":"Where and why do I have to put the \"template\" and \"typename\" keywords?","slug":"where-and-why-do-i-have-to-put-the-\"template\"-and-\"typename\"-keywords-1657384467606"},{"title":"UnboundLocalError on local variable when reassigned after first use","slug":"unboundlocalerror-on-local-variable-when-reassigned-after-first-use-1657387685248"},{"title":"Reshaping multiple sets of measurement columns (wide format) into single columns (long format)","slug":"reshaping-multiple-sets-of-measurement-columns-(wide-format)-into-single-columns-(long-format)-1657388016983"},{"title":"How can I access the contents of an iframe with JavaScript/jQuery?","slug":"how-can-i-access-the-contents-of-an-iframe-with-javascriptjquery-1657388369923"},{"title":"Does JavaScript guarantee object property order?","slug":"does-javascript-guarantee-object-property-order-1657384822587"},{"title":"Event binding on dynamically created elements?","slug":"event-binding-on-dynamically-created-elements-1657384268057"},{"title":"Performance optimization strategies of last resort [closed]","slug":"performance-optimization-strategies-of-last-resort-closed-1657388420614"},{"title":"With arrays, why is it the case that a[5] == 5[a]?","slug":"with-arrays-why-is-it-the-case-that-a5-5a-1657387956216"},{"title":"Add a property to a JavaScript object using a variable as the name?","slug":"add-a-property-to-a-javascript-object-using-a-variable-as-the-name-1657388425650"},{"title":"Using global variables in a function","slug":"using-global-variables-in-a-function-1657384796002"},{"title":"When does SQLiteOpenHelper onCreate() / onUpgrade() run?","slug":"when-does-sqliteopenhelper-oncreate()-onupgrade()-run-1657384883864"},{"title":"Split comma-separated strings in a column into separate rows","slug":"split-comma-separated-strings-in-a-column-into-separate-rows-1657387785823"},{"title":"String.equals versus == [duplicate]","slug":"string.equals-versus-duplicate-1657387599972"},{"title":"Is it possible for flex items to align tightly to the items above them?","slug":"is-it-possible-for-flex-items-to-align-tightly-to-the-items-above-them-1657388511179"},{"title":"How to convert string representation of list to a list","slug":"how-to-convert-string-representation-of-list-to-a-list-1657387384181"}]},"__N_SSG":true}