{"pageProps":{"data":{"count":610,"rows":[{"id":460,"title":"What is the \"N+1 selects problem\" in ORM (Object-Relational Mapping)?","slug":"what-is-the-\"n+1-selects-problem\"-in-orm-(object-relational-mapping)-1657388055597","postType":"QUESTION","createdAt":"2022-07-09T17:34:15.000Z","updatedAt":"2022-07-09T17:34:15.000Z","tags":[{"id":2356,"name":"orm","slug":"orm","createdAt":"2022-07-09T17:34:15.000Z","updatedAt":"2022-07-09T17:34:15.000Z","Questions_Tags":{"questionId":460,"tagId":2356}}]},{"id":459,"title":"Preview an image before it is uploaded","slug":"preview-an-image-before-it-is-uploaded-1657388048128","postType":"QUESTION","createdAt":"2022-07-09T17:34:08.000Z","updatedAt":"2022-07-09T17:34:08.000Z","tags":[]},{"id":458,"title":"How do I split a delimited string so I can access individual items?","slug":"how-do-i-split-a-delimited-string-so-i-can-access-individual-items-1657388042385","postType":"QUESTION","createdAt":"2022-07-09T17:34:02.000Z","updatedAt":"2022-07-09T17:34:02.000Z","tags":[]},{"id":457,"title":"Convert form data to JavaScript object with jQuery","slug":"convert-form-data-to-javascript-object-with-jquery-1657388036834","postType":"QUESTION","createdAt":"2022-07-09T17:33:56.000Z","updatedAt":"2022-07-09T17:33:56.000Z","tags":[{"id":2347,"name":"serialization","slug":"serialization","createdAt":"2022-07-09T17:33:56.000Z","updatedAt":"2022-07-09T17:33:56.000Z","Questions_Tags":{"questionId":457,"tagId":2347}}]},{"id":456,"title":"Why do we always prefer using parameters in SQL statements?","slug":"why-do-we-always-prefer-using-parameters-in-sql-statements-1657388031476","postType":"QUESTION","createdAt":"2022-07-09T17:33:51.000Z","updatedAt":"2022-07-09T17:33:51.000Z","tags":[]}]},"answers":{"456":["\n&lt;p&gt;Using parameters helps prevent &lt;strong&gt;SQL Injection attacks&lt;/strong&gt; when the database is used in conjunction with a program interface such as a desktop program or web site.&lt;/p&gt;\n&lt;p&gt;In your example, a user can directly run SQL code on your database by crafting statements in &lt;code&gt;txtSalary&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;For example, if they were to write &lt;code&gt;0 OR 1=1&lt;/code&gt;, the executed SQL would be&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; empSalary &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; salary &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;whereby all empSalaries would be returned.&lt;/p&gt;\n&lt;p&gt;Further, a user could perform far worse commands against your database, including deleting it If they wrote &lt;code&gt;0; Drop Table employee&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; empSalary &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; salary &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;Drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Table&lt;/span&gt; employee\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The table &lt;code&gt;employee&lt;/code&gt; would then be deleted.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;In your case, it looks like you&apos;re using .NET. Using parameters is as easy as:&lt;/p&gt;\n&lt;pre class=&quot;lang-c# s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; sql = &lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT empSalary from employee where salary = @salary&quot;&lt;/span&gt;;\n\nusing (SqlConnection connection = new SqlConnection(&lt;span class=&quot;hljs-comment&quot;&gt;/* connection info */&lt;/span&gt;))\nusing (SqlCommand command = new SqlCommand(sql, connection))\n{\n    var salaryParam = new SqlParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;salary&quot;&lt;/span&gt;, SqlDbType.Money);\n    salaryParam.Value = txtMoney.Text;\n\n    command.Parameters.Add(salaryParam);\n    var results = command.ExecuteReader();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-vbnet s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; sql &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT empSalary from employee where salary = @salary&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt; connection &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;New&lt;/span&gt; SqlConnection(&lt;span class=&quot;hljs-string&quot;&gt;&quot;connectionString&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt; command &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;New&lt;/span&gt; SqlCommand(sql, connection)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; salaryParam = &lt;span class=&quot;hljs-built_in&quot;&gt;New&lt;/span&gt; SqlParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;salary&quot;&lt;/span&gt;, SqlDbType.Money)\n        salaryParam.Value = txtMoney.&lt;span class=&quot;hljs-keyword&quot;&gt;Text&lt;/span&gt;\n\n        command.Parameters.Add(salaryParam)\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; results = command.ExecuteReader()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Using&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Edit 2016-4-25:&lt;/p&gt;\n&lt;p&gt;As per George Stocker&apos;s comment, I changed the sample code to not use &lt;code&gt;AddWithValue&lt;/code&gt;. Also, it is generally recommended that you wrap &lt;code&gt;IDisposable&lt;/code&gt;s in &lt;code&gt;using&lt;/code&gt; statements.&lt;/p&gt;\n    ","\n&lt;p&gt;You are right, this is related to &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot; rel=&quot;noreferrer&quot;&gt;SQL injection&lt;/a&gt;, which is a vulnerability that allows a malicioius user to execute arbitrary statements against your database. This old time favorite &lt;a href=&quot;http://xkcd.com/327/&quot; rel=&quot;noreferrer&quot;&gt;XKCD comic&lt;/a&gt; illustrates the concept:&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/Gz7eb.png&quot; alt=&quot;Her daughter is named Help I&apos;m trapped in a driver&apos;s license factory.&quot;&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;In your example, if you just use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;var query &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &quot;SELECT empSalary from employee where salary = &quot; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; txtSalary.Text;\n&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; proceed &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;execute&lt;/span&gt; this query\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You are open to SQL injection. For example, say someone enters txtSalary:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; employee &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; salary &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;9999999&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; empID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;--&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; employee; &lt;span class=&quot;hljs-comment&quot;&gt;--&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; etc.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When you execute this query, it will perform a &lt;code&gt;SELECT&lt;/code&gt; and an &lt;code&gt;UPDATE&lt;/code&gt; or &lt;code&gt;DROP&lt;/code&gt;, or whatever they wanted. The &lt;code&gt;--&lt;/code&gt; at the end simply comments out the rest of your query, which would be useful in the attack if you were concatenating anything after &lt;code&gt;txtSalary.Text&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;The correct way is to use parameterized queries, eg (C#):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;SqlCommand query &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SqlCommand(&quot;SELECT empSalary FROM employee \n                                    WHERE salary = @sal;&quot;);\nquery.Parameters.AddWithValue(&quot;@sal&quot;, txtSalary.Text);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With that, you can safely execute the query. &lt;/p&gt;\n\n&lt;p&gt;For reference on how to avoid SQL injection in several other languages, check &lt;a href=&quot;http://bobby-tables.com/&quot; rel=&quot;noreferrer&quot;&gt;bobby-tables.com&lt;/a&gt;, a website maintained by a &lt;a href=&quot;https://stackoverflow.com/users/8454/andy-lester&quot;&gt;SO user&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;In addition to other answers need to add that parameters not only helps prevent sql injection but &lt;strong&gt;can improve performance of queries&lt;/strong&gt;. Sql server caching parameterized query plans and reuse them on repeated queries execution. If you not parameterized your query then &lt;strong&gt;sql server would compile new plan on each query&lt;/strong&gt;(with some exclusion) execution if text of query would differ.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc293623.aspx&quot; rel=&quot;noreferrer&quot;&gt;More information about query plan caching&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Two years after &lt;a href=&quot;https://stackoverflow.com/a/27312318/1585345&quot;&gt;my first go&lt;/a&gt;, I&apos;m recidivating...&lt;/p&gt;\n\n&lt;p&gt;Why do we prefer parameters? SQL injection is obviously a big reason, but could it be that &lt;strong&gt;we&apos;re secretly longing to get back to SQL &lt;em&gt;as a language&lt;/em&gt;&lt;/strong&gt;. SQL in string literals is already a weird cultural practice, but at least you can copy and paste your request into management studio. SQL dynamically constructed with host language conditionals and control structures, when SQL has conditionals and control structures, is just level 0 barbarism. You have to run your app in debug, or with a trace, to see what SQL it generates.&lt;/p&gt;\n\n&lt;p&gt;Don&apos;t stop with just parameters. Go all the way and use &lt;strong&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bbsimonbb.QueryFirst&quot; rel=&quot;noreferrer&quot;&gt;QueryFirst&lt;/a&gt;&lt;/strong&gt; (disclaimer: which I wrote). Your SQL lives &lt;em&gt;in a .sql file&lt;/em&gt;. You edit it in the fabulous TSQL editor window, with syntax validation and Intellisense for your tables and columns. You can assign test data in the special comments section and click &quot;play&quot; to run your query right there in the window. Creating a parameter is as easy as putting &quot;@myParam&quot; in your SQL. Then, each time you save, QueryFirst generates the C# wrapper for your query. Your parameters pop up, strongly typed, as arguments to the Execute() methods. Your results are returned in an IEnumerable or List of strongly typed POCOs, the types generated from the actual schema returned by your query. If your query doesn&apos;t run, your app won&apos;t compile. If your db schema changes and your query runs but some columns disappear, the compile error points to &lt;em&gt;the line in your code&lt;/em&gt; that tries to access the missing data. And there are numerous other advantages. &lt;strong&gt;Why would you want to access data any other way?&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;In Sql when any word contain @ sign it means it is variable and we use this variable to set value in it and use it on number area on the same sql script because it is only restricted on the single script while you can declare lot of variables of same type and name on many script. We use this variable in stored procedure lot because stored procedure are pre-compiled queries and we can pass values in these variable from script, desktop and websites for further information read &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa258839%28v=sql.80%29.aspx&quot; rel=&quot;nofollow&quot;&gt;Declare Local Variable&lt;/a&gt;, &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa174792%28v=sql.80%29.aspx&quot; rel=&quot;nofollow&quot;&gt;Sql Stored Procedure&lt;/a&gt; and &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms161953.aspx&quot; rel=&quot;nofollow&quot;&gt;sql injections&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Also read &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ff648339.aspx&quot; rel=&quot;nofollow&quot;&gt;Protect from sql injection&lt;/a&gt; it will guide how you can protect your database.&lt;/p&gt;\n\n&lt;p&gt;Hope it help you to understand also any question comment me.&lt;/p&gt;\n    ","\n&lt;p&gt;Old post but wanted to ensure newcomers are aware of &lt;strong&gt;Stored procedures&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;My 10¢ worth here is that if you are able to write your SQL statement as a &lt;em&gt;stored procedure&lt;/em&gt;, that in my view is the optimum approach.  I &lt;strong&gt;ALWAYS&lt;/strong&gt; use stored procs and never loop through records in my main code.  For Example: &lt;code&gt;SQL Table &amp;gt; SQL Stored Procedures &amp;gt; IIS/Dot.NET &amp;gt; Class&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;When you use stored procedures, you can restrict the user to &lt;strong&gt;EXECUTE&lt;/strong&gt; permission only, thus &lt;strong&gt;reducing security risks&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Your stored procedure is inherently paramerised, and you can specify input and output parameters.&lt;/p&gt;\n\n&lt;p&gt;The stored procedure (if it returns data via &lt;code&gt;SELECT&lt;/code&gt; statement) can be accessed and read in the exact same way as you would a regular &lt;code&gt;SELECT&lt;/code&gt; statement in your code.  &lt;/p&gt;\n\n&lt;p&gt;It also runs faster as it is compiled on the SQL Server.&lt;/p&gt;\n\n&lt;p&gt;Did I also mention you can do multiple steps, e.g. &lt;code&gt;update&lt;/code&gt; a table, check values on another DB server, and then once finally finished, return data to the client, all on the same server, and no interaction with the client.  So this is MUCH faster than coding this logic in your code.&lt;/p&gt;\n    ","\n&lt;p&gt;Other answers cover why parameters are important, but there is a downside! In .net, there are several methods for creating parameters (Add, AddWithValue), but they all require you to worry, needlessly, about the parameter name, and they all reduce the readability of the SQL in the code. Right when you&apos;re trying to meditate on the SQL, you need to hunt around above or below to see what value has been used in the parameter.&lt;/p&gt;\n\n&lt;p&gt;I humbly claim my little SqlBuilder class is &lt;em&gt;the most elegant way to write parameterized queries&lt;/em&gt;. Your code will look like this...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;var bldr &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SqlBuilder( myCommand );\nbldr.Append(&quot;SELECT * FROM CUSTOMERS WHERE ID = &quot;).&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;(myId);\n&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt;\nbldr.Append(&quot;SELECT * FROM CUSTOMERS WHERE NAME LIKE &quot;).FuzzyValue(myName);\nmyCommand.CommandText &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; bldr.ToString();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Your code will be shorter and much more readable. You don&apos;t even need extra lines, and, when you&apos;re reading back, you don&apos;t need to hunt around for the value of parameters. The class you need is here...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;System&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Collections.Generic;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Text;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data.SqlClient;\n\npublic class SqlBuilder\n{\nprivate StringBuilder _rq;\nprivate SqlCommand _cmd;\nprivate &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; _seq;\npublic SqlBuilder(SqlCommand cmd)\n{\n    _rq &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; StringBuilder();\n    _cmd &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; cmd;\n    _seq &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\npublic SqlBuilder Append(String str)\n{\n    _rq.Append(str);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; this;\n}\npublic SqlBuilder &lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;(Object &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)\n{\n    string paramName &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &quot;@SqlBuilderParam&quot; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; _seq&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;;\n    _rq.Append(paramName);\n    _cmd.Parameters.AddWithValue(paramName, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; this;\n}\npublic SqlBuilder FuzzyValue(Object &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)\n{\n    string paramName &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &quot;@SqlBuilderParam&quot; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; _seq&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;;\n    _rq.Append(&quot;&apos;%&apos; + &quot; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; paramName &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &quot; + &apos;%&apos;&quot;);\n    _cmd.Parameters.AddWithValue(paramName, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; this;\n}\npublic override string ToString()\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _rq.ToString();\n}\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"457":["\n&lt;p&gt;&lt;a href=&quot;http://api.jquery.com/serializeArray/&quot; rel=&quot;noreferrer&quot;&gt;serializeArray&lt;/a&gt; already does exactly that. You just need to massage the data into your required format:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objectifyForm&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;formArray&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//serialize data function&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; returnArray = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; formArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n        returnArray[formArray[i][&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;]] = formArray[i][&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; returnArray;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Watch out for hidden fields which have the same name as real inputs as they will get overwritten.&lt;/p&gt;\n    ","\n&lt;h1&gt;Convert forms to JSON &lt;em&gt;like a boss&lt;/em&gt;&lt;/h1&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;The current source is &lt;a href=&quot;https://github.com/macek/jquery-serialize-object&quot; rel=&quot;noreferrer&quot;&gt;on GitHub&lt;/a&gt; and &lt;a href=&quot;https://bower.io/&quot; rel=&quot;noreferrer&quot;&gt;Bower&lt;/a&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;$ bower install jquery-serialize-object&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;The following code is now &lt;strong&gt;deprecated&lt;/strong&gt;.&lt;/h3&gt;\n\n&lt;p&gt;The following code can take work with all sorts of input names; and handle them just as you&apos;d expect.&lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!-- &lt;span class=&quot;hljs-title class_&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; these will work! --&amp;gt;\n&amp;lt;input name=&quot;honey[badger]&quot; value=&quot;a&quot;&amp;gt;\n&amp;lt;input name=&quot;wombat[]&quot; value=&quot;b&quot;&amp;gt;\n&amp;lt;input name=&quot;hello[panda][]&quot; value=&quot;c&quot;&amp;gt;\n&amp;lt;input name=&quot;animals[0][name]&quot; value=&quot;d&quot;&amp;gt;\n&amp;lt;input name=&quot;animals[0][breed]&quot; value=&quot;e&quot;&amp;gt;\n&amp;lt;input name=&quot;crazy[1][][wonky]&quot; value=&quot;f&quot;&amp;gt;\n&amp;lt;input name=&quot;dream[as][vividly][as][you][can]&quot; value=&quot;g&quot;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Output&lt;/span&gt;\n{\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;honey&quot;&lt;/span&gt;:{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;badger&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;\n  },\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;wombat&quot;&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;:{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;panda&quot;&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;]\n  },\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;animals&quot;&lt;/span&gt;:[\n    {\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;,\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;breed&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;e&quot;&lt;/span&gt;\n    }\n  ],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;crazy&quot;&lt;/span&gt;:[\n    &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,\n    [\n      {&lt;span class=&quot;hljs-string&quot;&gt;&quot;wonky&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;f&quot;&lt;/span&gt;}\n    ]\n  ],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;dream&quot;&lt;/span&gt;:{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;as&quot;&lt;/span&gt;:{\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;vividly&quot;&lt;/span&gt;:{\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;as&quot;&lt;/span&gt;:{\n          &lt;span class=&quot;hljs-string&quot;&gt;&quot;you&quot;&lt;/span&gt;:{\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;can&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;g&quot;&lt;/span&gt;\n          }\n        }\n      }\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Usage&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#my-form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeObject&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;The Sorcery (JavaScript)&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;$&lt;/span&gt;){\n    $.fn.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;,\n            json = {},\n            push_counters = {},\n            patterns = {\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;validate&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-zA-Z][a-zA-Z0-9_]*(?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*$/&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;:      &lt;span class=&quot;hljs-regexp&quot;&gt;/[a-zA-Z0-9_]+|(?=\\[\\])/g&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;push&quot;&lt;/span&gt;:     &lt;span class=&quot;hljs-regexp&quot;&gt;/^$/&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;fixed&quot;&lt;/span&gt;:    &lt;span class=&quot;hljs-regexp&quot;&gt;/^\\d+$/&lt;/span&gt;,\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;named&quot;&lt;/span&gt;:    &lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-zA-Z0-9_]+$/&lt;/span&gt;\n            };\n\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;build&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;base, key, value&lt;/span&gt;){\n            base[key] = value;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; base;\n        };\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;push_counter&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(push_counters[key] === &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;){\n                push_counters[key] = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; push_counters[key]++;\n        };\n\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Skip invalid keys&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!patterns.&lt;span class=&quot;hljs-property&quot;&gt;validate&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;)){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n            }\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k,\n                keys = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;),\n                merge = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;,\n                reverse_key = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;((k = keys.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;()) !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;){\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Adjust reverse_key&lt;/span&gt;\n                reverse_key = reverse_key.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\[&quot;&lt;/span&gt; + k + &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\]$&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Push&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(k.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;)){\n                    merge = self.&lt;span class=&quot;hljs-title function_&quot;&gt;build&lt;/span&gt;([], self.&lt;span class=&quot;hljs-title function_&quot;&gt;push_counter&lt;/span&gt;(reverse_key), merge);\n                }\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Fixed&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(k.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;fixed&lt;/span&gt;)){\n                    merge = self.&lt;span class=&quot;hljs-title function_&quot;&gt;build&lt;/span&gt;([], k, merge);\n                }\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Named&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(k.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(patterns.&lt;span class=&quot;hljs-property&quot;&gt;named&lt;/span&gt;)){\n                    merge = self.&lt;span class=&quot;hljs-title function_&quot;&gt;build&lt;/span&gt;({}, k, merge);\n                }\n            }\n\n            json = $.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;, json, merge);\n        });\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; json;\n    };\n})(jQuery);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;What&apos;s wrong with: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = {};\n$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.form-selector&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){data[x.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = x.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;}); \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A fixed version of Tobias Cohen&apos;s solution. This one correctly handles falsy values like &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;&apos;&apos;&lt;/code&gt;. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrayData, objectData;\n  arrayData = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;();\n  objectData = {};\n\n  $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(arrayData, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      value = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      value = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;) {\n        objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = [objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]];\n      }\n\n      objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      objectData[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = value;\n    }\n  });\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objectData;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And a CoffeeScript version for your coding convenience:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = -&amp;gt;\n  arrayData = @&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;()\n  objectData = {}\n\n  $.each arrayData, -&amp;gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; @value?\n      value = @value\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n      value = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; objectData[@name]?\n      unless objectData[@name].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;\n        objectData[@name] = [objectData[@name]]\n\n      objectData[@name].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt; value\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n      objectData[@name] = value\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objectData\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I like using &lt;code&gt;Array.prototype.reduce&lt;/code&gt; because it&apos;s a one-liner, and it doesn&apos;t rely on &lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;Underscore.js&lt;/a&gt; or the like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#formid&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;()\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, x&lt;/span&gt;) { a[x.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = x.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a; }, {});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is similar to the answer using &lt;code&gt;Array.prototype.map&lt;/code&gt;, but you don&apos;t need to clutter up your scope with an additional object variable. One-stop shopping.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE&lt;/strong&gt;: Forms with inputs that have duplicate &lt;code&gt;name&lt;/code&gt; attributes are valid HTML, and is actually a common approach. Using any of the answers in this thread will be inappropriate in that case (since object keys must be unique).&lt;/p&gt;\n    ","\n&lt;h1&gt;[UPDATE 2020]&lt;/h1&gt;\n\n&lt;p&gt;With a simple oneliner in vanilla js that leverages &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries&quot; rel=&quot;noreferrer&quot;&gt;fromEntries&lt;/a&gt; (as always, check browser support):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fromEntries&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(form))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;All of these answers seemed so over the top to me. There&apos;s something to be said for simplicity. As long as all your form inputs have the name attribute set this should work just jim dandy.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form.myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $this = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)\n    , viewArr = $this.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;()\n    , view = {};\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; viewArr) {\n    view[viewArr[i].&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = viewArr[i].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;//Do stuff with view object here (e.g. JSON.stringify?)&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;There really is no way to do this without examining each of the elements.  What you really want to know is &quot;has someone else already written a method that converts a form to a JSON object?&quot;   Something like the following should work -- note that it will only give you the form elements that would be returned via a POST (must have a name).  This is &lt;strong&gt;not tested&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;formToJSON&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; selector &lt;/span&gt;)\n{\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; form = {};\n     $(selector).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;:input[name]:enabled&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n         &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; self = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n         &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = self.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;);\n         &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (form[name]) {\n            form[name] = form[name] + &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt; + self.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n         }\n         &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            form[name] = self.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n         }\n     });\n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; form;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I checked that there is a problem with all the other answers, that if the input name is as an array, such as &lt;code&gt;name[key]&lt;/code&gt;, then it should be generated like this:&lt;/p&gt;\n\n&lt;h2&gt;&lt;code&gt;name:{ key : value }&lt;/code&gt;&lt;/h2&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt; If you have an HTML form similar to the one below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[key1]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value1&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2[key2]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value2&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name3[key3]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value3&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But it should be generated just like the JSON below, and does not become an object like the following with all the other answers. So if anyone wants to bring something like the following JSON, try the JS code below.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    name  &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value&apos;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    name1 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; key1 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value1&apos; &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    name2 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; key2 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value2&apos; &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    name3 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; key2 &lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &apos;value2&apos; &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.fn.&lt;span class=&quot;hljs-property&quot;&gt;getForm2obj&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _ = {};\n  $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; keys = n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[a-zA-Z0-9_]+|(?=\\[\\])/g&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (keys.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; tmp = _;\n      pop = keys.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;();\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; keys.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;, j = keys[i]; i++) {\n        tmp[j] = (!tmp[j] ? (pop == &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) ? [] : {} : tmp[j]), tmp = tmp[j];\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (pop == &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) tmp = (!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(tmp) ? [] : tmp), tmp.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; tmp[pop] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; _[keys.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;()] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n  });\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _;\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;getForm2obj&lt;/span&gt;());\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form input&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;clear&lt;/span&gt;();\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;getForm2obj&lt;/span&gt;());\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://code.jquery.com/jquery-3.2.1.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;checked&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;gender&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;male&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;checked&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;male\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;gender&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;female&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; female\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2[key1]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;one[another][another_one]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name3[1][name]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name3[2][name]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Underscore.js&quot;&gt;Underscore.js&lt;/a&gt; you can use the relatively concise:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;object&lt;/span&gt;(_.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), _.&lt;span class=&quot;hljs-property&quot;&gt;values&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Ok, I know this already has a highly upvoted answer, but another &lt;a href=&quot;https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710&quot;&gt;similar question was asked&lt;/a&gt; recently, and I was directed to this question as well.  I&apos;d like to offer my solution as well, because it offers an advantage over the accepted solution:  You can include disabled form elements (which is sometimes important, depending on how your UI functions)&lt;/p&gt;\n\n&lt;p&gt;Here is my answer from the &lt;a href=&quot;https://stackoverflow.com/questions/3277655/how-to-convert-jquery-serialize-data-to-json-object/3277710#3277710&quot;&gt;other SO question&lt;/a&gt;:&lt;/p&gt;\n\n&lt;p&gt;Initially, we were using jQuery&apos;s &lt;code&gt;serializeArray()&lt;/code&gt; method, but that does not include form elements that are disabled.  We will often disable form elements that are &quot;sync&apos;d&quot; to other sources on the page, but we still need to include the data in our serialized object.  So &lt;code&gt;serializeArray()&lt;/code&gt; is out.  We used the &lt;code&gt;:input&lt;/code&gt; selector to get all input elements (both enabled and disabled) in a given container, and then &lt;code&gt;$.map()&lt;/code&gt; to create our object.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inputs = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#container :input&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(inputs, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, i&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    o[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = $(n).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n});\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(obj);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that for this to work, each of your inputs will need a &lt;code&gt;name&lt;/code&gt; attribute, which will be the name of the property of the resulting object.&lt;/p&gt;\n\n&lt;p&gt;That is actually slightly modified from what we used.  We needed to create an object that was structured as a .NET IDictionary, so we used this: (I provide it here in case it&apos;s useful)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(inputs, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, i&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; { &lt;span class=&quot;hljs-title class_&quot;&gt;Key&lt;/span&gt;: n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Value&lt;/span&gt;: $(n).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;() };\n});\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(obj);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I like both of these solutions, because they are simple uses of the &lt;code&gt;$.map()&lt;/code&gt; function, and you have complete control over your selector (so, which elements you end up including in your resulting object).  Also, no extra plugin required.  Plain old jQuery.&lt;/p&gt;\n    ","\n&lt;p&gt;This function should handle multidimensional arrays along with multiple elements with the same name. &lt;/p&gt;\n\n&lt;p&gt;I&apos;ve been using it for a couple years so far:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;serializeJSON&lt;/span&gt;=&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; json = {};\n  jQuery.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;jQuery&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;(), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, i&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _ = n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (_ &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = json;\n      _name = n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\]/gi&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&apos;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len=_name.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i&amp;lt;len; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == len-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o[_name[i]]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; o[_name[i]] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;) {\n              o[_name[i]] = [o[_name[i]]];\n            }\n            o[_name[i]].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n          }\n          &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; o[_name[i]] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; o = o[_name[i]] = o[_name[i]] || {};\n      }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;) {\n          json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = [json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]];\n        }\n        json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; json[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = n.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;      \n    }\n  });\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; json;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; frm = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;myform&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(frm.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;em&gt;&lt;a href=&quot;http://www.json.org/&quot; rel=&quot;noreferrer&quot;&gt;JSON&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;One-liner (no dependencies other than jQuery), uses fixed object binding for function passsed to &lt;code&gt;map&lt;/code&gt; method. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[x.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = x.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;}.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;({}))[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What it does?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;id=2&amp;amp;value=1&amp;amp;comment=ok&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;comment&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;ok&quot;&lt;/span&gt; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;suitable for progressive web apps (one can easily support both regular form submit action as well as ajax requests)&lt;/p&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;form_to_json&lt;/span&gt; (selector) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ary = $(selector).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; a &amp;lt; ary.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; a++) obj[ary[a].&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = ary[a].&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-string&quot;&gt;&quot;myfield&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;myfield value&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;passwordfield&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;mypasswordvalue&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;From some &lt;a href=&quot;https://stackoverflow.com/a/17784656/1197775&quot;&gt;older&lt;/a&gt; answer:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form input, form select&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m,e&lt;/span&gt;){m[e.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = $(e).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;(); &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; m;},{})\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I found a problem with Tobias Cohen&apos;s code (I don&apos;t have enough points to comment on it directly), which otherwise works for me. If you have two select options with the same name, both with value=&quot;&quot;, the original code will produce &quot;name&quot;:&quot;&quot; instead of &quot;name&quot;:[&quot;&quot;,&quot;&quot;]&lt;/p&gt;\n\n&lt;p&gt;I think this can fixed by adding &quot; || o[this.name] == &apos;&apos;&quot; to the first if condition:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.fn.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;();\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(a, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] || o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;) {\n                o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = [o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]];\n            }\n            o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n        }\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simplicity is best here. I&apos;ve used a simple string replace with a regular expression, and they worked like a charm thus far. I am not a regular expression expert, but I bet you can even populate very complex objects.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; values = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serialize&lt;/span&gt;(),\nattributes = {};\n\nvalues.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/([^&amp;amp;]+)=([^&amp;amp;]*)/g&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;match, name, value&lt;/span&gt;) {\n    attributes[name] = value;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; formData = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(form);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; formDataJSON = {};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [key, value] &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; formData.&lt;span class=&quot;hljs-title function_&quot;&gt;entries&lt;/span&gt;()) {\n\n    formDataJSON[key] = value;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using &lt;a href=&quot;https://stackoverflow.com/questions/1184624/convert-form-data-to-javascript-object-with-jquery/8407771#8407771&quot;&gt;maček&apos;s solution&lt;/a&gt;, I modified it to work with the way ASP.NET MVC handles their nested/complex objects on the same form. All you have to do is modify the validate piece to this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;validate&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-regexp&quot;&gt;/^[a-zA-Z][a-zA-Z0-9_]*((?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*(?:\\.)[a-zA-Z][a-zA-Z0-9_]*)*$/&lt;/span&gt;,\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will match and then correctly map elements with names like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;zooName&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;zooAnimals[0].name&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There is a plugin to do just that for jQuery, &lt;em&gt;&lt;a href=&quot;https://github.com/marioizquierdo/jquery.serializeJSON&quot; rel=&quot;nofollow&quot;&gt;jquery.serializeJSON&lt;/a&gt;&lt;/em&gt;. I have used it successfully on a few projects now. It works like a charm. &lt;/p&gt;\n    ","\n&lt;p&gt;the simplest and most accurate way i found for this problem was to use &lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot; rel=&quot;nofollow noreferrer&quot;&gt;bbq plugin&lt;/a&gt; or this &lt;a href=&quot;https://github.com/chrissrogers/jquery-deparam&quot; rel=&quot;nofollow noreferrer&quot;&gt;one&lt;/a&gt; (which is about 0.5K bytes size).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;it also works with multi dimensional arrays.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.fn.&lt;span class=&quot;hljs-property&quot;&gt;serializeObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n\t&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $.&lt;span class=&quot;hljs-title function_&quot;&gt;deparam&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;serialize&lt;/span&gt;());\n};&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Another answer&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DOMContentLoaded&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; form = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;) || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form[name=&quot;userprofile&quot;]&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; json = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FormData&lt;/span&gt;(form)).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e,i&lt;/span&gt;) {&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[e[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]=e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;}.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;({}))[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    \n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(json)\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#asJSON&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(json);\n  }, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n})&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;userprofile&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Name &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Family name &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastname&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Smith&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Work &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;employment[name]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inc, Inc.&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Works since &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;employment[since]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2017&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Photo &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Send &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\nJSON: &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;textarea&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;asJSON&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;textarea&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;FormData: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FormData&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/FormData&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I prefer this approach because: you don&apos;t have to iterate over 2 collections, you can get at things other than &quot;name&quot; and &quot;value&quot; if you need to, and you can sanitize your values before you store them in the object (if you have default values that you don&apos;t wish to store, for example).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.formObject = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;$o&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {},\n        real_value = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;$field&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; val = $field.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;() || &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// additional cleaning here, if needed&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val;\n        };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; o != &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n        $o = $(o);\n    }\n\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;:input[name]&quot;&lt;/span&gt;, $o).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i, field&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $field = $(field),\n            name = $field.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;),\n            value = &lt;span class=&quot;hljs-title function_&quot;&gt;real_value&lt;/span&gt;($field);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (o[name]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!$.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(o[name])) {\n                o[name] = [o[name]];\n            }\n\n            o[name].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            o[name] = value;\n        }\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use like so:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;formObject&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#someForm&quot;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Only tested in Firefox.&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s a one-liner using &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot; rel=&quot;nofollow noreferrer&quot;&gt;reduce&lt;/a&gt;&lt;/strong&gt;.  Reduce is a functional function that takes the return value of the passed function and passes it back to the passed function in the next iteration, along with the nth value from the list.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#formid&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o,p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({...o, [p.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]: p.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;}))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We have to use a few of tricks to get this to work:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;...o&lt;/code&gt; (spread syntax) inserts all the &lt;code&gt;key: value&lt;/code&gt; pairs from &lt;code&gt;o&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Wrap the object we are returning in &lt;code&gt;()&lt;/code&gt; to distinguish it from the &lt;code&gt;{}&lt;/code&gt; that denote a function&lt;/li&gt;\n&lt;li&gt;Wrap the key (&lt;code&gt;p.name&lt;/code&gt;) in &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Taking advantage of ES6 goodness in a one liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;serializeArray&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o, {name: n, value: v}&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(o, { [n]: v }), {});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I like samuels version, but I believe it has a small error. Normally JSON is sent as&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;{&quot;coreSKU&quot;:&quot;PCGUYJS&quot;,&quot;name_de&quot;:&quot;whatever&quot;,...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;NOT as&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;[{&quot;coreSKU&quot;:&quot;PCGUYJS&quot;},{&quot;name_de&quot;:&quot;whatever&quot;},...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;so the function IMO should read:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;App&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toJson&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; selector &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;( $( selector ), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; n,i &lt;/span&gt;)\n    {\n        o[n.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;] = $(n).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n    });     \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and to wrap it in data array (as commonly expected, too), and finally send it as astring\nApp.stringify( {data:App.toJson( &apos;#cropform :input&apos; )} )&lt;/p&gt;\n\n&lt;p&gt;For the stringify look at &lt;a href=&quot;https://stackoverflow.com/questions/3593046&quot;&gt;Question 3593046&lt;/a&gt; for the lean version, at &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;json2.js&lt;/a&gt; for the every-eventuality-covered version. That should cover it all :)&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Turn anything into an object (not unit tested)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;\nstring = {};\n\nstring.&lt;span class=&quot;hljs-property&quot;&gt;repeat&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;string, count&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(count+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(string);\n}\n\nstring.&lt;span class=&quot;hljs-property&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;string&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; results = string.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[i], &lt;span class=&quot;hljs-string&quot;&gt;&apos;g&apos;&lt;/span&gt;));\n        count += results ? results.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; count;\n}\n\narray = {};\n\narray.&lt;span class=&quot;hljs-property&quot;&gt;merge&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr1, arr2&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; arr2)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr1[i] &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; arr1[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; arr2[i] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;)\n            arr1[i] = array.&lt;span class=&quot;hljs-title function_&quot;&gt;merge&lt;/span&gt;(arr1[i], arr2[i]);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            arr1[i] = arr2[i]\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr1;\n}\n\narray.&lt;span class=&quot;hljs-property&quot;&gt;print&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [];\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(obj, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, val&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; next = key + &lt;span class=&quot;hljs-string&quot;&gt;&quot;: &quot;&lt;/span&gt;;\n        next += $.&lt;span class=&quot;hljs-title function_&quot;&gt;isPlainObject&lt;/span&gt;(val) ? array.&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(val) : val;\n        arr.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;( next );\n      });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;{ &quot;&lt;/span&gt; +  arr.&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;, &quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&quot; }&quot;&lt;/span&gt;;\n}\n\nnode = {};\n\nnode.&lt;span class=&quot;hljs-property&quot;&gt;objectify&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;node, params&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params)\n        params = {};\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params.&lt;span class=&quot;hljs-property&quot;&gt;selector&lt;/span&gt;)\n        params.&lt;span class=&quot;hljs-property&quot;&gt;selector&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;)\n        params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!params.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;)\n        params.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; indexes = {};\n\n    $(node).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(params.&lt;span class=&quot;hljs-property&quot;&gt;selector&lt;/span&gt;+&lt;span class=&quot;hljs-string&quot;&gt;&quot;[&quot;&lt;/span&gt;+params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;+&lt;span class=&quot;hljs-string&quot;&gt;&quot;]&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(params.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;),\n            value = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(params.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = $.&lt;span class=&quot;hljs-title function_&quot;&gt;parseJSON&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{&quot;&lt;/span&gt;+name.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/([^\\[]*)/&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;;\n        }).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\[(.*?)\\]/gi&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n            {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n                indexes[index] = indexes[index] !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; ? indexes[index]+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;:{&quot;&apos;&lt;/span&gt;+indexes[index]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;:{&quot;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-built_in&quot;&gt;escape&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;;\n        })+&lt;span class=&quot;hljs-string&quot;&gt;&apos;:&quot;&apos;&lt;/span&gt;+value.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\\\&quot;]/gi&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\&quot;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]; \n        })+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;+string.&lt;span class=&quot;hljs-title function_&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;}&apos;&lt;/span&gt;, string.&lt;span class=&quot;hljs-title function_&quot;&gt;count&lt;/span&gt;(name, &lt;span class=&quot;hljs-string&quot;&gt;&apos;]&apos;&lt;/span&gt;))+&lt;span class=&quot;hljs-string&quot;&gt;&quot;}&quot;&lt;/span&gt;);\n\n        o = array.&lt;span class=&quot;hljs-title function_&quot;&gt;merge&lt;/span&gt;(o, obj);\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n}\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The output of test:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(node.&lt;span class=&quot;hljs-title function_&quot;&gt;objectify&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;), {})));\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;(node.&lt;span class=&quot;hljs-title function_&quot;&gt;objectify&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;form&quot;&lt;/span&gt;), {&lt;span class=&quot;hljs-attr&quot;&gt;selector&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;select&quot;&lt;/span&gt;})));\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;on&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[a]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[b]&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;select&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[c][a]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[c][]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[d][b]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherinput[c][]&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;anotherinput&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;anotherinput&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;submit&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;submit&apos;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will yield:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{ &lt;span class=&quot;hljs-attr&quot;&gt;input&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: text, &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: select }, &lt;span class=&quot;hljs-attr&quot;&gt;otherinput&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: a, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;: b, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;: d }, &lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: c } }, &lt;span class=&quot;hljs-attr&quot;&gt;anotherinput&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; }\n{ &lt;span class=&quot;hljs-attr&quot;&gt;input&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: select } }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For a quick, modern solution, use the &lt;a href=&quot;https://github.com/kushalpandya/JSONify&quot; rel=&quot;nofollow&quot;&gt;JSONify&lt;/a&gt; jQuery plugin. The example below is taken verbatim from the GitHub README. All credit to Kushal Pandya, author of the plugin.&lt;/p&gt;\n\n&lt;p&gt;Given:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myform&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Name:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Email&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;Password&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;jsonify&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Produces:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Joe User&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;email&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;joe@example.com&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mypass&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to do a jQuery POST with this JSON object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#mybutton&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;post&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/api/user&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myform&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;jsonify&lt;/span&gt;()));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I found a problem with the selected solution.&lt;/p&gt;\n\n&lt;p&gt;When using forms that have array based names the jQuery serializeArray() function actually dies.&lt;/p&gt;\n\n&lt;p&gt;I have a PHP framework that uses array-based field names to allow for the same form to be put onto the same page multiple times in multiple views. This can be handy to put both add, edit and delete on the same page without conflicting form models.&lt;/p&gt;\n\n&lt;p&gt;Since I wanted to seralize the forms without having to take this absolute base functionality out I decided to write my own seralizeArray():&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $vals = {};\n\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#video_edit_form input&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/editSingleForm\\[/i&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n\n            name = name.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\]/i&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;)){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;:\n                    $vals[name] = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;:\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;)){\n                        $vals[name] = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n                    }\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;radio&quot;&lt;/span&gt;:\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;checked&quot;&lt;/span&gt;)){\n                        $vals[name] = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n                    }\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;:\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            }\n        });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Please note: This also works outside of form submit() so if an error occurs in the rest of your code the form won&apos;t submit if you place on a link button saying &quot;save changes&quot;.&lt;/p&gt;\n\n&lt;p&gt;Also note that this function should never be used to validate the form only to gather the data to send to the server-side for validation. Using such weak and mass-assigned code WILL cause &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_scripting&quot; rel=&quot;nofollow&quot;&gt;XSS&lt;/a&gt;, etc.&lt;/p&gt;\n    "],"458":["\n&lt;p&gt;I don&apos;t believe SQL Server has a built-in split function, so other than a UDF, the only other answer I know is to hijack the PARSENAME function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; PARSENAME(REPLACE(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;PARSENAME takes a string and splits it on the period character.  It takes a number as its second argument, and that number specifies which segment of the string to return (working from back to front).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; PARSENAME(REPLACE(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot;&gt;--return Hello&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Obvious problem is when the string already contains a period.  I still think using a UDF is the best way...any other suggestions?&lt;/p&gt;\n    ","\n&lt;p&gt;You may find the solution in &lt;em&gt;&lt;a href=&quot;http://www.codeproject.com/KB/database/SQL_UDF_to_Parse_a_String.aspx&quot; rel=&quot;noreferrer&quot;&gt;SQL User Defined Function to Parse a Delimited String&lt;/a&gt;&lt;/em&gt; helpful (from &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Code_Project&quot; rel=&quot;noreferrer&quot;&gt;The Code Project&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;You can use this simple logic:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;1|20|3|343|44|6|8765&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n\nWHILE LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    IF PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%|%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;,\n                                    &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n                                    PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%|%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;,\n                                  LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n                                  LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;First, create a function (using CTE, common table expression does away with the need for a temp table) &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; dbo.SplitString \n    (\n        &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt;), \n        &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; tokens(p, a, b) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n            &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n                &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n                p &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n            &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n        )\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n            p&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; zeroBasedOccurance,\n            &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n                &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, \n                a, \n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; b&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; s\n        &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n      )\n    GO\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, use it as any table (or modify it to fit within your existing stored proc) like this. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; s \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; zeroBasedOccurance&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Previous version would fail for input string longer than 4000 chars. This version takes care of the limitation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; dbo.SplitString \n(\n    &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; nvarchar(max), \n    &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n&lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; tokens(p, a, b) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;), \n        &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;), \n        charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n        p &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n    &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n    p&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; ItemIndex,\n    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n        &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, \n        a, \n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; b&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) \n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; s\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n);\n\nGO\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage remains the same.&lt;/p&gt;\n    ","\n&lt;p&gt;Most of the solutions here use while loops or recursive CTEs. A set-based approach will be superior, I promise, if you can use a delimiter other than a space:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[SplitString]\n    (\n        &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; NVARCHAR(MAX),\n        &lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;)\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt; ( &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;], idx &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;RANK&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; n) &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n          ( \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; n &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Number, \n              [&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LTRIM(RTRIM(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;, [Number],\n              CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;, [Number]) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; [Number])))\n            &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Number &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name)\n              &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; sys.all_objects) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; x\n              &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; Number &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;)\n              &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;, [Number], LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;)) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;\n          ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; y\n        );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Sample usage:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; dbo.SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo,bar,blat,foo,splunge&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; idx &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Results:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----&lt;/span&gt;\nblat\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You could also add the &lt;code&gt;idx&lt;/code&gt; you want as an argument to the function, but I&apos;ll leave that as an exercise to the reader.&lt;/p&gt;\n&lt;p&gt;You can&apos;t do this with &lt;em&gt;just&lt;/em&gt; the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;native &lt;code&gt;STRING_SPLIT&lt;/code&gt; function&lt;/a&gt; added in SQL Server 2016, because there is no guarantee that the output will be rendered in the order of the original list. In other words, if you pass in &lt;code&gt;3,6,1&lt;/code&gt; the result will likely be in that order, but it &lt;em&gt;could&lt;/em&gt; be &lt;code&gt;1,3,6&lt;/code&gt;. I have asked for the community&apos;s help in improving the built-in function here:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2020/03/t-sql-queries/please-help-string-split-improvements&quot; rel=&quot;nofollow noreferrer&quot;&gt;Please help with STRING_SPLIT improvements\n&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;With enough &lt;em&gt;qualitative&lt;/em&gt; feedback, they may actually consider making some of these enhancements:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://feedback.azure.com/d365community/idea/5eaf994d-4025-ec11-b6e6-000d3a4f0da0&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT is not feature complete&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;More on split functions, why (and proof that) while loops and recursive CTEs don&apos;t scale, and better alternatives, if splitting strings coming from the application layer:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.sqlperformance.com/2012/07/t-sql-queries/split-strings&quot; rel=&quot;nofollow noreferrer&quot;&gt;Split strings the right way  or the next best way&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2012/08/t-sql-queries/splitting-strings-follow-up&quot; rel=&quot;nofollow noreferrer&quot;&gt;Splitting Strings : A Follow-Up&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.sqlperformance.com/2012/08/t-sql-queries/splitting-strings-now-with-less-t-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;Splitting Strings : Now with less T-SQL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/01/t-sql-queries/comparing-splitting-concat&quot; rel=&quot;nofollow noreferrer&quot;&gt;Comparing string splitting / concatenation methods&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlblog.org/2009/08/01/processing-a-list-of-integers-my-approach&quot; rel=&quot;nofollow noreferrer&quot;&gt;Processing a list of integers : my approach&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlblog.org/2010/07/07/splitting-a-list-of-integers-another-roundup&quot; rel=&quot;nofollow noreferrer&quot;&gt;Splitting a list of integers : another roundup&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlblog.org/2009/08/06/more-on-splitting-lists-custom-delimiters-preventing-duplicates-and-maintaining-order&quot; rel=&quot;nofollow noreferrer&quot;&gt;More on splitting lists : custom delimiters, preventing duplicates, and maintaining order&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.mssqltips.com/sqlservertip/4140/removing-duplicates-from-strings-in-sql-server/?utm_source=AaronBertrand&quot; rel=&quot;nofollow noreferrer&quot;&gt;Removing Duplicates from Strings in SQL Server&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;On SQL Server 2016 or above, though, you should look at &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;STRING_SPLIT()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-agg-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;STRING_AGG()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/03/sql-server-2016/string-split&quot; rel=&quot;nofollow noreferrer&quot;&gt;Performance Surprises and Assumptions : STRING_SPLIT()&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/04/sql-server-2016/string-split-follow-up-1&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT() in SQL Server 2016 : Follow-Up #1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/04/sql-server-2016/string-split-follow-up-2&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT() in SQL Server 2016 : Follow-Up #2&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/12/sql-performance/sql-server-v-next-string_agg-performance&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL Server v.Next : STRING_AGG() performance&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.mssqltips.com/sqlservertip/5275/solve-old-problems-with-sql-servers-new-stringagg-and-stringsplit-functions/?utm_source=AaronBertrand&quot; rel=&quot;nofollow noreferrer&quot;&gt;Solve old problems with SQL Servers new STRING_AGG and STRING_SPLIT functions&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;You can leverage a Number table to do the string parsing. &lt;/p&gt;\n\n&lt;p&gt;Create a physical numbers table:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; dbo.Numbers (N &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;primary&lt;/span&gt; key);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; dbo.Numbers\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; top &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; number) &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; master..spt_values\n    go\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Create test table with 1000000 rows&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; #yak (i &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;identity&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;primary&lt;/span&gt; key, &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;))\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; #yak(&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;a,b,c&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.Numbers n &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; dbo.Numbers nn\n    go\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Create the function&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [dbo].[ufn_ParseArray]\n        (   &lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;      nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt;), \n            &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;  &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-variable&quot;&gt;@BaseIdent&lt;/span&gt;  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n        )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;  \n        (   &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;  &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; n &lt;span class=&quot;hljs-keyword&quot;&gt;asc&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@BaseIdent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) [i],\n                    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;, n, charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, n) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; n) s\n            &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;    dbo.Numbers\n            &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;   n &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;convert&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;, len(&lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt;\n                    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;, n, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;\n        )\n    go\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage (outputs 3mil rows in 40s on my laptop)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; #yak \n    &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; apply dbo.ufn_ParseArray(&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;cleanup&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; dbo.Numbers;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;  [dbo].[ufn_ParseArray]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Performance here is not amazing, but calling a function over a million row table is not the best idea. If performing a string split over many rows I would avoid the function. &lt;/p&gt;\n    ","\n&lt;p&gt;This question is &lt;strong&gt;not about a string split approach&lt;/strong&gt;, but about &lt;strong&gt;how to get the nth element&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;All answers here are doing some kind of string splitting using recursion, &lt;code&gt;CTE&lt;/code&gt;s, multiple &lt;code&gt;CHARINDEX&lt;/code&gt;, &lt;code&gt;REVERSE&lt;/code&gt; and &lt;code&gt;PATINDEX&lt;/code&gt;, inventing functions, call for CLR methods, number tables, &lt;code&gt;CROSS APPLY&lt;/code&gt;s ... Most answers cover many lines of code.&lt;/p&gt;\n&lt;p&gt;But - if you really &lt;strong&gt;want nothing more than an approach to get the nth element&lt;/strong&gt; - this can be done as &lt;strong&gt;real one-liner&lt;/strong&gt;, no UDF, not even a sub-select... And as an extra benefit: &lt;strong&gt;type safe&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Get part 2 delimited by a space:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt; NVARCHAR(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos;part1 part2 part3&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; XML).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[2]&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Of course &lt;strong&gt;you can use variables&lt;/strong&gt; for delimiter and position (use &lt;code&gt;sql:column&lt;/code&gt; to retrieve the position directly from a query&apos;s value):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt; NVARCHAR(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; XML).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[sql:variable(&quot;@pos&quot;)][1]&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If your string might include &lt;strong&gt;forbidden characters&lt;/strong&gt; (especially one among &lt;code&gt;&amp;amp;&amp;gt;&amp;lt;&lt;/code&gt;), you still can do it this way. Just use &lt;code&gt;FOR XML PATH&lt;/code&gt; on your string first to replace all forbidden characters with the fitting escape sequence implicitly.&lt;/p&gt;\n&lt;p&gt;It&apos;s a very special case if - additionally - &lt;strong&gt;your delimiter is the semicolon&lt;/strong&gt;. In this case I replace the delimiter first to &apos;#DLMT#&apos;, and replace this to the XML tags finally:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos;Some &amp;lt;, &amp;gt; and &amp;amp;;Other äöü@;One more&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;#DLMT#&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)),N&lt;span class=&quot;hljs-string&quot;&gt;&apos;#DLMT#&apos;&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; XML).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[sql:variable(&quot;@pos&quot;)][1]&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;UPDATE for SQL-Server 2016+&lt;/h2&gt;\n&lt;p&gt;Regretfully the developers forgot to return the part&apos;s index with &lt;code&gt;STRING_SPLIT&lt;/code&gt;. But, using SQL-Server 2016+, there is &lt;code&gt;JSON_VALUE&lt;/code&gt; and &lt;code&gt;OPENJSON&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;With &lt;code&gt;JSON_VALUE&lt;/code&gt; we can pass in the position as the index&apos; array.&lt;/p&gt;\n&lt;p&gt;For &lt;code&gt;OPENJSON&lt;/code&gt; the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/openjson-transact-sql?view=sql-server-2017&quot; rel=&quot;noreferrer&quot;&gt;documentation&lt;/a&gt; states clearly:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;When OPENJSON parses a JSON array, the function returns the indexes of the elements in the JSON text as keys.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;A string like &lt;code&gt;1,2,3&lt;/code&gt; needs nothing more than brackets: &lt;code&gt;[1,2,3]&lt;/code&gt;.&lt;br&gt;\nA string of words like &lt;code&gt;this is an example&lt;/code&gt; needs to be &lt;code&gt;[&quot;this&quot;,&quot;is&quot;,&quot;an&quot;,&quot;example&quot;]&lt;/code&gt;.&lt;br&gt;\nThese are very easy string operations. Just try it out:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;--We can build the json-path &apos;$[1]&apos; using CONCAT&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;JSON_VALUE&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&quot;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;,&quot;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;]&apos;&lt;/span&gt;,CONCAT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;$[&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;]&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;--See this for a position safe string-splitter (&lt;em&gt;zero-based&lt;/em&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  JsonArray.[key] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Position]\n       ,JsonArray.[&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Part]\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; OPENJSON(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&quot;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;,&quot;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;]&apos;&lt;/span&gt;) JsonArray\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In &lt;a href=&quot;https://stackoverflow.com/a/56617711/5089204&quot;&gt;this post&lt;/a&gt; I tested various approaches and found, that &lt;code&gt;OPENJSON&lt;/code&gt; is really fast. Even much faster than the famous &quot;delimitedSplit8k()&quot; method...&lt;/p&gt;\n&lt;h2&gt;UPDATE 2 - Get the values type-safe&lt;/h2&gt;\n&lt;p&gt;We can use an &lt;em&gt;array within an array&lt;/em&gt; simply by using doubled &lt;code&gt;[[]]&lt;/code&gt;. This allows for a typed &lt;code&gt;WITH&lt;/code&gt;-clause:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt;  &lt;span class=&quot;hljs-variable&quot;&gt;@SomeDelimitedString&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;part1|1|20190920&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@JsonArray&lt;/span&gt; NVARCHAR(MAX)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;CONCAT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[[&quot;&apos;&lt;/span&gt;,REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@SomeDelimitedString&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;,&quot;&apos;&lt;/span&gt;),&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;]]&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SomeDelimitedString&lt;/span&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; TheOriginal\n      ,&lt;span class=&quot;hljs-variable&quot;&gt;@JsonArray&lt;/span&gt;                    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; TransformedToJSON\n      ,ValuesFromTheArray.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; OPENJSON(&lt;span class=&quot;hljs-variable&quot;&gt;@JsonArray&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt;(TheFirstFragment  &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;hljs-string&quot;&gt;&apos;$[0]&apos;&lt;/span&gt;\n    ,TheSecondFragment &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;          &lt;span class=&quot;hljs-string&quot;&gt;&apos;$[1]&apos;&lt;/span&gt;\n    ,TheThirdFragment  &lt;span class=&quot;hljs-type&quot;&gt;DATE&lt;/span&gt;         &lt;span class=&quot;hljs-string&quot;&gt;&apos;$[2]&apos;&lt;/span&gt;) ValuesFromTheArray\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a UDF which will do it.  It will return a table of the delimited values, haven&apos;t tried all scenarios on it but your example works fine.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; SplitString \n(\n    &lt;span class=&quot;hljs-comment&quot;&gt;-- Add the parameters for the function here&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; \n&lt;span class=&quot;hljs-variable&quot;&gt;@ReturnTable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-comment&quot;&gt;-- Add the column definitions for the TABLE variable here&lt;/span&gt;\n    [id] [&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n    [part] [&lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;](&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@part&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;--initialize spaces&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        While &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Begin&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@part&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@ReturnTable&lt;/span&gt;(part)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@part&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@mystring&lt;/span&gt;,charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; len(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;),len(&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\n\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n\n        If len(&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@ReturnTable&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\nGO\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You would call it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;From&lt;/span&gt; SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:  Updated solution to handle delimters with a len&amp;gt;1 as in :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;From&lt;/span&gt; SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello**John**Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;**&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here I post a simple way of solution&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[split](\n          &lt;span class=&quot;hljs-variable&quot;&gt;@delimited&lt;/span&gt; NVARCHAR(MAX),\n          &lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt; NVARCHAR(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)\n        ) &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), val NVARCHAR(MAX))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@xml&lt;/span&gt; XML\n          &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@xml&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;t&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@delimited&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/t&amp;gt;&amp;lt;t&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/t&amp;gt;&apos;&lt;/span&gt;\n\n          &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt;(val)\n          &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  r.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(MAX)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; item\n          &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;  &lt;span class=&quot;hljs-variable&quot;&gt;@xml&lt;/span&gt;.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/t&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; records(r)\n          &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;br&gt;\n    Execute the function like this&lt;br&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.split(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In my opinion you guys are making it way too complicated. Just create a CLR UDF and be done with it.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;System&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data.SqlClient;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data.SqlTypes;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; Microsoft.SqlServer.Server;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Collections.Generic;\n\npublic partial class UserDefinedFunctions {\n  [SqlFunction]\n  public &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; SqlString SearchString(string &lt;span class=&quot;hljs-keyword&quot;&gt;Search&lt;/span&gt;) {\n    List&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;string&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; SearchWords &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; List&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;string&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;();\n    foreach (string s &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; Search.Split(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;[] { &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; })) {\n      if (&lt;span class=&quot;hljs-operator&quot;&gt;!&lt;/span&gt;s.ToLower().&lt;span class=&quot;hljs-keyword&quot;&gt;Equals&lt;/span&gt;(&quot;or&quot;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;!&lt;/span&gt;s.ToLower().&lt;span class=&quot;hljs-keyword&quot;&gt;Equals&lt;/span&gt;(&quot;and&quot;)) {\n        SearchWords.Add(s);\n      }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SqlString(string.Join(&quot; OR &quot;, SearchWords.ToArray()));\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;What about using &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; statement?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt;(id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), item &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;),(&apos;&apos;&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT * FROM (VALUES(&apos;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;)) AS V(A)&apos;&lt;/span&gt; \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXEC&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result-set achieved.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id  item\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Hello\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   John\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   Smith\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use the answer of frederic but this did not work in SQL Server 2005&lt;/p&gt;\n\n&lt;p&gt;I modified it and I&apos;m using &lt;code&gt;select&lt;/code&gt; with &lt;code&gt;union all&lt;/code&gt; and it works&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith how are you&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;(id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), item &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos; UNION ALL SELECT &apos;&apos;&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; SELECT  &apos;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;  &apos;&lt;/span&gt; \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXEC&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the result-set is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id  item\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Hello\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   John\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   Smith\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;   how\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;are&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   you\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This pattern works fine and you can generalize&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Convert&lt;/span&gt;(xml,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;Replace(FIELD,&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[INDEX])&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;TYPE&apos;&lt;/span&gt;)\n                          &lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;                                   &lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;note &lt;strong&gt;FIELD&lt;/strong&gt;, &lt;strong&gt;INDEX&lt;/strong&gt; and &lt;strong&gt;TYPE&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Let some table with identifiers like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;sys.message&lt;span class=&quot;hljs-number&quot;&gt;.1234&lt;/span&gt;.warning.A45\nsys.message&lt;span class=&quot;hljs-number&quot;&gt;.1235&lt;/span&gt;.error.O98\n....\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, you can write&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Source         &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[1])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(10)&apos;&lt;/span&gt;),\n       RecordType     &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[2])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(20)&apos;&lt;/span&gt;),\n       RecordNumber   &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[3])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;int&apos;&lt;/span&gt;),\n       Status         &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[4])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(5)&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   (\n         &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;   q &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Convert&lt;/span&gt;(xml,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;Replace(fieldName,&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&apos;&lt;/span&gt;)\n         &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;     some_TABLE\n       ) Q\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;splitting and casting all parts.&lt;/p&gt;\n    ","\n&lt;p&gt;Yet another get n&apos;th part of string by delimeter function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; GetStringPartByDelimeter (\n    &lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; nvarchar(max),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@delimeter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; nvarchar(max),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n) &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; NVARCHAR(MAX) \n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;\n    while (&lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@delimeter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt;)\n\n        if(&lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n            if(&lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; len(&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and the usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; dbo.GetStringPartByDelimeter (&lt;span class=&quot;hljs-string&quot;&gt;&apos;a;b;c;d;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which returns:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;c\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If your database has compatibility level of 130 or higher then you can use the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT&lt;/a&gt; function along with &lt;a href=&quot;https://technet.microsoft.com/en-us/library/gg699618(v=sql.110).aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;OFFSET FETCH&lt;/a&gt; clauses to get the specific item by index.&lt;/p&gt;\n\n&lt;p&gt;To get the item at &lt;strong&gt;index N&lt;/strong&gt; (zero based), you can use the following code&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; STRING_SPLIT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;OFFSET&lt;/span&gt; N &lt;span class=&quot;hljs-keyword&quot;&gt;ROWS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FETCH&lt;/span&gt; NEXT &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ROWS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ONLY&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To check the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/relational-databases/databases/view-or-change-the-compatibility-level-of-a-database&quot; rel=&quot;nofollow noreferrer&quot;&gt;compatibility level of your database&lt;/a&gt;, execute this code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; compatibility_level  \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; sys.databases &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;YourDBName&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [SplitWordList]\n(\n &lt;span class=&quot;hljs-variable&quot;&gt;@list&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; \n(\n Word &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,\n Position &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;identity&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; \n    &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@lpos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@ignore&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@dl&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a2&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z2&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n2&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;smallint&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n    &lt;span class=&quot;hljs-variable&quot;&gt;@a1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;z&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Z&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;9&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@ignore&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;&quot;&apos;&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dl&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; datalength(&lt;span class=&quot;hljs-variable&quot;&gt;@list&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@lpos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n  while (&lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dl&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@list&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    if (&lt;span class=&quot;hljs-variable&quot;&gt;@ignore&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt;)\n      if ((&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@a1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@z1&lt;/span&gt;))  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@a2&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@z2&lt;/span&gt;))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@n1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@n2&lt;/span&gt;))\n      &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; if (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n  if (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Test it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; SplitWordList(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I was looking for the solution on net and the below works for me.\n&lt;a href=&quot;http://code.developwithus.com/topics/database/mssql/&quot; rel=&quot;nofollow&quot;&gt;Ref&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;And you call the function like this :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; dbo.split(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ram shyam hari gopal&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; ANSI_NULLS &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;\nGO\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; QUOTED_IDENTIFIER &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;\nGO\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[Split](&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;), &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))       \n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@temptable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (items &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;))       \n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;       \n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;)        \n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;       \n    IF len(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;       \n    WHILE &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;       \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;)       \n        IF &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;       \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)       \n        &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt;       \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;       \n        IF(len(&lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)  \n            &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@temptable&lt;/span&gt;(Items) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt;)       \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;,len(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt;)       \n        IF len(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; break       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;   \n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;       \n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The following example uses a recursive CTE&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; 18.09.2013&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; dbo.SplitStrings_CTE(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; nvarchar(max), &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (val nvarchar(max), [level] &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY CLUSTERED([level]))\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; cte &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;,  &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val,\n         &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(STUFF(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; nvarchar(max)) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; stval, \n         &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [level]\n  &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(stval, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, stval)),\n         &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(STUFF(stval, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, stval), &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; nvarchar(max)),\n         [level] &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; stval &lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n  )\n  &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@returns&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; REPLACE(val, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val, [level]\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; val &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo on &lt;a href=&quot;http://sqlfiddle.com/#!3/c43e0/1&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SQLFiddle&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Alter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; dbo.fn_Split\n    (\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; nvarchar(max),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;  nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt;  &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Null&lt;/span&gt;\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Results&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; nvarchar(max))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n       &lt;span class=&quot;hljs-comment&quot;&gt;/* USAGE\n            Select * From dbo.fn_Split(&apos;apple pear grape banana orange honeydew cantalope 3 2 1 4&apos;, &apos; &apos;, Null)\n            Select * From dbo.fn_Split(&apos;1,abc,&quot;Doe, John&quot;,4&apos;, &apos;,&apos;, &apos;&quot;&apos;)\n            Select * From dbo.fn_Split(&apos;Hello 0,&quot;&amp;amp;&quot;&quot;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&apos;, &apos;,&apos;, &apos;&quot;&apos;)\n       */&lt;/span&gt;\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Declare Variables&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt;\n          &lt;span class=&quot;hljs-variable&quot;&gt;@X&lt;/span&gt;     xml,\n          &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt;  nvarchar(max),\n          &lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt; nvarchar(max),\n          &lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n          &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt;   &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- HTML Encode @Expression&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;For&lt;/span&gt; XML Path(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;))\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Find all occurences of @Delimiter within @Qualifier and replace with |||***|||&lt;/span&gt;\n       While PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; Len(IsNull(&lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt;\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- Starting character position of @Qualifier&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;),\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- @Expression starting at the @Start position&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SubString&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- Next position of @Qualifier within @Expression&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- The part of Expression found between the @Qualifiers&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Left&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;,\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- New @Expression&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;,\n                                   &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;,\n                                   Replace(&lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;|||***|||&apos;&lt;/span&gt;)\n                           )\n       &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Replace all occurences of @Delimiter within @Expression with &apos;&amp;lt;/fn_Split&amp;gt;&amp;lt;fn_Split&amp;gt;&apos;&lt;/span&gt;\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- And convert it to XML so we can select from it&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt;\n          &lt;span class=&quot;hljs-variable&quot;&gt;@X&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Cast&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;fn_Split&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;\n                    Replace(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/fn_Split&amp;gt;&amp;lt;fn_Split&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;\n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/fn_Split&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; xml)\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Insert into our returnable table replacing &apos;|||***|||&apos; back to @Delimiter&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Results&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n          &quot;Value&quot; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LTRIM(RTrim(Replace(C.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;|||***|||&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;)))\n       &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n          &lt;span class=&quot;hljs-variable&quot;&gt;@X&lt;/span&gt;.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fn_Split&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; X(C)\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Return our temp table&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can split a string in SQL without needing a function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(MAX)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;BED40DFC-F468-46DD-8017-00EF2FA3E4A4,64B59FC5-3F4D-4B0E-9A48-01F3D4F220B0,A611A108-97CA-42F3-A2E1-057165339719,E72D95EA-578F-45FC-88E5-075F66FD726C&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- http://stackoverflow.com/questions/14712864/how-to-query-values-from-xml-nodes&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    x.XmlCol.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(36)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&amp;lt;e&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; xml) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; RawXml\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b \n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY b.RawXml.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;) x(XmlCol);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you need to support arbitrary strings (with xml special characters)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; NVARCHAR(MAX)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;html&amp;gt;unsafe &amp;amp; safe Utf8CharsDon&apos;&apos;tGetEncoded ÄöÜ - &quot;Conex&quot;&amp;lt;html&amp;gt;,Barnes &amp;amp; Noble,abc,def,ghi&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- http://stackoverflow.com/questions/14712864/how-to-query-values-from-xml-nodes&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    x.XmlCol.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(MAX)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)), &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&amp;lt;e&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; xml) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; RawXml\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b \n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY b.RawXml.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;) x(XmlCol); \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know it&apos;s an old Question, but i think some one can benefit from my solution.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;)\n,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name))\n    ,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    ,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name)),&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;)\n,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name))\n    ,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name)),&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    ,LEN(column_name))\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; table_name\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!3/776f3/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL FIDDLE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It separates all the 3 sub-strings deliminator by &apos; &apos;.&lt;/li&gt;\n&lt;li&gt;One must not use while loop, as it decreases the performance.&lt;/li&gt;\n&lt;li&gt;No need to Pivot as all the resultant sub-string will be displayed in\none Row&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Limitations:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;One must know the total no. of spaces (sub-string).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the solution can give sub-string up to to N.&lt;/p&gt;\n\n&lt;p&gt;To overcame the limitation we can use the following &lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;ref&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;But again the above &lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;solution&lt;/strong&gt;&lt;/a&gt; can&apos;t be use in a table (Actaully i wasn&apos;t able to use it).&lt;/p&gt;\n\n&lt;p&gt;Again i hope this solution can help some-one.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; In case of Records &amp;gt; 50000 it is not &lt;strong&gt;advisable&lt;/strong&gt; to use &lt;strong&gt;&lt;code&gt;LOOPS&lt;/code&gt;&lt;/strong&gt; as it will degrade the &lt;strong&gt;Performance&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Pure set-based solution using &lt;code&gt;TVF&lt;/code&gt; with recursive &lt;code&gt;CTE&lt;/code&gt;. You can &lt;code&gt;JOIN&lt;/code&gt; and &lt;code&gt;APPLY&lt;/code&gt; this function to any dataset.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [dbo].[SplitStringToResultSet] (&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max), &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)) [x], &lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; rtrim(&lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max))) [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;]) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; j\n    &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;right&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, len(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; len(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;]\n    , &lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt;(r.[&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;], &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, r.value) &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; len(r.value) &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;abs&lt;/span&gt;(charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, r.[&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;])&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; ) [x]\n    , [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;] &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ltrim(x) [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;], [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;] [index] &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;\ngo\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; [dbo].[SplitStringToResultSet](&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; [index] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;   index\n&lt;span class=&quot;hljs-comment&quot;&gt;-------------&lt;/span&gt;\nJohn    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Almost all the other answers are replacing the string being split which wastes CPU cycles and performs unnecessary memory allocations.&lt;/p&gt;\n\n&lt;p&gt;I cover a much better way to do a string split here: &lt;a href=&quot;http://www.digitalruby.com/split-string-sql-server/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.digitalruby.com/split-string-sql-server/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here is the code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; NOCOUNT &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- You will want to change nvarchar(MAX) to nvarchar(50), varchar(50) or whatever matches exactly with the string column you will be searching against&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStringTable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt; nvarchar(MAX) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt; nvarchar(MAX) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;your|string|to|split|here&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt; nvarchar(MAX)\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitDelim&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@SplitDelim&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;)\n\nWHILE &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;, (&lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStringTable&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@SplitDelim&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStringTable&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; NOCOUNT OFF\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- You can select or join with the values in @SplitStringTable at this point.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In Azure SQL Database (based on Microsoft SQL Server but not exactly the same thing) the signature of &lt;code&gt;STRING_SPLIT&lt;/code&gt; function looks like:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;STRING_SPLIT ( string , separator [ , enable_ordinal ] )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;When &lt;code&gt;enable_ordinal&lt;/code&gt; flag is set to 1 the result will include a column named &lt;code&gt;ordinal&lt;/code&gt; that consists of the 1based position of the substring within the input string:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; STRING_SPLIT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ordinal &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------|---------|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; hello &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; john  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; smith &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This allows us to do this:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; STRING_SPLIT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; ordinal &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; john  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;If &lt;code&gt;enable_ordinal&lt;/code&gt; is not available then there is a trick &lt;em&gt;&lt;strong&gt;which assumes that the substrings with the input string are unique&lt;/strong&gt;&lt;/em&gt;. In this scenario, &lt;code&gt;CHAR_INDEX&lt;/code&gt; could be used to find the position of the substring within the input string:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, input_str)) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; ord_pos\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;\n    (&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;)\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; x(input_str)\n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY STRING_SPLIT(input_str, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ord_pos &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------+---------|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; hello &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; john  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; smith &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Recursive CTE solution with server pain, &lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1&quot; rel=&quot;nofollow&quot;&gt;test it&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;MS SQL Server 2008 Schema Setup&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; Course( Courses &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) );\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; Course &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Query 1&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; cte &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt;\n   ( &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt;( Courses, charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , Courses) ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_l,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;( &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;( Courses, \n                         charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , Courses) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , \n                         len(Courses ) ) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; \n              &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) )  &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_r,\n        Courses &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a,\n        &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; Course t\n    &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt;(a_r, charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , a_r) ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_l,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;( a_r, charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , a_r) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , len(a_R ) ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_r,\n        cte.a,\n        cte.n &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; Course t &lt;span class=&quot;hljs-keyword&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; cte \n         &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; t.Courses &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; cte.a &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; len( a_r ) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n   )\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; a_l, n &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; cte\n&lt;span class=&quot;hljs-comment&quot;&gt;--where N = 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1/0&quot; rel=&quot;nofollow&quot;&gt;Results&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;    A_L &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; N &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;--------|---|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Hello  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  John  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Smith  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;while similar to the xml based answer by josejuan, i found that processing the xml path only once, then pivoting was moderately more efficient:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvidingID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvider,\n    [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProvidingID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProviding,\n    [&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecievingID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecieving,\n    [&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; RowsPassed,\n    [&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecieving2\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;\n    (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; id,message,d.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; sysssislog &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; apply       ( \n          &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Item &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; y.i.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(./text())[1]&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(200)&apos;&lt;/span&gt;),\n              &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; y.i) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; rn\n          &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n          ( \n             &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; x &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;CONVERT&lt;/span&gt;(XML, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;i&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(Message, &lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/i&amp;gt;&amp;lt;i&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/i&amp;gt;&apos;&lt;/span&gt;).query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;)\n          ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a &lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY x.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;i&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; y(i)\n       ) d\n       &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; event\n       &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; \n       &lt;span class=&quot;hljs-string&quot;&gt;&apos;OnPipelineRowsSent&apos;&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tokens \n    pivot \n    ( &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(item) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; [rn] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; ([&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;]) \n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; data\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ran in 8:30&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; id,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[3])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvidingID,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[4])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvider,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[5])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProvidingID,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[6])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProviding,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[7])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecievingID,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[8])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecieving,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[9])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; RowsPassed\n &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;\n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; id, &lt;span class=&quot;hljs-keyword&quot;&gt;Convert&lt;/span&gt;(xml,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;Replace(message,&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&apos;&lt;/span&gt;) tokens\n         &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; sysssislog \n       &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; event\n       &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; \n       &lt;span class=&quot;hljs-string&quot;&gt;&apos;OnPipelineRowsSent&apos;&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; data\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ran in 9:20&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[fnSplitString] \n( \n    &lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt; NVARCHAR(MAX), \n    &lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) \n) \n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@output&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt;(splitdata NVARCHAR(MAX) \n) \n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;) \n    WHILE &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt; \n        IF &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@output&lt;/span&gt; (splitdata)  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt;)) \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt;)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;AND USE IT&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.fnSplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Querying SQL Server&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;if anyone wants to get only one part of the seperatured text can use this&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;select * from fromSplitStringSep(&apos;Word1 wordr2 word3&apos;,&apos; &apos;) &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [dbo].[SplitStringSep] \n(\n    &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt;), \n    &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; tokens(p, a, b) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n            p &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n            b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n            charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n        &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n        )\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n            p&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; zeroBasedOccurance,\n            &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n                &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, \n                a, \n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; b&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; s\n        &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n  )\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I devoloped this,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt; nvarchar(Max) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;ali.veli.deli.&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; nvarchar(Max);\n&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@splitter&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;;\n\nwhile CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@splitter&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;,CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@splitter&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;    &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;,len(&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;len(&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt;) )\n     &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; item, &lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; x;\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the only attention you should is dot &apos;.&apos; that end of the @x is always should be there.&lt;/p&gt;\n    ","\n&lt;p&gt;building on @NothingsImpossible solution, or, rather, comment on the most voted answer (just below the accepted one), i found the following &lt;strong&gt;quick-and-dirty&lt;/strong&gt; solution fulfill my own needs - it has a benefit of being solely within SQL domain.&lt;/p&gt;\n\n&lt;p&gt;given a string &quot;first;second;third;fourth;fifth&quot;, say, I want to get the third token. this works only if we know how many tokens the string is going to have - in this case it&apos;s 5. so my way of action is to chop the last two tokens away (inner query), and then to chop the first two tokens away (outer query)&lt;/p&gt;\n\n&lt;p&gt;i know that this is ugly and covers the specific conditions i was in, but am posting it just in case somebody finds it useful. cheers&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n    REVERSE(\n        &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(\n            reverse_substring, \n            &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, \n            CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;, reverse_substring)\n        )\n    ) \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        msg,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(\n            REVERSE(msg), \n            CHARINDEX(\n                &lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;, \n                REVERSE(msg), \n                CHARINDEX(\n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;,\n                    REVERSE(msg)\n                )&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n            )&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n            &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;\n        ) reverse_substring\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; \n    (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;first;second;third;fourth;fifth&apos;&lt;/span&gt; msg\n    ) a\n) b\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; (\n    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n        &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;,\n        charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n        (\n          (charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;, charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n          &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;)\n        )\n    ))\n&lt;/code&gt;&lt;/pre&gt;\n    "],"459":["\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;imgInp.&lt;span class=&quot;hljs-property&quot;&gt;onchange&lt;/span&gt; = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;evt&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [file] = imgInp.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (file) {\n    blah.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = &lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createObjectURL&lt;/span&gt;(file)\n  }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;runat&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;server&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;accept&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image/*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;imgInp&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blah&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;your image&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There are a couple ways you can do this. The most efficient way would be to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL&quot; rel=&quot;noreferrer&quot;&gt;URL.createObjectURL()&lt;/a&gt; on the &lt;a href=&quot;http://www.javascripture.com/File&quot; rel=&quot;noreferrer&quot;&gt;File&lt;/a&gt; from your &lt;a href=&quot;http://www.javascripture.com/HTMLInputElement#files&quot; rel=&quot;noreferrer&quot;&gt;&amp;lt;input&amp;gt;&lt;/a&gt;.  Pass this URL to &lt;a href=&quot;http://www.javascripture.com/HTMLImageElement#src&quot; rel=&quot;noreferrer&quot;&gt;img.src&lt;/a&gt; to tell the browser to load the provided image. &lt;/p&gt;\n\n&lt;p&gt;Here&apos;s an example:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;accept&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image/*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;loadFile(event)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;output&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; loadFile = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; output = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;output&apos;&lt;/span&gt;);\n    output.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = &lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createObjectURL&lt;/span&gt;(event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    output.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;revokeObjectURL&lt;/span&gt;(output.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// free memory&lt;/span&gt;\n    }\n  };\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;You can also use &lt;a href=&quot;http://www.javascripture.com/FileReader#readAsDataURL&quot; rel=&quot;noreferrer&quot;&gt;FileReader.readAsDataURL()&lt;/a&gt; to parse the file from your &amp;lt;input&amp;gt;.  This will create a string in memory containing a base64 representation of the image.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;accept&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image/*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;loadFile(event)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;output&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; loadFile = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n    reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; output = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;output&apos;&lt;/span&gt;);\n      output.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = reader.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;;\n    };\n    reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n  };\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;One-liner solution:&lt;/p&gt;\n\n&lt;p&gt;The following code uses object URLs, which is much more efficient than data URL for viewing large images (A data URL is a huge string containing all of the file data, whereas an object URL, is just a short string referencing the file data in-memory):&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blah&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;your image&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;100&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; \n    &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;document.getElementById(&apos;blah&apos;).src = window.URL.createObjectURL(this.files[0])&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Generated URL will be like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;blob&lt;/span&gt;:http%3A&lt;span class=&quot;hljs-comment&quot;&gt;//localhost/7514bc74-65d4-4cf0-a0df-3de016824345&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;THIS IS THE SIMPLEST METHOD&lt;/strong&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;To PREVIEW the image before uploading it to the SERVER from the Browser without using Ajax or any complicated functions.&lt;/strong&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;It needs an &quot;&lt;em&gt;&lt;strong&gt;onChange&lt;/strong&gt;&lt;/em&gt;&quot; event to load the image.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;preview&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    frame.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createObjectURL&lt;/span&gt;(event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;preview()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;frame&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;100px&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;100px&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;To preview multiple image &lt;a href=&quot;https://stackoverflow.com/a/64416316/11766145&quot;&gt;click here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The answer of LeassTaTT works well in &quot;standard&quot; browsers like FF and Chrome.\nThe solution for IE exists but looks different. Here description of cross-browser solution:&lt;/p&gt;\n\n&lt;p&gt;In HTML we need two preview elements, &lt;code&gt;img&lt;/code&gt; for standard browsers and &lt;code&gt;div&lt;/code&gt; for &lt;strong&gt;IE&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;HTML:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;img id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;preview&quot;&lt;/span&gt; \n     src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; \n     alt=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; \n     style=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display:none; max-width: 160px; max-height: 120px; border: none;&quot;&lt;/span&gt;/&amp;gt;\n\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;preview_ie&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In CSS we specify the following IE specific thing:&lt;/p&gt;\n\n&lt;p&gt;CSS:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;#preview_ie {\n  &lt;span class=&quot;hljs-attr&quot;&gt;FILTER&lt;/span&gt;: &lt;span class=&quot;hljs-attr&quot;&gt;progid&lt;/span&gt;:&lt;span class=&quot;hljs-title class_&quot;&gt;DXImageTransform&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Microsoft&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;AlphaImageLoader&lt;/span&gt;(sizingMethod=scale)\n}  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In HTML we include the standard and the IE-specific Javascripts:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;\n  {% include &lt;span class=&quot;hljs-string&quot;&gt;&quot;pic_preview.js&quot;&lt;/span&gt; %}\n&amp;lt;/script&amp;gt;  \n&amp;lt;!--[&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; gte &lt;span class=&quot;hljs-variable constant_&quot;&gt;IE&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]&amp;gt; \n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  {% include &lt;span class=&quot;hljs-string&quot;&gt;&quot;pic_preview_ie.js&quot;&lt;/span&gt; %}\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;pic_preview.js&lt;/code&gt; is the Javascript from the LeassTaTT&apos;s answer. Replace the  &lt;code&gt;$(&apos;#blah&apos;)&lt;/code&gt; whith the &lt;code&gt;$(&apos;#preview&apos;)&lt;/code&gt; and add the &lt;code&gt;$(&apos;#preview&apos;).show()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Now the IE specific Javascript (pic_preview_ie.js):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt; (imgFile) {    \n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newPreview = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;preview_ie&apos;&lt;/span&gt;);\n  newPreview.&lt;span class=&quot;hljs-property&quot;&gt;filters&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;item&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DXImageTransform.Microsoft.AlphaImageLoader&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = imgFile.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n  newPreview.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;160px&apos;&lt;/span&gt;;\n  newPreview.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;120px&apos;&lt;/span&gt;;\n}    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That&apos;s is. Works in IE7, IE8, FF and Chrome. Please test in IE9 and report.\nThe idea of IE preview was found here:\n&lt;a href=&quot;http://forums.asp.net/t/1320559.aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://forums.asp.net/t/1320559.aspx&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms532969(v=vs.85).aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://msdn.microsoft.com/en-us/library/ms532969(v=vs.85).aspx&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;Short two-liner&lt;/h1&gt;\n&lt;p&gt;This is size improvement of &lt;a href=&quot;https://stackoverflow.com/a/27002935/860099&quot;&gt;cmlevy answer&lt;/a&gt; - try&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;oninput&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;pic.src=window.URL.createObjectURL(this.files[0])&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;pic&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I have edited @Ivan&apos;s answer to display &quot;No Preview Available&quot; image, if it is not an image:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = input.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ext = url.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(url.&lt;span class=&quot;hljs-title function_&quot;&gt;lastIndexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt; &amp;amp;&amp;amp; input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]&amp;amp;&amp;amp; (ext == &lt;span class=&quot;hljs-string&quot;&gt;&quot;gif&quot;&lt;/span&gt; || ext == &lt;span class=&quot;hljs-string&quot;&gt;&quot;png&quot;&lt;/span&gt; || ext == &lt;span class=&quot;hljs-string&quot;&gt;&quot;jpeg&quot;&lt;/span&gt; || ext == &lt;span class=&quot;hljs-string&quot;&gt;&quot;jpg&quot;&lt;/span&gt;)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n\n        reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.imagepreview&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n        }\n\n        reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n         $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.imagepreview&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/assets/no_preview.png&apos;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s a &lt;strong&gt;multiple files&lt;/strong&gt; version, based on Ivan Baev&apos;s answer.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The HTML&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; multiple id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;gallery-photo-add&quot;&lt;/span&gt;&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;gallery&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;JavaScript / jQuery&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Multiple images preview in browser&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; imagesPreview = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input, placeToInsertImagePreview&lt;/span&gt;) {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; filesAmount = input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; filesAmount; i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n\n                reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n                    $($.&lt;span class=&quot;hljs-title function_&quot;&gt;parseHTML&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;img&amp;gt;&apos;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;, event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;(placeToInsertImagePreview);\n                }\n\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[i]);\n            }\n        }\n\n    };\n\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#gallery-photo-add&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;change&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;imagesPreview&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;div.gallery&apos;&lt;/span&gt;);\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Requires jQuery 1.8 due to the usage of $.parseHTML, which should help with XSS mitigation.&lt;/p&gt;\n\n&lt;p&gt;This will work out of the box, and the only dependancy you need is jQuery.&lt;/p&gt;\n    ","\n&lt;p&gt;Yes. It is possible.&lt;/p&gt;\n\n&lt;p&gt;Html&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; accept=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image/*&quot;&lt;/span&gt;  onchange=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showMyImage(this)&quot;&lt;/span&gt; /&amp;gt;\n &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;thumbnil&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:20%; margin-top:10px;&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;JS&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showMyImage&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fileInput&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; files = fileInput.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; files.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {           \n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file = files[i];\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; imageType = &lt;span class=&quot;hljs-regexp&quot;&gt;/image.*/&lt;/span&gt;;     \n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!file.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(imageType)) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n            }           \n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; img=&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;thumbnil&quot;&lt;/span&gt;);            \n            img.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt; = file;    \n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n            reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;aImg&lt;/span&gt;) { \n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) { \n                    aImg.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;; \n                }; \n            })(img);\n            reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file);\n        }    \n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can get &lt;a href=&quot;http://jsfiddle.net/shadiq_aust/Z8BaX/&quot; rel=&quot;noreferrer&quot;&gt;Live Demo&lt;/a&gt; from here.&lt;/p&gt;\n    ","\n&lt;p&gt;Clean and simple\n&lt;a href=&quot;https://jsfiddle.net/sivashanmugam_kannan/tj8ms72y/12/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;JSfiddle&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This will be useful when you want The event to triggered indirectly from a div or a button.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;img id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image-preview&quot;&lt;/span&gt;  style=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height:100px; width:100px;&quot;&lt;/span&gt;  src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; &amp;gt;\n\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display:none&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;input-image-hidden&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;document.getElementById(&apos;image-preview&apos;).src = window.URL.createObjectURL(this.files[0])&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;accept&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image/jpeg, image/png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;HandleBrowseClick(&apos;input-image-hidden&apos;);&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;UPLOAD IMAGE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HandleBrowseClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;hidden_input_image&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fileinputElement = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(hidden_input_image);\n    fileinputElement.&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;();\n}     \n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Example with multiple images using JavaScript (jQuery) and HTML5&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;JavaScript (jQuery)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i =&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt; input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n         &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[i]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n\n            reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n               &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; img = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;img id=&quot;dynamic&quot;&amp;gt;&apos;&lt;/span&gt;);\n               img.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n               img.&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#form1&apos;&lt;/span&gt;);  \n            }\n            reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[i]);\n           }\n        }\n    }\n\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#imgUpload&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n    });\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Markup (HTML)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;form id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form1&quot;&lt;/span&gt; runat=&lt;span class=&quot;hljs-string&quot;&gt;&quot;server&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;imgUpload&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;multiple&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;TO PREVIEW MULTIPLE FILES&lt;/strong&gt; using jquery&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#image&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#frames&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#frames&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;img src=&quot;&apos;&lt;/span&gt;+&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createObjectURL&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[i])+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot; width=&quot;100px&quot; height=&quot;100px&quot;/&amp;gt;&apos;&lt;/span&gt;);\n        }\n    });\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;image[]&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;multiple&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;frames&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;In React, if the file is in your props, you can use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{props.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt; &amp;amp;&amp;amp; (\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;{URL.createObjectURL(props.value)}/&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n)}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;How about creating a function that loads the file and fires a custom event. Then attach a listener to the input. This way we have more flexibility to use the file, not just for previewing images. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;domElement&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;input&lt;/span&gt; - The input element\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;string&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;typeData&lt;/span&gt; - The type of data to be return in the event object. \n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;loadFileFromInput&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input,typeData&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader,\n        fileLoadedEvent,\n        files = input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (files &amp;amp;&amp;amp; files[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) {\n        reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n\n        reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n            fileLoadedEvent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CustomEvent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fileLoaded&apos;&lt;/span&gt;,{\n                &lt;span class=&quot;hljs-attr&quot;&gt;detail&lt;/span&gt;:{\n                    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;:reader.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;,\n                    &lt;span class=&quot;hljs-attr&quot;&gt;file&lt;/span&gt;:files[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]  \n                },\n                &lt;span class=&quot;hljs-attr&quot;&gt;bubbles&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n                &lt;span class=&quot;hljs-attr&quot;&gt;cancelable&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n            });\n            input.&lt;span class=&quot;hljs-title function_&quot;&gt;dispatchEvent&lt;/span&gt;(fileLoadedEvent);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;(typeData) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;arraybuffer&apos;&lt;/span&gt;:\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsArrayBuffer&lt;/span&gt;(files[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;dataurl&apos;&lt;/span&gt;:\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(files[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;binarystring&apos;&lt;/span&gt;:\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsBinaryString&lt;/span&gt;(files[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;:\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsText&lt;/span&gt;(files[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fileHandler&lt;/span&gt; (e) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = e.&lt;span class=&quot;hljs-property&quot;&gt;detail&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;data&lt;/span&gt;,\n        fileInfo = e.&lt;span class=&quot;hljs-property&quot;&gt;detail&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;file&lt;/span&gt;;\n\n    img.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = data;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; input = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;inputId&apos;&lt;/span&gt;),\n    img = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;imgId&apos;&lt;/span&gt;);\n\ninput.&lt;span class=&quot;hljs-property&quot;&gt;onchange&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;loadFileFromInput&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;dataurl&apos;&lt;/span&gt;);\n};\n\ninput.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fileLoaded&apos;&lt;/span&gt;,fileHandler)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Probably my code isn&apos;t as good as some users but I think you will get the point of it. Here you can see an &lt;a href=&quot;http://jsfiddle.net/ajorquera/U6S4T/3/&quot; rel=&quot;noreferrer&quot;&gt;example&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Following is the working code.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt; onchange=&lt;span class=&quot;hljs-string&quot;&gt;&quot;readURL(this);&quot;&lt;/span&gt; /&amp;gt; \n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ShowImage&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;Javascript:&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt; &amp;amp;&amp;amp; input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n\n            reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n                $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#ShowImage&apos;&lt;/span&gt;)\n                    .&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;)\n                    .&lt;span class=&quot;hljs-title function_&quot;&gt;width&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;150&lt;/span&gt;)\n                    .&lt;span class=&quot;hljs-title function_&quot;&gt;height&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;);\n            };\n\n            reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;File&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;FileList&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;FileReader&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; filesInput = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadImage&quot;&lt;/span&gt;);\n    filesInput.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;change&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; files = event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; output = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; files.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file = files[i];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!file.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;image&apos;&lt;/span&gt;))\n          &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; picReader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n        picReader.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;load&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; picFile = event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; div = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;div&quot;&lt;/span&gt;);\n          div.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;img class=&apos;thumbnail&apos; src=&apos;&quot;&lt;/span&gt; + picFile.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt; +\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;title=&apos;&quot;&lt;/span&gt; + picFile.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;/&amp;gt;&quot;&lt;/span&gt;;\n          output.&lt;span class=&quot;hljs-title function_&quot;&gt;insertBefore&lt;/span&gt;(div, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        });        \n        picReader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file);\n      }\n\n    });\n  }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadImage&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;termek_file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file_input&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;multiple&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadPreview&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;What about this solution?&lt;/p&gt;\n\n&lt;p&gt;Just add the data attribute &quot;data-type=editable&quot; to an image tag like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;img data-type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editable&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;companyLogo&quot;&lt;/span&gt; src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.coventrywebgraphicdesign.co.uk/wp-content/uploads/logo-here.jpg&quot;&lt;/span&gt; height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;300px&quot;&lt;/span&gt; width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;300px&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the script to your project off course...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;img[data-type=editable]&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;i, e&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _inputFile = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;input/&amp;gt;&apos;&lt;/span&gt;)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;type&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;hidden&apos;&lt;/span&gt;)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onchange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;readImage()&apos;&lt;/span&gt;)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;data-image-placeholder&apos;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;);\n\n        $(e.&lt;span class=&quot;hljs-property&quot;&gt;parentElement&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(_inputFile);\n\n        $(e).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, _inputFile, triggerClick);\n    });\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;triggerClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n    e.&lt;span class=&quot;hljs-property&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Element&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;readImage&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _inputFile = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (_inputFile &amp;amp;&amp;amp; _inputFile.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt; &amp;amp;&amp;amp; _inputFile.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _fileReader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n        _fileReader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _imagePlaceholder = _inputFile.&lt;span class=&quot;hljs-property&quot;&gt;attributes&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getNamedItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data-image-placeholder&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; _img = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; + _imagePlaceholder);\n            _img.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n        };\n        _fileReader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(_inputFile.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    }\n};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// IIFE - Immediately Invoked Function Expression&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// https://stackoverflow.com/questions/18307078/jquery-best-practises-in-case-of-document-ready&lt;/span&gt;\n(\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;yourcode&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;use strict&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// The global jQuery object is passed as a parameter&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;yourcode&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;jQuery&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;);\n}(\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;$, &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;use strict&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// The $ is now locally scoped &lt;/span&gt;\n    $(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// The DOM is ready!&lt;/span&gt;\n        &lt;span class=&quot;hljs-title function_&quot;&gt;init&lt;/span&gt;();\n    });\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// The rest of your code goes here!&lt;/span&gt;\n}));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/rodolphobrock/q8f33f8L/&quot; rel=&quot;nofollow&quot;&gt;See demo at JSFiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;Preview multiple images before it is uploaded using jQuery/javascript?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;strong&gt;This will preview multiple files as thumbnail images at a time&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Html&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ImageMedias&quot;&lt;/span&gt; multiple=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multiple&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ImageMedias&quot;&lt;/span&gt; type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;\naccept=&lt;span class=&quot;hljs-string&quot;&gt;&quot;.jfif,.jpg,.jpeg,.png,.gif&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;custom-file-input&quot;&lt;/span&gt;  value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;                                    \n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;divImageMediaPreview&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Script&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#ImageMedias&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;) != &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dvPreview = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#divImageMediaPreview&quot;&lt;/span&gt;);\n        dvPreview.&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);            \n        $($(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);                \n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n                reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; img = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;img /&amp;gt;&quot;&lt;/span&gt;);\n                    img.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;style&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;width: 150px; height:100px; padding: 10px&quot;&lt;/span&gt;);\n                    img.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n                    dvPreview.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(img);\n                }\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);                \n        });\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;This browser does not support HTML5 FileReader.&quot;&lt;/span&gt;);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://codepen.io/vishpatel73/pen/MWgbbvJ&quot; rel=&quot;nofollow noreferrer&quot;&gt;Working Demo on Codepen&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://jsfiddle.net/vishpatel73/69537fkx/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Working Demo on jsfiddle&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I hope this will help.&lt;/p&gt;\n    ","\n&lt;p&gt;I have made a plugin which can generate the preview effect in IE 7+ thanks to the internet, but has few limitations. I put it into a &lt;a href=&quot;https://github.com/andrewng330/PreviewImage/tree/master&quot; rel=&quot;nofollow&quot;&gt;github page&lt;/a&gt; so that its easier to get it&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\t\t$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;input[name=file1]&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;previewimage&lt;/span&gt;({\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;div&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;.preview&quot;&lt;/span&gt;,\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;imgwidth&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;180&lt;/span&gt;,\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;imgheight&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;\n\t\t});\n\t\t$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;input[name=file2]&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;previewimage&lt;/span&gt;({\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;div&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;.preview2&quot;&lt;/span&gt;,\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;imgwidth&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;90&lt;/span&gt;,\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;imgheight&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;90&lt;/span&gt;\n\t\t});\n\t});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.preview&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;:center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.preview2&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block; \n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;:center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://rawgit.com/andrewng330/PreviewImage/master/preview.image.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\tPreview\n\t&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;preview&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\tPreview2\n\t&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;preview2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n\t&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\t\t&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\t\t&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\t\t&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\t&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For Multiple image upload (Modification to the @IvanBaev&apos;s Solution)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt; &amp;amp;&amp;amp; input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ++i) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n          reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n              $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#form1&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;img src=&quot;&apos;&lt;/span&gt;+e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&amp;gt;&apos;&lt;/span&gt;);\n          }\n          reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[i]);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/LvsYc/12330/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://jsfiddle.net/LvsYc/12330/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hope this helps someone.&lt;/p&gt;\n    ","\n&lt;p&gt;It&apos;s my code.Support IE[6-9]chrome 17+firefoxOpera 11+Maxthon3&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;   \n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;previewImage&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fileObj, imgPreviewId&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; allowExtention = &lt;span class=&quot;hljs-string&quot;&gt;&quot;.jpg,.bmp,.gif,.png&quot;&lt;/span&gt;;  &lt;span class=&quot;hljs-comment&quot;&gt;//allowed to upload file type&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hfAllowPicSuffix&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; extention = fileObj.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(fileObj.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;lastIndexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; browserVersion = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;navigator&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toUpperCase&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (allowExtention.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(extention) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fileObj.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;FileReader&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n                reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(imgPreviewId).&lt;span class=&quot;hljs-title function_&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n                };\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(fileObj.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (browserVersion.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SAFARI&quot;&lt;/span&gt;) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;don&apos;t support  Safari6.0 below broswer&quot;&lt;/span&gt;);\n            }\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (browserVersion.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MSIE&quot;&lt;/span&gt;) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (browserVersion.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MSIE 6&quot;&lt;/span&gt;) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {&lt;span class=&quot;hljs-comment&quot;&gt;//ie6&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(imgPreviewId).&lt;span class=&quot;hljs-title function_&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, fileObj.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;span class=&quot;hljs-comment&quot;&gt;//ie[7-9]&lt;/span&gt;\n                fileObj.&lt;span class=&quot;hljs-title function_&quot;&gt;select&lt;/span&gt;();\n                fileObj.&lt;span class=&quot;hljs-title function_&quot;&gt;blur&lt;/span&gt;(); \n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newPreview = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(imgPreviewId);\n\n                newPreview.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;border&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;solid 1px #eeeeee&quot;&lt;/span&gt;;\n                newPreview.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;filter&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=&apos;scale&apos;,src=&apos;&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;selection&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createRange&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;text&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;)&quot;&lt;/span&gt;;\n                newPreview.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;display&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;block&quot;&lt;/span&gt;;\n\n            }\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (browserVersion.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;FIREFOX&quot;&lt;/span&gt;) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {&lt;span class=&quot;hljs-comment&quot;&gt;//firefox&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; firefoxVersion = &lt;span class=&quot;hljs-built_in&quot;&gt;parseFloat&lt;/span&gt;(browserVersion.&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/firefox\\/([\\d.]+)/&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (firefoxVersion &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;) {&lt;span class=&quot;hljs-comment&quot;&gt;//firefox7 below&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(imgPreviewId).&lt;span class=&quot;hljs-title function_&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, fileObj.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;getAsDataURL&lt;/span&gt;());\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;span class=&quot;hljs-comment&quot;&gt;//firefox7.0+&amp;nbsp;&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(imgPreviewId).&lt;span class=&quot;hljs-title function_&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createObjectURL&lt;/span&gt;(fileObj.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]));\n            }\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(imgPreviewId).&lt;span class=&quot;hljs-title function_&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, fileObj.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n        }\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;only support&quot;&lt;/span&gt; + allowExtention + &lt;span class=&quot;hljs-string&quot;&gt;&quot;suffix&quot;&lt;/span&gt;);\n        fileObj.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//clear Selected file&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (browserVersion.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MSIE&quot;&lt;/span&gt;) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n            fileObj.&lt;span class=&quot;hljs-title function_&quot;&gt;select&lt;/span&gt;();\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;selection&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;clear&lt;/span&gt;();\n        }\n\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;changeFile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;elem&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//file object , preview img tag id&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;previewImage&lt;/span&gt;(elem,&lt;span class=&quot;hljs-string&quot;&gt;&apos;imagePreview&apos;&lt;/span&gt;)\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;netBarBig&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;changeFile(this)&quot;&lt;/span&gt;  /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;imagePreview&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:120px;height:80px;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;\n                    Default Iamge&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;                @&lt;span class=&quot;hljs-title class_&quot;&gt;Html&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;TextBoxFor&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;productModels&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;DefaultImage&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; {@type = &lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;, @&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;, onchange = &lt;span class=&quot;hljs-string&quot;&gt;&quot;openFile(event)&quot;&lt;/span&gt;, @name = &lt;span class=&quot;hljs-string&quot;&gt;&quot;DefaultImage&quot;&lt;/span&gt;, @id = &lt;span class=&quot;hljs-string&quot;&gt;&quot;DefaultImage&quot;&lt;/span&gt; })\n                @&lt;span class=&quot;hljs-title class_&quot;&gt;Html&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;ValidationMessageFor&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;model&lt;/span&gt; =&amp;gt;&lt;/span&gt; model.&lt;span class=&quot;hljs-property&quot;&gt;productModels&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;DefaultImage&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; { @&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;text-danger&quot;&lt;/span&gt; })\n                    &amp;lt;img src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;~/img/ApHandler.png&quot;&lt;/span&gt;  style=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height:125px; width:125px&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;DefaultImagePreview&quot;&lt;/span&gt;/&amp;gt;\n            &amp;lt;/div&amp;gt;\n\n &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; openFile = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; input = event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n        reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dataURL = reader.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; output = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DefaultImagePreview&apos;&lt;/span&gt;);\n            output.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = dataURL;\n        };\n        reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(input.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    };\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s a solution if you&apos;re using React:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;react&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; { useDropzone } &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;react-dropzone&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;imageDropper&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [imageUrl, setImageUrl] = &lt;span class=&quot;hljs-title class_&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;useState&lt;/span&gt;()\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [imageFile, setImageFile] = &lt;span class=&quot;hljs-title class_&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;useState&lt;/span&gt;()\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; onDrop = &lt;span class=&quot;hljs-title class_&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;useCallback&lt;/span&gt;(\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;acceptedFiles&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; file = acceptedFiles[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n      &lt;span class=&quot;hljs-title function_&quot;&gt;setImageFile&lt;/span&gt;(file)\n\n      &lt;span class=&quot;hljs-comment&quot;&gt;// convert file to data: url&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;()\n      reader.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;load&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setImageUrl&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(reader.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;)), &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;)\n      reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file)\n    },\n    [setImageFile, setImageUrl]\n  )\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; { getRootProps, getInputProps, isDragActive } = &lt;span class=&quot;hljs-title function_&quot;&gt;useDropzone&lt;/span&gt;({ onDrop })\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; {&lt;span class=&quot;hljs-attr&quot;&gt;...getRootProps&lt;/span&gt;()}&amp;gt;&lt;/span&gt;\n        {imageFile ? imageFile.name : &apos;&apos;}\n        {isDragActive ? &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Drop files here...&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; : &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Select image file...&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;}\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; {&lt;span class=&quot;hljs-attr&quot;&gt;...getInputProps&lt;/span&gt;()} /&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      {imageUrl &amp;amp;&amp;amp; (\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          Your image: &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;{imageUrl}&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      )}\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n  )\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;img id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blah&quot;&lt;/span&gt; alt=&lt;span class=&quot;hljs-string&quot;&gt;&quot;your image&quot;&lt;/span&gt; width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;100&quot;&lt;/span&gt; height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;100&quot;&lt;/span&gt; /&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;photo&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fileinput&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#fileinput&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createObjectURL&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#blah&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;,url);\n});\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/59985954/8784402&quot;&gt;https://stackoverflow.com/a/59985954/8784402&lt;/a&gt;&lt;/p&gt;\n&lt;h3&gt;ES2017 Way&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// convert file to a base64 url&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt; = file =&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;res, rej&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n        reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;res&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n        reader.&lt;span class=&quot;hljs-property&quot;&gt;onerror&lt;/span&gt; = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;rej&lt;/span&gt;(e);\n        reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file);\n    });\n};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// for demo&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; fileInput = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input&apos;&lt;/span&gt;);\nfileInput.&lt;span class=&quot;hljs-property&quot;&gt;type&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; img = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;img&apos;&lt;/span&gt;);\nimg.&lt;span class=&quot;hljs-property&quot;&gt;attributeStyleMap&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;max-width&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;320px&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(fileInput);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(img);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;preview&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; event =&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; file = event.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; url = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readURL&lt;/span&gt;(file);\n    img.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = url;\n};\n\nfileInput.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;change&apos;&lt;/span&gt;, preview);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a much easy way to preview image before upload using pure javascript;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//profile_change is the id of the input field where we choose an image&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;profile_change&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;change&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Here we select the first file among the selected files.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; file = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/*here i used a label for the input field which is an image and this image will \n  represent the photo selected and profile_label is the id of this label */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; profile_label = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;profile_label&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Here we check if a file is selected&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(file) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Here we bring in the FileReader which reads the file info. &lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;/*After reader loads we change the src attribute of the label to the url of the \n    new image selected*/&lt;/span&gt;\n    reader.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;load&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        dp_label.&lt;span class=&quot;hljs-title function_&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n    })\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/*Here we are reading the file as a url i.e, we try to get the location of the \n    file to set that as the src of the label which we did above*/&lt;/span&gt;\n    reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file);\n\n}&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Here we simply set the src as default, whatever you want if no file is selected.&lt;/span&gt;\n    dp_label.&lt;span class=&quot;hljs-title function_&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;src&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;as_you_want&quot;&lt;/span&gt;)\n}\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And here is the HTML;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;label &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;profile_change&quot;&lt;/span&gt;&amp;gt;\n            &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Change Profile Photo&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;profile_label&quot;&lt;/span&gt; \n             &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;as_you_want&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;DP&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height: 150px; width: 150px; \n               border-radius: 50%;&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display: none;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;profile_change&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;DP&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;detail form-control&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;for my app, with encryped GET url parameters, only this worked. I always got a &lt;code&gt;TypeError: $(...) is null&lt;/code&gt;.\nTaken from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;previewFile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; preview = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;img&apos;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; file    = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[type=file]&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader  = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n\n  reader.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;load&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    preview.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = reader.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;;\n  }, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (file) {\n    reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(file);\n  }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onchange&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;previewFile()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Image preview...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;assignFilePreviews&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;input[data-previewable=\\&quot;true\\&quot;]&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;change&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prvCnt = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;data-preview-container&apos;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (prvCnt) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; reader = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;();\n                reader.&lt;span class=&quot;hljs-property&quot;&gt;onload&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; img = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;img&amp;gt;&apos;&lt;/span&gt;);\n                    img.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;src&apos;&lt;/span&gt;, e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n                    img.&lt;span class=&quot;hljs-title function_&quot;&gt;error&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n                        $(prvCnt).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n                    });\n                    $(prvCnt).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n                    img.&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;(prvCnt);\n                }\n                reader.&lt;span class=&quot;hljs-title function_&quot;&gt;readAsDataURL&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;files&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            }\n        }\n    });\n}\n$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;assignFilePreviews&lt;/span&gt;();\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; data-previewable=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; data-preview-container=&lt;span class=&quot;hljs-string&quot;&gt;&quot;.prd-img-prv&quot;&lt;/span&gt; /&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;prd-img-prv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This also handles case when file with invalid type ( ex. pdf ) is choosen&lt;/p&gt;\n    "],"460":["\n&lt;p&gt;Let&apos;s say you have a collection of &lt;code&gt;Car&lt;/code&gt; objects (database rows), and each &lt;code&gt;Car&lt;/code&gt; has a collection of &lt;code&gt;Wheel&lt;/code&gt; objects (also rows).  In other words, &lt;code&gt;Car&lt;/code&gt;  &lt;code&gt;Wheel&lt;/code&gt; is a 1-to-many relationship.&lt;/p&gt;\n&lt;p&gt;Now, let&apos;s say you need to iterate through all the cars, and for each one, print out a list of the wheels. The naive O/R implementation would do the following:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT * FROM Cars;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And then &lt;strong&gt;for each &lt;code&gt;Car&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT * FROM Wheel WHERE CarId = ?\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In other words, you have one select for the Cars, and then N additional selects, where N is the total number of cars.&lt;/p&gt;\n&lt;p&gt;Alternatively, one could get all wheels and perform the lookups in memory:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT * FROM Wheel\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This reduces the number of round-trips to the database from N+1 to 2.\nMost ORM tools give you several ways to prevent N+1 selects.&lt;/p&gt;\n&lt;p&gt;Reference: &lt;em&gt;&lt;a href=&quot;http://www.manning.com/bauer2/&quot; rel=&quot;noreferrer&quot;&gt;Java Persistence with Hibernate&lt;/a&gt;&lt;/em&gt;, chapter 13.&lt;/p&gt;\n    ","\n&lt;h2&gt;What is the N+1 query problem&lt;/h2&gt;\n&lt;p&gt;The N+1 query problem happens when the data access framework executed N additional SQL statements to fetch the same data that could have been retrieved when executing the primary SQL query.&lt;/p&gt;\n&lt;p&gt;The larger the value of N, the more queries will be executed, the larger the performance impact. And, unlike the slow query log that can help you find slow running queries, the N+1 issue wont be spot because each individual additional query runs sufficiently fast to not trigger the slow query log.&lt;/p&gt;\n&lt;p&gt;The problem is executing a large number of additional queries that, overall, take sufficient time to slow down response time.&lt;/p&gt;\n&lt;p&gt;Lets consider we have the following post and post_comments database tables which form a one-to-many table relationship:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/T1uWG.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/T1uWG.png&quot; alt=&quot;The post and post_comments tables&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;We are going to create the following 4 &lt;code&gt;post&lt;/code&gt; rows:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;INSERT INTO post (title, id)\nVALUES (&apos;High-Performance Java Persistence - Part 1&apos;, 1)\n \nINSERT INTO post (title, id)\nVALUES (&apos;High-Performance Java Persistence - Part 2&apos;, 2)\n \nINSERT INTO post (title, id)\nVALUES (&apos;High-Performance Java Persistence - Part 3&apos;, 3)\n \nINSERT INTO post (title, id)\nVALUES (&apos;High-Performance Java Persistence - Part 4&apos;, 4)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And, we will also create 4 &lt;code&gt;post_comment&lt;/code&gt; child records:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;INSERT INTO post_comment (post_id, review, id)\nVALUES (1, &apos;Excellent book to understand Java Persistence&apos;, 1)\n \nINSERT INTO post_comment (post_id, review, id)\nVALUES (2, &apos;Must-read for Java developers&apos;, 2)\n \nINSERT INTO post_comment (post_id, review, id)\nVALUES (3, &apos;Five Stars&apos;, 3)\n \nINSERT INTO post_comment (post_id, review, id)\nVALUES (4, &apos;A great reference book&apos;, 4)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;N+1 query problem with plain SQL&lt;/h2&gt;\n&lt;p&gt;If you select the &lt;code&gt;post_comments&lt;/code&gt; using this SQL query:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;List&amp;lt;Tuple&amp;gt; comments = entityManager.createNativeQuery(&quot;&quot;&quot;\n    SELECT\n        pc.id AS id,\n        pc.review AS review,\n        pc.post_id AS postId\n    FROM post_comment pc\n    &quot;&quot;&quot;, Tuple.class)\n.getResultList();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And, later, you decide to fetch the associated &lt;code&gt;post&lt;/code&gt; &lt;code&gt;title&lt;/code&gt; for each &lt;code&gt;post_comment&lt;/code&gt;:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;for (Tuple comment : comments) {\n    String review = (String) comment.get(&quot;review&quot;);\n    Long postId = ((Number) comment.get(&quot;postId&quot;)).longValue();\n \n    String postTitle = (String) entityManager.createNativeQuery(&quot;&quot;&quot;\n        SELECT\n            p.title\n        FROM post p\n        WHERE p.id = :postId\n        &quot;&quot;&quot;)\n    .setParameter(&quot;postId&quot;, postId)\n    .getSingleResult();\n \n    LOGGER.info(\n        &quot;The Post &apos;{}&apos; got this review &apos;{}&apos;&quot;,\n        postTitle,\n        review\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You are going to trigger the N+1 query issue because, instead of one SQL query, you executed 5 (1 + 4):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT\n    pc.id AS id,\n    pc.review AS review,\n    pc.post_id AS postId\nFROM post_comment pc\n \nSELECT p.title FROM post p WHERE p.id = 1\n-- The Post &apos;High-Performance Java Persistence - Part 1&apos; got this review\n-- &apos;Excellent book to understand Java Persistence&apos;\n    \nSELECT p.title FROM post p WHERE p.id = 2\n-- The Post &apos;High-Performance Java Persistence - Part 2&apos; got this review\n-- &apos;Must-read for Java developers&apos;\n     \nSELECT p.title FROM post p WHERE p.id = 3\n-- The Post &apos;High-Performance Java Persistence - Part 3&apos; got this review\n-- &apos;Five Stars&apos;\n     \nSELECT p.title FROM post p WHERE p.id = 4\n-- The Post &apos;High-Performance Java Persistence - Part 4&apos; got this review\n-- &apos;A great reference book&apos;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Fixing the N+1 query issue is very easy. All you need to do is extract all the data you need in the original SQL query, like this:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;List&amp;lt;Tuple&amp;gt; comments = entityManager.createNativeQuery(&quot;&quot;&quot;\n    SELECT\n        pc.id AS id,\n        pc.review AS review,\n        p.title AS postTitle\n    FROM post_comment pc\n    JOIN post p ON pc.post_id = p.id\n    &quot;&quot;&quot;, Tuple.class)\n.getResultList();\n \nfor (Tuple comment : comments) {\n    String review = (String) comment.get(&quot;review&quot;);\n    String postTitle = (String) comment.get(&quot;postTitle&quot;);\n \n    LOGGER.info(\n        &quot;The Post &apos;{}&apos; got this review &apos;{}&apos;&quot;,\n        postTitle,\n        review\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This time, only one SQL query is executed to fetch all the data we are further interested in using.&lt;/p&gt;\n&lt;h2&gt;N+1 query problem with JPA and Hibernate&lt;/h2&gt;\n&lt;p&gt;When using JPA and Hibernate, there are several ways you can trigger the N+1 query issue, so its very important to know how you can avoid these situations.&lt;/p&gt;\n&lt;p&gt;For the next examples, consider we are mapping the &lt;code&gt;post&lt;/code&gt; and &lt;code&gt;post_comments&lt;/code&gt; tables to the following entities:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/rZJne.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/rZJne.png&quot; alt=&quot;Post and PostComment entities&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;The JPA mappings look like this:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;@Entity(name = &quot;Post&quot;)\n@Table(name = &quot;post&quot;)\npublic class Post {\n \n    @Id\n    private Long id;\n \n    private String title;\n \n    //Getters and setters omitted for brevity\n}\n \n@Entity(name = &quot;PostComment&quot;)\n@Table(name = &quot;post_comment&quot;)\npublic class PostComment {\n \n    @Id\n    private Long id;\n \n    @ManyToOne\n    private Post post;\n \n    private String review;\n \n    //Getters and setters omitted for brevity\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;&lt;code&gt;FetchType.EAGER&lt;/code&gt;&lt;/h2&gt;\n&lt;p&gt;Using &lt;code&gt;FetchType.EAGER&lt;/code&gt; either implicitly or explicitly for your JPA associations is a bad idea because you are going to fetch way more data that you need. More, the &lt;code&gt;FetchType.EAGER&lt;/code&gt; strategy is also prone to N+1 query issues.&lt;/p&gt;\n&lt;p&gt;Unfortunately, the &lt;code&gt;@ManyToOne&lt;/code&gt; and &lt;code&gt;@OneToOne&lt;/code&gt; associations use &lt;code&gt;FetchType.EAGER&lt;/code&gt; by default, so if your mappings look like this:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;@ManyToOne\nprivate Post post;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You are using the &lt;code&gt;FetchType.EAGER&lt;/code&gt; strategy, and, every time you forget to use &lt;code&gt;JOIN FETCH&lt;/code&gt; when loading some &lt;code&gt;PostComment&lt;/code&gt; entities with a JPQL or Criteria API query:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;List&amp;lt;PostComment&amp;gt; comments = entityManager\n.createQuery(&quot;&quot;&quot;\n    select pc\n    from PostComment pc\n    &quot;&quot;&quot;, PostComment.class)\n.getResultList();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You are going to trigger the N+1 query issue:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT \n    pc.id AS id1_1_, \n    pc.post_id AS post_id3_1_, \n    pc.review AS review2_1_ \nFROM \n    post_comment pc\n\nSELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 1\nSELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 2\nSELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 3\nSELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 4\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Notice the additional SELECT statements that are executed because the &lt;code&gt;post&lt;/code&gt; association has to be fetched prior to returning the &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;PostComment&lt;/code&gt; entities.&lt;/p&gt;\n&lt;p&gt;Unlike the default fetch plan, which you are using when calling the &lt;code&gt;find&lt;/code&gt; method of the &lt;code&gt;EntityManager&lt;/code&gt;, a JPQL or Criteria API query defines an explicit plan that Hibernate cannot change by injecting a JOIN FETCH automatically. So, you need to do it manually.&lt;/p&gt;\n&lt;p&gt;If you didn&apos;t need the &lt;code&gt;post&lt;/code&gt; association at all, you are out of luck when using &lt;code&gt;FetchType.EAGER&lt;/code&gt; because there is no way to avoid fetching it. That&apos;s why it&apos;s better to use &lt;code&gt;FetchType.LAZY&lt;/code&gt; by default.&lt;/p&gt;\n&lt;p&gt;But, if you wanted to use &lt;code&gt;post&lt;/code&gt; association, then you can use &lt;code&gt;JOIN FETCH&lt;/code&gt; to avoid the N+1 query problem:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;List&amp;lt;PostComment&amp;gt; comments = entityManager.createQuery(&quot;&quot;&quot;\n    select pc\n    from PostComment pc\n    join fetch pc.post p\n    &quot;&quot;&quot;, PostComment.class)\n.getResultList();\n\nfor(PostComment comment : comments) {\n    LOGGER.info(\n        &quot;The Post &apos;{}&apos; got this review &apos;{}&apos;&quot;, \n        comment.getPost().getTitle(), \n        comment.getReview()\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This time, Hibernate will execute a single SQL statement:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT \n    pc.id as id1_1_0_, \n    pc.post_id as post_id3_1_0_, \n    pc.review as review2_1_0_, \n    p.id as id1_0_1_, \n    p.title as title2_0_1_ \nFROM \n    post_comment pc \nINNER JOIN \n    post p ON pc.post_id = p.id\n    \n-- The Post &apos;High-Performance Java Persistence - Part 1&apos; got this review \n-- &apos;Excellent book to understand Java Persistence&apos;\n\n-- The Post &apos;High-Performance Java Persistence - Part 2&apos; got this review \n-- &apos;Must-read for Java developers&apos;\n\n-- The Post &apos;High-Performance Java Persistence - Part 3&apos; got this review \n-- &apos;Five Stars&apos;\n\n-- The Post &apos;High-Performance Java Persistence - Part 4&apos; got this review \n-- &apos;A great reference book&apos;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;&lt;code&gt;FetchType.LAZY&lt;/code&gt;&lt;/h2&gt;\n&lt;p&gt;Even if you switch to using &lt;code&gt;FetchType.LAZY&lt;/code&gt; explicitly for all associations, you can still bump into the N+1 issue.&lt;/p&gt;\n&lt;p&gt;This time, the &lt;code&gt;post&lt;/code&gt; association is mapped like this:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;@ManyToOne(fetch = FetchType.LAZY)\nprivate Post post;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now, when you fetch the &lt;code&gt;PostComment&lt;/code&gt; entities:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;List&amp;lt;PostComment&amp;gt; comments = entityManager\n.createQuery(&quot;&quot;&quot;\n    select pc\n    from PostComment pc\n    &quot;&quot;&quot;, PostComment.class)\n.getResultList();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Hibernate will execute a single SQL statement:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT \n    pc.id AS id1_1_, \n    pc.post_id AS post_id3_1_, \n    pc.review AS review2_1_ \nFROM \n    post_comment pc\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But, if afterward, you are going to reference the lazy-loaded &lt;code&gt;post&lt;/code&gt; association:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;for(PostComment comment : comments) {\n    LOGGER.info(\n        &quot;The Post &apos;{}&apos; got this review &apos;{}&apos;&quot;, \n        comment.getPost().getTitle(), \n        comment.getReview()\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You will get the N+1 query issue:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 1\n-- The Post &apos;High-Performance Java Persistence - Part 1&apos; got this review \n-- &apos;Excellent book to understand Java Persistence&apos;\n\nSELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 2\n-- The Post &apos;High-Performance Java Persistence - Part 2&apos; got this review \n-- &apos;Must-read for Java developers&apos;\n\nSELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 3\n-- The Post &apos;High-Performance Java Persistence - Part 3&apos; got this review \n-- &apos;Five Stars&apos;\n\nSELECT p.id AS id1_0_0_, p.title AS title2_0_0_ FROM post p WHERE p.id = 4\n-- The Post &apos;High-Performance Java Persistence - Part 4&apos; got this review \n-- &apos;A great reference book&apos;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Because the &lt;code&gt;post&lt;/code&gt; association is fetched lazily, a secondary SQL statement will be executed when accessing the lazy association in order to build the log message.&lt;/p&gt;\n&lt;p&gt;Again, the fix consists in adding a &lt;code&gt;JOIN FETCH&lt;/code&gt; clause to the JPQL query:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;List&amp;lt;PostComment&amp;gt; comments = entityManager.createQuery(&quot;&quot;&quot;\n    select pc\n    from PostComment pc\n    join fetch pc.post p\n    &quot;&quot;&quot;, PostComment.class)\n.getResultList();\n\nfor(PostComment comment : comments) {\n    LOGGER.info(\n        &quot;The Post &apos;{}&apos; got this review &apos;{}&apos;&quot;, \n        comment.getPost().getTitle(), \n        comment.getReview()\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And, just like in the &lt;code&gt;FetchType.EAGER&lt;/code&gt; example, this JPQL query will generate a single SQL statement.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Even if you are using &lt;code&gt;FetchType.LAZY&lt;/code&gt; and don&apos;t reference the child association of a bidirectional &lt;code&gt;@OneToOne&lt;/code&gt; JPA relationship, you can still trigger the N+1 query issue.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;h2&gt;How to automatically detect the N+1 query issue&lt;/h2&gt;\n&lt;p&gt;If you want to automatically detect N+1 query issue in your data access layer, you can use the &lt;a href=&quot;https://github.com/vladmihalcea/db-util&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;db-util&lt;/code&gt;&lt;/a&gt; open-source project.&lt;/p&gt;\n&lt;p&gt;First, you need to add the following Maven dependency:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;\n    &amp;lt;groupId&amp;gt;com.vladmihalcea&amp;lt;/groupId&amp;gt;\n    &amp;lt;artifactId&amp;gt;db-util&amp;lt;/artifactId&amp;gt;\n    &amp;lt;version&amp;gt;${db-util.version}&amp;lt;/version&amp;gt;\n&amp;lt;/dependency&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Afterward, you just have to use &lt;code&gt;SQLStatementCountValidator&lt;/code&gt; utility to assert the underlying SQL statements that get generated:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SQLStatementCountValidator.reset();\n\nList&amp;lt;PostComment&amp;gt; comments = entityManager.createQuery(&quot;&quot;&quot;\n    select pc\n    from PostComment pc\n    &quot;&quot;&quot;, PostComment.class)\n.getResultList();\n\nSQLStatementCountValidator.assertSelectCount(1);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In case you are using &lt;code&gt;FetchType.EAGER&lt;/code&gt; and run the above test case, you will get the following test case failure:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;SELECT \n    pc.id as id1_1_, \n    pc.post_id as post_id3_1_, \n    pc.review as review2_1_ \nFROM \n    post_comment pc\n\nSELECT p.id as id1_0_0_, p.title as title2_0_0_ FROM post p WHERE p.id = 1\n\nSELECT p.id as id1_0_0_, p.title as title2_0_0_ FROM post p WHERE p.id = 2\n\n\n-- SQLStatementCountMismatchException: Expected 1 statement(s) but recorded 3 instead!\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre&gt;&lt;code&gt;SELECT \ntable1.*\n, table2.*\nINNER JOIN table2 ON table2.SomeFkId = table1.SomeId\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That gets you a result set where child rows in table2 cause duplication by returning the table1 results for each child row in table2.  O/R mappers should differentiate table1 instances based on a unique key field, then use all the table2 columns to populate child instances.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SELECT table1.*\n\nSELECT table2.* WHERE SomeFkId = #\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The N+1 is where the first query populates the primary object and the second query populates all the child objects for each of the unique primary objects returned.&lt;/p&gt;\n\n&lt;p&gt;Consider:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class House\n{\n    int Id { get; set; }\n    string Address { get; set; }\n    Person[] Inhabitants { get; set; }\n}\n\nclass Person\n{\n    string Name { get; set; }\n    int HouseId { get; set; }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and tables with a similar structure.  A single query for the address &quot;22 Valley St&quot; may return:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Id Address      Name HouseId\n1  22 Valley St Dave 1\n1  22 Valley St John 1\n1  22 Valley St Mike 1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The O/RM should fill an instance of Home with ID=1, Address=&quot;22 Valley St&quot; and then populate the Inhabitants array with People instances for Dave, John, and Mike with just one query.&lt;/p&gt;\n\n&lt;p&gt;A N+1 query for the same address used above would result in:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Id Address\n1  22 Valley St\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;with a separate query like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SELECT * FROM Person WHERE HouseId = 1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and resulting in a separate data set like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Name    HouseId\nDave    1\nJohn    1\nMike    1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and the final result being the same as above with the single query.&lt;/p&gt;\n\n&lt;p&gt;The advantages to single select is that you get all the data up front which may be what you ultimately desire.  The advantages to N+1 is query complexity is reduced and you can use lazy loading where the child result sets are only loaded upon first request.&lt;/p&gt;\n    ","\n&lt;p&gt;Supplier with a one-to-many relationship with Product. One Supplier has (supplies) many Products.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;***** Table: Supplier *****\n+-----+-------------------+\n| ID  |       NAME        |\n+-----+-------------------+\n|  1  |  Supplier Name 1  |\n|  2  |  Supplier Name 2  |\n|  3  |  Supplier Name 3  |\n|  4  |  Supplier Name 4  |\n+-----+-------------------+\n\n***** Table: Product *****\n+-----+-----------+--------------------+-------+------------+\n| ID  |   NAME    |     DESCRIPTION    | PRICE | SUPPLIERID |\n+-----+-----------+--------------------+-------+------------+\n|1    | Product 1 | Name for Product 1 |  2.0  |     1      |\n|2    | Product 2 | Name for Product 2 | 22.0  |     1      |\n|3    | Product 3 | Name for Product 3 | 30.0  |     2      |\n|4    | Product 4 | Name for Product 4 |  7.0  |     3      |\n+-----+-----------+--------------------+-------+------------+\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Factors:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Lazy mode for Supplier set to true (default)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Fetch mode used for querying on Product is Select&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Fetch mode (default): Supplier information is accessed&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Caching does not play a role for the first time the&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Supplier is accessed&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Fetch mode is Select Fetch (default)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// It takes Select fetch mode as a default\nQuery query = session.createQuery( &quot;from Product p&quot;);\nList list = query.list();\n// Supplier is being accessed\ndisplayProductsListWithSupplierName(results);\n\nselect ... various field names ... from PRODUCT\nselect ... various field names ... from SUPPLIER where SUPPLIER.id=?\nselect ... various field names ... from SUPPLIER where SUPPLIER.id=?\nselect ... various field names ... from SUPPLIER where SUPPLIER.id=?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;1 select statement for Product&lt;/li&gt;\n&lt;li&gt;N select statements for Supplier&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;This is N+1 select problem!&lt;/p&gt;\n    ","\n&lt;p&gt;I can&apos;t comment directly on other answers, because I don&apos;t have enough reputation. But it&apos;s worth noting that the problem essentially only arises because, historically, a lot of dbms have been quite poor when it comes to handling joins (MySQL being a particularly noteworthy example). So n+1 has, often, been notably faster than a join. And then there are ways to improve on n+1 but still without needing a join, which is what the original problem relates to.&lt;/p&gt;\n\n&lt;p&gt;However, MySQL is now a lot better than it used to be when it comes to joins. When I first learned MySQL, I used joins a lot. Then I discovered how slow they are, and switched to n+1 in the code instead. But, recently, I&apos;ve been moving back to joins, because MySQL is now a heck of a lot better at handling them than it was when I first started using it.&lt;/p&gt;\n\n&lt;p&gt;These days, a simple join on a properly indexed set of tables is rarely a problem, in performance terms. And if it does give a performance hit, then the use of index hints often solves them.&lt;/p&gt;\n\n&lt;p&gt;This is discussed here by one of the MySQL development team:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jorgenloland.blogspot.co.uk/2013/02/dbt-3-q3-6-x-performance-in-mysql-5610.html&quot; rel=&quot;noreferrer&quot;&gt;http://jorgenloland.blogspot.co.uk/2013/02/dbt-3-q3-6-x-performance-in-mysql-5610.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So the summary is: If you&apos;ve been avoiding joins in the past because of MySQL&apos;s abysmal performance with them, then try again on the latest versions. You&apos;ll probably be pleasantly surprised.&lt;/p&gt;\n    ","\n&lt;p&gt;We moved away from the ORM in Django because of this problem. Basically, if you try and do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for p in person:\n    print p.car.colour\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The ORM will happily return all people (typically as instances of a Person object), but then it will need to query the car table for each Person.&lt;/p&gt;\n\n&lt;p&gt;A simple and very effective approach to this is something I call &quot;&lt;strong&gt;fanfolding&lt;/strong&gt;&quot;, which avoids the nonsensical idea that query results from a relational database should map back to the original tables from which the query is composed.&lt;/p&gt;\n\n&lt;p&gt;Step 1: Wide select&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  select * from people_car_colour; # this is a view or sql function\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will return something like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  p.id | p.name | p.telno | car.id | car.type | car.colour\n  -----+--------+---------+--------+----------+-----------\n  2    | jones  | 2145    | 77     | ford     | red\n  2    | jones  | 2145    | 1012   | toyota   | blue\n  16   | ashby  | 124     | 99     | bmw      | yellow\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Step 2: Objectify&lt;/p&gt;\n\n&lt;p&gt;Suck the results into a generic object creator with an argument to split after the third item. This means that &quot;jones&quot; object won&apos;t be made more than once.&lt;/p&gt;\n\n&lt;p&gt;Step 3: Render&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for p in people:\n    print p.car.colour # no more car queries\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;http://campbell-lange.net/company/articles/dbwrapper/&quot; rel=&quot;noreferrer&quot;&gt;this web page&lt;/a&gt; for an implementation of &lt;strong&gt;fanfolding&lt;/strong&gt; for python.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://web.archive.org/web/20160310145416/http://www.realsolve.co.uk/site/tech/hib-tip-pitfall.php?name=why-lazy&quot; rel=&quot;noreferrer&quot;&gt;Here&apos;s a good description of the problem&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Now that you understand the problem it can typically be avoided by doing a join fetch in your query. This basically forces the fetch of the lazy loaded object so the data is retrieved in one query instead of n+1 queries.  Hope this helps.&lt;/p&gt;\n    ","\n&lt;p&gt;Suppose you have COMPANY and EMPLOYEE. COMPANY has many EMPLOYEES (i.e. EMPLOYEE has a field COMPANY_ID).&lt;/p&gt;\n\n&lt;p&gt;In some O/R configurations, when you have a mapped Company object and go to access its Employee objects, the O/R tool will do one select for every employee, wheras if you were just doing things in straight SQL, you could &lt;code&gt;select * from employees where company_id = XX&lt;/code&gt;.  Thus N (# of employees) plus 1 (company)&lt;/p&gt;\n\n&lt;p&gt;This is how the initial versions of EJB Entity Beans worked.  I believe things like Hibernate have done away with this, but I&apos;m not too sure.  Most tools usually include info as to their strategy for mapping.&lt;/p&gt;\n    ","\n&lt;p&gt;Check Ayende post on the topic: &lt;a href=&quot;http://ayende.com/blog/1328/combating-the-select-n-1-problem-in-nhibernate&quot; rel=&quot;nofollow noreferrer&quot;&gt;Combating the Select N + 1 Problem In NHibernate&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Basically, when using an ORM like NHibernate or EntityFramework, if you have a one-to-many (master-detail) relationship, and want to list all the details per each master record, you have to make N + 1 query calls to the database, &quot;N&quot; being the number of master records: 1 query to get all the master records, and N queries, one per master record, to get all the details per master record.&lt;/p&gt;\n\n&lt;p&gt;More database query calls  more latency time  decreased application/database performance.&lt;/p&gt;\n\n&lt;p&gt;However, ORMs have options to avoid this problem, mainly using JOINs.&lt;/p&gt;\n    ","\n&lt;p&gt;It is much faster to issue 1 query which returns 100 results than to issue 100 queries which each return 1 result.&lt;/p&gt;\n    ","\n&lt;p&gt;In my opinion the article written in &lt;a href=&quot;http://www.realsolve.co.uk/site/tech/hib-tip-pitfall.php?name=why-lazy&quot; rel=&quot;noreferrer&quot;&gt;Hibernate Pitfall: Why Relationships Should Be Lazy&lt;/a&gt; is exactly opposite of real N+1 issue is.&lt;/p&gt;\n\n&lt;p&gt;If you need correct explanation please refer &lt;a href=&quot;http://docs.jboss.org/hibernate/core/3.3/reference/en/html/performance.html#performance-fetching&quot; rel=&quot;noreferrer&quot;&gt;Hibernate - Chapter 19: Improving Performance - Fetching Strategies&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Select fetching (the default) is\n  extremely vulnerable to N+1 selects\n  problems, so we might want to enable\n  join fetching&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;The supplied link has a very simply example of the n + 1 problem. If you apply it to Hibernate it&apos;s basically talking about the same thing. When you query for an object, the entity is loaded but any associations (unless configured otherwise) will be lazy loaded. Hence one query for the root objects and another query to load the associations for each of these. 100 objects returned means one initial query and then 100 additional queries to get the association for each, n + 1.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://pramatr.com/2009/02/05/sql-n-1-selects-explained/&quot; rel=&quot;noreferrer&quot;&gt;http://pramatr.com/2009/02/05/sql-n-1-selects-explained/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;N+1 select issue is a pain, and it makes sense to detect such cases in unit tests.\nI have developed a small library for verifying the number of queries executed by a given test method or just an arbitrary block of code - &lt;a href=&quot;https://github.com/bedrin/jdbc-sniffer&quot; rel=&quot;noreferrer&quot;&gt;JDBC Sniffer&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Just add a special JUnit rule to your test class and place annotation with expected number of queries on your test methods:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@Rule\npublic final QueryCounter queryCounter = new QueryCounter();\n\n@Expectation(atMost = 3)\n@Test\npublic void testInvokingDatabase() {\n    // your JDBC or JPA code\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;N+1 problem in Hibernate &amp;amp; Spring Data JPA&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;N+1 problem is a performance issue in Object Relational Mapping that fires multiple select queries (N+1 to be exact, where N = number of records in table) in database for a single select query at application layer. Hibernate &amp;amp; Spring Data JPA provides multiple ways to catch and address this performance problem.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;What is N+1 Problem?&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;To understand N+1 problem, lets consider with a scenario. Lets say we have a collection of &lt;em&gt;User&lt;/em&gt; objects mapped to &lt;em&gt;DB_USER&lt;/em&gt; table in database, and each user has collection or &lt;em&gt;Role&lt;/em&gt; mapped to &lt;em&gt;DB_ROLE&lt;/em&gt; table using a joining table &lt;em&gt;DB_USER_ROLE&lt;/em&gt;. At the ORM level a &lt;strong&gt;User&lt;/strong&gt; has &lt;strong&gt;many to many&lt;/strong&gt; relationship with &lt;strong&gt;Role&lt;/strong&gt;.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Entity Model\n@Entity\n@Table(name = &quot;DB_USER&quot;)\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.AUTO)\n    private Long id;\n    private String name;\n\n    @ManyToMany(fetch = FetchType.LAZY)                   \n    private Set&amp;lt;Role&amp;gt; roles;\n    //Getter and Setters \n }\n\n@Entity\n@Table(name = &quot;DB_ROLE&quot;)\npublic class Role {\n\n    @Id\n    @GeneratedValue(strategy= GenerationType.AUTO)\n    private Long id;\n\n    private String name;\n    //Getter and Setters\n }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;A user can have many roles. Roles are loaded Lazily.&lt;/strong&gt; Now lets say we want to &lt;em&gt;fetch all users from this table and print roles for each one&lt;/em&gt;. Very naive Object Relational implementation could be -\n&lt;strong&gt;UserRepository&lt;/strong&gt; with &lt;strong&gt;findAllBy&lt;/strong&gt; method&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;public interface UserRepository extends CrudRepository&amp;lt;User, Long&amp;gt; {\n\n    List&amp;lt;User&amp;gt; findAllBy();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;The equivalent SQL queries executed by ORM will be:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;First Get &lt;strong&gt;All User&lt;/strong&gt; (1)&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Select * from DB_USER;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then get &lt;strong&gt;roles for each user&lt;/strong&gt; executed N times (where N is number of users)&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Select * from DB_USER_ROLE where userid = &amp;lt;userid&amp;gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So we need &lt;strong&gt;one select for User&lt;/strong&gt; and &lt;strong&gt;N additional selects for fetching roles for each user&lt;/strong&gt;, where &lt;em&gt;N is total number of users&lt;/em&gt;. &lt;em&gt;&lt;strong&gt;This is a classic N+1 problem in ORM&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;How to identify it?&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Hibernate provide tracing option that enables SQL logging in the console/logs. &lt;em&gt;&lt;strong&gt;using logs you can easily see if hibernate is issuing N+1 queries for a given call&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;If you see multiple entries for SQL for a given select query, then there are high chances that its due to N+1 problem.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;N+1 Resolution&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;At SQL level&lt;/strong&gt;, what ORM needs to achieve to avoid N+1 is to &lt;em&gt;fire a query that joins the two tables and get the combined results in single query&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;Fetch Join SQL that retrieves everything (user and roles) in Single Query&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;OR Plain SQL&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;select user0_.id, role2_.id, user0_.name, role2_.name, roles1_.user_id, roles1_.roles_id from db_user user0_ left outer join db_user_roles roles1_ on user0_.id=roles1_.user_id left outer join db_role role2_ on roles1_.roles_id=role2_.id\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Hibernate &amp;amp; Spring Data JPA provide mechanism to solve the N+1 ORM issue.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;1. Spring Data JPA Approach:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;If we are using Spring Data JPA, then we have two options to achieve this - using &lt;em&gt;&lt;strong&gt;EntityGraph&lt;/strong&gt;&lt;/em&gt; or using &lt;em&gt;&lt;strong&gt;select query with fetch join.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;public interface UserRepository extends CrudRepository&amp;lt;User, Long&amp;gt; {\n\n    List&amp;lt;User&amp;gt; findAllBy();             \n\n    @Query(&quot;SELECT p FROM User p LEFT JOIN FETCH p.roles&quot;)  \n    List&amp;lt;User&amp;gt; findWithoutNPlusOne();\n\n    @EntityGraph(attributePaths = {&quot;roles&quot;})                \n    List&amp;lt;User&amp;gt; findAll();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;N+1 queries are issued at database level using left join fetch, we resolve the N+1 problem using attributePaths, Spring Data JPA avoids N+1 problem&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;2. Hibernate Approach:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;If its pure Hibernate, then the following solutions will work.&lt;/p&gt;\n&lt;p&gt;Using &lt;strong&gt;HQL&lt;/strong&gt; :&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;from User u *join fetch* u.roles roles roles\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Using &lt;strong&gt;Criteria&lt;/strong&gt; API:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Criteria criteria = session.createCriteria(User.class);\ncriteria.setFetchMode(&quot;roles&quot;, FetchMode.EAGER);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;All these approaches work similar and they issue a similar database query with left join fetch&lt;/p&gt;\n    ","\n&lt;p&gt;The issue as others have stated more elegantly is that you either have a Cartesian product of the OneToMany columns or you&apos;re doing N+1 Selects. Either possible gigantic resultset or chatty with the database, respectively.&lt;/p&gt;\n\n&lt;p&gt;I&apos;m surprised this isn&apos;t mentioned but this how I have gotten around this issue... &lt;strong&gt;I make a semi-temporary ids table&lt;/strong&gt;. &lt;a href=&quot;https://stackoverflow.com/a/11119642/318174&quot;&gt;I also do this when you have the &lt;code&gt;IN ()&lt;/code&gt; clause limitation&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;This doesn&apos;t work for all cases (probably not even a majority) but it works particularly well if you have a lot of child objects such that the Cartesian product will get out of hand (ie lots of &lt;code&gt;OneToMany&lt;/code&gt; columns the number of results will be a multiplication of the columns) and its more of a batch like job.&lt;/p&gt;\n\n&lt;p&gt;First you insert your parent object ids as batch into an ids table.\nThis batch_id is something we generate in our app and hold onto.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;INSERT INTO temp_ids \n    (product_id, batch_id)\n    (SELECT p.product_id, ? \n    FROM product p ORDER BY p.product_id\n    LIMIT ? OFFSET ?);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now for each &lt;code&gt;OneToMany&lt;/code&gt; column you just do a &lt;code&gt;SELECT&lt;/code&gt; on the ids table &lt;code&gt;INNER JOIN&lt;/code&gt;ing  the child table with a &lt;code&gt;WHERE batch_id=&lt;/code&gt; (or vice versa). You just want to make sure you order by the id column as it will make merging result columns easier (otherwise you will need a HashMap/Table for the entire result set which may not be that bad).&lt;/p&gt;\n\n&lt;p&gt;Then you just periodically clean the ids table.&lt;/p&gt;\n\n&lt;p&gt;This also works particularly well if the user selects say 100 or so distinct items for some sort of bulk processing. Put the 100 distinct ids in the temporary table.&lt;/p&gt;\n\n&lt;p&gt;Now the number of queries you are doing is by the number of OneToMany columns.&lt;/p&gt;\n    ","\n&lt;p&gt;Without going into tech stack implementation details, architecturally speaking there are at least two solutions to N + 1 Problem:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Have Only 1 - big query - with Joins. This makes a lot of information be transported from the database to the application layer, especially if there are multiple child records. The typical result of a database is a set of rows, not graph of objects (there are solutions to that with different DB systems)&lt;/li&gt;\n&lt;li&gt;Have Two(or more for more children needed to be joined) Queries - 1 for the parent and after you have them - query by IDs the children and map them. This will minimize data transfer between the DB and APP layers.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Take Matt Solnit example, imagine that you define an association between Car and Wheels as LAZY and you need some Wheels fields. This means that after the first select, hibernate is going to do  &quot;Select * from Wheels where car_id = :id&quot; FOR EACH Car.&lt;/p&gt;\n\n&lt;p&gt;This makes the first select and more 1 select by each N car, that&apos;s why it&apos;s called n+1 problem.&lt;/p&gt;\n\n&lt;p&gt;To avoid this, make the association fetch as eager, so that hibernate loads data with a join.&lt;/p&gt;\n\n&lt;p&gt;But attention, if many times you don&apos;t access associated Wheels, it&apos;s better to keep it LAZY or change fetch type with Criteria.&lt;/p&gt;\n    ","\n&lt;h3&gt;A generalisation of N+1&lt;/h3&gt;\n&lt;p&gt;The N+1 problem is an ORM specific name of a problem where you move loops that could be reasonably executed on a server to the client. The generic problem isn&apos;t specific to ORMs, you can have it with any remote API. &lt;a href=&quot;https://blog.jooq.org/the-cost-of-jdbc-server-roundtrips/&quot; rel=&quot;nofollow noreferrer&quot;&gt;In this article, I&apos;ve shown how JDBC roundtrips are very costly&lt;/a&gt;, if you&apos;re calling an API N times instead of only 1 time. The difference in the example is whether you&apos;re calling the Oracle PL/SQL procedure:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;dbms_output.get_lines&lt;/code&gt; (call it once, receive N items)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;dbms_output.get_line&lt;/code&gt; (call it N times, receive 1 item each time)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;They&apos;re logically equivalent, but due to the latency between server and client, you&apos;re adding N latency waits to your loop, instead of waiting only once.&lt;/p&gt;\n&lt;h3&gt;The ORM case&lt;/h3&gt;\n&lt;p&gt;In fact, the ORM-y N+1 problem isn&apos;t even ORM specific either, you can achieve it by running your own queries manually as well, e.g. when you do something like this in PL/SQL:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- This loop is executed once&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; parent &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; parent) loop\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;-- This loop is executed N times&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; child &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; child &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; parent_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; parent.id) loop\n    ...\n  &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; loop;\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; loop;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It would be much better to implement this using a join (in this case):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; rec &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; parent p\n  &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; child c &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; c.parent_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p.id\n)\nloop\n  ...\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; loop;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now, the loop is executed only once, and the logic of the loop has been moved from the client (PL/SQL) to the server (SQL), which can even optimise it differently, e.g. by running a hash join (&lt;code&gt;O(N)&lt;/code&gt;) rather than a nested loop join (&lt;code&gt;O(N log N)&lt;/code&gt; with index)&lt;/p&gt;\n&lt;h3&gt;Auto-detecting N+1 problems&lt;/h3&gt;\n&lt;p&gt;If you&apos;re using JDBC, &lt;a href=&quot;https://blog.jooq.org/using-jooqs-diagnosticsconnection-to-detect-n1-queries/&quot; rel=&quot;nofollow noreferrer&quot;&gt;you could use jOOQ as a JDBC proxy behind the scenes to auto-detect your N+1 problems&lt;/a&gt;. jOOQ&apos;s parser normalises your SQL queries and caches data about consecutive executions of parent and child queries. This even works if your queries aren&apos;t exactly the same, but semantically equivalent.&lt;/p&gt;\n    ","\n&lt;p&gt;N+1 SELECT problem is really hard to spot, especially in projects with large domain, to the moment when it starts degrading the performance. Even if the problem is fixed i.e. by adding eager loading, a further development may break the solution and/or introduce N+1 SELECT problem again in other places.&lt;/p&gt;\n&lt;p&gt;I&apos;ve created open source library &lt;a href=&quot;https://github.com/adgadev/jplusone&quot; rel=&quot;nofollow noreferrer&quot;&gt;jplusone&lt;/a&gt; to address those problems in JPA based Spring Boot Java applications. The library provides two major features:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Generates reports correlating SQL statements with executions of JPA operations which triggered them and places in source code of your application which were involved in it&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre&gt;2020-10-22 18:41:43.236 DEBUG 14913 --- [           main] c.a.j.core.report.ReportGenerator        :\n    ROOT\n        com.adgadev.jplusone.test.domain.bookshop.BookshopControllerTest.shouldGetBookDetailsLazily(BookshopControllerTest.java:65)\n        com.adgadev.jplusone.test.domain.bookshop.BookshopController.getSampleBookUsingLazyLoading(BookshopController.java:31)\n        com.adgadev.jplusone.test.domain.bookshop.BookshopService.getSampleBookDetailsUsingLazyLoading [PROXY]\n            SESSION BOUNDARY\n                OPERATION [IMPLICIT]\n                    com.adgadev.jplusone.test.domain.bookshop.BookshopService.getSampleBookDetailsUsingLazyLoading(BookshopService.java:35)\n                    com.adgadev.jplusone.test.domain.bookshop.Author.getName [PROXY]\n                    com.adgadev.jplusone.test.domain.bookshop.Author [FETCHING ENTITY]\n                        STATEMENT [READ]\n                            select [...] from\n                                author author0_\n                                left outer join genre genre1_ on author0_.genre_id=genre1_.id\n                            where\n                                author0_.id=1\n                OPERATION [IMPLICIT]\n                    com.adgadev.jplusone.test.domain.bookshop.BookshopService.getSampleBookDetailsUsingLazyLoading(BookshopService.java:36)\n                    com.adgadev.jplusone.test.domain.bookshop.Author.countWrittenBooks(Author.java:53)\n                    com.adgadev.jplusone.test.domain.bookshop.Author.books [FETCHING COLLECTION]\n                        STATEMENT [READ]\n                            select [...] from\n                                book books0_\n                            where\n                                books0_.author_id=1\n&lt;/pre&gt;\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;Provides API which allows to write tests checking how effectively your application is using JPA (i.e. assert amount of lazy loading operations )&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@SpringBootTest&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LazyLoadingTest&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Autowired&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; JPlusOneAssertionContext assertionContext;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Autowired&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; SampleService sampleService;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Test&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;shouldBusinessCheckOperationAgainstJPlusOneAssertionRule&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;JPlusOneAssertionRule&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;rule&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JPlusOneAssertionRule\n                .within().lastSession()\n                .shouldBe().noImplicitOperations().exceptAnyOf(exclusions -&amp;gt; exclusions\n                        .loadingEntity(Author.class).times(atMost(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;))\n                        .loadingCollection(Author.class, &lt;span class=&quot;hljs-string&quot;&gt;&quot;books&quot;&lt;/span&gt;)\n                );\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// trigger business operation which you wish to be asserted against the rule,&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// i.e. calling a service or sending request to your API controller&lt;/span&gt;\n        sampleService.executeBusinessOperation();\n\n        rule.check(assertionContext);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"page":"31","randomQuestions":[{"title":"What's the simplest way to print a Java array?","slug":"what's-the-simplest-way-to-print-a-java-array-1657384702397"},{"title":"What is the difference between == and equals() in Java?","slug":"what-is-the-difference-between-and-equals()-in-java-1657387729654"},{"title":"Difference between single and double quotes in Bash","slug":"difference-between-single-and-double-quotes-in-bash-1657385460827"},{"title":"Convert form data to JavaScript object with jQuery","slug":"convert-form-data-to-javascript-object-with-jquery-1657388036834"},{"title":"What does it mean to \"program to an interface\"?","slug":"what-does-it-mean-to-\"program-to-an-interface\"-1657384671665"},{"title":"\"Thinking in AngularJS\" if I have a jQuery background? [closed]","slug":"\"thinking-in-angularjs\"-if-i-have-a-jquery-background-closed-1657384761159"},{"title":"Why does \"a == x or y or z\" always evaluate to True?","slug":"why-does-\"a-x-or-y-or-z\"-always-evaluate-to-true-1657384855216"},{"title":"How to convert a factor to integer\\numeric without loss of information?","slug":"how-to-convert-a-factor-to-integernumeric-without-loss-of-information-1657387880273"},{"title":"How do I check if an array includes a value in JavaScript?","slug":"how-do-i-check-if-an-array-includes-a-value-in-javascript-1657387421185"},{"title":"Why are these constructs using pre and post-increment undefined behavior?","slug":"why-are-these-constructs-using-pre-and-post-increment-undefined-behavior-1657384520109"},{"title":"What is the difference between public, protected, package-private and private in Java?","slug":"what-is-the-difference-between-public-protected-package-private-and-private-in-java-1657387376262"},{"title":"How do I sort a dictionary by value?","slug":"how-do-i-sort-a-dictionary-by-value-1657385485049"},{"title":"What is JSONP, and why was it created?","slug":"what-is-jsonp-and-why-was-it-created-1657387770563"},{"title":"Order Bars in ggplot2 bar graph","slug":"order-bars-in-ggplot2-bar-graph-1657388099080"},{"title":"Why does Tkinter image not show up if created in a function?","slug":"why-does-tkinter-image-not-show-up-if-created-in-a-function-1657387388233"},{"title":"Is floating point math broken?","slug":"is-floating-point-math-broken-1657384238910"},{"title":"How do I profile a Python script?","slug":"how-do-i-profile-a-python-script-1657388346692"},{"title":"Is List<Dog> a subclass of List<Animal>? Why are Java generics not implicitly polymorphic?","slug":"is-listlessdoggreater-a-subclass-of-listlessanimalgreater-why-are-java-generics-not-implicitly-polymorphic-1657384766724"},{"title":"What is the difference between a definition and a declaration?","slug":"what-is-the-difference-between-a-definition-and-a-declaration-1657387851618"},{"title":"How do I set, clear, and toggle a single bit?","slug":"how-do-i-set-clear-and-toggle-a-single-bit-1657388227052"}]},"__N_SSG":true}