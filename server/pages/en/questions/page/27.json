{"pageProps":{"data":{"count":610,"rows":[{"id":480,"title":"Make container shrink-to-fit child elements as they wrap","slug":"make-container-shrink-to-fit-child-elements-as-they-wrap-1657388134549","postType":"QUESTION","createdAt":"2022-07-09T17:35:34.000Z","updatedAt":"2022-07-09T17:35:34.000Z","tags":[]},{"id":479,"title":"How to center an element horizontally and vertically","slug":"how-to-center-an-element-horizontally-and-vertically-1657388132330","postType":"QUESTION","createdAt":"2022-07-09T17:35:32.000Z","updatedAt":"2022-07-09T17:35:32.000Z","tags":[]},{"id":478,"title":"AsyncTask Android example","slug":"asynctask-android-example-1657388127898","postType":"QUESTION","createdAt":"2022-07-09T17:35:27.000Z","updatedAt":"2022-07-09T17:35:27.000Z","tags":[{"id":2418,"name":"android-asynctask","slug":"android-asynctask","createdAt":"2022-07-09T17:35:28.000Z","updatedAt":"2022-07-09T17:35:28.000Z","Questions_Tags":{"questionId":478,"tagId":2418}}]},{"id":477,"title":"How to create RecyclerView with multiple view types","slug":"how-to-create-recyclerview-with-multiple-view-types-1657388121512","postType":"QUESTION","createdAt":"2022-07-09T17:35:21.000Z","updatedAt":"2022-07-09T17:35:21.000Z","tags":[{"id":2416,"name":"android-recyclerview","slug":"android-recyclerview","createdAt":"2022-07-09T17:35:21.000Z","updatedAt":"2022-07-09T17:35:21.000Z","Questions_Tags":{"questionId":477,"tagId":2416}}]},{"id":476,"title":"Use of 'prototype' vs. 'this' in JavaScript?","slug":"use-of-'prototype'-vs.-'this'-in-javascript-1657388117307","postType":"QUESTION","createdAt":"2022-07-09T17:35:17.000Z","updatedAt":"2022-07-09T17:35:17.000Z","tags":[]}]},"answers":{"476":["\n&lt;p&gt;The examples have very different outcomes.&lt;/p&gt;\n\n&lt;p&gt;Before looking at the differences, the following should be noted:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;A constructor&apos;s &lt;em&gt;prototype&lt;/em&gt; provides a way to share methods and values among instances via the instance&apos;s private &lt;code&gt;[[Prototype]]&lt;/code&gt; property.&lt;/li&gt;\n&lt;li&gt;A function&apos;s &lt;em&gt;this&lt;/em&gt; is set by how the function is called or by the use of &lt;em&gt;bind&lt;/em&gt; (not discussed here). Where a function is called on an object (e.g. &lt;code&gt;myObj.method()&lt;/code&gt;) then &lt;em&gt;this&lt;/em&gt; within the method references the object. Where &lt;em&gt;this&lt;/em&gt; is not set by the call or by the use of &lt;em&gt;bind&lt;/em&gt;, it defaults to the global object (window in a browser) or in strict mode, remains undefined.&lt;/li&gt;\n&lt;li&gt;JavaScript is an object-oriented language, i.e. most values are objects, including functions. (Strings, numbers, and booleans are &lt;em&gt;not&lt;/em&gt; objects.)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;So here are the snippets in question:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n    };\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, variable &lt;code&gt;A&lt;/code&gt; is assigned a value that is a reference to a function.  When that function is called using &lt;code&gt;A()&lt;/code&gt;, the function&apos;s &lt;em&gt;this&lt;/em&gt; isn&apos;t set by the call so it defaults to the global object and the expression &lt;code&gt;this.x&lt;/code&gt; is effective &lt;code&gt;window.x&lt;/code&gt;. The result is that a reference to the function expression on the right-hand side is assigned to &lt;code&gt;window.x&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;In the case of:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { };\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;something very different occurs.  In the first line, variable &lt;code&gt;A&lt;/code&gt; is assigned a reference to a function.  In JavaScript, all functions objects have a &lt;em&gt;prototype&lt;/em&gt; property by default so there is no separate code to create an &lt;em&gt;A.prototype&lt;/em&gt; object.&lt;/p&gt;\n\n&lt;p&gt;In the second line, &lt;em&gt;A.prototype.x&lt;/em&gt; is assigned a reference to a function. This will create an &lt;em&gt;x&lt;/em&gt; property if it doesn&apos;t exist, or assign a new value if it does. So the difference with the first example in which object&apos;s &lt;em&gt;x&lt;/em&gt; property is involved in the expression.&lt;/p&gt;\n\n&lt;p&gt;Another example is below.  It&apos;s similar to the first one (and maybe what you meant to ask about):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n    };\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this example, the &lt;code&gt;new&lt;/code&gt; operator has been added before the function expression so that the function is called as a constructor. When called with &lt;code&gt;new&lt;/code&gt;, the function&apos;s &lt;em&gt;this&lt;/em&gt; is set to reference a new Object whose private &lt;code&gt;[[Prototype]]&lt;/code&gt; property is set to reference the constructor&apos;s public &lt;em&gt;prototype&lt;/em&gt;. So in the assignment statement, the &lt;code&gt;x&lt;/code&gt; property will be created on this new object. When called as a constructor, a function returns its &lt;em&gt;this&lt;/em&gt; object by default, so there is no need for a separate &lt;code&gt;return this;&lt;/code&gt; statement.&lt;/p&gt;\n\n&lt;p&gt;To check that &lt;em&gt;A&lt;/em&gt; has an &lt;em&gt;x&lt;/em&gt; property:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(A.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// function () {&lt;/span&gt;\n                 &lt;span class=&quot;hljs-comment&quot;&gt;//   //do something&lt;/span&gt;\n                 &lt;span class=&quot;hljs-comment&quot;&gt;// };&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is an uncommon use of &lt;em&gt;new&lt;/em&gt; since the only way to reference the constructor is via &lt;em&gt;A.constructor&lt;/em&gt;. It would be much more common to do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n    };\n};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another way of achieving a similar result is to use an immediately invoked function expression:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n    };\n}());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, &lt;code&gt;A&lt;/code&gt; assigned the return value of calling the function on the right-hand side. Here again, since &lt;em&gt;this&lt;/em&gt; is not set in the call, it will reference the global object and &lt;code&gt;this.x&lt;/code&gt; is effective &lt;code&gt;window.x&lt;/code&gt;. Since the function doesn&apos;t return anything, &lt;code&gt;A&lt;/code&gt; will have a value of &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;These differences between the two approaches also manifest if you&apos;re serializing and de-serializing your Javascript objects to/from JSON. Methods defined on an object&apos;s prototype are not serialized when you serialize the object, which can be convenient when for example you want to serialize just the data portions of an object, but not it&apos;s methods:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;objectsOwnProperties&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;are serialized&quot;&lt;/span&gt;;\n};\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;prototypeProperties&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;are NOT serialized&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; instance = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(instance.&lt;span class=&quot;hljs-property&quot;&gt;prototypeProperties&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;are NOT serialized&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(instance)); \n&lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;objectsOwnProperties&quot;:&quot;are serialized&quot;} &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Related questions&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/186244/what-does-it-mean-that-javascript-is-a-prototype-based-language&quot;&gt;&lt;strong&gt;What does it mean that JavaScript is a prototypal language?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/235360/what-is-the-scope-of-a-function-in-javascriptecmascript&quot;&gt;&lt;strong&gt;What is the scope of a function in JavaScript?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3127429/javascript-this-keyword&quot;&gt;How does the &quot;this&quot; keyword work?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Sidenote:&lt;/strong&gt; There may not be any significant memory savings between the two approaches, however using the prototype to share methods and properties will likely use less memory than each instance having its own copy.&lt;/p&gt;\n\n&lt;p&gt;JavaScript isn&apos;t a low-level language.  It may not be very valuable to think of prototyping or other inheritance patterns as a way to explicitly change the way memory is allocated.&lt;/p&gt;\n    ","\n&lt;p&gt;As others have said the first version, using &quot;this&quot; results in every instance of the class A having its own independent copy of function method &quot;x&quot;.  Whereas using &quot;prototype&quot; will mean that each instance of class A will use the same copy of method &quot;x&quot;.&lt;/p&gt;\n\n&lt;p&gt;Here is some code to show this subtle difference:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// x is a method assigned to the object using &quot;this&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;); };\n};\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;updateX&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; value &lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( value ); }\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a2 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();\na1.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Displays &apos;A&apos;&lt;/span&gt;\na2.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Also displays &apos;A&apos;&lt;/span&gt;\na1.&lt;span class=&quot;hljs-title function_&quot;&gt;updateX&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Z&apos;&lt;/span&gt;);\na1.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Displays &apos;Z&apos;&lt;/span&gt;\na2.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Still displays &apos;A&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Here x is a method assigned to the object using &quot;prototype&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; B = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { };\nB.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;); };\n\nB.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;updateX&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; value &lt;/span&gt;) {\n    B.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( value ); }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;B&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b2 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;B&lt;/span&gt;();\nb1.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Displays &apos;B&apos;&lt;/span&gt;\nb2.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Also displays &apos;B&apos;&lt;/span&gt;\nb1.&lt;span class=&quot;hljs-title function_&quot;&gt;updateX&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y&apos;&lt;/span&gt;);\nb1.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Displays &apos;Y&apos;&lt;/span&gt;\nb2.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// Also displays &apos;Y&apos; because by using prototype we have changed it for all instances&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As others have mentioned, there are various reasons to choose one method or the other.  My sample is just meant to clearly demonstrate the difference.&lt;/p&gt;\n    ","\n&lt;p&gt;Take these 2 examples:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hey&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;from A&apos;&lt;/span&gt;) } };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;vs.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {}\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hey&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;from prototype&apos;&lt;/span&gt;) };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Most people here (especially the top-rated answers) tried to explain how they are different without explaining WHY. I think this is wrong and if you understand the fundamentals first, the difference will become obvious. Let&apos;s try to explain the fundamentals first...&lt;/p&gt;\n\n&lt;p&gt;a) A function is an object in JavaScript. EVERY object in JavaScript gets an internal property (meaning, you can&apos;t access it like other properties, except maybe in browsers like Chrome), often referred to as &lt;code&gt;__proto__&lt;/code&gt; (you can actually type &lt;code&gt;anyObject.__proto__&lt;/code&gt; in Chrome to see what it references. This is just that, a property, nothing more. A property in JavaScript = a variable inside an object, nothing more. What do variables do? They point to things.&lt;/p&gt;\n\n&lt;p&gt;So what does this &lt;code&gt;__proto__&lt;/code&gt; property points to? Well, usually another object (we&apos;ll explain why later). The only way to force JavaScript for the &lt;code&gt;__proto__&lt;/code&gt; property to NOT point to another object is to use &lt;code&gt;var newObj = Object.create(null)&lt;/code&gt;. Even if you do this, the &lt;code&gt;__proto__&lt;/code&gt; property STILL exists as a property of the object,  just it doesn&apos;t point to another object, it points to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s where most people get confused:&lt;/p&gt;\n\n&lt;p&gt;When you create a new function in JavaScript (which is an object as well, remember?), the moment it is defined, JavaScript automatically creates a new property on that function called &lt;code&gt;prototype&lt;/code&gt;. Try it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = [];\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// undefined&lt;/span&gt;\nA = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {}\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// {} // got created when function() {} was defined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;A.prototype&lt;/code&gt; is TOTALLY DIFFERENT from the &lt;code&gt;__proto__&lt;/code&gt; property. In our example, &apos;A&apos; now has TWO properties called &apos;prototype&apos; and &lt;code&gt;__proto__&lt;/code&gt; . This is a big confusion for people. &lt;code&gt;prototype&lt;/code&gt; and &lt;code&gt;__proto__&lt;/code&gt; properties are in no way related, they&apos;re separate things pointing to separate values.&lt;/p&gt;\n\n&lt;p&gt;You may wonder: Why does JavaScript has &lt;code&gt;__proto__&lt;/code&gt; property created on every single object? Well, one word: &lt;strong&gt;delegation&lt;/strong&gt;. When you call a property on an object and the object doesn&apos;t have it, then JavaScript looks for the object referenced by &lt;code&gt;__proto__&lt;/code&gt; to see if it maybe has it. If it doesn&apos;t have it, then it looks at that object&apos;s &lt;code&gt;__proto__&lt;/code&gt; property and so on...until the chain ends. Thus the name &lt;strong&gt;prototype chain&lt;/strong&gt;. Of course, if &lt;code&gt;__proto__&lt;/code&gt; doesn&apos;t point to an object and instead points to &lt;code&gt;null&lt;/code&gt;, well tough luck, JavaScript realizes that and will return you &lt;code&gt;undefined&lt;/code&gt; for the property.&lt;/p&gt;\n\n&lt;p&gt;You may also wonder, why does JavaScript creates a property called &lt;code&gt;prototype&lt;/code&gt; for a function when you define the function? Because it tries to fool you, yes &lt;strong&gt;fool you&lt;/strong&gt; that it works like class-based languages. &lt;/p&gt;\n\n&lt;p&gt;Let&apos;s go on with our example and create an &quot;object&quot; out of &lt;code&gt;A&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There&apos;s something happening in the background when this thing happened. &lt;code&gt;a1&lt;/code&gt; is an ordinary variable which was assigned a new, empty object.&lt;/p&gt;\n\n&lt;p&gt;The fact that you used the operator &lt;code&gt;new&lt;/code&gt; before a function invocation &lt;code&gt;A()&lt;/code&gt; did something ADDITIONAL in the background. The &lt;code&gt;new&lt;/code&gt; keyword created a new object which now references &lt;code&gt;a1&lt;/code&gt; and that object is empty. Here&apos;s what happening additionally:&lt;/p&gt;\n\n&lt;p&gt;We said that on each function definition there&apos;s a new property created called &lt;code&gt;prototype&lt;/code&gt; (which you can access it, unlike with the &lt;code&gt;__proto__&lt;/code&gt; property) created? Well, that property is being used now.&lt;/p&gt;\n\n&lt;p&gt;So we&apos;re now at the point where we have a freshly baked empty &lt;code&gt;a1&lt;/code&gt; object. We said that all objects in JavaScript have an internal &lt;code&gt;__proto__&lt;/code&gt; property which points to something (&lt;code&gt;a1&lt;/code&gt; also has it), whether it&apos;s null or another object. What the &lt;code&gt;new&lt;/code&gt; operator does is that it sets that &lt;code&gt;__proto__&lt;/code&gt; property to point to the function&apos;s &lt;code&gt;prototype&lt;/code&gt; property. Read that again. It&apos;s basically this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;a1.&lt;span class=&quot;hljs-property&quot;&gt;__proto__&lt;/span&gt; = A.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We said that &lt;code&gt;A.prototype&lt;/code&gt; is nothing more than an empty object (unless we change it to something else before defining &lt;code&gt;a1&lt;/code&gt;). So now basically &lt;code&gt;a1.__proto__&lt;/code&gt; points to the same thing &lt;code&gt;A.prototype&lt;/code&gt; points to, which is that empty object. They both point to the same object which was created when this line happened:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {} &lt;span class=&quot;hljs-comment&quot;&gt;// JS: cool. let&apos;s also create A.prototype pointing to empty {}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, there&apos;s another thing happening when &lt;code&gt;var a1 = new A()&lt;/code&gt; statement is processed. Basically &lt;code&gt;A()&lt;/code&gt; is executed and if A is something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hey&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;from A&apos;&lt;/span&gt;) } };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All that stuff inside &lt;code&gt;function() { }&lt;/code&gt; is going to execute. When you reach the &lt;code&gt;this.hey..&lt;/code&gt; line, &lt;code&gt;this&lt;/code&gt; is changed to &lt;code&gt;a1&lt;/code&gt; and you get this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;a1.&lt;span class=&quot;hljs-property&quot;&gt;hey&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;from A&apos;&lt;/span&gt;) }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I won&apos;t cover why &lt;code&gt;this&lt;/code&gt; changes to &lt;code&gt;a1&lt;/code&gt; but &lt;a href=&quot;https://stackoverflow.com/a/80478/1085998&quot;&gt;this is a great answer&lt;/a&gt; to learn more.&lt;/p&gt;\n\n&lt;p&gt;So to summarize, when you do &lt;code&gt;var a1 = new A()&lt;/code&gt; there are 3 things happening in the background:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;A totally new empty object is created and assigned to &lt;code&gt;a1&lt;/code&gt;. &lt;code&gt;a1 = {}&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;a1.__proto__&lt;/code&gt; property is assigned to point at the same thing as &lt;code&gt;A.prototype&lt;/code&gt; points to (another empty object {} )&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The function &lt;code&gt;A()&lt;/code&gt; is being executed with &lt;code&gt;this&lt;/code&gt; set to the new, empty object created in step 1 (read the answer I referenced above as to why &lt;code&gt;this&lt;/code&gt; changes to &lt;code&gt;a1&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Now, let&apos;s try to create another object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a2 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Steps 1,2,3 will repeat. Do you notice something? The key word is &lt;strong&gt;repeat.&lt;/strong&gt; Step 1: &lt;code&gt;a2&lt;/code&gt; will be a new empty object, step 2: its &lt;code&gt;__proto__&lt;/code&gt; property will point to the same thing &lt;code&gt;A.prototype&lt;/code&gt; points to and most importantly, step 3: function &lt;code&gt;A()&lt;/code&gt; is AGAIN executed, which means that &lt;code&gt;a2&lt;/code&gt; will get &lt;code&gt;hey&lt;/code&gt; property containing a function. &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; have two SEPARATE properties named &lt;code&gt;hey&lt;/code&gt; which point to 2 SEPARATE functions! We now have duplicate functions in same two different objects doing the same thing, oops...You can imagine the memory implications of this if we have 1000 objects created with &lt;code&gt;new A&lt;/code&gt;, after all functions declarations take more memory than something like the number 2. So how do we prevent this?&lt;/p&gt;\n\n&lt;p&gt;Remember why the &lt;code&gt;__proto__&lt;/code&gt; property exists on every object? So that if you retrieve the &lt;code&gt;yoMan&lt;/code&gt; property on &lt;code&gt;a1&lt;/code&gt; (which doesn&apos;t exist), its &lt;code&gt;__proto__&lt;/code&gt; property will be consulted, which if it&apos;s an object (and is most cases it is), it will check if it contains &lt;code&gt;yoMan&lt;/code&gt;, and if it doesn&apos;t, it will consult that object&apos;s &lt;code&gt;__proto__&lt;/code&gt; etc. If it does, it will take that property value and display it to you.&lt;/p&gt;\n\n&lt;p&gt;So someone decided to use this fact + the fact that when you create &lt;code&gt;a1&lt;/code&gt;, its &lt;code&gt;__proto__&lt;/code&gt; property points to the same (empty) object &lt;code&gt;A.prototype&lt;/code&gt; points to and do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {}\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hey&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;from prototype&apos;&lt;/span&gt;) };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Cool! Now, when you create &lt;code&gt;a1&lt;/code&gt;, it again goes through all of the 3 steps above, and in step 3, it doesn&apos;t do anything, since &lt;code&gt;function A()&lt;/code&gt; has nothing to execute. And if we do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;a1.&lt;span class=&quot;hljs-property&quot;&gt;hey&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It will see that &lt;code&gt;a1&lt;/code&gt; does not contain &lt;code&gt;hey&lt;/code&gt; and it will check its &lt;code&gt;__proto__&lt;/code&gt; property object to see if it has it, which is the case.&lt;/p&gt;\n\n&lt;p&gt;With this approach we eliminate the part from step 3 where functions are duplicated on each new object creation. Instead of &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; having a separate &lt;code&gt;hey&lt;/code&gt; property, now NONE of them has it. Which, I guess, you figured out yourself by now. That&apos;s the nice thing...if you understand &lt;code&gt;__proto__&lt;/code&gt; and &lt;code&gt;Function.prototype&lt;/code&gt;, questions like these will be pretty obvious.&lt;/p&gt;\n\n&lt;p&gt;NOTE: Some people tend to not call the internal Prototype property as &lt;code&gt;__proto__&lt;/code&gt;, I&apos;ve used this name through the post to distinguish it clearly to the &lt;code&gt;Functional.prototype&lt;/code&gt; property as two different things.&lt;/p&gt;\n    ","\n&lt;p&gt;In most cases they are essentially the same, but the second version saves memory because there is only one instance of the function instead of a separate function for each object.&lt;/p&gt;\n\n&lt;p&gt;A reason to use the first form is to access &quot;private members&quot;. For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; private_var = ...;\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; private_var;\n    };\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setX&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;new_x&lt;/span&gt;) {\n        private_var = new_x;\n    };\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because of javascript&apos;s scoping rules, private_var is available to the function assigned to this.x, but not outside the object.&lt;/p&gt;\n    ","\n&lt;p&gt;The first example changes the interface for that object only. The second example changes the interface for all object of that class.&lt;/p&gt;\n    ","\n&lt;p&gt;The ultimate problem with using &lt;code&gt;this&lt;/code&gt; instead of &lt;code&gt;prototype&lt;/code&gt; is that when overriding a method, the constructor of the base class will still refer to the overridden method. Consider this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setText&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n        text = value + &lt;span class=&quot;hljs-string&quot;&gt;&quot; BaseClass!&quot;&lt;/span&gt;;\n    };\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getText&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; text;\n    };\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// This always calls BaseClass.setText()&lt;/span&gt;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;SubClass&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// setText is not overridden yet,&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// so the constructor calls the superclass&apos; method&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Keeping a reference to the superclass&apos; method&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; super_setText = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setText&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Overriding&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setText&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n        super_setText.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;SubClass says: &quot;&lt;/span&gt; + value);\n    };\n};\n&lt;span class=&quot;hljs-title class_&quot;&gt;SubClass&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; subClass = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SubClass&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(subClass.&lt;span class=&quot;hljs-title function_&quot;&gt;getText&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// Hello BaseClass!&lt;/span&gt;\n\nsubClass.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// setText is already overridden&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(subClass.&lt;span class=&quot;hljs-title function_&quot;&gt;getText&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// SubClass says: Hello BaseClass!&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;versus:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// This calls the overridden method&lt;/span&gt;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setText&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;text&lt;/span&gt; = value + &lt;span class=&quot;hljs-string&quot;&gt;&quot; BaseClass!&quot;&lt;/span&gt;;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getText&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;text&lt;/span&gt;;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;SubClass&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// setText is already overridden, so this works as expected&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n};\n&lt;span class=&quot;hljs-title class_&quot;&gt;SubClass&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;SubClass&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setText&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title class_&quot;&gt;BaseClass&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setText&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;SubClass says: &quot;&lt;/span&gt; + value);\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; subClass = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SubClass&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(subClass.&lt;span class=&quot;hljs-title function_&quot;&gt;getText&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// SubClass says: Hello BaseClass!&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you think this is not a problem, then it depends on whether you can live without private variables, and whether you are experienced enough to know a leak when you see one. Also, having to put the constructor logic after the method definitions is inconvenient.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;param1&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; privateVar = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Private variable&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Calling this.setPrivateVar(param1) here would be an error&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setPrivateVar&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n        privateVar = value;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;setPrivateVar value set to: &quot;&lt;/span&gt; + value);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// param1 is still here, possible memory leak&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;setPrivateVar has param1: &quot;&lt;/span&gt; + param1);\n    };\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// The constructor logic starts here possibly after&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// many lines of code that define methods&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setPrivateVar&lt;/span&gt;(param1); &lt;span class=&quot;hljs-comment&quot;&gt;// This is valid&lt;/span&gt;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// setPrivateVar value set to: 0&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// setPrivateVar has param1: 0&lt;/span&gt;\n\na.&lt;span class=&quot;hljs-title function_&quot;&gt;setPrivateVar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//setPrivateVar value set to: 1&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//setPrivateVar has param1: 0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;versus:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;param1&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setPublicVar&lt;/span&gt;(param1); &lt;span class=&quot;hljs-comment&quot;&gt;// This is valid&lt;/span&gt;\n};\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setPublicVar&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;publicVar&lt;/span&gt; = value; &lt;span class=&quot;hljs-comment&quot;&gt;// No private variable&lt;/span&gt;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\na.&lt;span class=&quot;hljs-title function_&quot;&gt;setPublicVar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(a.&lt;span class=&quot;hljs-property&quot;&gt;publicVar&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Every object is linked to a prototype object. When trying to access a property that does not exist, JavaScript will look in the object&apos;s prototype object for that property and return it if it exists.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;prototype&lt;/code&gt; property of a function constructor refers to the prototype object of all instances created with that function when using &lt;code&gt;new&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;In your first example, you are adding a property &lt;code&gt;x&lt;/code&gt; to each instance created with the &lt;code&gt;A&lt;/code&gt; function.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n    };\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();    &lt;span class=&quot;hljs-comment&quot;&gt;// constructor function gets executed&lt;/span&gt;\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// newly created object gets an &apos;x&apos; property&lt;/span&gt;\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// which is a function&lt;/span&gt;\na.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();              &lt;span class=&quot;hljs-comment&quot;&gt;// and can be called like this&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the second example you are adding a property to the prototype object that all the instances created with &lt;code&gt;A&lt;/code&gt; point to.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { };\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;x&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;();    &lt;span class=&quot;hljs-comment&quot;&gt;// constructor function gets executed&lt;/span&gt;\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// which does nothing in this example&lt;/span&gt;\n\na.&lt;span class=&quot;hljs-title function_&quot;&gt;x&lt;/span&gt;();              &lt;span class=&quot;hljs-comment&quot;&gt;// you are trying to access the &apos;x&apos; property of an instance of &apos;A&apos;&lt;/span&gt;\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// which does not exist&lt;/span&gt;\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// so JavaScript looks for that property in the prototype object&lt;/span&gt;\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// that was defined using the &apos;prototype&apos; property of the constructor&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;In conclusion, in the first example &lt;strong&gt;a copy of the function is assigned to each instance&lt;/strong&gt;. In the second example &lt;strong&gt;a single copy of the function is shared by all instances&lt;/strong&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;What&apos;s the difference? =&amp;gt; A lot.&lt;/p&gt;\n\n&lt;p&gt;I think, the &lt;code&gt;this&lt;/code&gt; version is used to enable encapsulation, i.e. data hiding.\nIt helps to manipulate private variables.&lt;/p&gt;\n\n&lt;p&gt;Let us look at the following example:   &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdultPerson&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; age;\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setAge&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// some housekeeping&lt;/span&gt;\n    age = val &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; &amp;amp;&amp;amp; val;\n  };\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getAge&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; age;\n  };\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isValid&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !!age;\n  };\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, the &lt;code&gt;prototype&lt;/code&gt; structure can be applied as following:&lt;/p&gt;\n\n&lt;p&gt;Different adults have different ages, but all of the adults get the same rights.&lt;br&gt;\nSo, we add it using prototype, rather than this.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;AdultPerson&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getRights&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Should be valid&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isValid&lt;/span&gt;() &amp;amp;&amp;amp; [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Booze&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Drive&apos;&lt;/span&gt;];\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Lets look at the implementation now.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdultPerson&lt;/span&gt;;\np1.&lt;span class=&quot;hljs-title function_&quot;&gt;setAge&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// ( age = false )&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(p1.&lt;span class=&quot;hljs-title function_&quot;&gt;getRights&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// false ( Kid alert! )&lt;/span&gt;\np1.&lt;span class=&quot;hljs-title function_&quot;&gt;setAge&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// ( age = 19 )&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(p1.&lt;span class=&quot;hljs-title function_&quot;&gt;getRights&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// [&apos;Booze&apos;, &apos;Drive&apos;] ( Welcome AdultPerson )&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p2 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdultPerson&lt;/span&gt;;\np2.&lt;span class=&quot;hljs-title function_&quot;&gt;setAge&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;);    \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(p2.&lt;span class=&quot;hljs-title function_&quot;&gt;getRights&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// The same getRights() method, *** not a new copy of it ***&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope this helps.&lt;/p&gt;\n    ","\n&lt;p&gt;I know this has been answered to death but I&apos;d like to show an actual example of speed differences.&lt;/p&gt;\n&lt;p&gt;Function directly on object:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ExampleFn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;print&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Calling print! &quot;&lt;/span&gt;);\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objects = [];\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;time&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;2000000&lt;/span&gt;; i++) {\n    objects.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ExampleFn&lt;/span&gt;());\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;timeEnd&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//x: 1151.960693359375ms&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Function on prototype:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ExampleFn&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n}\n&lt;span class=&quot;hljs-title class_&quot;&gt;ExampleFn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;print&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Calling print!&quot;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objects = [];\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;time&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;2000000&lt;/span&gt;; i++) {\n    objects.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ExampleFn&lt;/span&gt;());\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;timeEnd&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//x: 617.866943359375ms&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Here we&apos;re creating 2,000,000 new objects with a &lt;code&gt;print&lt;/code&gt; method in Chrome. We&apos;re storing every object in an array. Putting &lt;code&gt;print&lt;/code&gt; on the prototype takes about 1/2 as long.&lt;/p&gt;\n    ","\n&lt;p&gt;Prototype is the template of the class; which applies to all future instances of it. Whereas this is the particular instance of the object.&lt;/p&gt;\n    ","\n&lt;p&gt;Let me give you a more comprehensive answer that I learned during a JavaScript training course.&lt;/p&gt;\n\n&lt;p&gt;Most answers mentioned the difference already, i.e. when prototyping the function is shared with all (future) instances. Whereas declaring the function in the class will create a copy for each instance.&lt;/p&gt;\n\n&lt;p&gt;In general there is no right or wrong, it&apos;s more a matter of taste or a design decision depending on your requirements. The prototype however is the technique that is used to develop in an object oriented manner, as I hope you&apos;ll see at the end of this answer.&lt;/p&gt;\n\n&lt;p&gt;You showed two patterns in your question. I will try to explain two more and try to explain the differences if relevant. Feel free to edit/extend.\nIn all examples it is about a car object that has a location and can move.&lt;/p&gt;\n\n&lt;h1&gt;Object Decorator pattern&lt;/h1&gt;\n\n&lt;p&gt;Not sure if this pattern is still relevant nowadays, but it exists. And it is good to know about it.\nYou simply pass an object and a property to the decorator function. The decorator returns the object with property and method.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; carlike = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, loc&lt;/span&gt;) {\n    obj.&lt;span class=&quot;hljs-property&quot;&gt;loc&lt;/span&gt; = loc;\n    obj.&lt;span class=&quot;hljs-property&quot;&gt;move&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        obj.&lt;span class=&quot;hljs-property&quot;&gt;loc&lt;/span&gt;++;\n    };\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; amy = &lt;span class=&quot;hljs-title function_&quot;&gt;carlike&lt;/span&gt;({}, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\namy.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ben = &lt;span class=&quot;hljs-title function_&quot;&gt;carlike&lt;/span&gt;({}, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;);\nben.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Functional Classes&lt;/h1&gt;\n\n&lt;p&gt;A function in JavaScript is a specialised object. In addition to being invoked, a function can store properties like any other object.&lt;/p&gt;\n\n&lt;p&gt;In this case &lt;code&gt;Car&lt;/code&gt; is a &lt;strong&gt;function&lt;/strong&gt; (&lt;strong&gt;also&lt;/strong&gt; think &lt;strong&gt;object&lt;/strong&gt;) that can be invoked as you are used to do. It has a property &lt;code&gt;methods&lt;/code&gt; (which is an object with a &lt;code&gt;move&lt;/code&gt; function). When &lt;code&gt;Car&lt;/code&gt; is invoked the &lt;code&gt;extend&lt;/code&gt; function is called, which does some magic, and extends the &lt;code&gt;Car&lt;/code&gt; function (think object) with the methods defined within &lt;code&gt;methods&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;This example, though different, comes closest to the first example in the question.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;loc&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;span class=&quot;hljs-attr&quot;&gt;loc&lt;/span&gt;: loc};\n    &lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;(obj, &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;methods&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;methods&lt;/span&gt; = {\n    move : &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;loc&lt;/span&gt;++;\n    }\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; amy = &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\namy.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ben = &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;);\nben.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Prototypal Classes&lt;/h1&gt;\n\n&lt;p&gt;The first two patterns allow a discussion of using techniques to define  shared methods or using methods that are defined inline in the body of the constructor. In both cases every instance has its own &lt;code&gt;move&lt;/code&gt; function.&lt;/p&gt;\n\n&lt;p&gt;The prototypal pattern does not lend itself well to the same examination, because function sharing via a prototype delegation is the very goal for the prototypal pattern. As others pointed out, it is expected to have a better memory footprint.&lt;/p&gt;\n\n&lt;p&gt;However there is one point interesting to know:\nEvery &lt;code&gt;prototype&lt;/code&gt; object has has a convenience property &lt;code&gt;constructor&lt;/code&gt;, which points back to the function (think object) it came attached to.&lt;/p&gt;\n\n&lt;p&gt;Concerning the last three lines:&lt;/p&gt;\n\n&lt;p&gt;In this example &lt;code&gt;Car&lt;/code&gt; links to the &lt;code&gt;prototype&lt;/code&gt; object, which links via &lt;code&gt;constructor&lt;/code&gt; to &lt;code&gt;Car&lt;/code&gt; itself, i.e. &lt;code&gt;Car.prototype.constructor&lt;/code&gt; is &lt;code&gt;Car&lt;/code&gt; itself. This allows you to figure out which constructor function built a certain object.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;amy.constructor&lt;/code&gt;&apos;s lookup fails and thus is delegated to &lt;code&gt;Car.prototype&lt;/code&gt;, which does have the constructor property. And so &lt;code&gt;amy.constructor&lt;/code&gt; is &lt;code&gt;Car&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Furthermore, &lt;code&gt;amy&lt;/code&gt; is an &lt;code&gt;instanceof&lt;/code&gt; &lt;code&gt;Car&lt;/code&gt;. The &lt;code&gt;instanceof&lt;/code&gt; operator works by seeing if the right operand&apos;s prototype object (&lt;code&gt;Car&lt;/code&gt;) can be found anywhere in the left operand&apos;s prototype (&lt;code&gt;amy&lt;/code&gt;) chain.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;loc&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;);\n    obj.&lt;span class=&quot;hljs-property&quot;&gt;loc&lt;/span&gt; = loc;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;move&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;loc&lt;/span&gt;++;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; amy = &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\namy.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ben = &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;);\nben.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(amy.&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(amy &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Some developers can be confused in the beginning. See below example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Dog&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {&lt;span class=&quot;hljs-attr&quot;&gt;legs&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;bark&lt;/span&gt;: alert};\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fido = &lt;span class=&quot;hljs-title class_&quot;&gt;Dog&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(fido &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Dog&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;instanceof&lt;/code&gt; operator returns &lt;code&gt;false&lt;/code&gt;, because &lt;code&gt;Dog&lt;/code&gt;&apos;s prototype cannot be found anywhere in &lt;code&gt;fido&lt;/code&gt;&apos;s prototype chain. &lt;code&gt;fido&lt;/code&gt; is a simple object that is created with an object literal, i.e. it just delegates to &lt;code&gt;Object.prototype&lt;/code&gt;.&lt;/p&gt;\n\n&lt;h1&gt;Pseudoclassical patterns&lt;/h1&gt;\n\n&lt;p&gt;This is really just another form of the prototypal pattern in simplified form and more familiar to do those who program in Java for example, since it uses the &lt;code&gt;new&lt;/code&gt; constructor.&lt;/p&gt;\n\n&lt;p&gt;It does the same as in the prototypal pattern really, it is just syntactic sugar overtop of the prototypal pattern.&lt;/p&gt;\n\n&lt;p&gt;However, the primary difference is that there are optimizations implemented in JavaScript engines that only apply when using the pseudoclassical pattern. Think of the pseudoclassical pattern a probably faster version of the prototypal pattern; the object relations in both examples are the same.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;loc&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;loc&lt;/span&gt; = loc;\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;move&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;loc&lt;/span&gt;++;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; amy = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\namy.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ben = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Car&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;);\nben.&lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Finally, it should not be too difficult to realize how object oriented programming can be done. There are two sections. &lt;/p&gt;\n\n&lt;p&gt;One section that defines common properties/methods in the prototype (chain).&lt;/p&gt;\n\n&lt;p&gt;And another section where you put the definitions that distinguish the objects from each other (&lt;code&gt;loc&lt;/code&gt; variable in the examples).&lt;/p&gt;\n\n&lt;p&gt;This is what allows us to apply concepts like superclass or subclass in JavaScript.&lt;/p&gt;\n\n&lt;p&gt;Feel free to add or edit. Once more complete I could make this a community wiki maybe.&lt;/p&gt;\n    ","\n&lt;p&gt;I believe that @Matthew Crumley is right.  They are &lt;em&gt;functionally&lt;/em&gt;, if not structurally, equivalent.  If you use Firebug to look at the objects that are created using &lt;code&gt;new&lt;/code&gt;, you can see that they are the same.  However, my preference would be the following.  I&apos;m guessing that it just seems more like what I&apos;m used to in C#/Java.  That is, define the class, define the fields, constructor, and methods.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; A = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {};\nA.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt; = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;_instance_var&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n\n    &lt;span class=&quot;hljs-attr&quot;&gt;initialize&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_instance_var&lt;/span&gt; = v; },\n\n    &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {  &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_instance_var&lt;/span&gt;); }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt; Didn&apos;t mean to imply that the scope of the variable was private, I was just trying to illustrate how I define my classes in javascript.  Variable name has been changed to reflect this.&lt;/p&gt;\n    ","\n&lt;p&gt;As discussed in other answers, it&apos;s really a performance consideration because the function in the prototype is shared with all of the instantiations - rather than the function being created for each instantiation.&lt;/p&gt;\n\n&lt;p&gt;I put together a jsperf to show this. There is a dramatic difference in the time it takes to instantiate the class, although it is really only relevant if you are making many instances.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsperf.com/functions-in-constructor-vs-prototype&quot; rel=&quot;noreferrer&quot;&gt;http://jsperf.com/functions-in-constructor-vs-prototype&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Think about statically typed language, things on &lt;code&gt;prototype&lt;/code&gt; are static and things on &lt;code&gt;this&lt;/code&gt; are instance related.&lt;/p&gt;\n    ","\n&lt;p&gt;When you use prototype, the function will only be loaded only once into memory (independently on the amount of objects you create) and you can override the function whenever you want.&lt;/p&gt;\n    "],"477":["\n&lt;p&gt;Yes, it&apos;s possible. Just implement &lt;a href=&quot;https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#getItemViewType(int)&quot;&gt;getItemViewType()&lt;/a&gt;, and take care of the &lt;code&gt;viewType&lt;/code&gt; parameter in &lt;code&gt;onCreateViewHolder()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;So you do something like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.Adapter&amp;lt;RecyclerView.ViewHolder&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n        ...\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ViewHolder0&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt;{\n        ...\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder2&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n        ...\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ViewHolder2&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt;{\n        ...\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Just as an example, return 0 or 2 depending on position&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Note that unlike in ListView adapters, types don&apos;t have to be contiguous&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; position % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n         &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (viewType) {\n             &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder0&lt;/span&gt;(...);\n             &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder2&lt;/span&gt;(...);\n             ...\n         }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; RecyclerView.ViewHolder holder, &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (holder.getItemViewType()) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:\n                &lt;span class=&quot;hljs-type&quot;&gt;ViewHolder0&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;viewHolder0&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (ViewHolder0)holder;\n                ...\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:\n                &lt;span class=&quot;hljs-type&quot;&gt;ViewHolder2&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;viewHolder2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (ViewHolder2)holder;\n                ...\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If the layouts for view types are only a few and binding logics are simple, follow &lt;a href=&quot;https://stackoverflow.com/questions/26245139/how-to-create-recyclerview-with-multiple-view-types/26245463#26245463&quot;&gt;Anton&apos;s solution&lt;/a&gt;. But the code will be messy if you need to manage the complex layouts and binding logics.&lt;/p&gt;\n&lt;p&gt;I believe the following solution will be useful for someone who need to handle complex view types.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Base DataBinder class&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataBinder&lt;/span&gt;&amp;lt;T &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder&amp;gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; DataBindAdapter mDataBindAdapter;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DataBinder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(DataBindAdapter dataBindAdapter)&lt;/span&gt; {\n        mDataBindAdapter = dataBindAdapter;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; T &lt;span class=&quot;hljs-title function_&quot;&gt;newViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T holder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;;\n\n......\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The functions needed to define in this class are pretty much same as the adapter class when creating the single view type.&lt;/p&gt;\n&lt;p&gt;For each view type, create the class by extending this DataBinder.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Sample DataBinder class&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Sample1Binder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataBinder&lt;/span&gt;&amp;lt;Sample1Binder.ViewHolder&amp;gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;String&amp;gt; mDataSet = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Sample1Binder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(DataBindAdapter dataBindAdapter)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(dataBindAdapter);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;newViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(parent.getContext()).inflate(\n            R.layout.layout_sample1, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder&lt;/span&gt;(view);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewHolder holder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mDataSet.get(position);\n        holder.mTitleText.setText(title);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mDataSet.size();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setDataSet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(List&amp;lt;String&amp;gt; dataSet)&lt;/span&gt; {\n        mDataSet.addAll(dataSet);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n        TextView mTitleText;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(view);\n            mTitleText = (TextView) view.findViewById(R.id.title_type1);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In order to manage DataBinder classes, create an adapter class.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Base DataBindAdapter class&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataBindAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.Adapter&amp;lt;RecyclerView.ViewHolder&amp;gt; {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getDataBinder(viewType).newViewHolder(parent);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RecyclerView.ViewHolder viewHolder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;binderPosition&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getBinderPosition(position);\n        getDataBinder(viewHolder.getItemViewType()).bindViewHolder(viewHolder, binderPosition);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &amp;lt;T &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataBinder&lt;/span&gt;&amp;gt; T &lt;span class=&quot;hljs-title function_&quot;&gt;getDataBinder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getPosition&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(DataBinder binder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; binderPosition)&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getBinderPosition&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt;;\n\n......\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Create the class by extending this base class, and then instantiate DataBinder classes and override abstract methods&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;getItemCount &lt;br&gt;\nReturn the total item count of DataBinders&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;getItemViewType &lt;br&gt;\nDefine the mapping logic between the adapter position and view type.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;getDataBinder &lt;br&gt;\nReturn the DataBinder instance based on the view type&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;getPosition &lt;br&gt;\nDefine convert logic to the adapter position from the position in the specified DataBinder&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;getBinderPosition &lt;br&gt;\nDefine convert logic to the position in the DataBinder from the adapter position&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;I left a more detailed solution and samples on GitHub, so please refer to &lt;em&gt;&lt;a href=&quot;https://github.com/yqritc/RecyclerView-MultipleViewTypesAdapter&quot; rel=&quot;noreferrer&quot;&gt;RecyclerView-MultipleViewTypeAdapter&lt;/a&gt;&lt;/em&gt; if you need.&lt;/p&gt;\n    ","\n&lt;p&gt;The below is not pseudocode. I have tested it and it has worked for me.&lt;/p&gt;\n&lt;p&gt;I wanted to create a headerview in my recyclerview and then display a list of pictures below the header which the user can click on.&lt;/p&gt;\n&lt;p&gt;I used a few switches in my code and don&apos;t know if that is the most efficient way to do this, so feel free to give your comments:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder{\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//These are the general elements in the RecyclerView&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; TextView place;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ImageView pics;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//This is the Header on the Recycler (viewType = 0)&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; TextView name, description;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//This constructor would switch what to findViewBy according to the type of viewType&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(v);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                name = (TextView) v.findViewById(R.id.name);\n                decsription = (TextView) v.findViewById(R.id.description);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n                place = (TextView) v.findViewById(R.id.place);\n                pics = (ImageView) v.findViewById(R.id.pics);\n            }\n        }\n    }\n\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent,\n                                         &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt;\n    {\n        View v;\n        ViewHolder vh;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// create a new view&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (viewType) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot;&gt;//This would be the header view in my Recycler&lt;/span&gt;\n                v = LayoutInflater.from(parent.getContext())\n                    .inflate(R.layout.recyclerview_welcome, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n                vh = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder&lt;/span&gt;(v,viewType);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;  vh;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot;&gt;//This would be the normal list with the pictures of the places in the world&lt;/span&gt;\n                v = LayoutInflater.from(parent.getContext())\n                        .inflate(R.layout.recyclerview_picture, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n                vh = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder&lt;/span&gt;(v, viewType);\n                v.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener(){\n\n                    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n                        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(mContext, nextActivity.class);\n                        intent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ListNo&quot;&lt;/span&gt;,mRecyclerView.getChildPosition(v));\n                        mContext.startActivity(intent);\n                    }\n                });\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vh;\n        }\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Overridden so that I can display custom rows in the recyclerview&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;viewType&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Default is 1&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (position == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) viewType = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//If zero, it will be a header view&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; viewType;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewHolder holder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//position == 0 means it&apos;s the info header view on the Recycler&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (position == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n            holder.name.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n                &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n                    Toast.makeText(mContext,&lt;span class=&quot;hljs-string&quot;&gt;&quot;name clicked&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();\n                }\n            });\n            holder.description.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n                &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n                    Toast.makeText(mContext,&lt;span class=&quot;hljs-string&quot;&gt;&quot;description clicked&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();\n                }\n            });\n            &lt;span class=&quot;hljs-comment&quot;&gt;//This means it is beyond the headerview now as it is no longer 0. For testing purposes, I&apos;m alternating between two pics for now&lt;/span&gt;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (position &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n           holder.place.setText(mDataset[position]);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (position % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n               holder.pics.setImageDrawable(mContext.getResources().getDrawable(R.drawable.pic1));\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (position % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n                holder.pics.setImageDrawable(mContext.getResources().getDrawable(R.drawable.pic2));\n            }\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;Create a different ViewHolder for different layouts&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/nvYCw.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/nvYCw.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;RecyclerView can have any number of viewholders you want, but for better readability lets see how to create one with two ViewHolders.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;It can be done in three simple steps&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;ol&gt;\n&lt;li&gt;Override &lt;code&gt;public int getItemViewType(int position)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Return different ViewHolders based on the ViewType in &lt;code&gt;onCreateViewHolder()&lt;/code&gt; method&lt;/li&gt;\n&lt;li&gt;Populate View based on the itemViewType in &lt;code&gt;onBindViewHolder()&lt;/code&gt; method&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Here is a small code snippet:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;YourListAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.Adapter&amp;lt;RecyclerView.ViewHolder&amp;gt; {\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;LAYOUT_ONE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;LAYOUT_TWO&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt;\n   {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(position==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; LAYOUT_ONE;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; LAYOUT_TWO;\n   }\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n\n      &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n      RecyclerView.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;viewHolder&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(viewType==LAYOUT_ONE)\n      {\n          view = LayoutInflater.from(parent.getContext()).inflate(R.layout.one,parent,&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n          viewHolder = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolderOne&lt;/span&gt;(view);\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n      {\n          view = LayoutInflater.from(parent.getContext()).inflate(R.layout.two,parent,&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n          viewHolder= &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolderTwo&lt;/span&gt;(view);\n      }\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; viewHolder;\n   }\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RecyclerView.ViewHolder holder, &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(holder.getItemViewType() == LAYOUT_ONE)\n      {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Typecast Viewholder&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Set Viewholder properties&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Add any click listener if any&lt;/span&gt;\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;ViewHolderOne&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;vaultItemHolder&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (ViewHolderOne) holder;\n        vaultItemHolder.name.setText(displayText);\n        vaultItemHolder.name.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n           &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n           &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n            .......\n           }\n         });\n       }\n   }\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;//****************  VIEW HOLDER 1 ******************//&lt;/span&gt;\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolderOne&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; TextView name;\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ViewHolderOne&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n         &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n         name = (TextView)itemView.findViewById(R.id.displayName);\n     }\n   }\n\n\n   &lt;span class=&quot;hljs-comment&quot;&gt;//****************  VIEW HOLDER 2 ******************//&lt;/span&gt;\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolderTwo&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ViewHolderTwo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n         &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n\n        ..... Do something\n      }\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;getItemViewType(int position) is the key.&lt;/h3&gt;\n&lt;p&gt;In my opinion, the starting point to create this kind of recyclerView is the knowledge of this method. Since this method is optional to override, it is not visible in RecylerView class by default which in turn makes many developers (including me) wonder where to begin.&lt;/p&gt;\n&lt;p&gt;Once you know that this method exists, creating such RecyclerView would be a cakewalk.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Let&apos;s see one example to prove my point. If you want to show two layout\nat alternate positions do this&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt;\n{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(position%&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)       &lt;span class=&quot;hljs-comment&quot;&gt;// Even position&lt;/span&gt;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; LAYOUT_ONE;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;                   &lt;span class=&quot;hljs-comment&quot;&gt;// Odd position&lt;/span&gt;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; LAYOUT_TWO;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Relevant Links:&lt;/h3&gt;\n&lt;p&gt;Check out &lt;a href=&quot;https://github.com/rohitksingh/OLA_Play_Music_App/blob/master/OlaPlay/app/src/main/java/rohksin/com/olaplay/Adapters/MusicAdapter.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;the project&lt;/a&gt; where I have implemented this.&lt;/p&gt;\n    ","\n&lt;p&gt;Yes, it is possible.&lt;/p&gt;\n\n&lt;p&gt;Write a generic view holder:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GenericViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;GenericViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setDataOnView&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then create your view holders and make them extend the GenericViewHolder. For example, this one:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;     &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SectionViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GenericViewHolder&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; View mView;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; TextView dividerTxtV;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;SectionViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n        mView = itemView;\n        dividerTxtV = (TextView) mView.findViewById(R.id.dividerTxtV);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setDataOnView&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            String title= sections.get(position);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(title!= &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n                &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.dividerTxtV.setText(title);\n        }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CustomError&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Error!&quot;&lt;/span&gt;+e.getMessage(), &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, e);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then the RecyclerView.Adapter class will look like this one:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyClassRecyclerViewAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.Adapter&amp;lt;MyClassRecyclerViewAdapter.GenericViewHolder&amp;gt; {\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n     &lt;span class=&quot;hljs-comment&quot;&gt;// depends on your problem&lt;/span&gt;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (position) {\n         &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; : &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; VIEW_TYPE1;\n         &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; : &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; VIEW_TYPE2;\n         ...\n     }\n}\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; GenericViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt;  {\n    View view;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(viewType == VIEW_TYPE1){\n        view = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout1, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SectionViewHolder&lt;/span&gt;(view);\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( viewType == VIEW_TYPE2){\n        view = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout2, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;OtherViewHolder&lt;/span&gt;(view);\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Cont. other view holders ...&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n   }\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(GenericViewHolder holder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n    holder.setDataOnView(position);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a complete sample to show a RecyclerView with two types, the view type decided by the object.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Class model&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;open &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerViewItem&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SectionItem&lt;/span&gt;(val title: String) : RecyclerViewItem()\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ContentItem&lt;/span&gt;(val name: String, val number: Int) : RecyclerViewItem()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Adapter&lt;/strong&gt; code&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;const &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;VIEW_TYPE_SECTION&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nconst &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;VIEW_TYPE_ITEM&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UserAdapter&lt;/span&gt; : RecyclerView.Adapter&amp;lt;RecyclerView.ViewHolder&amp;gt;() {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; listOf&amp;lt;RecyclerViewItem&amp;gt;()\n\n    override fun &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(position: Int)&lt;/span&gt;: Int {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data[position] is SectionItem) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; VIEW_TYPE_SECTION\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; VIEW_TYPE_ITEM\n    }\n\n    override fun &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;: Int {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; data.size\n    }\n\n    override fun &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(parent: ViewGroup, viewType: Int)&lt;/span&gt;: RecyclerView.ViewHolder {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType == VIEW_TYPE_SECTION) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; SectionViewHolder(\n                LayoutInflater.from(parent.context).inflate(R.layout.item_user_section, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;)\n            )\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ContentViewHolder(\n            LayoutInflater.from(parent.context).inflate(R.layout.item_user_content, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;)\n        )\n    }\n\n    override fun &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(holder: RecyclerView.ViewHolder, position: Int)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data[position]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder is SectionViewHolder &amp;amp;&amp;amp; item is SectionItem) {\n            holder.bind(item)\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder is ContentViewHolder &amp;amp;&amp;amp; item is ContentItem) {\n            holder.bind(item)\n        }\n    }\n\n    internal inner &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SectionViewHolder&lt;/span&gt;(itemView: View) : RecyclerView.ViewHolder(itemView) {\n        fun &lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(item: SectionItem)&lt;/span&gt; {\n            itemView.text_section.text = item.title\n        }\n    }\n\n    internal inner &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ContentViewHolder&lt;/span&gt;(itemView: View) : RecyclerView.ViewHolder(itemView) {\n        fun &lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(item: ContentItem)&lt;/span&gt; {\n            itemView.text_name.text = item.name\n            itemView.text_number.text = item.number.toString()\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;item_user_section.xml&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;\n&amp;lt;TextView xmlns:android=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;\n    android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/text_section&quot;&lt;/span&gt;\n    android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n    android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n    android:background=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#eee&quot;&lt;/span&gt;\n    android:padding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;16dp&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;item_user_content.xml&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;\n&amp;lt;LinearLayout xmlns:android=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;\n    xmlns:tools=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;\n    android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n    android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n    android:orientation=&lt;span class=&quot;hljs-string&quot;&gt;&quot;horizontal&quot;&lt;/span&gt;\n    android:padding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;32dp&quot;&lt;/span&gt;&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/text_name&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        tools:text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/text_number&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt; /&amp;gt;\n\n&amp;lt;/LinearLayout&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Example using&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;dataSet&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; arrayListOf&amp;lt;RecyclerViewItem&amp;gt;(\n    SectionItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A1&quot;&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;11&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;13&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;),\n\n    SectionItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A2&quot;&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;21&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;22&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;),\n\n    SectionItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A3&quot;&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;31&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;32&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;33&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;),\n    ContentItem(&lt;span class=&quot;hljs-string&quot;&gt;&quot;33&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;),\n)\n\nrecyclerAdapter.data = dataSet\nrecyclerAdapter.notifyDataSetChanged()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;img src=&quot;https://i.stack.imgur.com/ihugr.png&quot; height=&quot;300&quot;&gt;\n    ","\n&lt;p&gt;Yes, it is possible.&lt;/p&gt;\n&lt;p&gt;In your adapter getItemViewType Layout like this ....&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MultiViewTypeAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.Adapter {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ArrayList&amp;lt;Model&amp;gt;dataSet;\n    Context mContext;\n    &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; total_types;\n    MediaPlayer mPlayer;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fabStateVolume&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TextTypeViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n        TextView txtType;\n        CardView cardView;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;TextTypeViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.txtType = (TextView) itemView.findViewById(R.id.type);\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.cardView = (CardView) itemView.findViewById(R.id.card_view);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ImageTypeViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n        TextView txtType;\n        ImageView image;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ImageTypeViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.txtType = (TextView) itemView.findViewById(R.id.type);\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.image = (ImageView) itemView.findViewById(R.id.background);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AudioTypeViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n        TextView txtType;\n        FloatingActionButton fab;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;AudioTypeViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.txtType = (TextView) itemView.findViewById(R.id.type);\n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.fab = (FloatingActionButton) itemView.findViewById(R.id.fab);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;MultiViewTypeAdapter&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ArrayList&amp;lt;Model&amp;gt;data, Context context)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.dataSet = data;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.mContext = context;\n        total_types = dataSet.size();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n\n        View view;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (viewType) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; Model.TEXT_TYPE:\n                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.text_type, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TextTypeViewHolder&lt;/span&gt;(view);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; Model.IMAGE_TYPE:\n                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.image_type, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ImageTypeViewHolder&lt;/span&gt;(view);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; Model.AUDIO_TYPE:\n                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.audio_type, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AudioTypeViewHolder&lt;/span&gt;(view);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (dataSet.get(position).type) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; Model.TEXT_TYPE;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; Model.IMAGE_TYPE;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; Model.AUDIO_TYPE;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; RecyclerView.ViewHolder holder, &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; listPosition)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-type&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; dataSet.get(listPosition);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (object != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (object.type) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; Model.TEXT_TYPE:\n                    ((TextTypeViewHolder) holder).txtType.setText(object.text);\n\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; Model.IMAGE_TYPE:\n                    ((ImageTypeViewHolder) holder).txtType.setText(object.text);\n                    ((ImageTypeViewHolder) holder).image.setImageResource(object.data);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; Model.AUDIO_TYPE:\n\n                    ((AudioTypeViewHolder) holder).txtType.setText(object.text);\n\n            }\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dataSet.size();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For the reference link: &lt;em&gt;&lt;a href=&quot;https://www.journaldev.com/12372/android-recyclerview-example&quot; rel=&quot;nofollow noreferrer&quot;&gt;Android RecyclerView Example  Multiple ViewTypes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Simpler than ever, forget about ViewTypes. It is not recommended to use multiple viewtypes inside one adapter. It will mess the code and break the single responsibility principle since now the adapter needs to handle logic to know which view to inflate.&lt;/p&gt;\n&lt;p&gt;Now imagine working in large teams where each team has to work in one of those viewtypes features. It will be a mess to touch the same adapter by all the teams that work in the different viewtypes. This is solved using ConcatAdapter where you isolate the adapters. Code them one by one and then just merge them inside one view.&lt;/p&gt;\n&lt;p&gt;From &lt;code&gt;recyclerview:1.2.0-alpha04&lt;/code&gt; you now can use &lt;code&gt;ConcatAdapter&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;If you need a view with different viewTypes, you can just write the Adapters for each section and just use ConcatAdapter to merge all of them inside one recyclerview.&lt;/p&gt;\n&lt;h2&gt;ConcatAdapter&lt;/h2&gt;\n&lt;p&gt;This image shows three different viewtypes that one recyclerview has, header, content and footer.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/qdlpN.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/qdlpN.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;You only create one adapter for each section, and then just use ConcatAdapter to merge them inside one recyclerview:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;val firstAdapter: FirstAdapter = \nval secondAdapter: SecondAdapter = \nval thirdAdapter: ThirdAdapter = \n&lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;concatAdapter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ConcatAdapter(firstAdapter, secondAdapter,\n                                  thirdAdapter)\nrecyclerView.adapter = concatAdapter\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/nnWnq.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/nnWnq.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;That&apos;s all you need to know. If you want to handle loading state, for example remove the last adapter after some loading happened, you can use &lt;a href=&quot;https://github.com/googlecodelabs/android-paging/pull/46/files&quot; rel=&quot;noreferrer&quot;&gt;LoadState&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Following &lt;a href=&quot;https://stackoverflow.com/questions/26245139/how-to-create-recyclerview-with-multiple-view-types/26245463#26245463&quot;&gt;Anton&apos;s solution&lt;/a&gt;, I came up with this &lt;code&gt;ViewHolder&lt;/code&gt; which holds/handles/delegates different type of layouts.&lt;/p&gt;\n&lt;p&gt;But I am not sure if the replacing new layout would work when the recycling view&apos;s &lt;code&gt;ViewHolder&lt;/code&gt; is not the type of the data roll in.&lt;/p&gt;\n&lt;p&gt;So basically,\n&lt;code&gt;onCreateViewHolder(ViewGroup parent, int viewType)&lt;/code&gt; is only called when new view layout is needed;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;getItemViewType(int position)&lt;/code&gt; will be called for the &lt;code&gt;viewType&lt;/code&gt;;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;onBindViewHolder(ViewHolder holder, int position)&lt;/code&gt; is always called when recycling the view (new data is brought in and try to display with that &lt;code&gt;ViewHolder&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;So when &lt;code&gt;onBindViewHolder&lt;/code&gt; is called it needs to be put in the right view layout and update the &lt;code&gt;ViewHolder&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;TypedData&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mDataSource.get(position);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; data.type;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent,\n    &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ViewHolder.makeViewHolder(parent, viewType);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewHolder holder,\n    &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;TypedData&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mDataSource.get(position);\n    holder.updateData(data);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;///&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n    ViewGroup mParentViewGroup;\n    View mCurrentViewThisViewHolderIsFor;\n    &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; mDataType;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; TypeOneViewHolder mTypeOneViewHolder;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; TypeTwoViewHolder mTypeTwoViewHolder;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;makeViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup vwGrp,\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; dataType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getLayoutView(vwGrp, dataType);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder&lt;/span&gt;(vwGrp, v, viewType);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; View &lt;span class=&quot;hljs-title function_&quot;&gt;getLayoutView&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup vwGrp,\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; dataType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;layoutId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getLayoutId(dataType);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; LayoutInflater.from(vwGrp.getContext())\n                             .inflate(layoutId, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getLayoutId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; dataType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (dataType == TYPE_ONE) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; R.layout.type_one_layout;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (dataType == TYPE_TWO) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; R.layout.type_two_layout;\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup vwGrp, View v,\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; dataType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(v);\n        mDataType = dataType;\n        mParentViewGroup = vwGrp;\n        mCurrentViewThisViewHolderIsFor = v;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.type == TYPE_ONE) {\n            mTypeOneViewHolder = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeOneViewHolder&lt;/span&gt;(v);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.type == TYPE_TWO) {\n            mTypeTwoViewHolder = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeTwoViewHolder&lt;/span&gt;(v);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;updateData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(TypeData data)&lt;/span&gt; {\n        mDataType = data.type;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.type == TYPE_ONE) {\n            mTypeTwoViewHolder = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mTypeOneViewHolder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;newView&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getLayoutView(mParentViewGroup,\n                               data.type);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;/**\n                 *  How can I replace a new view with\n                    the view in the parent\n                    view container?\n                 */&lt;/span&gt;\n                replaceView(mCurrentViewThisViewHolderIsFor,\n                            newView);\n                mCurrentViewThisViewHolderIsFor = newView;\n\n                mTypeOneViewHolder =\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeOneViewHolder&lt;/span&gt;(newView);\n            }\n            mTypeOneViewHolder.updateDataTypeOne(data);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.type == TYPE_TWO){\n            mTypeOneViewHolder = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mTypeTwoViewHolder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;newView&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getLayoutView(mParentViewGroup,\n                               data.type);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;/**\n                 *  How can I replace a new view with\n                    the view in the parent view\n                    container?\n                 */&lt;/span&gt;\n                replaceView(mCurrentViewThisViewHolderIsFor,\n                            newView);\n                mCurrentViewThisViewHolderIsFor = newView;\n\n                mTypeTwoViewHolder =\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeTwoViewHolder&lt;/span&gt;(newView);\n            }\n            mTypeTwoViewHolder.updateDataTypeOne(data);\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;replaceView&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View currentView,\n    View newView)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;ViewGroup&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (ViewGroup)currentView.getParent();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(parent == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; parent.indexOfChild(currentView);\n    parent.removeView(currentView);\n    parent.addView(newView, index);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;ViewHolder has member mItemViewType to hold the view.&lt;/p&gt;\n&lt;p&gt;It looks like in onBindViewHolder(ViewHolder holder, int position) the ViewHolder passed in has been picked up (or created) by looked at getItemViewType(int position) to make sure it is a match, so it may not need to worry there that ViewHolder&apos;s type does not match the data[position]&apos;s type.&lt;/p&gt;\n&lt;p&gt;It looks like The recycle &lt;code&gt;ViewHolder&lt;/code&gt; is picked by type, so no warrior there.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://wiresareobsolete.com/2014/09/building-a-recyclerview-layoutmanager-part-1/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Building a RecyclerView LayoutManager  Part 1&lt;/a&gt;&lt;/em&gt; answers this question.&lt;/p&gt;\n&lt;p&gt;It gets the recycle &lt;code&gt;ViewHolder&lt;/code&gt; like:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;holder = getRecycledViewPool().getRecycledView(mAdapter.getItemViewType(offsetPosition));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or create a new one if not find recycle &lt;code&gt;ViewHolder&lt;/code&gt; of the right type.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;getRecycledView&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; ArrayList&amp;lt;ViewHolder&amp;gt; scrapHeap = mScrap.get(viewType);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (scrapHeap != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !scrapHeap.isEmpty()) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; scrapHeap.size() - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;scrap&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; scrapHeap.get(index);\n            scrapHeap.remove(index);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; scrap;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n\nView &lt;span class=&quot;hljs-title function_&quot;&gt;getViewForPosition&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position, &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; dryRun)&lt;/span&gt; {\n    ......\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;offsetPosition&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mAdapterHelper.findPositionOffset(position);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (offsetPosition &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || offsetPosition &amp;gt;= mAdapter.getItemCount()) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IndexOutOfBoundsException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Inconsistency detected. Invalid item &quot;&lt;/span&gt;\n                        + &lt;span class=&quot;hljs-string&quot;&gt;&quot;position &quot;&lt;/span&gt; + position + &lt;span class=&quot;hljs-string&quot;&gt;&quot;(offset:&quot;&lt;/span&gt; + offsetPosition + &lt;span class=&quot;hljs-string&quot;&gt;&quot;).&quot;&lt;/span&gt;\n                        + &lt;span class=&quot;hljs-string&quot;&gt;&quot;state:&quot;&lt;/span&gt; + mState.getItemCount());\n            }\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mAdapter.getItemViewType(offsetPosition);\n            &lt;span class=&quot;hljs-comment&quot;&gt;// 2) Find from scrap via stable ids, if exists&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mAdapter.hasStableIds()) {\n                holder = getScrapViewForId(mAdapter.getItemId(offsetPosition), type, dryRun);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// update position&lt;/span&gt;\n                    holder.mPosition = offsetPosition;\n                    fromScrap = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; mViewCacheExtension != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// We are NOT sending the offsetPosition because LayoutManager does not&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// know it.&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mViewCacheExtension\n                        .getViewForPositionAndType(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, position, type);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (view != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    holder = getChildViewHolder(view);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IllegalArgumentException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;getViewForPositionAndType returned&quot;&lt;/span&gt;\n                                + &lt;span class=&quot;hljs-string&quot;&gt;&quot; a view which does not have a ViewHolder&quot;&lt;/span&gt;);\n                    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder.shouldIgnore()) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IllegalArgumentException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;getViewForPositionAndType returned&quot;&lt;/span&gt;\n                                + &lt;span class=&quot;hljs-string&quot;&gt;&quot; a view that is ignored. You must call stopIgnoring before&quot;&lt;/span&gt;\n                                + &lt;span class=&quot;hljs-string&quot;&gt;&quot; returning this view.&quot;&lt;/span&gt;);\n                    }\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// fallback to recycler&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// try recycler.&lt;/span&gt;\n                &lt;span class=&quot;hljs-comment&quot;&gt;// Head to the shared pool.&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (DEBUG) {\n                    Log.d(TAG, &lt;span class=&quot;hljs-string&quot;&gt;&quot;getViewForPosition(&quot;&lt;/span&gt; + position + &lt;span class=&quot;hljs-string&quot;&gt;&quot;) fetching from shared &quot;&lt;/span&gt;\n                            + &lt;span class=&quot;hljs-string&quot;&gt;&quot;pool&quot;&lt;/span&gt;);\n                }\n                holder = getRecycledViewPool()\n                        .getRecycledView(mAdapter.getItemViewType(offsetPosition));\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                    holder.resetInternal();\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (FORCE_INVALIDATE_DISPLAY_LIST) {\n                        invalidateDisplayListInt(holder);\n                    }\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (holder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                holder = mAdapter.createViewHolder(RecyclerView.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;,\n                        mAdapter.getItemViewType(offsetPosition));\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (DEBUG) {\n                    Log.d(TAG, &lt;span class=&quot;hljs-string&quot;&gt;&quot;getViewForPosition created new ViewHolder&quot;&lt;/span&gt;);\n                }\n            }\n        }\n        &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bound&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mState.isPreLayout() &amp;amp;&amp;amp; holder.isBound()) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// do not update unless we absolutely have to.&lt;/span&gt;\n            holder.mPreLayoutPosition = position;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!holder.isBound() || holder.needsUpdate() || holder.isInvalid()) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (DEBUG &amp;amp;&amp;amp; holder.isRemoved()) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IllegalStateException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Removed holder should be bound and it should&quot;&lt;/span&gt;\n                        + &lt;span class=&quot;hljs-string&quot;&gt;&quot; come here only in pre-layout. Holder: &quot;&lt;/span&gt; + holder);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;offsetPosition&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mAdapterHelper.findPositionOffset(position);\n            mAdapter.bindViewHolder(holder, offsetPosition);\n            attachAccessibilityDelegate(holder.itemView);\n            bound = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mState.isPreLayout()) {\n                holder.mPreLayoutPosition = position;\n            }\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; ViewGroup.&lt;span class=&quot;hljs-type&quot;&gt;LayoutParams&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; holder.itemView.getLayoutParams();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; LayoutParams rvLayoutParams;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (lp == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            rvLayoutParams = (LayoutParams) generateDefaultLayoutParams();\n            holder.itemView.setLayoutParams(rvLayoutParams);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!checkLayoutParams(lp)) {\n            rvLayoutParams = (LayoutParams) generateLayoutParams(lp);\n            holder.itemView.setLayoutParams(rvLayoutParams);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            rvLayoutParams = (LayoutParams) lp;\n        }\n        rvLayoutParams.mViewHolder = holder;\n        rvLayoutParams.mPendingInvalidate = fromScrap &amp;amp;&amp;amp; bound;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; holder.itemView;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Although the selected answer is correct, I just want to further elaborate it. I found a useful &lt;a href=&quot;https://handyopinion.com/recyclerview-custom-adapter-with-multiple-view-types-in-java-android/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Custom Adapter for multiple View Types in RecyclerView&lt;/a&gt;.\nIts &lt;a href=&quot;https://handyopinion.com/custom-adapter-with-multiple-view-types-for-recyclerview-in-kotlin-android/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Kotlin version is here&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;The custom adapter is the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CustomAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.Adapter&amp;lt;RecyclerView.ViewHolder&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; Context context;\n    ArrayList&amp;lt;String&amp;gt; list; &lt;span class=&quot;hljs-comment&quot;&gt;// ArrayList of your Data Model&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;VIEW_TYPE_ONE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;VIEW_TYPE_TWO&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;CustomAdapter&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, ArrayList&amp;lt;String&amp;gt; list)&lt;/span&gt; { &lt;span class=&quot;hljs-comment&quot;&gt;// you can pass other parameters in constructor&lt;/span&gt;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.context = context;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.list = list;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n        TextView yourView;\n        ViewHolder1(&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; View itemView) {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n            yourView = itemView.findViewById(R.id.yourView); &lt;span class=&quot;hljs-comment&quot;&gt;// Initialize your All views prensent in list items&lt;/span&gt;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// This method will be called anytime a list item is created or update its data&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Do your stuff here&lt;/span&gt;\n            yourView.setText(list.get(position));\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder2&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n        TextView yourView;\n        ViewHolder2(&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; View itemView) {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n            yourView = itemView.findViewById(R.id.yourView); &lt;span class=&quot;hljs-comment&quot;&gt;// Initialize your All views prensent in list items&lt;/span&gt;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// This method will be called anytime a list item is created or update its data&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Do your stuff here&lt;/span&gt;\n            yourView.setText(list.get(position));\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n       &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType == VIEW_TYPE_ONE) {\n           &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder1&lt;/span&gt;(LayoutInflater.from(context).inflate(R.layout.your_list_item_1, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;));\n       }\n       &lt;span class=&quot;hljs-comment&quot;&gt;//if its not VIEW_TYPE_ONE then its VIEW_TYPE_TWO&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewHolder2&lt;/span&gt;(LayoutInflater.from(context).inflate(R.layout.your_list_item_2, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;));\n\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RecyclerView.ViewHolder holder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (list.get(position).type == Something) { &lt;span class=&quot;hljs-comment&quot;&gt;// Put your condition, according to your requirements&lt;/span&gt;\n            ((ViewHolder1) holder).bind(position);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            ((ViewHolder2) holder).bind(position);\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; list.size();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Here you can get decide from your model&apos;s ArrayList, which type of view you need to load. Like&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (list.get(position).type == Something) { &lt;span class=&quot;hljs-comment&quot;&gt;// Put your condition, according to your requirements&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; VIEW_TYPE_ONE;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; VIEW_TYPE_TWO;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I have a better solution which allows to create multiple view types in a declarative and type safe way. Its written in Kotlin which, by the way, is really nice.&lt;/p&gt;\n&lt;p&gt;Simple view holders for all required view types&lt;/p&gt;\n\n&lt;pre class=&quot;lang-scala s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ViewHolderMedium&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;itemView: &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;: &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt;(itemView) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; icon: &lt;span class=&quot;hljs-type&quot;&gt;ImageView&lt;/span&gt; = itemView.findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.icon) as &lt;span class=&quot;hljs-type&quot;&gt;ImageView&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; label: &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; = itemView.findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.label) as &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;There is an abstraction of adapter data item. Note that a view type is represented by a hashCode of particular view holder class (KClass in Kotlin)&lt;/p&gt;\n&lt;pre class=&quot;lang-scala s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AdapterItem&lt;/span&gt; &lt;/span&gt;{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; viewType: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;\n   fun bindViewHolder(viewHolder: &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt;)\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AdapterItemBase&amp;lt;T&amp;gt;&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;val viewHolderClass: &lt;span class=&quot;hljs-type&quot;&gt;KClass&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt;) &lt;/span&gt;: &lt;span class=&quot;hljs-type&quot;&gt;AdapterItem&lt;/span&gt; {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; viewType: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt; = viewHolderClass.hashCode()\n   &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; fun bindViewHolder(viewHolder: &lt;span class=&quot;hljs-type&quot;&gt;T&lt;/span&gt;)\n   &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; fun bindViewHolder(viewHolder: &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt;) {\n       bindViewHolder(viewHolder as &lt;span class=&quot;hljs-type&quot;&gt;T&lt;/span&gt;)\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Only &lt;code&gt;bindViewHolder&lt;/code&gt; needs to be overridden in concrete adapter item classes (type safe way).&lt;/p&gt;\n&lt;pre class=&quot;lang-scala s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AdapterItemMedium&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;val icon: &lt;span class=&quot;hljs-type&quot;&gt;Drawable&lt;/span&gt;, val label: &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;, val onClick: (&lt;/span&gt;) &lt;span class=&quot;hljs-title&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Unit&lt;/span&gt;) &lt;/span&gt;: &lt;span class=&quot;hljs-type&quot;&gt;AdapterItemBase&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;ViewHolderMedium&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-type&quot;&gt;ViewHolderMedium&lt;/span&gt;::&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; fun bindViewHolder(viewHolder: &lt;span class=&quot;hljs-type&quot;&gt;ViewHolderMedium&lt;/span&gt;) {\n        viewHolder.icon.setImageDrawable(icon)\n        viewHolder.label.setText(label)\n        viewHolder.itemView.setOnClickListener { onClick() }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;List of such &lt;code&gt;AdapterItemMedium&lt;/code&gt; objects is a data source for the adapter which actually accepts &lt;code&gt;List&amp;lt;AdapterItem&amp;gt;&lt;/code&gt;. See below.&lt;/p&gt;\n&lt;p&gt;The important part of this solution is a view holder factory which will provide fresh instances of a specific ViewHolder:&lt;/p&gt;\n&lt;pre class=&quot;lang-scala s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ViewHolderProvider&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; viewHolderFactories = hashMapOf&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Pair&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;&amp;gt;&amp;gt;()\n\n    fun provideViewHolder(viewGroup: &lt;span class=&quot;hljs-type&quot;&gt;ViewGroup&lt;/span&gt;, viewType: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;): &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; (layoutId: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;, f: &lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;) = viewHolderFactories.get(viewType)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; viewHolderFactory = f as (&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; view = &lt;span class=&quot;hljs-type&quot;&gt;LayoutInflater&lt;/span&gt;.from(viewGroup.getContext()).inflate(layoutId, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; viewHolderFactory(view)\n    }\n\n    fun registerViewHolderFactory&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;T&lt;/span&gt;&amp;gt;(key: &lt;span class=&quot;hljs-type&quot;&gt;KClass&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;T&lt;/span&gt;&amp;gt;, layoutId: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;, viewHolderFactory: (&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;T&lt;/span&gt;) {\n        viewHolderFactories.put(key.hashCode(), &lt;span class=&quot;hljs-type&quot;&gt;Pair&lt;/span&gt;(layoutId, viewHolderFactory))\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And the simple adapter class looks like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-scala s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MultitypeAdapter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;val items: &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;AdapterItem&lt;/span&gt;&amp;gt;&lt;/span&gt;) &lt;/span&gt;: &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;Adapter&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt;&amp;gt;() {\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; viewHolderProvider = &lt;span class=&quot;hljs-type&quot;&gt;ViewHolderProvider&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// inject ex Dagger2&lt;/span&gt;\n\n   init {\n        viewHolderProvider!!.registerViewHolderFactory(&lt;span class=&quot;hljs-type&quot;&gt;ViewHolderMedium&lt;/span&gt;::&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;item_medium&lt;/span&gt;, &lt;/span&gt;{ itemView -&amp;gt;\n            &lt;span class=&quot;hljs-type&quot;&gt;ViewHolderMedium&lt;/span&gt;(itemView)\n        })\n   }\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; fun getItemViewType(position: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;): &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; items[position].viewType\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; fun getItemCount(): &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; items.size()\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; fun onCreateViewHolder(viewGroup: &lt;span class=&quot;hljs-type&quot;&gt;ViewGroup&lt;/span&gt;, viewType: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;): &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt;? {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; viewHolderProvider!!.provideViewHolder(viewGroup, viewType)\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; fun onBindViewHolder(viewHolder: &lt;span class=&quot;hljs-type&quot;&gt;RecyclerView&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;ViewHolder&lt;/span&gt;, position: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;) {\n        items[position].bindViewHolder(viewHolder)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;There are &lt;em&gt;only&lt;/em&gt; three steps to create a new view type:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;create a view holder class&lt;/li&gt;\n&lt;li&gt;create an adapter item class (extending from AdapterItemBase)&lt;/li&gt;\n&lt;li&gt;register the view holder class in &lt;code&gt;ViewHolderProvider&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Here is an example of this concept: &lt;a href=&quot;https://github.com/michalfaber/android-drawer-template&quot; rel=&quot;nofollow noreferrer&quot; title=&quot;GitHub&quot;&gt;android-drawer-template&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;It goes even further - a view type which acts as a spinner component, with selectable adapter items.&lt;/p&gt;\n    ","\n&lt;p&gt;It is very simple and straightforward.&lt;/p&gt;\n&lt;p&gt;Just &lt;em&gt;override&lt;/em&gt; the &lt;a href=&quot;https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#getItemViewType(int)&quot; rel=&quot;nofollow noreferrer&quot;&gt;getItemViewType()&lt;/a&gt; method in your adapter. On the basis of data return different itemViewType values. E.g., consider an object of type Person with a member isMale, if isMale is true, return 1 and isMale is false, return 2 in the &lt;a href=&quot;https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#getItemViewType(int)&quot; rel=&quot;nofollow noreferrer&quot;&gt;getItemViewType()&lt;/a&gt; method.&lt;/p&gt;\n&lt;p&gt;Now coming to the &lt;a href=&quot;https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#createViewHolder(android.view.ViewGroup,%20int)&quot; rel=&quot;nofollow noreferrer&quot;&gt;createViewHolder (ViewGroup parent, int viewType)&lt;/a&gt;, on the basis of different viewType yon can inflate the different layout file. Like the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){\n    &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(parent.getContext()).inflate(R.layout.male, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdapterMaleViewHolder&lt;/span&gt;(view);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n    &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(parent.getContext()).inflate(R.layout.female, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdapterFemaleViewHolder&lt;/span&gt;(view);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;in &lt;a href=&quot;https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#onBindViewHolder(VH,%20int)&quot; rel=&quot;nofollow noreferrer&quot;&gt;onBindViewHolder (VH holder,int position)&lt;/a&gt; check where holder is an instance of &lt;code&gt;AdapterFemaleViewHolder&lt;/code&gt; or &lt;code&gt;AdapterMaleViewHolder&lt;/code&gt; by &lt;code&gt;instanceof&lt;/code&gt; and accordingly assign the values.&lt;/p&gt;\n&lt;p&gt;ViewHolder &lt;em&gt;may&lt;/em&gt; be like this&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdapterMaleViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n            ...\n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;AdapterMaleViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt;{\n            ...\n            }\n        }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdapterFemaleViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n         ...\n         &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;AdapterFemaleViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt;{\n            ...\n         }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I recommend this library from Hannes Dorfmann. It encapsulates all the logic related to a particular view type in a separate object called &quot;AdapterDelegate&quot;.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://github.com/sockeqwe/AdapterDelegates&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/sockeqwe/AdapterDelegates&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CatAdapterDelegate&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AdapterDelegate&lt;/span&gt;&amp;lt;List&amp;lt;Animal&amp;gt;&amp;gt; {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; LayoutInflater inflater;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;CatAdapterDelegate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Activity activity)&lt;/span&gt; {\n    inflater = activity.getLayoutInflater();\n  }\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isForViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; List&amp;lt;Animal&amp;gt; items, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; items.get(position) &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; Cat;\n  }\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CatViewHolder&lt;/span&gt;(inflater.inflate(R.layout.item_cat, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;));\n  }\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; List&amp;lt;Animal&amp;gt; items, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position,\n      &lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; RecyclerView.ViewHolder holder, &lt;span class=&quot;hljs-meta&quot;&gt;@Nullable&lt;/span&gt; List&amp;lt;Object&amp;gt; payloads)&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;CatViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;vh&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (CatViewHolder) holder;\n    &lt;span class=&quot;hljs-type&quot;&gt;Cat&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Cat) items.get(position);\n\n    vh.name.setText(cat.getName());\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CatViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; TextView name;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;CatViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n      &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n      name = (TextView) itemView.findViewById(R.id.name);\n    }\n  }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AnimalAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ListDelegationAdapter&lt;/span&gt;&amp;lt;List&amp;lt;Animal&amp;gt;&amp;gt; {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;AnimalAdapter&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Activity activity, List&amp;lt;Animal&amp;gt; items)&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// DelegatesManager is a protected Field in ListDelegationAdapter&lt;/span&gt;\n    delegatesManager.addDelegate(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CatAdapterDelegate&lt;/span&gt;(activity))\n                    .addDelegate(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DogAdapterDelegate&lt;/span&gt;(activity))\n                    .addDelegate(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GeckoAdapterDelegate&lt;/span&gt;(activity))\n                    .addDelegate(&lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SnakeAdapterDelegate&lt;/span&gt;(activity));\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Set the items from super class.&lt;/span&gt;\n    setItems(items);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If anyone is interested to see the super simple solution written in Kotlin, check the blogpost I just created. The example in the blogpost is based on creating Sectioned RecyclerView:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://brona.blog/2020/06/sectioned-recyclerview-in-three-steps/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://brona.blog/2020/06/sectioned-recyclerview-in-three-steps/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I firstly recommend you to read Hannes Dorfmann&apos;s &lt;a href=&quot;http://hannesdorfmann.com/android/adapter-delegates&quot; rel=&quot;nofollow noreferrer&quot;&gt;great article&lt;/a&gt; about this topic.&lt;/p&gt;\n&lt;p&gt;When a new view type comes, you have to edit your adapter and you have to handle so many messy things. Your adapter should be &lt;em&gt;open&lt;/em&gt; for extension, but &lt;em&gt;closed&lt;/em&gt; for modification.&lt;/p&gt;\n&lt;p&gt;You may check this two project, they can give the idea about how to handle different ViewTypes in Adapter:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sockeqwe/AdapterDelegates&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/sockeqwe/AdapterDelegates&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ibrahimyilmaz/kiel&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/ibrahimyilmaz/kiel&lt;/a&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Actually, I&apos;d like to improve on &lt;a href=&quot;https://stackoverflow.com/a/26245463/6523288&quot;&gt;Anton&apos;s answer&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Since &lt;code&gt;getItemViewType(int position)&lt;/code&gt; returns an integer value, you can return the layout resource ID you&apos;d need to inflate. That way you&apos;d save some logic in &lt;code&gt;onCreateViewHolder(ViewGroup parent, int viewType)&lt;/code&gt; method.&lt;/p&gt;\n\n&lt;p&gt;Also, I wouldn&apos;t suggest doing intensive calculations in &lt;code&gt;getItemCount()&lt;/code&gt; as that particular function is called at least 5 times while rendering the list, as well as while rendering each item beyond the visible items. Sadly since &lt;code&gt;notifyDatasetChanged()&lt;/code&gt; method is final, you can&apos;t really override it, but you can call it from another function within the adapter.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use the library: &lt;a href=&quot;https://github.com/vivchar/RendererRecyclerViewAdapter&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/vivchar/RendererRecyclerViewAdapter&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;mRecyclerViewAdapter = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RendererRecyclerViewAdapter&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;/* Included from library */&lt;/span&gt;\nmRecyclerViewAdapter.registerRenderer(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SomeViewRenderer&lt;/span&gt;(SomeModel.TYPE, &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;));\nmRecyclerViewAdapter.registerRenderer(...); &lt;span class=&quot;hljs-comment&quot;&gt;/* You can use several types of cells */&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For each item, you should to implement a ViewRenderer, ViewHolder, SomeModel:&lt;/p&gt;\n&lt;p&gt;ViewHolder - it is a simple view holder of recycler view.&lt;/p&gt;\n&lt;p&gt;SomeModel - it is your model with &lt;code&gt;ItemModel&lt;/code&gt; interface&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SomeViewRenderer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ViewRenderer&lt;/span&gt;&amp;lt;SomeModel, SomeViewHolder&amp;gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;SomeViewRenderer&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; type, &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; Context context)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(type, context);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bindView&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; SomeModel model, &lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; SomeViewHolder holder)&lt;/span&gt; {\n        holder.mTitle.setText(model.getTitle());\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; SomeViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;createViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; ViewGroup parent)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SomeViewHolder&lt;/span&gt;(LayoutInflater.from(getContext()).inflate(R.layout.some_item, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;));\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For more details you can look at the documentation.&lt;/p&gt;\n    ","\n&lt;p&gt;View types implementation becomes easier with Kotlin. Here is a sample with this light library &lt;a href=&quot;https://github.com/Link184/KidAdapter&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/Link184/KidAdapter&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;recyclerView.setUp {\n    withViewType {\n        withLayoutResId(R.layout.item_int)\n        withItems(mutableListOf(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;))\n        bind&amp;lt;Int&amp;gt; { &lt;span class=&quot;hljs-comment&quot;&gt;// this - is adapter view hoder itemView, it - current item&lt;/span&gt;\n            intName.text = it.toString()\n        }\n    }\n\n\n    withViewType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SECOND_STRING_TAG&quot;&lt;/span&gt;) {\n        withLayoutResId(R.layout.item_text)\n        withItems(mutableListOf(&lt;span class=&quot;hljs-string&quot;&gt;&quot;eight&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;nine&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;ten&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;eleven&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;twelve&quot;&lt;/span&gt;))\n        bind&amp;lt;String&amp;gt; {\n            stringName.text = it\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can deal with multipleViewTypes &lt;code&gt;RecyclerAdapter&lt;/code&gt; by making &lt;code&gt;getItemViewType()&lt;/code&gt; return the expected &lt;code&gt;viewType&lt;/code&gt; value for that position.&lt;/p&gt;\n&lt;p&gt;I prepared an &lt;code&gt;MultipleViewTypeAdapter&lt;/code&gt; for constructing an MCQ list for examinations which may throw a question that may have two or more valid answers (checkbox options) and a single answer questions (radiobutton options).&lt;/p&gt;\n&lt;p&gt;For this I get the type of question from the API response and I used that for deciding which view I have to show for that question.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MultiViewTypeAdapter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.Adapter {\n\n    Context mContext;\n    ArrayList&amp;lt;Question&amp;gt; dataSet;\n    ArrayList&amp;lt;String&amp;gt; questions;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Object radiobuttontype1;\n\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Viewholder to display Questions with checkboxes&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Checkboxtype2&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n        ImageView imgclockcheck;\n        CheckBox checkbox;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Checkboxtype2&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; View itemView)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n            imgclockcheck = (ImageView) itemView.findViewById(R.id.clockout_cbox_image);\n            checkbox = (CheckBox) itemView.findViewById(R.id.clockout_cbox);\n        }\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//Viewholder to display Questions with radiobuttons&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Radiobuttontype1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n        ImageView clockout_imageradiobutton;\n        RadioButton clockout_radiobutton;\n        TextView sample;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;radiobuttontype1&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View itemView)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n            clockout_imageradiobutton = (ImageView) itemView.findViewById(R.id.clockout_imageradiobutton);\n            clockout_radiobutton = (RadioButton) itemView.findViewById(R.id.clockout_radiobutton);\n            sample = (TextView) itemView.findViewById(R.id.sample);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;MultiViewTypeAdapter&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ArrayList&amp;lt;QueDatum&amp;gt; data, Context context)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.dataSet = data;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.mContext = context;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; ViewGroup viewGroup, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.clockout_radio_list_row, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;radiobuttontype1&lt;/span&gt;(view);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.clockout_cbox_list_row, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n            view.setHorizontalFadingEdgeEnabled(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Checkboxtype2&lt;/span&gt;(view);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.clockout_radio_list_row, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Radiobuttontype1&lt;/span&gt;(view);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;4&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.clockout_radio_list_row, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Radiobuttontype1&lt;/span&gt;(view);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.clockout_radio_list_row, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Radiobuttontype1&lt;/span&gt;(view);\n        }\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; RecyclerView.ViewHolder viewHolder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;)) {\n            options =  dataSet.get(i).getOptions();\n            question = dataSet.get(i).getQuestion();\n            image = options.get(i).getValue();\n            ((radiobuttontype1) viewHolder).clockout_radiobutton.setChecked(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n            ((radiobuttontype1) viewHolder).sample.setText(question);\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Loading image bitmap in the ViewHolder&apos;s View&lt;/span&gt;\n            Picasso.with(mContext)\n                    .load(image)\n                    .into(((radiobuttontype1) viewHolder).clockout_imageradiobutton);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;)) {\n            options = (ArrayList&amp;lt;Clockout_questions_Option&amp;gt;) dataSet.get(i).getOptions();\n            question = dataSet.get(i).getQuestion();\n            image = options.get(i).getValue();\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Loading image bitmap in the ViewHolder&apos;s View&lt;/span&gt;\n            Picasso.with(mContext)\n                    .load(image)\n                    .into(((Checkboxtype2) viewHolder).imgclockcheck);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Fit data to viewHolder for ViewType 3&lt;/span&gt;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;4&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Fit data to viewHolder for ViewType 4&lt;/span&gt;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType.equalsIgnoreCase(&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Fit data to viewHolder for ViewType 5&lt;/span&gt;\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dataSet.size();\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Returns viewType for that position by picking the viewType value from the\n     *     dataset\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemViewType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dataSet.get(position).getViewType();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can avoid multiple conditionals based viewHolder data fillings in &lt;code&gt;onBindViewHolder()&lt;/code&gt; by assigning same ids for the similar views across viewHolders which differ in their positioning.&lt;/p&gt;\n    ","\n&lt;p&gt;If you want to use it in conjunction with Android Data Binding look into the &lt;a href=&quot;https://github.com/evant/binding-collection-adapter&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/evant/binding-collection-adapter&lt;/a&gt; - it is by far the best solution for the multiple view types &lt;code&gt;RecyclerView&lt;/code&gt; I have even seen.&lt;/p&gt;\n&lt;p&gt;You may use it like&lt;/p&gt;\n&lt;pre class=&quot;lang-kotlin s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; items: AsyncDiffPagedObservableList&amp;lt;BaseListItem&amp;gt; =\n        AsyncDiffPagedObservableList(GenericDiff)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; onItemBind: OnItemBind&amp;lt;BaseListItem&amp;gt; =\n        OnItemBind { itemBinding, _, item -&amp;gt; itemBinding.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;(BR.item, item.layoutRes) }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And then in the layout where the list is:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &amp;lt;androidx.recyclerview.widget.RecyclerView\n                android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n                android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0dp&quot;&lt;/span&gt;\n                android:layout_weight=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;\n                app:enableAnimations=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@{false}&quot;&lt;/span&gt;\n                app:scrollToPosition=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@{viewModel.scrollPosition}&quot;&lt;/span&gt;\n\n                app:itemBinding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@{viewModel.onItemBind}&quot;&lt;/span&gt;\n                app:items=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@{viewModel.items}&quot;&lt;/span&gt;\n\n                app:reverseLayoutManager=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@{true}&quot;&lt;/span&gt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Your list items must implement the &lt;code&gt;BaseListItem&lt;/code&gt; interface which looks like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BaseListItem&lt;/span&gt; {\n    val layoutRes: Int\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And the item view should look something like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;layout xmlns:android=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&amp;gt;\n\n    &amp;lt;data&amp;gt;\n\n        &amp;lt;variable\n                name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item&quot;&lt;/span&gt;\n                type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;...presentation.somescreen.list.YourListItem&quot;&lt;/span&gt;/&amp;gt;\n    &amp;lt;/data&amp;gt;\n\n   ...\n\n&amp;lt;/layout&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Where &lt;code&gt;YourListItem&lt;/code&gt; implements &lt;code&gt;BaseListItem&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;First you must create two layout XML files. After that inside recyclerview adapter TYPE_CALL and TYPE_EMAIL are two static values with 1 and 2 respectively in the adapter class.&lt;/p&gt;\n&lt;p&gt;Now &lt;em&gt;define&lt;/em&gt; two static values at the Recycler view Adapter class level, for example: private static int TYPE_CALL = 1; private static int TYPE_EMAIL = 2;&lt;/p&gt;\n&lt;p&gt;Now create the view holder with multiple views like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CallViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; TextView txtName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; TextView txtAddress;\n\n    CallViewHolder(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; View itemView) {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n        txtName = itemView.findViewById(R.id.txtName);\n        txtAddress = itemView.findViewById(R.id.txtAddress);\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EmailViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; TextView txtName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; TextView txtAddress;\n\n    EmailViewHolder(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; View itemView) {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(itemView);\n        txtName = itemView.findViewById(R.id.txtName);\n        txtAddress = itemView.findViewById(R.id.txtAddress);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now code as below in onCreateViewHolder and onBindViewHolder method in the recyclerview adapter:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; ViewGroup viewGroup, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n    View view;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (viewType == TYPE_CALL) { &lt;span class=&quot;hljs-comment&quot;&gt;// for call layout&lt;/span&gt;\n        view = LayoutInflater.from(context).inflate(R.layout.item_call, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;CallViewHolder&lt;/span&gt;(view);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;hljs-comment&quot;&gt;// for email layout&lt;/span&gt;\n        view = LayoutInflater.from(context).inflate(R.layout.item_email, viewGroup, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EmailViewHolder&lt;/span&gt;(view);\n    }\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; RecyclerView.ViewHolder viewHolder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (getItemViewType(position) == TYPE_CALL) {\n        ((CallViewHolder) viewHolder).setCallDetails(employees.get(position));\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        ((EmailViewHolder) viewHolder).setEmailDetails(employees.get(position));\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I did something like this. I passed &quot;fragmentType&quot; and created two &lt;code&gt;ViewHolders&lt;/code&gt; and on basis of this, I classified my Layouts accordingly in a single adapter that can have different &lt;code&gt;Layouts&lt;/code&gt; and &lt;code&gt;LayoutManagers&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Context mContext;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; IOnLoyaltyCardCategoriesItemClicked mListener;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String fragmentType;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; View view;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;LoyaltyCardsCategoriesRecyclerViewAdapter&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context context, IOnLoyaltyCardCategoriesItemClicked itemListener, String fragmentType)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.mContext = context;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.mListener = itemListener;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.fragmentType = fragmentType;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LoyaltyCardCategoriesFragmentViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ImageView lc_categories_iv;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; TextView lc_categories_name_tv;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; pos;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;LoyaltyCardCategoriesFragmentViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(v);\n        view.setOnClickListener(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\n        lc_categories_iv = (ImageView) v.findViewById(R.id.lc_categories_iv);\n        lc_categories_name_tv = (TextView) v.findViewById(R.id.lc_categories_name_tv);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; pos)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pos = pos;\n        lc_categories_iv.setImageResource(R.mipmap.ic_launcher);\n        lc_categories_name_tv.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Loyalty Card Categories&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mListener != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            mListener.onLoyaltyCardCategoriesItemClicked(pos);\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyLoyaltyCardsFragmentTagViewHolder&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RecyclerView&lt;/span&gt;.ViewHolder &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ImageButton lc_categories_btn;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; pos;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;MyLoyaltyCardsFragmentTagViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(v);\n        lc_categories_btn = (ImageButton) v.findViewById(R.id.lc_categories_btn);\n        lc_categories_btn.setOnClickListener(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; pos)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pos = pos;\n        lc_categories_btn.setImageResource(R.mipmap.ic_launcher);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (mListener != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            mListener.onLoyaltyCardCategoriesItemClicked(pos);\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; RecyclerView.ViewHolder &lt;span class=&quot;hljs-title function_&quot;&gt;onCreateViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ViewGroup parent, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; viewType)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fragmentType.equalsIgnoreCase(Constants.LoyaltyCardCategoriesFragmentTag)) {\n        view = LayoutInflater.from(mContext).inflate(R.layout.loyalty_cards_categories_frag_item, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LoyaltyCardCategoriesFragmentViewHolder&lt;/span&gt;(view);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fragmentType.equalsIgnoreCase(Constants.MyLoyaltyCardsFragmentTag)) {\n        view = LayoutInflater.from(mContext).inflate(R.layout.my_loyalty_cards_categories_frag_item, parent, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyLoyaltyCardsFragmentTagViewHolder&lt;/span&gt;(view);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onBindViewHolder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; RecyclerView.ViewHolder holder, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fragmentType.equalsIgnoreCase(Constants.LoyaltyCardCategoriesFragmentTag)) {\n        ((LoyaltyCardCategoriesFragmentViewHolder) holder).setData(position);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fragmentType.equalsIgnoreCase(Constants.MyLoyaltyCardsFragmentTag)) {\n        ((MyLoyaltyCardsFragmentTagViewHolder) holder).setData(position);\n    }\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getItemCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I see there are a lot of great answers, incredibly detailed and extensive. In my case, I always understand things better if I follow along the reasoning from almost scratch, step by step. I would recommend you check this link out and whenever you have similar questions, search for any codelabs that address the issue.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://developer.android.com/codelabs/kotlin-android-training-headers#0&quot; rel=&quot;nofollow noreferrer&quot;&gt;Android Kotlin Fundamentals: Headers in RecyclerView&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    "],"478":["\n&lt;p&gt;My full answer is &lt;a href=&quot;https://stackoverflow.com/questions/25647881/android-asynctask-example-and-explanation/25647882#25647882&quot;&gt;here&lt;/a&gt;, but here is an explanatory image to supplement the other answers on this page. For me, understanding where all the variables were going was the most confusing part in the beginning.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/ytin1.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/ytin1.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Ok, you are trying to access the GUI via another thread. This, in the main, is not good practice.&lt;/p&gt;\n\n&lt;p&gt;The AsyncTask executes everything in &lt;code&gt;doInBackground()&lt;/code&gt; inside of another thread, which does not have access to the GUI where your views are.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;preExecute()&lt;/code&gt; and &lt;code&gt;postExecute()&lt;/code&gt; offer you access to the GUI before and after the heavy lifting occurs in this new thread, and you can even pass the result of the long operation to &lt;code&gt;postExecute()&lt;/code&gt; to then show any results of processing.&lt;/p&gt;\n\n&lt;p&gt;See these lines where you are later updating your TextView:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; findViewById(R.id.output);\ntxt.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Put them in &lt;code&gt;onPostExecute()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You will then see your TextView text updated after the &lt;code&gt;doInBackground&lt;/code&gt; completes.&lt;/p&gt;\n\n&lt;p&gt;I noticed that your onClick listener does not check to see which View has been selected. I find the easiest way to do this is via switch statements. I have a complete class edited below with all suggestions to save confusion.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.&lt;span class=&quot;hljs-type&quot;&gt;Activity&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.&lt;span class=&quot;hljs-type&quot;&gt;AsyncTask&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.provider.&lt;span class=&quot;hljs-type&quot;&gt;Settings&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;System&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.view.&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.&lt;span class=&quot;hljs-type&quot;&gt;Button&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.view.&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;OnClickListener&lt;/span&gt;;\n\npublic &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTaskActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;OnClickListener&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-type&quot;&gt;Button&lt;/span&gt; btn;\n    &lt;span class=&quot;hljs-type&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;?, ?, ?&amp;gt; runningTask;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.main);\n        btn = findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.button1);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Because we implement OnClickListener, we only&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// have to pass &quot;this&quot; (much easier)&lt;/span&gt;\n        btn.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    public void onClick(&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; view) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Detect the view that was &quot;clicked&quot;&lt;/span&gt;\n        switch (view.getId()) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.button1:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (runningTask != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n                runningTask.cancel(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n            runningTask = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;LongOperation&lt;/span&gt;();\n            runningTask.execute();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onDestroy() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onDestroy();\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Cancel running task(s) to avoid memory leaks&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (runningTask != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            runningTask.cancel(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;String&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt;... params) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-type&quot;&gt;Thread&lt;/span&gt;.sleep(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InterruptedException&lt;/span&gt; e) {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// We were cancelled; stop sleeping!&lt;/span&gt;\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result) {\n            &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.output);\n            txt.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// txt.setText(result);&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// You might want to change &quot;executed&quot; for the returned string&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// passed into onPostExecute(), but that is up to you&lt;/span&gt;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I&apos;m sure it is executing properly, but you&apos;re trying to change the UI elements in the background thread and that won&apos;t do.&lt;/p&gt;\n\n&lt;p&gt;Revise your call and AsyncTask as follows:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Calling Class&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I personally suggest using &lt;code&gt;onPostExecute()&lt;/code&gt; wherever you execute your AsyncTask thread and not in the class that extends AsyncTask itself. I think it makes the code easier to read especially if you need the AsyncTask in multiple places handling the results slightly different.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongThread&lt;/span&gt;() {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n        txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(result);\n    }\n}.&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;LongThread class (extends AsyncTask):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... params&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;InterruptedException&lt;/span&gt; e) {\n            e.&lt;span class=&quot;hljs-title function_&quot;&gt;printStackTrace&lt;/span&gt;();\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;;\n}      \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;http://code2concept.blogspot.in/2015/01/asynctask-android-example.html&quot; rel=&quot;noreferrer&quot;&gt;Concept and code here&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I have created a simple example for using AsyncTask of Android. It starts with &lt;code&gt;onPreExecute(), doInBackground(), publishProgress()&lt;/code&gt; and finally &lt;code&gt;onProgressUpdate()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;In this, doInBackground() works as a background thread, while other works in the UI Thread. You can&apos;t access an UI element in doInBackground(). The sequence is the same as I have mentioned.&lt;/p&gt;\n\n&lt;p&gt;However, if you need to update any widget from &lt;code&gt;doInBackground&lt;/code&gt;, you can &lt;code&gt;publishProgress&lt;/code&gt; from &lt;code&gt;doInBackground&lt;/code&gt; which will call &lt;code&gt;onProgressUpdate&lt;/code&gt; to update your UI widget.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TestAsync&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; {\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; = &lt;span class=&quot;hljs-title function_&quot;&gt;getClass&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getSimpleName&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; PreExceute&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;On pre Exceute......&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void...arg0&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; DoINBackGround&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;On doInBackground...&quot;&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++){\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;(i);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;publishProgress&lt;/span&gt;(i);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;You are at PostExecute&quot;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer...a&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(a);\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; onProgressUpdate&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;You are in progress update ... &quot;&lt;/span&gt; + a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; onPostExecute&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Call it like this in your activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;TestAsync&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/os/AsyncTask.html&quot; rel=&quot;noreferrer&quot;&gt;Developer Reference Here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Move these two lines:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TextView) findViewById(R.id.output);\ntxt.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;out of your AsyncTask&apos;s &lt;code&gt;doInBackground&lt;/code&gt; method and put them in the &lt;code&gt;onPostExecute&lt;/code&gt; method. Your &lt;code&gt;AsyncTask&lt;/code&gt; should look something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;String&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;... params) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;Thread&lt;/span&gt;.sleep(&lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// no need for a loop&lt;/span&gt;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InterruptedException&lt;/span&gt; e) {\n            &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;LongOperation&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Interrupted&quot;&lt;/span&gt;, e);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Interrupted&quot;&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;;\n    }      \n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result) {               \n        &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.output);\n        txt.setText(result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;How to memorize the parameters used in AsyncTask?&lt;/h1&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Don&apos;t&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If you are new to AsyncTask then it is very common to get confused while writing an AsyncTask. The main culprits are the parameters used in the AsyncTask, i.e., &lt;code&gt;AsyncTask&amp;lt;A, B, C&amp;gt;&lt;/code&gt;. Based on the &lt;strong&gt;A, B, C (arguments)&lt;/strong&gt; signature of the methods differs which makes things even more confusing.&lt;/p&gt;\n\n&lt;h1&gt;Keep it simple!&lt;/h1&gt;\n\n&lt;p&gt;The key is &lt;strong&gt;don&apos;t memorize&lt;/strong&gt;. If you can visualize what your task really needs to do then writing the AsyncTask with the correct signature at the first attempt would be a piece of cake. Just figure out what your &lt;code&gt;Input&lt;/code&gt;, &lt;code&gt;Progress&lt;/code&gt;, and &lt;code&gt;Output&lt;/code&gt; are, and you will be good to go.&lt;/p&gt;\n\n&lt;h2&gt;So what is an AsyncTask?&lt;/h2&gt;\n\n&lt;p&gt;AsyncTask is a background task that runs in the background thread. It takes an &lt;code&gt;Input&lt;/code&gt;, performs &lt;code&gt;Progress&lt;/code&gt; and gives an &lt;code&gt;Output&lt;/code&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;I.e.&lt;/strong&gt;, &lt;code&gt;AsyncTask&amp;lt;Input, Progress, Output&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/uaRqY.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/uaRqY.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;What is the relationship with methods?&lt;/h3&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Between &lt;code&gt;AsyncTask&lt;/code&gt; and &lt;code&gt;doInBackground()&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/IE6tI.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/IE6tI.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;code&gt;doInBackground()&lt;/code&gt; and &lt;code&gt;onPostExecute(),&lt;/code&gt;onProgressUpdate()` are also\n  related&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/4VITv.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/4VITv.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;How to write that in the code?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;DownloadTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;{\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Always same signature&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n    {}\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInbackGround&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... parameters&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Download code&lt;/span&gt;\n        int downloadPerc = &lt;span class=&quot;hljs-comment&quot;&gt;// Calculate that&lt;/span&gt;\n        &lt;span class=&quot;hljs-title function_&quot;&gt;publish&lt;/span&gt;(downloadPerc);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Download Success&quot;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... parameters&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Show in spinner, and access UI elements&lt;/span&gt;\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;How will you run this Task?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;DownLoadTask&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(&quot;Paradise.mp3&quot;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Background / Theory&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;AsyncTask&lt;/strong&gt; allows you to run a task on a background thread, while publishing results to the UI thread.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The user should always able to interact with the app so it is &lt;strong&gt;important&lt;/strong&gt;\n  &lt;strong&gt;to avoid blocking the main (UI) thread&lt;/strong&gt; with tasks such as\n  downloading content from the web.&lt;/p&gt;\n  \n  &lt;p&gt;This is why we use an &lt;strong&gt;&lt;code&gt;AsyncTask&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;\n  \n  &lt;p&gt;It offers a straightforward interface by &lt;em&gt;wrapping the UI thread message queue and handler that allow you to send and process runnable objects and messages from other threads&lt;/em&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;h2&gt;Implementation&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;AsyncTask&lt;/strong&gt; is a generic class.  (It takes &lt;strong&gt;parameterized types&lt;/strong&gt; in its constructor.)&lt;/p&gt;\n\n&lt;p&gt;It uses these &lt;strong&gt;three generic types:&lt;/strong&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;Params&lt;/code&gt;&lt;/strong&gt; - the type of the parameters sent to the task upon execution.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;Progress&lt;/code&gt;&lt;/strong&gt; - the type of the progress units published during the background computation.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/strong&gt; - the type of the result of the background computation.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Not all types are always used by an asynchronous task. To mark a type as unused, simply use the type Void:&lt;/p&gt;\n  \n  &lt;p&gt;&lt;code&gt;private class MyTask extends AsyncTask&amp;lt;Void, Void, Void&amp;gt; { ... }&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;These three parameters &lt;strong&gt;correspond to three primary functions&lt;/strong&gt; you can override in &lt;strong&gt;&lt;code&gt;AsyncTask&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;doInBackground(Params...)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;onProgressUpdate(Progress...)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;onPostExecute(Result)&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;To execute AsyncTask&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Call &lt;strong&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/strong&gt; with parameters to be sent to the background task.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;What Happens&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;On &lt;strong&gt;main/UI thread&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;onPreExecute()&lt;/code&gt;&lt;/strong&gt; is called.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;To initialize something in this thread. (E.g. show a progress bar on the user interface.)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;On a &lt;strong&gt;background thread&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;doInBackground(Params...)&lt;/code&gt;&lt;/strong&gt; is called.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;(&lt;code&gt;Params&lt;/code&gt; were passed via &lt;code&gt;execute&lt;/code&gt;.)&lt;/li&gt;\n&lt;li&gt;Where the long-running task should happen.&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Must override at least &lt;code&gt;doInBackground()&lt;/code&gt; to use AsyncTask.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Call &lt;strong&gt;&lt;code&gt;publishProgress(Progress...)&lt;/code&gt;&lt;/strong&gt; to update the user interface with a display of progress (e.g. UI animation or log text printed) while the background computation is still executing.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Causes &lt;strong&gt;&lt;code&gt;onProgressUpdate()&lt;/code&gt;&lt;/strong&gt; to be called.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;On the &lt;strong&gt;background thread&lt;/strong&gt; a result is returned from &lt;code&gt;doInBackground()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;(This triggers the next step.)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;On &lt;strong&gt;main/UI thread&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;onPostExecute()&lt;/code&gt;&lt;/strong&gt; is called with the returned result.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Examples&lt;/h2&gt;\n\n&lt;p&gt;In both examples the &quot;blocking task&quot; is a download from the web.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Example A&lt;/strong&gt; downloads &lt;strong&gt;an image&lt;/strong&gt; and displays it in an ImageView, while&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Example B&lt;/strong&gt; downloads &lt;strong&gt;some files&lt;/strong&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Example A&lt;/h2&gt;\n\n&lt;p&gt;The &lt;code&gt;doInBackground()&lt;/code&gt; method downloads the image and stores it in an object of type BitMap.  The &lt;code&gt;onPostExecute()&lt;/code&gt; method takes the bitmap and places it in the ImageView.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DownloadImageTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Bitmap&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-type&quot;&gt;ImageView&lt;/span&gt; bitImage;\n\n    public &lt;span class=&quot;hljs-type&quot;&gt;DownloadImageTask&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;ImageView&lt;/span&gt; bitImage) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.bitImage = bitImage;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;... urls) {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; urldisplay = urls[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n        &lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; mBmp = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;InputStream&lt;/span&gt; in = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; java.net.&lt;span class=&quot;hljs-type&quot;&gt;URL&lt;/span&gt;(urldisplay).openStream();\n            mBmp = &lt;span class=&quot;hljs-type&quot;&gt;BitmapFactory&lt;/span&gt;.decodeStream(in);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;Exception&lt;/span&gt; e) {\n            &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Error&quot;&lt;/span&gt;, e.getMessage());\n            e.printStackTrace();\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mBmp;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; result) {\n        bitImage.setImageBitmap(result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Example B&lt;/h2&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DownloadFilesTask&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;URL&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Long&lt;/span&gt;&amp;gt; {\n     &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Long &lt;span class=&quot;hljs-title&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;URL... urls&lt;/span&gt;)&lt;/span&gt; {\n         &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; count = urls.length;\n         &lt;span class=&quot;hljs-built_in&quot;&gt;long&lt;/span&gt; totalSize = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n         &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) {\n             totalSize += Downloader.downloadFile(urls[i]);\n             publishProgress((&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) ((i / (&lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;) count) * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;));\n             &lt;span class=&quot;hljs-comment&quot;&gt;// Escape early if cancel() is called&lt;/span&gt;\n             &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isCancelled()) &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n         }\n         &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; totalSize;\n     }\n\n     &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... progress&lt;/span&gt;)&lt;/span&gt; {\n         setProgressPercent(progress[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n     }\n\n     &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Long result&lt;/span&gt;)&lt;/span&gt; {\n         showDialog(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Downloaded &quot;&lt;/span&gt; + result + &lt;span class=&quot;hljs-string&quot;&gt;&quot; bytes&quot;&lt;/span&gt;);\n     }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Example B execution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;DownloadFilesTask&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(url1, url2, url3);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;When an asynchronous task is executed, the task goes through four steps:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;onPreExecute()&lt;/li&gt;\n&lt;li&gt;doInBackground(Params...)&lt;/li&gt;\n&lt;li&gt;onProgressUpdate(Progress...)&lt;/li&gt;\n&lt;li&gt;onPostExecute(Result)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Below is a demo example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DownloadFilesTask&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;URL&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Long&lt;/span&gt;&amp;gt; {\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Long &lt;span class=&quot;hljs-title&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;URL... urls&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; count = urls.length;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;long&lt;/span&gt; totalSize = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) {\n            totalSize += Downloader.downloadFile(urls[i]);\n            publishProgress((&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) ((i / (&lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;) count) * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;));\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Escape early if cancel() is called&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isCancelled())\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; totalSize;\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... progress&lt;/span&gt;)&lt;/span&gt; {\n        setProgressPercent(progress[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Long result&lt;/span&gt;)&lt;/span&gt; {\n        showDialog(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Downloaded &quot;&lt;/span&gt; + result + &lt;span class=&quot;hljs-string&quot;&gt;&quot; bytes&quot;&lt;/span&gt;);\n    }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And once you created, a task is executed very simply:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;DownloadFilesTask&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(url1, url2, url3);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Shortest example for just doing something asynchronously:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;android&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt;[] objects) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do something asynchronously&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To run it:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;(new MyAsyncTask())&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;When you are in the worker thread, you can not directly manipulate UI elements on Android.&lt;/p&gt;\n\n&lt;p&gt;When you are using AsyncTask please understand the callback methods.&lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyAyncTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;&amp;gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Here you can show progress bar or something on the similar lines.&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Since you are in a UI thread here.&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void aVoid&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(aVoid);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// After completing execution of given task, control will return here.&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Hence if you want to populate UI elements with fetched data, do it here.&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... values&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(values);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// You can track you progress update here&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... params&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Here you are in the worker thread and you are not allowed to access UI thread from here.&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Here you can perform network operations or any heavy operations you want.&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;FYI:\nTo access the UI thread from a worker thread, you either use runOnUiThread() method or post method on your view.&lt;/p&gt;\n\n&lt;p&gt;For instance:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;runOnUiThread&lt;/span&gt;(new Runnable() {\n    textView&lt;span class=&quot;hljs-selector-class&quot;&gt;.setText&lt;/span&gt;(&quot;something.&quot;);\n});\n\nor\n    yourview&lt;span class=&quot;hljs-selector-class&quot;&gt;.post&lt;/span&gt;(new Runnable() {\n    yourview&lt;span class=&quot;hljs-selector-class&quot;&gt;.setText&lt;/span&gt;(&quot;something&quot;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will help you know the things better. Hence in you case, you need to set your textview in the onPostExecute() method.&lt;/p&gt;\n    ","\n&lt;p&gt;I would recommend making your life easier by using this library for background works:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/Arasthel/AsyncJobLibrary&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/Arasthel/AsyncJobLibrary&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&apos;s this simple...&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;AsyncJob&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncJob&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;OnBackgroundJob&lt;/span&gt;() {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doOnBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;startRecording&lt;/span&gt;();\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Sample Async Task with POST request:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;NameValuePair&lt;/span&gt;&amp;gt; params = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;NameValuePair&lt;/span&gt;&amp;gt;();\nparams.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BasicNameValuePair&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;value1&quot;&lt;/span&gt;));\nparams.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BasicNameValuePair&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;value2&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;WEBSERVICEREQUESTOR&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;, params).&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;WEBSERVICEREQUESTOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;\n{\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;NameValuePair&lt;/span&gt;&amp;gt; parameters;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt; pDialog;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;WEBSERVICEREQUESTOR&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; url, List&amp;lt;NameValuePair&amp;gt; params&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt; = url;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;parameters&lt;/span&gt; = params;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n    {\n        pDialog = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;LoginActivity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;this&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setMessage&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Processing Request...&quot;&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setIndeterminate&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setCancelable&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... params&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n        {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;DefaultHttpClient&lt;/span&gt; httpClient = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DefaultHttpClient&lt;/span&gt;();\n            &lt;span class=&quot;hljs-title class_&quot;&gt;HttpEntity&lt;/span&gt; httpEntity = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n            &lt;span class=&quot;hljs-title class_&quot;&gt;HttpResponse&lt;/span&gt; httpResponse = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-title class_&quot;&gt;HttpPost&lt;/span&gt; httpPost = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HttpPost&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (parameters != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            {\n                httpPost.&lt;span class=&quot;hljs-title function_&quot;&gt;setEntity&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UrlEncodedFormEntity&lt;/span&gt;(parameters));\n            }\n            httpResponse = httpClient.&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;(httpPost);\n\n            httpEntity = httpResponse.&lt;span class=&quot;hljs-title function_&quot;&gt;getEntity&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EntityUtils&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;(httpEntity);\n\n        }  &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Exception&lt;/span&gt; e)\n        {\n\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;)\n    {\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;dismiss&lt;/span&gt;();\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n        {\n\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Exception&lt;/span&gt; e)\n        {\n\n        }\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Update: March 2020&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;According to Android developer &lt;a href=&quot;https://developer.android.com/reference/android/os/AsyncTask&quot; rel=&quot;nofollow noreferrer&quot;&gt;official documentation&lt;/a&gt;, AsyncTask is now deprecated. &lt;/p&gt;\n\n&lt;p&gt;It&apos;s recommended to use &lt;a href=&quot;https://developer.android.com/topic/libraries/architecture/coroutines&quot; rel=&quot;nofollow noreferrer&quot;&gt;kotlin corourines&lt;/a&gt; instead. Simply, it allows you to write asynchronous tasks in a sequential style. &lt;/p&gt;\n    ","\n&lt;p&gt;Simply:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;MyTask&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt;();\nMyTask.execute();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You need to declare the button onclicklistener. Once clicked, it calls AsyncTask class DownloadJson.&lt;/p&gt;\n\n&lt;p&gt;The process will be shown below:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Bundle savedInstanceState&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);\n        &lt;span class=&quot;hljs-title function_&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;main&lt;/span&gt;);\n\n        btn = (&lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;button1&lt;/span&gt;);\n\n        btn.&lt;span class=&quot;hljs-title function_&quot;&gt;setOnClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;OnClickListener&lt;/span&gt;() {\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;View v&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DownloadJson&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;();\n            }\n        });\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// DownloadJSON AsyncTask&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DownloadJson&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;&amp;gt; {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... params&lt;/span&gt;) {\n            newlist = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;&amp;gt;();\n            json = jsonParser.&lt;span class=&quot;hljs-title function_&quot;&gt;makeHttpRequest&lt;/span&gt;(json, &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                newarray = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;Array&lt;/span&gt;(json);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; countdisplay; i++) {\n                        &lt;span class=&quot;hljs-title class_&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; eachnew = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;();\n                        newobject = newarray.&lt;span class=&quot;hljs-title function_&quot;&gt;getJSONObject&lt;/span&gt;(i);\n                        eachnew.&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;, newobject.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ID&quot;&lt;/span&gt;));\n                        eachnew.&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, newobject.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;));\n                        newlist.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(eachnew);\n                    }\n                }\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;Exception e) {\n                &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;e&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Error&quot;&lt;/span&gt;, e.&lt;span class=&quot;hljs-title function_&quot;&gt;getMessage&lt;/span&gt;());\n                e.&lt;span class=&quot;hljs-title function_&quot;&gt;printStackTrace&lt;/span&gt;();\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void args&lt;/span&gt;) {\n            newlisttemp.&lt;span class=&quot;hljs-title function_&quot;&gt;addAll&lt;/span&gt;(newlist);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;NewAdapterpager&lt;/span&gt; newadapterpager = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;NewAdapterpager&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;ProcesssActivitypager&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;this&lt;/span&gt;, newlisttemp);\n            newpager.&lt;span class=&quot;hljs-title function_&quot;&gt;setAdapter&lt;/span&gt;(newadapterpager);\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTaskDemo&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;&amp;gt; {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Showing progress dialog&lt;/span&gt;\n        progressDialog = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setMessage&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Loading...&quot;&lt;/span&gt;);\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setCancelable&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... arg0&lt;/span&gt;) {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do code here&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Dismiss the progress dialog&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;isShowing&lt;/span&gt;()) {\n            progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;dismiss&lt;/span&gt;();\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCancelled&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCancelled&lt;/span&gt;();\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;dismiss&lt;/span&gt;();\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Toast&lt;/span&gt; toast = &lt;span class=&quot;hljs-title class_&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;makeText&lt;/span&gt;(\n                          &lt;span class=&quot;hljs-title function_&quot;&gt;getActivity&lt;/span&gt;(),\n                          &lt;span class=&quot;hljs-string&quot;&gt;&quot;An error is occurred due to some problem&quot;&lt;/span&gt;,\n                          &lt;span class=&quot;hljs-title class_&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;LENGTH_LONG&lt;/span&gt;);\n        toast.&lt;span class=&quot;hljs-title function_&quot;&gt;setGravity&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Gravity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;TOP&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;400&lt;/span&gt;);\n        toast.&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;While working with AsyncTask, it is necessary to create a class-successor and in it to register the implementation of methods necessary for us. In this lesson we will look at three methods:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;doInBackground&lt;/strong&gt; - will be executed in a new thread, and here we solve all our difficult tasks. Because a non-primary thread does not have access to the UI.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;onPreExecute&lt;/strong&gt; - executed before doInBackground and has access to the UI&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;onPostExecute&lt;/strong&gt; - executed after doInBackground (does not work if AsyncTask was canceled - about this in the next lessons) and has access to the UI.&lt;/p&gt;\n\n&lt;p&gt;This is the MyAsyncTask class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPreExecute() {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onPreExecute();\n    tvInfo.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Start&quot;&lt;/span&gt;);\n  }\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt;... params) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Your background method&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt; result) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onPostExecute(result);\n    tvInfo.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Finish&quot;&lt;/span&gt;);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this is how to call in your Activity or Fragment:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;MyAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyAsyncTask&lt;/span&gt;();\nmyAsyncTask.execute();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;AsyncTask:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ApiUrl&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;your_api&quot;&lt;/span&gt;;\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n     setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_main);\n     &lt;span class=&quot;hljs-type&quot;&gt;MyTask&lt;/span&gt; myTask=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;MyTask&lt;/span&gt;();\n     &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n         &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result=myTask.execute(&lt;span class=&quot;hljs-type&quot;&gt;ApiUrl&lt;/span&gt;).get();\n         &lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.makeText(getApplicationContext(),result,&lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;LENGTH_SHORT&lt;/span&gt;).show();\n     } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;ExecutionException&lt;/span&gt; e) {\n         e.printStackTrace();\n     } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InterruptedException&lt;/span&gt; e) {\n        e.printStackTrace();\n     }\n\n  }\n\n\n   public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;String&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;String&amp;gt;&lt;/span&gt;&lt;/span&gt;{\n\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;... strings) {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-type&quot;&gt;HttpURLConnection&lt;/span&gt; httpURLConnection=&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        &lt;span class=&quot;hljs-type&quot;&gt;URL&lt;/span&gt; url;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            url=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;URL&lt;/span&gt;(strings[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            httpURLConnection=(&lt;span class=&quot;hljs-type&quot;&gt;HttpURLConnection&lt;/span&gt;) url.openConnection();\n            &lt;span class=&quot;hljs-type&quot;&gt;InputStream&lt;/span&gt; inputStream=httpURLConnection.getInputStream();\n            &lt;span class=&quot;hljs-type&quot;&gt;InputStreamReader&lt;/span&gt; reader=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;InputStreamReader&lt;/span&gt;(inputStream);\n            result=getData(reader);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;MalformedURLException&lt;/span&gt; e) {\n            e.printStackTrace();\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;IOException&lt;/span&gt; e) {\n            e.printStackTrace();\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }\n\n    public &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; getData(&lt;span class=&quot;hljs-type&quot;&gt;InputStreamReader&lt;/span&gt; reader) &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;IOException&lt;/span&gt;{\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        int data=reader.read();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (data!=&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;){\n            char now=(char) data;\n            result+=data;\n            data=reader.read();\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Sample AsyncTask example with progress&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ObjectAnimator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;AsyncTask&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;support&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v7&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;app&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;AppCompatActivity&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Bundle&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;util&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Log&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;View&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;AccelerateDecelerateInterpolator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;DecelerateInterpolator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;LinearInterpolator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;widget&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Button&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;widget&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ProgressBar&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;widget&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;TextView&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTaskActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;OnClickListener&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt; btn;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressBar&lt;/span&gt; progressBar;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Bundle savedInstanceState&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);\n        &lt;span class=&quot;hljs-title function_&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;activity_main&lt;/span&gt;);\n        btn = (&lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;button1&lt;/span&gt;);\n        btn.&lt;span class=&quot;hljs-title function_&quot;&gt;setOnClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n        progressBar = (&lt;span class=&quot;hljs-title class_&quot;&gt;ProgressBar&lt;/span&gt;)&lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pbar&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;View view&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (view.&lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;()) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;button1&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; {\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... params&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;doInBackground&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;task &quot;&lt;/span&gt;+(i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));\n                    &lt;span class=&quot;hljs-title function_&quot;&gt;publishProgress&lt;/span&gt;(i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;InterruptedException&lt;/span&gt; e) {\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;interrupted&lt;/span&gt;();\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Completed&quot;&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;onPostExecute&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(result);\n            progressBar.&lt;span class=&quot;hljs-title function_&quot;&gt;setProgress&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;onPreExecute&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;onPreExecute&quot;&lt;/span&gt;);\n            progressBar.&lt;span class=&quot;hljs-title function_&quot;&gt;setMax&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;);\n            progressBar.&lt;span class=&quot;hljs-title function_&quot;&gt;setProgress&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... values&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;onProgressUpdate &quot;&lt;/span&gt;+values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;onProgressUpdate &quot;&lt;/span&gt;+values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n\n            &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectAnimator&lt;/span&gt; animation = &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectAnimator&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ofInt&lt;/span&gt;(progressBar, &lt;span class=&quot;hljs-string&quot;&gt;&quot;progress&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; * values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            animation.&lt;span class=&quot;hljs-title function_&quot;&gt;setDuration&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n            animation.&lt;span class=&quot;hljs-title function_&quot;&gt;setInterpolator&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LinearInterpolator&lt;/span&gt;());\n            animation.&lt;span class=&quot;hljs-title function_&quot;&gt;start&lt;/span&gt;();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;if you open AsyncTask class you can see below code.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Params&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Progress&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Result&lt;/span&gt;&amp;gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@WorkerThread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Params&lt;/span&gt;... params);\n    &lt;span class=&quot;hljs-meta&quot;&gt;@MainThread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    }\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;UnusedDeclaration&quot;&lt;/span&gt;})\n    &lt;span class=&quot;hljs-meta&quot;&gt;@MainThread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Result result&lt;/span&gt;) {\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;AsyncTask features&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;AsyncTask is abstract class&lt;/li&gt;\n&lt;li&gt;AsyncTask is have 3 generic params.&lt;/li&gt;\n&lt;li&gt;AsyncTask has abstract method of doInBackground, onPreExecute, onPostExecute&lt;/li&gt;\n&lt;li&gt;doInBackground is WorkerThread (you can&apos;t update UI)&lt;/li&gt;\n&lt;li&gt;onPreExecute is MainThread&lt;/li&gt;\n&lt;li&gt;onPostExecute is MainThread (you can update UI)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_login);\n    mEmailView = (AutoCompleteTextView) findViewById(R.id.email);\n\n    AsyncTask&amp;lt;Void, Void, Post&amp;gt; asyncTask = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;Void, Void, Post&amp;gt;() {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Post &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Void... params)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;ApiClient&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;defaultClient&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Configuration.getDefaultApiClient();\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;authorization&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE1ODIxMzM4MTB9.bA3Byc_SuB6jzqUGAY4Pyt4oBNg0VfDRctZ8-PcPlYg&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// String | JWT token for Authorization&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;ApiKeyAuth&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Bearer&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (ApiKeyAuth) defaultClient.getAuthentication(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Bearer&quot;&lt;/span&gt;);\n                Bearer.setApiKey(authorization);\n                &lt;span class=&quot;hljs-type&quot;&gt;PostApi&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;apiInstance&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PostApi&lt;/span&gt;();\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// String | id&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;commentPage&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Integer | Page number for Comment&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;commentPer&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Integer | Per page number For Comment&lt;/span&gt;\n                Post result;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    result = apiInstance.apiV1PostsIdGet(id, authorization, commentPage, commentPer);\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (ApiException e) {\n                    e.printStackTrace();\n                    result = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt;();\n                }\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {\n                e.printStackTrace();\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt;();\n            }\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post post)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onPostExecute(post);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (post != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                mEmailView.setText(post.getBody());\n                System.out.print(post);\n            }\n        }\n    };\n    asyncTask.execute();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Change your code as given below:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;runOnUiThread&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Runnable&lt;/span&gt;() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;);\n        }\n    });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"479":["\n&lt;ul&gt;\n&lt;li&gt;&lt;h3&gt;Approach 1 - &lt;code&gt;transform&lt;/code&gt; &lt;code&gt;translateX&lt;/code&gt;/&lt;code&gt;translateY&lt;/code&gt;:&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/47x60k4w/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Example Here&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;http://jsfiddle.net/47x60k4w/show&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Full Screen Example&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In &lt;a href=&quot;http://caniuse.com/#feat=transforms2d&quot; rel=&quot;noreferrer&quot;&gt;supported browsers&lt;/a&gt; (most of them), you can use &lt;code&gt;top: 50%&lt;/code&gt;/&lt;code&gt;left: 50%&lt;/code&gt; in combination with  &lt;code&gt;translateX(-50%) translateY(-50%)&lt;/code&gt; to dynamically vertically/horizontally center the element.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n    -moz-&lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translateX&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;) &lt;span class=&quot;hljs-built_in&quot;&gt;translateY&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n    -webkit-&lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translateX&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;) &lt;span class=&quot;hljs-built_in&quot;&gt;translateY&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translateX&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;) &lt;span class=&quot;hljs-built_in&quot;&gt;translateY&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;I&apos;m vertically/horizontally centered!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;h3&gt;Approach 2 - Flexbox method:&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/yeaqrh48/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Example Here&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;http://jsfiddle.net/yeaqrh48/show&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Full Screen Example&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In &lt;a href=&quot;http://caniuse.com/#feat=flexbox&quot; rel=&quot;noreferrer&quot;&gt;supported browsers&lt;/a&gt;, set the &lt;code&gt;display&lt;/code&gt; of the targeted element to &lt;code&gt;flex&lt;/code&gt; and use &lt;code&gt;align-items: center&lt;/code&gt; for vertical centering and &lt;code&gt;justify-content: center&lt;/code&gt; for horizontal centering. Just don&apos;t forget to add vendor prefixes for additional browser support (&lt;a href=&quot;http://jsfiddle.net/yeaqrh48/&quot; rel=&quot;noreferrer&quot;&gt;see example&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt;, &lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -webkit-flexbox;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -ms-flexbox;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -webkit-flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    -webkit-&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;-align: center;\n    -ms-&lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;-align: center;\n    -webkit-&lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; \n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;I&apos;m vertically/horizontally centered!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;h3&gt;Approach 3 - &lt;code&gt;table-cell&lt;/code&gt;/&lt;code&gt;vertical-align: middle&lt;/code&gt;:&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/sa088kb0/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Example Here&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;http://jsfiddle.net/sa088kb0/show/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Full Screen Example&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In some cases, you will need to ensure that the &lt;code&gt;html&lt;/code&gt;/&lt;code&gt;body&lt;/code&gt; element&apos;s height is set to &lt;code&gt;100%&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;For vertical alignment, set the parent element&apos;s &lt;code&gt;width&lt;/code&gt;/&lt;code&gt;height&lt;/code&gt; to &lt;code&gt;100%&lt;/code&gt; and add &lt;code&gt;display: table&lt;/code&gt;. Then for the child element, change the &lt;code&gt;display&lt;/code&gt; to &lt;code&gt;table-cell&lt;/code&gt; and add &lt;code&gt;vertical-align: middle&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;For horizontal centering, you could either add &lt;code&gt;text-align: center&lt;/code&gt; to center the text and any other &lt;code&gt;inline&lt;/code&gt; children elements. Alternatively, you could use &lt;code&gt;margin: 0 auto&lt;/code&gt;, assuming the element is &lt;code&gt;block&lt;/code&gt; level.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.parent&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.parent&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.child&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;I&apos;m vertically/horizontally centered!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;h3&gt;Approach 4 - Absolutely positioned &lt;code&gt;50%&lt;/code&gt; from the top with displacement:&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/2epdqL5g/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Example Here&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;http://jsfiddle.net/2epdqL5g/show&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Full Screen Example&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This approach assumes that the text has a known height - in this instance, &lt;code&gt;18px&lt;/code&gt;. Just absolutely position the element &lt;code&gt;50%&lt;/code&gt; from the top, relative to the parent element. Use a negative &lt;code&gt;margin-top&lt;/code&gt; value that is half of the element&apos;s known height, in this case - &lt;code&gt;-9px&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt;, &lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;p&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin-top&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;9px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;I&apos;m vertically/horizontally centered!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;h3&gt;Approach 5 - The &lt;code&gt;line-height&lt;/code&gt; method (Least flexible - not suggested):&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/6onex7jf/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Example Here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In some cases, the parent element will have a fixed height. For vertical centering, all you have to do is set a &lt;code&gt;line-height&lt;/code&gt; value on the child element equal to the fixed height of the parent element.&lt;/p&gt;\n\n&lt;p&gt;Though this solution will work in some cases, it&apos;s worth noting that it won&apos;t work when there are multiple lines of text - &lt;a href=&quot;http://jsfiddle.net/6rvdxbt9/&quot; rel=&quot;noreferrer&quot;&gt;like this&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.parent&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: lightgray;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.parent&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.child&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;I&apos;m vertically/horizontally centered!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If CSS3 is an option (or you have a fallback) you can use transform:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.center {\n    right: 50%;\n    bottom: 50%;\n    transform: translate(50%,50%);\n    position: absolute;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Unlike the first approach above, you don&apos;t want to use left:50% with the negative translation because there&apos;s an overflow bug in IE9+. Utilize a positive right value and you won&apos;t see horizontal scrollbars.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is how to use two simple flexbox properties to center &lt;em&gt;n&lt;/em&gt; divs on the two axes:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Set the height of your container: Here the body is set to be at least 100 viewport height.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;align-items: center;&lt;/code&gt; will center the blocks vertically if flex direction is row else horizontally if flex direction is column&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;justify-content: space-around;&lt;/code&gt; will distribute the free space vertically if flex direction is row else horizontally if flex direction is column around the div elements&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: space-around;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;foo&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;bar&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The best way to center a box both vertically and horizontally, is to use two containers :&lt;/p&gt;\n&lt;h2&gt;The outher container :&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;display: table;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;The inner container :&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;display: table-cell;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;should have &lt;code&gt;vertical-align: middle;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;should have &lt;code&gt;text-align: center;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;The content box :&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;should have &lt;code&gt;display: inline-block;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;should adjust the horizontal text-alignment, unless you want text to be centered&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Demo :&lt;/h2&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.outer-container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;80%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;120px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#ccc&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.inner-container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered-content&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: left;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer-container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner-container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered-content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        Center this!\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;See also &lt;a href=&quot;https://jsfiddle.net/egp6tejo/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;\n&lt;h2&gt;Centering in the middle of the page:&lt;/h2&gt;\n&lt;p&gt;To center your content in the middle of your page, add the following to your outer container :&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;position : absolute;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;width: 100%;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;height: 100%;&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Here&apos;s a demo for that :&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.outer-container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt; : absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#ccc&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.inner-container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table-cell;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.centered-content&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: left;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#000&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;outer-container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;inner-container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered-content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        Center this!\n     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;See also &lt;a href=&quot;https://jsfiddle.net/8hrvjro1/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;\n    ","\n&lt;h2&gt;&lt;code&gt;CSS Grid: place-items&lt;/code&gt;&lt;/h2&gt;\n&lt;p&gt;Finally, we have &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/place-items&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;place-items: center&lt;/code&gt;&lt;/a&gt; for CSS Grid to make it easier.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;to-center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.parent&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n  place-items: center;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n  place-items: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.center&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#5F85DB&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#fff&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-weight&lt;/span&gt;: bold;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-family&lt;/span&gt;: Tahoma;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;contenteditable&lt;/span&gt;&amp;gt;&lt;/span&gt;I am always super centered within my parent&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Run this code snippet and see a vertically and horizontally aligned div.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.mydiv&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;80px&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;mydiv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;h &amp;amp; v aligned&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;    &lt;span class=&quot;hljs-selector-class&quot;&gt;.align&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; black;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: space-around;\n    }\n    &lt;span class=&quot;hljs-selector-class&quot;&gt;.align&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:first&lt;/span&gt;-child {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: red;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute; \n    }\n    &lt;span class=&quot;hljs-selector-class&quot;&gt;.align&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: blue;\n    }&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;align&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;First child will be aligned vertically and horizontally at center&lt;/p&gt;\n    ","\n&lt;p&gt;to center the Div in a page &lt;kbd&gt;&lt;a href=&quot;http://jsfiddle.net/xKH7w/&quot; rel=&quot;nofollow&quot;&gt;check the fiddle link&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#vh&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;15px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0.4&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;25px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: white;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;vh&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Div to be aligned vertically&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;\nAnother option is to use flex box  &lt;kbd&gt;&lt;a href=&quot;http://jsfiddle.net/abbasmhd/56mc4e2u/&quot; rel=&quot;nofollow&quot;&gt;check the fiddle link&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.vh&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#ddd&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.vh&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;vh&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;Div to be aligned vertically&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Below is the Flex-box approach to get desired result&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;hljs-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width=device-width&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Flex-box approach&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-css&quot;&gt;\n  &lt;span class=&quot;hljs-selector-class&quot;&gt;.tabs&lt;/span&gt;{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: -webkit-flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;500px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;250px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: grey;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n    \n  }\n  &lt;span class=&quot;hljs-selector-class&quot;&gt;.f&lt;/span&gt;{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: yellow;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; auto;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline; &lt;span class=&quot;hljs-comment&quot;&gt;/*for vertically aligning */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;9%&lt;/span&gt;;         &lt;span class=&quot;hljs-comment&quot;&gt;/*for vertically aligning */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative; &lt;span class=&quot;hljs-comment&quot;&gt;/*for vertically aligning */&lt;/span&gt;\n  }\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;tabs&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;f&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;first&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;f&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;second&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;        \n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Another approach is to use table:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;border:2px solid #8AC007; height:200px; width:200px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:100%; height:100%&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height:100%&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;height:100%; text-align:center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;hello, multiple lines here, this is super long, and that is awesome, dude&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif16&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Grid css approach&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#wrapper&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;grid-template-columns&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;fr);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;grid-template-rows&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;fr);\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.main&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;#444&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif17&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Need to follow following &lt;strong&gt;New&lt;/strong&gt; and &lt;strong&gt;easy solution:&lt;/strong&gt;\n&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;  &lt;span class=&quot;hljs-selector-class&quot;&gt;.centered-class&lt;/span&gt; {\n      &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n      &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n      &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n      &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vw&lt;/span&gt;;\n      &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt;;\n    }&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;centered-class&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  I&apos;m in center vertically and horizontally.\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif18&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Source &lt;a href=&quot;http://www.freakyjolly.com/best-ways-css-how-to-center-content-divs-and-images-in-center-of-screen-using-css/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Method 1) Display type flex&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.child-element&lt;/span&gt;{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Method 2) 2D Transform&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.child-element&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translate&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt; , -&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;See other methods &lt;a href=&quot;http://www.freakyjolly.com/best-ways-css-how-to-center-content-divs-and-images-in-center-of-screen-using-css/&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The simplest and cleanest solution for me is using the CSS3 property &quot;transform&quot;:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;a&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translate&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello world!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif19&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;In order to vertically and horizontally center an element we can also use below mentioned properties.&lt;/p&gt;\n\n&lt;p&gt;This CSS property &lt;strong&gt;aligns-items&lt;/strong&gt; vertically and accepts the following values:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;flex-start&lt;/strong&gt;: Items align to the top of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;flex-end&lt;/strong&gt;: Items align to the bottom of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;center&lt;/strong&gt;: Items align at the vertical center of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;baseline&lt;/strong&gt;: Items display at the baseline of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;stretch&lt;/strong&gt;: Items are stretched to fit the container.&lt;/p&gt;\n\n&lt;p&gt;This CSS property &lt;strong&gt;justify-content&lt;/strong&gt; , which aligns items horizontally and accepts the following values:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;flex-start&lt;/strong&gt;: Items align to the left side of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;flex-end&lt;/strong&gt;: Items align to the right side of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;center&lt;/strong&gt;: Items align at the center of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;space-between&lt;/strong&gt;: Items display with equal spacing between them.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;space-around&lt;/strong&gt;: Items display with equal spacing around them.&lt;/p&gt;\n    ","\n&lt;p&gt;Just make top,bottom, left and right to 0. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-css&quot;&gt;\n&amp;lt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&amp;gt; \n{\n&lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n&lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n&lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: lightblue;\n&lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n&lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt; :&lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n&lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;25px&lt;/span&gt;;\n&lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt; :&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt; :&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; I am in the middle&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can achieve this using CSS (your element &lt;code&gt;display:inline-grid&lt;/code&gt; +  &lt;code&gt;grid-auto-flow: row;&lt;/code&gt; ) Grid and Flex Box ( parent element &lt;code&gt;display:flex;&lt;/code&gt;), &lt;/p&gt;\n\n&lt;p&gt;See below snippet &lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#leftFrame&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#tabs&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-grid;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-auto-flow&lt;/span&gt;: row;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;grid-gap&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;24px&lt;/span&gt;;\n  justify-items: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;leftFrame&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;tabs&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;first&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;second&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;        \n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif20&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This should works&lt;/p&gt;\n\n\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.center-div&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;flex-direction&lt;/span&gt;: column;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center-div&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Center Div&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif21&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you prefer it &lt;strong&gt;without&lt;/strong&gt; flexbox, grid, table or &lt;code&gt;vertical-align: middle;&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;You can do:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box__label&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;square&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.box&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;box-sizing&lt;/span&gt;: border-box;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid black;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.box__label&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;box-sizing&lt;/span&gt;: border-box;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;translateY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid black;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;if its &lt;strong&gt;only about text aligning&lt;/strong&gt;\nit can be very simple just bu use this:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;vertical-align: middle; /* vertical centering*/\ntext-align: center; /* horizontal centering*/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;no need father style or stuff like that.\nof-course &lt;strong&gt;in some cases when father have some style properties it may affect the child&lt;/strong&gt; in this solution and this solution will not work properly.&lt;/p&gt;\n    ","\n&lt;ul&gt;\n&lt;li&gt;Approach 6&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*Change units to &quot;%&quot;, &quot;px&quot; or whatever*/&lt;/span&gt;\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#wrapper&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;70vh&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,.&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#left&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50vh&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: red;\n}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#right&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50vh&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: green;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.txt&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;text-align&lt;/span&gt;: center;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;50vh&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;left&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;txt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Left&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;right&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;txt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Right&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif22&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;    .container{ \n               width: 50%;  //Your container width here\n               height: 50%; //Your container height here\n               position: absolute; \n               top: 0; \n               right: 0;  \n               bottom: 0; \n               left: 0; \n               margin: auto;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The easiest way of centering a div both vertically and horizontally is as follows:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display: table; width: 200px; height: 200px; border: 1px solid black;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display: table-cell; vertical-align: middle; text-align: center;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        Text Here\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif23&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;One More Example&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;.parent {\n    display: table; \n    width: 100%; \n    height: 100%;\n}\n\n.child {\n    display: table-cell; \n    vertical-align: middle;\n    text-align: center;\n}\n\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;u&lt;/span&gt;&amp;gt;&lt;/span&gt;SERVICE IN BANGLADESH FLEET RESERVE &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; AND &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; RE-ENGAGEMENT ORDER FOR DEFENCE SERVICE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;u&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;The simplest &lt;code&gt;flexbox&lt;/code&gt; approach:&lt;/h1&gt;\n\n&lt;p&gt;The easiest way how to center a &lt;strong&gt;single element&lt;/strong&gt; vertically and horizontally is to make it a flex item and set its margin to &lt;code&gt;auto&lt;/code&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;If you apply auto margins to a flex item, that item will automatically\n  extend its specified margin to occupy the extra space in the flex\n  container...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.flex-container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.flex-item&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: auto;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;flex-container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;flex-item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    This should be centered!\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif24&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;This extension of margins in each direction will &lt;em&gt;push&lt;/em&gt; the element exactly to the middle of its container.&lt;/p&gt;\n    ","\n&lt;p&gt;In the case where I was trying to vertically align text content inside &lt;code&gt;button::before&lt;/code&gt; and &lt;code&gt;button::after&lt;/code&gt;, I was able to get it working using &lt;strong&gt;&lt;code&gt;vertical-align: text-top&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;vertical-align&lt;/span&gt;: text-top;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use this CSS code:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: grid;\n&lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n&lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: center;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The source is &lt;a href=&quot;https://css-tricks.com/centering-css-complete-guide/&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS-Tricks&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This is a related problem that people might come to this page when searching: When I want to centre a div for a &quot;waiting..&quot; 100px square animated gif, I use:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.centreDiv&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;:     &lt;span class=&quot;hljs-built_in&quot;&gt;-moz-calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50vh&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;:  &lt;span class=&quot;hljs-built_in&quot;&gt;-webkit-calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50vh&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;:          &lt;span class=&quot;hljs-built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50vh&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;:    &lt;span class=&quot;hljs-built_in&quot;&gt;-moz-calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50vw&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;-webkit-calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50vw&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;:         &lt;span class=&quot;hljs-built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50vw&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;50px&lt;/span&gt;);\n    &lt;span class=&quot;hljs-attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* whatever is required */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"480":["\n&lt;p&gt;In CSS, the parent container doesn&apos;t know when its children wrap. Hence, it continues scaling its size oblivious to what&apos;s going on inside.&lt;/p&gt;\n\n&lt;p&gt;Put another way, the browser renders the container on the initial cascade. It doesn&apos;t reflow the document when a child wraps.&lt;/p&gt;\n\n&lt;p&gt;That&apos;s why the container doesn&apos;t shrink-wrap the narrower layout. It just continues on as if nothing wrapped, as evidenced by the reserved space on the right.&lt;/p&gt;\n\n&lt;p&gt;The maximum length of the horizontal white space is the length of the element(s) that the container was expecting to be there. &lt;/p&gt;\n\n&lt;p&gt;In the following demo, whitespace can be seen coming and going as the window is re-sized horizontally: &lt;a href=&quot;https://jsfiddle.net/qh3oybq5/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;DEMO&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;You&apos;ll need a JavaScript solution (see &lt;a href=&quot;https://stackoverflow.com/a/33246364/3597276&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/14597951/3597276&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;)... or CSS media queries (see &lt;a href=&quot;https://stackoverflow.com/a/32811002/3597276&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;When dealing with wrapping text, &lt;code&gt;text-align: right&lt;/code&gt; on the container may be helpful in some cases.&lt;/p&gt;\n    ","\n&lt;p&gt;Have a good look at my &lt;a href=&quot;https://jsfiddle.net/gmu6rr9o/23/&quot; rel=&quot;noreferrer&quot;&gt;Fiddle&lt;/a&gt; in which I changed:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;&lt;code&gt;.holder&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;width&lt;/code&gt; to &lt;code&gt;max-width&lt;/code&gt; (in &lt;code&gt;.v&lt;/code&gt; classes)&lt;/li&gt;\n&lt;li&gt;modified &lt;strong&gt;&lt;code&gt;.holder&lt;/code&gt;&lt;/strong&gt; to &lt;code&gt;wrap&lt;/code&gt; and &lt;code&gt;space-around&lt;/code&gt; its children&lt;/li&gt;\n&lt;li&gt;added 2 more &lt;strong&gt;&lt;code&gt;.v&lt;/code&gt;&lt;/strong&gt; classes for clarity&lt;/li&gt;\n&lt;li&gt;removed the &lt;code&gt;&amp;lt;br&amp;gt;&apos;s&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;and, &lt;strong&gt;most importantly&lt;/strong&gt;, added &lt;code&gt;flex: 0 0&lt;/code&gt; to &lt;strong&gt;&lt;code&gt;.child&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Flexbox almost always needs &lt;code&gt;max-width&lt;/code&gt; to be set, which is more flexible than &lt;code&gt;width&lt;/code&gt;.\nDepending on how you need the &lt;code&gt;.child&lt;/code&gt;ren to behave, modify the &lt;code&gt;flex-grow&lt;/code&gt; and &lt;code&gt;flex-shrink&lt;/code&gt; in &lt;code&gt;flex: 0 0&lt;/code&gt; to meet your needs. (the result of &lt;code&gt;flex: 1 0&lt;/code&gt; looks nice too)&lt;/p&gt;\n\n&lt;p&gt;...no Javascript needed...&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; The &lt;a href=&quot;http://tympanus.net/codrops/css_reference/flexbox/&quot; rel=&quot;noreferrer&quot;&gt;Codrops Flexbox Reference&lt;/a&gt; really helped me a lot understanding FBL...&lt;/p&gt;\n    ","\n&lt;p&gt;The reason why your blocks behave like this is because of CSS rendering.&lt;/p&gt;\n\n&lt;p&gt;In the first case in you fiddle the browsers doesn&apos;t know when the block gets too small for it&apos;s content. So it keeps stretching until it reaches the maximum and then renders the text.&lt;/p&gt;\n\n&lt;p&gt;In your last case you tell the browser where to break so it knows that the element should not get wider.&lt;/p&gt;\n\n&lt;p&gt;The only way you can easily solve this is by setting the breaks yourself.&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re looking for a CSS-only solution, you can use something like &lt;code&gt;width: 100px;&lt;/code&gt; to set the minimum width of the child and &lt;code&gt;flex: auto;&lt;/code&gt; so that it grows. &lt;/p&gt;\n\n&lt;p&gt;Example: &lt;a href=&quot;https://jsfiddle.net/ncvp7gzs/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://jsfiddle.net/ncvp7gzs/1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(Note this is only tested this on Chrome)&lt;/p&gt;\n    "]},"page":"27","randomQuestions":[{"title":"Why don't flex items shrink past content size?","slug":"why-don't-flex-items-shrink-past-content-size-1657384687282"},{"title":"How do I match any character across multiple lines in a regular expression?","slug":"how-do-i-match-any-character-across-multiple-lines-in-a-regular-expression-1657387839720"},{"title":"What should main() return in C and C++?","slug":"what-should-main()-return-in-c-and-c++-1657384745630"},{"title":"How do I split a delimited string so I can access individual items?","slug":"how-do-i-split-a-delimited-string-so-i-can-access-individual-items-1657388042385"},{"title":"Unfortunately MyApp has stopped. How can I solve this?","slug":"unfortunately-myapp-has-stopped.-how-can-i-solve-this-1657384402171"},{"title":"How to convert a factor to integer\\numeric without loss of information?","slug":"how-to-convert-a-factor-to-integernumeric-without-loss-of-information-1657387880273"},{"title":"Why does jQuery or a DOM method such as getElementById not find the element?","slug":"why-does-jquery-or-a-dom-method-such-as-getelementbyid-not-find-the-element-1657384326458"},{"title":"What is PECS (Producer Extends Consumer Super)?","slug":"what-is-pecs-(producer-extends-consumer-super)-1657384828870"},{"title":"Sort ArrayList of custom Objects by property","slug":"sort-arraylist-of-custom-objects-by-property-1657387678339"},{"title":"\"Least Astonishment\" and the Mutable Default Argument","slug":"\"least-astonishment\"-and-the-mutable-default-argument-1657384412508"},{"title":"How do I install pip on Windows?","slug":"how-do-i-install-pip-on-windows-1657388147761"},{"title":"How to avoid using Select in Excel VBA","slug":"how-to-avoid-using-select-in-excel-vba-1657384286300"},{"title":"How do you access the matched groups in a JavaScript regular expression?","slug":"how-do-you-access-the-matched-groups-in-a-javascript-regular-expression-1657388233817"},{"title":"How do you convert a byte array to a hexadecimal string, and vice versa?","slug":"how-do-you-convert-a-byte-array-to-a-hexadecimal-string-and-vice-versa-1657388010428"},{"title":"Split array into chunks","slug":"split-array-into-chunks-1657387896420"},{"title":"Why do I need to override the equals and hashCode methods in Java?","slug":"why-do-i-need-to-override-the-equals-and-hashcode-methods-in-java-1657388359877"},{"title":"What is the difference between #include <filename> and #include \"filename\"?","slug":"what-is-the-difference-between-include-lessfilenamegreater-and-include-\"filename\"-1657388489547"},{"title":"What is the canonical way to check for errors using the CUDA runtime API?","slug":"what-is-the-canonical-way-to-check-for-errors-using-the-cuda-runtime-api-1657387302698"},{"title":"What is move semantics?","slug":"what-is-move-semantics-1657387702625"},{"title":"Is JavaScript a pass-by-reference or pass-by-value language?","slug":"is-javascript-a-pass-by-reference-or-pass-by-value-language-1657384675679"}]},"__N_SSG":true}