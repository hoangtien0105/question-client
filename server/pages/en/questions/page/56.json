{"pageProps":{"data":{"count":610,"rows":[{"id":335,"title":"What methods of ‘clearfix’ can I use?","slug":"what-methods-of-'clearfix'-can-i-use-1657387672727","postType":"QUESTION","createdAt":"2022-07-09T17:27:52.000Z","updatedAt":"2022-07-09T17:27:52.000Z","tags":[]},{"id":334,"title":"How to include a PHP variable inside a MySQL statement","slug":"how-to-include-a-php-variable-inside-a-mysql-statement-1657387669365","postType":"QUESTION","createdAt":"2022-07-09T17:27:49.000Z","updatedAt":"2022-07-09T17:27:49.000Z","tags":[]},{"id":333,"title":"JSTL in JSF2 Facelets... makes sense?","slug":"jstl-in-jsf2-facelets...-makes-sense-1657387667435","postType":"QUESTION","createdAt":"2022-07-09T17:27:47.000Z","updatedAt":"2022-07-09T17:27:47.000Z","tags":[{"id":1914,"name":"jstl","slug":"jstl","createdAt":"2022-07-09T17:27:47.000Z","updatedAt":"2022-07-09T17:27:47.000Z","Questions_Tags":{"questionId":333,"tagId":1914}},{"id":1915,"name":"facelets","slug":"facelets","createdAt":"2022-07-09T17:27:47.000Z","updatedAt":"2022-07-09T17:27:47.000Z","Questions_Tags":{"questionId":333,"tagId":1915}}]},{"id":332,"title":"What is the best way to detect a mobile device?","slug":"what-is-the-best-way-to-detect-a-mobile-device-1657387665025","postType":"QUESTION","createdAt":"2022-07-09T17:27:45.000Z","updatedAt":"2022-07-09T17:27:45.000Z","tags":[{"id":1910,"name":"mobile","slug":"mobile","createdAt":"2022-07-09T17:27:45.000Z","updatedAt":"2022-07-09T17:27:45.000Z","Questions_Tags":{"questionId":332,"tagId":1910}},{"id":1911,"name":"browser-detection","slug":"browser-detection","createdAt":"2022-07-09T17:27:45.000Z","updatedAt":"2022-07-09T17:27:45.000Z","Questions_Tags":{"questionId":332,"tagId":1911}}]},{"id":331,"title":"How to create a MySQL hierarchical recursive query?","slug":"how-to-create-a-mysql-hierarchical-recursive-query-1657387662163","postType":"QUESTION","createdAt":"2022-07-09T17:27:42.000Z","updatedAt":"2022-07-09T17:27:42.000Z","tags":[{"id":1906,"name":"hierarchical-data","slug":"hierarchical-data","createdAt":"2022-07-09T17:27:42.000Z","updatedAt":"2022-07-09T17:27:42.000Z","Questions_Tags":{"questionId":331,"tagId":1906}},{"id":1907,"name":"recursive-query","slug":"recursive-query","createdAt":"2022-07-09T17:27:42.000Z","updatedAt":"2022-07-09T17:27:42.000Z","Questions_Tags":{"questionId":331,"tagId":1907}}]}]},"answers":{"331":["\n&lt;p&gt;For &lt;strong&gt;MySQL 8+:&lt;/strong&gt; use the recursive &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; syntax.&lt;br&gt;\nFor &lt;strong&gt;MySQL 5.x:&lt;/strong&gt; use inline variables, path IDs, or self-joins.&lt;/p&gt;\n&lt;h1&gt;MySQL 8+&lt;/h1&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;recursive&lt;/span&gt; cte (id, name, parent_id) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;     id,\n             name,\n             parent_id\n  &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;       products\n  &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;      parent_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;     p.id,\n             p.name,\n             p.parent_id\n  &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;       products p\n  &lt;span class=&quot;hljs-keyword&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; cte\n          &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; p.parent_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; cte.id\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; cte;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The value specified in &lt;code&gt;parent_id = 19&lt;/code&gt; should be set to the &lt;code&gt;id&lt;/code&gt; of the parent you want to select all the descendants of.&lt;/p&gt;\n&lt;h1&gt;MySQL 5.x&lt;/h1&gt;\n&lt;p&gt;For MySQL versions that do not support Common Table Expressions (up to version 5.7), you would achieve this with the following query:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;  id,\n        name,\n        parent_id \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;    (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; products\n         &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; parent_id, id) products_sorted,\n        (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;19&apos;&lt;/span&gt;) initialisation\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;   find_in_set(parent_id, &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt;     length(&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; concat(&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, id))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here is a &lt;a href=&quot;http://sqlfiddle.com/#!9/d74210/1&quot; rel=&quot;noreferrer&quot;&gt;fiddle&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Here, the value specified in &lt;code&gt;@pv := &apos;19&apos;&lt;/code&gt; should be set to the &lt;code&gt;id&lt;/code&gt; of the parent you want to select all the descendants of.&lt;/p&gt;\n&lt;p&gt;This will work also if a parent has &lt;em&gt;multiple&lt;/em&gt; children. However, it is required that each record fulfills the condition &lt;code&gt;parent_id &amp;lt; id&lt;/code&gt;, otherwise the results will not be complete.&lt;/p&gt;\n&lt;h3&gt;Variable assignments inside a query&lt;/h3&gt;\n&lt;p&gt;This query uses specific MySQL syntax: variables are assigned and modified during its execution. Some assumptions are made about the order of execution:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;The &lt;code&gt;from&lt;/code&gt; clause is evaluated first. So that is where &lt;code&gt;@pv&lt;/code&gt; gets initialised.&lt;/li&gt;\n&lt;li&gt;The &lt;code&gt;where&lt;/code&gt; clause is evaluated for each record in the order of retrieval from the &lt;code&gt;from&lt;/code&gt; aliases. So this is where a condition is put to only include records for which the parent was already identified as being in the descendant tree (all descendants of the primary parent are progressively added to &lt;code&gt;@pv&lt;/code&gt;).&lt;/li&gt;\n&lt;li&gt;The conditions in this &lt;code&gt;where&lt;/code&gt; clause are evaluated in order, and the evaluation is interrupted once the total outcome is certain. Therefore the second condition must be in second place, as it adds the &lt;code&gt;id&lt;/code&gt; to the parent list, and this should only happen if the &lt;code&gt;id&lt;/code&gt; passes the first condition. The &lt;code&gt;length&lt;/code&gt; function is only called to make sure this condition is always true, even if the &lt;code&gt;pv&lt;/code&gt; string would for some reason yield a falsy value.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;All in all, one may find these assumptions too risky to rely on. The &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/user-variables.html&quot; rel=&quot;noreferrer&quot;&gt;documentation&lt;/a&gt; warns:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;you might get the results you expect, but this is not guaranteed [...] the order of evaluation for expressions involving user variables is undefined.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So even though it works consistently with the above query, the evaluation order may still change, for instance when you add conditions or use this query as a view or sub-query in a larger query. It is a &quot;feature&quot; that &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/user-variables.html&quot; rel=&quot;noreferrer&quot;&gt;will be removed in a future MySQL release&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Previous releases of MySQL made it possible to assign a value to a user variable in statements other than &lt;code&gt;SET&lt;/code&gt;. This functionality is supported in MySQL 8.0 for backward compatibility but is subject to removal in a future release of MySQL.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;As stated above, from MySQL 8.0 onward you should use the recursive &lt;code&gt;with&lt;/code&gt; syntax.&lt;/p&gt;\n&lt;h3&gt;Efficiency&lt;/h3&gt;\n&lt;p&gt;For very large data sets this solution might get slow, as the &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_find-in-set&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;find_in_set&lt;/code&gt;&lt;/a&gt; operation is not the most ideal way to find a number in a list, certainly not in a list that reaches a size in the same order of magnitude as the number of records returned.&lt;/p&gt;\n&lt;h2&gt;Alternative 1: &lt;code&gt;with recursive&lt;/code&gt;, &lt;code&gt;connect by&lt;/code&gt;&lt;/h2&gt;\n&lt;p&gt;More and more databases implement the &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL:1999#Common_table_expressions_and_recursive_queries&quot; rel=&quot;noreferrer&quot;&gt;SQL:1999 ISO standard &lt;code&gt;WITH [RECURSIVE]&lt;/code&gt; syntax&lt;/a&gt; for recursive queries (e.g. &lt;a href=&quot;http://www.postgresql.org/docs/8.4/static/queries-with.html&quot; rel=&quot;noreferrer&quot;&gt;Postgres 8.4+&lt;/a&gt;, &lt;a href=&quot;https://technet.microsoft.com/en-us/library/ms186243%28v=sql.105%29.aspx&quot; rel=&quot;noreferrer&quot;&gt;SQL Server 2005+&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot; rel=&quot;noreferrer&quot;&gt;DB2&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/cloud/latest/db112/SQLRF/statements_10002.htm#sthref6733&quot; rel=&quot;noreferrer&quot;&gt;Oracle 11gR2+&lt;/a&gt;, &lt;a href=&quot;https://www.sqlite.org/lang_with.html&quot; rel=&quot;noreferrer&quot;&gt;SQLite 3.8.4+&lt;/a&gt;, &lt;a href=&quot;https://firebirdsql.org/refdocs/langrefupd21-select.html#langrefupd21-select-cte&quot; rel=&quot;noreferrer&quot;&gt;Firebird 2.1+&lt;/a&gt;, &lt;a href=&quot;http://www.h2database.com/html/advanced.html#recursive_queries&quot; rel=&quot;noreferrer&quot;&gt;H2&lt;/a&gt;, &lt;a href=&quot;http://www.hsqldb.org/doc/guide/dataaccess-chapt.html#dac_with_clause&quot; rel=&quot;noreferrer&quot;&gt;HyperSQL 2.1.0+&lt;/a&gt;, &lt;a href=&quot;http://www.info.teradata.com/htmlpubs/DB_TTU_14_00/index.html#page/SQL_Reference/B035_1146_111A/ch01.032.066.html&quot; rel=&quot;noreferrer&quot;&gt;Teradata&lt;/a&gt;, &lt;a href=&quot;https://mariadb.com/kb/en/mariadb/with/&quot; rel=&quot;noreferrer&quot;&gt;MariaDB 10.2.2+&lt;/a&gt;). And as of &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot; rel=&quot;noreferrer&quot;&gt;version 8.0, also MySQL supports it&lt;/a&gt;. See the top of this answer for the syntax to use.&lt;/p&gt;\n&lt;p&gt;Some databases have an alternative, non-standard syntax for hierarchical look-ups, such as the &lt;code&gt;CONNECT BY&lt;/code&gt; clause available on &lt;a href=&quot;https://docs.oracle.com/cd/B19306_01/server.102/b14200/queries003.htm&quot; rel=&quot;noreferrer&quot;&gt;Oracle&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot; rel=&quot;noreferrer&quot;&gt;DB2&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/en/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_2035.htm&quot; rel=&quot;noreferrer&quot;&gt;Informix&lt;/a&gt;, &lt;a href=&quot;https://www.cubrid.org/manual/en/10.0/sql/query/hq.html&quot; rel=&quot;noreferrer&quot;&gt;CUBRID&lt;/a&gt; and other databases.&lt;/p&gt;\n&lt;p&gt;MySQL version 5.7 does not offer such a feature. When your database engine provides this syntax or you can migrate to one that does, then that is certainly the best option to go for. If not, then also consider the following alternatives.&lt;/p&gt;\n&lt;h2&gt;Alternative 2: Path-style Identifiers&lt;/h2&gt;\n&lt;p&gt;Things become a lot easier if you would assign &lt;code&gt;id&lt;/code&gt; values that contain the hierarchical information: a path. For example, in your case this could look like this:&lt;/p&gt;\n&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;ID&lt;/th&gt;\n&lt;th&gt;NAME&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;19&lt;/td&gt;\n&lt;td&gt;category1&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;19/1&lt;/td&gt;\n&lt;td&gt;category2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;19/1/1&lt;/td&gt;\n&lt;td&gt;category3&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;19/1/1/1&lt;/td&gt;\n&lt;td&gt;category4&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;p&gt;Then your &lt;code&gt;select&lt;/code&gt; would look like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;  id,\n        name \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;    products\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;   id &lt;span class=&quot;hljs-keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;19/%&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Alternative 3: Repeated Self-joins&lt;/h2&gt;\n&lt;p&gt;If you know an upper limit for how deep your hierarchy tree can become, you can use a standard &lt;code&gt;sql&lt;/code&gt; query like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;      p6.parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; parent6_id,\n            p5.parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; parent5_id,\n            p4.parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; parent4_id,\n            p3.parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; parent3_id,\n            p2.parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; parent2_id,\n            p1.parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; parent_id,\n            p1.id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; product_id,\n            p1.name\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;        products p1\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt;   products p2 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; p2.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p1.parent_id \n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt;   products p3 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; p3.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p2.parent_id \n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt;   products p4 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; p4.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p3.parent_id  \n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt;   products p5 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; p5.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p4.parent_id  \n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt;   products p6 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; p6.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; p5.parent_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;       &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (p1.parent_id, \n                   p2.parent_id, \n                   p3.parent_id, \n                   p4.parent_id, \n                   p5.parent_id, \n                   p6.parent_id) \n&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt;       &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;See this &lt;a href=&quot;http://sqlfiddle.com/#!9/5de2a/46&quot; rel=&quot;noreferrer&quot;&gt;fiddle&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;where&lt;/code&gt; condition specifies which parent you want to retrieve the descendants of. You can extend this query with more levels as needed.&lt;/p&gt;\n    ","\n&lt;p&gt;From the blog &lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot; rel=&quot;noreferrer&quot;&gt;Managing Hierarchical Data in MySQL&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Table structure&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------------+----------------------+--------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category_id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name                 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; parent &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------------+----------------------+--------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ELECTRONICS          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TELEVISIONS          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TUBE                 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; LCD                  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; PLASMA               &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; PORTABLE ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; MP3 PLAYERS          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; FLASH                &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; CD PLAYERS           &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; WAY RADIOS         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------------+----------------------+--------+&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Query:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t1.name &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; lev1, t2.name &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; lev2, t3.name &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; lev3, t4.name &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; lev4\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; t1\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; t2 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t2.parent &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t1.category_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; t3 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t3.parent &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t2.category_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; t4 &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; t4.parent &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t3.category_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; t1.name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;ELECTRONICS&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------------+----------------------+--------------+-------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; lev1        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; lev2                 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; lev3         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; lev4  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------------+----------------------+--------------+-------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TELEVISIONS          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TUBE         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TELEVISIONS          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; LCD          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TELEVISIONS          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; PLASMA       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; PORTABLE ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; MP3 PLAYERS  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; FLASH &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; PORTABLE ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; CD PLAYERS   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; PORTABLE ELECTRONICS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; WAY RADIOS &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------------+----------------------+--------------+-------+&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Most users at one time or another have dealt with hierarchical data in a SQL database and no doubt learned that the management of hierarchical data is not what a relational database is intended for. The tables of a relational database are not hierarchical (like XML), but are simply a flat list. Hierarchical data has a parent-child relationship that is not naturally represented in a relational database table.\n&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot; rel=&quot;noreferrer&quot;&gt;Read more&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Refer the blog for more details.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;category_id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; category_id, name, parent &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; category\n&lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt;\n(&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;)tmp\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; parent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;category_id name    parent\n&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;  category1   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;  category2   &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;  category3   &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;  category4   &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Reference: &lt;a href=&quot;https://stackoverflow.com/questions/16513418/how-to-do-the-recursive-select-query-in-mysql&quot;&gt;How to do the Recursive SELECT query in Mysql?&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Try these:&lt;/p&gt;\n\n&lt;p&gt;Table definition:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; IF &lt;span class=&quot;hljs-keyword&quot;&gt;EXISTS&lt;/span&gt; category;\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; category (\n    id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; AUTO_INCREMENT &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY,\n    name &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;),\n    parent_id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;,\n    &lt;span class=&quot;hljs-keyword&quot;&gt;CONSTRAINT&lt;/span&gt; fk_category_parent &lt;span class=&quot;hljs-keyword&quot;&gt;FOREIGN&lt;/span&gt; KEY (parent_id)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;REFERENCES&lt;/span&gt; category (id)\n) engine&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;innodb;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Experimental rows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;\n(&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;category1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;),\n(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;category2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;),\n(&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;category3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;),\n(&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;category4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;),\n(&lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;categoryA&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;),\n(&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;categoryB&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;),\n(&lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;categoryC&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;),\n(&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;categoryD&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Recursive Stored procedure:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PROCEDURE&lt;/span&gt; IF &lt;span class=&quot;hljs-keyword&quot;&gt;EXISTS&lt;/span&gt; getpath;\nDELIMITER $$\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PROCEDURE&lt;/span&gt; getpath(&lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; cat_id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;OUT&lt;/span&gt; path TEXT)\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; catname &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; temppath TEXT;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; tempparent &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; max_sp_recursion_depth &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; name, parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;cat_id &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; catname, tempparent;\n    IF tempparent &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; path &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; catname;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;CALL&lt;/span&gt; getpath(tempparent, temppath);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; path &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CONCAT(temppath, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;, catname);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; IF;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;$$\nDELIMITER ;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Wrapper function for the stored procedure:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; IF &lt;span class=&quot;hljs-keyword&quot;&gt;EXISTS&lt;/span&gt; getpath;\nDELIMITER $$\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; getpath(cat_id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; TEXT &lt;span class=&quot;hljs-keyword&quot;&gt;DETERMINISTIC&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; res TEXT;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;CALL&lt;/span&gt; getpath(cat_id, res);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt; res;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;$$\nDELIMITER ;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Select example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; id, name, getpath(id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; path &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-----------+-----------------------------------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; path                                    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-----------+-----------------------------------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1                               &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category2 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category2                     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category3 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category2&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category3           &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category4 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category2&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category3&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category4 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; categoryA &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryA                     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; categoryB &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryA&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryB           &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; categoryC &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryA&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryC           &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; categoryD &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryA&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryB&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;categoryD &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-----------+-----------------------------------------+&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Filtering rows with certain path:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; id, name, getpath(id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; path &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category &lt;span class=&quot;hljs-keyword&quot;&gt;HAVING&lt;/span&gt; path &lt;span class=&quot;hljs-keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;category1/category2%&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-----------+-----------------------------------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; path                                    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-----------+-----------------------------------------+&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category2 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category2                     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category3 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category2&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category3           &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category4 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category2&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category3&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;category4 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----+-----------+-----------------------------------------+&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Did the same thing for another quetion here&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/28363893/mysql-select-recursive-get-all-child-with-multiple-level/28366310&quot;&gt;Mysql select recursive get all child with multiple level&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The query will be :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; GROUP_CONCAT(lv SEPARATOR &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; GROUP_CONCAT(id SEPARATOR &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;)\n  ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; lv &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n  (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)tmp\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;)\n) a;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you need quick read speed, the best option is to use a closure table. A closure table contains a row for each ancestor/descendant pair. So in your example, the closure table would look like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;ancestor &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; descendant &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; depth\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Once you have this table, hierarchical queries become very easy and fast. To get all the descendants of category 20:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; cat.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; categories_closure &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; cl\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; categories &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; cat &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; cat.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; cl.descendant\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; cl.ancestor &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; cl.depth &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Of course, there is a big downside whenever you use denormalized data like this. You need to maintain the closure table alongside your categories table. The best way is probably to use triggers, but it is somewhat complex to correctly track inserts/updates/deletes for closure tables. As with anything, you need to look at your requirements and decide what approach is best for you.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;: See the question &lt;a href=&quot;https://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database&quot;&gt;What are the options for storing hierarchical data in a relational database?&lt;/a&gt; for more options. There are different optimal solutions for different situations.&lt;/p&gt;\n    ","\n&lt;p&gt;The best approach I&apos;ve come up with is&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Use lineage to store\\sort\\trace trees. That&apos;s more than enough, and works thousands times faster for reading than any other approach.\nIt also allows to stay on that pattern even if DB will change(as ANY db will allow that pattern to be used)&lt;/li&gt;\n&lt;li&gt;Use function that determines lineage for specific ID.&lt;/li&gt;\n&lt;li&gt;Use it as you wish (in selects, or on CUD operations, or even by jobs).&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Lineage approach descr. can be found wherever, for example\n&lt;a href=&quot;http://ferdychristant.com/blog/archive/DOMM-7QJPM7&quot; rel=&quot;nofollow noreferrer&quot;&gt;Here&lt;/a&gt; or &lt;a href=&quot;https://dba.stackexchange.com/questions/30021/mysql-tree-hierarchical-query&quot;&gt;here&lt;/a&gt;.\nAs of function - &lt;a href=&quot;https://stackoverflow.com/questions/12948009/finding-all-parents-in-mysql-table-with-single-query&quot;&gt;that&lt;/a&gt; is what enspired me.&lt;/p&gt;\n\n&lt;p&gt;In the end - got more-or-less simple, relatively fast, and SIMPLE solution.&lt;/p&gt;\n\n&lt;p&gt;Function&apos;s body&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- --------------------------------------------------------------------------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-- Routine DDL&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-- &lt;span class=&quot;hljs-doctag&quot;&gt;Note:&lt;/span&gt; comments before and after the routine body will not be stored by the server&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-- --------------------------------------------------------------------------------&lt;/span&gt;\nDELIMITER $$\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; DEFINER&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;`root`@`localhost` &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; `get_lineage`(the_id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; text CHARSET utf8\n    &lt;span class=&quot;hljs-keyword&quot;&gt;READS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SQL&lt;/span&gt; DATA\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; v_rec &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; done &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;FALSE&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; v_res text &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; v_papa &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; v_papa_papa &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; csr &lt;span class=&quot;hljs-keyword&quot;&gt;CURSOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; _id,parent_id &lt;span class=&quot;hljs-comment&quot;&gt;-- @n:=@n+1 as rownum,T1.* &lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; \n    (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@r&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; _id,\n        (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@r&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; table_parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; table_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; _id) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; parent_id,\n        &lt;span class=&quot;hljs-variable&quot;&gt;@l&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@l&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; lvl\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n        (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@r&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; the_id, &lt;span class=&quot;hljs-variable&quot;&gt;@l&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@n&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) vars,\n        &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; m\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@r&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    ) T1\n    &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; T1.parent_id &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; T1.lvl &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; CONTINUE HANDLER &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; FOUND &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; done &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;TRUE&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;open&lt;/span&gt; csr;\n    read_loop: LOOP\n    &lt;span class=&quot;hljs-keyword&quot;&gt;fetch&lt;/span&gt; csr &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; v_papa,v_papa_papa;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; v_rec &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; v_rec&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        IF done &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt;\n            LEAVE read_loop;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; IF;\n        &lt;span class=&quot;hljs-comment&quot;&gt;-- add first&lt;/span&gt;\n        IF v_rec &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; v_res &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; v_papa_papa;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; IF;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; v_res &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CONCAT(v_res,&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;,v_papa);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; LOOP;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;close&lt;/span&gt; csr;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; v_res;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then you just&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; get_lineage(the_id)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope it helps somebody :)&lt;/p&gt;\n    ","\n&lt;p&gt;Based on the @trincot answer, very good explained, I use &lt;code&gt;WITH RECURSIVE ()&lt;/code&gt; statement to &lt;strong&gt;create a breadcrumb&lt;/strong&gt; using &lt;code&gt;id&lt;/code&gt; of the current page and &lt;strong&gt;go backwards in the hierarchy&lt;/strong&gt; to find the every &lt;code&gt;parent&lt;/code&gt; in my &lt;code&gt;route&lt;/code&gt; table.&lt;/p&gt;\n&lt;p&gt;So, the @trincot solution is adapted here in the opposite direction to find parents instead of descendants.&lt;/p&gt;\n&lt;p&gt;I also added &lt;code&gt;depth&lt;/code&gt; value which is usefull to invert result order (otherwise the breadcrumb would be upside down).&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;RECURSIVE&lt;/span&gt; cte (\n    `id`,\n    `title`,\n    `url`,\n    `icon`,\n    `class`,\n    `parent_id`,\n    `depth`\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;   \n        `id`,\n        `title`,\n        `url`,\n        `icon`,\n        `class`,\n        `parent_id`,\n        &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; `depth` \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;     `route`\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;    `id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; :id\n      \n    &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n        P.`id`,\n        P.`title`,\n        P.`url`,\n        P.`icon`,\n        P.`class`,\n        P.`parent_id`,\n        `depth` &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `route` P\n        \n    &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; cte\n        &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; P.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; cte.`parent_id`\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `depth` &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Before upgrade to mySQL 8+, &lt;strong&gt;I was using vars but it&apos;s deprecated and no more working on my 8.0.22 version&lt;/strong&gt; !&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;EDIT 2021-02-19&lt;/strong&gt; :\n&lt;strong&gt;Example for hierarchical menu&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;After @david comment I decided to try to make a full hierarchical menu with all nodes and sorted as I want (with &lt;code&gt;sorting&lt;/code&gt; column which sort items in each depth). Very usefull for my user/authorization matrix page.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;This really simplifies my old version with one query on each depth (PHP loops)&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/eeGnI.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/eeGnI.png&quot; alt=&quot;ERP authroization Matrix&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;This example intergrates an INNER JOIN with &lt;code&gt;url&lt;/code&gt; table to filter route by website (multi-websites CMS system).&lt;/p&gt;\n&lt;p&gt;You can see the essential &lt;code&gt;path&lt;/code&gt; column that contains &lt;code&gt;CONCAT()&lt;/code&gt; function to sort the menu in the right way.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; R.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;RECURSIVE&lt;/span&gt; cte (\n        `id`,\n        `title`,\n        `url`,\n        `icon`,\n        `class`,\n        `parent`,\n        `depth`,\n        `sorting`,\n        `path`\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n            `id`,\n            `title`,\n            `url`,\n            `icon`,\n            `class`,\n            `parent`,\n            &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; `depth`,\n            `sorting`,\n            CONCAT(`sorting`, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , `title`) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; `path`\n        &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `route`\n        &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; `parent` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n            D.`id`,\n            D.`title`,\n            D.`url`,\n            D.`icon`,\n            D.`class`,\n            D.`parent`,\n            `depth` &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n            D.`sorting`,\n            CONCAT(cte.`path`, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &amp;gt; &apos;&lt;/span&gt;, D.`sorting`, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , D.`title`)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `route` D\n        &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; cte\n            &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; cte.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; D.`parent`\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte\n) R\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `url` U\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; R.`id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; U.`route_id`\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; U.`site_id` &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `path` &lt;span class=&quot;hljs-keyword&quot;&gt;ASC&lt;/span&gt;  \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple query to list child&apos;s of first recursion:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; id, name, parent_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; products\n&lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;)tmp\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; parent_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id  name        parent_id\n&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;  category2   &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;  category3   &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;  category4   &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;  category24  &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;... with left join:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;p1.id &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; id\n  , p2.name &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; parent_name\n  , p1.name name\n  , p1.parent_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; products p1\n&lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;)tmp\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; products p2 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; p2.id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;p1.parent_id &lt;span class=&quot;hljs-comment&quot;&gt;-- optional join to get parent name&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; p1.parent_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The solution of @tincot to list all child&apos;s:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;  id,\n        name,\n        parent_id \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;    (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; products\n         &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; parent_id, id) products_sorted,\n        (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;19&apos;&lt;/span&gt;) initialisation\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;   find_in_set(parent_id, &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt;     &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; concat(&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, id)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Test it online with &lt;a href=&quot;http://sqlfiddle.com/#!9/a318e3/4/0&quot; rel=&quot;noreferrer&quot;&gt;Sql Fiddle&lt;/a&gt; and see all results.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/a318e3/4/0&quot; rel=&quot;noreferrer&quot;&gt;http://sqlfiddle.com/#!9/a318e3/4/0&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Something not mentioned here, although a bit similar to the second alternative of the accepted answer but different and low cost for big hierarchy query and easy (insert update delete) items, would be  adding a persistent path  column for each item.&lt;/p&gt;\n\n&lt;p&gt;some like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name        &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; path\n&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category1   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category2   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category3   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; category4   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- get children of category3:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; my_table &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; path &lt;span class=&quot;hljs-keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;/19/20/21%&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-- Reparent an item:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; my_table &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; path &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; REPLACE(path, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/19/20&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/15/16&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; path &lt;span class=&quot;hljs-keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;/19/20/%&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Optimise the path length and &lt;code&gt;ORDER BY path&lt;/code&gt; using base36 encoding instead real numeric path id&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; base10 &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; base36\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;10&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;100&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;2S&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;1000&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;RS&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;10000&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;7PS&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;100000&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;255S&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;1000000&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;LFLS&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;1000000000&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;GJDGXS&apos;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&apos;1000000000000&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;CRE66I9S&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Base36&quot; rel=&quot;noreferrer&quot;&gt;https://en.wikipedia.org/wiki/Base36&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Suppressing also the slash &apos;/&apos; separator by using fixed length and padding to the encoded id&lt;/p&gt;\n\n&lt;p&gt;Detailed optimization explanation here:\n&lt;a href=&quot;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&quot; rel=&quot;noreferrer&quot;&gt;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;building a function or procedure to split path for retreive ancestors of one item&lt;/p&gt;\n    ","\n&lt;p&gt;You can do it like this in other databases quite easily with a recursive query (YMMV on performance).&lt;/p&gt;\n\n&lt;p&gt;The other way to do it is to store two extra bits of data, a left and right value. The left and right value are derived from a pre-order traversal of the tree structure you&apos;re representing.&lt;/p&gt;\n\n&lt;p&gt;This is know as Modified Preorder Tree Traversal and lets you run a simple query to get all parent values at once. It also goes by the name &quot;nested set&quot;.&lt;/p&gt;\n    ","\n&lt;p&gt;Just use &lt;a href=&quot;https://github.com/BlueM/Tree&quot; rel=&quot;nofollow noreferrer&quot;&gt;BlueM/tree&lt;/a&gt; php class for make tree of a self-relation table in mysql.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Tree&amp;nbsp;and&amp;nbsp;Tree\\Node&amp;nbsp;are PHP classes for handling data that is structured hierarchically using parent ID references. A typical example is a table in a relational database where each records parent field references the primary key of another record. Of course, Tree cannot only use data originating from a database, but anything: you supply the data, and Tree uses it, regardless of where the data came from and how it was processed. &lt;a href=&quot;https://github.com/BlueM/Tree/blob/master/README.markdown&quot; rel=&quot;nofollow noreferrer&quot;&gt;read more&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Here is an example of using BlueM/tree:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;?php \nrequire &lt;span class=&quot;hljs-string&quot;&gt;&apos;/path/to/vendor/autoload.php&apos;&lt;/span&gt;; $db &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; PDO(...); &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; up your database connection \n$stm &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; $db&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT id, parent, title FROM tablename ORDER BY title&apos;&lt;/span&gt;); \n$records &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; $stm&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;fetchAll(PDO::FETCH_ASSOC); \n$tree &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BlueM\\Tree($records); \n...\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/mjPhB.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/mjPhB.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&apos;s a &lt;strong&gt;category&lt;/strong&gt; table.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  id,\n        NAME,\n        parent_category \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;    (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; category\n         &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; parent_category, id) products_sorted,\n        (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;) initialisation\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;   FIND_IN_SET(parent_category, &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt;     &lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CONCAT(&lt;span class=&quot;hljs-variable&quot;&gt;@pv&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, id)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Output::&lt;/em&gt;&lt;/strong&gt;\n&lt;a href=&quot;https://i.stack.imgur.com/VzdrQ.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/VzdrQ.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Its a little tricky one, check this whether it is working for you&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; a.id,if(a.parent &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@varw&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;concat(a.id,&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;),&lt;span class=&quot;hljs-variable&quot;&gt;@varw&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;concat(a.id,&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@varw&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; list &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; recursivejoin &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; if(parent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,id,parent) &lt;span class=&quot;hljs-keyword&quot;&gt;asc&lt;/span&gt;) a &lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; recursivejoin b &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; (a.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.parent),(&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@varw&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; c  &lt;span class=&quot;hljs-keyword&quot;&gt;having&lt;/span&gt; list &lt;span class=&quot;hljs-keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%19,%&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;SQL fiddle link &lt;a href=&quot;http://www.sqlfiddle.com/#!2/e3cdf/2&quot; rel=&quot;nofollow&quot;&gt;http://www.sqlfiddle.com/#!2/e3cdf/2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Replace with your field and table name appropriately. &lt;/p&gt;\n    ","\n&lt;p&gt;This works for me, hope this will work for you too. It will give you a Record set Root to Child for any Specific Menu. Change the Field name as per your requirements.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@id&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;22&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Menu_Name, (&lt;span class=&quot;hljs-variable&quot;&gt;@id&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;Sub_Menu_ID ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; Sub_Menu_ID, Menu_ID \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n    ( &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Menu_ID, Menu_Name, Sub_Menu_ID \n      &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; menu \n      &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Sub_Menu_ID &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; aux_table \n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; Menu_ID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@id&lt;/span&gt;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; Sub_Menu_ID;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I found it more easily to :&lt;/p&gt;\n\n&lt;p&gt;1) create a function that will check if a item is anywhere in the parent hierarchy of another one. Something like this (I will not write the function, make it with WHILE DO) :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;is_related(id, parent_id);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;in your example &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;is_related(&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\nis_related(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\nis_related(&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2) use a sub-select , something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ...\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; t\n&lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; pt &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; pt.id &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; i.id &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; is_related(t.id,i.id));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I have made a query for you. This will give you Recursive Category with a Single Query:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; id,NAME,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subName,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubName,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubsubName &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; prent &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; b.id,a.name,b.name &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subName,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubName,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubsubName &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; b.prent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;a.id &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; a.prent &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; b.name &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; c.id,a.name,b.name &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subName,c.name &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubName,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubsubName &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; b.prent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;a.id &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; c &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; c.prent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;b.id &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; a.prent &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; c.name &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; d.id,a.name,b.name &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subName,c.name &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubName,d.name &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; subsubsubName &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; b.prent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;a.id &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; c &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; c.prent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;b.id &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; Table1 &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; d &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; d.prent&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;c.id &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; a.prent &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; d.name &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; NAME,subName,subsubName,subsubsubName\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is a &lt;a href=&quot;http://sqlfiddle.com/#!9/b4f997/3&quot; rel=&quot;nofollow noreferrer&quot;&gt;fiddle&lt;/a&gt;.&lt;/p&gt;\n    "],"332":["\n&lt;p&gt;&lt;strong&gt;Editor&apos;s note:&lt;/strong&gt; user agent detection is not a recommended technique for modern web apps. See the comments below this answer for confirmation of this fact. It is suggested to use one of the other answers using feature detection and/or media queries.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Instead of using jQuery you can use simple JavaScript to detect it:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-regexp&quot;&gt;/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;) ) {\n &lt;span class=&quot;hljs-comment&quot;&gt;// some code..&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or you can combine them both to make it more accessible through jQuery...&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.browser.&lt;span class=&quot;hljs-property&quot;&gt;device&lt;/span&gt; = (&lt;span class=&quot;hljs-regexp&quot;&gt;/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;()));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now &lt;code&gt;$.browser&lt;/code&gt; will return &lt;code&gt;&quot;device&quot;&lt;/code&gt; for all above devices&lt;/p&gt;\n&lt;p&gt;Note: &lt;code&gt;$.browser&lt;/code&gt; removed on &lt;a href=&quot;http://jquery.com/upgrade-guide/1.9/#jquery-browser-removed&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;jQuery v1.9.1&lt;/strong&gt;&lt;/a&gt;. But you can use this by using jQuery migration plugin &lt;a href=&quot;https://stackoverflow.com/a/15072522/2724173&quot;&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;A more thorough version:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; isMobile = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//initiate as false&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// device detection&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;) \n    || &lt;span class=&quot;hljs-regexp&quot;&gt;/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;))) { \n    isMobile = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For me small is beautiful so I&apos;m using this technique:&lt;/p&gt;\n\n&lt;p&gt;In CSS file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* Smartphones ----------- */&lt;/span&gt;\n@media only screen and (max-&lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;: 760px) {\n  #some-element { &lt;span class=&quot;hljs-attr&quot;&gt;display&lt;/span&gt;: none; }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In jQuery/JavaScript file:  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt; ).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {      \n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; is_mobile = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#some-element&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display&apos;&lt;/span&gt;)==&lt;span class=&quot;hljs-string&quot;&gt;&apos;none&apos;&lt;/span&gt;) {\n        is_mobile = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;       \n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// now I can use is_mobile to run javascript conditionally&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (is_mobile == &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Conditional script here&lt;/span&gt;\n    }\n });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My objective was to have my site &quot;mobile-friendly&quot;. So I use CSS Media Queries do show/hide elements depending on the screen size.&lt;/p&gt;\n\n&lt;p&gt;For example, in my mobile version I don&apos;t want to activate the Facebook Like Box, because it loads all those profile images and stuff. And that&apos;s not good for mobile visitors. So, besides hiding the container element, I also do this inside the jQuery code block (above):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!is_mobile) {\n    (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;d, s, id&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; js, fjs = d.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByTagName&lt;/span&gt;(s)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (d.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(id)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n        js = d.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(s); js.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; = id;\n        js.&lt;span class=&quot;hljs-property&quot;&gt;src&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;//connect.facebook.net/pt_PT/all.js#xfbml=1&amp;amp;appId=210731252294735&quot;&lt;/span&gt;;\n        fjs.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;insertBefore&lt;/span&gt;(js, fjs);\n    }(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;script&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;facebook-jssdk&apos;&lt;/span&gt;));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can see it in action at &lt;a href=&quot;http://lisboaautentica.com&quot; rel=&quot;noreferrer&quot;&gt;http://lisboaautentica.com&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&apos;m still working on the the mobile version, so it&apos;s still not looking as it should, as of writing this.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update by &lt;a href=&quot;https://stackoverflow.com/users/1226446&quot;&gt;dekin88&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;There is a JavaScript API built-in for detecting media.\nRather than using the above solution simply use the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {      \n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; isMobile = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;matchMedia&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;only screen and (max-width: 760px)&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;matches&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isMobile) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Conditional script here&lt;/span&gt;\n    }\n });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Browser Supports:&lt;/strong&gt; &lt;a href=&quot;http://caniuse.com/#feat=matchmedia&quot; rel=&quot;noreferrer&quot;&gt;http://caniuse.com/#feat=matchmedia&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The advantage of this method is that it&apos;s not only simpler and shorter, but you can conditionally target different devices such as smartphones and tablets separately if necessary without having to add any dummy elements into the DOM.&lt;/p&gt;\n    ","\n&lt;p&gt;According to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent&quot; rel=&quot;noreferrer&quot;&gt;Mozilla - Browser detection using the user agent&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;In summary, we recommend looking for the string Mobi anywhere in the User Agent to detect a mobile device.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-regexp&quot;&gt;/Mobi/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// mobile!&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will match all common mobile browser user agents, including mobile Mozilla, Safari, IE, Opera, Chrome, etc.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update for Android&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;EricL recommends testing for &lt;code&gt;Android&lt;/code&gt; as a user agent also, as the &lt;a href=&quot;https://developer.chrome.com/multidevice/user-agent#chrome_for_android_user_agent&quot; rel=&quot;noreferrer&quot;&gt;Chrome user agent string&lt;/a&gt; for tablets does not include &quot;Mobi&quot; (the phone versions do however):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-regexp&quot;&gt;/Mobi|Android/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// mobile!&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A simple and effective one-liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isMobile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;ontouchstart&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;); }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However above code doesn&apos;t take into account the case for laptops with touchscreen.\nThus, I provide this second version, based on &lt;a href=&quot;https://stackoverflow.com/a/15481500&quot;&gt;@Julian solution&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isMobile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{ &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createEvent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;TouchEvent&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It&apos;s not jQuery, but I found this: &lt;a href=&quot;http://detectmobilebrowser.com/&quot; rel=&quot;noreferrer&quot;&gt;http://detectmobilebrowser.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It provides scripts to detect mobile browsers in several languages, one of which is JavaScript. That may help you with what you&apos;re looking for.&lt;/p&gt;\n\n&lt;p&gt;However, since you are using jQuery, you might want to be aware of the jQuery.support collection. It&apos;s a collection of properties for detecting the capabilities of the current browser. Documentation is here: &lt;a href=&quot;http://api.jquery.com/jQuery.support/&quot; rel=&quot;noreferrer&quot;&gt;http://api.jquery.com/jQuery.support/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Since I don&apos;t know what exactly what you&apos;re trying to accomplish, I don&apos;t know which of these will be the most useful.&lt;/p&gt;\n\n&lt;p&gt;All that being said, I think your best bet is to either redirect or write a different script to the output using a server-side language (if that is an option). Since you don&apos;t really know the capabilities of a mobile browser x, doing the detection, and alteration logic on the server side would be the most reliable method. Of course, all of that is a moot point if you can&apos;t use a server side language :)&lt;/p&gt;\n    ","\n&lt;p&gt;Sometimes it is desired to know which brand device a client is using in order to show content specific to that device, like a link to the iPhone store or the Android market. Modernizer is great, but only shows you browser capabilities, like HTML5, or Flash.&lt;/p&gt;\n\n&lt;p&gt;Here is my UserAgent solution in jQuery to display a different class for each device type:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*** sniff the UA of the client and show hidden div&apos;s for that device ***/&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; customizeForDevice = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ua = navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; checker = {\n      &lt;span class=&quot;hljs-attr&quot;&gt;iphone&lt;/span&gt;: ua.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(iPhone|iPod|iPad)/&lt;/span&gt;),\n      &lt;span class=&quot;hljs-attr&quot;&gt;blackberry&lt;/span&gt;: ua.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/BlackBerry/&lt;/span&gt;),\n      &lt;span class=&quot;hljs-attr&quot;&gt;android&lt;/span&gt;: ua.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/Android/&lt;/span&gt;)\n    };\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (checker.&lt;span class=&quot;hljs-property&quot;&gt;android&lt;/span&gt;){\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.android-only&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (checker.&lt;span class=&quot;hljs-property&quot;&gt;iphone&lt;/span&gt;){\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.idevice-only&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (checker.&lt;span class=&quot;hljs-property&quot;&gt;blackberry&lt;/span&gt;){\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.berry-only&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.unknown-device&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This solution is from Graphics Maniacs\n&lt;a href=&quot;http://graphicmaniacs.com/note/detecting-iphone-ipod-ipad-android-and-blackberry-browser-with-javascript-and-php/&quot; rel=&quot;noreferrer&quot;&gt;http://graphicmaniacs.com/note/detecting-iphone-ipod-ipad-android-and-blackberry-browser-with-javascript-and-php/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Found a solution in: &lt;a href=&quot;http://www.abeautifulsite.net/blog/2011/11/detecting-mobile-devices-with-javascript/&quot; rel=&quot;noreferrer&quot;&gt;http://www.abeautifulsite.net/blog/2011/11/detecting-mobile-devices-with-javascript/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; isMobile = {\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Android&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/Android/i&lt;/span&gt;);\n    },\n    &lt;span class=&quot;hljs-title class_&quot;&gt;BlackBerry&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/BlackBerry/i&lt;/span&gt;);\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;iOS&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/iPhone|iPad|iPod/i&lt;/span&gt;);\n    },\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Opera&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/Opera Mini/i&lt;/span&gt;);\n    },\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Windows&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/IEMobile/i&lt;/span&gt;);\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;any&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (isMobile.&lt;span class=&quot;hljs-title class_&quot;&gt;Android&lt;/span&gt;() || isMobile.&lt;span class=&quot;hljs-title class_&quot;&gt;BlackBerry&lt;/span&gt;() || isMobile.&lt;span class=&quot;hljs-title function_&quot;&gt;iOS&lt;/span&gt;() || isMobile.&lt;span class=&quot;hljs-title class_&quot;&gt;Opera&lt;/span&gt;() || isMobile.&lt;span class=&quot;hljs-title class_&quot;&gt;Windows&lt;/span&gt;());\n    }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then to verify if its a Mobile, you can test using: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(isMobile.&lt;span class=&quot;hljs-title function_&quot;&gt;any&lt;/span&gt;()) {\n   &lt;span class=&quot;hljs-comment&quot;&gt;//some code...&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If by &quot;mobile&quot; you mean &quot;small screen,&quot; I use this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowWidth = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;screen&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;outerWidth&lt;/span&gt; ?\n                  &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;screen&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; : &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;outerWidth&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; mobile = windowWidth &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On iPhone you&apos;ll end up with a window.screen.width of 320. On Android you&apos;ll end up with a window.outerWidth of 480 (though that can depend on the Android). iPads and Android tablets will return numbers like 768 so they&apos;ll get the full view like you&apos;d want.&lt;/p&gt;\n    ","\n&lt;p&gt;In one line of javascript:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; isMobile = (&lt;span class=&quot;hljs-string&quot;&gt;&apos;ontouchstart&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-regexp&quot;&gt;/mobi/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If the user agent contains &apos;Mobi&apos; (as per MDN) and ontouchstart is available then it is likely to be a mobile device.&lt;/p&gt;\n&lt;p&gt;EDIT: Updates the regex code in response to feedback in the comments. Using regex&lt;code&gt;/mobi/i&lt;/code&gt; the i makes it case-insensitive, and mobi matches all mobile browsers. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent/Firefox&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent/Firefox&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can&apos;t rely on &lt;code&gt;navigator.userAgent&lt;/code&gt;, not every device reveals its real OS. On my HTC for example, it depends on the settings (&quot;using mobile version&quot; on/off).\nOn &lt;a href=&quot;http://my.clockodo.com&quot; rel=&quot;noreferrer&quot;&gt;http://my.clockodo.com&lt;/a&gt;, we simply used &lt;code&gt;screen.width&lt;/code&gt; to detect small devices. Unfortunately, in some Android versions there&apos;s a bug with screen.width. You can combine this way with the userAgent:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(screen.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt; ||\n navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/Android/i&lt;/span&gt;) ||\n navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/webOS/i&lt;/span&gt;) ||\n navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/iPhone/i&lt;/span&gt;) ||\n navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/iPod/i&lt;/span&gt;)) {\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is a mobile device&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know this question has a lot of answers, but from what I saw nobody approaches the answer the way I would solve this.&lt;/p&gt;\n\n&lt;p&gt;CSS uses width (Media Queries) to determine which styles applied to the web document baseed on width. Why not use width in the JavaScript?&lt;/p&gt;\n\n&lt;p&gt;For instance in Bootstrap&apos;s (Mobile First) Media Queries, there exist 4 snap/break points:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Extra Small Devices are 768 pixels and under.&lt;/li&gt;\n&lt;li&gt;Small Devices range from 768 to 991 pixels.&lt;/li&gt;\n&lt;li&gt;Medium Devices range from 992 to 1199 pixels.&lt;/li&gt;\n&lt;li&gt;Large Devices are 1200 pixels and up.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;We can use this to also solve our JavaScript issue as well.&lt;/p&gt;\n\n&lt;p&gt;First we will create a function that gets the window size and returns a value that allows us to see what size device is viewing our application:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getBrowserWidth = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;768&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Extra Small Device&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;xs&quot;&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;991&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Small Device&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;sm&quot;&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1199&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Medium Device&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;md&quot;&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Large Device&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;lg&quot;&lt;/span&gt;\n    }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now that we have the function set up, we can call it ans store the value:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; device = &lt;span class=&quot;hljs-title function_&quot;&gt;getBrowserWidth&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Your question was&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;I would like to run a different script if the browser is on a handheld device.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Now that we have the device information all that is left is an if statement:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(device === &lt;span class=&quot;hljs-string&quot;&gt;&quot;xs&quot;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Enter your script for handheld devices here &lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is an example on CodePen: &lt;a href=&quot;http://codepen.io/jacob-king/pen/jWEeWG&quot; rel=&quot;noreferrer&quot;&gt;http://codepen.io/jacob-king/pen/jWEeWG&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you use &lt;a href=&quot;http://modernizr.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Modernizr&lt;/a&gt;, it is very easy to use &lt;code&gt;Modernizr.touch&lt;/code&gt; as mentioned earlier.&lt;/p&gt;\n\n&lt;p&gt;However, I prefer using a combination of &lt;code&gt;Modernizr.touch&lt;/code&gt; and user agent testing, just to be safe.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; deviceAgent = navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; isTouchDevice = &lt;span class=&quot;hljs-title class_&quot;&gt;Modernizr&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;touch&lt;/span&gt; || \n(deviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(iphone|ipod|ipad)/&lt;/span&gt;) ||\ndeviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(android)/&lt;/span&gt;)  || \ndeviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(iemobile)/&lt;/span&gt;) || \ndeviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/iphone/i&lt;/span&gt;) || \ndeviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/ipad/i&lt;/span&gt;) || \ndeviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/ipod/i&lt;/span&gt;) || \ndeviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/blackberry/i&lt;/span&gt;) || \ndeviceAgent.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/bada/i&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isTouchDevice) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Do something touchy&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Can&apos;t touch this&lt;/span&gt;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you don&apos;t use Modernizr, you can simply replace the &lt;code&gt;Modernizr.touch&lt;/code&gt; function above with &lt;code&gt;(&apos;ontouchstart&apos; in document.documentElement)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Also note that testing the user agent &lt;code&gt;iemobile&lt;/code&gt; will give you broader range of detected Microsoft mobile devices than &lt;code&gt;Windows Phone&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6262584/how-to-determine-if-the-client-is-a-touch-device&quot;&gt;Also see this SO question&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I am surprised that no one pointed out a nice site: &lt;a href=&quot;http://detectmobilebrowsers.com/&quot; rel=&quot;noreferrer&quot;&gt;http://detectmobilebrowsers.com/&lt;/a&gt; It has ready made code in different languages for mobile detection (including but not limited to):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Apache&lt;/li&gt;\n&lt;li&gt;ASP&lt;/li&gt;\n&lt;li&gt;C#&lt;/li&gt;\n&lt;li&gt;IIS&lt;/li&gt;\n&lt;li&gt;JavaScript&lt;/li&gt;\n&lt;li&gt;NGINX&lt;/li&gt;\n&lt;li&gt;PHP&lt;/li&gt;\n&lt;li&gt;Perl&lt;/li&gt;\n&lt;li&gt;Python&lt;/li&gt;\n&lt;li&gt;Rails&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And if you need to detect the tablets as well, just check About section for additional RegEx parameter.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Android tablets, iPads, Kindle Fires and PlayBooks are not detected by\n  design. To add support for tablets, add &lt;code&gt;|android|ipad|playbook|silk&lt;/code&gt; to\n  the first regex.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;If found that just checking &lt;code&gt;navigator.userAgent&lt;/code&gt; isn&apos;t always reliable. Greater reliability can be achieved by also checking &lt;code&gt;navigator.platform&lt;/code&gt;. A simple modification to a previous answer seems to work better:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-regexp&quot;&gt;/Android|webOS|iPhone|iPad|iPod|BlackBerry/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;) ||\n   (&lt;span class=&quot;hljs-regexp&quot;&gt;/Android|webOS|iPhone|iPad|iPod|BlackBerry/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;platform&lt;/span&gt;))) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// some code...&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you&apos;re not particularly worried about small displays you could use width/height detection. So that way if width is under a certain size, the mobile site is thrown up. It may not be the perfect way, but it will probably be the easiest to detect for multiple devices. You may need to put in a specific one for the iPhone 4 (large resolution). &lt;/p&gt;\n    ","\n&lt;p&gt;To add an extra layer of control I use the HTML5 storage to detect if it is using mobile storage or desktop storage. If the browser does not support storage I have an array of mobile browser names and I compare the user agent with the browsers in the array.&lt;/p&gt;\n\n&lt;p&gt;It is pretty simple. Here is the function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Used to detect whether the users browser is an mobile browser&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isMobile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;///&amp;lt;summary&amp;gt;Detecting whether the browser is a mobile browser or desktop browser&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;///&amp;lt;returns&amp;gt;A boolean value indicating whether the browser is a mobile browser or not&amp;lt;/returns&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (sessionStorage.&lt;span class=&quot;hljs-property&quot;&gt;desktop&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// desktop storage &lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;mobile&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// mobile storage&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// alternative&lt;/span&gt;\n    mobile = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;iphone&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;ipad&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;android&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;blackberry&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nokia&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;opera mini&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;windows mobile&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;windows phone&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;iemobile&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;tablet&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;mobi&apos;&lt;/span&gt;]; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ua=navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; mobile) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (ua.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(mobile[i]) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// nothing found.. assume desktop&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I advise you check out &lt;a href=&quot;http://wurfl.io/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://wurfl.io/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In a nutshell, if you import a tiny JavaScript file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&apos;text/javascript&apos;&lt;/span&gt; src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;//wurfl.io/wurfl.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You will be left with a JSON object that looks like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n &lt;span class=&quot;hljs-string&quot;&gt;&quot;complete_device_name&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Google Nexus 7&quot;&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&quot;is_mobile&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n &lt;span class=&quot;hljs-string&quot;&gt;&quot;form_factor&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Tablet&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(That&apos;s assuming you are using a Nexus 7, of course) and you will be able to do things like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;WURFL&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;is_mobile&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;//dostuff();&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is what you are looking for.&lt;/p&gt;\n\n&lt;p&gt;Disclaimer: I work for the company that offers this free service.&lt;/p&gt;\n    ","\n&lt;p&gt;Great answer thanks. Small improvement to support Windows phone and Zune:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/Android/i&lt;/span&gt;) ||\n  navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/webOS/i&lt;/span&gt;) ||\n  navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/iPhone/i&lt;/span&gt;) ||\n  navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/iPad/i&lt;/span&gt;) ||\n  navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/iPod/i&lt;/span&gt;) ||\n  navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/BlackBerry/&lt;/span&gt;) ||\n  navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/Windows Phone/i&lt;/span&gt;) ||\n  navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/ZuneWP7/i&lt;/span&gt;)\n) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// some code&lt;/span&gt;\n  self.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;top.htm&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know it&apos;s very old question about this kind of detection.&lt;/p&gt;\n&lt;p&gt;My solution is based on scroller width (is exist or not).&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// this function will check the width of scroller&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// if scroller width is less than 10px it&apos;s mobile device&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//function ismob() {&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dv = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;divscr&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sp=&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;res&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (dv.&lt;span class=&quot;hljs-property&quot;&gt;offsetWidth&lt;/span&gt; - dv.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) {sp.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Is mobile&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//return true; &lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    sp.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;It is not mobile&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//return false;&lt;/span&gt;\n    }\n&lt;span class=&quot;hljs-comment&quot;&gt;//}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- put hidden div on very begining of page --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;divscr&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;position:fixed;top:0;left:0;width:50px;height:50px;overflow:hidden;overflow-y:scroll;z-index:-1;visibility:hidden;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;res&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;You can use media query to be able to handle it easily.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;isMobile = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; isMobile = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;matchMedia&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;only screen and (max-width: 760px)&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; isMobile.&lt;span class=&quot;hljs-property&quot;&gt;matches&lt;/span&gt; ? &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Check out this &lt;a href=&quot;http://www.sitepoint.com/adapting-an-interface-for-touch-devices/&quot; rel=&quot;noreferrer&quot;&gt;post&lt;/a&gt;, it gives a really nice code snippet for what to do when touch devices are detected or what to do if touchstart event is called:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Touch&lt;/span&gt;) {\n    touch_detect.&lt;span class=&quot;hljs-title function_&quot;&gt;auto_detected&lt;/span&gt;();\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ontouchstart&lt;/span&gt; = touch_detect.&lt;span class=&quot;hljs-property&quot;&gt;surface&lt;/span&gt;;\n  }\n}); &lt;span class=&quot;hljs-comment&quot;&gt;// End loaded jQuery&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; touch_detect = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;auto_detected&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;/* add everything you want to do onLoad here (eg. activating hover controls) */&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;this was auto detected&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;activateTouchArea&lt;/span&gt;();\n  },\n  &lt;span class=&quot;hljs-attr&quot;&gt;surface&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;/* add everything you want to do ontouchstart here (eg. drag &amp;amp; drop) - you can fire this in both places */&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;this was detected by touching&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;activateTouchArea&lt;/span&gt;();\n  }\n}; &lt;span class=&quot;hljs-comment&quot;&gt;// touch_detect&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;activateTouchArea&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* make sure our screen doesn&apos;t scroll when we move the &quot;touchable area&quot; */&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; element = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;element_id&apos;&lt;/span&gt;);\n  element.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;touchstart&quot;&lt;/span&gt;, touchStart, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;touchStart&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;/* modularize preventing the default behavior so we can use it again */&lt;/span&gt;\n  event.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s a function you can use to get a true/false answer as to whether you&apos;re running on a mobile browser. Yes, it is browser-sniffing, but sometimes that is exactly what you need.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;is_mobile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; agents = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;android&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;webos&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;iphone&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;ipad&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;blackberry&apos;&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; agents) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;+agents[i]+&lt;span class=&quot;hljs-string&quot;&gt;&apos;/i&apos;&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**  * jQuery.browser.mobile (http://detectmobilebrowser.com/)  * jQuery.browser.mobile will be true if the browser is a mobile device  **/&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;){jQuery.&lt;span class=&quot;hljs-property&quot;&gt;browser&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;mobile&lt;/span&gt;=&lt;span class=&quot;hljs-regexp&quot;&gt;/android.+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(a)||&lt;span class=&quot;hljs-regexp&quot;&gt;/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|e\\-|e\\/|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\\-|2|g)|yas\\-|your|zeto|zte\\-/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(a.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;))})(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;||navigator.&lt;span class=&quot;hljs-property&quot;&gt;vendor&lt;/span&gt;||&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;opera&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then use this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(jQuery.&lt;span class=&quot;hljs-property&quot;&gt;browser&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;mobile&lt;/span&gt;)\n{\n&amp;nbsp; &amp;nbsp;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You are using a mobile device!&apos;&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n{\n&amp;nbsp; &amp;nbsp;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You are not using a mobile device!&apos;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;All answers use user-agent to detect the browser but device detection based on user-agent is not very good solution, better is to detect features like touch device (in new jQuery they remove &lt;code&gt;$.browser&lt;/code&gt; and use &lt;code&gt;$.support&lt;/code&gt; instead).&lt;/p&gt;\n\n&lt;p&gt;To detect mobile you can check for touch events:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;is_touch_device&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;ontouchstart&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// works on most browsers &lt;/span&gt;\n      || &lt;span class=&quot;hljs-string&quot;&gt;&apos;onmsgesturechange&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// works on ie10&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Taken from &lt;a href=&quot;https://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript#answer-4819886&quot;&gt;What&apos;s the best way to detect a &apos;touch screen&apos; device using JavaScript?&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I would be suggesting to use following combo of strings, to check if device type being used.&lt;/p&gt;\n\n&lt;p&gt;As per &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent&quot; rel=&quot;noreferrer&quot;&gt;Mozilla documentation&lt;/a&gt; string &lt;code&gt;Mobi&lt;/code&gt; is recommended. But, some of the old tablets doesn&apos;t return true if only &lt;code&gt;Mobi&lt;/code&gt; is used, hence we should use &lt;code&gt;Tablet&lt;/code&gt; string too.&lt;/p&gt;\n\n&lt;p&gt;Similarly, for being on the safe side &lt;code&gt;iPad&lt;/code&gt; and &lt;code&gt;iPhone&lt;/code&gt; strings could also be used to check the device type.&lt;/p&gt;\n\n&lt;p&gt;Most of the new devices would return &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;Mobi&lt;/code&gt; string alone.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-regexp&quot;&gt;/Mobi|Tablet|iPad|iPhone/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know this old question and there is a lot of answer but I think this function is simple and will help for detect all mobile, Tablet and computer browser it work like a charm.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Device_Type&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) \n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Return&lt;/span&gt;_Device; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(up.browser|up.link|mmp|symbian|smartphone|midp|wap|phone|android|iemobile|w3c|acs\\-|alav|alca|amoi|audi|avan|benq|bird|blac|blaz|brew|cell|cldc|cmd\\-|dang|doco|eric|hipt|inno|ipaq|java|jigs|kddi|keji|leno|lg\\-c|lg\\-d|lg\\-g|lge\\-|maui|maxo|midp|mits|mmef|mobi|mot\\-|moto|mwbp|nec\\-|newt|noki|palm|pana|pant|phil|play|port|prox|qwap|sage|sams|sany|sch\\-|sec\\-|send|seri|sgh\\-|shar|sie\\-|siem|smal|smar|sony|sph\\-|symb|t\\-mo|teli|tim\\-|tosh|tsm\\-|upg1|upsi|vk\\-v|voda|wap\\-|wapa|wapi|wapp|wapr|webc|winw|winw|xda|xda\\-) /i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;))\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(tablet|ipad|playbook)|(android(?!.*(mobi|opera mini)))/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;)) \n        {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Return&lt;/span&gt;_Device = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tablet&apos;&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Return&lt;/span&gt;_Device = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mobile&apos;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(tablet|ipad|playbook)|(android(?!.*(mobi|opera mini)))/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;)) \n    {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Return&lt;/span&gt;_Device = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tablet&apos;&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Return&lt;/span&gt;_Device = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Desktop&apos;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Return&lt;/span&gt;_Device;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple function based on &lt;a href=&quot;http://detectmobilebrowser.com/&quot; rel=&quot;noreferrer&quot;&gt;http://detectmobilebrowser.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isMobile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;||navigator.&lt;span class=&quot;hljs-property&quot;&gt;vendor&lt;/span&gt;||&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;opera&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-regexp&quot;&gt;/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(a)||&lt;span class=&quot;hljs-regexp&quot;&gt;/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(a.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;checkIsMobile&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mobile&quot;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n      }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n      }\n   }\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you goto any browser and if you try to get navigator.userAgent then we&apos;ll be getting the browser information something like following&lt;/p&gt;\n\n&lt;p&gt;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&lt;/p&gt;\n\n&lt;p&gt;The same thing if you do in mobile you&apos;ll be getting following&lt;/p&gt;\n\n&lt;p&gt;Mozilla/5.0 (Linux; Android 8.1.0; Pixel Build/OPP6.171019.012) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.98 &lt;strong&gt;Mobile&lt;/strong&gt; Safari/537.36&lt;/p&gt;\n\n&lt;p&gt;Every mobile browser will have useragent with string containing &lt;strong&gt;&quot;Mobile&quot;&lt;/strong&gt; So I&apos;m using above snippet in my code to check whether current user agent is web/mobile. Based on the result I&apos;ll be doing required changes.&lt;/p&gt;\n    ","\n&lt;p&gt;I use this &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;search&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mobile&quot;&lt;/span&gt;)&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ){\n         &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; something here\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;How about &lt;a href=&quot;http://mobiledetect.net&quot; rel=&quot;nofollow noreferrer&quot;&gt;mobiledetect.net&lt;/a&gt;?&lt;/p&gt;\n\n&lt;p&gt;Other solutions seem too basic. This is a lightweight PHP class. It uses the User-Agent string combined with specific HTTP headers to detect the mobile environment. You can also benefit from Mobile Detect by using any of the 3rd party plugins available for: WordPress, Drupal, Joomla, Magento, etc.&lt;/p&gt;\n    "],"333":["\n&lt;h1&gt;Introduction&lt;/h1&gt;\n\n&lt;p&gt;JSTL &lt;code&gt;&amp;lt;c:xxx&amp;gt;&lt;/code&gt; tags are all &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/faces/view/facelets/TagHandler.html&quot; rel=&quot;noreferrer&quot;&gt;taghandlers&lt;/a&gt; and they are executed during &lt;strong&gt;view build time&lt;/strong&gt;, while JSF &lt;code&gt;&amp;lt;h:xxx&amp;gt;&lt;/code&gt; tags are all &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/faces/component/UIComponent.html&quot; rel=&quot;noreferrer&quot;&gt;UI components&lt;/a&gt; and they are executed during &lt;strong&gt;view render time&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;p&gt;Note that from JSF&apos;s own &lt;code&gt;&amp;lt;f:xxx&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ui:xxx&amp;gt;&lt;/code&gt; tags only those which do &lt;em&gt;not&lt;/em&gt; extend from &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/faces/component/UIComponent.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;UIComponent&lt;/code&gt;&lt;/a&gt; are also taghandlers, e.g. &lt;code&gt;&amp;lt;f:validator&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:include&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:define&amp;gt;&lt;/code&gt;, etc. The ones which extend from &lt;code&gt;UIComponent&lt;/code&gt; are also JSF UI components, e.g. &lt;code&gt;&amp;lt;f:param&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:fragment&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;, etc. From JSF UI components only the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;binding&lt;/code&gt; attributes are also evaluated during view build time. Thus the below answer as to JSTL lifecycle also applies to the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;binding&lt;/code&gt; attributes of JSF components.&lt;/p&gt;\n\n&lt;p&gt;The view build time is that moment when the XHTML/JSP file is to be parsed and converted to a JSF component tree which is then stored as &lt;code&gt;UIViewRoot&lt;/code&gt; of the &lt;code&gt;FacesContext&lt;/code&gt;. The view render time is that moment when the JSF component tree is about to generate HTML, starting with &lt;code&gt;UIViewRoot#encodeAll()&lt;/code&gt;. So: JSF UI components and JSTL tags doesn&apos;t run in sync as you&apos;d expect from the coding. You can visualize it as follows: JSTL runs from top to bottom first, producing the JSF component tree, then it&apos;s JSF&apos;s turn to run from top to bottom again, producing the HTML output.&lt;/p&gt;\n\n&lt;h1&gt;&lt;code&gt;&amp;lt;c:forEach&amp;gt;&lt;/code&gt; vs &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;&lt;/h1&gt;\n\n&lt;p&gt;For example, this Facelets markup iterating over 3 items using &lt;code&gt;&amp;lt;c:forEach&amp;gt;&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:forEach&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;items&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{bean.items}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:outputText&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item_#{item.id}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{item.value}&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;c:forEach&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...creates during view build time three separate &lt;code&gt;&amp;lt;h:outputText&amp;gt;&lt;/code&gt; components in the JSF component tree, roughly represented like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:outputText&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item_1&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{bean.items[0].value}&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:outputText&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item_2&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{bean.items[1].value}&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:outputText&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item_3&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{bean.items[2].value}&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...which in turn individually generate their HTML output during view render time:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item_1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;value1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item_2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;value2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item_3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;value3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that you need to manually ensure the uniqueness of the component IDs and that those are also evaluated during view build time.&lt;/p&gt;\n\n&lt;p&gt;While this Facelets markup iterating over 3 items using &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;, which is a JSF UI component:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ui:repeat&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;items&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{bean.items}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:outputText&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;item&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{item.value}&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ui:repeat&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...already ends up as-is in the JSF component tree whereby the very same &lt;code&gt;&amp;lt;h:outputText&amp;gt;&lt;/code&gt; component is during view render time being &lt;strong&gt;reused&lt;/strong&gt; to generate HTML output based on current iteration round:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;items:0:item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;value1&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;items:1:item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;value2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;items:2:item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;value3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that the &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt; as being a &lt;code&gt;NamingContainer&lt;/code&gt; component already ensured the uniqueness of the client ID based on iteration index; it&apos;s also not possible to use EL in &lt;code&gt;id&lt;/code&gt; attribute of child components this way as it is also evaluated during view build time while &lt;code&gt;#{item}&lt;/code&gt; is only available during view render time. Same is true for an &lt;code&gt;h:dataTable&lt;/code&gt; and similar components.&lt;/p&gt;\n\n&lt;h1&gt;&lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;c:choose&amp;gt;&lt;/code&gt; vs &lt;code&gt;rendered&lt;/code&gt;&lt;/h1&gt;\n\n&lt;p&gt;As another example, this Facelets markup conditionally adding different tags using &lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt; (you can also use &lt;code&gt;&amp;lt;c:choose&amp;gt;&amp;lt;c:when&amp;gt;&amp;lt;c:otherwise&amp;gt;&lt;/code&gt; for this):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{field.type eq &apos;TEXT&apos;}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:inputText&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{field.type eq &apos;PASSWORD&apos;}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:inputSecret&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{field.type eq &apos;SELECTONE&apos;}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:selectOneMenu&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...will in case of &lt;code&gt;type = TEXT&lt;/code&gt; only add the &lt;code&gt;&amp;lt;h:inputText&amp;gt;&lt;/code&gt; component to the JSF component tree:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:inputText&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;While this Facelets markup:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&amp;lt;h:inputText ... rendered=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;#{field.type eq &lt;span class=&quot;hljs-string&quot;&gt;&apos;TEXT&apos;&lt;/span&gt;}&lt;/span&gt;&quot;&lt;/span&gt; /&amp;gt;\n&amp;lt;h:inputSecret ... rendered=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;#{field.type eq &lt;span class=&quot;hljs-string&quot;&gt;&apos;PASSWORD&apos;&lt;/span&gt;}&lt;/span&gt;&quot;&lt;/span&gt; /&amp;gt;\n&amp;lt;h:selectOneMenu ... rendered=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;#{field.type eq &lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECTONE&apos;&lt;/span&gt;}&lt;/span&gt;&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;...will end up exactly as above in the JSF component tree regardless of the condition. This may thus end up in a &quot;bloated&quot; component tree when you have many of them and they are actually based on a &quot;static&quot; model (i.e. the &lt;code&gt;field&lt;/code&gt; does not ever change during at least the view scope). Also, you may run into EL &lt;a href=&quot;https://stackoverflow.com/questions/25594147/propertynotfoundexception-on-conditionally-rendered-subclasses-in-uirepeat/&quot;&gt;trouble&lt;/a&gt; when you deal with subclasses with additional properties in Mojarra versions before 2.2.7.&lt;/p&gt;\n\n&lt;h1&gt;&lt;code&gt;&amp;lt;c:set&amp;gt;&lt;/code&gt; vs &lt;code&gt;&amp;lt;ui:param&amp;gt;&lt;/code&gt;&lt;/h1&gt;\n\n&lt;p&gt;They are not interchangeable. The &lt;code&gt;&amp;lt;c:set&amp;gt;&lt;/code&gt; sets a variable in the EL scope, which is accessible only &lt;em&gt;after&lt;/em&gt; the tag location during view build time, but anywhere in the view during view render time. The &lt;code&gt;&amp;lt;ui:param&amp;gt;&lt;/code&gt; passes an EL variable to a Facelet template included via &lt;code&gt;&amp;lt;ui:include&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:decorate template&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;ui:composition template&amp;gt;&lt;/code&gt;. Older JSF versions had bugs whereby the &lt;code&gt;&amp;lt;ui:param&amp;gt;&lt;/code&gt; variable is also available outside the Facelet template in question, this should never be relied upon.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;&amp;lt;c:set&amp;gt;&lt;/code&gt; without a &lt;code&gt;scope&lt;/code&gt; attribute will behave like an alias. It does not cache the result of the EL expression in any scope. It can thus perfectly fine be used inside for example iterating JSF components. Thus, e.g. below will work fine:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;ui:&lt;span class=&quot;hljs-keyword&quot;&gt;repeat&lt;/span&gt; value&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{bean.products}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;product&quot;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;c:&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;price&quot;&lt;/span&gt; value&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{product.price}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;h:outputText value&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{price}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;/&lt;/span&gt;ui:&lt;span class=&quot;hljs-keyword&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&apos;s only not suitable for e.g. calculating the sum in a loop. For that instead use &lt;a href=&quot;https://stackoverflow.com/questions/20456143/auto-calculate-total-sum-of-a-column-with-numeric-data-in-datatable-footer/&quot;&gt;EL 3.0 stream&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ui:repeat&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{bean.products}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;product&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    ...\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ui:repeat&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Total price: #{bean.products.stream().map(product-&amp;gt;product.price).sum()}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Only, when you set the &lt;code&gt;scope&lt;/code&gt; attribute with one of allowable values &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;session&lt;/code&gt;, or &lt;code&gt;application&lt;/code&gt;, then it will be evaluated immediately during view build time and stored in the specified scope.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&amp;lt;c:&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;dev&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{facesContext.application.projectStage eq &apos;Development&apos;}&quot;&lt;/span&gt; scope=&lt;span class=&quot;hljs-string&quot;&gt;&quot;application&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will be evaluated only once and available as &lt;code&gt;#{dev}&lt;/code&gt; throughout the entire application.&lt;/p&gt;\n\n&lt;h1&gt;Use JSTL to control JSF component tree building&lt;/h1&gt;\n\n&lt;p&gt;Using JSTL may only lead to unexpected results when being used inside JSF iterating components such as &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;, etc, or when JSTL tag attributes depend on results of JSF events such as &lt;code&gt;preRenderView&lt;/code&gt; or submitted form values in the model which aren&apos;t available during view build time. So, use JSTL tags only to control flow of JSF component tree building. Use JSF UI components to control flow of HTML output generation. Do not bind the &lt;code&gt;var&lt;/code&gt; of iterating JSF components to JSTL tag attributes. Do not rely on JSF events in JSTL tag attributes.&lt;/p&gt;\n\n&lt;p&gt;Anytime you think you need to bind a component to the backing bean via &lt;code&gt;binding&lt;/code&gt;, or grab one via &lt;code&gt;findComponent()&lt;/code&gt;, and create/manipulate its children  using Java code in a backing bean with &lt;code&gt;new SomeComponent()&lt;/code&gt; and what not, then you should immediately stop and consider using JSTL instead. As JSTL is also XML based, the code needed to dynamically create JSF components will become so much better readable and maintainable.&lt;/p&gt;\n\n&lt;p&gt;Important to know is that Mojarra versions older than 2.1.18 had a bug in partial state saving when referencing a view scoped bean in a JSTL tag attribute. The whole view scoped bean would be &lt;strong&gt;newly&lt;/strong&gt; recreated instead of retrieved from the view tree (simply because the complete view tree isn&apos;t available yet at the point JSTL runs). If you&apos;re expecting or storing some state in the view scoped bean by a JSTL tag attribute, then it won&apos;t return the value you expect, or it will be &quot;lost&quot; in the real view scoped bean which is restored after the view tree is built. In case you can&apos;t upgrade to Mojarra 2.1.18 or newer, the work around is to turn off partial state saving in &lt;code&gt;web.xml&lt;/code&gt; like below:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;context-param&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;javax.faces.PARTIAL_STATE_SAVING&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;context-param&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;See also:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/31890433&quot;&gt;What&apos;s the view build time?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14911158&quot;&gt;How does the &apos;binding&apos; attribute work in JSF? When and how should it be used?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/31732567&quot;&gt;How to refactor snippet of old JSP to some JSF equivalent?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10337015&quot;&gt;Should PARTIAL_STATE_SAVING be set to false?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://balusc.blogspot.com/2011/09/communication-in-jsf-20.html#ViewScopedFailsInTagHandlers&quot; rel=&quot;noreferrer&quot;&gt;Communication in JSF 2.0 - &lt;code&gt;@ViewScoped&lt;/code&gt; fails in tag handlers&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;To see some real world examples where JSTL tags are helpful (i.e. when really properly used during building the view), see the following questions/answers:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5713718/how-to-make-a-grid-of-jsf-composite-component&quot;&gt;How to make a grid of JSF composite component?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11280688/create-table-columns-dynamically-in-jsf&quot;&gt;Create table columns dynamically in JSF&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11255509/how-to-custom-layout-hselectoneradio/&quot;&gt;How to custom layout h:selectOneRadio&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8400066/conditional-variable-definition-in-jsf&quot;&gt;Conditional variable definition in JSF&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12509310/how-to-make-composite-component-similar-to-hselectoneradio/&quot;&gt;How to make composite component similar to &amp;lt;h:selectOneRadio /&amp;gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11368292/jsf-2-composite-component-with-optional-listener-attribute-on-fajax/&quot;&gt;JSF 2 -- Composite component with optional listener attribute on f:ajax&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/29987055/nested-jsf-composite-components-leading-to-a-stack-overflow-exception&quot;&gt;Nested JSF Composite Components leading to a Stack Overflow exception&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h1&gt;In a nutshell&lt;/h1&gt;\n\n&lt;p&gt;As to your concrete functional requirement, if you want to &lt;strong&gt;render&lt;/strong&gt; JSF components conditionally, use the &lt;code&gt;rendered&lt;/code&gt; attribute on the JSF HTML component instead, &lt;em&gt;particularly&lt;/em&gt; if &lt;code&gt;#{lpc}&lt;/code&gt; represents the currently iterated item of a JSF iterating component such as &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:someComponent&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;rendered&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{lpc.verbose}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    ...\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h:someComponent&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or, if you want to &lt;strong&gt;build&lt;/strong&gt; (create/add) JSF components conditionally, then keep using JSTL. It&apos;s way much better than verbosely doing &lt;code&gt;new SomeComponent()&lt;/code&gt; in java.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{lpc.verbose}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:someComponent&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        ...\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h:someComponent&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;c:if&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;See also:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4870462&quot;&gt;Conditionally displaying JSF components&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3442380&quot;&gt;JSTL c:if doesn&apos;t work inside a JSF h:dataTable&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7248439&quot;&gt;Specify conditional rendering of element inside &amp;lt;ui:repeat&amp;gt;? The &amp;lt;c:if&amp;gt; does not seem to work&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;use &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h:panelGroup&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;rendered&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#{lpc.verbose}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  ...\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h:panelGroup&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For switch-like output, you can use the &lt;a href=&quot;http://www.primefaces.org/showcase-ext/sections/utils/switch.jsf&quot; rel=&quot;nofollow noreferrer&quot;&gt;switch&lt;/a&gt; face from PrimeFaces Extensions.&lt;/p&gt;\n    "],"334":["\n&lt;p&gt;The rules of adding a PHP variable inside of any MySQL statement are plain and simple:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Any variable that represents an &lt;em&gt;SQL data literal&lt;/em&gt;, (or, to put it simply - an SQL string, or a number) MUST be added through a prepared statement. No exceptions.&lt;/li&gt;\n&lt;li&gt;Any other query part, such as an SQL keyword, a table or a field name, or an operator - must be filtered through a &lt;strong&gt;white list&lt;/strong&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;So as your example only involves data literals, then all variables must be added through placeholders (also called parameters). To do so:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;In your SQL statement, replace all variables with &lt;em&gt;placeholders&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;prepare&lt;/em&gt; the resulting query&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;bind&lt;/em&gt; variables to placeholders&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;execute&lt;/em&gt; the query&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;And here is how to do it with all popular PHP database drivers:&lt;/p&gt;\n&lt;h3&gt;Adding data literals using mysql ext&lt;/h3&gt;\n&lt;p&gt;Such a driver &lt;a href=&quot;https://www.php.net/manual/en/function.mysql-query.php&quot; rel=&quot;noreferrer&quot;&gt;doesn&apos;t exist&lt;/a&gt;.&lt;/p&gt;\n&lt;h3&gt;Adding data literals using &lt;code&gt;mysqli&lt;/code&gt;&lt;/h3&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;testing&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$reporter&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;John O&apos;Hara&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO contents (type, reporter, description) \n             VALUES(?, ?, &apos;whatever&apos;)&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$mysqli&lt;/span&gt;-&amp;gt;prepare(&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt;-&amp;gt;bind_param(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ss&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$reporter&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt;-&amp;gt;execute();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The code is a bit complicated but the detailed explanation of all these operators can be found in my article, &lt;a href=&quot;https://phpdelusions.net/mysqli_examples/insert&quot; rel=&quot;noreferrer&quot;&gt;How to run an INSERT query using Mysqli&lt;/a&gt;, as well as a solution that eases the process dramatically.&lt;/p&gt;\n&lt;p&gt;For a SELECT query you will need to add just a call to &lt;code&gt;get_result()&lt;/code&gt; method to get a familiar &lt;code&gt;mysqli_result&lt;/code&gt; from which you can fetch the data the usual way:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-perl&quot;&gt;$reporter = &lt;span class=&quot;hljs-string&quot;&gt;&quot;John O&apos;Hara&quot;&lt;/span&gt;;\n$stmt = $mysqli-&amp;gt;prepare(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT * FROM users WHERE name=?&quot;&lt;/span&gt;);\n$stmt-&amp;gt;bind_param(&lt;span class=&quot;hljs-string&quot;&gt;&quot;s&quot;&lt;/span&gt;, $reporter);\n$stmt-&amp;gt;execute();\n$result = $stmt-&amp;gt;get_result();\n$row = $result-&amp;gt;fetch_assoc(); &lt;span class=&quot;hljs-regexp&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (...)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Adding data literals using PDO&lt;/h3&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;testing&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$reporter&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;John O&apos;Hara&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO contents (type, reporter, description) \n             VALUES(?, ?, &apos;whatever&apos;)&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$pdo&lt;/span&gt;-&amp;gt;prepare(&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt;-&amp;gt;execute([&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$reporter&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In PDO, we can have the bind and execute parts combined, which is very convenient. PDO also supports named placeholders which some find extremely convenient.&lt;/p&gt;\n&lt;h3&gt;Adding keywords or identifiers&lt;/h3&gt;\n&lt;p&gt;Sometimes we have to add a variable that represents another part of a query, such as a keyword or an identifier (a database, table or a field name). It&apos;s a rare case but it&apos;s better to be prepared.&lt;/p&gt;\n&lt;p&gt;In this case, your variable must be checked against a list of values &lt;strong&gt;explicitly&lt;/strong&gt; written in your script. This is explained in my other article, &lt;a href=&quot;https://phpdelusions.net/pdo_examples/order_by&quot; rel=&quot;noreferrer&quot;&gt;Adding a field name in the ORDER BY clause based on the user&apos;s choice&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Unfortunately, PDO has no placeholder for identifiers (table and field names), therefore a developer must filter them out manually. Such a filter is often called a &quot;white list&quot; (where we only list allowed values) as opposed to a &quot;black-list&quot; where we list disallowed values.&lt;/p&gt;\n&lt;p&gt;So we have to explicitly list all possible variants in the PHP code and then choose from them.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Here is an example:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$orderby&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;orderby&apos;&lt;/span&gt;] ?: &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// set the default value&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$allowed&lt;/span&gt; = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;price&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;qty&quot;&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// the white list of allowed field names&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_search&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$orderby&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$allowed&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// see if we have such a name&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;InvalidArgumentException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Invalid field name&quot;&lt;/span&gt;); \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Exactly the same approach should be used for the direction,&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$direction&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;direction&apos;&lt;/span&gt;] ?: &lt;span class=&quot;hljs-string&quot;&gt;&quot;ASC&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$allowed&lt;/span&gt; = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;ASC&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;DESC&quot;&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_search&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$direction&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$allowed&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;InvalidArgumentException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Invalid ORDER BY direction&quot;&lt;/span&gt;); \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;After such a code, both &lt;code&gt;$direction&lt;/code&gt; and &lt;code&gt;$orderby&lt;/code&gt; variables can be safely put in the SQL query, as they are either equal to one of the allowed variants or there will be an error thrown.&lt;/p&gt;\n&lt;p&gt;The last thing to mention about identifiers, they must be also formatted according to the particular database syntax. For MySQL it should be &lt;code&gt;backtick&lt;/code&gt; characters around the identifier. So the final query string for our order by example would be&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT * FROM `table` ORDER BY `&lt;span class=&quot;hljs-variable&quot;&gt;$orderby&lt;/span&gt;` &lt;span class=&quot;hljs-variable&quot;&gt;$direction&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To avoid SQL injection the insert statement with be&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;testing&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;john&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$description&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;whatever&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$user&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$pass&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$db&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;prepare&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO contents (type, reporter, description) VALUES (?, ?, ?)&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;bind_param&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sss&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt; , &lt;span class=&quot;hljs-variable&quot;&gt;$name&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$description&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$stmt&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;execute&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;The best option is prepared statements.&lt;/strong&gt; Messing around with quotes and escapes is harder work to begin with, and difficult to maintain. Sooner or later you will end up accidentally forgetting to quote something or end up escaping the same string twice, or mess up something like that. Might be years before you find those type of bugs.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://php.net/manual/en/pdo.prepared-statements.php&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The text inside $type is substituted directly into the insert string, therefore MySQL gets this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;VALUES(testing, &lt;span class=&quot;hljs-string&quot;&gt;&apos;john&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;whatever&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Notice that there are no quotes around testing, you need to put these in like so:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;testing&apos;&lt;/span&gt;;\nmysql_query(&lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO contents (type, reporter, description) VALUES(&apos;&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;&apos;, &apos;john&apos;, &apos;whatever&apos;)&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I also recommend you read up on &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot; rel=&quot;nofollow&quot;&gt;SQL injection&lt;/a&gt;, as this sort of parameter passing is prone to hacking attempts if you do not sanitize the data being used:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;&lt;a href=&quot;http://www.tizag.com/mysqlTutorial/mysql-php-sql-injection.php&quot; rel=&quot;nofollow&quot;&gt;MySQL - SQL Injection Prevention&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;That&apos;s the easy answer:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT * FROM CountryInfo WHERE Name = &apos;&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$name&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and you define &lt;code&gt;$name&lt;/code&gt; whatever you want.&lt;br&gt;\nAnd another way, the complex way, is like that:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-erlang&quot;&gt;$&lt;span class=&quot;hljs-keyword&quot;&gt;query&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot; SELECT &apos;&quot;&lt;/span&gt; . $GLOBALS[&apos;Name&apos;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos; .* &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; FROM CountryInfo &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; INNER JOIN District &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; ON District.CountryInfoId = CountryInfo.CountryInfoId &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; INNER JOIN City &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; ON City.DistrictId = District.DistrictId &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; INNER JOIN &apos;&quot;&lt;/span&gt; . $GLOBALS[&apos;Name&apos;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos; &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; ON &apos;&quot;&lt;/span&gt; . $GLOBALS[&apos;Name&apos;] . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;.CityId = City.CityId &quot;&lt;/span&gt; .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot; WHERE CountryInfo.Name = &apos;&quot;&lt;/span&gt; . $GLOBALS[&apos;CountryName&apos;] .\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"335":["\n&lt;p&gt;Depending upon the design being produced, each of the below clearfix CSS solutions has its own benefits.&lt;/p&gt;\n\n&lt;p&gt;The clearfix does have useful applications but it has also been used as a hack. Before you use a clearfix perhaps these modern css solutions can be useful:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot; rel=&quot;noreferrer&quot;&gt;css flexbox&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/snippets/css/complete-guide-grid/&quot; rel=&quot;noreferrer&quot;&gt;css grid&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h1&gt;Modern Clearfix Solutions&lt;/h1&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Container with &lt;code&gt;overflow: auto;&lt;/code&gt;&lt;/h2&gt;\n\n&lt;p&gt;The simplest way to clear floated elements is using the style &lt;code&gt;overflow: auto&lt;/code&gt; on the containing element. This solution works in every modern browsers.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;overflow: auto;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;float: right;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;path/to/floated-element.png&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;500&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;500&quot;&lt;/span&gt;\n  &amp;gt;&lt;/span&gt; \n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Your content here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;One downside, using certain combinations of margin and padding on the external element can cause scrollbars to appear but this can be solved by placing the margin and padding on another parent containing element.&lt;/p&gt;\n\n&lt;p&gt;Using overflow: hidden is also a clearfix solution, but will not have scrollbars, however using &lt;code&gt;hidden&lt;/code&gt; will crop any content positioned outside of the containing element.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; The floated element is an &lt;code&gt;img&lt;/code&gt; tag in this example, but could be any html element.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Clearfix Reloaded&lt;/h2&gt;\n\n&lt;p&gt;Thierry Koblentz on CSSMojo wrote: &lt;a href=&quot;http://cssmojo.com/the-very-latest-clearfix-reloaded/&quot; rel=&quot;noreferrer&quot;&gt;The very latest clearfix reloaded&lt;/a&gt;. He noted that by dropping support for oldIE, the solution can be simplified to one css statement. Additionally, using &lt;code&gt;display: block&lt;/code&gt; (instead of &lt;code&gt;display: table&lt;/code&gt;) allows margins to collapse properly when elements with clearfix are siblings.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is the most modern version of the clearfix.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;h1&gt;Older Clearfix Solutions&lt;/h1&gt;\n\n&lt;p&gt;The below solutions are not necessary for modern browsers, but may be useful for targeting older browsers.&lt;/p&gt;\n\n&lt;p&gt;Note that these solutions rely upon browser bugs and therefore should be used only if none of the above solutions work for you.&lt;/p&gt;\n\n&lt;p&gt;They are listed roughly in chronological order.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;&quot;Beat That ClearFix&quot;, a clearfix for modern browsers&lt;/h2&gt;\n\n&lt;p&gt;Thierry Koblentz&apos; of &lt;a href=&quot;http://www.cssmojo.com/latest_new_clearfix_so_far/&quot; rel=&quot;noreferrer&quot;&gt;CSS Mojo&lt;/a&gt; has pointed out that when targeting modern browsers, we can now drop the &lt;code&gt;zoom&lt;/code&gt; and &lt;code&gt;::before&lt;/code&gt; property/values and simply use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::after&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;This solution does not support for IE 6/7 on purpose!&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Thierry also offers: &quot;&lt;a href=&quot;http://www.cssmojo.com/latest_new_clearfix_so_far/#why-is-that&quot; rel=&quot;noreferrer&quot;&gt;A word of caution&lt;/a&gt;: if you start a new project from scratch, go for it, but dont swap this technique with the one you have now, because even though you do not support oldIE, your existing rules prevent collapsing margins.&quot;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Micro Clearfix&lt;/h2&gt;\n\n&lt;p&gt;The most recent and globally adopted clearfix solution, the &lt;a href=&quot;http://nicolasgallagher.com/micro-clearfix-hack/&quot; rel=&quot;noreferrer&quot;&gt;Micro Clearfix by Nicolas Gallagher&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Known support: Firefox 3.5+, Safari 4+, Chrome, Opera 9+, IE 6+&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt;, &lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Overflow Property&lt;/h2&gt;\n\n&lt;p&gt;This basic method is preferred for the usual case, when positioned content will not show outside the bounds of the container.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.quirksmode.org/css/clearing.html&quot; rel=&quot;noreferrer&quot;&gt;http://www.quirksmode.org/css/clearing.html&lt;/a&gt;\n- &lt;em&gt;explains how to resolve common issues related to this technique, namely, setting &lt;code&gt;width: 100%&lt;/code&gt; on the container.&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Rather than using the &lt;code&gt;display&lt;/code&gt; property to set &quot;hasLayout&quot; for IE, other properties can be used for &lt;a href=&quot;http://www.satzansatz.de/cssd/onhavinglayout.html&quot; rel=&quot;noreferrer&quot;&gt;triggering &quot;hasLayout&quot; for an element&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;\n  zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another way to clear floats using the &lt;code&gt;overflow&lt;/code&gt; property is to use the &lt;a href=&quot;http://wellstyled.com/css-underscore-hack.html&quot; rel=&quot;noreferrer&quot;&gt;underscore hack&lt;/a&gt;. IE will apply the values prefixed with the underscore, other browsers will not. The &lt;code&gt;zoom&lt;/code&gt; property triggers &lt;a href=&quot;http://www.satzansatz.de/cssd/onhavinglayout.html&quot; rel=&quot;noreferrer&quot;&gt;hasLayout&lt;/a&gt; in IE:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;\n  _overflow: visible; &lt;span class=&quot;hljs-comment&quot;&gt;/* for IE */&lt;/span&gt;\n  _zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* for IE */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;While this works... it is not ideal to use hacks.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;PIE: Easy Clearing Method&lt;/h2&gt;\n\n&lt;p&gt;This older &quot;Easy Clearing&quot; method has the advantage of allowing positioned elements to hang outside the bounds of the container, at the expense of more tricky CSS.&lt;/p&gt;\n\n&lt;p&gt;This solution is quite old, but you can learn all about Easy Clearing on Position Is Everything: &lt;a href=&quot;http://www.positioniseverything.net/easyclearing.html&quot; rel=&quot;noreferrer&quot;&gt;http://www.positioniseverything.net/easyclearing.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Element using &quot;clear&quot; property&lt;/h2&gt;\n\n&lt;p&gt;The quick and dirty solution (with some drawbacks) for when youre quickly slapping something together:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear: both&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- So dirty! --&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Drawbacks&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It&apos;s not responsive and thus may not provide the desired effect if layout styles change based upon media queries. A solution in pure CSS is more ideal.&lt;/li&gt;\n&lt;li&gt;It adds html markup without necessarily adding any semantic value.&lt;/li&gt;\n&lt;li&gt;It requires a inline definition and solution for each instance rather than a class reference to a single solution of a clearfix in the css and class references to it in the html.&lt;/li&gt;\n&lt;li&gt;It makes code difficult to work with for others as they may have to write more hacks to work around it.&lt;/li&gt;\n&lt;li&gt;In the future when you need/want to use another clearfix solution, you won&apos;t have to go back and remove every &lt;code&gt;&amp;lt;br style=&quot;clear: both&quot; /&amp;gt;&lt;/code&gt; tag littered around the markup.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h2&gt;What problems are we trying to solve?&lt;/h2&gt;\n\n&lt;p&gt;There are two important considerations when floating stuff:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Containing descendant floats.&lt;/strong&gt; This means that the element in question makes itself tall enough to wrap all floating descendants. (They don&apos;t hang outside.)&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/3AUJp.png&quot; alt=&quot;Floating content hanging outside its container&quot;&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Insulating descendants from outside floats.&lt;/strong&gt; This means that descendants inside of an element should be able to use &lt;code&gt;clear: both&lt;/code&gt; and have it not interact with floats outside the element.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/XIMXt.png&quot; alt=&quot;&lt;code&gt;clear: both&lt;/code&gt; interacting with a float elsewhere in the DOM&quot;&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Block formatting contexts&lt;/h2&gt;\n\n&lt;p&gt;There&apos;s only one way to do both of these. And that is to establish a new &lt;a href=&quot;https://developer.mozilla.org/en/CSS/block_formatting_context&quot; rel=&quot;noreferrer&quot;&gt;block formatting context&lt;/a&gt;. Elements that establish a block formatting context are an insulated rectangle in which floats interact with each other. A block formatting context will always be tall enough to visually wrap its floating descendants, and no floats outside of a block formatting context may interact with elements inside. This two-way insulation is exactly what you want. In IE, this same concept is called &lt;a href=&quot;http://www.satzansatz.de/cssd/onhavinglayout.html&quot; rel=&quot;noreferrer&quot;&gt;hasLayout&lt;/a&gt;, which can be set via &lt;code&gt;zoom: 1&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;There are several ways to establish a block formatting context, but the solution I recommend is &lt;code&gt;display: inline-block&lt;/code&gt; with &lt;code&gt;width: 100%&lt;/code&gt;. (Of course, there are the &lt;a href=&quot;https://stackoverflow.com/questions/5219175/width-100-padding&quot;&gt;usual caveats&lt;/a&gt; with using &lt;code&gt;width: 100%&lt;/code&gt;, so use &lt;code&gt;box-sizing: border-box&lt;/code&gt; or put &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;margin&lt;/code&gt;, and &lt;code&gt;border&lt;/code&gt; on a different element.)&lt;/p&gt;\n\n&lt;h2&gt;The most robust solution&lt;/h2&gt;\n\n&lt;p&gt;Probably the most common application of floats is the two-column layout. (Can be extended to three columns.)&lt;/p&gt;\n\n&lt;p&gt;First the markup structure.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sidebar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    sidebar&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;sidebar&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;sidebar\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;main-content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      main content\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear: both&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        main content that uses &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;clear: both&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And now the CSS.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* Should contain all floated and non-floated content, so it needs to\n * establish a new block formatting context without using overflow: hidden.\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* new block formatting context via hasLayout for IE 6/7 */&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* Fixed-width floated sidebar. */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.sidebar&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: left;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;160px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* Needs to make space for the sidebar. */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.main&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;160px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* Establishes a new block formatting context to insulate descendants from\n * the floating sidebar. */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.main-content&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* new block formatting context via hasLayout for IE 6/7 */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Try it yourself&lt;/h2&gt;\n\n&lt;p&gt;Go to &lt;a href=&quot;http://jsbin.com/eciwev/1/edit&quot; rel=&quot;noreferrer&quot;&gt;JS Bin&lt;/a&gt; to play around with the code and see how this solution is built from the ground up.&lt;/p&gt;\n\n&lt;h2&gt;Traditional clearfix methods considered harmful&lt;/h2&gt;\n\n&lt;p&gt;The problem with the traditional &lt;a href=&quot;http://www.positioniseverything.net/easyclearing.html&quot; rel=&quot;noreferrer&quot;&gt;clearfix&lt;/a&gt; &lt;a href=&quot;http://nicolasgallagher.com/micro-clearfix-hack/&quot; rel=&quot;noreferrer&quot;&gt;solutions&lt;/a&gt; is that they use two different rendering concepts to achieve the same goal for IE and everyone else. In IE they use hasLayout to establish a new block formatting context, but for everyone else they use generated boxes (&lt;code&gt;:after&lt;/code&gt;) with &lt;code&gt;clear: both&lt;/code&gt;, which does not establish a new block formatting context. This means things won&apos;t behave the same in all situations. For an explanation of why this is bad, see &lt;a href=&quot;http://www.cssmojo.com/clearfix_block-formatting-context_and_hasLayout/&quot; rel=&quot;noreferrer&quot;&gt;Everything you Know about Clearfix is Wrong&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;The newest standard, as used by &lt;a href=&quot;http://inuitcss.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Inuit.css&lt;/a&gt; and &lt;a href=&quot;http://bourbon.io&quot; rel=&quot;nofollow noreferrer&quot;&gt;Bourbon&lt;/a&gt; - two very widely used and well-maintained CSS/Sass frameworks:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.btcf&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:block;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;:both;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h3&gt;Notes&lt;/h3&gt;\n&lt;p&gt;Keep in mind that clearfixes are essentially a hack for what flexbox layouts can now provide in a &lt;a href=&quot;https://philipwalton.github.io/solved-by-flexbox/&quot; rel=&quot;nofollow noreferrer&quot;&gt;much easier and smarter way&lt;/a&gt;. CSS floats were originally designed for inline content to flow around - like images in a long textual article - and not for grid layouts and the like. Unless you&apos;re specifically targeting old (not Edge) Internet Explorer, your &lt;a href=&quot;http://caniuse.com/#feat=flexbox&quot; rel=&quot;nofollow noreferrer&quot;&gt;target browsers support flexbox&lt;/a&gt;, so it&apos;s worth the time to learn.&lt;/p&gt;\n&lt;p&gt;This doesn&apos;t support IE7. You &lt;strong&gt;shouldn&apos;t&lt;/strong&gt; be supporting IE7. Doing so continues to expose users to unfixed security exploits and makes life harder for all other web developers, as it reduces the pressure on users and organisations to switch to safer modern browsers.&lt;/p&gt;\n&lt;p&gt;This clearfix was &lt;a href=&quot;http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;announced and explained by Thierry Koblentz&lt;/a&gt; in July 2012. It sheds unnecessary weight from &lt;a href=&quot;http://nicolasgallagher.com/micro-clearfix-hack/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Nicolas Gallagher&apos;s 2011 micro-clearfix&lt;/a&gt;. In the process, it frees a pseudo-element for your own use. This has been updated to use &lt;code&gt;display: block&lt;/code&gt; rather than &lt;code&gt;display: table&lt;/code&gt; (again, credit to Thierry Koblentz).&lt;/p&gt;\n    ","\n&lt;p&gt;I recommend using the following, which is taken from &lt;a href=&quot;http://html5boilerplate.com/&quot; rel=&quot;noreferrer&quot;&gt;http://html5boilerplate.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* &amp;gt;&amp;gt; The Magnificent CLEARFIX &amp;lt;&amp;lt; */&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; { \n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;; \n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block; \n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; \n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both; \n  &lt;span class=&quot;hljs-attribute&quot;&gt;visibility&lt;/span&gt;: hidden; \n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt; { \n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;  \n}\n* &lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt; {  \n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1%&lt;/span&gt;;  \n} &lt;span class=&quot;hljs-comment&quot;&gt;/* Hides from IE-mac \\*/&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt; {  \n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;  \n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The overflow property can be used to clear floats with no additional mark-up:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; { &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works for all browsers except IE6, where all you need to do is enable hasLayout (zoom being my preferred method):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; { zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.quirksmode.org/css/clearing.html&quot; rel=&quot;noreferrer&quot;&gt;http://www.quirksmode.org/css/clearing.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve found a bug in the official CLEARFIX-Method:\nThe DOT doesn&apos;t have a font-size.\nAnd if you set the &lt;code&gt;height = 0&lt;/code&gt; and the first Element in your DOM-Tree has the class &quot;clearfix&quot; you&apos;ll allways have a margin at the bottom of the page of 12px :)&lt;/p&gt;\n\n&lt;p&gt;You have to fix it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* float clearing for everyone else */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;visibility&lt;/span&gt;: hidden;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&apos;s now part of the YAML-Layout ... Just take a look at it - it&apos;s very interesting!\n&lt;a href=&quot;http://www.yaml.de/en/home.html&quot; rel=&quot;noreferrer&quot;&gt;http://www.yaml.de/en/home.html&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This is quite a tidy solution: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* For modern browsers */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:table;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;:both;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* For IE 6/7 (trigger hasLayout) */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt; {\n    zoom:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;It&apos;s known to work in Firefox 3.5+, Safari 4+, Chrome, Opera 9+, IE 6+&lt;/p&gt;\n  \n  &lt;p&gt;Including the :before selector is not necessary to clear the floats,\n  but it prevents top-margins from collapsing in modern browsers. This\n  ensures that there is visual consistency with IE 6/7 when zoom:1 is\n  applied.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;From &lt;a href=&quot;http://nicolasgallagher.com/micro-clearfix-hack/&quot; rel=&quot;noreferrer&quot;&gt;http://nicolasgallagher.com/micro-clearfix-hack/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Clearfix from bootstrap:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt; {\n  *zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I just use :-&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clear&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Works best and compatible with IE8+ :)&lt;/p&gt;\n    ","\n&lt;p&gt;Given the huge amount of replies I was not gonna post. However, this method may help someone, as it did help me.&lt;/p&gt;\n&lt;h2&gt;Stay way from floats whenever possible&lt;/h2&gt;\n&lt;p&gt;It&apos;s worth to mention, I avoid floats like Ebola. There are many reasons and I am not alone; Read Rikudo answer about &lt;a href=&quot;https://stackoverflow.com/questions/8554043/what-is-clearfix&quot;&gt;what is a clearfix&lt;/a&gt; and you&apos;ll see what I mean. In his own words: &lt;code&gt;...the use of floated elements for layout is getting more and more discouraged with the use of better alternatives...&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;There are other good (and sometimes better) options out there other than floats. As technology advances and improves, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS/Using_CSS_flexible_boxes&quot; rel=&quot;nofollow noreferrer&quot;&gt;flexbox&lt;/a&gt; (and other methods) are going to be widely adopted and floats will become just a bad memory. Maybe a CSS4?&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;Float misbehavior and failed clears&lt;/h2&gt;\n&lt;p&gt;First off, sometimes, you may think that you are safe from floats until your lifesaver is punctured and your html flow starts to sink:&lt;/p&gt;\n&lt;p&gt;In the codepen &lt;a href=&quot;http://codepen.io/omarjuvera/pen/jEXBya&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://codepen.io/omarjuvera/pen/jEXBya&lt;/a&gt; below, the practice of clearing a float with &lt;code&gt;&amp;lt;div classs=&quot;clear&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; (or other element) is common but frown upon and anti-semantic.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1st&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2nd&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3nd&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;classs&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- Acts as a wall --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;Below&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#f00&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.floated&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: left;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clear&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;section&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#f0f&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, just when you thought your float is sail worthy...boom! As the screen size becomes smaller and smaller you see weird behaviors in like the graphic below (Same &lt;a href=&quot;http://codepen.io/omarjuvera/pen/jEXBya&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://codepen.io/omarjuvera/pen/jEXBya&lt;/a&gt;):&lt;/p&gt;\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/BHCiv.png&quot; alt=&quot;float bug sample 1&quot;&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Why should you care?&lt;/strong&gt;\nRoughly, about 80% (or more) of the devices used are mobile devices with small screens. Desktop computers/laptops are no longer king.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;It does not end there&lt;/h2&gt;\n&lt;p&gt;This is not the only problem with floats. There are many, but in this example, some may say &lt;code&gt;all you have to do is to place your floats in a container&lt;/code&gt;. But as you can see in the &lt;a href=&quot;http://codepen.io/omarjuvera/pen/XJoMYG&quot; rel=&quot;nofollow noreferrer&quot;&gt;codepen&lt;/a&gt; and graphic, that is not the case. It apparently made things worst:&lt;/p&gt;\n&lt;p&gt;HTML&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1st&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2nd&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3nd&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- /#conteiner --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;classs&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- Acts as a wall --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;Below&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;CSS&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* To prevent it from collapsing */&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#0f0&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.floated&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: left;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#f00&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clear&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;section&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#f0f&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As for the result?&lt;/p&gt;\n&lt;p&gt;It&apos;s the *** same!\n&lt;img src=&quot;https://i.stack.imgur.com/SDY1J.png&quot; alt=&quot;float bug sample 2&quot;&gt;&lt;/p&gt;\n&lt;p&gt;Least you know, you&apos;ll start a CSS party, inviting all kinds of selectors and properties to the party; making a bigger mess of your CSS than what you started with. Just to fix your float.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;CSS Clearfix to the rescue&lt;/h2&gt;\n&lt;p&gt;This simple and very adaptable piece of CSS is a beauty and a &quot;savior&quot;:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt;, &lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; { \n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n    zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* ie 6/7 */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;That&apos;s it! It really works without breaking semantics and did I mention &lt;a href=&quot;http://codepen.io/omarjuvera/pen/wBRJaz&quot; rel=&quot;nofollow noreferrer&quot;&gt;it works?&lt;/a&gt;:&lt;/p&gt;\n&lt;p&gt;From the same sample...&lt;strong&gt;HTML&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clearfix&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1st&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;2nd&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;floated&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;3nd&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;Below&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.floated&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: left;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#f00&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;section&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4px&lt;/span&gt; solid &lt;span class=&quot;hljs-number&quot;&gt;#00f&lt;/span&gt;;\n}\n\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt;, &lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; { \n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n    zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* ie 6/7 */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Now we no longer need &lt;code&gt;&amp;lt;div classs=&quot;clear&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;!-- Acts as a wall --&amp;gt;&lt;/code&gt; and keep the semantic police happy. This is not the only benefit. This clearfix is responsive to any screen size without the use of &lt;code&gt;@media&lt;/code&gt; in it&apos;s simplest form. In other words, it will keep your float container in check and preventing floodings. Lastly, it provides support for old browsers all in one small karate chop =)&lt;/p&gt;\n&lt;h1&gt;Here&apos;s the clearfix again&lt;/h1&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt;, &lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; { \n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n    zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* ie 6/7 */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I always float the main sections of my grid and apply &lt;code&gt;clear: both;&lt;/code&gt; to the footer. That doesn&apos;t require an extra div or class.&lt;/p&gt;\n    ","\n&lt;p&gt;honestly; all solutions seem to be a hack to fix a rendering bug ... am i wrong?&lt;/p&gt;\n\n&lt;p&gt;i&apos;ve found &lt;code&gt;&amp;lt;br clear=&quot;all&quot; /&amp;gt;&lt;/code&gt; to be the easiest, simplest. seeing &lt;code&gt;class=&quot;clearfix&quot;&lt;/code&gt; everywhere can&apos;t stroke the sensibilities of someone who objects to extraneous markeup elements, can it? you&apos;re just painting the problem on a different canvas.&lt;/p&gt;\n\n&lt;p&gt;i also use the &lt;code&gt;display: hidden&lt;/code&gt; solution, which is great and requires no extra class declarations or html markup ... but sometimes you need the elements to overflow the container, for eg. pretty ribbons and sashes&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearFix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; { \n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;  \n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;  \n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A new display value seems to the job in one line.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flow-root;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From the W3 spec: &quot;The element generates a block container box, and lays out its contents using flow layout. It always establishes a new block formatting context for its contents.&quot;&lt;/p&gt;\n\n&lt;p&gt;Information:\n&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#valdef-display-flow-root&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.w3.org/TR/css-display-3/#valdef-display-flow-root&lt;/a&gt;\n&lt;a href=&quot;https://www.chromestatus.com/feature/5769454877147136&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.chromestatus.com/feature/5769454877147136&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;As shown in the link above, support is currently limited so fallback support like below may be of use:\n&lt;a href=&quot;https://github.com/fliptheweb/postcss-flow-root&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/fliptheweb/postcss-flow-root&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;With SASS, the clearfix is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;@mixin&lt;/span&gt; clearfix {\n    &amp;amp;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt;, &amp;amp;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n    }\n    &amp;amp;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n    }\n    *zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and it&apos;s used like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt;&amp;nbsp;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;@include&lt;/span&gt; clearfix;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;if you want the new clearfix:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;@mixin&lt;/span&gt; newclearfix {\n    &amp;amp;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:table;\n        &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;:both;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;With LESS (&lt;a href=&quot;http://lesscss.org/&quot; rel=&quot;noreferrer&quot;&gt;http://lesscss.org/&lt;/a&gt;), one can create a handy clearfix helper:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;() {\n  zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &amp;amp;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt; { \n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;; \n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block; \n  }\n  &amp;amp;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; { \n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;; \n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table; \n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both; \n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then use it with problematic containers, for example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- HTML --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sidebar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* LESS */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using &lt;code&gt;overflow:hidden&lt;/code&gt;/&lt;code&gt;auto&lt;/code&gt; and height for ie6 will suffice if the floating container has a parent element. &lt;/p&gt;\n\n&lt;p&gt;Either one of the #test could work, for the HTML stated below to clear floats.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#test&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;:hidden; // or auto;\n  _height:&lt;span class=&quot;hljs-number&quot;&gt;1%&lt;/span&gt;; forces hasLayout in IE6\n}\n\n&amp;lt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; id=&quot;test&quot;&amp;gt;\n  &amp;lt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; style=&quot;floatLeft&quot;&amp;gt;&amp;lt;/&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&amp;gt;\n  &amp;lt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; style=&quot;random&quot;&amp;gt;&amp;lt;/&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&amp;gt;\n&amp;lt;/&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In cases when this refuses to work with ie6, just float the parent to clear float. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#test&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: left; // using &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;99%&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Never really needed any other kind of clearing yet. Maybe it&apos;s the way I write my HTML.&lt;/p&gt;\n    ","\n&lt;p&gt;I have tried all these solutions, a big margin will be added to &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element automatically when I use the code below:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {   \n    &lt;span class=&quot;hljs-attribute&quot;&gt;visibility&lt;/span&gt;: hidden;   \n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;   \n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;;   \n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;   \n    &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Finally, I solved the margin problem by adding &lt;code&gt;font-size: 0;&lt;/code&gt; to the above CSS.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;d float &lt;code&gt;#content&lt;/code&gt; too, that way both columns contain floats. Also because it will allow you to clear elements inside &lt;code&gt;#content&lt;/code&gt; without clearing the side bar.&lt;/p&gt;\n\n&lt;p&gt;Same thing with the wrapper, you&apos;d need to make it a block formatting context to wrap the two columns.&lt;/p&gt;\n\n&lt;p&gt;This article mentions a few triggers you can use:\n&lt;a href=&quot;http://www.tjkdesign.com/articles/block-formatting-contexts_and_hasLayout.asp&quot; rel=&quot;nofollow noreferrer&quot;&gt;block formatting contexts&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;A clearfix is a way for an element to automatically clear after itself, \nso that you don&apos;t need to add additional markup.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n   &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* Older browser do not support empty content */&lt;/span&gt;\n   &lt;span class=&quot;hljs-attribute&quot;&gt;visibility&lt;/span&gt;: hidden;\n   &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n   &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n   &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cleaner&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Normally you would need to do something as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;float: left;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Sidebar&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;cleaner&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- Clear the float --&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With clearfix, you only need to&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;float: left;&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clearfix&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Sidebar&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- No Clearing div! --&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Why just trying to use css hack to do what 1 line of HTML do the job. And why not to use semantic html tu put break to return to the line?&lt;/p&gt;\n\n&lt;p&gt;Fo me is realy better to use : &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear:both&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And if you don&apos;t want any style in your html you just have to use class for your break\n\nand put &lt;code&gt;.clear { clear:both; }&lt;/code&gt; in your CSS.&lt;/p&gt;\n\n&lt;p&gt;Advantage of this:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Semantic use of html for return to the line&lt;/li&gt;\n&lt;li&gt;If no CSS load it will be working&lt;/li&gt;\n&lt;li&gt;No need extra CSS code and Hack&lt;/li&gt;\n&lt;li&gt;no need to simulate the br with CSS, it&apos;s already exist in HTML&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Assuming you&apos;re using this HTML structure:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&amp;lt;div &lt;span class=&quot;hljs-built_in&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;\n  &amp;lt;div &lt;span class=&quot;hljs-built_in&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;\n  &amp;lt;/div&amp;gt;\n  &amp;lt;div &lt;span class=&quot;hljs-built_in&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sidebar&quot;&lt;/span&gt;&amp;gt;\n  &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&apos;s the CSS that I would use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;    &lt;span class=&quot;hljs-comment&quot;&gt;/* makes element contain floated child elements */&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#content&lt;/span&gt;, &lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#sidebar&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;: left;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline;    &lt;span class=&quot;hljs-comment&quot;&gt;/* preemptively fixes IE6 dobule-margin bug */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I use this set all the time and it works fine for me, even in IE6.&lt;/p&gt;\n    ","\n&lt;h1&gt;Unlike other clearfixes, here is an open-ended one without containers&lt;/h1&gt;\n&lt;p&gt;Other clearfixes either require the floated element to be in a well marked off container or need an extra, semantically empty &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Conversely, clear separation of content and markup requires &lt;strong&gt;a strict CSS solution&lt;/strong&gt; to this problem.&lt;/p&gt;\n&lt;p&gt;The mere fact that one needs to mark off the end of a float, does not allow for &lt;a href=&quot;https://tex.stackexchange.com/a/340365/26348&quot;&gt;&lt;strong&gt;unattended CSS typesetting&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;If the latter is your goal, the float should be left open for anything (paragraphs, ordered and unordered lists etc.) to wrap around it, until a &quot;clearfix&quot; is encountered. For example, the clearfix might be set by a new heading.&lt;/p&gt;\n&lt;p&gt;This is why I use the following clearfix with new headings:&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;h1&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: inline-block;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This solution gets used extensively on &lt;a href=&quot;http://hamwaves.com/capacitors/en/index.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;my website&lt;/a&gt; to solve the problem: The text next to a floated miniature is short and the top-margin of the next clearing object is not respected.&lt;/p&gt;\n&lt;p&gt;It also prevents any manual intervention when automatically generating &lt;a href=&quot;http://hamwaves.com/capacitors/en/capacitors.letter.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;PDFs&lt;/a&gt; from the site.\nHere is an &lt;a href=&quot;http://hamwaves.com/capacitors/en/index.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;example page&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I always use the &lt;a href=&quot;http://nicolasgallagher.com/micro-clearfix-hack/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;micro-clearfix&lt;/strong&gt;&lt;/a&gt; :&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before&lt;/span&gt;,\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: table;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * For IE 6/7 only\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.cf&lt;/span&gt; {\n    *zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In &lt;a href=&quot;http://jslegers.github.io/cascadeframework/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;Cascade Framework&lt;/strong&gt;&lt;/a&gt; I even apply it by default on block level elements. IMO, applying it by default on block level elements gives block level elements more intuitive behavior than their traditonal behavior. It also made it a lot easier for me to add support for older browsers to Cascade Framework (which supports IE6-8 as well as modern browsers).&lt;/p&gt;\n    ","\n&lt;p&gt;You could also put this in your CSS:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.cb&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after&lt;/span&gt;{\n  &lt;span class=&quot;hljs-attribute&quot;&gt;visibility&lt;/span&gt;: hidden;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: block;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;: both;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n\n*&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:first&lt;/span&gt;-child+&lt;span class=&quot;hljs-selector-tag&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.cb&lt;/span&gt;{zoom: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;} &lt;span class=&quot;hljs-comment&quot;&gt;/* for IE7 */&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And add class &quot;cb&quot; to your parent div:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&amp;lt;div &lt;span class=&quot;hljs-built_in&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;cb&quot;&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You will not need to add anything else to your original code...&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#content&lt;/span&gt;{&lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:left&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#sidebar&lt;/span&gt;{&lt;span class=&quot;hljs-attribute&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:left&lt;/span&gt;;}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.clear&lt;/span&gt;{&lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;:both; &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;:block; &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;; &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;:hidden;}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;text 1 &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sidebar&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;text 2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Have you tried this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clear:both;&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I haven&apos;t had any problems with this method.&lt;/p&gt;\n    ","\n&lt;p&gt;My Favourite Method is to create a clearfix class in my css / scss document as below&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;/span&gt;{\n    &lt;span class=&quot;hljs-attribute&quot;&gt;clear&lt;/span&gt;:both;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And then call it in my html document as shown below&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div-number-one&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    Some Content before the clearfix\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- Let&apos;s say we need to clearfix Here between these two divs ---&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;clearfix&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;div-number-two&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    Some more content after the clearfix\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It is so simple clearfix clears the issue by when we using the float properties inside the div element.If we use two div elements one as float:left; and other one as float:right; we can use clearfix for the parent of the two div element. If we refuse to use clearfix unnecessary spaces fill with contents below and site structure will be broken. &lt;/p&gt;\n    "]},"page":"56","randomQuestions":[{"title":"SQL injection that gets around mysql_real_escape_string()","slug":"sql-injection-that-gets-around-mysql_real_escape_string()-1657384364747"},{"title":"How do servlets work? Instantiation, sessions, shared variables and multithreading","slug":"how-do-servlets-work-instantiation-sessions-shared-variables-and-multithreading-1657387540375"},{"title":"What is the most efficient way to deep clone an object in JavaScript?","slug":"what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript-1657384601026"},{"title":"How to fix java.lang.UnsupportedClassVersionError: Unsupported major.minor version","slug":"how-to-fix-java.lang.unsupportedclassversionerror:-unsupported-major.minor-version-1657384863422"},{"title":"Randomize a List<T>","slug":"randomize-a-listlesstgreater-1657388172793"},{"title":"How to format numbers as currency strings","slug":"how-to-format-numbers-as-currency-strings-1657388399166"},{"title":"How do I pass variables and data from PHP to JavaScript?","slug":"how-do-i-pass-variables-and-data-from-php-to-javascript-1657384684553"},{"title":"Sort (order) data frame rows by multiple columns","slug":"sort-(order)-data-frame-rows-by-multiple-columns-1657388355671"},{"title":"Order Bars in ggplot2 bar graph","slug":"order-bars-in-ggplot2-bar-graph-1657388099080"},{"title":"Default constructor with empty brackets","slug":"default-constructor-with-empty-brackets-1657388246967"},{"title":"getContactsFromFirebase() method return an empty list","slug":"getcontactsfromfirebase()-method-return-an-empty-list-1657388433928"},{"title":"How do I clone a list so that it doesn't change unexpectedly after assignment?","slug":"how-do-i-clone-a-list-so-that-it-doesn't-change-unexpectedly-after-assignment-1657384423195"},{"title":"Merge/flatten an array of arrays","slug":"mergeflatten-an-array-of-arrays-1657387827427"},{"title":"String.equals versus == [duplicate]","slug":"string.equals-versus-duplicate-1657387599972"},{"title":"What is the !! (not not) operator in JavaScript?","slug":"what-is-the-!!-(not-not)-operator-in-javascript-1657387947844"},{"title":"Add a property to a JavaScript object using a variable as the name?","slug":"add-a-property-to-a-javascript-object-using-a-variable-as-the-name-1657388425650"},{"title":"addEventListener vs onclick","slug":"addeventlistener-vs-onclick-1657388191429"},{"title":"Split comma-separated strings in a column into separate rows","slug":"split-comma-separated-strings-in-a-column-into-separate-rows-1657387785823"},{"title":"How do I profile C++ code running on Linux?","slug":"how-do-i-profile-c++-code-running-on-linux-1657384754272"},{"title":"Are global variables thread-safe in Flask? How do I share data between requests?","slug":"are-global-variables-thread-safe-in-flask-how-do-i-share-data-between-requests-1657387949951"}]},"__N_SSG":true}