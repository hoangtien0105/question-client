{"pageProps":{"data":{"count":610,"rows":[{"id":180,"title":"Where can I find documentation on formatting a date in JavaScript?","slug":"where-can-i-find-documentation-on-formatting-a-date-in-javascript-1657384878157","postType":"QUESTION","createdAt":"2022-07-09T16:41:18.000Z","updatedAt":"2022-07-09T16:41:18.000Z","tags":[{"id":659,"name":"datetime-format","slug":"datetime-format","createdAt":"2022-07-09T16:41:18.000Z","updatedAt":"2022-07-09T16:41:18.000Z","Questions_Tags":{"questionId":180,"tagId":659}},{"id":660,"name":"date-format","slug":"date-format","createdAt":"2022-07-09T16:41:18.000Z","updatedAt":"2022-07-09T16:41:18.000Z","Questions_Tags":{"questionId":180,"tagId":660}},{"id":661,"name":"time-format","slug":"time-format","createdAt":"2022-07-09T16:41:18.000Z","updatedAt":"2022-07-09T16:41:18.000Z","Questions_Tags":{"questionId":180,"tagId":661}}]},{"id":179,"title":"What are valid values for the id attribute in HTML?","slug":"what-are-valid-values-for-the-id-attribute-in-html-1657384874780","postType":"QUESTION","createdAt":"2022-07-09T16:41:14.000Z","updatedAt":"2022-07-09T16:41:14.000Z","tags":[]},{"id":178,"title":"Why is the command bound to a Button or event executed when declared?","slug":"why-is-the-command-bound-to-a-button-or-event-executed-when-declared-1657384872054","postType":"QUESTION","createdAt":"2022-07-09T16:41:12.000Z","updatedAt":"2022-07-09T16:41:12.000Z","tags":[{"id":655,"name":"tkinter","slug":"tkinter","createdAt":"2022-07-09T16:41:12.000Z","updatedAt":"2022-07-09T16:41:12.000Z","Questions_Tags":{"questionId":178,"tagId":655}}]},{"id":177,"title":"How do I redirect to another webpage?","slug":"how-do-i-redirect-to-another-webpage-1657384869767","postType":"QUESTION","createdAt":"2022-07-09T16:41:09.000Z","updatedAt":"2022-07-09T16:41:09.000Z","tags":[{"id":653,"name":"redirect","slug":"redirect","createdAt":"2022-07-09T16:41:09.000Z","updatedAt":"2022-07-09T16:41:09.000Z","Questions_Tags":{"questionId":177,"tagId":653}}]},{"id":176,"title":"Variables are not behaving as expected","slug":"variables-are-not-behaving-as-expected-1657384865672","postType":"QUESTION","createdAt":"2022-07-09T16:41:05.000Z","updatedAt":"2022-07-09T16:41:05.000Z","tags":[{"id":646,"name":"windows","slug":"windows","createdAt":"2022-07-09T16:41:05.000Z","updatedAt":"2022-07-09T16:41:05.000Z","Questions_Tags":{"questionId":176,"tagId":646}},{"id":647,"name":"batch-file","slug":"batch-file","createdAt":"2022-07-09T16:41:05.000Z","updatedAt":"2022-07-09T16:41:05.000Z","Questions_Tags":{"questionId":176,"tagId":647}},{"id":648,"name":"cmd","slug":"cmd","createdAt":"2022-07-09T16:41:05.000Z","updatedAt":"2022-07-09T16:41:05.000Z","Questions_Tags":{"questionId":176,"tagId":648}},{"id":649,"name":"environment-variables","slug":"environment-variables","createdAt":"2022-07-09T16:41:05.000Z","updatedAt":"2022-07-09T16:41:05.000Z","Questions_Tags":{"questionId":176,"tagId":649}},{"id":650,"name":"delayedvariableexpansion","slug":"delayedvariableexpansion","createdAt":"2022-07-09T16:41:05.000Z","updatedAt":"2022-07-09T16:41:05.000Z","Questions_Tags":{"questionId":176,"tagId":650}}]}]},"answers":{"176":["\n\n&lt;p&gt;You are not the first, who fell into the famous &quot;delayed expansion trap&quot; (and you won&apos;t be the last).&lt;/p&gt;\n&lt;p&gt;You need delayed expansion if you want to use a variable, that you changed in the same block (a block is a series of commands within parentheses &lt;code&gt;(&lt;/code&gt;and &lt;code&gt;)&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;Delayed variables are referenced with &lt;code&gt;!var!&lt;/code&gt; instead of &lt;code&gt;%var%&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Reason is the way, &lt;code&gt;cmd&lt;/code&gt; parses the code. A complete line or block is parsed at once, replacing normal variables with their value at parse time. Delayed variables are evaluated at runtime.&lt;/p&gt;\n&lt;p&gt;Two simple batch files to demonstrate:&lt;/p&gt;\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;setlocal EnableDelayedExpansion\n&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;var=hello&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;==&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;var=world&quot;&lt;/span&gt;\n    echo %&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;% !&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;!\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lua&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;setlocal&lt;/span&gt; EnableDelayedExpansion\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; /L %%i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; (\n    echo %&lt;span class=&quot;hljs-built_in&quot;&gt;random&lt;/span&gt;% !&lt;span class=&quot;hljs-built_in&quot;&gt;random&lt;/span&gt;!\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: A line is also treated as a block:&lt;/p&gt;\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;var=old&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;var=new&quot;&lt;/span&gt; &amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; %var% \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;With delayed expansion:&lt;/p&gt;\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;setlocal EnableDelayedExpansion\n&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;var=old&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;var=new&quot;&lt;/span&gt; &amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; !var! \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Delayed expansion is per default turned off at the command prompt. If you really need it, you can do:&lt;/p&gt;\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;cmd /V:ON /C &lt;span class=&quot;hljs-string&quot;&gt;&quot;set &quot;&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;=hello&lt;span class=&quot;hljs-string&quot;&gt;&quot; &amp;amp; echo !var!&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Also there is a way to do the same without delayed expansion (but &lt;code&gt;call&lt;/code&gt; costs some time, so it&apos;s slower, but if for some reason you can&apos;t / don&apos;t want to use delayed expansion, it&apos;s an alternative):&lt;/p&gt;\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lua&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;setlocal&lt;/span&gt; DISabledelayedexpansion\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; /L %%i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; (\n    call echo %&lt;span class=&quot;hljs-built_in&quot;&gt;random&lt;/span&gt;% %%&lt;span class=&quot;hljs-built_in&quot;&gt;random&lt;/span&gt;%% \n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Both methods can also be used to display &lt;a href=&quot;https://stackoverflow.com/a/10167990&quot;&gt;array-like variables&lt;/a&gt;:&lt;/p&gt;\n&lt;p&gt;(This is often asked like &quot;variable which contains another variable&quot; or &quot;nested variables&quot;)&lt;/p&gt;\n&lt;p&gt;Here is a collection for using such array-like variables in different situations:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;With delayed expansion:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;setlocal ENableDelayedExpansion\n&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;num=4&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;var[%num%]=HELLO&quot;&lt;/span&gt;\necho plain delayed: !&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;[%&lt;span class=&quot;hljs-built_in&quot;&gt;num&lt;/span&gt;%]!\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; /L %%i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; (\n    echo &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; delayed: !&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;[%%i]!\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; a=%%i\n    call echo &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; delayed &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; variable: %%&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;[!a!]%%\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;without delayed expansion:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-bat s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;setlocal DISableDelayedExpansion\n&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &quot;num=4&quot;\n&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &quot;var[%num%]=HELLO&quot;\n&lt;span class=&quot;hljs-keyword&quot;&gt;call&lt;/span&gt; echo plain &lt;span class=&quot;hljs-keyword&quot;&gt;called&lt;/span&gt;: &lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;var[&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;num&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;]&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;L &lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) do (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;call&lt;/span&gt; echo &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;called&lt;/span&gt;: &lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;var[&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;i]&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; a&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;i\n    &lt;span class=&quot;hljs-keyword&quot;&gt;call&lt;/span&gt; echo &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;called&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; variable: &lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;var[&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;a&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;]&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;setlocal&lt;/code&gt; has no effect outside of batchfiles, so &lt;code&gt;delayedexpansion&lt;/code&gt; works only:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;In batch files&lt;/li&gt;\n&lt;li&gt;When the cmd was started with delayed expansion enabled (&lt;code&gt;cmd /V:ON&lt;/code&gt;) (by default, the cmd runs with delayed expansion &lt;strong&gt;dis&lt;/strong&gt;abled)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;(Follow the links, when you are interested in the &lt;a href=&quot;http://blogs.msdn.com/b/oldnewthing/archive/2006/08/23/714650.aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;technical background&lt;/a&gt; or even the &lt;a href=&quot;http://stackoverflow.com/q/4094699/2152082&quot;&gt;advanced technical stuff&lt;/a&gt;)&lt;/p&gt;\n    "],"177":["\n&lt;h2&gt;One does not simply redirect using jQuery&lt;/h2&gt;\n\n&lt;p&gt;jQuery is not necessary, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Location/replace&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;&lt;code&gt;window.location.replace(...)&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; will best simulate an HTTP redirect.  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;window.location.replace(...)&lt;/code&gt; is better than using &lt;code&gt;window.location.href&lt;/code&gt;, because &lt;code&gt;replace()&lt;/code&gt; does not keep the originating page in the session history, meaning the user won&apos;t get stuck in a never-ending back-button fiasco.&lt;/p&gt;\n\n&lt;p&gt;If you want to simulate someone clicking on a link, use\n &lt;strong&gt;&lt;code&gt;location.href&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you want to simulate an HTTP redirect, use &lt;strong&gt;&lt;code&gt;location.replace&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// similar behavior as an HTTP redirect&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// similar behavior as clicking on a link&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; This answer has merely been provided as a possible solution; it is obviously &lt;em&gt;not&lt;/em&gt; the best solution, as it requires jQuery. Instead, prefer the pure JavaScript solution.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;prop&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://stackoverflow.com&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Standard &quot;vanilla&quot; JavaScript way to redirect a page&lt;/h1&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;newPage.html&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Or more simply:  (since &lt;code&gt;window&lt;/code&gt; is Global)&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;location.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;newPage.html&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;If you are here because you are &lt;em&gt;losing&lt;/em&gt; HTTP_REFERER when redirecting, keep reading:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;(Otherwise ignore this last part)&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;hr&gt;\n&lt;p&gt;The following section is for those using &lt;code&gt;HTTP_REFERER&lt;/code&gt; as one of many security measures (although it isn&apos;t a great protective measure). If you&apos;re using &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot; rel=&quot;noreferrer&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; or lower, these variables get lost when using any form of JavaScript page redirection (location.href,  etc.).&lt;/p&gt;\n&lt;p&gt;Below we are going to implement an alternative for &lt;strong&gt;IE8 &amp;amp; lower&lt;/strong&gt; so that we don&apos;t lose HTTP_REFERER. Otherwise, you can almost always simply use &lt;code&gt;window.location.href&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Testing against &lt;code&gt;HTTP_REFERER&lt;/code&gt; (URL pasting, session, etc.) &lt;em&gt;can&lt;/em&gt; help tell whether a request is legitimate.\n&lt;em&gt;(&lt;strong&gt;Note:&lt;/strong&gt; there are also ways to work-around / spoof these referrers, as noted by droop&apos;s link in the comments)&lt;/em&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Simple cross-browser testing solution (fallback to window.location.href for Internet&amp;nbsp;Explorer&amp;nbsp;9+ and all other browsers)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Usage: &lt;code&gt;redirect(&apos;anotherpage.aspx&apos;);&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;redirect&lt;/span&gt; (url) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ua        = navigator.&lt;span class=&quot;hljs-property&quot;&gt;userAgent&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;(),\n        isIE      = ua.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;msie&apos;&lt;/span&gt;) !== -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n        version   = &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(ua.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Internet Explorer 8 and lower&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isIE &amp;amp;&amp;amp; version &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; link = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;);\n        link.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = url;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(link);\n        link.&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// All other browsers can use the standard window.location.href (they don&apos;t lose HTTP_REFERER like Internet Explorer 8 &amp;amp; lower does)&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { \n        &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = url; \n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There are lots of ways of doing this.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// window.location&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;/path&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// window.history&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;back&lt;/span&gt;()\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;go&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// window.navigate; ONLY for old versions of Internet Explorer&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;navigate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;top.jsp&apos;&lt;/span&gt;)\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Probably no bueno&lt;/span&gt;\nself.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;;\ntop.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// jQuery&lt;/span&gt;\n$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;)\n$(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;location&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;)\n$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;prop&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://www.example.com&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This works for every browser:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;your_url&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It would help if you were a little more descriptive in what you are trying to do.  If you are trying to generate paged data, there are some options in how you do this.  You can generate separate links for each page that you want to be able to get directly to.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;a href=&lt;span class=&quot;hljs-string&quot;&gt;&apos;/path-to-page?page=1&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;pager-link&apos;&lt;/span&gt;&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&amp;lt;/a&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;/path-to-page?page=2&apos;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;pager-link&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;pager-link current-page&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that the current page in the example is handled differently in the code and with CSS.&lt;/p&gt;\n\n&lt;p&gt;If you want the paged data to be changed via AJAX, this is where jQuery would come in.  What you would do is add a click handler to each of the anchor tags corresponding to a different page.  This click handler would invoke some jQuery code that goes and fetches the next page via AJAX and updates the table with the new data.  The example below assumes that you have a web service that returns the new page data.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;a.pager-link&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; page = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\?/&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n            &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;/path-to-service&apos;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: page,\n            &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;content&lt;/span&gt;) {\n               $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#myTable&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(content);  &lt;span class=&quot;hljs-comment&quot;&gt;// replace&lt;/span&gt;\n            }\n        });\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// to stop link&lt;/span&gt;\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I also think that &lt;code&gt;location.replace(URL)&lt;/code&gt; is the best way, but if you want to notify the search engines about your redirection (they don&apos;t analyze JavaScript code to see the redirection) you should add the &lt;code&gt;rel=&quot;canonical&quot;&lt;/code&gt; meta tag to your website.&lt;/p&gt;\n&lt;p&gt;Adding a noscript section with a HTML refresh meta tag in it, is also a good solution. I suggest you to use this &lt;a href=&quot;http://insider.zone/tools/client-side-url-redirect-generator/&quot; rel=&quot;nofollow noreferrer&quot; title=&quot;Client-side URL redirect code generator&quot;&gt;JavaScript redirection tool&lt;/a&gt; to create redirections. It also has Internet&amp;nbsp;Explorer support to pass the HTTP referrer.&lt;/p&gt;\n&lt;p&gt;Sample code without delay looks like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!-- &lt;span class=&quot;hljs-title class_&quot;&gt;Place&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; snippet right after opening the head tag to make it work properly --&amp;gt;\n\n&amp;lt;!-- &lt;span class=&quot;hljs-title class_&quot;&gt;This&lt;/span&gt; code is licensed under &lt;span class=&quot;hljs-variable constant_&quot;&gt;GNU&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;GPL&lt;/span&gt; v3 --&amp;gt;\n&amp;lt;!-- &lt;span class=&quot;hljs-title class_&quot;&gt;You&lt;/span&gt; are allowed to freely copy, distribute and use &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; code, but removing author credit is strictly prohibited --&amp;gt;\n&amp;lt;!-- &lt;span class=&quot;hljs-title class_&quot;&gt;Generated&lt;/span&gt; by &lt;span class=&quot;hljs-attr&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;hljs-comment&quot;&gt;//insider.zone/tools/client-side-url-redirect-generator/ --&amp;gt;&lt;/span&gt;\n\n&amp;lt;!-- &lt;span class=&quot;hljs-variable constant_&quot;&gt;REDIRECTING&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;STARTS&lt;/span&gt; --&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;canonical&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://yourdomain.example/&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;noscript&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;refresh&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0;URL=https://yourdomain.example/&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;noscript&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;var IE_fix=true;&amp;lt;/script&amp;gt;&amp;lt;![endif]--&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-string&quot;&gt;&quot;https://yourdomain.example/&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; IE_fix != &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// IE8 and lower fix to pass the http referer&lt;/span&gt;\n    {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;redirecting...&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Don&apos;t remove this line or appendChild() will fail because it is called before document.onload to make the redirect as fast as possible. Nobody will see this text, it is only a tech fix.&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; referLink = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;);\n        referLink.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = url;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(referLink);\n        referLink.&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(url); } &lt;span class=&quot;hljs-comment&quot;&gt;// All other browsers&lt;/span&gt;\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- Credit goes to http://insider.zone/ --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- REDIRECTING ENDS --&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;But if someone wants to redirect back to home page then he may use the following snippet.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;host&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It would be helpful if you have three different environments as development, staging, and production.&lt;/p&gt;\n\n&lt;p&gt;You can explore this window or window.location object by just putting these words in Chrome Console or &lt;a href=&quot;http://en.wikipedia.org/wiki/Firebug_%28software%29&quot;&gt;Firebug&lt;/a&gt;&apos;s Console.&lt;/p&gt;\n    ","\n&lt;p&gt;JavaScript provides you many methods to retrieve and change the current URL which is displayed in browser&apos;s address bar. All these methods uses the Location object, which is  a property of the Window object. You can create a new Location object that has the current URL as follows..&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; currentLocation = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Basic Structure of a URL&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;protocol&amp;gt;&lt;span class=&quot;hljs-comment&quot;&gt;//&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;pathname&amp;gt;&amp;lt;search&amp;gt;&amp;lt;hash&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/4kiBE.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Protocol -- Specifies the protocol name be used to access the resource on the Internet. (HTTP (without SSL) or HTTPS (with SSL))&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;hostname -- Host name specifies the host that owns the resource. For example, www.stackoverflow.com. A server provides services using the name of the host.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;port -- A port number used to recognize a specific process to which an Internet or other network message is to be forwarded when it arrives at a server.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;pathname -- The path gives info about the specific resource within the host that the Web client wants to access. For example, stackoverflow.com/index.html.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;query --  A query string follows the path component, and provides a string of information that the resource can utilize for some purpose (for example, as parameters for a search or as data to be processed). &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;hash -- The anchor portion of a URL, includes the hash sign (#).&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;With these Location object properties you can access all of these URL components&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;hash&lt;/strong&gt;   -Sets or returns the anchor portion of a URL.  &lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;   -Sets\nor returns the hostname and port of a URL.   &lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;hostname&lt;/strong&gt;   -Sets or\nreturns the hostname of a URL.   &lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;href&lt;/strong&gt;   -Sets or returns the entire\nURL.  &lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;pathname&lt;/strong&gt;   -Sets or returns the path name of a URL.   &lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt; -Sets or returns the port number the server uses for a URL.  &lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;   -Sets or returns the protocol of a URL.   &lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;search&lt;/strong&gt;   -Sets\nor returns the query portion of a URL&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Now If you want to change a page or redirect the user to some other page you can use the &lt;code&gt;href&lt;/code&gt; property of the Location object like this&lt;/p&gt;\n\n&lt;p&gt;You can use the href property of the Location object.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.stackoverflow.com&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Location Object&lt;/strong&gt; also have these three methods&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;assign()&lt;/strong&gt; -- Loads a new document.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;reload()&lt;/strong&gt; -- Reloads the current document.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;replace()&lt;/strong&gt; -- Replaces the current document with a new one&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;You can use assign() and replace methods also to redirect to other pages like these&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;location.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.stackoverflow.com&quot;&lt;/span&gt;);\n\nlocation.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.stackoverflow.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;How assign() and replace() differs&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; -- The difference between replace() method and assign() method(), is that replace() removes the URL of the current document from the document history, means it is not possible to use the &quot;back&quot; button to navigate back to the original document. So Use the assign() method if you want to load a new document, andwant to give the option to navigate back to the original document.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;You can change the location object href property using &lt;strong&gt;jQuery&lt;/strong&gt; also  like this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;,url);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And hence you can redirect the user to some other url.&lt;/p&gt;\n    ","\n&lt;p&gt;Basically &lt;strong&gt;jQuery&lt;/strong&gt; is just a &lt;strong&gt;JavaScript&lt;/strong&gt; framework and for doing some of the things like &lt;strong&gt;redirection&lt;/strong&gt; in this case, you can just use pure JavaScript, so in that case you have 3 options using vanilla JavaScript:&lt;/p&gt;\n\n&lt;p&gt;1) Using location &lt;strong&gt;replace&lt;/strong&gt;, this will replace the current history of the page, means that it is not possible to use the &lt;strong&gt;back&lt;/strong&gt; button to go back to the original page.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2) Using location &lt;strong&gt;assign&lt;/strong&gt;, this will keep the history for you and with using back button, you can go back to the original page:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;3) I recommend using one of those previous ways, but this could be the third option using pure JavaScript: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can also write a function in jQuery to handle it, but not recommended as it&apos;s only one line pure JavaScript function, also you can use all of above functions without window if you are already in the window scope, for example &lt;code&gt;window.location.replace(&quot;http://stackoverflow.com&quot;);&lt;/code&gt; could be &lt;code&gt;location.replace(&quot;http://stackoverflow.com&quot;);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Also I show them all on the image below:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/ODheM.jpg&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/ODheM.jpg&quot; alt=&quot;location.replace location.assign&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Should just be able to set using &lt;code&gt;window.location&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;https://stackoverflow.com/&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is a past post on the subject: &lt;a href=&quot;https://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript&quot;&gt;How do I redirect to another webpage?&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Before I start, jQuery is a JavaScript library used for DOM manipulation. So you should not be using jQuery for a page redirect.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;A quote from Jquery.com:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;While jQuery might run without major issues in older browser versions,\nwe do not actively test jQuery in them and generally do not fix bugs\nthat may appear in them.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;It was found here:\n&lt;a href=&quot;https://jquery.com/browser-support/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://jquery.com/browser-support/&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;So jQuery is not an end-all and be-all solution for backwards compatibility.&lt;/p&gt;\n&lt;p&gt;The following solution using raw JavaScript works in all browsers and have been standard for a long time so you don&apos;t need any libraries for cross browser support.&lt;/p&gt;\n&lt;p&gt;This page will redirect to &lt;strong&gt;&lt;a href=&quot;http://www.google.com&quot; rel=&quot;nofollow noreferrer&quot;&gt;Google&lt;/a&gt;&lt;/strong&gt; after 3000 milliseconds&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!&lt;span class=&quot;hljs-variable constant_&quot;&gt;DOCTYPE&lt;/span&gt; html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;example&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;You will be redirected to google shortly.&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n            &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// The URL that will be redirected too.&lt;/span&gt;\n            }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// The bigger the number the longer the delay.&lt;/span&gt;\n        &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Different options are as follows:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;url&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Simulates normal navigation to a new page&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;url&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Removes current URL from history and replaces it with a new URL&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;url&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Adds new URL to the history stack and redirects to the new URL&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;back&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Simulates a back button click&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;go&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Simulates a back button click&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;back&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Simulates a back button click&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;navigate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;page.html&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Same as window.location=&quot;url&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;When using replace, the back button will not go back to the redirect page, as if it was never in the history. If you want the user to be able to go back to the redirect page then use &lt;code&gt;window.location.href&lt;/code&gt; or &lt;code&gt;window.location.assign&lt;/code&gt;. If you do use an option that lets the user go back to the redirect page, remember that when you enter the redirect page it will redirect you back. So put that into consideration when picking an option for your redirect. Under conditions where the page is only redirecting when an action is done by the user then having the page in the back button history will be okay. But if the page auto redirects then you should use replace so that the user can use the back button without getting forced back to the page the redirect sends.&lt;/p&gt;\n&lt;p&gt;You can also use meta data to run a page redirect as followed.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;META Refresh&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;meta http-equiv=&lt;span class=&quot;hljs-string&quot;&gt;&quot;refresh&quot;&lt;/span&gt; content=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0;url=http://evil.example/&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;META Location&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;meta http-equiv=&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt; content=&lt;span class=&quot;hljs-string&quot;&gt;&quot;URL=http://evil.example&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;BASE Hijacking&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;base href=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://evil.example/&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Many more methods to redirect your unsuspecting client to a page they may not wish to go can be found on this page (not one of them is reliant on jQuery):&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/html5security/wiki/RedirectionMethods&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/html5security/wiki/RedirectionMethods&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;I would also like to point out, people don&apos;t like to be randomly redirected. Only redirect people when absolutely needed. If you start redirecting people randomly they will never go to your site again.&lt;/p&gt;\n&lt;p&gt;The next paragraph is hypothetical:&lt;/p&gt;\n&lt;p&gt;You also may get reported as a malicious site. If that happens then when people click on a link to your site the users browser may warn them that your site is malicious. What may also happen is search engines may start dropping your rating if people are reporting a bad experience on your site.&lt;/p&gt;\n&lt;p&gt;Please review Google Webmaster Guidelines about redirects:\n&lt;a href=&quot;https://support.google.com/webmasters/answer/2721217?hl=en&amp;amp;ref_topic=6001971&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://support.google.com/webmasters/answer/2721217?hl=en&amp;amp;ref_topic=6001971&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Here is a fun little page that kicks you out of the page.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!&lt;span class=&quot;hljs-variable constant_&quot;&gt;DOCTYPE&lt;/span&gt; html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Go Away&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Go Away&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n            &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;back&lt;/span&gt;();\n            }, &lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);\n        &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you combine the two page examples together you would have an infant loop of rerouting that will guarantee that your user will never want to use your site ever again.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-string&quot;&gt;&apos;asdf.html&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = url;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do that without jQuery as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://yourdomain.com&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And if you want only jQuery then you can do it like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$jq(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://yourdomain.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This works with jQuery:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://google.fr&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;# HTML Page Redirect Using jQuery/JavaScript Method&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Try this example code:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;YourJavaScriptFunction&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#login&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-string&quot;&gt;&apos;login&apos;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Login.php&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Logout.php&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you want to give a complete URL as &lt;strong&gt;&lt;code&gt;window.location = &quot;www.google.co.in&quot;;&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Original question:&lt;/strong&gt; &quot;How to redirect using jQuery?&quot;, hence the answer implements jQuery &amp;gt;&amp;gt; Complimentary usage case.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;To just redirect to a page with JavaScript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/contact/&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or if you need a delay:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/contact/&quot;&lt;/span&gt;;\n}, &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;);   &lt;span class=&quot;hljs-comment&quot;&gt;// Time in milliseconds&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;jQuery allows you to select elements from a web page with ease. You can find anything you want on a page and then use jQuery to add special effects, react to user actions, or show and hide content inside or outside the element you have selected. All these tasks start with knowing &lt;a href=&quot;http://learn.jquery.com/using-jquery-core/selecting-elements/&quot; rel=&quot;noreferrer&quot;&gt;how to select an element or an event&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;a,img&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){\n  e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n  $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;animate&lt;/span&gt;({\n    &lt;span class=&quot;hljs-attr&quot;&gt;opacity&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//Put some CSS animation here&lt;/span&gt;\n  }, &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;);\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;// OK, finished jQuery staff, let&apos;s go redirect&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/contact/&quot;&lt;/span&gt;;\n  },&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Imagine someone wrote a script/plugin with 10000 lines of code. With jQuery you can connect to this code with just a line or two.&lt;/p&gt;\n    ","\n&lt;p&gt;You need to put this line in your code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;href&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you don&apos;t have jQuery, go with JavaScript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;href&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://stackoverflow.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;So, the question is how to make a redirect page, and not how to redirect to a website?&lt;/p&gt;\n&lt;p&gt;You only need to use JavaScript for this. Here is some tiny code that will create a dynamic redirect page.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;url=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// Get the URL after ?url=&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( url ) &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(url);\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So say you just put this snippet into a &lt;code&gt;redirect/index.html&lt;/code&gt; file on your website you can use it like so.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;http://www.mywebsite.com/redirect?url=http://stackoverflow.com&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;And if you go to that link it will automatically redirect you to &lt;strong&gt;stackoverflow.com&lt;/strong&gt;.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window.location&quot; rel=&quot;noreferrer&quot;&gt;Link to Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;strong&gt;And that&apos;s how you make a &lt;em&gt;Simple&lt;/em&gt; redirect page with JavaScript&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Edit:&lt;/p&gt;\n&lt;p&gt;There is also one thing to note. I have added &lt;code&gt;window.location.replace&lt;/code&gt; in my code because I think it suits a redirect page, but, you must know that when using &lt;code&gt;window.location.replace&lt;/code&gt; and you get redirected, when you press the back button in your browser it will &lt;strong&gt;not&lt;/strong&gt; got back to the redirect page, and it will go back to the page before it, take a look at this little demo thing.&lt;/p&gt;\n&lt;p&gt;Example:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The process: &lt;strong&gt;store home&lt;/strong&gt; =&amp;gt; &lt;strong&gt;redirect page to google&lt;/strong&gt; =&amp;gt; &lt;strong&gt;google&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;When at google: &lt;strong&gt;google&lt;/strong&gt; =&amp;gt; &lt;strong&gt;back button in browser&lt;/strong&gt; =&amp;gt; &lt;strong&gt;store home&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So, if this suits your needs then everything should be fine. If you want to include the redirect page in the browser history replace this&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( url ) &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(url);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;with&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( url ) &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = url;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;On your click function, just add:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;The URL where you want to redirect&quot;&lt;/span&gt;;\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#id&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt;;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;location.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_loc_assign&quot; rel=&quot;noreferrer&quot;&gt;Code snippet of example&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;jQuery is not needed. You can do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;URL&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;_self&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It is that easy!&lt;/p&gt;\n\n&lt;p&gt;The best way to initiate an HTTP request is with &lt;code&gt;document.loacation.href.replace(&apos;URL&apos;)&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;h1&gt;Using JavaScript:&lt;/h1&gt;\n\n&lt;h3&gt;Method 1:&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://google.com&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Method 2:&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://google.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h1&gt;Using jQuery:&lt;/h1&gt;\n\n&lt;h3&gt;Method 1: $(location)&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://google.com&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Method 2: Reusable Function&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;redirectTo&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;url&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = url;\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;jQuery&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;redirectTo&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://google.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;First write properly. You want to navigate within an application for another link from your application for another link. Here is the code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And if you want to navigate pages within your application then I also have code, if you want.&lt;/p&gt;\n    ","\n&lt;p&gt;You can redirect in jQuery like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://yourPage.com/&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;JavaScript is very extensive. If you want to jump to another page you have three options.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherpage.com&apos;&lt;/span&gt;;\n &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherpage.com&apos;&lt;/span&gt;);\n &lt;span class=&quot;hljs-comment&quot;&gt;//and...&lt;/span&gt;\n\n &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;otherpage.com&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As you want to move to another page, you can use any from these if this is your requirement.\nHowever all three options are limited to different situations. Chose wisely according to your requirement.&lt;/p&gt;\n&lt;p&gt;If you are interested in more knowledge about the concept, you can go through further.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the href (URL) of the current page&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hostname&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the domain name of the web host&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pathname&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the path and filename of the current page&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;protocol&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the web protocol used (http: or https:)&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;assign&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Loads a new document&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;replace&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// RReplace the current location with new one.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In JavaScript and jQuery we can use the following code to redirect the one page to another page:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://google.com&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;page1.html&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;ECMAScript 6 + jQuery, 85 bytes&lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$({&lt;span class=&quot;hljs-attr&quot;&gt;jQueryCode&lt;/span&gt;:&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;url&lt;/span&gt;)=&amp;gt;&lt;/span&gt;location.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(url)}).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;jQueryCode&quot;&lt;/span&gt;)(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Please don&apos;t kill me, this is a joke. It&apos;s a joke. &lt;em&gt;This is a joke.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;This did &quot;provide an answer to the question&quot;, in the sense that it asked for a solution &quot;using jQuery&quot; which in this case entails forcing it into the equation somehow.&lt;/p&gt;\n\n&lt;p&gt;Ferrybig apparently needs the joke explained (still joking, I&apos;m sure there are limited options on the review form), so without further ado:&lt;/p&gt;\n\n&lt;p&gt;Other answers are using jQuery&apos;s &lt;code&gt;attr()&lt;/code&gt; on the &lt;code&gt;location&lt;/code&gt; or &lt;code&gt;window&lt;/code&gt; objects unnecessarily.&lt;/p&gt;\n\n&lt;p&gt;This answer also abuses it, but in a more ridiculous way. Instead of using it to set the location, this uses &lt;code&gt;attr()&lt;/code&gt; to retrieve a function that sets the location.&lt;/p&gt;\n\n&lt;p&gt;The function is named &lt;code&gt;jQueryCode&lt;/code&gt; even though there&apos;s nothing jQuery about it, and calling a function &lt;code&gt;somethingCode&lt;/code&gt; is just horrible, especially when the something is not even a language.&lt;/p&gt;\n\n&lt;p&gt;The &quot;85 bytes&quot; is a reference to Code Golf. Golfing is obviously not something you should do outside of code golf, and furthermore this answer is clearly not actually golfed.&lt;/p&gt;\n\n&lt;p&gt;Basically, cringe.&lt;/p&gt;\n    ","\n&lt;p&gt;Javascript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;www.your_url.com&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;www.your_url.com&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;www.your_url.com&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Jquery:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url=&lt;span class=&quot;hljs-string&quot;&gt;&apos;www.your_url.com&apos;&lt;/span&gt;;\n$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;,url);\n$(location).&lt;span class=&quot;hljs-title function_&quot;&gt;prop&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;href&apos;&lt;/span&gt;,url);&lt;span class=&quot;hljs-comment&quot;&gt;//instead of location you can use window&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a time-delay redirection. You can set the delay time to whatever you want:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;!doctype html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Your Document Title&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;delayer&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;delay&lt;/span&gt;) {\n            onLoad = &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;window.location.href = &quot;http://www.google.com/&quot;&apos;&lt;/span&gt;, delay);\n        }\n    &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        delayer(8000)\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;You will be redirected in 8 seconds!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    "],"178":["\n&lt;p&gt;Consider this code:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;b = Button(admin, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;as&apos;&lt;/span&gt;, command=button(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hey&apos;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It does exactly the same as this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;result = button(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hey&apos;&lt;/span&gt;)\nb = button(admin, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;as&apos;&lt;/span&gt;, command=result)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Likewise, if you create a binding like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;listbox.bind(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;&amp;lt;ListboxSelect&amp;gt;&amp;gt;&quot;&lt;/span&gt;, some_function())\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;... it&apos;s the same as this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;result = some_function()\nlistbox.bind(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;&amp;lt;ListboxSelect&amp;gt;&amp;gt;&quot;&lt;/span&gt;, result)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;command&lt;/code&gt; option takes a reference to a function, which is a fancy way of saying you need to pass it the name of the function.  To pass a reference you must use the name only, without using parenthesis or arguments. For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;b = Button(... command = button)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you want to pass a parameter such as &quot;hey&quot; you must use a little extra code:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;You can create an intermediate function that can be called without your argument and which then calls your &lt;code&gt;button&lt;/code&gt; function,&lt;/li&gt;\n&lt;li&gt;You can use &lt;code&gt;lambda&lt;/code&gt; to create what is referred to as an &lt;em&gt;anonymous function&lt;/em&gt;. In every way it&apos;s a function except it doesn&apos;t have a name. When you call the &lt;code&gt;lambda&lt;/code&gt; command it returns a &lt;em&gt;reference&lt;/em&gt; to the created function, which means it can be used for the value of the &lt;code&gt;command&lt;/code&gt; option to the button.&lt;/li&gt;\n&lt;li&gt;You can use &lt;a href=&quot;https://docs.python.org/2/library/functools.html#functools.partial&quot; rel=&quot;noreferrer&quot;&gt;functools.partial&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;For me, &lt;code&gt;lambda&lt;/code&gt; is the simplest since it doesn&apos;t require any additional imports like &lt;code&gt;functools.partial&lt;/code&gt; does, though some people think that &lt;code&gt;functools.partial&lt;/code&gt; is easier to understand.&lt;/p&gt;\n&lt;p&gt;To create a lambda function that calls your &lt;code&gt;button&lt;/code&gt; function with an argument you would do something like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: button(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hey&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You end up with a function that is functionally equivalent to:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;some_name&lt;/span&gt;():\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; button(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hey&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As I said earlier, &lt;code&gt;lambda&lt;/code&gt; returns a reference to this nameless function. Since a reference is what the &lt;code&gt;command&lt;/code&gt; option expects you can use &lt;code&gt;lambda&lt;/code&gt; directly in the creation of the button:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;b = Button(... command = &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: button(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hey&apos;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;There&apos;s a question on this site that has a lot of interesting comments about lambda, in general. See the question &lt;a href=&quot;https://stackoverflow.com/questions/890128/why-python-lambdas-are-useful&quot;&gt;Why Python lambdas are useful?&lt;/a&gt;. That same discussion has &lt;a href=&quot;https://stackoverflow.com/questions/890128/python-lambda-why/5771855#5771855&quot;&gt;an answer that shows how to use lambdas in a loop&lt;/a&gt; when you need to pass in a variable to the callback.&lt;/p&gt;\n&lt;p&gt;Finally, see the &lt;a href=&quot;https://web.archive.org/web/20201109015707id_/http://www.effbot.org/zone/&quot; rel=&quot;noreferrer&quot;&gt;zone.effbot.org&lt;/a&gt; article titled &lt;a href=&quot;https://web.archive.org/web/20200315142708id_/http://effbot.org/zone/tkinter-callbacks.htm&quot; rel=&quot;noreferrer&quot;&gt;Tkinter Callbacks&lt;/a&gt; for a nice tutorial. The coverage of &lt;code&gt;lambda&lt;/code&gt; is pretty lean, but the information there might still be useful.&lt;/p&gt;\n    ","\n&lt;p&gt;You need to create a function without parameters that you can use as the command:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;b = Button(admin, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;as&apos;&lt;/span&gt;, command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: button(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hey&apos;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;See the &quot;Passing Argument to Callbacks&quot; section of &lt;a href=&quot;https://web.archive.org/web/20200302040546id_/http://effbot.org/zone/tkinter-callbacks.htm&quot; rel=&quot;nofollow noreferrer&quot;&gt;this document&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;h3&gt;Example GUI:&lt;/h3&gt;\n&lt;p&gt;Let&apos;s say I have the GUI:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tk\n\nroot = tk.Tk()\n\nbtn = tk.Button(root, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Press&quot;&lt;/span&gt;)\nbtn.pack()\n\nroot.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4&gt;What Happens When a Button Is Pressed&lt;/h4&gt;\n&lt;p&gt;See that when &lt;code&gt;btn&lt;/code&gt; is pressed it calls &lt;em&gt;its own&lt;/em&gt; function which is very similar to &lt;code&gt;button_press_handle&lt;/code&gt; in the following example:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;button_press_handle&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;callback=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; callback:\n        callback() &lt;span class=&quot;hljs-comment&quot;&gt;# Where exactly the method assigned to btn[&apos;command&apos;] is being callled&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;with:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;button_press_handle(btn[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can simply think that &lt;code&gt;command&lt;/code&gt; option should be set as, the reference to the method we want to be called, similar to &lt;code&gt;callback&lt;/code&gt; in &lt;code&gt;button_press_handle&lt;/code&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h4&gt;Calling a Method (a &lt;a href=&quot;https://stackoverflow.com/questions/824234/what-is-a-callback-function&quot;&gt;Callback&lt;/a&gt;) When the Button is Pressed&lt;/h4&gt;\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Without&lt;/em&gt; arguments&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;So if I wanted to &lt;code&gt;print&lt;/code&gt; something when the button is pressed I would need to set:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;btn[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;# default to print is new line&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Pay close attention to the &lt;em&gt;lack&lt;/em&gt; of &lt;code&gt;()&lt;/code&gt; with the &lt;code&gt;print&lt;/code&gt; method which is omitted in the meaning that: &lt;em&gt;&quot;This is the method&apos;s name which I want you to call when pressed &lt;strong&gt;but&lt;/strong&gt; don&apos;t call it just this very instant.&quot;&lt;/em&gt; However, I didn&apos;t pass any arguments for the &lt;code&gt;print&lt;/code&gt; so it printed whatever it prints when called without arguments.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;With&lt;/em&gt; Argument(s)&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Now If I wanted to also pass arguments to &lt;em&gt;the method I want to be called&lt;/em&gt; when the button is pressed I could make use of the anonymous functions, which can be created with &lt;a href=&quot;https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions&quot; rel=&quot;nofollow noreferrer&quot;&gt;lambda&lt;/a&gt; statement, in this case for &lt;code&gt;print&lt;/code&gt; built-in method, like the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;btn[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; arg1=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;, arg2=&lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;, arg3=&lt;span class=&quot;hljs-string&quot;&gt;&quot;World!&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(arg1 + arg2 + arg3)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h4&gt;Calling &lt;em&gt;Multiple&lt;/em&gt; Methods when the Button Is Pressed&lt;/h4&gt;\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Without&lt;/em&gt; Arguments&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;You can also achieve that using &lt;code&gt;lambda&lt;/code&gt; statement but it is considered bad practice and thus I won&apos;t include it here. The good practice is to define a separate method, &lt;code&gt;multiple_methods&lt;/code&gt;, that calls the methods wanted and then set it as the callback to the button press:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;multiple_methods&lt;/span&gt;():\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Vicariously&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;# the first inner callback&lt;/span&gt;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;I&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;# another inner callback&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;With&lt;/em&gt; Argument(s)&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;In order to pass argument(s) to method that calls other methods, again make use of &lt;code&gt;lambda&lt;/code&gt; statement, but first:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;multiple_methods&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;*args, **kwargs&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) &lt;span class=&quot;hljs-comment&quot;&gt;# the first inner callback&lt;/span&gt;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(kwargs[&lt;span class=&quot;hljs-string&quot;&gt;&apos;opt1&apos;&lt;/span&gt;]) &lt;span class=&quot;hljs-comment&quot;&gt;# another inner callback&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and then set:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;btn[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; arg=&lt;span class=&quot;hljs-string&quot;&gt;&quot;live&quot;&lt;/span&gt;, kw=&lt;span class=&quot;hljs-string&quot;&gt;&quot;as the&quot;&lt;/span&gt; : a_new_method(arg, opt1=kw)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h4&gt;Returning Object(s) From the Callback&lt;/h4&gt;\n&lt;p&gt;Also further note that &lt;code&gt;callback&lt;/code&gt; can&apos;t really &lt;code&gt;return&lt;/code&gt; because it&apos;s only called inside &lt;code&gt;button_press_handle&lt;/code&gt; with &lt;code&gt;callback()&lt;/code&gt; as opposed to &lt;code&gt;return callback()&lt;/code&gt;. It does &lt;code&gt;return&lt;/code&gt; but &lt;em&gt;not&lt;/em&gt; anywhere outside that function. Thus you should rather &lt;em&gt;modify&lt;/em&gt; object(s) that are accessible in the current scope.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h4&gt;Complete Example with &lt;a href=&quot;https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python&quot; rel=&quot;nofollow noreferrer&quot;&gt;global&lt;/a&gt; Object Modification(s)&lt;/h4&gt;\n&lt;p&gt;Below example will call a method that changes &lt;code&gt;btn&lt;/code&gt;&apos;s text each time the button is pressed:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tk\n\ni = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;text_mod&lt;/span&gt;():\n    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; i, btn           &lt;span class=&quot;hljs-comment&quot;&gt;# btn can be omitted but not sure if should be&lt;/span&gt;\n    txt = (&lt;span class=&quot;hljs-string&quot;&gt;&quot;Vicariously&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;I&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;live&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;as&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;the&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;whole&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;world&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;dies&quot;&lt;/span&gt;)\n    btn[&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;] = txt[i]    &lt;span class=&quot;hljs-comment&quot;&gt;# the global object that is modified&lt;/span&gt;\n    i = (i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) % &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(txt)  &lt;span class=&quot;hljs-comment&quot;&gt;# another global object that gets modified&lt;/span&gt;\n\nroot = tk.Tk()\n\nbtn = tk.Button(root, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;My Button&quot;&lt;/span&gt;)\nbtn[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;] = text_mod\n\nbtn.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&apos;both&apos;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n\nroot.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/47996979/7032856&quot;&gt;Mirror&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;The engine evaluates the result of the function when it is assigning the value at the line &quot;... command = ...&quot;&lt;/p&gt;\n\n&lt;p&gt;The &quot;command&quot; expects a function to be returned, that&apos;s why using a lambda can do the job because it is creating an anomymous function that is returned to the &quot;command&quot; during evaluation. \nYou can also code your own function, it will do the job also.&lt;/p&gt;\n\n&lt;p&gt;this is an example with lambda and without lambda:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#!/usr/bin/python&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# coding=utf-8&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; Tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; *\n&lt;span class=&quot;hljs-comment&quot;&gt;# Creation de la fenêtre principale (main window)&lt;/span&gt;\nMafenetre = Tk()\nres1 = StringVar()\nres2 = StringVar()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isValidInput&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;hasattr&lt;/span&gt;(obj, &lt;span class=&quot;hljs-string&quot;&gt;&apos;get&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;callable&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;getattr&lt;/span&gt;(obj, &lt;span class=&quot;hljs-string&quot;&gt;&apos;get&apos;&lt;/span&gt;)):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; TRUE\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; FALSE\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# stupid action 2 (return 12 on purpose to show potential mistake)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;action1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;*arguments&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;action1 running&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; arg &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; arguments:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; isValidInput(arg):\n            &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;input value: &quot;&lt;/span&gt;, arg.get()\n            res1.&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(arg.get())\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n            &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;other value:&quot;&lt;/span&gt;, arg\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# stupid action 2&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;action2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;*arguments&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;action2 running&quot;&lt;/span&gt;\n    a = arguments[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n    b = arguments[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; isValidInput(a) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; isValidInput(b):\n        c = a.get() + b.get()\n        res2.&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(c)\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; c\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# a stupid workflow manager ordered by name&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;start_tasks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;*arguments, **keywords&lt;/span&gt;):\n    keys = &lt;span class=&quot;hljs-built_in&quot;&gt;sorted&lt;/span&gt;(keywords.keys())\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; kw &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; keys:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; kw, &lt;span class=&quot;hljs-string&quot;&gt;&quot;plugged &quot;&lt;/span&gt;\n        keywords[kw](*arguments)\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# valid callback wrapper with lambda&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;action1_callback&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;my_input&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; args=[my_input]: action1(*args)\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# valid callback wrapper without lambda&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;action1_callback_nolambda&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;*args, **kw&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;anon&lt;/span&gt;():\n        action1(*args)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; anon\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# first input string&lt;/span&gt;\ninput1 = StringVar()\ninput1.&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;delete me...&quot;&lt;/span&gt;)\nf1 = Entry(Mafenetre, textvariable=input1, bg=&lt;span class=&quot;hljs-string&quot;&gt;&apos;bisque&apos;&lt;/span&gt;, fg=&lt;span class=&quot;hljs-string&quot;&gt;&apos;maroon&apos;&lt;/span&gt;)\nf1.focus_set()\nf1.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# failed callback because the action1 function is evaluated, it will return 12. &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# in this case the button won&apos;t work at all, because the assignement expect a function &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# in order to have the button command to execute something&lt;/span&gt;\nba1 = Button(Mafenetre)\nba1[&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;show input 1 (ko)&quot;&lt;/span&gt;\nba1[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;] = action1(input1)\nba1.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# working button using a wrapper&lt;/span&gt;\nba3 = Button(Mafenetre)\nba3[&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;show input 1 (ok)&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# without a lambda it is also working if the assignment is a function&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#ba1[&apos;command&apos;] = action1_callback_nolambda(input1)&lt;/span&gt;\nba3[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;] = action1_callback(input1)\nba3.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# display result label&lt;/span&gt;\nLabel1 = Label(Mafenetre, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Action 1 result:&quot;&lt;/span&gt;)\nLabel1.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n&lt;span class=&quot;hljs-comment&quot;&gt;# display result value&lt;/span&gt;\nresl1 = Label(Mafenetre, textvariable=res1)\nresl1.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# second input string&lt;/span&gt;\ninput2 = StringVar()\nf2 = Entry(Mafenetre, textvariable=input2, bg=&lt;span class=&quot;hljs-string&quot;&gt;&apos;bisque&apos;&lt;/span&gt;, fg=&lt;span class=&quot;hljs-string&quot;&gt;&apos;maroon&apos;&lt;/span&gt;)\nf2.focus_set()\nf2.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# third test without wrapper, but making sure that several arguments are well handled by a lambda function&lt;/span&gt;\nba2 = Button(Mafenetre)\nba2[&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;execute action 2&quot;&lt;/span&gt;\nba2[&lt;span class=&quot;hljs-string&quot;&gt;&apos;command&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; args=[input1, input2], action=action2: start_tasks(*args, do=action)\nba2.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# display result label&lt;/span&gt;\nLabel2 = Label(Mafenetre, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Action 2 result:&quot;&lt;/span&gt;)\nLabel2.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n&lt;span class=&quot;hljs-comment&quot;&gt;# display result value&lt;/span&gt;\nresl2 = Label(Mafenetre, textvariable=res2)\nresl2.pack(fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yes&quot;&lt;/span&gt;, padx=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\nMafenetre.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I think the best way to solve this problem is to use a lambda function.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; *\nadmin= Tk()\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;button&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;an&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(an)\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;het&quot;&lt;/span&gt;)\nb = Button(admin, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;as&quot;&lt;/span&gt;, command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: button(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hey&quot;&lt;/span&gt;))\nb.pack()\nmainloop()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you don&apos;t want to use the command keyword, you can use the .bind() method instead:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; *\nadmin= Tk()\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;button&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;an&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(an)\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;het&quot;&lt;/span&gt;)\nb = Button(admin, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;as&quot;&lt;/span&gt;)\nb.pack()\nb.bind(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;Button-1&amp;gt;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; bb: button(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hey&quot;&lt;/span&gt;))\nmainloop()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Using a mother function (no parameter) which owns the child function (at least 1 parameter) you want to call is stupid.&lt;/p&gt;\n&lt;p&gt;Just to share with you, this is one of my program:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; tkinter\nwindow = tkinter.Tk()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;plus_them&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;field_1, field_2, field_3&lt;/span&gt;):\n    field_3.delete(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;end&apos;&lt;/span&gt;)\n    num1 = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    num2 = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n        num1 = &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;(field_1.get())\n        num2 = &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;(field_2.get())\n    &lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Exception occurs&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Continue&quot;&lt;/span&gt;)\n    result = num1 + num2\n    field_3.insert(tkinter.END, &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;(result))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;minus_them&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;field_1, field_2, field_3&lt;/span&gt;):\n    field_3.delete(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;end&apos;&lt;/span&gt;)\n    num1 = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    num2 = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n        num1 = &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;(field_1.get())\n        num2 = &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;(field_2.get())\n    &lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Exception occurs&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Continue&quot;&lt;/span&gt;)\n    result = num1 - num2\n    field_3.insert(tkinter.END, &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;(result))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#Input Panel:&lt;/span&gt;\nlabel_1 = tkinter.Label(window, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;First Number:&quot;&lt;/span&gt;)\nlabel_1.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\nlabel_2 = tkinter.Label(window, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Second Number:&quot;&lt;/span&gt;)\nlabel_2.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\nentry_1 = tkinter.Entry(window)\nentry_1.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\nentry_2 = tkinter.Entry(window)\nentry_2.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#Button Panel:&lt;/span&gt;\nbutton_1 = tkinter.Button(window, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Plus&quot;&lt;/span&gt;)\nbutton_1.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\nbutton_2 = tkinter.Button(window, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Minus&quot;&lt;/span&gt;)\nbutton_2.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#Answer Panel:&lt;/span&gt;\nlabel_3 = tkinter.Label(window, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;The Answer:&quot;&lt;/span&gt;)\nlabel_3.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\nentry_3 = tkinter.Entry(window)\nentry_3.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#Event Handling:&lt;/span&gt;\nbutton_1.bind(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;Button-1&amp;gt;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; p: plus_them(entry_1, entry_2, entry_3))\nbutton_2.bind(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;Button-1&amp;gt;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; m: minus_them(entry_1, entry_2, entry_3))\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#Window Stuff:&lt;/span&gt;\nwindow.title(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Plus and Minus Calculator&quot;&lt;/span&gt;)\nwindow.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;That&apos;s it.&lt;/p&gt;\n    "],"179":["\n&lt;p&gt;For &lt;a href=&quot;http://www.w3.org/TR/html4/types.html#type-id&quot; rel=&quot;noreferrer&quot;&gt;HTML 4&lt;/a&gt;, the answer is technically:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;ID and NAME tokens must begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (&quot;-&quot;), underscores (&quot;_&quot;), colons (&quot;:&quot;), and periods (&quot;.&quot;).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#the-id-attribute&quot; rel=&quot;noreferrer&quot;&gt;HTML 5&lt;/a&gt; is even more permissive, saying only that an id must contain at least one character and may not contain any space characters.&lt;/p&gt;\n\n&lt;p&gt;The id attribute is case sensitive in &lt;a href=&quot;https://www.w3.org/TR/xhtml1/diffs.html#h-4.2&quot; rel=&quot;noreferrer&quot;&gt;XHTML&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;As a purely practical matter, you may want to avoid certain characters. Periods, colons and &apos;#&apos; have special meaning in CSS selectors, so you will have to escape those characters using a &lt;a href=&quot;http://www.w3.org/TR/CSS2/syndata.html#value-def-identifier&quot; rel=&quot;noreferrer&quot;&gt;backslash in CSS&lt;/a&gt; or a double backslash in a &lt;a href=&quot;http://learn.jquery.com/using-jquery-core/faq/how-do-i-select-an-element-by-an-id-that-has-characters-used-in-css-notation/&quot; rel=&quot;noreferrer&quot;&gt;selector string passed to jQuery&lt;/a&gt;. Think about how often you will have to escape a character in your stylesheets or code before you go crazy with periods and colons in ids.&lt;/p&gt;\n\n&lt;p&gt;For example, the HTML declaration &lt;code&gt;&amp;lt;div id=&quot;first.name&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; is valid. You can select that element in CSS as &lt;code&gt;#first\\.name&lt;/code&gt; and in jQuery like so: &lt;code&gt;$(&apos;#first\\\\.name&apos;).&lt;/code&gt; But if you forget the backslash, &lt;code&gt;$(&apos;#first.name&apos;)&lt;/code&gt;, you will have a perfectly valid selector looking for an element with id &lt;code&gt;first&lt;/code&gt; and also having class &lt;code&gt;name&lt;/code&gt;. This is a bug that is easy to overlook. You might be happier in the long run choosing the id &lt;code&gt;first-name&lt;/code&gt; (a hyphen rather than a period), instead.&lt;/p&gt;\n\n&lt;p&gt;You can simplify your development tasks by strictly sticking to a naming convention. For example, if you limit yourself entirely to lower-case characters and always separate words with either hyphens or underscores (but not both, pick one and never use the other), then you have an easy-to-remember pattern. You will never wonder &quot;was it &lt;code&gt;firstName&lt;/code&gt; or &lt;code&gt;FirstName&lt;/code&gt;?&quot; because you will always know that you should type &lt;code&gt;first_name&lt;/code&gt;. Prefer camel case? Then limit yourself to that, no hyphens or underscores, and always, consistently use either upper-case or lower-case for the first character, don&apos;t mix them.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;A now very obscure problem was that at least one browser, Netscape 6, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Case_Sensitivity_in_class_and_id_Names&quot; rel=&quot;noreferrer&quot;&gt;incorrectly treated id attribute values as case-sensitive&lt;/a&gt;. That meant that if you had typed &lt;code&gt;id=&quot;firstName&quot;&lt;/code&gt; in your HTML (lower-case &apos;f&apos;) and &lt;code&gt;#FirstName { color: red }&lt;/code&gt; in your CSS (upper-case &apos;F&apos;), that buggy browser would have failed to set the element&apos;s color to red. At the time of this edit, April 2015, I hope you aren&apos;t being asked to support Netscape 6. Consider this a historical footnote.&lt;/p&gt;\n    ","\n&lt;p&gt;From the &lt;a href=&quot;http://www.w3.org/TR/html4/types.html#type-id&quot; rel=&quot;noreferrer&quot;&gt;HTML 4 specification&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;ID and NAME tokens must begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (&quot;-&quot;), underscores (&quot;_&quot;), colons (&quot;:&quot;), and periods (&quot;.&quot;).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;A common mistake is to use an ID that starts with a digit.&lt;/p&gt;\n    ","\n&lt;p&gt;You can technically use colons and periods in id/name attributes, but I would strongly suggest avoiding both.&lt;/p&gt;\n\n&lt;p&gt;In CSS (and several JavaScript libraries like jQuery), both the period and the colon have special meaning and you will run into problems if you&apos;re not careful. Periods are class selectors and colons are pseudo-selectors (eg., &quot;:hover&quot; for an element when the mouse is over it).&lt;/p&gt;\n\n&lt;p&gt;If you give an element the id &quot;my.cool:thing&quot;, your CSS selector will look like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#my.cool:thing { ... /* some rules */ ... }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which is really saying, &quot;the element with an id of &apos;my&apos;, a class of &apos;cool&apos; and the &apos;thing&apos; pseudo-selector&quot; in CSS-speak.&lt;/p&gt;\n\n&lt;p&gt;Stick to A-Z of any case, numbers, underscores and hyphens. And as said above, make sure your ids are unique.&lt;/p&gt;\n\n&lt;p&gt;That should be your first concern.&lt;/p&gt;\n    ","\n&lt;p&gt;jQuery &lt;strong&gt;does&lt;/strong&gt; handle any valid ID name. You just need to escape metacharacters (i.e., dots, semicolons, square brackets...). It&apos;s like saying that JavaScript has a problem with quotes only because you can&apos;t write&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;var name = &apos;O&apos;Hara&apos;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://docs.jquery.com/Selectors&quot; rel=&quot;noreferrer&quot;&gt;Selectors in jQuery API (see bottom note)&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;HTML5: Permitted Values for ID &amp;amp; Class Attributes&lt;/h2&gt;\n\n&lt;p&gt;As of HTML5, the only restrictions on the value of an ID are:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;must be unique in the document&lt;/li&gt;\n&lt;li&gt;must not contain any space characters&lt;/li&gt;\n&lt;li&gt;must contain at least one character&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Similar rules apply to classes (except for the uniqueness, of course).&lt;/p&gt;\n\n&lt;p&gt;So the value can be all digits, just one digit, just punctuation characters, include special characters, whatever. Just no whitespace. This is very different from HTML4.&lt;/p&gt;\n\n&lt;p&gt;In HTML 4, ID values must begin with a letter, which can then be followed only by letters, digits, hyphens, underscores, colons and periods.&lt;/p&gt;\n\n&lt;p&gt;In HTML5 these are valid:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;999&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#%LV-||&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;____V&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;{}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;©&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;¤~¥&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Just bear in mind that using numbers, punctuation or special characters in the value of an ID may cause trouble in other contexts (e.g., CSS, JavaScript, regex).&lt;/p&gt;\n\n&lt;p&gt;For example, the following ID is valid in HTML5:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;9lions&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;However, it is invalid in CSS:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;From the CSS2.1 spec:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/CSS21/syndata.html#characters&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;4.1.3 Characters and case&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;In CSS, &lt;em&gt;identifiers&lt;/em&gt; (including element names, classes, and IDs in\n  selectors) can contain only the characters [a-zA-Z0-9] and ISO 10646\n  characters U+00A0 and higher, plus the hyphen (-) and the underscore\n  (_); &lt;strong&gt;&lt;em&gt;they cannot start with a digit, two hyphens, or a hyphen\n  followed by a digit&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In most cases you may be able to escape characters in contexts where they have restrictions or special meaning.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;W3C References&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;HTML5&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/html5/dom.html#the-id-attribute&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;3.2.5.1 The &lt;code&gt;id&lt;/code&gt;\n  attribute&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;The &lt;code&gt;id&lt;/code&gt; attribute specifies its element&apos;s unique identifier (ID). &lt;/p&gt;\n  \n  &lt;p&gt;The value must be unique amongst all the IDs in the element&apos;s home\n  subtree and must contain at least one character. The value must not\n  contain any space characters.&lt;/p&gt;\n  \n  &lt;p&gt;Note: There are no other restrictions on what form an ID can take; in\n  particular, IDs can consist of just digits, start with a digit, start\n  with an underscore, consist of just punctuation, etc.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/html5/dom.html#classes&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;3.2.5.7 The &lt;code&gt;class&lt;/code&gt;\n  attribute&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;The attribute, if specified, must have a value that is a set of\n  space-separated tokens representing the various classes that the\n  element belongs to.&lt;/p&gt;\n  \n  &lt;p&gt;The classes that an HTML element has assigned to it consists of all\n  the classes returned when the value of the class attribute is split on\n  spaces. (Duplicates are ignored.)&lt;/p&gt;\n  \n  &lt;p&gt;There are no additional restrictions on the tokens authors can use in\n  the class attribute, but authors are encouraged to use values that\n  describe the nature of the content, rather than values that describe\n  the desired presentation of the content.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;Strictly it should match&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;[A-Za-z][-A-Za-z0-9_:.]*\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But &lt;a href=&quot;https://en.wikipedia.org/wiki/JQuery&quot; rel=&quot;nofollow noreferrer&quot;&gt;jQuery&lt;/a&gt; seems to have problems with colons, so it might be better to avoid them.&lt;/p&gt;\n    ","\n&lt;h2&gt;HTML5:&lt;/h2&gt;\n&lt;p&gt;It gets rid of the additional restrictions on the &lt;em&gt;id&lt;/em&gt; attribute (&lt;a href=&quot;http://www.w3.org/TR/2011/WD-html5-20110525/elements.html#the-id-attribute&quot; rel=&quot;nofollow noreferrer&quot;&gt;see here&lt;/a&gt;). The only requirements left (apart from being unique in the document) are:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;the value must contain at least one character (cant be empty)&lt;/li&gt;\n&lt;li&gt;it cant contain any space characters.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;hr&gt;\n&lt;h2&gt;Pre-HTML5:&lt;/h2&gt;\n&lt;p&gt;ID should match:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;[A-Za-z][-A-Za-z0-9_:.]*\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol&gt;\n&lt;li&gt;Must &lt;em&gt;start&lt;/em&gt; with A-Z or a-z characters&lt;/li&gt;\n&lt;li&gt;May contain &lt;code&gt;-&lt;/code&gt; (hyphen), &lt;code&gt;_&lt;/code&gt; (underscore), &lt;code&gt;:&lt;/code&gt; (colon) and &lt;code&gt;.&lt;/code&gt; (period)&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;But one should avoid &lt;code&gt;:&lt;/code&gt; and &lt;code&gt;.&lt;/code&gt; because:&lt;/p&gt;\n&lt;p&gt;For example, an ID could be labelled &quot;a.b:c&quot; and referenced in the style sheet as #a.b:c, but as well as being the id for the element, it could mean id &quot;a&quot;, class &quot;b&quot;, pseudo-selector &quot;c&quot;. It is best to avoid the confusion and stay away from using &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;:&lt;/code&gt; altogether.&lt;/p&gt;\n    ","\n&lt;p&gt;Hyphens, underscores, periods, colons, numbers and letters are all valid for use with CSS and jQuery. The following should work, but it must be unique throughout the page and also must start with a letter [A-Za-z].&lt;/p&gt;\n&lt;p&gt;Working with colons and periods needs a bit more work, but you can do it as the following example shows.&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Cake&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-css&quot;&gt;\n    &lt;span class=&quot;hljs-selector-id&quot;&gt;#i&lt;/span&gt;\\&lt;span class=&quot;hljs-selector-class&quot;&gt;.Really&lt;/span&gt;\\&lt;span class=&quot;hljs-selector-class&quot;&gt;.Like&lt;/span&gt;\\&lt;span class=&quot;hljs-selector-class&quot;&gt;.Cake&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: green;\n    }\n    &lt;span class=&quot;hljs-selector-id&quot;&gt;#i&lt;/span&gt;\\:Really\\:Like\\:Cake {\n        &lt;span class=&quot;hljs-attribute&quot;&gt;color&lt;/span&gt;: blue;\n    }\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;i.Really.Like.Cake&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Cake&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;testResultPeriod&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;i:Really:Like:Cake&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Cake&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;testResultColon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n        $(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; testPeriod = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#i\\\\.Really\\\\.Like\\\\.Cake&quot;&lt;/span&gt;);\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#testResultPeriod&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;found &quot;&lt;/span&gt; + testPeriod.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; result.&quot;&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; testColon = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#i\\\\:Really\\\\:Like\\\\:Cake&quot;&lt;/span&gt;);\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#testResultColon&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;found &quot;&lt;/span&gt; + testColon.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; result.&quot;&lt;/span&gt;);\n        });\n    &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In practice many sites use &lt;code&gt;id&lt;/code&gt; attributes starting with numbers, even though this is technically not valid HTML.&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://www.w3.org/html/wg/html5/#id&quot; rel=&quot;noreferrer&quot;&gt;HTML 5 draft specification&lt;/a&gt; loosens up the rules for the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; attributes: they are now just opaque strings which cannot contain spaces.&lt;/p&gt;\n    ","\n&lt;h2&gt;HTML5&lt;/h2&gt;\n&lt;p&gt;Keeping in mind that ID must be unique, i.e., there must not be multiple elements in a document that have the same id value.&lt;/p&gt;\n&lt;p&gt;The rules about ID content in HTML5 are (apart from being unique):&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;This attribute&apos;s value must not contain white spaces. [...]\nThough this restriction has been lifted in HTML 5,\nan ID should start with a letter for compatibility.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is the &lt;strong&gt;W3&lt;/strong&gt; spec about ID (from MDN):&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;Any string, with the following restrictions:\nmust be at least one character long\nmust not contain any space characters\nPrevious versions of HTML placed greater restrictions on the content of ID values\n(for example, they did not permit ID values to begin with a number).\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;More information:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/html-markup/global-attributes.html#common.attrs.id&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;W3&lt;/strong&gt;&lt;/a&gt; - global attributes (&lt;code&gt;id&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#id&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;MDN&lt;/strong&gt;&lt;/a&gt; attribute (&lt;code&gt;id&lt;/code&gt;)&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;To reference an id with a period in it, you need to use a backslash. I am not sure if it&apos;s the same for hyphens or underscores.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;h3&gt;HTML&lt;/h3&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;maintenance.instrumentNumber&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;############0218&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;CSS&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;#maintenance\\.instrumentNumber{word-wrap:break-word;}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;From the HTML 4 specification...&lt;/p&gt;\n&lt;p&gt;The ID and NAME tokens must begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (&quot;-&quot;), underscores (&quot;_&quot;), colons (&quot;:&quot;), and periods (&quot;.&quot;).&lt;/p&gt;\n    ","\n&lt;p&gt;Also, never forget that an ID is unique. Once used, the ID value may not appear again anywhere in the document.&lt;/p&gt;\n\n&lt;p&gt;You may have many ID&apos;s, but all must have a unique value.&lt;/p&gt;\n\n&lt;p&gt;On the other hand, there is the class-element. Just like ID, it can appear many times, but the value may be used over and over again.&lt;/p&gt;\n    ","\n&lt;p&gt;A unique identifier for the element.&lt;/p&gt;\n\n&lt;p&gt;There must not be multiple elements in a document that have the same id value.&lt;/p&gt;\n\n&lt;p&gt;Any string, with the following restrictions:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;must be at least one character long&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;must not contain any space characters:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;U+0020 SPACE&lt;/li&gt;\n&lt;li&gt;U+0009 CHARACTER TABULATION (tab)&lt;/li&gt;\n&lt;li&gt;U+000A LINE FEED (LF)&lt;/li&gt;\n&lt;li&gt;U+000C FORM FEED (FF)&lt;/li&gt;\n&lt;li&gt;U+000D CARRIAGE RETURN (CR)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Using characters except &lt;code&gt;ASCII letters and digits, &apos;_&apos;, &apos;-&apos; and &apos;.&apos;&lt;/code&gt; may cause compatibility problems, as they weren&apos;t allowed in &lt;code&gt;HTML 4&lt;/code&gt;. Though this restriction has been lifted in &lt;code&gt;HTML 5&lt;/code&gt;, an ID should start with a letter for compatibility.&lt;/p&gt;\n    ","\n&lt;p&gt;It appears that, although colons (:) and periods (.) are valid in the HTML specification, they are invalid as id selectors in &lt;a href=&quot;http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS&lt;/a&gt;, so they are probably best avoided if you intend to use them for that purpose.&lt;/p&gt;\n    ","\n&lt;p&gt;For &lt;a href=&quot;https://en.wikipedia.org/wiki/HTML5&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML5&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The value must be unique amongst all the IDs in the elements home\nsubtree and must contain at least one character. The value must not\ncontain any space characters.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;At least one character, no spaces.&lt;/p&gt;\n&lt;p&gt;This opens the door for valid use cases such as using accented characters. It also gives us plenty of more ammo to shoot ourselves in the foot with, since you can now use &lt;em&gt;id&lt;/em&gt; values that will cause problems with both CSS and JavaScript unless youre really careful.&lt;/p&gt;\n    ","\n&lt;ol&gt;\n&lt;li&gt;IDs are best suited for naming parts of your layout, so you should not give the same name for ID and class&lt;/li&gt;\n&lt;li&gt;ID allows alphanumeric and special characters&lt;/li&gt;\n&lt;li&gt;but avoid using the &lt;code&gt;# : . * !&lt;/code&gt; symbols&lt;/li&gt;\n&lt;li&gt;spaces are not allowed&lt;/li&gt;\n&lt;li&gt;not started with numbers or a hyphen followed by a digit&lt;/li&gt;\n&lt;li&gt;case sensitive&lt;/li&gt;\n&lt;li&gt;using ID selectors is faster than using class selectors&lt;/li&gt;\n&lt;li&gt;use hyphen &quot;-&quot; (underscore &quot;_&quot; can also be used, but it is not good for &lt;a href=&quot;https://en.wikipedia.org/wiki/Search_engine_optimization&quot; rel=&quot;nofollow noreferrer&quot;&gt;SEO&lt;/a&gt;) for long CSS class or Id rule names&lt;/li&gt;\n&lt;li&gt;If a rule has an ID selector as its key selector, dont add the tag name to the rule. Since IDs are unique, adding a tag name would slow down the matching process needlessly.&lt;/li&gt;\n&lt;li&gt;In HTML5, the id attribute can be used on any HTML element and In HTML 4.01, the id attribute cannot be used with: &lt;code&gt;&amp;lt;base&amp;gt;, &amp;lt;head&amp;gt;, &amp;lt;html&amp;gt;, &amp;lt;meta&amp;gt;, &amp;lt;param&amp;gt;, &amp;lt;script&amp;gt;, &amp;lt;style&amp;gt;, and &amp;lt;title&amp;gt;.&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;Any &lt;strong&gt;alpha-numeric value&lt;/strong&gt;,&quot;&lt;strong&gt;-&lt;/strong&gt;&quot;, and &quot;&lt;strong&gt;_&lt;/strong&gt;&quot; are valid. But, you should &lt;em&gt;start the id name&lt;/em&gt; with any character between &lt;strong&gt;A-Z&lt;/strong&gt; or &lt;strong&gt;a-z&lt;/strong&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;No spaces, and it must begin with at least a character from a to z and 0 to 9.&lt;/p&gt;\n    ","\n&lt;p&gt;Since &lt;em&gt;ES2015&lt;/em&gt; we can as well use &lt;em&gt;almost&lt;/em&gt; all &lt;strong&gt;Unicode characters&lt;/strong&gt; for ID&apos;s, if the document character set is set to UTF-8.&lt;/p&gt;\n&lt;p&gt;Test out here: &lt;a href=&quot;https://mothereff.in/js-variables&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://mothereff.in/js-variables&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/E4FWL.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/E4FWL.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Read about it: &lt;em&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/javascript-identifiers-es6&quot; rel=&quot;nofollow noreferrer&quot;&gt;Valid JavaScript variable names in ES2015&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;In ES2015, identifiers must start with $, _, or any symbol with the\nUnicode derived core property ID_Start.&lt;/p&gt;\n&lt;p&gt;The rest of the identifier can contain $, _, U+200C zero width\nnon-joiner, U+200D zero width joiner, or any symbol with the Unicode\nderived core property ID_Continue.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; target = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;div&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Div id:&quot;&lt;/span&gt;, target )\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(target).&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;background&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;chartreuse&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;div&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt; blue solid;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;H̹̙̦̮͉̩̗̗ͧ̇̏̊̾Eͨ͆͒̆ͮ̃͏̷̮̣̫̤̣Cͯ̂͐͏̨̛͔̦̟͈̻O̜͎͍͙͚̬̝̣̽ͮ͐͗̀ͤ̍̀͢M̴̴̷̷̡̛̲̭͍͇̼̟̯̦̙̞̪̗̗̼͍̉̒ͥͤͩ̾͑̔͐̿̿̓̽͐͠ͅH̙̙̔̄͜&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Should you use it? Probably not a good idea!&lt;/p&gt;\n&lt;p&gt;Read about it: &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11945216/javascript-syntax-error-missing-after-function-body/52799593#52799593&quot;&gt;JavaScript: &quot;Syntax error missing } after function body&quot;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;In HTML&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;ID&lt;/strong&gt; should start with &lt;strong&gt;{A-Z}&lt;/strong&gt; or &lt;strong&gt;{a-z}&lt;/strong&gt;. You can add &lt;strong&gt;digits, periods, hyphens, underscores, and colons.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;testID2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test-ID2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test_ID2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test:ID2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;test.ID2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But even though you can make ID with colons (:) or period (&lt;code&gt;.&lt;/code&gt;). It is hard for &lt;strong&gt;CSS&lt;/strong&gt; to use these IDs as a selector. Mainly when you want to use pseudo elements (&lt;code&gt;:before&lt;/code&gt; and &lt;code&gt;:after&lt;/code&gt;).&lt;/p&gt;\n&lt;p&gt;Also in JavaScript it is hard to select these ID&apos;s.\nSo you should use first four ID&apos;s as the preferred way by many developers around and if it&apos;s necessary then you can use the last two also.&lt;/p&gt;\n    ","\n&lt;p&gt;Walues can be: [a-z], [A-Z], [0-9], [* _ : -]&lt;/p&gt;\n&lt;p&gt;It is used for HTML5...&lt;/p&gt;\n&lt;p&gt;We can add id with any tag.&lt;/p&gt;\n    ","\n&lt;p&gt;Help, my Javascript is broken!&lt;/p&gt;\n&lt;p&gt;Everyone says IDs can&apos;t be duplicates.&lt;/p&gt;\n&lt;p&gt;Best tried in every browser but FireFox&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ONE&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ONE&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ONE&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;( &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelectorAll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#ONE&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; , &lt;span class=&quot;hljs-string&quot;&gt;&apos; DIVs!&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos; in a &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;ONE&lt;/span&gt; )\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-variable constant_&quot;&gt;ONE&lt;/span&gt; );\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;Html ID&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;The id attribute specifies its element&apos;s unique identifier (ID).&lt;/p&gt;\n&lt;p&gt;There are no other restrictions on what form an ID can take; in particular, IDs can consist of just digits, start with a digit, start with an underscore, consist of just punctuation, etc.&lt;/p&gt;\n&lt;p&gt;An element&apos;s unique identifier can be used for a variety of purposes, most notably as a way to link to specific parts of a document using fragments, as a way to target an element when scripting, and as a way to style a specific element from CSS.&lt;/p&gt;\n    ","\n&lt;ol&gt;\n&lt;li&gt;Uppercase and lowercase alphabets works&lt;/li&gt;\n&lt;li&gt;&apos;_&apos; and &apos;-&apos; works, too&lt;/li&gt;\n&lt;li&gt;Numbers works&lt;/li&gt;\n&lt;li&gt;Colons (,) and period (.) seems to work&lt;/li&gt;\n&lt;li&gt;Interestingly, emojis work&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;alphabets  caps &amp;amp; small&lt;/p&gt;\n&lt;p&gt;digits  0-9&lt;/p&gt;\n&lt;p&gt;special characters  &apos;:&apos;, &apos;-&apos;, &apos;_&apos;, &apos;.&apos;&lt;/p&gt;\n&lt;p&gt;The format should be either starting from &apos;.&apos; or an alphabet, followed by either of the special characters of more alphabets or numbers. The value of the id field must not end at an &apos;_&apos;.&lt;/p&gt;\n&lt;p&gt;Also, spaces are not allowed, if provided, they are treated as different values, which is not valid in case of the id attributes.&lt;/p&gt;\n    "],"180":["\n&lt;p&gt;I love &lt;em&gt;&lt;a href=&quot;https://www.webdevelopersnotes.com/10-ways-to-format-time-and-date-using-javascript&quot; rel=&quot;noreferrer&quot;&gt;10 ways to format time and date using JavaScript&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;http://www.elated.com/articles/working-with-dates/&quot; rel=&quot;noreferrer&quot;&gt;Working with Dates&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;Basically, you have three methods and you have to combine the strings for yourself:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the date&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the month&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;// Returns the year&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; curr_date = d.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; curr_month = d.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Months are zero based&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; curr_year = d.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(curr_date + &lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt; + curr_month + &lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt; + curr_year);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://momentjs.com&quot;&gt;Moment.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It is a (lightweight)* JavaScript date library for parsing, manipulating, and formatting dates.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-title function_&quot;&gt;moment&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;125&lt;/span&gt;]);\na.&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dddd, MMMM Do YYYY, h:mm:ss a&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Sunday, February 14th 2010, 3:25:50 pm&quot;&lt;/span&gt;\na.&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ddd, hA&quot;&lt;/span&gt;);                       &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Sun, 3PM&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;(*) lightweight meaning 9.3KB minified + gzipped in the smallest possible setup (feb 2014)&lt;/em&gt; &lt;/p&gt;\n    ","\n&lt;p&gt;If you are already using &lt;a href=&quot;http://en.wikipedia.org/wiki/JQuery_UI&quot; rel=&quot;noreferrer&quot;&gt;jQuery UI&lt;/a&gt; in your project, you can use the built-in datepicker method for formatting your date object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.datepicker.&lt;span class=&quot;hljs-title function_&quot;&gt;formatDate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;yy-mm-dd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2007&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, the datepicker only formats dates, and cannot format times.&lt;/p&gt;\n\n&lt;p&gt;Have a look at &lt;a href=&quot;http://docs.jquery.com/UI/Datepicker/formatDate&quot; rel=&quot;noreferrer&quot;&gt;jQuery UI datepicker formatDate&lt;/a&gt;, the examples.&lt;/p&gt;\n    ","\n&lt;h2&gt;Custom formatting function:&lt;/h2&gt;\n\n&lt;p&gt;For fixed formats, a simple function make the job. Following example generate the international format YYYY-MM-DD:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dateToYMD&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;date&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; m = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; y = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + y + &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt; + (m&amp;lt;=&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + m : m) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt; + (d &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + d : d);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: It is, however, usually not a good idea to extend the Javascript standard libraries (e.g. by adding this function to the prototype of Date). &lt;/p&gt;\n\n&lt;p&gt;A more advanced function could generate configurable output based on a format parameter. There are a couple of good examples in this same page.&lt;/p&gt;\n\n&lt;p&gt;If to write a formatting function is too long, there are plenty of libraries around which does it. Some other answers already enumerate them. But increasing dependencies also has it counter-part.&lt;/p&gt;\n\n&lt;h2&gt;Standard ECMAScript formatting functions:&lt;/h2&gt;\n\n&lt;p&gt;Since more recent versions of ECMAscript, the &lt;code&gt;Date&lt;/code&gt; class has some specific formatting functions:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;toDateString&lt;/strong&gt;: Implementation dependent, show only the date.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.todatestring&quot; rel=&quot;noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.todatestring&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toDateString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// e.g. &quot;Fri Nov 11 2016&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;toISOString&lt;/strong&gt;: Show ISO 8601 date and time.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.toisostring&quot; rel=&quot;noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.toisostring&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// e.g. &quot;2016-11-21T08:00:00.000Z&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;toJSON&lt;/strong&gt;: Stringifier for JSON. &lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tojson&quot; rel=&quot;noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tojson&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toJSON&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// e.g. &quot;2016-11-21T08:00:00.000Z&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;toLocaleDateString&lt;/strong&gt;: Implementation dependent, a date in locale format.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tolocaledatestring&quot; rel=&quot;noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tolocaledatestring&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleDateString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// e.g. &quot;21/11/2016&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;toLocaleString&lt;/strong&gt;: Implementation dependent, a date&amp;amp;time in locale format.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tolocalestring&quot; rel=&quot;noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tolocalestring&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// e.g. &quot;21/11/2016, 08:00:00 AM&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;toLocaleTimeString&lt;/strong&gt;: Implementation dependent, a time in locale format.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tolocaletimestring&quot; rel=&quot;noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tolocaletimestring&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleTimeString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// e.g. &quot;08:00:00 AM&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;toString&lt;/strong&gt;: Generic toString for Date.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tostring&quot; rel=&quot;noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-date.prototype.tostring&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// e.g. &quot;Fri Nov 11 2016 08:00:00 GMT+0100 (W. Europe Standard Time)&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Note: it is possible to generate custom output out of those formatting functions:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// By @Image72, return YYYY-MM-DD&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;Where is the documentation which lists the format specifiers supported by the &lt;code&gt;Date()&lt;/code&gt; object?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I stumbled across this today and was quite surprised that no one took the time to answer this simple question.  True, there are many libraries out there to help with date manipulation.  Some are better than others.  But that wasn&apos;t the question asked.&lt;/p&gt;\n\n&lt;p&gt;AFAIK, pure JavaScript doesn&apos;t support format specifiers &lt;strong&gt;the way you have indicated you&apos;d like to use them&lt;/strong&gt;.  But it does support methods for formatting dates and/or times, such as &lt;code&gt;.toLocaleDateString()&lt;/code&gt;, &lt;code&gt;.toLocaleTimeString()&lt;/code&gt;, and &lt;code&gt;.toUTCString()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;Date&lt;/code&gt; object reference I use most frequently is on the &lt;a href=&quot;http://www.w3schools.com/jsref/jsref_obj_date.asp&quot;&gt;w3schools.com website&lt;/a&gt; (but &lt;a href=&quot;https://www.google.com/search?q=javascript%20date%20object%20reference&quot;&gt;a quick Google search&lt;/a&gt; will reveal many more that may better meet your needs).&lt;/p&gt;\n\n&lt;p&gt;Also note that the &lt;strong&gt;Date Object Properties&lt;/strong&gt; section provides a link to &lt;a href=&quot;http://www.w3schools.com/jsref/jsref_prototype_date.asp&quot;&gt;&lt;code&gt;prototype&lt;/code&gt;&lt;/a&gt;, which illustrates some ways you can extend the Date object with custom methods.  There has been &lt;a href=&quot;http://perfectionkills.com/extending-built-in-native-objects-evil-or-not/&quot;&gt;some debate&lt;/a&gt; in the JavaScript community over the years about whether or not this is best practice, and I am not advocating for or against it, just pointing out its existence.&lt;/p&gt;\n    ","\n&lt;h1&gt;The Short Answer&lt;/h1&gt;\n&lt;p&gt;There is no universal documentation that javascript caters to; every browser that has javascript is really an implementation. However, there is a standard that most modern browsers tend to follow, and thats the EMCAScript standard; the ECMAScript standard strings would take, minimally, a modified implementation of the ISO 8601 definition.&lt;/p&gt;\n&lt;p&gt;In addition to this, there is a second standard set forward by the &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Engineering_Task_Force&quot; rel=&quot;nofollow noreferrer&quot;&gt;IETF&lt;/a&gt; that browsers tend to follow as well, which is the definition for timestamps made in the RFC 2822. Actual documentation can be found in the references list at the bottom.&lt;/p&gt;\n&lt;p&gt;From this you can expect basic functionality, but what ought to be is not inherently what is. Im going to go a little in depth with this procedurally though, as it appears only three people actually answered the question (Scott, goofballLogic, and peller namely) which, to me, suggests most people are unaware of what actually happens when you create a Date object.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h1&gt;The Long Answer&lt;/h1&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Where is the documentation which lists the format specifiers supported by the Date() object?&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;br&gt;\n&lt;p&gt;To answer the question, or typically even look for the answer to this question, you need to know that javascript is not a novel language; its actually an implementation of ECMAScript, and follows the ECMAScript standards (but note, javascript also actually pre-dated those standards; EMCAScript standards are built off the early implementation of LiveScript/JavaScript). The current ECMAScript standard is 5.1 (2011); at the time that the question was originally asked (June 09), the standard was 3 (4 was abandoned), but 5 was released shortly after the post at the end of 2009. This should outline one problem; what standard a javascript implementation may follow, may not reflect what is actually in place, because a) its an implementation of a given standard, b) not all implementations of a standard are puritan, and c) functionality is not released in synchronization with a new standard as d) an implementation is a constant work in progress&lt;/p&gt;\n&lt;p&gt;Essentially, when dealing with javascript, youre dealing with a derivative (javascript specific to the browser) of an implementation (javascript itself). Googles V8, for example, implements ECMAScript 5.0, but Internet Explorers JScript doesnt attempt to conform to any ECMAScript standard, yet Internet&amp;nbsp;Explorer&amp;nbsp;9 does conform to ECMAScript 5.0.&lt;/p&gt;\n&lt;p&gt;When a single argument is passed to new Date(), it casts this function prototype:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(value)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;When two or more arguments are passed to new Date(), it casts this function prototype:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt; (year, month [, date [, hours [, minutes [, seconds [, ms ] ] ] ] ] )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br&gt;\nBoth of those functions should look familiar, but this does not immediately answer your question and what quantifies as an acceptable date format requires further explanation. When you pass a string to new Date(), it will call the prototype (note that I&apos;m using the word &lt;em&gt;prototype&lt;/em&gt; loosely; the versions may be individual functions, or it may be part of a conditional statement in a single function) for &lt;strong&gt;new Date(value)&lt;/strong&gt; with your string as the argument for the value parameter. This function will first check whether it is a number or a string. The documentation for this function can be found here:\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.3.2&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.3.2&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;From this, we can deduce that to get the string formatting allowed for new Date(value), we have to look at the method Date.parse(string). The documentation for this method can be found here:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.2&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.2&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;And we can further infer that dates are expected to be in a modified ISO 8601 Extended Format, as specified here:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;However, we can recognize from experience that javascripts Date object accepts other formats (enforced by the existence of this question in the first place), and this is okay because ECMAScript allows for implementation specific formats. However, that still doesnt answer the question of what documentation is available on the available formats, nor what formats are actually allowed. Were going to look at Googles javascript implementation, V8; please note Im not suggesting this is the best javascript engine (how can one define best or even good) and one cannot assume that the formats allowed in V8 represent all formats available today, but I think its fair to assume they do follow modern expectations.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Googles V8, date.js, DateConstructor&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#141&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#141&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Looking at the DateConstructor function, we can deduce we need to find the DateParse function; however, note that year is not the actual year and is only a reference to the year parameter.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Googles V8, date.js, DateParse&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#270&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#270&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This calls %DateParseString, which is actually a run-time function reference for a C++ function. It refers to the following code:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Googles V8, runtime.cc, %DateParseString&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/runtime.cc?r=18400#9559&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/runtime.cc?r=18400#9559&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The function call were concerned with in this function is for DateParser::Parse(); ignore the logic surrounding those function calls, these are just checks to conform to the encoding type (ASCII and UC16). DateParser::Parse is defined here:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Google&apos;s V8, dateparser-inl.h, DateParser::Parse&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/dateparser-inl.h?r=18400#36&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/dateparser-inl.h?r=18400#36&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This is the function that actually defines what formats it accepts. Essentially, it checks for the EMCAScript 5.0 ISO 8601 standard and if it is not standards compliant, then it will attempt to build the date based on legacy formats. A few key points based on the comments:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Words before the first number that are unknown to the parser are ignored.&lt;/li&gt;\n&lt;li&gt;Parenthesized text are ignored.&lt;/li&gt;\n&lt;li&gt;Unsigned numbers followed by : are interpreted as a time component.&lt;/li&gt;\n&lt;li&gt;Unsigned numbers followed by . are interpreted as a time component, and must be followed by milliseconds.&lt;/li&gt;\n&lt;li&gt;Signed numbers followed by the hour or hour minute (e.g. +5:15 or +0515) are interpreted as the timezone.&lt;/li&gt;\n&lt;li&gt;When declaring the hour and minute, you can use either hh:mm or hhmm.&lt;/li&gt;\n&lt;li&gt;Words that indicate a time zone are interpreted as a time zone.&lt;/li&gt;\n&lt;li&gt;All other numbers are interpreted as date components.&lt;/li&gt;\n&lt;li&gt;All words that start with the first three digits of a month are interpreted as the month.&lt;/li&gt;\n&lt;li&gt;You can define minutes and hours together in either of the two formats: hh:mm or hhmm.&lt;/li&gt;\n&lt;li&gt;Symbols like +, - and unmatched ) are not allowed after a number has been processed.&lt;/li&gt;\n&lt;li&gt;Items that match multiple formats (e.g. 1970-01-01) are processed as a standard compliant EMCAScript 5.0 ISO 8601 string.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;So this should be enough to give you a basic idea of what to expect when it comes to passing a string into a Date object. You can further expand upon this by looking at the following specification that Mozilla points to on the Mozilla Developer Network (compliant to the IETF RFC 2822 timestamps):&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2822#page-14&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.rfc-editor.org/rfc/rfc2822#page-14&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The Microsoft Developer Network additionally mentions an additional standard for the Date object: ECMA-402, the ECMAScript Internationalization API Specification, which is complementary to the ECMAScript 5.1 standard (and future ones). That can be found here:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-402/1.0/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-402/1.0/&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;In any case, this should aid in highlighting that there is no &quot;documentation&quot; that universally represents all implementations of javascript, but there is still enough documentation available to make reasonable sense of what strings are acceptable for a Date object. Quite the loaded question when you think about it, yes? :P&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.3.2&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.3.2&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.2&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.2&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2822#page-14&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.rfc-editor.org/rfc/rfc2822#page-14&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-402/1.0/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-402/1.0/&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#141&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#141&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#270&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/date.js?r=18400#270&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/runtime.cc?r=18400#9559&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/runtime.cc?r=18400#9559&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/v8/source/browse/trunk/src/dateparser-inl.h?r=18400#36&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://code.google.com/p/v8/source/browse/trunk/src/dateparser-inl.h?r=18400#36&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ff743760(v=vs.94).aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://msdn.microsoft.com/en-us/library/ff743760(v=vs.94).aspx&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;Make sure you checkout &lt;a href=&quot;http://www.datejs.com/&quot; rel=&quot;noreferrer&quot;&gt;Datejs&lt;/a&gt; when dealing with dates in JavaScript. It&apos;s quite impressive and well documented as you can see in case of the &lt;a href=&quot;http://code.google.com/p/datejs/wiki/APIDocumentation#toString&quot; rel=&quot;noreferrer&quot;&gt;toString function&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: Tyler Forsythe points out, that datejs is outdated. I use it in my current project and hadn&apos;t any trouble with it, however you should be aware of this and consider alternatives.&lt;/p&gt;\n    ","\n&lt;p&gt;You can just expand the &lt;code&gt;Date&lt;/code&gt; Object with a new &lt;code&gt;format&lt;/code&gt; method as noted by &lt;a href=&quot;http://huahun.iteye.com/blog/197367&quot; rel=&quot;noreferrer&quot;&gt;meizz&lt;/a&gt;, below is the code given by the author.  And\nhere is a &lt;a href=&quot;http://jsfiddle.net/gongzhitaao/G5kEQ/1/&quot; rel=&quot;noreferrer&quot;&gt;jsfiddle&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;format&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;format&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//author: meizz&lt;/span&gt;\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;M+&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;()+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;//month&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;d+&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;(),    &lt;span class=&quot;hljs-comment&quot;&gt;//day&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;h+&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getHours&lt;/span&gt;(),   &lt;span class=&quot;hljs-comment&quot;&gt;//hour&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;m+&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMinutes&lt;/span&gt;(), &lt;span class=&quot;hljs-comment&quot;&gt;//minute&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;s+&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getSeconds&lt;/span&gt;(), &lt;span class=&quot;hljs-comment&quot;&gt;//second&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;q+&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;()+&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)/&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;),  &lt;span class=&quot;hljs-comment&quot;&gt;//quarter&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;S&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMilliseconds&lt;/span&gt;() &lt;span class=&quot;hljs-comment&quot;&gt;//millisecond&lt;/span&gt;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/(y+)/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(format)) format=format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;,\n    (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;()+&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; - &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;));\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o)&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&quot;&lt;/span&gt;+ k +&lt;span class=&quot;hljs-string&quot;&gt;&quot;)&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(format))\n    format = format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;,\n      &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;==&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ? o[k] :\n        (&lt;span class=&quot;hljs-string&quot;&gt;&quot;00&quot;&lt;/span&gt;+ o[k]).&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;((&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;+ o[k]).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;));\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; format;\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;january 12 2008 11:12:30&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;yyyy-MM-dd h:mm:ss&quot;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The functionality you cite is not standard Javascript, not likely to be portable across browsers and therefore not good practice.  The &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot; rel=&quot;noreferrer&quot;&gt;ECMAScript 3 spec&lt;/a&gt; leaves the parse and output formats function up to the Javascript implementation.  &lt;a href=&quot;http://www.ecma-international.org/publications/files/drafts/tc39-2009-025.pdf&quot; rel=&quot;noreferrer&quot;&gt;ECMAScript 5&lt;/a&gt; adds a subset of ISO8601 support.  I believe the toString() function you mention is an innovation in one browser (Mozilla?)&lt;/p&gt;\n\n&lt;p&gt;Several libraries provide routines to parameterize this, some with extensive localization support.  You can also check out the methods in &lt;a href=&quot;http://dojotoolkit.org/api/?qs=1.3/dojo.date.locale&quot; rel=&quot;noreferrer&quot;&gt;dojo.date.locale&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I made this very simple formatter, it&apos;s cut/n/pastable (Updated with neater version):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;DateFmt&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;fstr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;formatString&lt;/span&gt; = fstr\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; mthNames = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jan&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Feb&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mar&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Apr&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;May&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jun&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jul&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Aug&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sep&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Oct&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Nov&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Dec&quot;&lt;/span&gt;];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dayNames = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sun&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mon&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Tue&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Wed&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Thu&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Fri&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sat&quot;&lt;/span&gt;];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; zeroPad = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;number&lt;/span&gt;) {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;+number).&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dateMarkers = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getDate&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(v)}],\n    &lt;span class=&quot;hljs-attr&quot;&gt;m&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getMonth&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(v+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)}],\n    &lt;span class=&quot;hljs-attr&quot;&gt;n&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getMonth&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mthNames[v]; }],\n    &lt;span class=&quot;hljs-attr&quot;&gt;w&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getDay&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dayNames[v]; }],\n    &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getFullYear&apos;&lt;/span&gt;],\n    &lt;span class=&quot;hljs-attr&quot;&gt;H&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getHours&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(v)}],\n    &lt;span class=&quot;hljs-attr&quot;&gt;M&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getMinutes&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(v)}],\n    &lt;span class=&quot;hljs-attr&quot;&gt;S&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;getSeconds&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(v)}],\n    &lt;span class=&quot;hljs-attr&quot;&gt;i&lt;/span&gt;:[&lt;span class=&quot;hljs-string&quot;&gt;&apos;toISOString&apos;&lt;/span&gt;]\n  };\n\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;format&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;date&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dateTxt = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;formatString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/%(.)/g&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m, p&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rv = date[(dateMarkers[p])[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]()\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( dateMarkers[p][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; ) rv = dateMarkers[p][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;](rv)\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; rv\n\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dateTxt\n  }\n\n}\n\nfmt = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateFmt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%w %d:%n:%y - %H:%M:%S  %i&quot;&lt;/span&gt;)\nv = fmt.&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://snipplr.com/view/66968.82825/&quot; rel=&quot;noreferrer&quot;&gt;http://snipplr.com/view/66968.82825/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Framework free, limited but light&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;()+&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// [&quot;Tue&quot;, &quot;Sep&quot;, &quot;03&quot;, &quot;2013&quot;, &quot;21:54:52&quot;, &quot;GMT-0500&quot;, &quot;(Central&quot;, &quot;Daylight&quot;, &quot;Time)&quot;]&lt;/span&gt;\n\n[d[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], d[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], d[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], d[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]].&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2013 Sep 03 21:58:03&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;DateJS is certainly full-featured, but I&apos;d recommend &lt;a href=&quot;http://blog.stevenlevithan.com/archives/date-time-format&quot;&gt;this MUCH simpler lib (JavaScript Date Format)&lt;/a&gt; which I prefer  simply because it&apos;s only 120 lines or so.&lt;/p&gt;\n    ","\n&lt;p&gt;Having looked through several of the options provided in other answers, I decided to write my own limited but simple solution that others may also find useful.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n* Format date as a string\n* &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;date&lt;/span&gt; - a date object (usually &quot;new Date();&quot;)\n* &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;format&lt;/span&gt; - a string format, eg. &quot;DD-MM-YYYY&quot;\n*/&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;date, format&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Calculate date parts and replace instances in format string accordingly&lt;/span&gt;\n    format = format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;DD&quot;&lt;/span&gt;, (date.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;() &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) + date.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// Pad with &apos;0&apos; if needed&lt;/span&gt;\n    format = format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MM&quot;&lt;/span&gt;, (date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) + (date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Months are zero-based&lt;/span&gt;\n    format = format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;YYYY&quot;&lt;/span&gt;, date.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;());\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; format;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Example usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;The date is: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;dateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;DD/MM/YYYY&quot;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s a function I use a lot. The result is yyyy-mm-dd hh:mm:ss.nnn.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;date_and_time&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n    &lt;span class=&quot;hljs-comment&quot;&gt;//zero-pad a single zero if needed&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; zp = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (val &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + val : &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + val);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//zero-pad up to two zeroes if needed&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; zp2 = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;99&lt;/span&gt;? (val &amp;lt;=&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;? &lt;span class=&quot;hljs-string&quot;&gt;&apos;00&apos;&lt;/span&gt; + val : &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + val) : (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + val ) ;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; m = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; y = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; h = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getHours&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; min = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMinutes&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; s = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getSeconds&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ms = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMilliseconds&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + y + &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;zp&lt;/span&gt;(m) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;zp&lt;/span&gt;(d) + &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;zp&lt;/span&gt;(h) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;zp&lt;/span&gt;(min) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;zp&lt;/span&gt;(s) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;zp2&lt;/span&gt;(ms);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You may find useful this modification of date object, which is smaller than any library and is easily extendable to support different formats:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot; rel=&quot;noreferrer&quot;&gt;Object.keys()&lt;/a&gt; which is undefined in older browsers so you may need implement polyfill from given link.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;CODE&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;format&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;format&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// set default format if function argument not provided&lt;/span&gt;\n    format = format || &lt;span class=&quot;hljs-string&quot;&gt;&apos;YYYY-MM-DD hh:mm&apos;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; zeropad = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;number, length&lt;/span&gt;) {\n            number = number.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n            length = length || &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(number.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;lt; length)\n                number = &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + number;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; number;\n        },\n        &lt;span class=&quot;hljs-comment&quot;&gt;// here you can define your formats&lt;/span&gt;\n        formats = {\n            &lt;span class=&quot;hljs-attr&quot;&gt;YYYY&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;(),\n            &lt;span class=&quot;hljs-attr&quot;&gt;MM&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeropad&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n            &lt;span class=&quot;hljs-attr&quot;&gt;DD&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeropad&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;()),\n            &lt;span class=&quot;hljs-attr&quot;&gt;hh&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeropad&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getHours&lt;/span&gt;()),\n            &lt;span class=&quot;hljs-attr&quot;&gt;mm&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeropad&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMinutes&lt;/span&gt;())\n        },\n        pattern = &lt;span class=&quot;hljs-string&quot;&gt;&apos;(&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(formats).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;)|(&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(pattern, &lt;span class=&quot;hljs-string&quot;&gt;&apos;g&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;match&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; formats[match];\n    });\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;USE&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; now = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(now.&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;());\n&lt;span class=&quot;hljs-comment&quot;&gt;// outputs: 2015-02-09 11:47&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; yesterday = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2015-02-08&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(yesterday.&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hh:mm YYYY/MM/DD&apos;&lt;/span&gt;));\n&lt;span class=&quot;hljs-comment&quot;&gt;// outputs: 00:00 2015/02/08&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;All browsers&lt;/h2&gt;\n\n&lt;p&gt;The most reliable way to format a date with the source format you&apos;re using, is to apply the following steps :&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Use &lt;code&gt;new Date()&lt;/code&gt; to create a &lt;code&gt;Date&lt;/code&gt; object&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;.getDate()&lt;/code&gt;, &lt;code&gt;.getMonth()&lt;/code&gt; and &lt;code&gt;.getFullYear()&lt;/code&gt; to get respectively the day, month and year&lt;/li&gt;\n&lt;li&gt;Paste the pieces together according to your target format&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Example :&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;hljs-string&quot;&gt;&apos;2015-11-09T10:46:15.097Z&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(input);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [\n       (&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt; + date.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n       (&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt; + (date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;()+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n       date.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;()\n    ].&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(date); &lt;span class=&quot;hljs-comment&quot;&gt;// OUTPUT : 09/11/2015&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;(See also &lt;a href=&quot;https://jsfiddle.net/az0ab0Lm/1/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Modern browsers only&lt;/h2&gt;\n\n&lt;p&gt;You can also use the built-in &lt;code&gt;.toLocaleDateString&lt;/code&gt; method to do the formatting for you. You just need pass along the proper locale and options to match the right format, which unfortunately is only supported by modern browsers &lt;strong&gt;(*)&lt;/strong&gt; :&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;hljs-string&quot;&gt;&apos;2015-11-09T10:46:15.097Z&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;input&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(input).&lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleDateString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;en-GB&apos;&lt;/span&gt;, {\n        &lt;span class=&quot;hljs-attr&quot;&gt;year&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;numeric&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;month&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;2-digit&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;day&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;2-digit&apos;&lt;/span&gt;\n    });\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(date); &lt;span class=&quot;hljs-comment&quot;&gt;// OUTPUT : 09/11/2015&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;(See also &lt;a href=&quot;https://jsfiddle.net/az0ab0Lm/2/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;(*)&lt;/strong&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;According to the MDN&lt;/strong&gt;&lt;/a&gt;, &quot;Modern browsers&quot; means Chrome 24+, Firefox 29+, IE11, Edge12+, Opera 15+ &amp;amp; Safari &lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/56490/what-does-nightly-builds-mean&quot;&gt;&lt;strong&gt;nightly build&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Just to continue gongzhitaao&apos;s solid answer - this handles AM/PM&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;format&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;format&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//author: meizz&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; hours = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getHours&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ttime = &lt;span class=&quot;hljs-string&quot;&gt;&quot;AM&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(format.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;t&quot;&lt;/span&gt;) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; hours &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;)\n    {\n        hours = hours - &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;;\n        ttime = &lt;span class=&quot;hljs-string&quot;&gt;&quot;PM&quot;&lt;/span&gt;;\n     }\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;M+&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;//month&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;d+&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;(),    &lt;span class=&quot;hljs-comment&quot;&gt;//day&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;h+&quot;&lt;/span&gt;: hours,   &lt;span class=&quot;hljs-comment&quot;&gt;//hour&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;m+&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMinutes&lt;/span&gt;(), &lt;span class=&quot;hljs-comment&quot;&gt;//minute&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;s+&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getSeconds&lt;/span&gt;(), &lt;span class=&quot;hljs-comment&quot;&gt;//second&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;q+&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;((&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) / &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;),  &lt;span class=&quot;hljs-comment&quot;&gt;//quarter&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;S&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getMilliseconds&lt;/span&gt;(), &lt;span class=&quot;hljs-comment&quot;&gt;//millisecond,&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;t+&quot;&lt;/span&gt;: ttime\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-regexp&quot;&gt;/(y+)/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(format)) format = format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;,\n  (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; - &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;));\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&quot;&lt;/span&gt; + k + &lt;span class=&quot;hljs-string&quot;&gt;&quot;)&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(format))\n    format = format.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;,\n      &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;$1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ? o[k] :\n        (&lt;span class=&quot;hljs-string&quot;&gt;&quot;00&quot;&lt;/span&gt; + o[k]).&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;((&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + o[k]).&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;));\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; format;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I was unable to find any definitive documentation on valid date formats so I wrote my own test to see what is supported in various browsers.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://blarg.co.uk/blog/javascript-date-formats&quot; rel=&quot;noreferrer&quot;&gt;http://blarg.co.uk/blog/javascript-date-formats&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My results concluded the following formats are valid in all browsers that I tested (examples use the date &quot;9th August 2013&quot;):&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;[Full Year]/[Month]/[Date number]&lt;/strong&gt; - Month can be either the number with or without a leading zero or the month name in short or long format, and date number can be with or without a leading zero.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;2013/08/09&lt;/li&gt;\n&lt;li&gt;2013/08/9&lt;/li&gt;\n&lt;li&gt;2013/8/09&lt;/li&gt;\n&lt;li&gt;2013/8/9&lt;/li&gt;\n&lt;li&gt;2013/August/09&lt;/li&gt;\n&lt;li&gt;2013/August/9&lt;/li&gt;\n&lt;li&gt;2013/Aug/09&lt;/li&gt;\n&lt;li&gt;2013/Aug/9&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;[Month]/[Full Year]/[Date Number]&lt;/strong&gt; - Month can be either the number with or without a leading zero or the month name in short or long format, and date number can be with or without a leading zero. &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;08/2013/09&lt;/li&gt;\n&lt;li&gt;08/2013/9&lt;/li&gt;\n&lt;li&gt;8/2013/09&lt;/li&gt;\n&lt;li&gt;8/2013/9&lt;/li&gt;\n&lt;li&gt;August/2013/09&lt;/li&gt;\n&lt;li&gt;August/2013/9&lt;/li&gt;\n&lt;li&gt;Aug/2013/09&lt;/li&gt;\n&lt;li&gt;Aug/2013/9&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Any combination of [Full Year], [Month Name] and [Date Number] separated by spaces&lt;/strong&gt; - Month name can be in either short or long format, and date number can be with or without a leading zero. &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;2013 August 09&lt;/li&gt;\n&lt;li&gt;August 2013 09&lt;/li&gt;\n&lt;li&gt;09 August 2013&lt;/li&gt;\n&lt;li&gt;2013 Aug 09&lt;/li&gt;\n&lt;li&gt;Aug 9 2013&lt;/li&gt;\n&lt;li&gt;2013 9 Aug&lt;/li&gt;\n&lt;li&gt;etc...&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Also valid in &quot;modern browsers&quot; (or in other words all browsers except IE9 and below)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;[Full Year]-[Month Number]-[Date Number]&lt;/strong&gt; - Month and Date Number must include leading zeros (this is the format that the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.1/en/datetime.html&quot; rel=&quot;noreferrer&quot;&gt;MySQL Date type&lt;/a&gt; uses) &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;2013-08-09&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Using month names:&lt;/strong&gt;&lt;br&gt;\nInterestingly, when using month names I discovered that only the first 3 characters of the month name are ever used so all the of the following are perfectly valid:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;9 August 2013&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;9 Aug 2013&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;9 Augu 2013&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;9 Augustagfsdgsd 2013&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Formatting and especially parsing dates in JavaScript can be a bit of a headache. Not all browsers handle dates in the same way. So while it&apos;s useful to know the base methods, its more practical to use a helper library.&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://arshaw.com/xdate/&quot;&gt;XDate javascript library&lt;/a&gt; by &lt;a href=&quot;https://github.com/arshaw&quot;&gt;Adam Shaw&lt;/a&gt; has been around since mid-2011 and is still under active development. It has fantastic documentation, a great API, formatting, tries to remain backwards-compatible and even supports localized strings.&lt;/p&gt;\n\n&lt;p&gt;Link to changing the locale strings: &lt;a href=&quot;https://gist.github.com/1221376&quot;&gt;https://gist.github.com/1221376&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Example code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; time = d.&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/.*?T(\\d+:\\d+:\\d+).*/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$1&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&quot;13:45:20&quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;The library &lt;a href=&quot;http://sugarjs.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;sugar.js&lt;/a&gt; has some great functionality for working with dates in JavaScript. And it is very well &lt;a href=&quot;http://sugarjs.com/dates&quot; rel=&quot;nofollow noreferrer&quot;&gt;documented&lt;/a&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Sugar gives the Date class much love starting with the Date.create\n  method which can understand dates in just about any format in 15 major\n  languages, including relative formats like &quot;1 hour ago&quot;. Dates can\n  also be output in any format or language using an easy to understand\n  syntax, with shortcuts to commonly used date formats. Complex date\n  comparison is also possible with methods like is, which understand any\n  format and apply built in precision.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;A few examples:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;July 4, 1776&apos;&lt;/span&gt;)  -&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;July&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1776&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;446806800000&lt;/span&gt;)   -&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;November&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1955&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1776&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)      -&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;July&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1776&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;17760704&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;ja&apos;&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;July&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1776&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;utc&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;July 4, 1776&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;en&apos;&lt;/span&gt;)  -&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;July&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1776&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;{Weekday} {d} {Month}, {yyyy}&apos;&lt;/span&gt;)    -&amp;gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Monday&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;July&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2003&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;{hh}:{mm}&apos;&lt;/span&gt;)                        -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;{12hr}:{mm}{tt}&apos;&lt;/span&gt;)                  -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;:57pm\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ISO8601_DATETIME&lt;/span&gt;)              -&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;07&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;55.&lt;/span&gt;528Z\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;is&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;the 7th of June&apos;&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;create&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;addMonths&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;); -&amp;gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sunday, June 15, 2014 13:39&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Just another option, which I wrote:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://depressedpress.com/javascript-extensions/dp_dateextensions/&quot; rel=&quot;nofollow noreferrer&quot;&gt;DP_DateExtensions Library&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Not sure if it&apos;ll help, but I&apos;ve found it useful in several projects - looks like it&apos;ll do what you need.&lt;/p&gt;\n\n&lt;p&gt;Supports date/time formatting, date math (add/subtract date parts), date compare, date parsing, etc. It&apos;s liberally open sourced.&lt;/p&gt;\n\n&lt;p&gt;No reason to consider it if you&apos;re already using a framework (they&apos;re all capable), but if you just need to quickly add date manipulation to a project give it a chance.&lt;/p&gt;\n    ","\n&lt;p&gt;If you want to show only time with &lt;strong&gt;two&lt;/strong&gt; digits, this may helps you:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; now = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; cHour = now.&lt;span class=&quot;hljs-title function_&quot;&gt;getHours&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; cMinuts = now.&lt;span class=&quot;hljs-title function_&quot;&gt;getMinutes&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; cSeconds = now.&lt;span class=&quot;hljs-title function_&quot;&gt;getSeconds&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; outStr = (cHour &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? (&lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + cHour) : cHour) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt; + (cMinuts &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; ? (&lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + cMinuts) : cMinuts) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt; + (cSeconds &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt; + cSeconds : cSeconds);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;use this functions&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;toTimeString&lt;/span&gt;() and &lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleDateString&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;refer below link for more details\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot; rel=&quot;nofollow&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://www.javascriptsource.com/repository/javascripts/2009/03/880961/JS_Simple_Date_Format.zip&quot; rel=&quot;nofollow&quot;&gt;JsSimpleDateFormat&lt;/a&gt; is a library that can format the date object and parse the formatted string back to Date object. It uses the Java format (SimpleDateFormat class). The name of months and days can be localized.&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sdf = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JsSimpleDateFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EEEE, MMMM dd, yyyy&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; formattedString = sdf.&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;());\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dateObject = sdf.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Monday, June 29, 2009&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The answer is &quot;nowhere&quot; since the date formatting is proprietary functionality. I don&apos;t think the toString functions are intended to conform to a specific format. e.g. in the ECMAScript 5.1 spec (&lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf&quot; rel=&quot;nofollow&quot;&gt;http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf&lt;/a&gt;, 2/8/2013, page 173), the &lt;em&gt;toString&lt;/em&gt; function is documented as follows:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&quot;The contents of the String are implementation-dependent&quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Functions such as the samples below could be used to accomplish formatting fairly easily.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;pad&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;toPad, padWith&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(padWith) + &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(toPad)).&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; * padWith.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dateAsInputValue&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;toFormat&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!(toFormat &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; toFormat.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;pad&lt;/span&gt;(toFormat.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;() + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;00&quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;pad&lt;/span&gt;(toFormat.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;00&quot;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;timeAsInputValue&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;toFormat&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!(toFormat &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;        \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;pad&lt;/span&gt;(toFormat.&lt;span class=&quot;hljs-title function_&quot;&gt;getHours&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;00&quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;pad&lt;/span&gt;(toFormat.&lt;span class=&quot;hljs-title function_&quot;&gt;getMinutes&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;00&quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;pad&lt;/span&gt;(toFormat.&lt;span class=&quot;hljs-title function_&quot;&gt;getSeconds&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;00&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you don&apos;t need all the features that a library like &lt;a href=&quot;http://momentjs.com/&quot; rel=&quot;nofollow&quot;&gt;Moment.js&lt;/a&gt; provides, then you can use my port of &lt;a href=&quot;http://man7.org/linux/man-pages/man3/strftime.3.html&quot; rel=&quot;nofollow&quot;&gt;strftime&lt;/a&gt;. It&apos;s lightweight (1.35 KB vs. 57.9 KB minified compared to Moment.js 2.15.0) and provides most of the functionality of &lt;code&gt;strftime()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* Port of strftime(). Compatibility notes:\n *\n * %c - formatted string is slightly different\n * %D - not implemented (use &quot;%m/%d/%y&quot; or &quot;%d/%m/%y&quot;)\n * %e - space is not added\n * %E - not implemented\n * %h - not implemented (use &quot;%b&quot;)\n * %k - space is not added\n * %n - not implemented (use &quot;\\n&quot;)\n * %O - not implemented\n * %r - not implemented (use &quot;%I:%M:%S %p&quot;)\n * %R - not implemented (use &quot;%H:%M&quot;)\n * %t - not implemented (use &quot;\\t&quot;)\n * %T - not implemented (use &quot;%H:%M:%S&quot;)\n * %U - not implemented\n * %W - not implemented\n * %+ - not implemented\n * %% - not implemented (use &quot;%&quot;)\n *\n * strftime() reference:\n * http://man7.org/linux/man-pages/man3/strftime.3.html\n *\n * Day of year (%j) code based on Joe Orost&apos;s answer:\n * http://stackoverflow.com/questions/8619879/javascript-calculate-the-day-of-the-year-1-366\n *\n * Week number (%V) code based on Taco van den Broek&apos;s prototype:\n * http://techblog.procurios.nl/k/news/view/33796/14863/calculate-iso-8601-week-and-year-in-javascript.html\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;strftime&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;sFormat, date&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!(date &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;)) date = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nDay = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getDay&lt;/span&gt;(),\n    nDate = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getDate&lt;/span&gt;(),\n    nMonth = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMonth&lt;/span&gt;(),\n    nYear = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;(),\n    nHour = date.&lt;span class=&quot;hljs-title function_&quot;&gt;getHours&lt;/span&gt;(),\n    aDays = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Sunday&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Monday&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tuesday&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Wednesday&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Thursday&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Friday&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Saturday&apos;&lt;/span&gt;],\n    aMonths = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;January&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;February&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;March&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;April&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;May&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;June&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;July&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;August&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;September&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;October&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;November&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;December&apos;&lt;/span&gt;],\n    aDayCount = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;90&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;120&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;151&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;181&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;212&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;243&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;273&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;304&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;334&lt;/span&gt;],\n    isLeapYear = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (nYear&amp;amp;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;!==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; nYear%&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;!==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || year%&lt;span class=&quot;hljs-number&quot;&gt;400&lt;/span&gt;===&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    },\n    getThursday = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; target = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(date);\n      target.&lt;span class=&quot;hljs-title function_&quot;&gt;setDate&lt;/span&gt;(nDate - ((nDay+&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;)%&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; target;\n    },\n    zeroPad = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;nNum, nPad&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + (&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, nPad) + nNum)).&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    };\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sFormat.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/%[a-z]/gi&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;sMatch&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%a&apos;&lt;/span&gt;: aDays[nDay].&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%A&apos;&lt;/span&gt;: aDays[nDay],\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%b&apos;&lt;/span&gt;: aMonths[nMonth].&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%B&apos;&lt;/span&gt;: aMonths[nMonth],\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%c&apos;&lt;/span&gt;: date.&lt;span class=&quot;hljs-title function_&quot;&gt;toUTCString&lt;/span&gt;(),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%C&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(nYear/&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%d&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(nDate, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%e&apos;&lt;/span&gt;: nDate,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%F&apos;&lt;/span&gt;: date.&lt;span class=&quot;hljs-title function_&quot;&gt;toISOString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%G&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;getThursday&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;(),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%g&apos;&lt;/span&gt;: (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;getThursday&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getFullYear&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%H&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(nHour, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%I&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;((nHour+&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;)%&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%j&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(aDayCount[nMonth] + nDate + ((nMonth&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-title function_&quot;&gt;isLeapYear&lt;/span&gt;()) ? &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%k&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + nHour,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%l&apos;&lt;/span&gt;: (nHour+&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;)%&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%m&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(nMonth + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%M&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(date.&lt;span class=&quot;hljs-title function_&quot;&gt;getMinutes&lt;/span&gt;(), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%p&apos;&lt;/span&gt;: (nHour&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;) ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;AM&apos;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&apos;PM&apos;&lt;/span&gt;,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%P&apos;&lt;/span&gt;: (nHour&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;) ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;am&apos;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&apos;pm&apos;&lt;/span&gt;,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%s&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;round&lt;/span&gt;(date.&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;()/&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%S&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(date.&lt;span class=&quot;hljs-title function_&quot;&gt;getSeconds&lt;/span&gt;(), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%u&apos;&lt;/span&gt;: nDay || &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%V&apos;&lt;/span&gt;: (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n              &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; target = &lt;span class=&quot;hljs-title function_&quot;&gt;getThursday&lt;/span&gt;(),\n                n1stThu = target.&lt;span class=&quot;hljs-title function_&quot;&gt;valueOf&lt;/span&gt;();\n              target.&lt;span class=&quot;hljs-title function_&quot;&gt;setMonth&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n              &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nJan1 = target.&lt;span class=&quot;hljs-title function_&quot;&gt;getDay&lt;/span&gt;();\n              &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (nJan1!==&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) target.&lt;span class=&quot;hljs-title function_&quot;&gt;setMonth&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; + ((&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;-nJan1)+&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;)%&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;);\n              &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;zeroPad&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ceil&lt;/span&gt;((n1stThu-target)/&lt;span class=&quot;hljs-number&quot;&gt;604800000&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n            })(),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%w&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + nDay,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%x&apos;&lt;/span&gt;: date.&lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleDateString&lt;/span&gt;(),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%X&apos;&lt;/span&gt;: date.&lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleTimeString&lt;/span&gt;(),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%y&apos;&lt;/span&gt;: (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; + nYear).&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%Y&apos;&lt;/span&gt;: nYear,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%z&apos;&lt;/span&gt;: date.&lt;span class=&quot;hljs-title function_&quot;&gt;toTimeString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/.+GMT([+-]\\d+).+/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$1&apos;&lt;/span&gt;),\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;%Z&apos;&lt;/span&gt;: date.&lt;span class=&quot;hljs-title function_&quot;&gt;toTimeString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/.+\\((.+?)\\)$/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$1&apos;&lt;/span&gt;)\n    }[sMatch] || sMatch;\n  });\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Sample usage:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;strftime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%F&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns &quot;2016-09-15&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;strftime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%A, %B %e, %Y&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns &quot;Thursday, September 15, 2016&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// You can optionally pass it a Date object...&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;strftime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%x %X&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1/1/2016&apos;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Returns &quot;1/1/2016 12:00:00 AM&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The latest code is available here: &lt;a href=&quot;https://github.com/thdoan/strftime&quot; rel=&quot;nofollow&quot;&gt;https://github.com/thdoan/strftime&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;the lazy solution is to use &lt;code&gt;Date.toLocaleString&lt;/code&gt; with the right region code&lt;/p&gt;\n&lt;p&gt;to get a list of matching regions you can run&lt;/p&gt;\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#!/bin/bash&lt;/span&gt;\n\n[ -f bcp47.json ] || \\\nwget https://raw.githubusercontent.com/pculture/bcp47-json/master/bcp47.json\n\ngrep &lt;span class=&quot;hljs-string&quot;&gt;&apos;tag&quot; : &apos;&lt;/span&gt; bcp47.json | &lt;span class=&quot;hljs-built_in&quot;&gt;cut&lt;/span&gt; -d&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt; -f4 &amp;gt;codes.txt\n\njs=$(&lt;span class=&quot;hljs-built_in&quot;&gt;cat&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;EOF&apos;&lt;/span&gt;\nconst fs = require(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fs&apos;&lt;/span&gt;);\nconst d = new Date(2020, 11, 12, 20, 00, 00);\nfs.readFileSync(&lt;span class=&quot;hljs-string&quot;&gt;&apos;codes.txt&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;utf8&apos;&lt;/span&gt;)\n.&lt;span class=&quot;hljs-built_in&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;)\n.forEach(code =&amp;gt; {\n  try {\n    console.log(code+&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;+d.toLocaleString(code))\n  }\n  catch (e) { console.log(code+&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;+e.message) }\n});\nEOF\n)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# print THE LIST of civilized countries&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-variable&quot;&gt;$js&lt;/span&gt;&quot;&lt;/span&gt; | node - | grep &lt;span class=&quot;hljs-string&quot;&gt;&apos;2020-12-12 20:00:00&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and here is .... THE LIST&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;af ce eo gv ha ku kw ky lt mg rw se sn sv xh zu \nksh mgo sah wae &lt;span class=&quot;hljs-variable constant_&quot;&gt;AF&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;KW&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;KY&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;LT&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;MG&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;RW&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;SE&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;SN&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;SV&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;sample use:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;toLocaleString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;af&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; &apos;2020-12-21 11:50:15&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;: )&lt;/p&gt;\n&lt;p&gt;(note. this MAY not be portable.)&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://date-fns.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;date-fns&lt;/a&gt; is the latest and greatest contender (better than momentjs at this moment). Some of the advantages are&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Modular&lt;/li&gt;\n&lt;li&gt;Immutable&lt;/li&gt;\n&lt;li&gt;I18n&lt;/li&gt;\n&lt;li&gt;Tree-shaking&lt;/li&gt;\n&lt;li&gt;Typescript support&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Refer here for documentation&lt;/p&gt;\n&lt;p&gt;And you&apos;d do something like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; { format, formatDistance, formatRelative, subDays } &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;date-fns&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;Today is a&apos; eeee&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; &quot;Today is a Tuesday&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;formatDistance&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;subDays&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(), { &lt;span class=&quot;hljs-attr&quot;&gt;addSuffix&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; })\n&lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; &quot;3 days ago&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;formatRelative&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;subDays&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;())\n&lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; &quot;last Friday at 7:26 p.m.&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The correct way to format a date to return &quot;2012-12-29&quot; is with the script from &lt;em&gt;&lt;a href=&quot;http://blog.stevenlevithan.com/archives/date-time-format&quot; rel=&quot;nofollow&quot;&gt;JavaScript Date Format&lt;/a&gt;&lt;/em&gt;: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; d1.&lt;span class=&quot;hljs-title function_&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dd-m-yy&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This code does NOT work:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\nd1.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;yyyy-MM-dd&apos;&lt;/span&gt;);      \n&lt;/code&gt;&lt;/pre&gt;\n    "]},"page":"87","randomQuestions":[{"title":"How do I profile a Python script?","slug":"how-do-i-profile-a-python-script-1657388346692"},{"title":"How to close/hide the Android soft keyboard programmatically?","slug":"how-to-closehide-the-android-soft-keyboard-programmatically-1657388217420"},{"title":"How to print a number with commas as thousands separators in JavaScript","slug":"how-to-print-a-number-with-commas-as-thousands-separators-in-javascript-1657387777379"},{"title":"What causes a java.lang.ArrayIndexOutOfBoundsException and how do I prevent it?","slug":"what-causes-a-java.lang.arrayindexoutofboundsexception-and-how-do-i-prevent-it-1657384370848"},{"title":"How to lazy load images in ListView in Android","slug":"how-to-lazy-load-images-in-listview-in-android-1657387332835"},{"title":"jQuery Ajax File Upload","slug":"jquery-ajax-file-upload-1657387368970"},{"title":"Align inline-block DIVs to top of container element","slug":"align-inline-block-divs-to-top-of-container-element-1657387489610"},{"title":"What is the JavaScript version of sleep()?","slug":"what-is-the-javascript-version-of-sleep()-1657387391406"},{"title":"Grouping functions (tapply, by, aggregate) and the *apply family","slug":"grouping-functions-(tapply-by-aggregate)-and-the-*apply-family-1657387844286"},{"title":"How to convert a factor to integer\\numeric without loss of information?","slug":"how-to-convert-a-factor-to-integernumeric-without-loss-of-information-1657387880273"},{"title":"Relative imports for the billionth time","slug":"relative-imports-for-the-billionth-time-1657387756383"},{"title":"Why do I get a segmentation fault when writing to a \"char *s\" initialized with a string literal, but not \"char s[]\"?","slug":"why-do-i-get-a-segmentation-fault-when-writing-to-a-\"char-*s\"-initialized-with-a-string-literal-but-not-\"char-s\"-1657385511046"},{"title":"How to calculate the difference between two dates using PHP?","slug":"how-to-calculate-the-difference-between-two-dates-using-php-1657387409560"},{"title":"How does the Java 'for each' loop work?","slug":"how-does-the-java-'for-each'-loop-work-1657388423749"},{"title":"Parameterize an SQL IN clause","slug":"parameterize-an-sql-in-clause-1657387536064"},{"title":"Reshaping data.frame from wide to long format","slug":"reshaping-data.frame-from-wide-to-long-format-1657384678522"},{"title":"How to create a MySQL hierarchical recursive query?","slug":"how-to-create-a-mysql-hierarchical-recursive-query-1657387662163"},{"title":"Are dictionaries ordered in Python 3.6+?","slug":"are-dictionaries-ordered-in-python-3.6+-1657387834234"},{"title":"PHP - Failed to open stream : No such file or directory","slug":"php-failed-to-open-stream-:-no-such-file-or-directory-1657387872896"},{"title":"Trouble with UTF-8 characters; what I see is not what I stored","slug":"trouble-with-utf-8-characters-what-i-see-is-not-what-i-stored-1657384817490"}]},"__N_SSG":true}