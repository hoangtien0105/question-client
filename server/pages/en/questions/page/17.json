{"pageProps":{"data":{"count":610,"rows":[{"id":530,"title":"Command not found error in Bash variable assignment","slug":"command-not-found-error-in-bash-variable-assignment-1657388326347","postType":"QUESTION","createdAt":"2022-07-09T17:38:46.000Z","updatedAt":"2022-07-09T17:38:46.000Z","tags":[{"id":2609,"name":"variable-assignment","slug":"variable-assignment","createdAt":"2022-07-09T17:38:46.000Z","updatedAt":"2022-07-09T17:38:46.000Z","Questions_Tags":{"questionId":530,"tagId":2609}}]},{"id":529,"title":"Using LIMIT within GROUP BY to get N results per group?","slug":"using-limit-within-group-by-to-get-n-results-per-group-1657388324167","postType":"QUESTION","createdAt":"2022-07-09T17:38:44.000Z","updatedAt":"2022-07-09T17:38:44.000Z","tags":[{"id":2604,"name":"ranking","slug":"ranking","createdAt":"2022-07-09T17:38:44.000Z","updatedAt":"2022-07-09T17:38:44.000Z","Questions_Tags":{"questionId":529,"tagId":2604}}]},{"id":528,"title":"What is a StackOverflowError?","slug":"what-is-a-stackoverflowerror-1657388319634","postType":"QUESTION","createdAt":"2022-07-09T17:38:39.000Z","updatedAt":"2022-07-09T17:38:39.000Z","tags":[{"id":2597,"name":"memory-leaks","slug":"memory-leaks","createdAt":"2022-07-09T17:38:39.000Z","updatedAt":"2022-07-09T17:38:39.000Z","Questions_Tags":{"questionId":528,"tagId":2597}},{"id":2598,"name":"out-of-memory","slug":"out-of-memory","createdAt":"2022-07-09T17:38:39.000Z","updatedAt":"2022-07-09T17:38:39.000Z","Questions_Tags":{"questionId":528,"tagId":2598}},{"id":2599,"name":"stack-overflow","slug":"stack-overflow","createdAt":"2022-07-09T17:38:39.000Z","updatedAt":"2022-07-09T17:38:39.000Z","Questions_Tags":{"questionId":528,"tagId":2599}}]},{"id":527,"title":"How can I tell if a DOM element is visible in the current viewport?","slug":"how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport-1657388316510","postType":"QUESTION","createdAt":"2022-07-09T17:38:36.000Z","updatedAt":"2022-07-09T17:38:36.000Z","tags":[{"id":2592,"name":"firefox","slug":"firefox","createdAt":"2022-07-09T17:38:36.000Z","updatedAt":"2022-07-09T17:38:36.000Z","Questions_Tags":{"questionId":527,"tagId":2592}}]},{"id":526,"title":"How to generate a self-signed SSL certificate using OpenSSL? [closed]","slug":"how-to-generate-a-self-signed-ssl-certificate-using-openssl-closed-1657388298626","postType":"QUESTION","createdAt":"2022-07-09T17:38:18.000Z","updatedAt":"2022-07-09T17:38:18.000Z","tags":[{"id":2585,"name":"ssl","slug":"ssl","createdAt":"2022-07-09T17:38:18.000Z","updatedAt":"2022-07-09T17:38:18.000Z","Questions_Tags":{"questionId":526,"tagId":2585}},{"id":2586,"name":"openssl","slug":"openssl","createdAt":"2022-07-09T17:38:18.000Z","updatedAt":"2022-07-09T17:38:18.000Z","Questions_Tags":{"questionId":526,"tagId":2586}},{"id":2587,"name":"certificate","slug":"certificate","createdAt":"2022-07-09T17:38:18.000Z","updatedAt":"2022-07-09T17:38:18.000Z","Questions_Tags":{"questionId":526,"tagId":2587}},{"id":2588,"name":"ssl-certificate","slug":"ssl-certificate","createdAt":"2022-07-09T17:38:18.000Z","updatedAt":"2022-07-09T17:38:18.000Z","Questions_Tags":{"questionId":526,"tagId":2588}},{"id":2589,"name":"x509certificate","slug":"x509certificate","createdAt":"2022-07-09T17:38:18.000Z","updatedAt":"2022-07-09T17:38:18.000Z","Questions_Tags":{"questionId":526,"tagId":2589}}]}]},"answers":{"526":["\n&lt;p&gt;You can do that in one command:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 365\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can also add &lt;code&gt;-nodes&lt;/code&gt; (short for &quot;no DES&quot;) if you don&apos;t want to protect your private key with a passphrase. Otherwise it will prompt you for &quot;at least a 4 character&quot; password.&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;days&lt;/code&gt; parameter (365) you can replace with any number to affect the expiration date. It will then prompt you for things like &quot;Country Name&quot;, but you can just hit &lt;kbd&gt;Enter&lt;/kbd&gt; and accept the defaults.&lt;/p&gt;\n&lt;p&gt;Add &lt;code&gt;-subj &apos;/CN=localhost&apos;&lt;/code&gt; to suppress questions about the contents of the certificate (replace &lt;code&gt;localhost&lt;/code&gt; with your desired domain).&lt;/p&gt;\n&lt;p&gt;Self-signed certificates are not validated with any third party unless you import them to the browsers previously. If you need more security, you should use a certificate signed by a &lt;a href=&quot;https://en.wikipedia.org/wiki/Certificate_authority&quot; rel=&quot;nofollow noreferrer&quot;&gt;certificate authority&lt;/a&gt; (CA).&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n&lt;p&gt;Am I missing something? Is this the correct way to build a self-signed certificate?&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;It&apos;s easy to create a self-signed certificate. You just use the &lt;code&gt;openssl req&lt;/code&gt; command. It can be tricky to create one that can be consumed by the largest selection of clients, like browsers and command line tools.&lt;/p&gt;\n&lt;p&gt;It&apos;s difficult because the browsers have their own set of requirements, and they are more restrictive than the &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Engineering_Task_Force&quot; rel=&quot;noreferrer&quot;&gt;IETF&lt;/a&gt;. The requirements used by browsers are documented at the &lt;a href=&quot;https://cabforum.org/&quot; rel=&quot;noreferrer&quot;&gt;CA/Browser Forums&lt;/a&gt; (see references below). The restrictions arise in two key areas: (1) trust anchors, and (2) DNS names.&lt;/p&gt;\n&lt;p&gt;Modern browsers (like the warez we&apos;re using in 2014/2015) want a certificate that chains back to a trust anchor, and they want DNS names to be presented in particular ways in the certificate. And browsers are actively moving against self-signed server certificates.&lt;/p&gt;\n&lt;p&gt;Some browsers don&apos;t exactly make it easy to import a self-signed server certificate. In fact, you can&apos;t with some browsers, like Android&apos;s browser. So the complete solution is to become your own authority.&lt;/p&gt;\n&lt;p&gt;In the absence of becoming your own authority, you have to get the DNS names right to give the certificate the greatest chance of success. But I would encourage you to become your own authority. It&apos;s easy to become your own authority, and it will sidestep all the trust issues (who better to trust than yourself?).&lt;/p&gt;\n&lt;hr&gt;\n&lt;blockquote&gt;\n&lt;p&gt;This is probably not the site you are looking for!&lt;br&gt;\nThe site&apos;s security certificate is not trusted!&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;This is because browsers use a predefined list of trust anchors to validate server certificates. A self-signed certificate does not chain back to a trusted anchor.&lt;/p&gt;\n&lt;p&gt;The best way to avoid this is:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Create your own authority (i.e., become a &lt;a href=&quot;https://en.wikipedia.org/wiki/Certificate_authority&quot; rel=&quot;noreferrer&quot;&gt;CA&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;Create a certificate signing request (CSR) for the server&lt;/li&gt;\n&lt;li&gt;Sign the server&apos;s CSR with your CA key&lt;/li&gt;\n&lt;li&gt;Install the server certificate on the server&lt;/li&gt;\n&lt;li&gt;Install the CA certificate on the client&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Step 1 - &lt;em&gt;Create your own authority&lt;/em&gt; just means to create a self-signed certificate with &lt;code&gt;CA: true&lt;/code&gt; and proper key usage. That means the &lt;em&gt;Subject&lt;/em&gt; and &lt;em&gt;Issuer&lt;/em&gt; are the same entity, CA is set to true in &lt;em&gt;Basic Constraints&lt;/em&gt; (it should also be marked as critical), key usage is &lt;code&gt;keyCertSign&lt;/code&gt; and &lt;code&gt;crlSign&lt;/code&gt; (if you are using CRLs), and the &lt;em&gt;Subject Key Identifier&lt;/em&gt; (SKI) is the same as the &lt;em&gt;Authority Key Identifier&lt;/em&gt; (AKI).&lt;/p&gt;\n&lt;p&gt;To become your own certificate authority, see *&lt;a href=&quot;https://stackoverflow.com/questions/21297139/how-do-you-sign-a-certificate-signing-request-with-your-certification-authority/21340898#21340898&quot;&gt;How do you sign a certificate signing request with your certification authority?&lt;/a&gt; on Stack Overflow. Then, import your CA into the Trust Store used by the browser.&lt;/p&gt;\n&lt;p&gt;Steps 2 - 4 are roughly what you do now for a public facing server when you enlist the services of a CA like &lt;a href=&quot;https://www.startssl.com/&quot; rel=&quot;noreferrer&quot;&gt;Startcom&lt;/a&gt; or &lt;a href=&quot;https://www.cacert.org/&quot; rel=&quot;noreferrer&quot;&gt;CAcert&lt;/a&gt;. Steps 1 and 5 allows you to avoid the third-party authority, and act as your own authority (who better to trust than yourself?).&lt;/p&gt;\n&lt;p&gt;The next best way to avoid the browser warning is to trust the server&apos;s certificate. But some browsers, like Android&apos;s default browser, do not let you do it. So it will never work on the platform.&lt;/p&gt;\n&lt;p&gt;The issue of browsers (and other similar user agents) &lt;em&gt;not&lt;/em&gt; trusting self-signed certificates is going to be a big problem in the Internet of Things (IoT). For example, what is going to happen when you connect to your thermostat or refrigerator to program it? The answer is, nothing good as far as the user experience is concerned.&lt;/p&gt;\n&lt;p&gt;The W3C&apos;s WebAppSec Working Group is starting to look at the issue.  See, for example, &lt;a href=&quot;http://lists.w3.org/Archives/Public/public-webappsec/2014Dec/0203.html&quot; rel=&quot;noreferrer&quot;&gt;Proposal: Marking HTTP As Non-Secure&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;blockquote&gt;\n&lt;p&gt;How to create a self-signed certificate with OpenSSL&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The commands below and the configuration file create a self-signed certificate (it also shows you how to create a signing request). They differ from other answers in one respect: the DNS names used for the self signed certificate are in the &lt;em&gt;Subject Alternate Name (SAN)&lt;/em&gt;, and not the &lt;em&gt;Common Name (CN)&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;The DNS names are placed in the SAN through the configuration file with the line &lt;code&gt;subjectAltName = @alternate_names&lt;/code&gt; (there&apos;s no way to do it through the command line). Then there&apos;s an &lt;code&gt;alternate_names&lt;/code&gt; section in the configuration file (you should tune this to suit your taste):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;[ alternate_names ]\n\nDNS.1       = example.com\nDNS.2       = www.example.com\nDNS.3       = mail.example.com\nDNS.4       = ftp.example.com\n\n# Add these if you need them. But usually you don&apos;t want them or\n#   need them in production. You may need them for development.\n# DNS.5       = localhost\n# DNS.6       = localhost.localdomain\n# IP.1        = 127.0.0.1\n# IP.2        = ::1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It&apos;s important to put DNS name in the SAN and not the CN, because &lt;em&gt;both&lt;/em&gt; the IETF and the CA/Browser Forums specify the practice. They also specify that DNS names in the CN are deprecated (but not prohibited). &lt;em&gt;If&lt;/em&gt; you put a DNS name in the CN, then it &lt;em&gt;must&lt;/em&gt; be included in the SAN under the CA/B policies. So you can&apos;t avoid using the Subject Alternate Name.&lt;/p&gt;\n&lt;p&gt;If you don&apos;t do put DNS names in the SAN, then the certificate will fail to validate under a browser and other user agents which follow the CA/Browser Forum guidelines.&lt;/p&gt;\n&lt;p&gt;Related: browsers follow the CA/Browser Forum policies; and not the IETF policies. That&apos;s one of the reasons a certificate created with OpenSSL (which generally follows the IETF) sometimes does not validate under a browser (browsers follow the CA/B). They are different standards, they have different issuing policies and different validation requirements.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Create a self signed certificate&lt;/strong&gt; (notice the addition of &lt;code&gt;-x509&lt;/code&gt; option):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -config example-com.conf -new -x509 -sha256 -newkey rsa:2048 -nodes \\\n    -keyout example-com.key.pem -days 365 -out example-com.cert.pem\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Create a signing request&lt;/strong&gt; (notice the lack of &lt;code&gt;-x509&lt;/code&gt; option):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -config example-com.conf -new -sha256 -newkey rsa:2048 -nodes \\\n    -keyout example-com.key.pem -days 365 -out example-com.req.pem\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Print a self-signed certificate&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl x509 -in example-com.cert.pem -text -noout\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Print a signing request&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -in example-com.req.pem -text -noout\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Configuration file (passed via &lt;code&gt;-config&lt;/code&gt; option)&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;[ req ]\ndefault_bits        = 2048\ndefault_keyfile     = server-key.pem\ndistinguished_name  = subject\nreq_extensions      = req_ext\nx509_extensions     = x509_ext\nstring_mask         = utf8only\n\n# The Subject DN can be formed using X501 or RFC 4514 (see RFC 4519 for a description).\n#   Its sort of a mashup. For example, RFC 4514 does not provide emailAddress.\n[ subject ]\ncountryName         = Country Name (2 letter code)\ncountryName_default     = US\n\nstateOrProvinceName     = State or Province Name (full name)\nstateOrProvinceName_default = NY\n\nlocalityName            = Locality Name (eg, city)\nlocalityName_default        = New York\n\norganizationName         = Organization Name (eg, company)\norganizationName_default    = Example, LLC\n\n# Use a friendly name here because it&apos;s presented to the user. The server&apos;s DNS\n#   names are placed in Subject Alternate Names. Plus, DNS names here is deprecated\n#   by both IETF and CA/Browser Forums. If you place a DNS name here, then you\n#   must include the DNS name in the SAN too (otherwise, Chrome and others that\n#   strictly follow the CA/Browser Baseline Requirements will fail).\ncommonName          = Common Name (e.g. server FQDN or YOUR name)\ncommonName_default      = Example Company\n\nemailAddress            = Email Address\nemailAddress_default        = test@example.com\n\n# Section x509_ext is used when generating a self-signed certificate. I.e., openssl req -x509 ...\n[ x509_ext ]\n\nsubjectKeyIdentifier        = hash\nauthorityKeyIdentifier    = keyid,issuer\n\n# You only need digitalSignature below. *If* you don&apos;t allow\n#   RSA Key transport (i.e., you use ephemeral cipher suites), then\n#   omit keyEncipherment because that&apos;s key transport.\nbasicConstraints        = CA:FALSE\nkeyUsage            = digitalSignature, keyEncipherment\nsubjectAltName          = @alternate_names\nnsComment           = &quot;OpenSSL Generated Certificate&quot;\n\n# RFC 5280, Section 4.2.1.12 makes EKU optional\n#   CA/Browser Baseline Requirements, Appendix (B)(3)(G) makes me confused\n#   In either case, you probably only need serverAuth.\n# extendedKeyUsage    = serverAuth, clientAuth\n\n# Section req_ext is used when generating a certificate signing request. I.e., openssl req ...\n[ req_ext ]\n\nsubjectKeyIdentifier        = hash\n\nbasicConstraints        = CA:FALSE\nkeyUsage            = digitalSignature, keyEncipherment\nsubjectAltName          = @alternate_names\nnsComment           = &quot;OpenSSL Generated Certificate&quot;\n\n# RFC 5280, Section 4.2.1.12 makes EKU optional\n#   CA/Browser Baseline Requirements, Appendix (B)(3)(G) makes me confused\n#   In either case, you probably only need serverAuth.\n# extendedKeyUsage    = serverAuth, clientAuth\n\n[ alternate_names ]\n\nDNS.1       = example.com\nDNS.2       = www.example.com\nDNS.3       = mail.example.com\nDNS.4       = ftp.example.com\n\n# Add these if you need them. But usually you don&apos;t want them or\n#   need them in production. You may need them for development.\n# DNS.5       = localhost\n# DNS.6       = localhost.localdomain\n# DNS.7       = 127.0.0.1\n\n# IPv6 localhost\n# DNS.8     = ::1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You may need to do the following for Chrome. Otherwise &lt;a href=&quot;https://superuser.com/questions/1202498/create-self-signed-certificate-with-subjectaltname-to-fix-missing-subjectaltnam/1202506#1202506&quot;&gt;Chrome may complain a &lt;em&gt;Common Name&lt;/em&gt; is invalid (&lt;code&gt;ERR_CERT_COMMON_NAME_INVALID&lt;/code&gt;)&lt;/a&gt;. I&apos;m not sure what the relationship is between an IP address in the SAN and a CN in this instance.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# IPv4 localhost\n# IP.1       = 127.0.0.1\n\n# IPv6 localhost\n# IP.2     = ::1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;There are other rules concerning the handling of DNS names in X.509/PKIX certificates. Refer to these documents for the rules:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;RFC 5280, &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc5280&quot; rel=&quot;noreferrer&quot;&gt;Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;RFC 6125, &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc6125&quot; rel=&quot;noreferrer&quot;&gt;Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;RFC 6797, Appendix A, &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc6797&quot; rel=&quot;noreferrer&quot;&gt;HTTP Strict Transport Security (HSTS)&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;RFC 7469, &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7469&quot; rel=&quot;noreferrer&quot;&gt;Public Key Pinning Extension for HTTP&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;CA/Browser Forum &lt;a href=&quot;https://cabforum.org/baseline-requirements-documents/&quot; rel=&quot;noreferrer&quot;&gt;Baseline Requirements&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;CA/Browser Forum &lt;a href=&quot;https://cabforum.org/extended-validation-2/&quot; rel=&quot;noreferrer&quot;&gt;Extended Validation Guidelines&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;RFC 6797 and RFC 7469 are listed, because they are more restrictive than the other RFCs and CA/B documents. RFCs 6797 and 7469 &lt;em&gt;do not&lt;/em&gt; allow an IP address, either.&lt;/p&gt;\n    ","\n&lt;p&gt;As of 2022 with OpenSSL  1.1.1, the following command serves all your needs, including &lt;a href=&quot;https://www.openssl.org/docs/manmaster/man5/x509v3_config.html#Subject-Alternative-Name&quot; rel=&quot;noreferrer&quot;&gt;Subject Alternate Name (SAN)&lt;/a&gt;:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes \\\n  -keyout example.key -out example.crt -subj &quot;/CN=example.com&quot; \\\n  -addext &quot;subjectAltName=DNS:example.com,DNS:www.example.net,IP:10.0.0.1&quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;On old systems with OpenSSL  1.1.0, such as Debian  9 or CentOS  7, a longer version of this command needs to be used:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes \\\n  -keyout example.key -out example.crt -extensions san -config \\\n  &amp;lt;(echo &quot;[req]&quot;; \n    echo distinguished_name=req; \n    echo &quot;[san]&quot;; \n    echo subjectAltName=DNS:example.com,DNS:www.example.net,IP:10.0.0.1\n    ) \\\n  -subj &quot;/CN=example.com&quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Either command creates a certificate that is&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;valid for the (sub)domains &lt;code&gt;example.com&lt;/code&gt; and &lt;code&gt;www.example.net&lt;/code&gt; (SAN),&lt;/li&gt;\n&lt;li&gt;also valid for the IP address &lt;code&gt;10.0.0.1&lt;/code&gt; (SAN),&lt;/li&gt;\n&lt;li&gt;relatively strong (as of 2022) and&lt;/li&gt;\n&lt;li&gt;valid for &lt;code&gt;3650&lt;/code&gt; days (~10 years).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The following files are generated:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Private key: &lt;code&gt;example.key&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Certificate: &lt;code&gt;example.crt&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;All information is provided at the command line. There is &lt;strong&gt;no interactive input&lt;/strong&gt; that annoys you. There are &lt;strong&gt;no config files&lt;/strong&gt; you have to mess around with. All necessary steps are executed by a &lt;strong&gt;single OpenSSL invocation&lt;/strong&gt;: from private key generation up to the self-signed certificate.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h3&gt;Remark #1: Crypto parameters&lt;/h3&gt;\n&lt;p&gt;Since the certificate is self-signed and needs to be accepted by users manually, it doesn&apos;t make sense to use a short expiration or weak cryptography.&lt;/p&gt;\n&lt;p&gt;In the future, you might want to use more than &lt;code&gt;4096&lt;/code&gt; bits for the RSA key and a hash algorithm stronger than &lt;code&gt;sha256&lt;/code&gt;, but as of 2022 these are sane values. They are sufficiently strong while being supported by all modern browsers.&lt;/p&gt;\n&lt;h3&gt;Remark #2: Parameter &quot;&lt;code&gt;-nodes&lt;/code&gt;&quot;&lt;/h3&gt;\n&lt;p&gt;Theoretically you could leave out the &lt;code&gt;-nodes&lt;/code&gt; parameter (which means &quot;no DES encryption&quot;), in which case &lt;code&gt;example.key&lt;/code&gt; would be encrypted with a password. However, this is almost never useful for a server installation, because you would either have to store the password on the server as well, or you&apos;d have to enter it manually on each reboot.&lt;/p&gt;\n&lt;h3&gt;Remark #3: See also&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://security.stackexchange.com/a/198409/133603&quot;&gt;Provide subjectAltName to openssl directly on command line&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/a/333325/20407&quot;&gt;How to add multiple email addresses to an SSL certificate via the command line?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/34386471/19163&quot;&gt;More information about MSYS_NO_PATHCONV&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Here are the options described in &lt;a href=&quot;https://stackoverflow.com/a/10176685/456814&quot;&gt;@diegows&apos;s answer&lt;/a&gt;, described in more detail, from &lt;a href=&quot;https://www.openssl.org/docs/apps/req.html&quot; rel=&quot;noreferrer&quot;&gt;the documentation&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days XXX\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n&lt;pre&gt;&lt;code&gt;req\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;PKCS#10 certificate request and certificate generating utility.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-x509\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;this option outputs a self signed certificate instead of a certificate request.\n  This is typically used to generate a test certificate or a self signed root CA.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-newkey arg\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;this option creates a new certificate request and a new private key. The argument\n  takes one of several forms. &lt;strong&gt;rsa:nbits&lt;/strong&gt;, where &lt;strong&gt;nbits&lt;/strong&gt; is the number of bits,\n  generates an RSA key &lt;strong&gt;nbits&lt;/strong&gt; in size.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-keyout filename\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;this gives the filename to write the newly created private key to.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-out filename\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;This specifies the output filename to write to or standard output by default.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-days n\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;when the &lt;strong&gt;-x509&lt;/strong&gt; option is being used this specifies the number of days to certify\n  the certificate for. The default is 30 days.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;-nodes\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;if this option is specified then if a private key is created it will not be encrypted.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The documentation is actually more detailed than the above; I just summarized it here.&lt;/p&gt;\n    ","\n&lt;p&gt;I can&apos;t comment, so I will put this as a separate answer. I found a few issues with the accepted one-liner answer:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The one-liner includes a passphrase in the key.&lt;/li&gt;\n&lt;li&gt;The one-liner uses SHA-1 which in many browsers throws warnings in console.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Here is a simplified version that removes the passphrase, ups the security to suppress warnings and includes a suggestion in comments to pass in -subj to remove the full question list:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl genrsa -out server.key 2048\nopenssl rsa -in server.key -out server.key\nopenssl req -sha256 -new -key server.key -out server.csr -subj &apos;/CN=localhost&apos;\nopenssl x509 -req -sha256 -days 365 -in server.csr -signkey server.key -out server.crt\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Replace &apos;localhost&apos; with whatever domain you require.  You will need to run the first two commands one by one as OpenSSL will prompt for a passphrase.&lt;/p&gt;\n\n&lt;p&gt;To combine the two into a .pem file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cat server.crt server.key &amp;gt; cert.pem\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Modern browsers now throw a security error for otherwise well-formed self-signed certificates if they are missing a SAN (Subject Alternate Name). &lt;strong&gt;&lt;em&gt;OpenSSL does not provide a command-line way to specify this&lt;/em&gt;&lt;/strong&gt;, so many developers&apos; tutorials and bookmarks are suddenly outdated.&lt;/p&gt;\n\n&lt;p&gt;The quickest way to get running again is a short, stand-alone conf file:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Create an OpenSSL config file (example: &lt;code&gt;req.cnf&lt;/code&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[req]\ndistinguished_name = req_distinguished_name\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\nC = US\nST = VA\nL = SomeCity\nO = MyCompany\nOU = MyDivision\nCN = www.company.com\n[v3_req]\nkeyUsage = critical, digitalSignature, keyAgreement\nextendedKeyUsage = serverAuth\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = www.company.com\nDNS.2 = company.com\nDNS.3 = company.net\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Create the certificate referencing this config file&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -nodes -days 730 -newkey rsa:2048 \\\n -keyout cert.key -out cert.pem -config req.cnf -sha256\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;em&gt;Example config from &lt;a href=&quot;https://support.citrix.com/article/CTX135602_&quot; rel=&quot;noreferrer&quot;&gt;https://support.citrix.com/article/CTX135602&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I would recommend to add the &lt;strong&gt;-sha256&lt;/strong&gt; parameter, to use the SHA-2 hash algorithm, because major browsers are considering to show &quot;SHA-1 certificates&quot; as not secure.&lt;/p&gt;\n\n&lt;p&gt;The same command line from the accepted answer - @diegows with added -sha256&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;openssl req -x509 &lt;strong&gt;-sha256&lt;/strong&gt; -newkey rsa:2048 -keyout key.pem -out cert.pem -days XXX&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;More information in &lt;a href=&quot;http://googleonlinesecurity.blogspot.com/2014/09/gradually-sunsetting-sha-1.html&quot; rel=&quot;noreferrer&quot;&gt;Google Security blog&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update May 2018.&lt;/strong&gt; As many noted in the comments that using SHA-2 does not add any security to a self-signed certificate. But I still recommend using it as a good habit of not using outdated / insecure cryptographic hash functions. Full explanation is available in &lt;em&gt;&lt;a href=&quot;https://security.stackexchange.com/questions/91913/why-is-it-fine-for-certificates-above-the-end-entity-certificate-to-be-sha1-base&quot;&gt;Why is it fine for certificates above the end-entity certificate to be SHA-1 based?&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I can`t comment so I add a separate answer.\nI tried to create a self-signed certificate for NGINX and it was easy, but when I wanted to add it to Chrome white list I had a problem. And my solution was to create a Root certificate and signed a child certificate by it.&lt;/p&gt;\n&lt;p&gt;So step by step.\nCreate file &lt;strong&gt;config_ssl_ca.cnf&lt;/strong&gt;\nNotice, config file has an option &lt;strong&gt;basicConstraints=CA:true&lt;/strong&gt; which means that this certificate is supposed to be root.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;This is a good practice, because you create it once and can reuse.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre&gt;&lt;code&gt;[ req ]\ndefault_bits = 2048\n\nprompt = no\ndistinguished_name=req_distinguished_name\nreq_extensions = v3_req\n\n[ req_distinguished_name ]\ncountryName=UA\nstateOrProvinceName=root region\nlocalityName=root city\norganizationName=Market(localhost)\norganizationalUnitName=roote department\ncommonName=market.localhost\nemailAddress=root_email@root.localhost\n\n[ alternate_names ]\nDNS.1        = market.localhost\nDNS.2        = www.market.localhost\nDNS.3        = mail.market.localhost\nDNS.4        = ftp.market.localhost\nDNS.5        = *.market.localhost\n\n[ v3_req ]\nkeyUsage=digitalSignature\nbasicConstraints=CA:true\nsubjectKeyIdentifier = hash\nsubjectAltName = @alternate_names\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Next config file for your child certificate will be call &lt;strong&gt;config_ssl.cnf&lt;/strong&gt;.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;[ req ]\ndefault_bits = 2048\n\nprompt = no\ndistinguished_name=req_distinguished_name\nreq_extensions = v3_req\n\n[ req_distinguished_name ]\ncountryName=UA\nstateOrProvinceName=Kyiv region\nlocalityName=Kyiv\norganizationName=market place\norganizationalUnitName=market place department\ncommonName=market.localhost\nemailAddress=email@market.localhost\n\n[ alternate_names ]\nDNS.1        = market.localhost\nDNS.2        = www.market.localhost\nDNS.3        = mail.market.localhost\nDNS.4        = ftp.market.localhost\nDNS.5        = *.market.localhost\n\n[ v3_req ]\nkeyUsage=digitalSignature\nbasicConstraints=CA:false\nsubjectAltName = @alternate_names\nsubjectKeyIdentifier = hash\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The first step - create Root key and certificate&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl genrsa -out ca.key 2048\nopenssl req -new -x509 -key ca.key -out ca.crt -days 365 -config config_ssl_ca.cnf\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The second step creates child key and file CSR - Certificate Signing Request. Because the idea is to sign the child certificate by root and get a correct certificate&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl genrsa -out market.key 2048\nopenssl req -new -sha256 -key market.key -config config_ssl.cnf -out market.csr\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Open Linux terminal and do this command&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;echo 00 &amp;gt; ca.srl\ntouch index.txt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;strong&gt;ca.srl&lt;/strong&gt; text file containing the next serial number to use in hex.\nMandatory.  This file must be present and contain a valid serial number.&lt;/p&gt;\n&lt;p&gt;Last Step, create one more config file and call it &lt;strong&gt;config_ca.cnf&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;# we use &apos;ca&apos; as the default section because we&apos;re usign the ca command\n[ ca ]\ndefault_ca = my_ca\n\n[ my_ca ]\n#  a text file containing the next serial number to use in hex. Mandatory.\n#  This file must be present and contain a valid serial number.\nserial = ./ca.srl\n\n# the text database file to use. Mandatory. This file must be present though\n# initially it will be empty.\ndatabase = ./index.txt\n\n# specifies the directory where new certificates will be placed. Mandatory.\nnew_certs_dir = ./\n\n# the file containing the CA certificate. Mandatory\ncertificate = ./ca.crt\n\n# the file contaning the CA private key. Mandatory\nprivate_key = ./ca.key\n\n# the message digest algorithm. Remember to not use MD5\ndefault_md = sha256\n\n# for how many days will the signed certificate be valid\ndefault_days = 365\n\n# a section with a set of variables corresponding to DN fields\npolicy = my_policy\n\n# MOST IMPORTANT PART OF THIS CONFIG\ncopy_extensions = copy\n\n[ my_policy ]\n# if the value is &quot;match&quot; then the field value must match the same field in the\n# CA certificate. If the value is &quot;supplied&quot; then it must be present.\n# Optional means it may be present. Any fields not mentioned are silently\n# deleted.\ncountryName = match\nstateOrProvinceName = supplied\norganizationName = supplied\ncommonName = market.localhost\norganizationalUnitName = optional\ncommonName = supplied\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You may ask, why so difficult, why we must create one more config to sign child certificate by root. The answer is simple because child certificate must have a SAN block - Subject Alternative Names.\nIf we sign the child certificate by &quot;openssl x509&quot; utils, the Root certificate will delete the SAN field in child certificate.\nSo we use &quot;openssl ca&quot; instead of &quot;openssl x509&quot; to avoid the deleting of the SAN field. We create a new config file and tell it to copy all extended fields &lt;strong&gt;copy_extensions = copy&lt;/strong&gt;.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl ca -config config_ca.cnf -out market.crt -in market.csr\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The program asks you 2 questions:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Sign the certificate? Say &quot;Y&quot;&lt;/li&gt;\n&lt;li&gt;1 out of 1 certificate requests certified, commit? Say &quot;Y&quot;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;In terminal you can see a sentence with the word &quot;Database&quot;, it means file index.txt which you create by the command &quot;touch&quot;. It will contain all information by all certificates you create by &quot;openssl ca&quot; util.\nTo check the certificate valid use:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl rsa -in market.key -check\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you want to see what inside in CRT:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl x509 -in market.crt -text -noout\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you want to see what inside in CSR:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -in market.csr -noout -text \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is the script I use on local boxes to set the SAN (subjectAltName) in self-signed certificates. &lt;/p&gt;\n\n&lt;p&gt;This script takes the domain name (example.com) and generates the SAN for *.example.com and example.com in the same certificate. The sections below are commented. Name the script (e.g. &lt;code&gt;generate-ssl.sh&lt;/code&gt;) and give it executable permissions. The files will be written to the same directory as the script.&lt;/p&gt;\n\n&lt;p&gt;Chrome 58 an onward requires SAN to be set in self-signed certificates.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash\n\n# Set the TLD domain we want to use\nBASE_DOMAIN=&quot;example.com&quot;\n\n# Days for the cert to live\nDAYS=1095\n\n# A blank passphrase\nPASSPHRASE=&quot;&quot;\n\n# Generated configuration file\nCONFIG_FILE=&quot;config.txt&quot;\n\ncat &amp;gt; $CONFIG_FILE &amp;lt;&amp;lt;-EOF\n[req]\ndefault_bits = 2048\nprompt = no\ndefault_md = sha256\nx509_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\nC = CA\nST = BC\nL = Vancouver\nO = Example Corp\nOU = Testing Domain\nemailAddress = webmaster@$BASE_DOMAIN\nCN = $BASE_DOMAIN\n\n[v3_req]\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = *.$BASE_DOMAIN\nDNS.2 = $BASE_DOMAIN\nEOF\n\n# The file name can be anything\nFILE_NAME=&quot;$BASE_DOMAIN&quot;\n\n# Remove previous keys\necho &quot;Removing existing certs like $FILE_NAME.*&quot;\nchmod 770 $FILE_NAME.*\nrm $FILE_NAME.*\n\necho &quot;Generating certs for $BASE_DOMAIN&quot;\n\n# Generate our Private Key, CSR and Certificate\n# Use SHA-2 as SHA-1 is unsupported from Jan 1, 2017\n\nopenssl req -new -x509 -newkey rsa:2048 -sha256 -nodes -keyout &quot;$FILE_NAME.key&quot; -days $DAYS -out &quot;$FILE_NAME.crt&quot; -passin pass:$PASSPHRASE -config &quot;$CONFIG_FILE&quot;\n\n# OPTIONAL - write an info to see the details of the generated crt\nopenssl x509 -noout -fingerprint -text &amp;lt; &quot;$FILE_NAME.crt&quot; &amp;gt; &quot;$FILE_NAME.info&quot;\n\n# Protect the key\nchmod 400 &quot;$FILE_NAME.key&quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This script also writes an information file, so you can inspect the new certificate and verify the SAN is set properly.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;                ...\n                28:dd:b8:1e:34:b5:b1:44:1a:60:6d:e3:3c:5a:c4:\n                da:3d\n            Exponent: 65537 (0x10001)\n    X509v3 extensions:\n        X509v3 Subject Alternative Name: \n            DNS:*.example.com, DNS:example.com\nSignature Algorithm: sha256WithRSAEncryption\n     3b:35:5a:d6:9e:92:4f:fc:f4:f4:87:78:cd:c7:8d:cd:8c:cc:\n     ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are using Apache, then you can reference the above certificate in your configuration file like so:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost _default_:443&amp;gt;\n    ServerName example.com\n    ServerAlias www.example.com\n    DocumentRoot /var/www/htdocs\n\n    SSLEngine on\n    SSLCertificateFile path/to/your/example.com.crt\n    SSLCertificateKeyFile path/to/your/example.com.key\n&amp;lt;/VirtualHost&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Remember to restart your Apache (or Nginx, or IIS) server for the new certificate to take effect.&lt;/p&gt;\n    ","\n&lt;p&gt;2017 one-liner:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req \\\n-newkey rsa:2048 \\\n-x509 \\\n-nodes \\\n-keyout server.pem \\\n-new \\\n-out server.pem \\\n-subj /CN=localhost \\\n-reqexts SAN \\\n-extensions SAN \\\n-config &amp;lt;(cat /System/Library/OpenSSL/openssl.cnf \\\n    &amp;lt;(printf &apos;[SAN]\\nsubjectAltName=DNS:localhost&apos;)) \\\n-sha256 \\\n-days 3650\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This also works in Chrome 57, as it provides the SAN, without having another configuration file.\nIt was taken from an answer &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/issues/854&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;This creates a single .pem file that contains both the private key and cert. You can move them to separate .pem files if needed.&lt;/p&gt;\n    ","\n&lt;p&gt;One-liner version 2017:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;CentOS:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -nodes -sha256 -newkey rsa:2048 \\\n-keyout localhost.key -out localhost.crt \\\n-days 3650 \\\n-subj &quot;CN=localhost&quot; \\\n-reqexts SAN -extensions SAN \\\n-config &amp;lt;(cat /etc/pki/tls/openssl.cnf &amp;lt;(printf &quot;\\n[SAN]\\nsubjectAltName=IP:127.0.0.1,DNS:localhost&quot;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Ubuntu:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -nodes -sha256 -newkey rsa:2048 \\\n-keyout localhost.key -out localhost.crt \\\n-days 3650 \\\n-subj &quot;/CN=localhost&quot; \\\n-reqexts SAN -extensions SAN \\\n-config &amp;lt;(cat /etc/ssl/openssl.cnf &amp;lt;(printf &quot;\\n[SAN]\\nsubjectAltName=IP:127.0.0.1,DNS:localhost&quot;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit: added prepending Slash to &apos;subj&apos; option for Ubuntu.&lt;/p&gt;\n    ","\n&lt;p&gt;One liner FTW. I like to keep it simple. Why not use one command that contains ALL the arguments needed? This is how I like it - this creates an x509 certificate and its PEM key:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req -x509 \\\n -nodes -days 365 -newkey rsa:4096 \\\n -keyout self.key.pem \\\n -out self-x509.crt \\\n -subj &quot;/C=US/ST=WA/L=Seattle/CN=example.com/emailAddress=someEmail@gmail.com&quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That single command contains all the answers you would normally provide for the certificate details.  This way you can set the parameters and run the command, get your output - then go for coffee.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://scaleup.us/2017/09/10/create-self-signed-tls-certificates-pkcs8-key-x509-cert-graylog-gelf/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&amp;gt;&amp;gt; More here &amp;lt;&amp;lt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;openssl&lt;/code&gt; allows to generate self-signed certificate by a single command (&lt;code&gt;-newkey&lt;/code&gt;\ninstructs to generate a private key and &lt;code&gt;-x509&lt;/code&gt; instructs to issue a self-signed\ncertificate instead of a signing request)::&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -newkey rsa:4096 \\\n-keyout my.key -passout pass:123456 -out my.crt \\\n-days 365 \\\n-subj /CN=localhost/O=home/C=US/emailAddress=me@mail.internal \\\n-addext &quot;subjectAltName = DNS:localhost,DNS:web.internal,email:me@mail.internal&quot; \\\n-addext keyUsage=digitalSignature -addext extendedKeyUsage=serverAuth\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can generate a private key and construct a self-signing certificate in separate steps::&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl genrsa -out my.key -passout pass:123456 2048\n\nopenssl req -x509 \\\n-key my.key -passin pass:123456 -out my.csr \\\n-days 3650 \\\n-subj /CN=localhost/O=home/C=US/emailAddress=me@mail.internal \\\n-addext &quot;subjectAltName = DNS:localhost,DNS:web.internal,email:me@mail.internal&quot; \\\n-addext keyUsage=digitalSignature -addext extendedKeyUsage=serverAuth\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Review the resulting certificate::&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl x509 -text -noout -in my.crt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Java &lt;code&gt;keytool&lt;/code&gt; creates PKCS#12 store::&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;keytool -genkeypair -keystore my.p12 -alias master \\\n-storetype pkcs12 -keyalg RSA -keysize 2048 -validity 3650 \\\n-storepass 123456 \\\n-dname &quot;CN=localhost,O=home,C=US&quot; \\\n-ext &apos;san=dns:localhost,dns:web.internal,email:me@mail.internal&apos;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To export the self-signed certificate::&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;keytool -exportcert -keystore my.p12 -file my.crt \\\n-alias master -rfc -storepass 123456\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Review the resulting certificate::&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;keytool -printcert -file my.crt\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;certtool&lt;/code&gt; from GnuTLS doesn&apos;t allow passing different attributes from CLI. I don&apos;t like to mess with config files ((&lt;/p&gt;\n    ","\n&lt;p&gt;You have the general procedure correct. The syntax for the command is below.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req -new -key {private key file} -out {output file}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, the warnings are displayed, because the browser was not able to verify the identify by validating the certificate with a known Certificate Authority (CA). &lt;/p&gt;\n\n&lt;p&gt;As this is a self-signed certificate there is no CA and you can safely ignore the warning and proceed. Should you want to get a real certificate that will be recognizable by anyone on the public Internet then the procedure is below.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Generate a private key&lt;/li&gt;\n&lt;li&gt;Use that private key to create a CSR file&lt;/li&gt;\n&lt;li&gt;Submit CSR to CA (Verisign or others, etc.)&lt;/li&gt;\n&lt;li&gt;Install received cert from CA on web server&lt;/li&gt;\n&lt;li&gt;Add other certs to authentication chain depending on the type cert&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I have more details about this in a post at &lt;em&gt;&lt;a href=&quot;https://bigthinkingapplied.com/secure-the-connection-installing-certificates-on-3-common-web-servers/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Securing the Connection: Creating a Security Certificate with OpenSSL&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;h2&gt;Generate keys&lt;/h2&gt;\n  \n  &lt;p&gt;I am using &lt;code&gt;/etc/mysql&lt;/code&gt; for cert storage because &lt;code&gt;/etc/apparmor.d/usr.sbin.mysqld&lt;/code&gt; contains &lt;code&gt;/etc/mysql/*.pem r&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sudo su -\ncd /etc/mysql\nopenssl genrsa -out ca-key.pem 2048;\nopenssl req -new -x509 -nodes -days 1000 -key ca-key.pem -out ca-cert.pem;\nopenssl req -newkey rsa:2048 -days 1000 -nodes -keyout server-key.pem -out server-req.pem;\nopenssl x509 -req -in server-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 -out server-cert.pem;\nopenssl req -newkey rsa:2048 -days 1000 -nodes -keyout client-key.pem -out client-req.pem;\nopenssl x509 -req -in client-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 -out client-cert.pem;\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;h2&gt;Add configuration&lt;/h2&gt;\n  \n  &lt;p&gt;&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[client]\nssl-ca=/etc/mysql/ca-cert.pem\nssl-cert=/etc/mysql/client-cert.pem\nssl-key=/etc/mysql/client-key.pem\n\n[mysqld]\nssl-ca=/etc/mysql/ca-cert.pem\nssl-cert=/etc/mysql/server-cert.pem\nssl-key=/etc/mysql/server-key.pem\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;On my setup, Ubuntu server logged to: &lt;code&gt;/var/log/mysql/error.log&lt;/code&gt;&lt;/p&gt;\n\n&lt;h1&gt;Follow up notes:&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;SSL error: Unable to get certificate from &apos;...&apos;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=1121458&amp;amp;p=7048357#post7048357&quot; rel=&quot;nofollow noreferrer&quot;&gt;MySQL might be denied read access to your certificate file if it is not in apparmors configuration&lt;/a&gt;. As mentioned in the previous steps^, save all our certificates as &lt;code&gt;.pem&lt;/code&gt; files in the &lt;code&gt;/etc/mysql/&lt;/code&gt; directory which is approved by default by apparmor (or modify your apparmor/SELinux to allow access to wherever you stored them.)&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;SSL error: Unable to get private key&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://askubuntu.com/a/439274/250556&quot;&gt;Your MySQL server version may not support the default &lt;code&gt;rsa:2048&lt;/code&gt; format&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Convert generated &lt;code&gt;rsa:2048&lt;/code&gt; to plain &lt;code&gt;rsa&lt;/code&gt; with:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl rsa -in server-key.pem -out server-key.pem\nopenssl rsa -in client-key.pem -out client-key.pem\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mifosforge.jira.com/wiki/display/MIFOS/How+to+enable+MySQL+SSL+on+Ubuntu&quot; rel=&quot;nofollow noreferrer&quot;&gt;Check if local server supports SSL&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre&gt;&lt;code&gt;mysql -u root -p\nmysql&amp;gt; show variables like &quot;%ssl%&quot;;\n+---------------+----------------------------+\n| Variable_name | Value                      |\n+---------------+----------------------------+\n| have_openssl  | YES                        |\n| have_ssl      | YES                        |\n| ssl_ca        | /etc/mysql/ca-cert.pem     |\n| ssl_capath    |                            |\n| ssl_cert      | /etc/mysql/server-cert.pem |\n| ssl_cipher    |                            |\n| ssl_key       | /etc/mysql/server-key.pem  |\n+---------------+----------------------------+\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://kb.berkeley.edu/page.php?id=23112&quot; rel=&quot;nofollow noreferrer&quot;&gt;Verifying a connection to the database is SSL encrypted&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;h2&gt;Verifying connection&lt;/h2&gt;\n  \n  &lt;p&gt;When logged in to the MySQL instance, you can issue the query:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;show status like &apos;Ssl_cipher&apos;;\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;If your connection is not encrypted, the result will be blank:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show status like &apos;Ssl_cipher&apos;;\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| Ssl_cipher    |       |\n+---------------+-------+\n1 row in set (0.00 sec)\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;Otherwise, it would show a non-zero length string for the cypher in use:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show status like &apos;Ssl_cipher&apos;;\n+---------------+--------------------+\n| Variable_name | Value              |\n+---------------+--------------------+\n| Ssl_cipher    | DHE-RSA-AES256-SHA |\n+---------------+--------------------+\n1 row in set (0.00 sec)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/grant.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Require ssl for specific user&apos;s connection&lt;/a&gt; (&apos;require ssl&apos;):&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;ul&gt;\n  &lt;li&gt;SSL&lt;/li&gt;\n  &lt;/ul&gt;\n  \n  &lt;p&gt;Tells the server to permit only SSL-encrypted connections for the account.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;GRANT ALL PRIVILEGES ON test.* TO &apos;root&apos;@&apos;localhost&apos;\n  REQUIRE SSL;\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;To connect, the client must specify the --ssl-ca option to authenticate the server certificate, and may additionally specify the --ssl-key and --ssl-cert options. If neither --ssl-ca option nor --ssl-capath option is specified, the client does not authenticate the server certificate.&lt;/p&gt;\n&lt;/blockquote&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Alternate link: Lengthy tutorial in &lt;em&gt;&lt;a href=&quot;http://www.madirish.net/214&quot; rel=&quot;nofollow noreferrer&quot;&gt;Secure PHP Connections to MySQL with SSL&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;As has been discussed in detail, &lt;a href=&quot;https://en.wikipedia.org/wiki/Self-signed_certificate&quot; rel=&quot;nofollow noreferrer&quot;&gt;self-signed certificates&lt;/a&gt; &lt;a href=&quot;https://www.globalsign.com/en/ssl-information-center/dangers-self-signed-certificates/&quot; rel=&quot;nofollow noreferrer&quot;&gt;are not trusted for the Internet&lt;/a&gt;. You can &lt;a href=&quot;https://stackoverflow.com/questions/7580508/getting-chrome-to-accept-self-signed-localhost-certificate&quot;&gt;add your self-signed certificate to many but not all browsers&lt;/a&gt;. Alternatively you can &lt;a href=&quot;https://stackoverflow.com/questions/21297139/how-do-you-sign-a-certificate-signing-request-with-your-certification-authority/21340898#21340898&quot;&gt;become your own certificate authority&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The primary reason one does not want to get a signed certificate from a certificate authority is cost -- &lt;a href=&quot;https://www.websecurity.symantec.com/buy-renew?ef_id=Cj0KCQiAwc7jBRD8ARIsAKSUBHL3u_wl0kyXRrvQM3Fj2H9j9T6FogZsQVjmxinnw6KIf9xVvUP9O64aAj0KEALw_wcB:G:s&amp;amp;s_kwcid=AL!6100!3!225648135095!e!!g!!symantec%20ssl%20certificate&amp;amp;gclid=Cj0KCQiAwc7jBRD8ARIsAKSUBHL3u_wl0kyXRrvQM3Fj2H9j9T6FogZsQVjmxinnw6KIf9xVvUP9O64aAj0KEALw_wcB&quot; rel=&quot;nofollow noreferrer&quot;&gt;Symantec charges between $995 - $1,999 per year for certificates -- just for a certificate intended for internal network, Symantec charges $399 per year&lt;/a&gt;. That cost is easy to justify if you are processing credit card payments or work for the profit center of a highly profitable company. It is more than many can afford for a personal project one is creating on the internet, or for a non-profit running on a minimal budget, or if one works in a cost center of an organization -- cost centers always try to do more with less.&lt;/p&gt;\n\n&lt;p&gt;An alternative is to use &lt;a href=&quot;https://certbot.eff.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;certbot&lt;/a&gt; (see &lt;a href=&quot;https://certbot.eff.org/about/&quot; rel=&quot;nofollow noreferrer&quot;&gt;about certbot&lt;/a&gt;). Certbot is an easy-to-use automatic client that fetches and deploys SSL/TLS certificates for your web server.&lt;/p&gt;\n\n&lt;p&gt;If you setup certbot, you can enable it to create and maintain a certificate for you issued by the &lt;a href=&quot;https://letsencrypt.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Lets Encrypt&lt;/a&gt; certificate authority.&lt;/p&gt;\n\n&lt;p&gt;I did this over the weekend for my organization. I installed the required packages for certbot on my server (Ubuntu 16.04) and then ran the command necessary to setup and enable certbot. One likely needs a &lt;a href=&quot;https://certbot.eff.org/docs/using.html#dns-plugins&quot; rel=&quot;nofollow noreferrer&quot;&gt;DNS plugin&lt;/a&gt; for certbot - we are presently using &lt;a href=&quot;https://certbot-dns-digitalocean.readthedocs.io/en/stable/&quot; rel=&quot;nofollow noreferrer&quot;&gt;DigitalOcean&lt;/a&gt; though may be migrating to another service soon.&lt;/p&gt;\n\n&lt;p&gt;Note that some of the instructions were not quite right and took a little poking and time with Google to figure out. This took a fair amount of my time the first time but now I think I could do it in minutes.&lt;/p&gt;\n\n&lt;p&gt;For DigitalOcean, one area I struggled was when I was prompted to input the path to your DigitalOcean credentials INI file. What the script is referring to is the &lt;a href=&quot;https://cloud.digitalocean.com/account/api/tokens&quot; rel=&quot;nofollow noreferrer&quot;&gt;Applications &amp;amp; API&lt;/a&gt; page and the Tokens/Key tab on that page. You need to have or generate a personal access token (read and write) for DigitalOcean&apos;s API -- this is a 65 character hexadecimal string. This string then needs to be put into a file on the webserver from which you are running certbot. That file can have a comment as its first line (comments start with #). The seccond line is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dns_digitalocean_token = 0000111122223333444455556666777788889999aaaabbbbccccddddeeeeffff\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Once I figured out how to set up a read+write token for DigitalOcean&apos;s API, it was pretty easy to use certbot to setup a &lt;a href=&quot;https://en.wikipedia.org/wiki/Wildcard_certificate&quot; rel=&quot;nofollow noreferrer&quot;&gt;wildcard certificate&lt;/a&gt;. Note that one does not have to setup a wildcard certificate, one may instead specify each domain and sub-domain that one wants the certificate to appply to. It was the wildcard certificate that required the credentials INI file that contained the personal access token from DigitalOcean.&lt;/p&gt;\n\n&lt;p&gt;Note that public key certificates (also known as identity certificates or SSL certificates) expire and require renewal. Thus you will need to renew your certificate on a periodic (reoccurring) basis. The certbot documentation covers &lt;a href=&quot;https://certbot.eff.org/docs/using.html#renewing-certificates&quot; rel=&quot;nofollow noreferrer&quot;&gt;renewing certificates&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;My plan is to write a script to use the openssl command to get my certificate&apos;s expiration date and to trigger renewal when it is 30 days or less until it expires. I will then add this script to cron and run it once per day.&lt;/p&gt;\n\n&lt;p&gt;Here is the command to read your certificate&apos;s expiration date:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;root@prod-host:~# /usr/bin/openssl x509 -enddate -noout -in path-to-certificate-pem-file\nnotAfter=May 25 19:24:12 2019 GMT\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;this worked for me&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req -x509 -nodes -subj &apos;/CN=localhost&apos;  -newkey rsa:4096 -keyout ./sslcert/key.pem -out ./sslcert/cert.pem -days 365\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;server.js&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;var fs = require(&apos;fs&apos;);\nvar path = require(&apos;path&apos;);\nvar http = require(&apos;http&apos;);\nvar https = require(&apos;https&apos;);\nvar compression = require(&apos;compression&apos;);\nvar express = require(&apos;express&apos;);\nvar app = express();\n\napp.use(compression());\napp.use(express.static(__dirname + &apos;/www&apos;));    \n\napp.get(&apos;/*&apos;, function(req,res) {\n  res.sendFile(path.join(__dirname+&apos;/www/index.html&apos;));\n});\n\n// your express configuration here\n\nvar httpServer = http.createServer(app);\nvar credentials = {\n    key: fs.readFileSync(&apos;./sslcert/key.pem&apos;, &apos;utf8&apos;),\n    cert: fs.readFileSync(&apos;./sslcert/cert.pem&apos;, &apos;utf8&apos;)\n};\nvar httpsServer = https.createServer(credentials, app);\n\nhttpServer.listen(8080);\nhttpsServer.listen(8443);\n\nconsole.log(`RUNNING ON  http://127.0.0.1:8080`);\nconsole.log(`RUNNING ON  http://127.0.0.1:8443`);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;After much of going around, playing with various solutions, still I faced the problem that issuing a self-signed certificate for localhost, gave me error&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;ERR_CERT_INVALID&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;When expanding the details, chrome said:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;You cannot visit localhost right now because the website sent\nscrambled credentials...&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;And the only ugly way to get through is to type (directly in this screen, without seeing any cursor for the text) :&lt;/p&gt;\n&lt;p&gt;(type in the keyboard) &lt;em&gt;&lt;strong&gt;thisisunsafe&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;Which let me proceed.&lt;/p&gt;\n&lt;h4&gt;Until I found &lt;code&gt;extendedKeyUsage = serverAuth, clientAuth&lt;/code&gt;&lt;/h4&gt;\n&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;openssl genrsa -out localhost.key 2048&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;code&gt;openssl req -key localhost.key -new -out localhost.csr&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;(click enter on everything and just fill in the common name (CN) with localhost or your other FQDN.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;put the following in a file named &lt;code&gt;v3.ext&lt;/code&gt; (edit whatever you need):&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre&gt;&lt;code&gt;subjectKeyIdentifier   = hash\nauthorityKeyIdentifier = keyid:always,issuer:always\nbasicConstraints       = CA:TRUE\nkeyUsage               = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign\nextendedKeyUsage       = serverAuth, clientAuth\nsubjectAltName         = DNS:localhost, DNS:localhost.localdomain\nissuerAltName          = issuer:copy\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol start=&quot;5&quot;&gt;\n&lt;li&gt;&lt;code&gt;openssl x509 -req -in localhost.csr -signkey localhost.key -out localhost.pem -days 3650 -sha256 -extfile v3.ext&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;And voilà!\nYou can visit the website, expand &quot;Advanced&quot; and click &quot;Proceed to localhost (unsafe)&quot;.&lt;/p&gt;\n    ","\n&lt;p&gt;Generate a key without password and certificate for 10 years, the short way:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;openssl req  -x509 -nodes -new  -keyout server.key -out server.crt -days 3650 -subj &quot;/C=/ST=/L=/O=/OU=web/CN=www.server.com&quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;for the flag &lt;code&gt;-subj | -subject&lt;/code&gt; &lt;strong&gt;empty values are permitted&lt;/strong&gt; &lt;code&gt;-subj &quot;/C=/ST=/L=/O=/OU=web/CN=www.server.com&quot;&lt;/code&gt;, but you can sets more details as you like:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;C - Country Name (2 letter code)&lt;/li&gt;\n&lt;li&gt;ST - State&lt;/li&gt;\n&lt;li&gt;L - Locality Name (eg, city)&lt;/li&gt;\n&lt;li&gt;O - Organization Name&lt;/li&gt;\n&lt;li&gt;OU - Organizational Unit Name&lt;/li&gt;\n&lt;li&gt;CN - Common Name - &lt;strong&gt;required!&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;This very simple Python app that creates a self-signed certificate.\nCode:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;from OpenSSL import crypto, SSL\nfrom secrets import randbelow\nprint(&quot;Please know, if you make a mistake, you must restart the program.&quot;)\ndef cert_gen(\n    emailAddress=input(&quot;Enter Email Address: &quot;),\n    commonName=input(&quot;Enter Common Name: &quot;),\n    countryName=input(&quot;Enter Country Name (2 characters): &quot;),\n    localityName=input(&quot;Enter Locality Name: &quot;),\n    stateOrProvinceName=input(&quot;Enter State of Province Name: &quot;),\n    organizationName=input(&quot;Enter Organization Name: &quot;),\n    organizationUnitName=input(&quot;Enter Organization Unit Name: &quot;),\n    serialNumber=randbelow(1000000),\n    validityStartInSeconds=0,\n    validityEndInSeconds=10*365*24*60*60,\n    KEY_FILE = &quot;private.key&quot;,\n    CERT_FILE=&quot;selfsigned.crt&quot;):\n    #can look at generated file using openssl:\n    #openssl x509 -inform pem -in selfsigned.crt -noout -text\n    # create a key pair\n    k = crypto.PKey()\n    k.generate_key(crypto.TYPE_RSA, 4096)\n    # create a self-signed cert\n    cert = crypto.X509()\n    cert.get_subject().C = countryName\n    cert.get_subject().ST = stateOrProvinceName\n    cert.get_subject().L = localityName\n    cert.get_subject().O = organizationName\n    cert.get_subject().OU = organizationUnitName\n    cert.get_subject().CN = commonName\n    cert.get_subject().emailAddress = emailAddress\n    cert.set_serial_number(serialNumber)\n    cert.gmtime_adj_notBefore(0)\n    cert.gmtime_adj_notAfter(validityEndInSeconds)\n    cert.set_issuer(cert.get_subject())\n    cert.set_pubkey(k)\n    cert.sign(k, &apos;sha512&apos;)\n    with open(CERT_FILE, &quot;wt&quot;) as f:\n        f.write(crypto.dump_certificate(crypto.FILETYPE_PEM, cert).decode(&quot;utf-8&quot;))\n    with open(KEY_FILE, &quot;wt&quot;) as f:\n        f.write(crypto.dump_privatekey(crypto.FILETYPE_PEM, k).decode(&quot;utf-8&quot;))\n    print(&quot;GENERATED&quot;)\n    input(&quot;Press enter to close program.&quot;)\ncert_gen()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, you still get the &quot;certificate is not trusted&quot; error. This is because of a few reasons:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;It is self-signed/not verified (a verified certificate would need a CA (Certificate Authority), like Let&apos;s Encrypt to be trusted on all devices).&lt;/li&gt;\n&lt;li&gt;It is not trusted on your machine. (&lt;a href=&quot;https://stackoverflow.com/a/48790088/14739273&quot;&gt;this&lt;/a&gt; answer shows how you can make Windows trust your certificate).&lt;/li&gt;\n&lt;/ol&gt;\n    "],"527":["\n&lt;p&gt;Now &lt;a href=&quot;http://www.quirksmode.org/dom/w3c_cssom.html&quot; rel=&quot;noreferrer&quot;&gt;most browsers&lt;/a&gt; support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect&quot; rel=&quot;noreferrer&quot;&gt;getBoundingClientRect&lt;/a&gt; method, which has become the best practice. Using an old answer is very slow, &lt;a href=&quot;http://weblogs.asp.net/bleroy/archive/2008/01/29/getting-absolute-coordinates-from-a-dom-element.aspx&quot; rel=&quot;noreferrer&quot;&gt;not accurate&lt;/a&gt; and &lt;a href=&quot;http://javascript.info/tutorial/coordinates&quot; rel=&quot;noreferrer&quot;&gt;has several bugs&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;The solution selected as correct is &lt;a href=&quot;http://www.quirksmode.org/js/findpos.html&quot; rel=&quot;noreferrer&quot;&gt;almost never precise&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;This solution was tested on Internet Explorer 7 (and later), iOS 5 (and later) Safari, &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_Eclair&quot; rel=&quot;noreferrer&quot;&gt;Android 2.0&lt;/a&gt; (Eclair) and later, BlackBerry, Opera Mobile, and Internet Explorer Mobile &lt;sup&gt;&lt;a href=&quot;http://ejohn.org/blog/getboundingclientrect-is-awesome/&quot; rel=&quot;noreferrer&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementInViewport&lt;/span&gt; (el) {\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Special bonus for those using jQuery&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jQuery === &lt;span class=&quot;hljs-string&quot;&gt;&quot;function&quot;&lt;/span&gt; &amp;amp;&amp;amp; el &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery) {\n        el = el[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt;= (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;) &amp;amp;&amp;amp; &lt;span class=&quot;hljs-comment&quot;&gt;/* or $(window).height() */&lt;/span&gt;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt;= (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;/* or $(window).width() */&lt;/span&gt;\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h2&gt;How to use:&lt;/h2&gt;\n&lt;p&gt;You can be sure that the function given above returns correct answer at the moment of time when it is called, but what about tracking element&apos;s visibility as an event?&lt;/p&gt;\n&lt;p&gt;Place the following code at the bottom of your &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lua&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onVisibilityChange&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(el, callback)&lt;/span&gt;&lt;/span&gt; {\n    var old_visible;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {\n        var visible = isElementInViewport(el);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (visible != old_visible) {\n            old_visible = visible;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (typeof callback == &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;) {\n                callback();\n            }\n        }\n    }\n}\n\nvar handler = onVisibilityChange(el, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {\n    /* Your code go here */\n});\n\n\n// jQuery\n$(window).on(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded load resize scroll&apos;&lt;/span&gt;, handler);\n\n/* // Non-jQuery\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (window.addEventListener) {\n    addEventListener(&lt;span class=&quot;hljs-string&quot;&gt;&apos;DOMContentLoaded&apos;&lt;/span&gt;, handler, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    addEventListener(&lt;span class=&quot;hljs-string&quot;&gt;&apos;load&apos;&lt;/span&gt;, handler, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    addEventListener(&lt;span class=&quot;hljs-string&quot;&gt;&apos;scroll&apos;&lt;/span&gt;, handler, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    addEventListener(&lt;span class=&quot;hljs-string&quot;&gt;&apos;resize&apos;&lt;/span&gt;, handler, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (window.attachEvent)  {\n    attachEvent(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onDOMContentLoaded&apos;&lt;/span&gt;, handler); // Internet Explorer &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;+ :(\n    attachEvent(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onload&apos;&lt;/span&gt;, handler);\n    attachEvent(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onscroll&apos;&lt;/span&gt;, handler);\n    attachEvent(&lt;span class=&quot;hljs-string&quot;&gt;&apos;onresize&apos;&lt;/span&gt;, handler);\n}\n*/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;If you do any DOM modifications, they can change your element&apos;s visibility of course.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Guidelines and common pitfalls:&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Maybe you need to track page zoom / mobile device pinch?&lt;/strong&gt; jQuery should handle &lt;a href=&quot;http://api.jquery.com/resize/&quot; rel=&quot;noreferrer&quot;&gt;zoom/pinch&lt;/a&gt; cross browser, otherwise &lt;a href=&quot;https://stackoverflow.com/questions/995914/catch-browsers-zoom-event-in-javascript&quot;&gt;first&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/questions/11183174/simplest-way-to-detect-a-pinch&quot;&gt;second&lt;/a&gt; link should help you.&lt;/p&gt;\n&lt;p&gt;If you &lt;strong&gt;modify DOM&lt;/strong&gt;, it can affect the element&apos;s visibility. You should take control over that and call &lt;code&gt;handler()&lt;/code&gt; manually. Unfortunately, we don&apos;t have any cross browser &lt;code&gt;onrepaint&lt;/code&gt; event. On the other hand that allows us to make optimizations and perform re-check only on DOM modifications that can change an element&apos;s visibility.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Never Ever&lt;/strong&gt; use it inside jQuery &lt;a href=&quot;http://api.jquery.com/ready/&quot; rel=&quot;noreferrer&quot;&gt;$(document).ready()&lt;/a&gt; only, because &lt;a href=&quot;https://stackoverflow.com/questions/1324568/is-document-ready-also-css-ready&quot;&gt;there is no warranty CSS has been applied&lt;/a&gt; in this moment. Your code can work locally with your CSS on a hard drive, but once put on a remote server it will fail.&lt;/p&gt;\n&lt;p&gt;After &lt;code&gt;DOMContentLoaded&lt;/code&gt; is fired, &lt;a href=&quot;https://stackoverflow.com/questions/3520780/when-is-window-onload-fired&quot;&gt;styles are applied&lt;/a&gt;, but &lt;a href=&quot;https://stackoverflow.com/questions/8835413/difference-between-load-vs-domcontentloaded&quot;&gt;the images are not loaded yet&lt;/a&gt;. So, we should add &lt;code&gt;window.onload&lt;/code&gt; event listener.&lt;/p&gt;\n&lt;p&gt;We can&apos;t catch zoom/pinch event yet.&lt;/p&gt;\n&lt;p&gt;The last resort could be the following code:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* &lt;span class=&quot;hljs-doctag&quot;&gt;TODO:&lt;/span&gt; this looks like a very bad code */&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(handler, &lt;span class=&quot;hljs-number&quot;&gt;600&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can use the awesome feature &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Using_the_Page_Visibility_API&quot; rel=&quot;noreferrer&quot;&gt;pageVisibiliy&lt;/a&gt; of the HTML5 API if you care if the tab with your web page is active and visible.&lt;/p&gt;\n&lt;p&gt;TODO: this method does not handle two situations:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Overlapping using &lt;code&gt;z-index&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Using &lt;code&gt;overflow-scroll&lt;/code&gt; in element&apos;s container.&lt;/li&gt;\n&lt;li&gt;Try something new - &lt;em&gt;&lt;a href=&quot;https://pawelgrzybek.com/the-intersection-observer-api-explained/&quot; rel=&quot;noreferrer&quot;&gt;The Intersection Observer API explained&lt;/a&gt;&lt;/em&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Time marches on and so have our browsers. &lt;strong&gt;This technique is no longer recommended&lt;/strong&gt; and you should use &lt;a href=&quot;https://stackoverflow.com/questions/123999/how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433&quot;&gt;Dan&apos;s solution&lt;/a&gt; if you do not need to support version of Internet&amp;nbsp;Explorer before 7.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Original solution (now outdated):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This will check if the element is entirely visible in the current viewport:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;elementInViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; top = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetTop&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; left = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetLeft&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; width = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetWidth&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; height = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetHeight&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(el.&lt;span class=&quot;hljs-property&quot;&gt;offsetParent&lt;/span&gt;) {\n    el = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetParent&lt;/span&gt;;\n    top += el.&lt;span class=&quot;hljs-property&quot;&gt;offsetTop&lt;/span&gt;;\n    left += el.&lt;span class=&quot;hljs-property&quot;&gt;offsetLeft&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n    top &amp;gt;= &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageYOffset&lt;/span&gt; &amp;amp;&amp;amp;\n    left &amp;gt;= &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageXOffset&lt;/span&gt; &amp;amp;&amp;amp;\n    (top + height) &amp;lt;= (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageYOffset&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt;) &amp;amp;&amp;amp;\n    (left + width) &amp;lt;= (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageXOffset&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt;)\n  );\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You could modify this simply to determine if any part of the element is visible in the viewport:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;elementInViewport2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; top = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetTop&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; left = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetLeft&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; width = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetWidth&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; height = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetHeight&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(el.&lt;span class=&quot;hljs-property&quot;&gt;offsetParent&lt;/span&gt;) {\n    el = el.&lt;span class=&quot;hljs-property&quot;&gt;offsetParent&lt;/span&gt;;\n    top += el.&lt;span class=&quot;hljs-property&quot;&gt;offsetTop&lt;/span&gt;;\n    left += el.&lt;span class=&quot;hljs-property&quot;&gt;offsetLeft&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n    top &amp;lt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageYOffset&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt;) &amp;amp;&amp;amp;\n    left &amp;lt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageXOffset&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt;) &amp;amp;&amp;amp;\n    (top + height) &amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageYOffset&lt;/span&gt; &amp;amp;&amp;amp;\n    (left + width) &amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageXOffset&lt;/span&gt;\n  );\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Update&lt;/h2&gt;\n&lt;p&gt;In modern browsers, you might want to check out the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API&quot; rel=&quot;noreferrer&quot;&gt;Intersection Observer API&lt;/a&gt; which provides the following benefits:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Better performance than listening for scroll events&lt;/li&gt;\n&lt;li&gt;Works in cross domain iframes&lt;/li&gt;\n&lt;li&gt;Can tell if an element is obstructing/intersecting another&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Intersection Observer is on its way to being a full-fledged standard and is already supported in Chrome 51+, Edge 15+ and Firefox 55+ and is under development for Safari.  There&apos;s also a &lt;a href=&quot;https://github.com/w3c/IntersectionObserver/tree/master/polyfill&quot; rel=&quot;noreferrer&quot;&gt;polyfill&lt;/a&gt; available.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;Previous answer&lt;/h2&gt;\n&lt;p&gt;There are some issues with the &lt;a href=&quot;https://stackoverflow.com/a/7557433/94197&quot;&gt;answer provided by Dan&lt;/a&gt; that might make it an unsuitable approach for some situations.  Some of these issues are pointed out in his answer near the bottom, that his code will give false positives for elements that are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Hidden by another element in front of the one being tested&lt;/li&gt;\n&lt;li&gt;Outside the visible area of a parent or ancestor element&lt;/li&gt;\n&lt;li&gt;An element or its children hidden by using the CSS &lt;code&gt;clip&lt;/code&gt; property&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;These limitations are demonstrated in the following results of a &lt;a href=&quot;http://jsfiddle.net/AndyE/d48Cv/1&quot; rel=&quot;noreferrer&quot;&gt;simple test&lt;/a&gt;:&lt;/p&gt;\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/xdo9l.png&quot; alt=&quot;Failed test, using isElementInViewport&quot;&gt;&lt;/p&gt;\n&lt;h2&gt;The solution: &lt;code&gt;isElementVisible()&lt;/code&gt;&lt;/h2&gt;\n&lt;p&gt;Here&apos;s a solution to those problems, with the test result below and an explanation of some parts of the code.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementVisible&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect     = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;(),\n        vWidth   = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;,\n        vHeight  = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;,\n        efp      = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;x, y&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;elementFromPoint&lt;/span&gt;(x, y) };     \n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return false if it&apos;s not in the viewport&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; \n            || rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt; vWidth || rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt; vHeight)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return true if any of its four corners are visible&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n          el.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;,  rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;))\n      ||  el.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;, rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;))\n      ||  el.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;, rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;))\n      ||  el.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;,  rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;))\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Passing test:&lt;/strong&gt; &lt;a href=&quot;http://jsfiddle.net/AndyE/cAY8c/&quot; rel=&quot;noreferrer&quot;&gt;http://jsfiddle.net/AndyE/cAY8c/&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;And the result:&lt;/p&gt;\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/Yg3u7.png&quot; alt=&quot;Passed test, using isElementVisible&quot;&gt;&lt;/p&gt;\n&lt;h2&gt;Additional notes&lt;/h2&gt;\n&lt;p&gt;This method is not without its own limitations, however. For instance, an element being tested with a lower z-index than another element at the same location would be identified as hidden even if the element in front doesn&apos;t actually hide any part of it.  Still, this method has its uses in some cases that Dan&apos;s solution doesn&apos;t cover.&lt;/p&gt;\n&lt;p&gt;Both &lt;code&gt;element.getBoundingClientRect()&lt;/code&gt; and &lt;code&gt;document.elementFromPoint()&lt;/code&gt; are part of the CSSOM Working Draft specification and are supported in at least IE 6 and later and &lt;em&gt;most&lt;/em&gt; desktop browsers for a long time (albeit, not perfectly). See &lt;a href=&quot;http://www.quirksmode.org/dom/w3c_cssom.html#documentview&quot; rel=&quot;noreferrer&quot;&gt;Quirksmode on these functions&lt;/a&gt; for more information.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;contains()&lt;/code&gt; is used to see if the element returned by &lt;code&gt;document.elementFromPoint()&lt;/code&gt; is a child node of the element we&apos;re testing for visibility.  It also returns true if the element returned is the same element.  This just makes the check more robust.  It&apos;s supported in all major browsers, Firefox 9.0 being the last of them to add it.  For older Firefox support, check this answer&apos;s history.&lt;/p&gt;\n&lt;p&gt;If you want to test more points around the element for visibilityie, to make sure the element isn&apos;t covered by more than, say, 50%it wouldn&apos;t take much to adjust the last part of the answer.  However, be aware that it would probably be very slow if you checked every pixel to make sure it was 100% visible.&lt;/p&gt;\n    ","\n&lt;p&gt;I tried &lt;a href=&quot;/a/7557433/315024&quot;&gt;Dan&apos;s answer&lt;/a&gt;, however, the algebra used to determine the bounds means that the element must be both  the viewport size and completely inside the viewport to get &lt;code&gt;true&lt;/code&gt;, easily leading to false negatives. If you want to determine whether an element is in the viewport at all, &lt;a href=&quot;/a/12418814/315024&quot;&gt;ryanve&apos;s answer&lt;/a&gt; is close but the element being tested should overlap the viewport, so try this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementInViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;/* or $(window).width() */&lt;/span&gt; &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;/* or $(window).height() */&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;See the source of &lt;a href=&quot;https://github.com/ryanve/verge#verge&quot; rel=&quot;noreferrer&quot;&gt;verge&lt;/a&gt;, which uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.getBoundingClientRect&quot; rel=&quot;noreferrer&quot;&gt;getBoundingClientRect&lt;/a&gt;. It&apos;s like:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;function inViewport (element) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!element) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; !== element.nodeType) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; html = document.documentElement;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = element.getBoundingClientRect();\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !!rect &amp;amp;&amp;amp;\n    rect.bottom &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n    rect.right &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; \n    rect.left &amp;lt;= html.clientWidth &amp;amp;&amp;amp;\n    rect.top &amp;lt;= html.clientHeight;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It returns &lt;code&gt;true&lt;/code&gt; if &lt;strong&gt;any&lt;/strong&gt; part of the element is in the viewport.&lt;/p&gt;\n    ","\n&lt;p&gt;As a public service: &lt;br&gt;\nDan&apos;s answer with the correct calculations (element can be &amp;gt; window, especially on mobile phone screens), and correct jQuery testing, as well as adding isElementPartiallyInViewport:&lt;/p&gt;\n\n&lt;p&gt;By the way, &lt;a href=&quot;http://www.quirksmode.org/mobile/viewports.html&quot; rel=&quot;noreferrer&quot;&gt;the difference&lt;/a&gt; between window.innerWidth and document.documentElement.clientWidth is that clientWidth/clientHeight doesn&apos;t include the scrollbar, while window.innerWidth/Height does.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementPartiallyInViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Special bonus for those using jQuery&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jQuery !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt; &amp;amp;&amp;amp; el &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery) \n        el = el[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-comment&quot;&gt;// DOMRect { x: 8, y: 8, width: 100, height: 100, top: 8, right: 108, bottom: 108, left: 8 }&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowHeight = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowWidth = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vertInView = (rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt;= windowHeight) &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt;) &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; horInView = (rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt;= windowWidth) &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt;) &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (vertInView &amp;amp;&amp;amp; horInView);\n}\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementInViewport&lt;/span&gt; (el)\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Special bonus for those using jQuery&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jQuery !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt; &amp;amp;&amp;amp; el &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery) \n        el = el[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowHeight = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowWidth = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n           (rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        &amp;amp;&amp;amp; (rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt;) &amp;lt;= windowWidth)\n        &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt;) &amp;lt;= windowHeight)\n    );\n}\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fnIsVis&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ele&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inVpFull = &lt;span class=&quot;hljs-title function_&quot;&gt;isElementInViewport&lt;/span&gt;(ele);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inVpPartial = &lt;span class=&quot;hljs-title function_&quot;&gt;isElementPartiallyInViewport&lt;/span&gt;(ele);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;clear&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Fully in viewport: &quot;&lt;/span&gt; + inVpFull);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Partially in viewport: &quot;&lt;/span&gt; + inVpPartial);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Test-case&lt;/h3&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;hljs-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;description&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;author&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Test&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!--\n    &amp;lt;script src=&quot;http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\n    &amp;lt;script src=&quot;scrollMonitor.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\n    --&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementPartiallyInViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Special bonus for those using jQuery&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jQuery !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt; &amp;amp;&amp;amp; el &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery) \n                el = el[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n            &lt;span class=&quot;hljs-comment&quot;&gt;// DOMRect { x: 8, y: 8, width: 100, height: 100, top: 8, right: 108, bottom: 108, left: 8 }&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowHeight = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowWidth = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vertInView = (rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt;= windowHeight) &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt;) &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; horInView = (rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt;= windowWidth) &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt;) &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (vertInView &amp;amp;&amp;amp; horInView);\n        }\n\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementInViewport&lt;/span&gt; (el)\n        {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Special bonus for those using jQuery&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jQuery !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt; &amp;amp;&amp;amp; el &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery) \n                el = el[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowHeight = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowWidth = (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n                   (rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                &amp;amp;&amp;amp; (rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt;) &amp;lt;= windowWidth)\n                &amp;amp;&amp;amp; ((rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt;) &amp;lt;= windowHeight)\n            );\n        }\n\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fnIsVis&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ele&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inVpFull = &lt;span class=&quot;hljs-title function_&quot;&gt;isElementInViewport&lt;/span&gt;(ele);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; inVpPartial = &lt;span class=&quot;hljs-title function_&quot;&gt;isElementPartiallyInViewport&lt;/span&gt;(ele);\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;clear&lt;/span&gt;();\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Fully in viewport: &quot;&lt;/span&gt; + inVpFull);\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Partially in viewport: &quot;&lt;/span&gt; + inVpPartial);\n        }\n\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// var scrollLeft = (window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft,&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// var scrollTop = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;&lt;/span&gt;\n    &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display: block; width: 2000px; height: 10000px; background-color: green;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fnIsVis(document.getElementById(&apos;myele&apos;));&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;det&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;background-color: crimson; display: inline-block; width: 800px; height: 500px;&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myele&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fnIsVis(this);&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display: inline-block; width: 100px; height: 100px; background-color: hotpink;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        t\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fnIsVis(document.getElementById(&apos;myele&apos;));&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;det&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!--\n    &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;\n\n        var element = document.getElementById(&quot;myele&quot;);\n        var watcher = scrollMonitor.create(element);\n\n        watcher.lock();\n\n        watcher.stateChange(function() {\n            console.log(&quot;state changed&quot;);\n            // $(element).toggleClass(&apos;fixed&apos;, this.isAboveViewport)\n        });\n    &amp;lt;/script&amp;gt;\n    --&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;We have now a native javascript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API&quot; rel=&quot;noreferrer&quot;&gt;Intersection Observer API&lt;/a&gt;\nfrom which we can detect elements either they are in the viewport or not.&lt;/p&gt;\n&lt;p&gt;Here is example&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; el = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#el&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; observer = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;IntersectionObserver&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;[entry]&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (entry.&lt;span class=&quot;hljs-property&quot;&gt;isIntersecting&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ENTER&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n  }\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;LEAVE&apos;&lt;/span&gt;)\n}, {\n  &lt;span class=&quot;hljs-attr&quot;&gt;root&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;threshold&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0.1&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// set offset 0.1 means trigger if atleast 10% of element in viewport&lt;/span&gt;\n})\n\nobserver.&lt;span class=&quot;hljs-title function_&quot;&gt;observe&lt;/span&gt;(el);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;body&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;300vh&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#el&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vh&lt;/span&gt;;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;el&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;this is element&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;My shorter and faster version:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isElementOutViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And a jsFiddle as required: &lt;a href=&quot;https://jsfiddle.net/on1g619L/1/&quot; rel=&quot;noreferrer&quot;&gt;https://jsfiddle.net/on1g619L/1/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I found it troubling that there wasn&apos;t a &lt;a href=&quot;https://en.wikipedia.org/wiki/JQuery&quot; rel=&quot;noreferrer&quot;&gt;jQuery&lt;/a&gt;-centric version of the functionality available. When I came across &lt;a href=&quot;https://stackoverflow.com/a/7557433/2401804&quot;&gt;Dan&apos;s solution&lt;/a&gt; I spied the opportunity to provide something for folks who like to program in the jQuery OO style. It&apos;s nice and snappy and works like a charm for me.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Bada bing bada boom&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.fn.&lt;span class=&quot;hljs-property&quot;&gt;inView&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt;= (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;) &amp;amp;&amp;amp;\n        rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt;= (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;)\n    );\n\n};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Additional examples for other use cases&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Is true false whether an array of elements are all in view&lt;/span&gt;\n$.fn.&lt;span class=&quot;hljs-property&quot;&gt;allInView&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; all = [];\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        all.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;( $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;inView&lt;/span&gt;() );\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; all.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n};\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Only the class elements in view&lt;/span&gt;\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.some-class&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;inView&lt;/span&gt;();\n});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Only the class elements not in view&lt;/span&gt;\n$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.some-class&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !$(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;inView&lt;/span&gt;();\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;scroll&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;footer&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;inView&lt;/span&gt;() ) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do cool stuff&lt;/span&gt;\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API&quot; rel=&quot;noreferrer&quot;&gt;Intersection Observer API&lt;/a&gt; addresses this question very directly.&lt;/p&gt;\n\n&lt;p&gt;This solution will need a polyfill as Safari, Opera and Internet&amp;nbsp;Explorer don&apos;t support this yet (the polyfill is included in the solution).&lt;/p&gt;\n\n&lt;p&gt;In this solution, there is a box out of view that is the target (observed). When it comes into view, the button at the top in the header is hidden. It is shown once the box leaves the view.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; buttonToHide = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;button&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; hideWhenBoxInView = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IntersectionObserver&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;entries&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (entries[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;intersectionRatio&lt;/span&gt; &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// If not in view&lt;/span&gt;\n    buttonToHide.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;display&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;inherit&quot;&lt;/span&gt;;\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    buttonToHide.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;display&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;none&quot;&lt;/span&gt;;\n  }\n});\n\nhideWhenBoxInView.&lt;span class=&quot;hljs-title function_&quot;&gt;observe&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;box&apos;&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;header&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: fixed;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100vw&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: lightgreen;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.wrapper&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;600px&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#box&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;175px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;135px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: lightblue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2px&lt;/span&gt; solid;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://polyfill.io/v2/polyfill.min.js?features=IntersectionObserver&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;NAVIGATION BUTTON TO HIDE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;The simplest solution&lt;/strong&gt; as the support of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect&quot; rel=&quot;noreferrer&quot;&gt;Element.getBoundingClientRect()&lt;/a&gt; has &lt;a href=&quot;https://caniuse.com/#search=getBoundingClientRect&quot; rel=&quot;noreferrer&quot;&gt;become perfect&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isInView&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; box = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; box.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; &amp;amp;&amp;amp; box.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;All answers I&apos;ve encountered here only check if the element is &lt;strong&gt;positioned inside the current viewport&lt;/strong&gt;. But that &lt;strong&gt;doesn&apos;t mean that it is visible&lt;/strong&gt;.&lt;br&gt;\nWhat if the given element is inside a div with overflowing content, and it is scrolled out of view?&lt;/p&gt;\n\n&lt;p&gt;To solve that, you&apos;d have to check if the element is contained by all parents.&lt;br&gt;\nMy solution does exactly that:&lt;/p&gt;\n\n&lt;p&gt;It also allows you to specify how much of the element has to be visible.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Element&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isVisible&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;percentX, percentY&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tolerance = &lt;span class=&quot;hljs-number&quot;&gt;0.01&lt;/span&gt;;   &lt;span class=&quot;hljs-comment&quot;&gt;//needed because the rects returned by getBoundingClientRect provide the position up to 10 decimals&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(percentX == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){\n        percentX = &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(percentY == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){\n        percentY = &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elementRect = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parentRects = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; element = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(element.&lt;span class=&quot;hljs-property&quot;&gt;parentElement&lt;/span&gt; != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){\n        parentRects.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(element.&lt;span class=&quot;hljs-property&quot;&gt;parentElement&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;());\n        element = element.&lt;span class=&quot;hljs-property&quot;&gt;parentElement&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; visibleInAllParents = parentRects.&lt;span class=&quot;hljs-title function_&quot;&gt;every&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;parentRect&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; visiblePixelX = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;min&lt;/span&gt;(elementRect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;, parentRect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;) - &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;max&lt;/span&gt;(elementRect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;, parentRect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; visiblePixelY = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;min&lt;/span&gt;(elementRect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;, parentRect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) - &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;max&lt;/span&gt;(elementRect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;, parentRect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; visiblePercentageX = visiblePixelX / elementRect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; visiblePercentageY = visiblePixelY / elementRect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; visiblePercentageX + tolerance &amp;gt; percentX &amp;amp;&amp;amp; visiblePercentageY + tolerance &amp;gt; percentY;\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; visibleInAllParents;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This solution ignored the fact that elements may not be visible due to other facts, like &lt;code&gt;opacity: 0&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;I have tested this solution in Chrome and Internet Explorer 11.&lt;/p&gt;\n    ","\n&lt;p&gt;I find that the accepted answer here is overly complicated for most use cases. This code does the job well (using jQuery) and differentiates between fully visible and partially visible elements:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; element         = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#element&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; topOfElement    = element.&lt;span class=&quot;hljs-title function_&quot;&gt;offset&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bottomOfElement = element.&lt;span class=&quot;hljs-title function_&quot;&gt;offset&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + element.&lt;span class=&quot;hljs-title function_&quot;&gt;outerHeight&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $window         = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;);\n\n$window.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;scroll&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; scrollTopPosition   = $window.&lt;span class=&quot;hljs-title function_&quot;&gt;scrollTop&lt;/span&gt;()+$window.&lt;span class=&quot;hljs-title function_&quot;&gt;height&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; windowScrollTop     = $window.&lt;span class=&quot;hljs-title function_&quot;&gt;scrollTop&lt;/span&gt;()\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (windowScrollTop &amp;gt; topOfElement &amp;amp;&amp;amp; windowScrollTop &amp;lt; bottomOfElement) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Element is partially visible (above viewable area)&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Element is partially visible (above viewable area)&quot;&lt;/span&gt;);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (windowScrollTop &amp;gt; bottomOfElement &amp;amp;&amp;amp; windowScrollTop &amp;gt; topOfElement) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Element is hidden (above viewable area)&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Element is hidden (above viewable area)&quot;&lt;/span&gt;);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (scrollTopPosition &amp;lt; topOfElement &amp;amp;&amp;amp; scrollTopPosition &amp;lt; bottomOfElement) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Element is hidden (below viewable area)&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Element is hidden (below viewable area)&quot;&lt;/span&gt;);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (scrollTopPosition &amp;lt; bottomOfElement &amp;amp;&amp;amp; scrollTopPosition &amp;gt; topOfElement) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Element is partially visible (below viewable area)&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Element is partially visible (below viewable area)&quot;&lt;/span&gt;);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Element is completely visible&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Element is completely visible&quot;&lt;/span&gt;);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I think this is a more functional way to do it.\n&lt;a href=&quot;https://stackoverflow.com/questions/123999/how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433&quot;&gt;Dan&apos;s answer&lt;/a&gt; do not work in a recursive context.&lt;/p&gt;\n\n&lt;p&gt;This function solves the problem when your element is inside others scrollable divs by testing any levels recursively up to the HTML tag, and stops at the first false.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * fullVisible=true only returns true if the all object rect is visible\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isReallyVisible&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el, fullVisible&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( el.&lt;span class=&quot;hljs-property&quot;&gt;tagName&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&quot;HTML&quot;&lt;/span&gt; )\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parentRect=el.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] || el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n            ( fullVisible ? rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;    &amp;gt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;    : rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;gt; parentRect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; ) &amp;amp;&amp;amp;\n            ( fullVisible ? rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;   &amp;gt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;   : rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;  &amp;gt; parentRect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; ) &amp;amp;&amp;amp;\n            ( fullVisible ? rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; : rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;    &amp;lt; parentRect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; ) &amp;amp;&amp;amp;\n            ( fullVisible ? rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;  &amp;lt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;  : rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;   &amp;lt; parentRect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; ) &amp;amp;&amp;amp;\n            &lt;span class=&quot;hljs-title function_&quot;&gt;isReallyVisible&lt;/span&gt;(el.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;, fullVisible, rect)\n    );\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s my solution. It will work if an element is hidden inside a scrollable container.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/W33YR/3/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Here&apos;s a demo&lt;/a&gt; (try re-sizing the window to)&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; visibleY = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; top = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;, rect, el = el.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; {\n        rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (top &amp;lt;= rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        el = el.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (el != &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Check it&apos;s within the document viewport&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; top &amp;lt;= &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I only needed to check if it&apos;s visible in the Y axis (for a scrolling Ajax load-more-records feature).&lt;/p&gt;\n    ","\n&lt;p&gt;The most accepted answers don&apos;t work when zooming in Google Chrome on Android. In combination with &lt;a href=&quot;https://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433&quot;&gt;Dan&apos;s answer&lt;/a&gt;, to account for Chrome on Android, &lt;a href=&quot;https://developers.google.com/web/updates/2017/09/visual-viewport-api&quot; rel=&quot;nofollow noreferrer&quot;&gt;visualViewport&lt;/a&gt; must be used. The following example only takes the vertical check into account and uses jQuery for the window height:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rect&lt;/span&gt; = &lt;span class=&quot;hljs-variable constant_&quot;&gt;YOUR_ELEMENT&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ElTop&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;Rect&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;ElBottom&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;Rect&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;WindowHeight&lt;/span&gt; = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;height&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;visualViewport&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title class_&quot;&gt;ElTop&lt;/span&gt; -= &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;visualViewport&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;offsetTop&lt;/span&gt;;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;ElBottom&lt;/span&gt; -= &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;visualViewport&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;offsetTop&lt;/span&gt;;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;WindowHeight&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;visualViewport&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;WithinScreen&lt;/span&gt; = (&lt;span class=&quot;hljs-title class_&quot;&gt;ElTop&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-title class_&quot;&gt;ElBottom&lt;/span&gt; &amp;lt;= &lt;span class=&quot;hljs-title class_&quot;&gt;WindowHeight&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Based on &lt;a href=&quot;https://stackoverflow.com/questions/123999/how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433&quot;&gt;dan&apos;s solution&lt;/a&gt;, I had a go at cleaning up the implementation so that using it multiple times on the same page is easier:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n  $(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;load resize scroll&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;addClassToElementInViewport&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.bug-icon&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;animate-bug-icon&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;addClassToElementInViewport&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.another-thing&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;animate-thing&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//  repeat as needed ...&lt;/span&gt;\n  });\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addClassToElementInViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element, newClass&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;inViewport&lt;/span&gt;(element)) {\n      element.&lt;span class=&quot;hljs-title function_&quot;&gt;addClass&lt;/span&gt;(newClass);\n    }\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;inViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jQuery === &lt;span class=&quot;hljs-string&quot;&gt;&quot;function&quot;&lt;/span&gt; &amp;amp;&amp;amp; element &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery) {\n      element = element[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elementBounds = element.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n      elementBounds.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n      elementBounds.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;\n      elementBounds.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt;= $(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;height&lt;/span&gt;() &amp;amp;&amp;amp;\n      elementBounds.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt;= $(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;width&lt;/span&gt;()\n    );\n  }\n\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The way I&apos;m using it is that when the element scrolls into view, I&apos;m adding a class that triggers a CSS keyframe animation. It&apos;s pretty straightforward and works especially well when you&apos;ve got like 10+ things to conditionally animate on a page.&lt;/p&gt;\n    ","\n&lt;p&gt;Most of the usages in previous answers are failing at these points:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;-When any pixel of an element is visible, but not &quot;&lt;strong&gt;a corner&lt;/strong&gt;&quot;,&lt;/p&gt;\n  \n  &lt;p&gt;-When an element is &lt;strong&gt;bigger than viewport and centered&lt;/strong&gt;,&lt;/p&gt;\n  \n  &lt;p&gt;-Most of them are checking only for a singular element &lt;strong&gt;inside a document or window&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Well, for all these problems I&apos;ve a solution and the plus sides are:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;-You can return &lt;code&gt;visible&lt;/code&gt; when only a pixel from any sides shows up and is not a corner,&lt;/p&gt;\n  \n  &lt;p&gt;-You can still return &lt;code&gt;visible&lt;/code&gt; while element bigger than viewport,&lt;/p&gt;\n  \n  &lt;p&gt;-You can choose your &lt;code&gt;parent element&lt;/code&gt; or you can automatically let it choose,&lt;/p&gt;\n  \n  &lt;p&gt;-Works on &lt;strong&gt;dynamically added elements&lt;/strong&gt; too.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If you check the snippets below you will see the difference in using &lt;code&gt;overflow-scroll&lt;/code&gt; in element&apos;s container will not cause any trouble and see that &lt;strong&gt;&lt;em&gt;unlike other answers here&lt;/em&gt;&lt;/strong&gt; even if a pixel shows up from &lt;strong&gt;&lt;em&gt;any side&lt;/em&gt;&lt;/strong&gt; or when an element is bigger than viewport and we are seeing &lt;strong&gt;&lt;em&gt;inner pixels of the element&lt;/em&gt;&lt;/strong&gt; it still works.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Usage is simple:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// For checking element visibility from any sides&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(element)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// For checking elements visibility in a parent you would like to check&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parent = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Assuming you check if &apos;element&apos; inside &apos;document&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(element, parent)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// For checking elements visibility even if it&apos;s bigger than viewport&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(element, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// Without parent choice&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(element, parent, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// With parent choice&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;A demonstration without &lt;code&gt;crossSearchAlgorithm&lt;/code&gt; which is usefull for elements bigger than viewport check element3 inner pixels to see:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element, parent, crossSearchAlgorithm&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = element.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;(),\n            prect = (parent != &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) ? parent.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;() : element.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;(),\n        csa = (crossSearchAlgorithm != &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) ? crossSearchAlgorithm : &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        efp = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;x, y&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;elementFromPoint&lt;/span&gt;(x, y) };\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return false if it&apos;s not in the viewport&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt; prect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt; prect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt; prect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt; prect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; flag = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return true if left to right any border pixel reached&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;; x &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;; x++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;, x)) || element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;, x))) {\n        flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n      }\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return true if top to bottom any border pixel reached&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; y = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;; y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;; y++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;, y)) || element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;, y))) {\n          flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n      }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(csa) {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// Another algorithm to check if element is centered and bigger than viewport&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; y = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// From top left to bottom right&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(x &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; || y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(x,y))) {\n            flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n          }\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(x &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;) { x++; }\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) { y++; }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n          x = rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;;\n          y = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n          &lt;span class=&quot;hljs-comment&quot;&gt;// From top right to bottom left&lt;/span&gt;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(x &amp;gt; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; || y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(x,y))) {\n              flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n              &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(x &amp;gt; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;) { x--; }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) { y++; }\n          }\n        }\n      }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; flag;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Check multiple elements visibility&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;container&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;scroll&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elementList = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;console&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; elementList.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// I did not define parent, so it will be element&apos;s parent&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(elementList[i])) {\n          &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Element with id[&quot;&lt;/span&gt; + elementList[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;] is visible!&quot;&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Element with id[&quot;&lt;/span&gt; + elementList[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;] is hidden!&quot;&lt;/span&gt;;\n    }\n  }\n});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Dynamically added elements&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;; i++) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newElement = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;div&quot;&lt;/span&gt;);\n  newElement.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt; + i;\n  newElement.&lt;span class=&quot;hljs-property&quot;&gt;classList&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;container&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(newElement);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#console&lt;/span&gt; { &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: yellow; }\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;300px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: lightblue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow-y&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;45px&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.element&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;320px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: green;\n}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#element3&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;40px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;720px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;520px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: green;\n}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#element3&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;740px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;540px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt; dotted green;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: transparent;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;console&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element1&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element2&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element3&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;You see, when you are &lt;strong&gt;inside the element3&lt;/strong&gt; it fails to tell if it&apos;s visible or not, because we are only checking if the element is visible from &lt;strong&gt;sides&lt;/strong&gt; or &lt;strong&gt;corners&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;And this one includes &lt;code&gt;crossSearchAlgorithm&lt;/code&gt; which allows you to still return &lt;code&gt;visible&lt;/code&gt; when the element is bigger than the viewport:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element, parent, crossSearchAlgorithm&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rect = element.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;(),\n            prect = (parent != &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) ? parent.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;() : element.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;(),\n        csa = (crossSearchAlgorithm != &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) ? crossSearchAlgorithm : &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n        efp = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;x, y&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;elementFromPoint&lt;/span&gt;(x, y) };\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return false if it&apos;s not in the viewport&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt; prect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt; prect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt; prect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; || rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt; prect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; flag = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return true if left to right any border pixel reached&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;; x &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;; x++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;, x)) || element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;, x))) {\n        flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n      }\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return true if top to bottom any border pixel reached&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; y = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;; y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;; y++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;, y)) || element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;, y))) {\n          flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n      }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(csa) {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// Another algorithm to check if element is centered and bigger than viewport&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; y = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// From top left to bottom right&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(x &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; || y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(x,y))) {\n            flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n          }\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(x &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;) { x++; }\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) { y++; }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n          x = rect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;;\n          y = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n          &lt;span class=&quot;hljs-comment&quot;&gt;// From top right to bottom left&lt;/span&gt;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(x &amp;gt; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; || y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;hljs-title function_&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;efp&lt;/span&gt;(x,y))) {\n              flag = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n              &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(x &amp;gt; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;) { x--; }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(y &amp;lt; rect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;) { y++; }\n          }\n        }\n      }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; flag;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Check multiple elements visibility&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;container&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;scroll&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elementList = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;console&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; elementList.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// I did not define parent so it will be element&apos;s parent&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// and it will do crossSearchAlgorithm&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(elementList[i],&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)) {\n          &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Element with id[&quot;&lt;/span&gt; + elementList[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;] is visible!&quot;&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Element with id[&quot;&lt;/span&gt; + elementList[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;] is hidden!&quot;&lt;/span&gt;;\n    }\n  }\n});\n&lt;span class=&quot;hljs-comment&quot;&gt;// Dynamically added elements&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;; i++) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newElement = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;div&quot;&lt;/span&gt;);\n  newElement.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt; + i;\n  newElement.&lt;span class=&quot;hljs-property&quot;&gt;classList&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;container&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;appendChild&lt;/span&gt;(newElement);\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-id&quot;&gt;#console&lt;/span&gt; { &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: yellow; }\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;300px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: lightblue;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;overflow-y&lt;/span&gt;: auto;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;150px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;45px&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.element&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;400px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;320px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: green;\n}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#element3&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: relative;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;40px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;720px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;520px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background-color&lt;/span&gt;: green;\n}\n&lt;span class=&quot;hljs-selector-id&quot;&gt;#element3&lt;/span&gt;&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;::before&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;position&lt;/span&gt;: absolute;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;left&lt;/span&gt;: -&lt;span class=&quot;hljs-number&quot;&gt;10px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;740px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;540px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5px&lt;/span&gt; dotted green;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: transparent;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;console&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element1&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element2&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element3&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;element&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;JSFiddle to play with: &lt;a href=&quot;http://jsfiddle.net/BerkerYuceer/grk5az2c/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://jsfiddle.net/BerkerYuceer/grk5az2c/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This code is made for more precise information if any part of the element is shown in the view or not. For performance options or only vertical slides, do not use this! This code is more effective in drawing cases.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a function that tells if an element is in visible in the current viewport of a &lt;strong&gt;parent&lt;/strong&gt; element:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;inParentViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el, pa&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; jQuery === &lt;span class=&quot;hljs-string&quot;&gt;&quot;function&quot;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (el &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery)\n            el = el[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (pa &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; jQuery)\n            pa = pa[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; e = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p = pa.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n        e.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;gt;= p.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;amp;&amp;amp;\n        e.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;gt;= p.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;amp;&amp;amp;\n        e.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt;= p.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;amp;&amp;amp;\n        e.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt;= p.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;\n    );\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A better solution:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;function getViewportSize(w) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; w = w || window;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(w.innerWidth != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {w:w.innerWidth, h:w.innerHeight};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = w.document;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (document.compatMode == &lt;span class=&quot;hljs-string&quot;&gt;&quot;CSS1Compat&quot;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n            w: d.documentElement.clientWidth,\n            h: d.documentElement.clientHeight\n        };\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; { w: d.body.clientWidth, h: d.body.clientWidth };\n}\n\n\nfunction isViewportVisible(e) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; box = e.getBoundingClientRect();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; height = box.height || (box.bottom - box.top);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; width = box.width || (box.right - box.left);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; viewport = getViewportSize();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!height || !width)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(box.top &amp;gt; viewport.h || box.bottom &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(box.right &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || box.left &amp;gt; viewport.w)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I had the same question and figured it out by using getBoundingClientRect().&lt;/p&gt;\n\n&lt;p&gt;This code is completely &apos;generic&apos; and only has to be written once for it to work (you don&apos;t have to write it out for each element that you want to know is in the viewport).&lt;/p&gt;\n\n&lt;p&gt;This code only checks to see if it is vertically in the viewport, &lt;strong&gt;not horizontally&lt;/strong&gt;. In this case, the variable (array) &apos;elements&apos; holds all the elements that you are checking to be vertically in the viewport, so grab any elements you want anywhere and store them there.&lt;/p&gt;\n\n&lt;p&gt;The &apos;for loop&apos;, loops through each element and checks to see if it is vertically in the viewport. This code executes &lt;strong&gt;every time&lt;/strong&gt; the user scrolls! If the getBoudingClientRect().top is less than 3/4 the viewport (the element is one quarter in the viewport), it registers as &apos;in the viewport&apos;.&lt;/p&gt;\n\n&lt;p&gt;Since the code is generic, you will want to know &apos;which&apos; element is in the viewport. To find that out, you can determine it by custom attribute, node name, id, class name, and more.&lt;/p&gt;\n\n&lt;p&gt;Here is my code (tell me if it doesn&apos;t work; it has been tested in Internet&amp;nbsp;Explorer&amp;nbsp;11, Firefox 40.0.3, Chrome Version 45.0.2454.85 m, Opera 31.0.1889.174, and Edge with Windows 10, [not Safari yet])...&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Scrolling handlers...&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onscroll&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elements = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;whatever&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;getElementsByClassName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;whatever&apos;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i != elements.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n  {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(elements[i].&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt;= &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt;*&lt;span class=&quot;hljs-number&quot;&gt;0.75&lt;/span&gt; &amp;amp;&amp;amp;\n      elements[i].&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n   {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(elements[i].&lt;span class=&quot;hljs-property&quot;&gt;nodeName&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; +\n                  elements[i].&lt;span class=&quot;hljs-property&quot;&gt;className&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; +\n                  elements[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; +\n                  &lt;span class=&quot;hljs-string&quot;&gt;&apos; is in the viewport; proceed with whatever code you want to do here.&apos;&lt;/span&gt;);\n   }\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As simple as it can get, IMO:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isVisible&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;elem&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; coords = elem.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;abs&lt;/span&gt;(coords.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;) &amp;lt;= coords.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This checks if an element is at least partially in view (vertical dimension):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;inView&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; box = element.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;inViewBox&lt;/span&gt;(box);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;inViewBox&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;box&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ((box.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) || (box.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getWindowSize&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;h&lt;/span&gt;)) ? &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getWindowSize&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;w&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;offsetWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;offsetWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;h&lt;/span&gt;: &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;body&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;offsetHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;offsetHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt;}\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is the easy and small solution that has worked for me.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: You want to see if the element is visible in the parent element that has overflow scroll.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;scroll&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; container = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#sidebar&apos;&lt;/span&gt;);\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; containerHeight = container.&lt;span class=&quot;hljs-title function_&quot;&gt;height&lt;/span&gt;();\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; scrollPosition = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#row1&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;offset&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; - container.&lt;span class=&quot;hljs-title function_&quot;&gt;offset&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (containerHeight &amp;lt; scrollPosition) {\n         &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;not visible&apos;&lt;/span&gt;);\n     } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n         &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;visible&apos;&lt;/span&gt;);\n     }\n})\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;All the answers here are determining if the element is fully contained within the viewport, not just visible in some way. For example, if only half of an image is visible at the bottom of the view, the solutions here will fail, considering that &quot;outside&quot;.&lt;/p&gt;\n\n&lt;p&gt;I had a use case where I&apos;m doing lazy loading via &lt;code&gt;IntersectionObserver&lt;/code&gt;, but due to animations that occur during pop-in, I didn&apos;t want to observe any images that were &lt;em&gt;already&lt;/em&gt; intersected on page load. To do that, I used the following code:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; bounding = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; isVisible = (&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;lt; bounding.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;amp;&amp;amp; bounding.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;)) ||\n        (&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;lt; bounding.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;amp;&amp;amp; bounding.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is basically checking to see if either the top or bottom bound is independently in the viewport. The opposite end may be outside, but as long as one end is in, it&apos;s &quot;visible&quot; at least partially.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/E8ETh.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/E8ETh.png&quot; alt=&quot;ViewportInfo&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Returns Element placement information in Viewport\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@link&lt;/span&gt; https://stackoverflow.com/a/70476497/2453148\n *\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@typedef&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;object&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;ViewportInfo&lt;/span&gt; - Whether the element is\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isInViewport&lt;/span&gt; - fully or partially in the viewport\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isPartiallyInViewport&lt;/span&gt; - partially in the viewport\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isInsideViewport&lt;/span&gt; - fully inside viewport\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isAroundViewport&lt;/span&gt; - completely covers the viewport\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isOnEdge&lt;/span&gt; - intersects the edge of viewport\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isOnTopEdge&lt;/span&gt; - intersects the top edge\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isOnRightEdge&lt;/span&gt; - intersects the right edge\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isOnBottomEdge&lt;/span&gt; - is intersects the bottom edge\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@property&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;isOnLeftEdge&lt;/span&gt; - is intersects the left edge\n *\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; el Element\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@return&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;ViewportInfo&lt;/span&gt;\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getElementViewportInfo&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; result = {};\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; rect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; windowHeight = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; windowWidth  = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerWidth&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;documentElement&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; insideX = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; &amp;lt;= windowWidth;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; insideY = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; &amp;lt;= windowHeight;\n\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isInsideViewport&lt;/span&gt; = insideX &amp;amp;&amp;amp; insideY;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; aroundX = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; &amp;gt; windowWidth;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; aroundY = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; &amp;gt; windowHeight;\n\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isAroundViewport&lt;/span&gt; = aroundX &amp;amp;&amp;amp; aroundY;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; onTop    = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; onRight  = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt; windowWidth &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; &amp;gt; windowWidth;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; onLeft   = rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; onBottom = rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; windowHeight &amp;amp;&amp;amp; rect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + rect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; &amp;gt; windowHeight;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; onY = insideY || aroundY || onTop || onBottom;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; onX = insideX || aroundX || onLeft || onRight;\n\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isOnTopEdge&lt;/span&gt;    = onTop &amp;amp;&amp;amp; onX;\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isOnRightEdge&lt;/span&gt;  = onRight &amp;amp;&amp;amp; onY;\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isOnBottomEdge&lt;/span&gt; = onBottom &amp;amp;&amp;amp; onX;\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isOnLeftEdge&lt;/span&gt;   = onLeft &amp;amp;&amp;amp; onY;\n\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isOnEdge&lt;/span&gt; = result.&lt;span class=&quot;hljs-property&quot;&gt;isOnLeftEdge&lt;/span&gt; || result.&lt;span class=&quot;hljs-property&quot;&gt;isOnRightEdge&lt;/span&gt; ||\n        result.&lt;span class=&quot;hljs-property&quot;&gt;isOnTopEdge&lt;/span&gt; || result.&lt;span class=&quot;hljs-property&quot;&gt;isOnBottomEdge&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; isInX =\n        insideX || aroundX || result.&lt;span class=&quot;hljs-property&quot;&gt;isOnLeftEdge&lt;/span&gt; || result.&lt;span class=&quot;hljs-property&quot;&gt;isOnRightEdge&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; isInY =\n        insideY || aroundY || result.&lt;span class=&quot;hljs-property&quot;&gt;isOnTopEdge&lt;/span&gt; || result.&lt;span class=&quot;hljs-property&quot;&gt;isOnBottomEdge&lt;/span&gt;;\n\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isInViewport&lt;/span&gt; = isInX &amp;amp;&amp;amp; isInY;\n\n    result.&lt;span class=&quot;hljs-property&quot;&gt;isPartiallyInViewport&lt;/span&gt; =\n        result.&lt;span class=&quot;hljs-property&quot;&gt;isInViewport&lt;/span&gt; &amp;amp;&amp;amp; result.&lt;span class=&quot;hljs-property&quot;&gt;isOnEdge&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use this function (it only checks if the y is inscreen since most of the time the x is not needed)  &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;elementInViewport&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; elinfo = {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;:el.&lt;span class=&quot;hljs-property&quot;&gt;offsetTop&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;height&quot;&lt;/span&gt;:el.&lt;span class=&quot;hljs-property&quot;&gt;offsetHeight&lt;/span&gt;,\n    };\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (elinfo.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + elinfo.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageYOffset&lt;/span&gt; || elinfo.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageYOffset&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHeight&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a snippet to check if the given element is fully visible in its parent:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;visibleInParentViewport&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; elementRect = el.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; parentRect = el.&lt;span class=&quot;hljs-property&quot;&gt;parentNode&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n    elementRect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;gt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;amp;&amp;amp;\n    elementRect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;gt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;amp;&amp;amp;\n    elementRect.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + elementRect.&lt;span class=&quot;hljs-property&quot;&gt;height&lt;/span&gt; &amp;lt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;amp;&amp;amp;\n    elementRect.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + elementRect.&lt;span class=&quot;hljs-property&quot;&gt;width&lt;/span&gt; &amp;lt;= parentRect.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;\n  );\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Domysee&apos;s answer &lt;a href=&quot;https://stackoverflow.com/a/37998526&quot;&gt;https://stackoverflow.com/a/37998526&lt;/a&gt; is close to correct.&lt;/p&gt;\n&lt;p&gt;Many examples use &quot;completely contained in the viewport&quot; and his code uses percentages to allow for partially visible.  His code also addresses the &quot;is a parent clipping the view&quot; question, which most examples ignore.&lt;/p&gt;\n&lt;p&gt;One missing element is the impact of the parent&apos;s scrollbars - &lt;code&gt;getBoundingClientRect&lt;/code&gt; returns the outer rectangle of the parent, which includes the scroll bars, not the inner rectangle, which doesn&apos;t.  A child can hide behind the parent scroll bar and be considered visible when it isn&apos;t.&lt;/p&gt;\n&lt;p&gt;The recommended observer pattern isn&apos;t appropriate for my use case: using the arrow keys to change the currently selected row in a table, and make sure the new selection is visible.  Using an observer for this would be excessively convoluted.&lt;/p&gt;\n&lt;p&gt;Here&apos;s some code -&lt;/p&gt;\n&lt;p&gt;it includes an additional hack (&lt;code&gt;fudgeY&lt;/code&gt;) because my table has a sticky header that isn&apos;t detectable by straightforward means (and handling this automatically would be pretty tedious).  Also, it uses decimal (0 to 1) instead of percentage for the required visible fraction.  (For my case I need full y, and x isn&apos;t relevant).&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;intersectRect&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;r1, r2&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r = {};\n    r.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; = r1.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt; r2.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; ? r2.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; : r1.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;;\n    r.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; = r1.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; r2.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; ? r2.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; : r1.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n    r.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; = r1.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;lt; r2.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; ? r1.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; : r2.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;;\n    r.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; = r1.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; &amp;lt; r2.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; ? r1.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; : r2.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (r.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; &amp;lt; r.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; &amp;amp;&amp;amp; r.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; &amp;lt; r.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;innerRect&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b,r;\n    b = e.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    r = {};\n    r.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; = b.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;;\n    r.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; = b.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;;\n    r.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt; = b.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt; + e.&lt;span class=&quot;hljs-property&quot;&gt;clientWidth&lt;/span&gt;;\n    r.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt; = b.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; + e.&lt;span class=&quot;hljs-property&quot;&gt;clientHeight&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isViewable&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e, fracX, fracY, fudgeY&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// ref https://stackoverflow.com/a/37998526&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// intersect all the rects and then check the result once&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// innerRect: mind the scroll bars&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// fudgeY: handle &quot;sticky&quot; thead in parent table.  Ugh.&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; r, pr, er;\n\n    er = e.&lt;span class=&quot;hljs-title function_&quot;&gt;getBoundingClientRect&lt;/span&gt;();\n    r = er;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (;;) {\n        e = e.&lt;span class=&quot;hljs-property&quot;&gt;parentElement&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!e)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        pr = &lt;span class=&quot;hljs-title function_&quot;&gt;innerRect&lt;/span&gt;(e);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fudgeY)\n            pr.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt; += fudgeY;\n        r = &lt;span class=&quot;hljs-title function_&quot;&gt;intersectRect&lt;/span&gt;(r, pr);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!r)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fracX &amp;amp;&amp;amp; ((r.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;-r.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;) / (er.&lt;span class=&quot;hljs-property&quot;&gt;right&lt;/span&gt;-er.&lt;span class=&quot;hljs-property&quot;&gt;left&lt;/span&gt;)) &amp;lt; (fracX-&lt;span class=&quot;hljs-number&quot;&gt;0.001&lt;/span&gt;))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fracY &amp;amp;&amp;amp; ((r.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;-r.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;) / (er.&lt;span class=&quot;hljs-property&quot;&gt;bottom&lt;/span&gt;-er.&lt;span class=&quot;hljs-property&quot;&gt;top&lt;/span&gt;)) &amp;lt; (fracY-&lt;span class=&quot;hljs-number&quot;&gt;0.001&lt;/span&gt;))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For a similar challenge, I really enjoyed &lt;a href=&quot;https://gist.github.com/hsablonniere/2581101&quot; rel=&quot;nofollow noreferrer&quot;&gt;this gist&lt;/a&gt; which exposes a polyfill for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoViewIfNeeded&quot; rel=&quot;nofollow noreferrer&quot;&gt;scrollIntoViewIfNeeded()&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;All the necessary Kung Fu needed to answer is within this block:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parent = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.parentNode,\n    parentComputedStyle = window.getComputedStyle(parent, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;),\n    parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue(&lt;span class=&quot;hljs-string&quot;&gt;&apos;border-top-width&apos;&lt;/span&gt;)),\n    parentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue(&lt;span class=&quot;hljs-string&quot;&gt;&apos;border-left-width&apos;&lt;/span&gt;)),\n    overTop = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.offsetTop - parent.offsetTop &amp;lt; parent.scrollTop,\n    overBottom = (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.offsetTop - parent.offsetTop + &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.clientHeight - parentBorderTopWidth) &amp;gt; (parent.scrollTop + parent.clientHeight),\n    overLeft = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.offsetLeft - parent.offsetLeft &amp;lt; parent.scrollLeft,\n    overRight = (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.offsetLeft - parent.offsetLeft + &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.clientWidth - parentBorderLeftWidth) &amp;gt; (parent.scrollLeft + parent.clientWidth),\n    alignWithTop = overTop &amp;amp;&amp;amp; !overBottom;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;this&lt;/code&gt; refers to the element that you want to know if it is, for example, &lt;code&gt;overTop&lt;/code&gt; or &lt;code&gt;overBottom&lt;/code&gt; - you just should get the drift...&lt;/p&gt;\n    "],"528":["\n&lt;p&gt;Parameters and local variables are allocated on the &lt;strong&gt;stack&lt;/strong&gt; (with reference types, the object lives on the &lt;strong&gt;heap&lt;/strong&gt; and a variable in the stack references that object on the heap). The stack typically lives at the &lt;strong&gt;upper&lt;/strong&gt; end of your address space and as it is used up it heads towards the &lt;strong&gt;bottom&lt;/strong&gt; of the address space (i.e. towards zero).&lt;/p&gt;\n\n&lt;p&gt;Your process also has a &lt;strong&gt;heap&lt;/strong&gt;, which lives at the &lt;strong&gt;bottom&lt;/strong&gt; end of your process. As you allocate memory, this heap can grow towards the upper end of your address space. As you can see, there is a potential for the heap to &lt;strong&gt;&quot;collide&quot;&lt;/strong&gt; with the stack (a bit like tectonic plates!!!).&lt;/p&gt;\n\n&lt;p&gt;The common cause for a stack overflow is a &lt;strong&gt;bad recursive call&lt;/strong&gt;. Typically, this is caused when your recursive functions doesn&apos;t have the correct termination condition, so it ends up calling itself forever. Or when the termination condition is fine, it can be caused by requiring too many recursive calls before fulfilling it.&lt;/p&gt;\n\n&lt;p&gt;However, with GUI programming, it&apos;s possible to generate &lt;strong&gt;indirect recursion&lt;/strong&gt;. For example, your app may be handling paint messages, and, whilst processing them, it may call a function that causes the system to send another paint message. Here you&apos;ve not explicitly called yourself, but the OS/VM has done it for you.&lt;/p&gt;\n\n&lt;p&gt;To deal with them, you&apos;ll need to examine your code. If you&apos;ve got functions that call themselves then check that you&apos;ve got a terminating condition. If you have, then check that when calling the function you have at least modified one of the arguments, otherwise there&apos;ll be no visible change for the recursively called function and the terminating condition is useless. Also mind that your stack space can run out of memory before reaching a valid terminating condition, thus make sure your method can handle input values requiring more recursive calls.&lt;/p&gt;\n\n&lt;p&gt;If you&apos;ve got no obvious recursive functions then check to see if you&apos;re calling any library functions that &lt;strong&gt;indirectly&lt;/strong&gt; will cause your function to be called (like the implicit case above).&lt;/p&gt;\n    ","\n&lt;p&gt;To describe this, first let us understand how &lt;strong&gt;local&lt;/strong&gt; variables and objects are stored.&lt;/p&gt;\n&lt;p&gt;Local variable are stored on the &lt;strong&gt;stack&lt;/strong&gt;:&lt;/p&gt;\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/SHTah.jpg&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/p&gt;\n&lt;p&gt;If you looked at the image you should be able to understand how things are working.&lt;/p&gt;\n&lt;p&gt;When a function call is invoked by a Java application, a stack frame is allocated on the call stack. The stack frame contains the parameters of the invoked method, its local parameters, and the return address of the method. The return address denotes the execution point from which, the program execution shall continue after the invoked method returns. If there is no space for a new stack frame then, the &lt;code&gt;StackOverflowError&lt;/code&gt; is thrown by the Java Virtual Machine (JVM).&lt;/p&gt;\n&lt;p&gt;The most common case that can possibly exhaust a Java applications stack is recursion. In recursion, a method invokes itself during its execution. Recursion is considered as a powerful general-purpose programming technique, but it must be used with caution, to avoid &lt;code&gt;StackOverflowError&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;An example of throwing a &lt;code&gt;StackOverflowError&lt;/code&gt; is shown below:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;StackOverflowErrorExample.java:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StackOverflowErrorExample&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;recursivePrint&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; num)&lt;/span&gt; {\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Number: &quot;&lt;/span&gt; + num);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (num == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            recursivePrint(++num);\n        }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n        StackOverflowErrorExample.recursivePrint(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In this example, we define a recursive method, called &lt;code&gt;recursivePrint&lt;/code&gt; that prints an integer and then, calls itself, with the next successive integer as an argument. The recursion ends until we pass in &lt;code&gt;0&lt;/code&gt; as a parameter. However, in our example, we passed in the parameter from 1 and its increasing followers, consequently, the recursion will never terminate.&lt;/p&gt;\n&lt;p&gt;A sample execution, using the &lt;code&gt;-Xss1M&lt;/code&gt; flag that specifies the size of the thread stack to equal to 1&amp;nbsp;MB, is shown below:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;Number: 1\nNumber: 2\nNumber: 3\n...\nNumber: 6262\nNumber: 6263\nNumber: 6264\nNumber: 6265\nNumber: 6266\nException in thread &quot;main&quot; java.lang.StackOverflowError\n        at java.io.PrintStream.write(PrintStream.java:480)\n        at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)\n        at sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:291)\n        at sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:104)\n        at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:185)\n        at java.io.PrintStream.write(PrintStream.java:527)\n        at java.io.PrintStream.print(PrintStream.java:669)\n        at java.io.PrintStream.println(PrintStream.java:806)\n        at StackOverflowErrorExample.recursivePrint(StackOverflowErrorExample.java:4)\n        at StackOverflowErrorExample.recursivePrint(StackOverflowErrorExample.java:9)\n        at StackOverflowErrorExample.recursivePrint(StackOverflowErrorExample.java:9)\n        at StackOverflowErrorExample.recursivePrint(StackOverflowErrorExample.java:9)\n        ...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Depending on the JVMs initial configuration, the results may differ, but eventually the &lt;code&gt;StackOverflowError&lt;/code&gt; shall be thrown. This example is a very good example of how recursion can cause problems, if not implemented with caution.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;How to deal with the StackOverflowError&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;The simplest solution is to carefully inspect the stack trace and\ndetect the repeating pattern of line numbers. These line numbers\nindicate the code being recursively called. Once you detect these\nlines, you must carefully inspect your code and understand why the\nrecursion never terminates.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If you have verified that the recursion\nis implemented correctly, you can increase the stacks size, in\norder to allow a larger number of invocations. Depending on the Java\nVirtual Machine (JVM) installed, the default thread stack size may\nequal to either &lt;strong&gt;512&amp;nbsp;KB, or 1&amp;nbsp;MB&lt;/strong&gt;. You can increase the thread stack\nsize using the &lt;code&gt;-Xss&lt;/code&gt; flag. This flag can be specified either via the\nprojects configuration, or via the command line. The format of the\n&lt;code&gt;-Xss&lt;/code&gt; argument is:\n&lt;code&gt;-Xss&amp;lt;size&amp;gt;[g|G|m|M|k|K]&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;If you have a function like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;// more stuff&lt;/span&gt;\n    foo();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then foo() will keep calling itself, getting deeper and deeper, and when the space used to keep track of what functions you&apos;re in is filled up, you get the stack overflow error.&lt;/p&gt;\n    ","\n&lt;p&gt;Stack overflow means exactly that: a stack overflows. Usually there&apos;s a one stack in the program that contains local-scope variables and addresses where to return when execution of a routine ends. That stack tends to be a fixed memory range somewhere in the memory, therefore it&apos;s limited how much it can contain values.&lt;/p&gt;\n\n&lt;p&gt;If the stack is empty you can&apos;t pop, if you do you&apos;ll get stack underflow error.&lt;/p&gt;\n\n&lt;p&gt;If the stack is full you can&apos;t push, if you do you&apos;ll get stack overflow error.&lt;/p&gt;\n\n&lt;p&gt;So stack overflow appears where you allocate too much into the stack. For instance, in the mentioned recursion.&lt;/p&gt;\n\n&lt;p&gt;Some implementations optimize out some forms of recursions. Tail recursion in particular. Tail recursive routines are form of routines where the recursive call appears as a final thing what the routine does. Such routine call gets simply reduced into a jump.&lt;/p&gt;\n\n&lt;p&gt;Some implementations go so far as implement their own stacks for recursion, therefore they allow the recursion to continue until the system runs out of memory.&lt;/p&gt;\n\n&lt;p&gt;Easiest thing you could try would be to increase your stack size if you can. If you can&apos;t do that though, the second best thing would be to look whether there&apos;s something that clearly causes the stack overflow. Try it by printing something before and after the call into routine. This helps you to find out the failing routine.&lt;/p&gt;\n    ","\n&lt;p&gt;A stack overflow is usually called by nesting function calls too deeply (especially easy when using recursion, i.e. a function that calls itself) or allocating a large amount of memory on the stack where using the heap would be more appropriate.&lt;/p&gt;\n    ","\n&lt;p&gt;Like you say, you need to show some code. :-)&lt;/p&gt;\n\n&lt;p&gt;A stack overflow error usually happens when your function calls nest too deeply. See the &lt;a href=&quot;https://stackoverflow.com/questions/62188/stack-overflow-code-golf-closed&quot;&gt;Stack Overflow Code Golf&lt;/a&gt; thread for some examples of how this happens (though in the case of that question, the answers intentionally cause stack overflow).&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;StackOverflowError&lt;/code&gt; is to the stack as &lt;code&gt;OutOfMemoryError&lt;/code&gt; is to the heap.&lt;/p&gt;\n\n&lt;p&gt;Unbounded recursive calls result in stack space being used up. &lt;/p&gt;\n\n&lt;p&gt;The following example produces &lt;code&gt;StackOverflowError&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;  &lt;span class=&quot;hljs-title class_&quot;&gt;StackOverflowDemo&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unboundedRecursiveCall&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n     unboundedRecursiveCall();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; \n    {\n        unboundedRecursiveCall();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;StackOverflowError&lt;/code&gt; is avoidable if recursive calls are bounded to prevent the aggregate total of incomplete in-memory calls (in bytes) from exceeding the stack size (in bytes).&lt;/p&gt;\n    ","\n&lt;p&gt;The most common cause of stack overflows is &lt;strong&gt;excessively deep or infinite recursion&lt;/strong&gt;. If this is your problem, &lt;a href=&quot;http://danzig.jct.ac.il/java_class/recursion.html&quot; rel=&quot;noreferrer&quot;&gt;this tutorial about Java Recursion&lt;/a&gt; could help understand the problem.&lt;/p&gt;\n    ","\n&lt;p&gt;A &lt;code&gt;StackOverflowError&lt;/code&gt; is a runtime error in Java.&lt;/p&gt;\n&lt;p&gt;It is thrown when the amount of call stack memory allocated by the JVM is exceeded.&lt;/p&gt;\n&lt;p&gt;A common case of a &lt;code&gt;StackOverflowError&lt;/code&gt; being thrown, is when the call stack exceeds due to excessive deep or infinite recursion.&lt;/p&gt;\n&lt;p&gt;Example:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Factorial&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(n == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; n * factorial(n-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt;{\n         System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Main method started&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Factorial.factorial(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Factorial ==&amp;gt;&quot;&lt;/span&gt;+result);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Main method ended&quot;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Stack trace:&lt;/p&gt;\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;Main method started\nException in thread &quot;main&quot; java.lang.StackOverflowError\nat com.program.stackoverflow.Factorial.factorial(Factorial.java:9)\nat com.program.stackoverflow.Factorial.factorial(Factorial.java:9)\nat com.program.stackoverflow.Factorial.factorial(Factorial.java:9)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In the above case, it can be avoided by doing programmatic changes.\nBut if the program logic is correct and it still occurs then your stack size needs to be increased.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is an example of a recursive algorithm for reversing a singly linked list. On a laptop (with the specifications 4&amp;nbsp;GB memory, Intel &lt;a href=&quot;https://en.wikipedia.org/wiki/Intel_Core#Core_i5&quot; rel=&quot;nofollow noreferrer&quot;&gt;Core&amp;nbsp;i5&lt;/a&gt; 2.3&amp;nbsp;GHz CPU 64 bit and Windows 7), this function will run into StackOverflow error for a linked list of size close to 10,000.&lt;/p&gt;\n&lt;p&gt;My point is that we should use recursion judiciously, always taking into account of the scale of the system.&lt;/p&gt;\n&lt;p&gt;Often recursion can be converted to iterative program, which scales better. (One iterative version of the same algorithm is given at the bottom of the page. It reverses a singly linked list of size 1 million in 9 milliseconds.)&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; LinkedListNode &lt;span class=&quot;hljs-title function_&quot;&gt;doReverseRecursively&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(LinkedListNode x, LinkedListNode first)&lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-type&quot;&gt;LinkedListNode&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; first.next;\n\n    first.next = x;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(second != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; doReverseRecursively(first, second);\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; first;\n    }\n}\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; LinkedListNode &lt;span class=&quot;hljs-title function_&quot;&gt;reverseRecursively&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(LinkedListNode head)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; doReverseRecursively(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, head);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Iterative Version of the Same Algorithm:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; LinkedListNode &lt;span class=&quot;hljs-title function_&quot;&gt;reverseIteratively&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(LinkedListNode head)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; doReverseIteratively(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, head);\n}\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; LinkedListNode &lt;span class=&quot;hljs-title function_&quot;&gt;doReverseIteratively&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(LinkedListNode x, LinkedListNode first)&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (first != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-type&quot;&gt;LinkedListNode&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; first.next;\n        first.next = x;\n        x = first;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (second == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            first = second;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; first;\n}\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; LinkedListNode &lt;span class=&quot;hljs-title function_&quot;&gt;reverseIteratively&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(LinkedListNode head)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; doReverseIteratively(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, head);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The stack has a space limit that depends on the operating system. The normal size is 8&amp;nbsp;MB (in &lt;a href=&quot;https://en.wikipedia.org/wiki/Ubuntu_%28operating_system%29&quot; rel=&quot;nofollow noreferrer&quot;&gt;Ubuntu&lt;/a&gt; (Linux), you can check that limit with &lt;code&gt;$ ulimit -u&lt;/code&gt; and it can be checked in other OS similarly). Any program makes use of the stack at runtime, but to fully know when it is used you need to check the assembly language. In x86_64 for example, the stack is used to:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Save the return address when making a procedure call&lt;/li&gt;\n&lt;li&gt;Save local variables&lt;/li&gt;\n&lt;li&gt;Save special registers to restore them later&lt;/li&gt;\n&lt;li&gt;Pass arguments to a procedure call (more than 6)&lt;/li&gt;\n&lt;li&gt;Other: random unused stack base, canary values, padding, ... etc.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;If you don&apos;t know x86_64 (normal case) you only need to know when the specific high-level programming language you are using compile to those actions. For example in C:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;(1)  a function call&lt;/li&gt;\n&lt;li&gt;(2)  local variables in function calls (including main)&lt;/li&gt;\n&lt;li&gt;(3)  local variables in function calls (not main)&lt;/li&gt;\n&lt;li&gt;(4)  a function call&lt;/li&gt;\n&lt;li&gt;(5)  normally a function call, it is generally irrelevant for a stack overflow.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;So, in C, &lt;strong&gt;only local variables and function calls make use of the stack&lt;/strong&gt;. The two (unique?) ways of making a stack overflow are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Declaring too large local variables in main or in any function that it&apos;s called in (&lt;code&gt;int array[10000][10000];&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;A very deep or infinite recursion (too many function calls at the same time).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;To avoid a &lt;code&gt;StackOverflowError&lt;/code&gt; you can:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;check if local variables are too big (order of 1 MB)  use the heap (malloc/calloc calls) or global variables.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;check for infinite recursion  you know what to do... correct it!&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;check for normal too deep recursion  the easiest approach is to just change the implementation to be iterative.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Notice also that global variables, include libraries, etc... don&apos;t make use of the stack.&lt;/p&gt;\n&lt;p&gt;Only if the above does not work, change the stack size to the maximum on the specific OS. With Ubuntu for example: &lt;code&gt;ulimit -s 32768&lt;/code&gt; (32 MB). (This has never been the solution for any of my stack overflow errors, but I also don&apos;t have much experience.)&lt;/p&gt;\n&lt;p&gt;I have omitted special and/or not standard cases in C (such as usage of &lt;code&gt;alloc()&lt;/code&gt; and similar) because if you are using them you should already know exactly what you are doing.&lt;/p&gt;\n    ","\n&lt;p&gt;In a crunch, the below situation will bring a stack overflow error.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Example3&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n\n        main(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A simple Java example that causes java.lang.StackOverflowError because of a bad recursive call:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Human&lt;/span&gt; {\n    Human(){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Animal&lt;/span&gt;();\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Human&lt;/span&gt; {\n    Animal(){\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;();\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Test01&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Animal&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s an example&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n    System.out.println(add5(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;add5&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; a)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; add5(a) + &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A StackOverflowError basically is when you try to do something, that most likely calls itself, and goes on for infinity (or until it gives a StackOverflowError).&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;add5(a)&lt;/code&gt; will call itself, and then call itself again, and so on.&lt;/p&gt;\n    ","\n&lt;p&gt;This is a typical case of &lt;code&gt;java.lang.StackOverflowError&lt;/code&gt;... The method is recursively calling itself with no exit in &lt;code&gt;doubleValue()&lt;/code&gt;, &lt;code&gt;floatValue()&lt;/code&gt;, etc.&lt;/p&gt;\n&lt;h3&gt;File &lt;em&gt;Rational.java&lt;/em&gt;&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparable&lt;/span&gt;&amp;lt;Rational&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; num;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; denom;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Rational&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; num, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; denom)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.num = num;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.denom = denom;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Rational r)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((num / denom) - (r.num / r.denom) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; +&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((num / denom) - (r.num / r.denom) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Rational &lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Rational r)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(num + r.num, denom + r.denom);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Rational &lt;span class=&quot;hljs-title function_&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Rational r)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(num - r.num, denom - r.denom);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Rational &lt;span class=&quot;hljs-title function_&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Rational r)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(num * r.num, denom * r.denom);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Rational &lt;span class=&quot;hljs-title function_&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Rational r)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(num * r.denom, denom * r.num);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Rational r)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (i != &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n            i = denom % r.denom;\n            denom = r.denom;\n            r.denom = i;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; denom;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; num + &lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt; + denom;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doubleValue&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt;) doubleValue();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt;) floatValue();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;intValue&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;) intValue();\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;longValue&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt;) longValue();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;File &lt;em&gt;Main.java&lt;/em&gt;&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Main&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-type&quot;&gt;Rational&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;);\n        &lt;span class=&quot;hljs-type&quot;&gt;Rational&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;);\n\n        System.out.println(a + &lt;span class=&quot;hljs-string&quot;&gt;&quot; + &quot;&lt;/span&gt; + b + &lt;span class=&quot;hljs-string&quot;&gt;&quot; = &quot;&lt;/span&gt; + a.add(b));\n        System.out.println(a + &lt;span class=&quot;hljs-string&quot;&gt;&quot; - &quot;&lt;/span&gt; + b + &lt;span class=&quot;hljs-string&quot;&gt;&quot; = &quot;&lt;/span&gt; + a.sub(b));\n        System.out.println(a + &lt;span class=&quot;hljs-string&quot;&gt;&quot; * &quot;&lt;/span&gt; + b + &lt;span class=&quot;hljs-string&quot;&gt;&quot; = &quot;&lt;/span&gt; + a.mul(b));\n        System.out.println(a + &lt;span class=&quot;hljs-string&quot;&gt;&quot; / &quot;&lt;/span&gt; + b + &lt;span class=&quot;hljs-string&quot;&gt;&quot; = &quot;&lt;/span&gt; + a.div(b));\n\n        Rational[] arr = {&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;),\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;),\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;),\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)};\n\n        selectSort(arr);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; ++i) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[i].compareTo(arr[i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                System.exit(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            }\n        }\n\n\n        &lt;span class=&quot;hljs-type&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n\n        System.out.println(n.doubleValue());\n        System.out.println(n.floatValue());\n        System.out.println(n.intValue());\n        System.out.println(n.longValue());\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &amp;lt;T &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Comparable&lt;/span&gt;&amp;lt;? &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt; T&amp;gt;&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;selectSort&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T[] array)&lt;/span&gt; {\n\n        T temp;\n        &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; mini;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; array.length - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; ++i) {\n\n            mini = i;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; j &amp;lt; array.length; ++j) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (array[j].compareTo(array[mini]) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                    mini = j;\n                }\n            }\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i != mini) {\n                temp = array[i];\n                array[i] = array[mini];\n                array[mini] = temp;\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Result&lt;/h3&gt;\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;2/4 + 2/6 = 4/10\nException in thread &quot;main&quot; java.lang.StackOverflowError\n2/4 - 2/6 = 0/-2\n    at com.xetrasu.Rational.doubleValue(Rational.java:64)\n2/4 * 2/6 = 4/24\n    at com.xetrasu.Rational.doubleValue(Rational.java:64)\n2/4 / 2/6 = 12/8\n    at com.xetrasu.Rational.doubleValue(Rational.java:64)\n    at com.xetrasu.Rational.doubleValue(Rational.java:64)\n    at com.xetrasu.Rational.doubleValue(Rational.java:64)\n    at com.xetrasu.Rational.doubleValue(Rational.java:64)\n    at com.xetrasu.Rational.doubleValue(Rational.java:64)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://github.com/openjdk-mirror/jdk7u-jdk/blob/master/src/share/classes/java/lang/StackOverflowError.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;Here is the source code of &lt;code&gt;StackOverflowError&lt;/code&gt; in OpenJDK 7&lt;/a&gt;.&lt;/p&gt;\n    "],"529":["\n&lt;p&gt;You could use &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/aggregate-functions.html#function_group-concat&quot; rel=&quot;noreferrer&quot;&gt;GROUP_CONCAT&lt;/a&gt; aggregated function to get all years into a single column, grouped by &lt;code&gt;id&lt;/code&gt; and ordered by &lt;code&gt;rate&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;   id, GROUP_CONCAT(&lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) grouped_year\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;     yourtable\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-----------------------------------------------------------&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  ID &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; GROUPED_YEAR                                      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-----------------------------------------------------------&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; p01 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2006&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2003&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2008&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2001&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2007&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2009&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2002&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2004&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2005&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; p02 &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2001&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2004&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2002&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2003&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2006&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2007&lt;/span&gt;                &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;-----------------------------------------------------------&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And then you could use &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_find-in-set&quot; rel=&quot;noreferrer&quot;&gt;FIND_IN_SET&lt;/a&gt;, that returns the position of the first argument inside the second one, eg.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; FIND_IN_SET(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2006&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;2006,2003,2008,2001,2007,2009,2002,2004,2005,2000&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; FIND_IN_SET(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2009&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;2006,2003,2008,2001,2007,2009,2002,2004,2005,2000&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Using a combination of &lt;code&gt;GROUP_CONCAT&lt;/code&gt; and &lt;code&gt;FIND_IN_SET&lt;/code&gt;, and filtering by the position returned by find_in_set, you could then use this query that returns only the first 5 years for every id:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  yourtable.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n  yourtable &lt;span class=&quot;hljs-keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n      id,\n      GROUP_CONCAT(&lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) grouped_year\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n      yourtable\n    &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id) group_max\n  &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; yourtable.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; group_max.id\n     &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; FIND_IN_SET(&lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;, grouped_year) &lt;span class=&quot;hljs-keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt;\n  yourtable.id, yourtable.year &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Please see fiddle &lt;a href=&quot;http://sqlfiddle.com/#!2/1c220/1&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Please note that if more than one row can have the same rate, you should consider using &lt;code&gt;GROUP_CONCAT(DISTINCT rate ORDER BY rate)&lt;/code&gt; on the &lt;code&gt;rate&lt;/code&gt; column instead of the &lt;code&gt;year&lt;/code&gt; column.&lt;/p&gt;\n&lt;p&gt;The maximum length of the string returned by &lt;code&gt;GROUP_CONCAT&lt;/code&gt; is limited, so this works well if you need to select a few records for every group.&lt;/p&gt;\n    ","\n&lt;p&gt;You want to find &lt;em&gt;&lt;strong&gt;top n rows per group&lt;/strong&gt;&lt;/em&gt;. This answer provides a generic solution using example data that is different from OP.&lt;/p&gt;\n&lt;p&gt;In MySQL 8 or later you can use the &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;ROW_NUMBER&lt;/code&gt;, &lt;code&gt;RANK&lt;/code&gt; or &lt;code&gt;DENSE_RANK&lt;/code&gt;&lt;/a&gt; function depending on the exact definition of top 5. Below are the numbers generated by these functions based on &lt;code&gt;value&lt;/code&gt; sorted descending. Notice how ties are handled:&lt;/p&gt;\n&lt;div class=&quot;s-table-container&quot;&gt;\n&lt;table class=&quot;s-table&quot;&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th style=&quot;text-align: right;&quot;&gt;pkid&lt;/th&gt;\n&lt;th&gt;catid&lt;/th&gt;\n&lt;th style=&quot;text-align: right;&quot;&gt;value&lt;/th&gt;\n&lt;th style=&quot;text-align: right;&quot;&gt;row_number&lt;/th&gt;\n&lt;th style=&quot;text-align: right;&quot;&gt;rank&lt;/th&gt;\n&lt;th style=&quot;text-align: right;&quot;&gt;dense_rank&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;1&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;100&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*1&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*1&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*1&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;2&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;90&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*2&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*2&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;3&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;90&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*3&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*2&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;4&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;80&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*4&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*4&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*3&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;5&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;80&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*5&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*4&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*3&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;6&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;80&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;6&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*4&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*3&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;7&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;70&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;7&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;7&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*4&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;8&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;60&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;8&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;8&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;*5&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;9&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;50&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;9&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;9&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;6&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;10&lt;/td&gt;\n&lt;td&gt;p01&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;40&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;10&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;10&lt;/td&gt;\n&lt;td style=&quot;text-align: right;&quot;&gt;7&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;p&gt;Once you have chosen the function, use it like so:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; x\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; n &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://dbfiddle.uk/?rdbms=mysql_8.0&amp;amp;fiddle=29ff3dde85d2fb2085fcd195a7a9134e&quot; rel=&quot;noreferrer&quot;&gt;DB&amp;lt;&amp;gt;Fiddle&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;In MySQL 5.x you can use poor man&apos;s rank over partition to achieve desired result: outer join the table with itself and for each row, count the number of rows &lt;em&gt;&lt;strong&gt;before&lt;/strong&gt;&lt;/em&gt; it (e.g. the before row could be the one with higher value).&lt;/p&gt;\n&lt;p&gt;The following will produce results similar to &lt;code&gt;RANK&lt;/code&gt; function:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; t.pkid, t.catid, t.value, &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;(b.value) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rank\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; t\n&lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; t &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; b.catid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t.catid &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; b.value &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; t.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t.pkid, t.catid, t.value\n&lt;span class=&quot;hljs-keyword&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;(b.value) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; t.catid, t.value &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;, t.pkid\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Make the following change to produce results similar to &lt;code&gt;DENSE_RANK&lt;/code&gt; function:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; b.value)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or make the following change to produce results similar to &lt;code&gt;ROW_NUMBER&lt;/code&gt; function:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; b.catid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t.catid &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; (b.value &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; t.value &lt;span class=&quot;hljs-keyword&quot;&gt;OR&lt;/span&gt; b.value &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; t.value &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; b.pkid &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; t.pkid)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://dbfiddle.uk/?rdbms=mysql_5.5&amp;amp;fiddle=d4baaf1a1df9b681545b13031e641d9f&quot; rel=&quot;noreferrer&quot;&gt;DB&amp;lt;&amp;gt;Fiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For me something like &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;SUBSTRING_INDEX(group_concat(col_name &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; desired_col_order_name), &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, N) \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;works perfectly. No complicated query.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;for example: get top 1 for each group&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n    yourtable\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;\n    id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n            SUBSTRING_INDEX(GROUP_CONCAT(id\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;),\n                        &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) id\n        &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n            yourtable\n        &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;No, you can&apos;t LIMIT subqueries arbitrarily (you can do it to a limited extent in newer MySQLs, but not for 5 results per group).&lt;/p&gt;\n\n&lt;p&gt;This is a groupwise-maximum type query, which is not trivial to do in SQL. There are &lt;a href=&quot;https://stackoverflow.com/questions/755918/simple-query-to-grab-max-value-for-each-id/756892#756892&quot;&gt;various ways&lt;/a&gt; to tackle that which can be more efficient for some cases, but for top-n in general you&apos;ll want to look at &lt;a href=&quot;https://stackoverflow.com/questions/1442527/how-to-select-the-newest-four-items-per-category/1442867#1442867&quot;&gt;Bill&apos;s answer&lt;/a&gt; to a similar previous question.&lt;/p&gt;\n\n&lt;p&gt;As with most solutions to this problem, it can return more than five rows if there are multiple rows with the same &lt;code&gt;rate&lt;/code&gt; value, so you may still need a quantity of post-processing to check for that.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;, id, rate\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;, id, rate, &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;partition&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; h\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2009&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; rid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table2)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id, &lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id, rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; subquery\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; row_number &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The subquery is almost identical to your query. Only change is adding&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;partition&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This requires a series of subqueries to rank the values, limit them, then perform the sum while grouping&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@Rnk&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;@N&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n  c.id,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;sum&lt;/span&gt;(c.val)\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; (\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n  b.id,\n  b.bal\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; (\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;   \n  if(&lt;span class=&quot;hljs-variable&quot;&gt;@last&lt;/span&gt;_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;id,&lt;span class=&quot;hljs-variable&quot;&gt;@Rnk&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; Rnk,\n  a.id,\n  a.val,\n  &lt;span class=&quot;hljs-variable&quot;&gt;@last&lt;/span&gt;_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;id,\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; (   \n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n  id,\n  val \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; list\n&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; id,val &lt;span class=&quot;hljs-keyword&quot;&gt;desc&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; b\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; b.rnk &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@N&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; c\n&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; c.id;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; h.year, h.id, h.rate \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; h.year, h.id, h.rate, IF(&lt;span class=&quot;hljs-variable&quot;&gt;@lastid&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@lastid&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;h.id), &lt;span class=&quot;hljs-variable&quot;&gt;@index&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@index&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@index&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) indx \n      &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; h.year, h.id, h.rate \n            &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; h\n            &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; h.year &lt;span class=&quot;hljs-keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2009&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; id &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; rid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; table2)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id, h.year\n            &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id, rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n            ) h, (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@lastid&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@index&lt;/span&gt;:&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a\n    ) h \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; h.indx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Build the virtual columnslike RowID in Oracle&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Table:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; `stack` \n(`&lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;` &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n`id` &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n`rate` &lt;span class=&quot;hljs-type&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;) \nENGINE&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;InnoDB &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;utf8mb4\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Data:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2006&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2001&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5.9&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2007&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5.3&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2009&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4.4&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2001&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p02&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;12.5&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2004&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p02&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;12.4&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2005&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2.1&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0.8&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2002&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p02&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;12.2&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2002&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3.9&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2004&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3.5&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2003&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p02&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10.3&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p02&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8.7&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2006&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p02&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4.6&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2007&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p02&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3.3&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2003&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7.4&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; stack &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2008&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;p01&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6.8&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;SQL like this:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; t3.year,t3.id,t3.rate \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; t1.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; stack t2 &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; t1.rate&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt;t2.rate &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; t1.id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;t2.id) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; rownum &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; stack t1) t3 \n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; rownum &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; id,rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If delete the where clause in t3, it shows like this:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/lnxDj.jpg&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/lnxDj.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;GET &quot;TOP N Record&quot; --&amp;gt; add the &lt;code&gt;rownum &amp;lt;=3&lt;/code&gt; in &lt;code&gt;where&lt;/code&gt; clause (the where-clause of t3);&lt;/p&gt;\n&lt;p&gt;CHOOSE &quot;the year&quot; --&amp;gt; add the &lt;code&gt;BETWEEN 2000 AND 2009&lt;/code&gt; in &lt;code&gt;where&lt;/code&gt; clause (the where-clause of t3);&lt;/p&gt;\n    ","\n&lt;p&gt;Took some working, but I thougth my solution would be something to share as it is seems elegant as well as quite fast.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; h.year, h.id, h.rate \n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; id, \n      SUBSTRING_INDEX(GROUP_CONCAT(CONCAT(id, &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt; , &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; l\n      &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; h\n      &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2009&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id\n      &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; id\n  ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; h_temp\n    &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; h &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; h.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; h_temp.id \n      &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; SUBSTRING_INDEX(h_temp.l, CONCAT(h.id, &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;, h.year), &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; h_temp.l\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that this example is specified for the purpose of the question and can be modified quite easily for other similar purposes.&lt;/p&gt;\n    ","\n&lt;p&gt;The following post: &lt;a href=&quot;http://code.openark.org/blog/mysql/sql-selecting-top-n-records-per-group&quot; rel=&quot;nofollow&quot;&gt;sql: selcting top N record per group&lt;/a&gt; describes the complicated way of achieving this without subqueries.&lt;/p&gt;\n\n&lt;p&gt;It improves on other solutions offered here by:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Doing everything in a single query&lt;/li&gt;\n&lt;li&gt;Being able to properly utilize indexes&lt;/li&gt;\n&lt;li&gt;Avoiding subqueries, notoriously known to produce bad execution plans in MySQL&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;It is however not pretty. A good solution would be achievable were Window Functions (aka Analytic Functions) enabled in MySQL -- but they are not.\nThe trick used in said post utilizes GROUP_CONCAT, which is sometimes described as &quot;poor man&apos;s Window Functions for MySQL&quot;.&lt;/p&gt;\n    ","\n&lt;p&gt;for those like me that had queries time out. I made the below to use limits and anything else by a specific group.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;DELIMITER $$\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PROCEDURE&lt;/span&gt; count_limit200()\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; a &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; stop_loop &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; domain_val &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; domain_list &lt;span class=&quot;hljs-keyword&quot;&gt;CURSOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; domain &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; db.one;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;OPEN&lt;/span&gt; domain_list;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt;(domain)) &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; stop_loop \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; db.one;\n    &lt;span class=&quot;hljs-comment&quot;&gt;-- BEGIN LOOP&lt;/span&gt;\n    loop_thru_domains: LOOP\n        &lt;span class=&quot;hljs-keyword&quot;&gt;FETCH&lt;/span&gt; domain_list &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; domain_val;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; a&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;a&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; db.two(book,artist,title,title_count,last_updated) \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n        (\n            &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; book,artist,title,&lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;(ObjectKey) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; titleCount, NOW() \n            &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; db.one \n            &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; book &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; domain_val\n            &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; artist,title\n            &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; book,titleCount &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n            LIMIT &lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;\n        ) a &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; DUPLICATE KEY &lt;span class=&quot;hljs-keyword&quot;&gt;UPDATE&lt;/span&gt; title_count &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; titleCount, last_updated &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; NOW();\n\n        IF a &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; stop_loop &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt;\n            LEAVE loop_thru_domain;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; IF;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; LOOP loop_thru_domain;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; $$\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;it loops through a list of domains and then inserts only a limit of 200 each&lt;/p&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@num&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@type&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; `&lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;`, `id`, `rate`,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@num&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; if(&lt;span class=&quot;hljs-variable&quot;&gt;@type&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `id`, &lt;span class=&quot;hljs-variable&quot;&gt;@num&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; `row_number`,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@type&lt;/span&gt; :&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; `id` &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; `dummy`\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `h`\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; (\n        `&lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;` &lt;span class=&quot;hljs-keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;2000&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;2009&apos;&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; `id` &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; `rid` &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `table2`) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; `temp_rid`\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `id`\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; `temph`\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `&lt;span class=&quot;hljs-keyword&quot;&gt;year&lt;/span&gt;`, `id`, `rate`\n&lt;span class=&quot;hljs-keyword&quot;&gt;HAVING&lt;/span&gt; `row_number`&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; `id`, `rate &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Please try below stored procedure. I have already verified. I am getting proper result but without using &lt;code&gt;groupby&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; DEFINER&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;`ks_root`@`&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;` &lt;span class=&quot;hljs-keyword&quot;&gt;PROCEDURE&lt;/span&gt; `first_five_record_per_id`()\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; query_string text;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; datasource1 &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; done &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; tenants &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; cur1 &lt;span class=&quot;hljs-keyword&quot;&gt;CURSOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; rid &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; demo1;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; CONTINUE HANDLER &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; FOUND &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; done &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@query&lt;/span&gt;_string&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;OPEN&lt;/span&gt; cur1;\n      read_loop: LOOP\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;FETCH&lt;/span&gt; cur1 &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; tenants ;\n\n      IF done &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt;\n        LEAVE read_loop;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; IF;\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@datasource1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; tenants;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@query&lt;/span&gt;_string &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; concat(&lt;span class=&quot;hljs-variable&quot;&gt;@query&lt;/span&gt;_string,&lt;span class=&quot;hljs-string&quot;&gt;&apos;(select * from demo  where `id` = &apos;&apos;&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@datasource1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos; order by rate desc LIMIT 5) UNION ALL &apos;&lt;/span&gt;);\n\n       &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; LOOP; \n      &lt;span class=&quot;hljs-keyword&quot;&gt;close&lt;/span&gt; cur1;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@query&lt;/span&gt;_string  &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;TRIM&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;TRAILING&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;UNION ALL&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;TRIM&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@query&lt;/span&gt;_string));  \n  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@query&lt;/span&gt;_string;\n&lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@query&lt;/span&gt;_string;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXECUTE&lt;/span&gt; stmt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DEALLOCATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"530":["\n&lt;p&gt;You cannot have spaces around the &lt;code&gt;=&lt;/code&gt; sign.&lt;/p&gt;\n&lt;p&gt;When you write:&lt;/p&gt;\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;STR = &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;bash tries to run a command named &lt;code&gt;STR&lt;/code&gt; with 2 arguments (the strings &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt;)&lt;/p&gt;\n&lt;p&gt;When you write:&lt;/p&gt;\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;STR =foo\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;bash tries to run a command named &lt;code&gt;STR&lt;/code&gt; with 1 argument (the string &lt;code&gt;=foo&lt;/code&gt;)&lt;/p&gt;\n&lt;p&gt;When you write:&lt;/p&gt;\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;STR= foo\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;bash tries to run the command &lt;code&gt;foo&lt;/code&gt; with STR set to the empty string in its environment.&lt;/p&gt;\n&lt;p&gt;I&apos;m not sure if this helps to clarify or if it is mere obfuscation, but note that:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;the first command is exactly equivalent to: &lt;code&gt;STR &quot;=&quot; &quot;foo&quot;&lt;/code&gt;,&lt;/li&gt;\n&lt;li&gt;the second is the same as &lt;code&gt;STR &quot;=foo&quot;&lt;/code&gt;,&lt;/li&gt;\n&lt;li&gt;and the last is equivalent to &lt;code&gt;STR=&quot;&quot; foo&lt;/code&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;The relevant section of the &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_01&quot; rel=&quot;noreferrer&quot;&gt;sh language spec, section 2.9.1&lt;/a&gt; states:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;A &quot;simple command&quot; is a sequence of optional variable assignments and redirections, in any sequence, optionally followed by words and redirections, terminated by a control operator.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;In that context, a &lt;code&gt;word&lt;/code&gt; is the command that bash is going to run.  Any string containing &lt;code&gt;=&lt;/code&gt; (in any position other than at the beginning of the string) which is not a redirection and in which the portion of the string before the &lt;code&gt;=&lt;/code&gt; is a valid variable name is a variable assignment, while any string that is not a redirection or a variable assignment is a command.  In &lt;code&gt;STR = &quot;foo&quot;&lt;/code&gt;, &lt;code&gt;STR&lt;/code&gt; is not a variable assignment.&lt;/p&gt;\n    ","\n&lt;p&gt;Drop the spaces around the &lt;code&gt;=&lt;/code&gt; sign:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#!/bin/bash &lt;/span&gt;\nSTR=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt; \n&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$STR&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In the interactive mode everything looks fine:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;$ str=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;\n$ &lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;\nHello World\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Obviously(!) as Johannes said, no space around &lt;code&gt;=&lt;/code&gt;. In case there is any space around &lt;code&gt;=&lt;/code&gt; then in the interactive mode it gives errors as&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;No command &apos;str&apos; found&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;I know this has been answered with a very high-quality answer. But, in short, you cant have spaces.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#!/bin/bash&lt;/span&gt;\nSTR = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$STR&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Didn&apos;t work because of the spaces around the equal sign. If you were to run...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#!/bin/bash&lt;/span&gt;\nSTR=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$STR&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It would work&lt;/p&gt;\n    ","\n&lt;p&gt;When you define any variable then you do not have to put in any extra spaces.&lt;/p&gt;\n\n&lt;p&gt;E.g.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;name = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Stack Overflow&quot;&lt;/span&gt;  \n// it is not valid, you will get an error saying- &lt;span class=&quot;hljs-string&quot;&gt;&quot;Command not found&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So remove spaces:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Stack Overflow&quot;&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and it will work fine.&lt;/p&gt;\n    "]},"page":"17","randomQuestions":[{"title":"Why are these numbers not equal?","slug":"why-are-these-numbers-not-equal-1657384729559"},{"title":"How to evaluate a math expression given in string form?","slug":"how-to-evaluate-a-math-expression-given-in-string-form-1657387797852"},{"title":"How should I use servlets and Ajax?","slug":"how-should-i-use-servlets-and-ajax-1657385492684"},{"title":"What is a StackOverflowError?","slug":"what-is-a-stackoverflowerror-1657388319634"},{"title":"Truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all()","slug":"truth-value-of-a-series-is-ambiguous.-use-a.empty-a.bool()-a.item()-a.any()-or-a.all()-1657387724259"},{"title":"AsyncTask Android example","slug":"asynctask-android-example-1657388127898"},{"title":"Switch between two frames in tkinter?","slug":"switch-between-two-frames-in-tkinter-1657388528781"},{"title":"How do I make a flat list out of a list of lists?","slug":"how-do-i-make-a-flat-list-out-of-a-list-of-lists-1657384500439"},{"title":"What's the meaning of \"=>\" (an arrow formed from equals & greater than) in JavaScript?","slug":"what's-the-meaning-of-\"greater\"-(an-arrow-formed-from-equals-and-greater-than)-in-javascript-1657387977118"},{"title":"jQuery Ajax File Upload","slug":"jquery-ajax-file-upload-1657387368970"},{"title":"Sort array of objects by string property value","slug":"sort-array-of-objects-by-string-property-value-1657384860090"},{"title":"Sort (order) data frame rows by multiple columns","slug":"sort-(order)-data-frame-rows-by-multiple-columns-1657388355671"},{"title":"How do I check if an array includes a value in JavaScript?","slug":"how-do-i-check-if-an-array-includes-a-value-in-javascript-1657387421185"},{"title":"Disable same origin policy in Chrome","slug":"disable-same-origin-policy-in-chrome-1657387743804"},{"title":"How can I convert ereg expressions to preg in PHP?","slug":"how-can-i-convert-ereg-expressions-to-preg-in-php-1657387652855"},{"title":"How to compare arrays in JavaScript?","slug":"how-to-compare-arrays-in-javascript-1657387352277"},{"title":"How do I sort a dictionary by value?","slug":"how-do-i-sort-a-dictionary-by-value-1657385485049"},{"title":"How to add to the PYTHONPATH in Windows, so it finds my modules/packages?","slug":"how-to-add-to-the-pythonpath-in-windows-so-it-finds-my-modulespackages-1657388540360"},{"title":"What do querySelectorAll and getElementsBy* methods return?","slug":"what-do-queryselectorall-and-getelementsby*-methods-return-1657384425935"},{"title":"How do I make a redirect in PHP?","slug":"how-do-i-make-a-redirect-in-php-1657387381903"}]},"__N_SSG":true}