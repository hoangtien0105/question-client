{"pageProps":{"data":{"count":610,"rows":[{"id":95,"title":"Error in finding last used cell in Excel with VBA","slug":"error-in-finding-last-used-cell-in-excel-with-vba-1657384584748","postType":"QUESTION","createdAt":"2022-07-09T16:36:24.000Z","updatedAt":"2022-07-09T16:36:24.000Z","tags":[{"id":350,"name":"excel-formula","slug":"excel-formula","createdAt":"2022-07-09T16:36:24.000Z","updatedAt":"2022-07-09T16:36:24.000Z","Questions_Tags":{"questionId":95,"tagId":350}}]},{"id":94,"title":"How do I split a list into equally-sized chunks?","slug":"how-do-i-split-a-list-into-equally-sized-chunks-1657384580399","postType":"QUESTION","createdAt":"2022-07-09T16:36:20.000Z","updatedAt":"2022-07-09T16:36:20.000Z","tags":[{"id":346,"name":"split","slug":"split","createdAt":"2022-07-09T16:36:20.000Z","updatedAt":"2022-07-09T16:36:20.000Z","Questions_Tags":{"questionId":94,"tagId":346}},{"id":347,"name":"chunks","slug":"chunks","createdAt":"2022-07-09T16:36:20.000Z","updatedAt":"2022-07-09T16:36:20.000Z","Questions_Tags":{"questionId":94,"tagId":347}}]},{"id":93,"title":"How to parse JSON in Java","slug":"how-to-parse-json-in-java-1657384575136","postType":"QUESTION","createdAt":"2022-07-09T16:36:15.000Z","updatedAt":"2022-07-09T16:36:15.000Z","tags":[]},{"id":92,"title":"How do I get PHP errors to display?","slug":"how-do-i-get-php-errors-to-display-1657384570095","postType":"QUESTION","createdAt":"2022-07-09T16:36:10.000Z","updatedAt":"2022-07-09T16:36:10.000Z","tags":[]},{"id":91,"title":"Convert one date format into another in PHP","slug":"convert-one-date-format-into-another-in-php-1657384566234","postType":"QUESTION","createdAt":"2022-07-09T16:36:06.000Z","updatedAt":"2022-07-09T16:36:06.000Z","tags":[{"id":333,"name":"date","slug":"date","createdAt":"2022-07-09T16:36:06.000Z","updatedAt":"2022-07-09T16:36:06.000Z","Questions_Tags":{"questionId":91,"tagId":333}},{"id":335,"name":"format","slug":"format","createdAt":"2022-07-09T16:36:06.000Z","updatedAt":"2022-07-09T16:36:06.000Z","Questions_Tags":{"questionId":91,"tagId":335}},{"id":336,"name":"date-conversion","slug":"date-conversion","createdAt":"2022-07-09T16:36:06.000Z","updatedAt":"2022-07-09T16:36:06.000Z","Questions_Tags":{"questionId":91,"tagId":336}}]}]},"answers":{"91":["\n&lt;p&gt;The second parameter to &lt;code&gt;date()&lt;/code&gt; needs to be a proper timestamp (seconds since January 1, 1970). You are passing a string, which date() can&apos;t recognize.&lt;/p&gt;\n\n&lt;p&gt;You can use &lt;a href=&quot;http://de.php.net/manual/en/function.strtotime.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;strtotime()&lt;/strong&gt;&lt;/a&gt; to convert a date string into a timestamp. However, even strtotime() doesn&apos;t recognize the &lt;code&gt;y-m-d-h-i-s&lt;/code&gt; format.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;PHP 5.3 and up&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Use &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;DateTime::createFromFormat&lt;/code&gt;&lt;/a&gt;. It allows you to specify an exact mask - using the &lt;code&gt;date()&lt;/code&gt; syntax - to parse incoming string dates with.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;PHP 5.2 and lower&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;You will have to parse the elements (year, month, day, hour, minute, second) manually using &lt;code&gt;substr()&lt;/code&gt; and hand the results to &lt;a href=&quot;http://de.php.net/manual/en/function.mktime.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;mktime()&lt;/strong&gt;&lt;/a&gt; that will build you a timestamp. &lt;/p&gt;\n\n&lt;p&gt;But that&apos;s a lot of work! I recommend using a different format that strftime() can understand. strftime() understands &lt;em&gt;any&lt;/em&gt;  date input short of &lt;code&gt;the next time joe will slip on the ice&lt;/code&gt;. for example, this works:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;l, F d y h:i:s&apos;&lt;/span&gt;);              &lt;span class=&quot;hljs-comment&quot;&gt;// returns Saturday, January 30 10 02:06:34&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$old_date_timestamp&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$old_date_timestamp&lt;/span&gt;);   \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The easiest way to do this is&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$myDateTime&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;createFromFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$dateString&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$newDateString&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$myDateTime&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;m/d/Y&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You are first giving it the format $dateString is in. Then you are telling it the format you want $newDateString to be in.&lt;/p&gt;\n\n&lt;p&gt;This also avoids the use of strtotime, which can be hard to work with at times.&lt;/p&gt;\n\n&lt;p&gt;If you are not transforming from one date format to another, but just want the current date (or datetime) in a specific format then it&apos;s even easier:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$now&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable&quot;&gt;$timestring&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$now&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d h:i:s&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This other question also refers to the same topic: &lt;a href=&quot;https://stackoverflow.com/questions/2487921/php-convert-date-format-yyyy-mm-dd-dd-mm-yyyy-not-in-sql&quot;&gt;Convert date format yyyy-mm-dd =&amp;gt; dd-mm-yyyy&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;The Basics&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The simplist way to convert one date format into another is to use &lt;a href=&quot;http://docs.php.net/manual/en/function.strtotime.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;strtotime()&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;http://docs.php.net/manual/en/function.date.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;date()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;strtotime()&lt;/code&gt; will convert the date into a &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot; rel=&quot;noreferrer&quot;&gt;Unix Timestamp&lt;/a&gt;. That Unix Timestamp can then be passed to &lt;code&gt;date()&lt;/code&gt; to convert it to the new format. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$timestamp&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2008-07-01T22:35:17.02&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$timestamp&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or as a one-liner:   &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2008-07-01T22:35:17.02&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Keep in mind that &lt;code&gt;strtotime()&lt;/code&gt; requires the date to be in a &lt;a href=&quot;https://php.net/manual/en/datetime.formats.php&quot; rel=&quot;noreferrer&quot;&gt;valid format&lt;/a&gt;. Failure to provide a valid format will result in &lt;code&gt;strtotime()&lt;/code&gt; returning false which will cause your date to be 1969-12-31.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Using &lt;code&gt;DateTime()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;As of PHP 5.2, PHP offered the &lt;a href=&quot;http://docs.php.net/manual/en/class.datetime.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;DateTime()&lt;/code&gt;&lt;/a&gt; class which offers us more powerful tools for working with dates (and time). We can rewrite the above code using &lt;code&gt;DateTime()&lt;/code&gt; as so:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2008-07-01T22:35:17.02&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Working with Unix timestamps&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;date()&lt;/code&gt; takes a Unix timeatamp as its second parameter and returns a formatted date for you:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1234567890&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;DateTime() works with Unix timestamps by adding an &lt;code&gt;@&lt;/code&gt; before the timestamp:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;@1234567890&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If the timestamp you have is in milliseconds (it may end in &lt;code&gt;000&lt;/code&gt; and/or the timestamp is thirteen characters long) you will need to convert it to seconds before you can can convert it to another format. There&apos;s two ways to do this:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Trim the last three digits off using &lt;a href=&quot;http://php.net/manual/en/function.substr.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;substr()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Trimming the last three digits can be acheived several ways, but using &lt;code&gt;substr()&lt;/code&gt; is the easiest:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$timestamp&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1234567899000&apos;&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Divide the substr by 1000&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;You can also convert the timestamp into seconds by dividing by 1000. Because the timestamp is too large for 32 bit systems to do math on you will need to use the &lt;a href=&quot;http://php.net/manual/en/book.bc.php&quot; rel=&quot;noreferrer&quot;&gt;BCMath&lt;/a&gt; library to do the math as strings:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$timestamp&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;bcdiv&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1234567899000&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1000&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To get a Unix Timestamp you can use &lt;code&gt;strtotime()&lt;/code&gt; which returns a Unix Timestamp:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$timestamp&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;1973-04-18&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With DateTime() you can use &lt;a href=&quot;http://php.net/manual/en/datetime.gettimestamp.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;DateTime::getTimestamp()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2008-07-01T22:35:17.02&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$timestamp&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getTimestamp&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you&apos;re running PHP 5.2 you can use the &lt;code&gt;U&lt;/code&gt; formatting option instead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2008-07-01T22:35:17.02&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$timestamp&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;U&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Working with non-standard and ambiguous date formats&lt;/strong&gt;    &lt;/p&gt;\n\n&lt;p&gt;Unfortunately not all dates that a developer has to work with are in a standard format. Fortunately PHP 5.3 provided us with a solution for that. &lt;a href=&quot;http://docs.php.net/manual/en/datetime.createfromformat.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;DateTime::createFromFormat()&lt;/code&gt;&lt;/a&gt; allows us to tell PHP what format a date string is in so it can be successfully parsed into a DateTime object for further manipulation.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;createFromFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;F-d-Y h:i A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;April-18-1973 9:48 AM&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In PHP 5.4 we gained the ability to do class member access on instantiation has been added which allows us to turn our &lt;code&gt;DateTime()&lt;/code&gt; code into a one-liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2008-07-01T22:35:17.02&apos;&lt;/span&gt;))-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;createFromFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;F-d-Y h:i A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;April-18-1973 9:48 AM&apos;&lt;/span&gt;)-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y-m-d-h-i-s&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To convert &lt;code&gt;$date&lt;/code&gt; from &lt;code&gt;dd-mm-yyyy hh:mm:ss&lt;/code&gt; to a proper MySQL datetime\nI go like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;createFromFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;d-m-Y H:i:s&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;)-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The following is an easy method to convert dates to different formats.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Create a new DateTime object&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;createFromFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;2016-03-25&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Output the date in different formats&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;d-m-Y&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;m-d-Y&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y-m-d-h-i-s&apos;&lt;/span&gt;);       &lt;span class=&quot;hljs-comment&quot;&gt;// works&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;you are doing wrong here, this should be&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y-m-d h:i:s&apos;&lt;/span&gt;);       &lt;span class=&quot;hljs-comment&quot;&gt;// works&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;separator of time is &apos;:&apos;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;I think this will help...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y-m-d-h-i-s&apos;&lt;/span&gt;);              &lt;span class=&quot;hljs-comment&quot;&gt;// works&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match_all&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/(\\d+)-(\\d+)-(\\d+)-(\\d+)-(\\d+)-(\\d+)/&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;, PREG_SET_ORDER);\n&lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable&quot;&gt;$time&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mktime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$time&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y-m-d-h-i-s&apos;&lt;/span&gt;);              &lt;span class=&quot;hljs-comment&quot;&gt;// works&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$old_date&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$time&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mktime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$out&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d H:i:s&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$time&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This native way will help to convert any inputted format to the desired format.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$formatInput&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;d-m-Y&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Give any format here, this would be converted into your format&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$dateInput&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;01-02-2018&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//date in above format&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$formatOut&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Your format&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$dateOut&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;createFromFormat&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$formatInput&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$dateInput&lt;/span&gt;)-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$formatOut&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You need to convert the $old_date back into a timestamp, as the &lt;a href=&quot;http://www.php.net/manual/en/function.date.php&quot; rel=&quot;noreferrer&quot;&gt;date function&lt;/a&gt; requires a timestamp as its second argument.&lt;/p&gt;\n    ","\n&lt;p&gt;strtotime will work that out. the dates are just not the same and all in us-format.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$e1&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2013-07-22T12:00:03Z&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;y.m.d H:i&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$e1&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2013-07-22T12:00:03Z&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$e2&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2013-07-23T18:18:15Z&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;y.m.d H:i&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$e2&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2013-07-23T18:18:15Z&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$e1&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2013-07-21T23:57:04Z&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;y.m.d H:i&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$e2&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2013-07-21T23:57:04Z&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This solved for me,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$old&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;18-04-2018&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$new&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$old&lt;/span&gt;));\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$new&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output : 2018-04-18&lt;/p&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$tempDate&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;03-23-15&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;20&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$tempDate&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$tempDate&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$tempDate&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Easiest and simplest way to change date format in php&lt;/p&gt;\n&lt;p&gt;In PHP any date can be converted into the required date format using different scenarios for example to change any date format into Day, Date Month Year&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$newdate&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D, d M Y&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It will show date in the following very well format&lt;/p&gt;\n&lt;p&gt;Mon, 16 Nov 2020&lt;/p&gt;\n&lt;p&gt;And if you have time as well in your existing date format for example if you have datetime format of SQL 2020-11-11 22:00:00 you can convert this into the required date format using the following&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$newdateformat&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D, d M Y H:i:s&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$oldateformat&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It will show date in following well looking format&lt;/p&gt;\n&lt;p&gt;Sun, 15 Nov 2020 16:26:00&lt;/p&gt;\n    ","\n&lt;p&gt;This is the other way you can convert date format&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt; &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$pastDate&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Tuesday 11th October, 2016&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$pastDate&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;str_replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;,&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$pastDate&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$pastDate&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Y-m-d&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$new_date_format&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&apos; 23:59:59&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Just using strings, for me is a good solution, less problems with mysql. Detects the current format and changes it if necessary, this solution is only for spanish/french format and english format, without use php datetime function.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;dateTranslator&lt;/span&gt; &lt;/span&gt;{\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;translate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$lang&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n      &lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;empty&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;)){\n           &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;   \n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;) !== &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n           &lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;;\n      } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;) !== &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n           &lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;;\n      }\n      &lt;span class=&quot;hljs-comment&quot;&gt;//spanish format DD/MM/YYYY hh:mm&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strcmp&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$lang&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;es&apos;&lt;/span&gt;) == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n\n           &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n           &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;) == &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;reverseDate&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt;);\n           } \n           &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strcmp&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;-&apos;&lt;/span&gt;) == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;str_replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;);\n           }\n      &lt;span class=&quot;hljs-comment&quot;&gt;//english format YYYY-MM-DD hh:mm&lt;/span&gt;\n      } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n\n           &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n           &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;) == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) {\n\n                &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;reverseDate&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt;);\n           } \n           &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strcmp&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$divider&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;) == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;str_replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;);\n\n           }   \n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;;\n }\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;reverseDate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n      &lt;span class=&quot;hljs-variable&quot;&gt;$date2&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;explode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date2&lt;/span&gt;) == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) {\n           &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;implode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_reverse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/\\D/&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$date2&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]))) . &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$date2&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n      } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n           &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;implode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_reverse&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/\\D/&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;)));\n      }\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;;\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;USE&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;date&lt;span class=&quot;hljs-title class_&quot;&gt;Translator&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;translate&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;en&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know this is old, but, in running into a vendor that inconsistently uses 5 different date formats in their APIs (and test servers with a variety of PHP versions from the 5&apos;s through the latest 7&apos;s), I decided to write a universal converter that works with a myriad of PHP versions. &lt;/p&gt;\n\n&lt;p&gt;This converter will take virtually any input, including any standard datetime format (including with or without milliseconds) &lt;em&gt;and&lt;/em&gt; any Epoch Time representation (including with or without milliseconds) and convert it to virtually any other format. &lt;/p&gt;\n\n&lt;p&gt;To call it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$TheDateTimeIWant&lt;/span&gt;=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTome_toMyDateTime&lt;/span&gt;([thedateIhave],[theformatIwant]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Sending null for the format will make the function return the datetime in Epoch/Unix Time. Otherwise, send any format string that date() supports, as well as with &quot;.u&quot; for milliseconds (I handle milliseconds as well, even though date() returns zeros).&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s the code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;        &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;   \n        &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$dtFormat&lt;/span&gt;&lt;/span&gt;)\n        &lt;/span&gt;{\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;))\n            {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-variable&quot;&gt;$timepieces&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;is_numeric&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;))\n            {\n                &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;=&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            {\n                &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;)&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;))&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                {\n                    &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;=&lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;),&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;))-&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;));\n                    &lt;span class=&quot;hljs-variable&quot;&gt;$timepieces&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n                }\n                &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;)&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;))==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                {               \n                    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;preg_match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/([0-9]+)([^0-9]+)/&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;)).&lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$timepieces&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;=&lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$timepieces&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n                }\n            }\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dtFormat&lt;/span&gt;))\n            {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// RETURN as ANY date format sent&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strpos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dtFormat&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.u&quot;&lt;/span&gt;)&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)       &lt;span class=&quot;hljs-comment&quot;&gt;// Deal with milliseconds&lt;/span&gt;\n                {\n                    &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dtFormat&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;);              \n                    &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strripos&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;&lt;/span&gt;)+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-variable&quot;&gt;$timepieces&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];                \n                }\n                &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;                                &lt;span class=&quot;hljs-comment&quot;&gt;// NO milliseconds wanted&lt;/span&gt;\n                {\n                    &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;date&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dtFormat&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;);\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// RETURN Epoch Time (do nothing, we already built Epoch Time)          &lt;/span&gt;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$rettime&lt;/span&gt;;    \n        }\n    &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&apos;s some sample calls - you will note it also handles any time zone data (though as noted above, any non GMT time is returned in your time zone). &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;        &lt;span class=&quot;hljs-variable&quot;&gt;$utctime1&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2018-10-30T06:10:11.2185007-07:00&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$utctime2&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2018-10-30T06:10:11.2185007&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$utctime3&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2018-10-30T06:10:11.2185007 PDT&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$utctime4&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2018-10-30T13:10:11.2185007Z&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$utctime5&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2018-10-30T13:10:11Z&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10/30/2018 09:10:11 AM EST&quot;&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;pre&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;b&amp;gt;Epoch Time to a standard format&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;Epoch Tm: 1540905011    to STD DateTime     ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1540905011&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-m-d H:i:s&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;Epoch Tm: 1540905011          to UTC        ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1540905011&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;Epoch Tm: 1540905011.2185007  to UTC        ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1540905011.2185007&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;b&amp;gt;Returned as Epoch Time (the number of seconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.)&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime1: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime1&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot; ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime1&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime2: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime2&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;       ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime2&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime3: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime3&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;   ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime3&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime4: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime4&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;      ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime4&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime5: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime5&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;              ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime5&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;NO MILIS: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;        ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$dttm&lt;/span&gt;,&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;b&amp;gt;Returned as whatever datetime format one desires&amp;lt;/b&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime1: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime1&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot; ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-m-d H:i:s&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;              Y-m-d H:i:s&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime2: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime2&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;       ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-m-d H:i:s.u&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;      Y-m-d H:i:s.u&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime3: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime3&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;   ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-m-d H:i:s.u&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;      Y-m-d H:i:s.u&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;Returned as ISO8601&amp;lt;/b&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;UTCTime3: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$utctime3&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;   ----RESULT: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;convertAnyDateTime_toMyDateTime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$utctime3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&quot;        ISO8601&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/pre&amp;gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&apos;s the output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;Epoch Tm: &lt;span class=&quot;hljs-number&quot;&gt;1540905011&lt;/span&gt;                        ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;\n\nEpoch Tm: &lt;span class=&quot;hljs-number&quot;&gt;1540905011&lt;/span&gt;          to UTC        ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T09:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;04&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\nEpoch Tm: &lt;span class=&quot;hljs-number&quot;&gt;1540905011.2185007&lt;/span&gt;  to UTC        ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T09:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;04&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\nReturned &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; Epoch &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Time&lt;/span&gt; (the number of seconds that have elapsed since &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; Thursday, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; January &lt;span class=&quot;hljs-number&quot;&gt;1970&lt;/span&gt;, Coordinated Universal &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Time&lt;/span&gt; (UTC), minus leap seconds.)\n\nUTCTime1: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T06:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;1540905011.2185007&lt;/span&gt;\nUTCTime2: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T06:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt;       ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;1540894211.2185007&lt;/span&gt;\nUTCTime3: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T06:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt; PDT   ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;1540905011.2185007&lt;/span&gt;\nUTCTime4: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T13:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt;Z      ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;1540905011.2185007&lt;/span&gt;\nUTCTime5: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T13:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;Z              ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;1540905011&lt;/span&gt;\nNO MILIS: &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; AM EST        ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;1540908611&lt;/span&gt;\nReturned &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; whatever datetime format one desires\nUTCTime1: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T06:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;              Y-m-d H:i:s\nUTCTime2: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T06:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt;       ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;06&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt;      Y-m-d H:i:s.u\nUTCTime3: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T06:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt; PDT   ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt;      Y-m-d H:i:s.u\nReturned &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ISO8601\nUTCTime3: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T06:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11.2185007&lt;/span&gt; PDT   ----RESULT: &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;T09:&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;04&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;        ISO8601\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The only thing not in this version is the ability to select the time zone you want the returned datetime to be in. Originally, I wrote this to change any datetime to Epoch Time, so, I didn&apos;t need time zone support. It&apos;s trivial to add though. &lt;/p&gt;\n    ","\n&lt;p&gt;For completeness I&apos;m adding an answer using the Carbon library, which is very common and used in large projects like the Laravel framework.&lt;/p&gt;\n&lt;p&gt;The &lt;a href=&quot;https://carbon.nesbot.com/docs/#api-instantiation&quot; rel=&quot;nofollow noreferrer&quot;&gt;Carbon constructor&lt;/a&gt; can be passed a date string (anything that is recognized by &lt;a href=&quot;https://www.php.net/strtotime&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;strtotime()&lt;/code&gt;&lt;/a&gt;) or a &lt;a href=&quot;https://www.php.net/manual/en/class.datetime.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; object. If you&apos;re dealing with a date string that can&apos;t be parsed easily, Carbon provides the &lt;code&gt;Carbon::createFromFormat()&lt;/code&gt; static creator method.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$carbon&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Carbon&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;January 3 2025 4:28 am&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// or&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;\\DateTime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;January 3 2025 4:28 am&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$carbon&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Carbon&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// or&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$carbon&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;Carbon&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;createFromFormat&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Y-d-m/H:i&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;2025-03-01/04:28&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now that you have a native Carbon object, you can use the &lt;a href=&quot;https://carbon.nesbot.com/docs/#api-formatting&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Carbon::format()&lt;/code&gt;&lt;/a&gt; method to output it in whatever format you need:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$carbon&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;l jS \\\\of F Y h:i A&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// Friday 3rd of January 2025 04:28 AM&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;There are a lot of helper methods to quickly output certain formats, such as &lt;code&gt;Carbon::toDateTimeString()&lt;/code&gt; which outputs in MySQL format.&lt;/p&gt;\n    "],"92":["\n&lt;p&gt;This always works for me:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, this doesn&apos;t make PHP to show parse errors - the only way to show those errors is to modify your php.ini with this line:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(if you don&apos;t have access to &lt;code&gt;php.ini&lt;/code&gt;, then putting this line in &lt;code&gt;.htaccess&lt;/code&gt; might work too):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_flag display_errors &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can&apos;t catch parse errors when enabling error output at runtime, because it parses the file before actually executing anything (and since it encounters an error during this, it won&apos;t execute anything). You&apos;ll need to change the actual server configuration so that display_errors is on and the approriate error_reporting level is used. If you don&apos;t have access to php.ini, you may be able to use .htaccess or similar, depending on the server.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/78296/reasons-why-php-would-echo-errors-even-with-errorreporting0&quot;&gt;This question&lt;/a&gt; may provide additional info.&lt;/p&gt;\n    ","\n&lt;p&gt;Inside your &lt;strong&gt;php.ini&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then restart your web server.&lt;/p&gt;\n    ","\n&lt;p&gt;To display all errors you need to:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1. Have these lines in the PHP script you&apos;re calling from the browser (typically &lt;code&gt;index.php&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;2.(a) Make sure that this script has no syntax errors&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;or&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2.(b) Set &lt;code&gt;display_errors = On&lt;/code&gt; in your &lt;code&gt;php.ini&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Otherwise, it can&apos;t even run those 2 lines!&lt;/p&gt;\n\n&lt;p&gt;You can check for syntax errors in your script by running (at the command line):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php -l index.php\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you &lt;em&gt;include&lt;/em&gt; the script from another PHP script then it &lt;em&gt;will&lt;/em&gt; display syntax errors in the &lt;em&gt;included&lt;/em&gt; script.  For example:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;index.php&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Any syntax errors here will result in a blank screen in the browser&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;my_script.php&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;my_script.php&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;adjfkj &lt;span class=&quot;hljs-comment&quot;&gt;// This syntax error will be displayed in the browser&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Some web hosting providers allow you to change PHP parameters in the &lt;code&gt;.htaccess&lt;/code&gt; file.&lt;/p&gt;\n\n&lt;p&gt;You can add the following line:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_value display_errors &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I had the same issue as yours and this solution fixed it.&lt;/p&gt;\n    ","\n&lt;p&gt;You might find all of the settings for &quot;error reporting&quot; or &quot;display errors&quot; do not appear to work in PHP&amp;nbsp;7. That is because error handling has changed. Try this instead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n     &lt;span class=&quot;hljs-comment&quot;&gt;// Your code&lt;/span&gt;\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getTrace&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; in &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getFile&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getLine&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; called from &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;line&apos;&lt;/span&gt;];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or, to catch exceptions and errors in one go (this is not backward compatible with PHP&amp;nbsp;5):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n     &lt;span class=&quot;hljs-comment&quot;&gt;// Your code&lt;/span&gt;\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getTrace&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; in &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getFile&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getLine&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; called from &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;line&apos;&lt;/span&gt;];\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This will work:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);    \n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is the best way to write it, but a syntax error gives blank output, so use the console to check for syntax errors. The best way to debug PHP code is to use the console; run the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php -l phpfilename.php\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Set this in your &lt;strong&gt;index.php&lt;/strong&gt; file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Create a file called &lt;strong&gt;php.ini&lt;/strong&gt; in the folder where your PHP file resides.&lt;/p&gt;\n\n&lt;p&gt;Inside php.ini add the following code (I am giving an simple error showing code):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n\ndisplay_startup_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As we are now running PHP 7, answers given here are not correct any more. The only one still OK is &lt;a href=&quot;https://stackoverflow.com/questions/1053424/how-do-i-get-php-errors-to-display/36269588#36269588&quot;&gt;the one from Frank Forte&lt;/a&gt;, as he talks about PHP&amp;nbsp;7.&lt;/p&gt;\n\n&lt;p&gt;On the other side, rather than trying to catch errors with a try/catch you can use a trick: use include.&lt;/p&gt;\n\n&lt;p&gt;Here three pieces of code:&lt;/p&gt;\n\n&lt;p&gt;File: tst1.php&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;On&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Missing &quot; and ;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Testing\n?&amp;gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running this in PHP&amp;nbsp;7 will show nothing.&lt;/p&gt;\n\n&lt;p&gt;Now, try this:&lt;/p&gt;\n\n&lt;p&gt;File: tst2.php&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;On&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;tst3.php&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;File: tst3.php&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Missing &quot; and ;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Testing\n?&amp;gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now run tst2 which sets the error reporting, and then include tst3. You will see:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Parse error: syntax error, unexpected end of file, expecting variable (T_VARIABLE) or ${ (T_DOLLAR_OPEN_CURLY_BRACES) or {$ (T_CURLY_OPEN) in tst3.php on line 4&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;I would usually go with the following code in my plain PHP projects.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;defined&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ENVIRONMENT&apos;&lt;/span&gt;)){\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ENVIRONMENT&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;DEVELOPMENT&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$base_url&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;defined&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ENVIRONMENT&apos;&lt;/span&gt;))\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (ENVIRONMENT)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;DEVELOPMENT&apos;&lt;/span&gt;:\n            &lt;span class=&quot;hljs-variable&quot;&gt;$base_url&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://localhost/product/&apos;&lt;/span&gt;;\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL|E_STRICT);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;PRODUCTION&apos;&lt;/span&gt;:\n            &lt;span class=&quot;hljs-variable&quot;&gt;$base_url&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Production URL&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* https://google.com */&lt;/span&gt;\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n            &lt;span class=&quot;hljs-comment&quot;&gt;/* Mechanism to log errors */&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;exit&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;The application environment is not set correctly.&apos;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If, despite following all of the above answers (or you can&apos;t edit your php.ini file), you still can&apos;t get an error message, try making a new PHP file that enables error reporting and then include the problem file. eg:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;require_once&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;problem_file.php&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Despite having everything set properly in my &lt;code&gt;php.ini&lt;/code&gt; file, this was the only way I could catch a namespace error. My exact scenario was:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//file1.php&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;a&lt;/span&gt;\\&lt;span class=&quot;hljs-title class_&quot;&gt;b&lt;/span&gt;;\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;x&lt;/span&gt; &lt;/span&gt;{\n    ...\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//file2.php&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;c&lt;/span&gt;\\&lt;span class=&quot;hljs-title class_&quot;&gt;d&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;c&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;d&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;x&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Dies because it&apos;s not sure which &apos;x&apos; class to use&lt;/span&gt;\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;x&lt;/span&gt; &lt;/span&gt;{\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you somehow find yourself in a situation where you can&apos;t modifiy the setting via &lt;code&gt;php.ini&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt; you&apos;re out of luck for displaying errors when your PHP scripts contain parse errors. You&apos;d then have to resolve to &lt;a href=&quot;http://stefaanlippens.net/php-lint-multiple-files-parallel&quot; rel=&quot;noreferrer&quot;&gt;linting the files on the command line&lt;/a&gt; like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;find . -name &lt;span class=&quot;hljs-string&quot;&gt;&apos;*.php&apos;&lt;/span&gt; -type f -print0 | xargs -&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; -n1 -P8 php -l | grep -v &lt;span class=&quot;hljs-string&quot;&gt;&quot;No syntax errors&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If your host is so locked down that it does not allow changing the value via &lt;code&gt;php.ini&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt;, it may also disallow changing the value via &lt;code&gt;ini_set&lt;/code&gt;. You can check that with the following PHP script:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( !&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ) ) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;display_errors cannot be set.&quot;&lt;/span&gt;;\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;changing display_errors via script is possible.&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do something like below:&lt;/p&gt;\n\n&lt;p&gt;Set the below parameters in your main index file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then based on your requirement you can choose which you want to show:&lt;/p&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; errors, warnings and notices:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL); OR &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; errors:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ERROR);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; warnings:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_WARNING);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; notices:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_NOTICE);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more information, check &lt;a href=&quot;http://php.net/manual/en/function.error-reporting.php&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can add your own custom error handler, which can provide extra debug information. Furthermore, you can set it up to send you the information via email.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ERR_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$errno&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errstr&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errfile&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errline&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$msg&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;b&amp;gt;Something bad happened.&amp;lt;/b&amp;gt; [&lt;span class=&quot;hljs-subst&quot;&gt;$errno&lt;/span&gt;] &lt;span class=&quot;hljs-subst&quot;&gt;$errstr&lt;/span&gt; &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;\n    &amp;lt;b&amp;gt;File:&amp;lt;/b&amp;gt; &lt;span class=&quot;hljs-subst&quot;&gt;$errfile&lt;/span&gt; &amp;lt;br&amp;gt;\n    &amp;lt;b&amp;gt;Line:&amp;lt;/b&amp;gt; &lt;span class=&quot;hljs-subst&quot;&gt;$errline&lt;/span&gt; &amp;lt;br&amp;gt;\n    &amp;lt;pre&amp;gt;&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;json_encode&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;debug_backtrace&lt;/span&gt;(), JSON_PRETTY_PRINT).&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/pre&amp;gt; &amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$msg&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;EXC_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ERR_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;(), &lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getFile&lt;/span&gt;(), &lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getLine&lt;/span&gt;());\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;shutDownFunction&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_get_last&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ERR_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;message&quot;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;line&quot;&lt;/span&gt;]);\n    }\n}\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;set_error_handler&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;ERR_HANDLER&quot;&lt;/span&gt;, E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;register_shutdown_function&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;shutdownFunction&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;set_exception_handler&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXC_HANDLER&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This code on top should work:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, try to edit the code on the phone in the file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;error_reporting =on\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The best/easy/fast solution that you can use if it&apos;s a quick debugging, is to surround your code with catching exceptions. That&apos;s what I&apos;m doing when I want to check something fast in production.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Page code&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Caught exception: &apos;&lt;/span&gt;,  &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Turn off error reporting&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Report runtime errors&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ERROR | E_WARNING | E_PARSE);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Report all errors&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Same as error_reporting(E_ALL);&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;error_reporting&quot;&lt;/span&gt;, E_ALL);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Report all errors except E_NOTICE&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL &amp;amp; ~E_NOTICE);\n    &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;While your site is live, the &lt;code&gt;php.ini&lt;/code&gt; file should have display_errors disabled for security reasons. However, for the development environment, display_errors can be enabled for troubleshooting. &lt;/p&gt;\n    ","\n&lt;p&gt;Just write:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do this by changing the  php.ini file and add the following &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\ndisplay_startup_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR you can also use the following code as this always works for me&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Accepted asnwer including extra options. In PHP files for in my DEVELOPMENT apache vhost (.htaccess if you can ensure it doesn&apos;t get into production):&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, this doesn&apos;t make PHP to show parse errors - the only way to show those errors is to modify your php.ini with this line:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(if you don&apos;t have access to &lt;code&gt;php.ini&lt;/code&gt;, then putting this line in &lt;code&gt;.htaccess&lt;/code&gt; might work too):&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// I&apos;ve added some extra options that set E_ALL as per https://www.php.net/manual/en/errorfunc.configuration.php.&lt;/span&gt;\nphp_flag log_errors on\nphp_flag display_errors on\nphp_flag display_startup_errors on\nphp_value error_reporting &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;\nphp_value error_log /&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;/www/mywebsite.ext/logs/php.error.log\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you have &lt;a href=&quot;https://en.wikipedia.org/wiki/Xdebug&quot; rel=&quot;nofollow noreferrer&quot;&gt;Xdebug&lt;/a&gt; installed you can override every setting by setting:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;xdebug.force_display_errors = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\nxdebug.force_error_reporting = -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;force_display_errors&lt;/p&gt;\n  \n  &lt;p&gt;Type: int, Default value: 0, Introduced in Xdebug &amp;gt;= 2.3 If this\n  setting is set to 1 then errors will always be displayed, no matter\n  what the setting of PHP&apos;s display_errors is.&lt;/p&gt;\n  \n  &lt;p&gt;force_error_reporting&lt;/p&gt;\n  \n  &lt;p&gt;Type: int, Default value: 0, Introduced in Xdebug &amp;gt;= 2.3\n  This setting is a bitmask, like error_reporting. This bitmask will be logically ORed with the bitmask represented by error_reporting to dermine which errors should be displayed. This setting can only be made in php.ini and allows you to force certain errors from being shown no matter what an application does with ini_set().&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;You might want to use this code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Report all errors except E_NOTICE&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL &amp;amp; ~E_NOTICE);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Display all PHP errors &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);  &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;error_reporting&apos;&lt;/span&gt;, E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Turn off all error reporting&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If it is on the command line, you can run &lt;code&gt;php&lt;/code&gt; with &lt;code&gt;-ddisplay_errors=1&lt;/code&gt; to override the setting in &lt;code&gt;php.ini&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;php -ddisplay_errors=1 script.php\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Put this at the top of your page.&lt;/p&gt;\n    ","\n&lt;p&gt;Input this on the top of your code&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And in the php.ini file, insert this:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This must work.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;You can show Php error in your display via simple ways.\nFirstly, just put this below code in your php.ini file.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;(if you don&apos;t have access to php.ini, then putting this line in .htaccess might work too):&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_flag display_errors &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;OR you can also use the following code in your index.php file&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In Unix &lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot; rel=&quot;nofollow noreferrer&quot;&gt;CLI&lt;/a&gt;, it&apos;s very practical to redirect &lt;a href=&quot;https://unix.stackexchange.com/questions/42728/what-does-31-12-23-do-in-a-script&quot;&gt;only errors to a file&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;./script &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&amp;gt; errors.log\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;From your script, either use &lt;code&gt;var_dump()&lt;/code&gt; or equivalent as usual (both STDOUT and STDERR will receive the output), but &lt;strong&gt;to write only in the log&lt;/strong&gt; file:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fwrite&lt;/span&gt;(STDERR, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Debug infos\\n&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Write in errors.log^&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Then from another shell, for live changes:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;tail -f errors.log\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;or simply&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;watch cat errors.log\n&lt;/code&gt;&lt;/pre&gt;\n    "],"93":["\n&lt;p&gt;The &lt;a href=&quot;https://github.com/stleary/JSON-java&quot; rel=&quot;noreferrer&quot;&gt;org.json&lt;/a&gt; library is easy to use.&lt;/p&gt;\n&lt;p&gt;Just remember (while casting or using methods like &lt;code&gt;getJSONObject&lt;/code&gt; and &lt;code&gt;getJSONArray&lt;/code&gt;) that in JSON notation&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;[  ]&lt;/code&gt; represents an array, so library will parse it to &lt;code&gt;JSONArray&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;{  }&lt;/code&gt; represents an object, so library will parse it to &lt;code&gt;JSONObject&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Example code below:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.json.*;\n\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ... ; &lt;span class=&quot;hljs-comment&quot;&gt;//assign your JSON String here&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(jsonString);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// notice that `&quot;posts&quot;: [...]`&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length(); i++)\n{\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; arr.getJSONObject(i).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;);\n    ......\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You may find more examples from: &lt;a href=&quot;http://theoryapp.com/parse-json-in-java/&quot; rel=&quot;noreferrer&quot;&gt;Parse JSON in Java&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Downloadable jar:  &lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot; rel=&quot;noreferrer&quot;&gt;http://mvnrepository.com/artifact/org.json/json&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For the sake of the example lets assume you have a class &lt;strong&gt;&lt;code&gt;Person&lt;/code&gt;&lt;/strong&gt; with just a &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String name;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.name = name;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;&lt;a href=&quot;https://github.com/google/gson&quot;&gt;Google GSON&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/com.google.code.gson/gson&quot;&gt;Maven&lt;/a&gt;)&lt;/h1&gt;\n\n&lt;p&gt;My personal favourite as to the great JSON serialisation / de-serialisation of objects.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-type&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.fromJson(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;, Person.class);\nSystem.out.println(person.name); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n\nSystem.out.println(g.toJson(person)); &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;name&quot;:&quot;John&quot;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you want to get a single attribute out you can do it easily with the Google library as well:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JsonParser&lt;/span&gt;().parse(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;).getAsJsonObject();\n\nSystem.out.println(jsonObject.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;).getAsString()); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;&lt;a href=&quot;https://github.com/stleary/JSON-java&quot;&gt;Org.JSON&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot;&gt;Maven&lt;/a&gt;)&lt;/h1&gt;\n\n&lt;p&gt;If you don&apos;t need object de-serialisation but to simply get an attribute, you can try org.json (&lt;strong&gt;or look GSON example above!&lt;/strong&gt;)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;);\n\nSystem.out.println(obj.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/&quot;&gt;Jackson&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind&quot;&gt;Maven&lt;/a&gt;)&lt;/h1&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mapper.readValue(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;, Person.class);\n\nSystem.out.println(user.name); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;If one wants to create Java object from JSON and vice versa, use GSON or JACKSON third party jars etc.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//from object to JSON &lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\ngson.toJson(yourObject);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// from JSON to object &lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;yourObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(JSONString,yourObject.class);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;But if one just want to parse a JSON string and get some values, (OR create a JSON string from scratch to send over wire) just use JaveEE jar which contains JsonReader, JsonArray, JsonObject etc. You may want to download the implementation of that spec like javax.json. With these two jars I am able to parse the json and use the values.  &lt;/p&gt;\n\n&lt;p&gt;These APIs actually follow the DOM/SAX parsing model of XML.       &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.get(); &lt;span class=&quot;hljs-comment&quot;&gt;// REST call &lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;JsonReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonReader&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Json.createReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StringReader&lt;/span&gt;(response.readEntity(String.class)));\n    &lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonArray&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonReader.readArray();\n    &lt;span class=&quot;hljs-type&quot;&gt;ListIterator&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonArray.listIterator();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ( l.hasNext() ) {\n          &lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (JsonObject)l.next();\n          &lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ciAttr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; j.getJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ciAttributes&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/quick-json/&quot; rel=&quot;noreferrer&quot;&gt;quick-json parser&lt;/a&gt; is very straightforward, flexible, very fast and customizable. Try it&lt;/p&gt;\n\n&lt;p&gt;Features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Compliant with JSON specification (RFC4627) &lt;/li&gt;\n&lt;li&gt;High-Performance JSON parser &lt;/li&gt;\n&lt;li&gt;Supports Flexible/Configurable parsing approach &lt;/li&gt;\n&lt;li&gt;Configurable validation of key/value pairs of any JSON Hierarchy &lt;/li&gt;\n&lt;li&gt;Easy to use # Very small footprint&lt;/li&gt;\n&lt;li&gt;Raises developer friendly and easy to trace exceptions &lt;/li&gt;\n&lt;li&gt;Pluggable Custom Validation support - Keys/Values can be validated by configuring custom validators as and when encountered &lt;/li&gt;\n&lt;li&gt;Validating and Non-Validating parser support &lt;/li&gt;\n&lt;li&gt;Support for two types of configuration (JSON/XML) for using quick-JSON validating parser &lt;/li&gt;\n&lt;li&gt;Requires JDK 1.5&lt;/li&gt;\n&lt;li&gt;No dependency on external libraries &lt;/li&gt;\n&lt;li&gt;Support for JSON Generation through object serialisation &lt;/li&gt;\n&lt;li&gt;Support for collection type selection during parsing process &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;It can be used like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;JsonParserFactory factory=JsonParserFactory.getInstance();\nJSONParser parser=factory.newJsonParser();\nMap jsonMap=parser.parseJson(jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could use &lt;a href=&quot;https://github.com/google/gson&quot; rel=&quot;nofollow noreferrer&quot;&gt;Google Gson&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Using this library you only need to create a model with the same JSON structure. Then the model is automatically filled in. You have to call your variables as your JSON keys, or use &lt;a href=&quot;https://www.javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/annotations/SerializedName.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;@SerializedName&lt;/code&gt;&lt;/a&gt; if you want to use different names.&lt;/p&gt;\n&lt;h1&gt;JSON&lt;/h1&gt;\n&lt;p&gt;From your example:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n        &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;post_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Model&lt;/h1&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyModel&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ArrayList&amp;lt;Post&amp;gt; posts = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String post_id;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;actor_id&quot;)&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// &amp;lt;- example SerializedName&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String actorId;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String picOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String nameOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String message;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String likesCount;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ArrayList&amp;lt;String&amp;gt; comments;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String timeOfPost;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Parsing&lt;/h1&gt;\n&lt;p&gt;Now you can parse using Gson library:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;MyModel&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(jsonString, MyModel.class);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Gradle import&lt;/h1&gt;\n&lt;p&gt;Remember to import the library in the app Gradle file&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;implementation &lt;span class=&quot;hljs-string&quot;&gt;&apos;com.google.code.gson:gson:2.8.6&apos;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// or earlier versions&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Automatic model generation&lt;/h1&gt;\n&lt;p&gt;You can generate model from JSON automatically using online tools like &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;h3&gt;A - Explanation&lt;/h3&gt;\n&lt;p&gt;You can use &lt;strong&gt;Jackson&lt;/strong&gt; libraries, for binding JSON String into &lt;strong&gt;POJO&lt;/strong&gt; (&lt;em&gt;&lt;strong&gt;Plain Old Java Object&lt;/strong&gt;&lt;/em&gt;) instances. POJO is simply a class with only private fields and public getter/setter methods. Jackson is going to traverse the methods (using &lt;strong&gt;reflection&lt;/strong&gt;), and maps the JSON object into the POJO instance as the field names of the class fits to the field names of the JSON object.&lt;/p&gt;\n&lt;p&gt;In your JSON object, which is actually a &lt;strong&gt;composite&lt;/strong&gt; object, the main object consists o two sub-objects. So, our POJO classes should have the same hierarchy. I&apos;ll call the whole JSON Object as &lt;strong&gt;Page&lt;/strong&gt; object. &lt;strong&gt;Page&lt;/strong&gt; object consist of a &lt;strong&gt;PageInfo&lt;/strong&gt; object, and a &lt;strong&gt;Post&lt;/strong&gt; object array.&lt;/p&gt;\n&lt;p&gt;So we have to create three different POJO classes;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Page&lt;/strong&gt; Class, a composite of &lt;strong&gt;PageInfo&lt;/strong&gt; Class and array of &lt;strong&gt;Post&lt;/strong&gt; Instances&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;PageInfo&lt;/strong&gt; Class&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Posts&lt;/strong&gt; Class&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The only package I&apos;ve used is Jackson ObjectMapper, what we do is binding data;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;com.fasterxml.jackson.databind.ObjectMapper\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The required dependencies, the jar files is listed below;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;jackson-core-2.5.1.jar&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;jackson-databind-2.5.1.jar&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;jackson-annotations-2.5.0.jar&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Here is the required code;&lt;/p&gt;\n&lt;h3&gt;B - Main POJO Class : Page&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex.model;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Page&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Post[] posts;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageInfo &lt;span class=&quot;hljs-title function_&quot;&gt;getPageInfo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageInfo;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPageInfo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(PageInfo pageInfo)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pageInfo = pageInfo;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Post[] getPosts() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; posts;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPosts&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post[] posts)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.posts = posts;\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;C - Child POJO Class : PageInfo&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex.model;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPageName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageName;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPageName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String pageName)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pageName = pageName;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPagePic&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pagePic;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPagePic&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String pagePic)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pagePic = pagePic;\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;D - Child POJO Class : Post&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex.model;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String post_id;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String actor_id;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String picOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String nameOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String message;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; likesCount;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String[] comments;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; timeOfPost;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPost_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; post_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPost_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String post_id)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.post_id = post_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getActor_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; actor_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setActor_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String actor_id)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.actor_id = actor_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPicOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; picOfPersonWhoPosted;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPicOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String picOfPersonWhoPosted)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.picOfPersonWhoPosted = picOfPersonWhoPosted;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getNameOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; nameOfPersonWhoPosted;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setNameOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String nameOfPersonWhoPosted)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.nameOfPersonWhoPosted = nameOfPersonWhoPosted;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; message;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setMessage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String message)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.message = message;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getLikesCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; likesCount;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setLikesCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; likesCount)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.likesCount = likesCount;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String[] getComments() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; comments;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setComments&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] comments)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.comments = comments;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getTimeOfPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; timeOfPost;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setTimeOfPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; timeOfPost)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.timeOfPost = timeOfPost;\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;E - Sample JSON File : sampleJSONFile.json&lt;/h3&gt;\n&lt;p&gt;I&apos;ve just copied your JSON sample into this file and put it under the project folder.&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n   &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;post_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;F - Demo Code&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.File;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.fasterxml.jackson.databind.ObjectMapper;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.levo.jsonex.model.Page;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.levo.jsonex.model.PageInfo;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.levo.jsonex.model.Post;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONDemo&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;objectMapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n        \n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; objectMapper.readValue(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sampleJSONFile.json&quot;&lt;/span&gt;), Page.class);\n            \n            printParsedObject(page);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n            e.printStackTrace();\n        }\n        \n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printParsedObject&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Page page)&lt;/span&gt; {\n        printPageInfo(page.getPageInfo());\n        System.out.println();\n        printPosts(page.getPosts());\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printPageInfo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(PageInfo pageInfo)&lt;/span&gt; {\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Page Info;&quot;&lt;/span&gt;);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;**********&quot;&lt;/span&gt;);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPage Name : &quot;&lt;/span&gt; + pageInfo.getPageName());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPage Pic  : &quot;&lt;/span&gt; + pageInfo.getPagePic());\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printPosts&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post[] posts)&lt;/span&gt; {\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Page Posts;&quot;&lt;/span&gt;);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;**********&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(Post post : posts) {\n            printPost(post);\n        }\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post post)&lt;/span&gt; {\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPost Id                   : &quot;&lt;/span&gt; + post.getPost_id());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tActor Id                  : &quot;&lt;/span&gt; + post.getActor_id());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPic Of Person Who Posted  : &quot;&lt;/span&gt; + post.getPicOfPersonWhoPosted());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tName Of Person Who Posted : &quot;&lt;/span&gt; + post.getNameOfPersonWhoPosted());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tMessage                   : &quot;&lt;/span&gt; + post.getMessage());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tLikes Count               : &quot;&lt;/span&gt; + post.getLikesCount());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tComments                  : &quot;&lt;/span&gt; + Arrays.toString(post.getComments()));\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tTime Of Post              : &quot;&lt;/span&gt; + post.getTimeOfPost());\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;G - Demo Output&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Page Info;\n****(*****\n    Page Name : abc\n    Page Pic  : http:&lt;span class=&quot;hljs-comment&quot;&gt;//example.com/content.jpg&lt;/span&gt;\nPage Posts;\n**********\n    Post Id                   : &lt;span class=&quot;hljs-number&quot;&gt;123456789012_123456789012&lt;/span&gt;\n    Actor Id                  : &lt;span class=&quot;hljs-number&quot;&gt;1234567890&lt;/span&gt;\n    Pic Of Person Who Posted  : http:&lt;span class=&quot;hljs-comment&quot;&gt;//example.com/photo.jpg&lt;/span&gt;\n    Name Of Person Who Posted : Jane Doe\n    Message                   : Sounds cool. Can&lt;span class=&quot;hljs-string&quot;&gt;&apos;t wait to see it!\n    Likes Count               : 2\n    Comments                  : []\n    Time Of Post              : 1234567890\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Almost all the answers given requires a full deserialization of the JSON into a Java object before accessing the value in the property of interest. Another alternative, which does not go this route is to use &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JsonPATH&lt;/a&gt; which is like XPath for JSON and allows traversing of JSON objects.&lt;/p&gt;\n&lt;p&gt;It is a specification and the good folks at JayWay have created a Java implementation for the specification which you can find here: &lt;a href=&quot;https://github.com/jayway/JsonPath&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/jayway/JsonPath&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;So basically to use it, add it to your project, eg:&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.jayway.jsonpath&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;json-path&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${version}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and to use:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(yourJsonString, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pageName&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pagePic&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(yourJsonString, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pagePic&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(yourJsonString, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pagePosts[0].post_id&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;etc...&lt;/p&gt;\n&lt;p&gt;Check the JsonPath specification page for more information on the other ways to transverse JSON.&lt;/p&gt;\n    ","\n&lt;p&gt;Use &lt;a href=&quot;https://github.com/ralfstx/minimal-json&quot; rel=&quot;nofollow noreferrer&quot;&gt;minimal-json&lt;/a&gt; which is very fast and easy to use.\nYou can parse from String obj and Stream.&lt;/p&gt;\n&lt;p&gt;Sample data:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;order&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4711&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;NE555 Timer IC&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;cat-id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;645723&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;quantity&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;LM358N OpAmp IC&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;cat-id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;764525&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;quantity&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n  &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Parsing:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Json.parse(input).asObject();\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;orders&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; object.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;order&quot;&lt;/span&gt;).asInt();\n&lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; object.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;items&quot;&lt;/span&gt;).asArray();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Creating JSON:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Json.object().add(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sakib&quot;&lt;/span&gt;).add(&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Maven:&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.eclipsesource.minimal-json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;minimal-json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.9.4&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The below example shows how to read the text in the question, represented as the &quot;jsonText&quot; variable.  This solution uses the Java EE7 &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/json/package-summary.html&quot; rel=&quot;noreferrer&quot;&gt;javax.json&lt;/a&gt; API (which is mentioned in some of the other answers).  The reason I&apos;ve added it as a separate answer is that the following code shows how to &lt;em&gt;actually&lt;/em&gt; access some of the values shown in the question.  An &lt;a href=&quot;https://jsonp.java.net/download.html&quot; rel=&quot;noreferrer&quot;&gt;implementation of the javax.json API&lt;/a&gt; would be required to make this code run.  The full package for each of the classes required was included as I didn&apos;t want to declare &quot;import&quot; statements.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;javax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; \n    javax.json.Json.createReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StringReader&lt;/span&gt;(jsonText));\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jr.readObject();\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the page info.&lt;/span&gt;\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageInfo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jo.getJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;);\nSystem.out.println(pageInfo.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the posts.&lt;/span&gt;\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jo.getJsonArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the first post.&lt;/span&gt;\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; posts.getJsonObject(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the post_id field.&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;postId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; post.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, before anyone goes and downvotes this answer because it doesn&apos;t use GSON, org.json, Jackson, or any of the other 3rd party frameworks available, it&apos;s an example of &quot;required code&quot; per the question to parse the provided text.  I am well aware that &lt;a href=&quot;http://openjdk.java.net/jeps/198&quot; rel=&quot;noreferrer&quot;&gt;adherence to the current standard JSR 353 was not being considered for JDK 9&lt;/a&gt; and as such the &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=353&quot; rel=&quot;noreferrer&quot;&gt;JSR 353 spec&lt;/a&gt; should be treated the same as any other 3rd party JSON handling implementation.&lt;/p&gt;\n    ","\n&lt;p&gt;Since nobody mentioned it yet, here is a beginning of a solution using &lt;a href=&quot;http://openjdk.java.net/projects/nashorn/&quot; rel=&quot;noreferrer&quot;&gt;Nashorn&lt;/a&gt; (JavaScript runtime part of Java 8, but deprecated in Java 11).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;EXTRACTOR_SCRIPT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;var fun = function(raw) { &quot;&lt;/span&gt; +\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;var json = JSON.parse(raw); &quot;&lt;/span&gt; +\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;return [json.pageInfo.pageName, json.pageInfo.pagePic, json.posts[0].post_id];};&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ScriptException, NoSuchMethodException {\n    &lt;span class=&quot;hljs-type&quot;&gt;ScriptEngine&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ScriptEngineManager&lt;/span&gt;().getEngineByName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;nashorn&quot;&lt;/span&gt;);\n    engine.eval(EXTRACTOR_SCRIPT);\n    &lt;span class=&quot;hljs-type&quot;&gt;Invocable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;invocable&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Invocable) engine;\n    &lt;span class=&quot;hljs-type&quot;&gt;JSObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (JSObject) invocable.invokeFunction(&lt;span class=&quot;hljs-string&quot;&gt;&quot;fun&quot;&lt;/span&gt;, JSON);\n    result.values().forEach(e -&amp;gt; System.out.println(e));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Performance comparison&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I wrote JSON content containing three arrays of respectively 20, 20 and 100 elements. I only want to get the 100 elements from the third array. I use the following JavaScript function to parse and get my entries.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; function(raw) {JSON.parse(raw).entries};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running the call a million times using &lt;strong&gt;Nashorn&lt;/strong&gt; takes 7.5~7.8 seconds&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;(JSObject) invocable.invokeFunction(&lt;span class=&quot;hljs-string&quot;&gt;&quot;fun&quot;&lt;/span&gt;, json);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;org.json&lt;/strong&gt; takes 20~21 seconds&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(JSON).getJSONArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;entries&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Jackson&lt;/strong&gt; takes 6.5~7 seconds&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;mapper.readValue(JSON, Entries.class).getEntries();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case Jackson performs better than Nashorn, which performs much better than org.json.\nNashorn API is harder to use than org.json&apos;s or Jackson&apos;s. Depending on your requirements Jackson and Nashorn both can be viable solutions.&lt;/p&gt;\n    ","\n&lt;p&gt;I believe the best practice should be to go through the official &lt;a href=&quot;http://json-processing-spec.java.net/&quot; rel=&quot;noreferrer&quot;&gt;Java JSON API&lt;/a&gt; which are still work in progress.&lt;/p&gt;\n    ","\n&lt;p&gt;This blew my mind with how easy it was. You can just pass a &lt;code&gt;String&lt;/code&gt; holding your JSON to the constructor of a JSONObject in the default org.json package. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;rootOfPage&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONArray&lt;/span&gt;(JSONString);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Done. &lt;em&gt;Drops microphone&lt;/em&gt;.\nThis works with &lt;code&gt;JSONObjects&lt;/code&gt; as well. After that, you can just look through your hierarchy of &lt;code&gt;Objects&lt;/code&gt; using the &lt;code&gt;get()&lt;/code&gt; methods on your objects.&lt;/p&gt;\n    ","\n&lt;p&gt;There are many JSON libraries available in Java.&lt;/p&gt;\n\n&lt;p&gt;The most notorious ones are: Jackson, GSON, Genson, FastJson and org.json.&lt;/p&gt;\n\n&lt;p&gt;There are typically three things one should look at for choosing any library:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Performance&lt;/li&gt;\n&lt;li&gt;Ease of use (code is simple to write and legible) - that goes with features.&lt;/li&gt;\n&lt;li&gt;For mobile apps: dependency/jar size&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Specifically for JSON libraries (and any serialization/deserialization libs), databinding is also usually of interest as it removes the need of writing boiler-plate code to pack/unpack the data.&lt;/p&gt;\n\n&lt;p&gt;For 1, see this benchmark: &lt;a href=&quot;https://github.com/fabienrenaud/java-json-benchmark&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/fabienrenaud/java-json-benchmark&lt;/a&gt; I did using &lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot; rel=&quot;noreferrer&quot;&gt;JMH&lt;/a&gt; which compares (jackson, gson, genson, fastjson, org.json, jsonp) performance of serializers and deserializers using stream and databind APIs.\nFor 2, you can find numerous examples on the Internet. The benchmark above can also be used as a source of examples...&lt;/p&gt;\n\n&lt;p&gt;Quick takeaway of the benchmark: &lt;strong&gt;Jackson&lt;/strong&gt; performs 5 to 6 times better than org.json and more than twice better than GSON.&lt;/p&gt;\n\n&lt;p&gt;For your particular example, the following code decodes your json with jackson:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyObj&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;Post&amp;gt; posts;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String post_id;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@JsonProperty(&quot;actor_id&quot;)&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String actorId;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@JsonProperty(&quot;picOfPersonWhoPosted&quot;)&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pictureOfPoster;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@JsonProperty(&quot;nameOfPersonWhoPosted&quot;)&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String nameOfPoster;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String likesCount;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;String&amp;gt; comments;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String timeOfPost;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;JACKSON&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {\n        &lt;span class=&quot;hljs-type&quot;&gt;MyObj&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JACKSON.readValue(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], MyObj.class); &lt;span class=&quot;hljs-comment&quot;&gt;// assumes args[0] contains your json payload provided in your question.&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Let me know if you have any questions.&lt;/p&gt;\n    ","\n&lt;p&gt;In addition to other answers, I recomend this online opensource service &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsonschema2pojo.org&lt;/a&gt; for quick generating Java classes from json or json schema for GSON, Jackson 1.x or Jackson 2.x. For example, if you have:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n   &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;post_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1234567890&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1234567890&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsonschema2pojo.org&lt;/a&gt; for GSON generated:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Generated(&quot;org.jsonschema2pojo&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;pageInfo&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;posts&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Post&amp;gt; posts = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Post&amp;gt;();\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Generated(&quot;org.jsonschema2pojo&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;pageName&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;pagePic&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String pagePic;\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Generated(&quot;org.jsonschema2pojo&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;post_id&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String postId;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;actor_id&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; actorId;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;picOfPersonWhoPosted&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String picOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;nameOfPersonWhoPosted&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String nameOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;message&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String message;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;likesCount&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; likesCount;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;comments&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Object&amp;gt; comments = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Object&amp;gt;();\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;timeOfPost&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; timeOfPost;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you have some Java class(say Message) representing the JSON string(jsonString), you can use &lt;a href=&quot;https://github.com/FasterXML/jackson&quot; rel=&quot;noreferrer&quot;&gt;Jackson&lt;/a&gt;  JSON library with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Message message= &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;().readValue(jsonString, Message.class);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and from message object you can fetch any of its attribute.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Gson&lt;/strong&gt; is easy to learn and implement, what we need to know are following two methods&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;toJson()&lt;/em&gt;&lt;/strong&gt;  Convert Java object to JSON format&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;fromJson()&lt;/em&gt;&lt;/strong&gt;  Convert JSON into Java object&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;`&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.BufferedReader;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.FileReader;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.google.gson.Gson;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GsonExample&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-type&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedReader&lt;/span&gt;(\n            &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;c:\\\\file.json&quot;&lt;/span&gt;));\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//convert the json string back to object&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;DataObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(br, DataObject.class);\n\n        System.out.println(obj);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n        e.printStackTrace();\n    }\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;`&lt;/p&gt;\n    ","\n&lt;p&gt;There are many open source libraries present to parse JSON content to an object or just to read JSON values. Your requirement is just to read values and parsing it to custom object. So org.json library is enough in your case.&lt;/p&gt;\n\n&lt;p&gt;Use org.json library to parse it and create JsonObject:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(&amp;lt;jsonStr&amp;gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, use this object to get your values:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObj.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can see a complete example here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://codedestine.com/how-read-write-json-in-java&quot; rel=&quot;noreferrer&quot;&gt;How to parse JSON in Java&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Read the following blog post, &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;JSON in Java&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;This post is a little bit old, but still I want to answer you question.&lt;/p&gt;\n&lt;p&gt;Step 1: Create a POJO class of your data.&lt;/p&gt;\n&lt;p&gt;Step 2: Now create a object using JSON.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;employee&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    employee =  mapper.readValue(newFile(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/home/sumit/employee.json&quot;&lt;/span&gt;), Employee.class);\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(JsonGenerationException e) {\n    e.printStackTrace();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For further reference you can refer to the following &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use the Gson Library to parse the JSON string.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(jsonAsString, JsonObject.class);\n\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;).getAsString();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pagePic&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;).getAsString();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;postId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;).get(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).getAsJsonObject().get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;).getAsString();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can also loop through the &quot;posts&quot; array as so:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (JsonElement post : posts) {\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;postId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; post.getAsJsonObject().get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;).getAsString();\n  &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;I have JSON like this:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;{\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;: {\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;,\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Java class&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Getters and setters&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Code for converting this JSON to a Java class.&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-type&quot;&gt;PageInfo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageInfo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.parse(jsonString).read(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo&quot;&lt;/span&gt;, PageInfo.class);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;dependency&amp;gt;\n    &amp;lt;groupId&amp;gt;com.jayway.jsonpath&amp;lt;/groupId&amp;gt;\n    &amp;lt;artifactId&amp;gt;json-path&amp;lt;/artifactId&amp;gt;\n    &amp;lt;version&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;2.2&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.0&lt;/span&gt;&amp;lt;/version&amp;gt;\n&amp;lt;/dependency&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Please do something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONParser&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonParser&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONParser&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (JSONObject) jsonParser.parse(contentString);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (String) jsonObject.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;productId&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;{\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;: {\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;,\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    },\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;: [\n         {\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;message&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;comments&quot;&lt;/span&gt;: [],\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;\n         }\n    ]\n}\n\nJava code :\n\n&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(responsejsonobj);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length(); i++)\n{\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; arr.getJSONObject(i).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;);\n    ......etc\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;First you need to select an &lt;strong&gt;implementation library&lt;/strong&gt; to do that.&lt;/p&gt;\n\n&lt;p&gt;The &lt;strong&gt;Java API for JSON Processing (JSR 353)&lt;/strong&gt; provides portable APIs to parse, generate, transform, and query JSON using object model and streaming APIs. &lt;/p&gt;\n\n&lt;p&gt;The &lt;strong&gt;reference implementation&lt;/strong&gt; is here: &lt;a href=&quot;https://jsonp.java.net/&quot; rel=&quot;noreferrer&quot;&gt;https://jsonp.java.net/&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;Here you can find a &lt;strong&gt;list of implementations&lt;/strong&gt; of JSR 353:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27984619/what-are-the-api-that-does-implement-jsr-353-json&quot;&gt;What are the API that does implement JSR-353 (JSON)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And &lt;strong&gt;to help you decide&lt;/strong&gt;... I found this article as well:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://blog.takipi.com/the-ultimate-json-library-json-simple-vs-gson-vs-jackson-vs-json/&quot; rel=&quot;noreferrer&quot;&gt;http://blog.takipi.com/the-ultimate-json-library-json-simple-vs-gson-vs-jackson-vs-json/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you go for Jackson, here is a good article about conversion between JSON to/from Java using Jackson: &lt;a href=&quot;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/&quot; rel=&quot;noreferrer&quot;&gt;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hope it helps!&lt;/p&gt;\n    ","\n&lt;p&gt;Top answers on this page use too simple examples like object with one property (e.g. {name: value}). I think that still simple but real life example can help someone.&lt;/p&gt;\n&lt;p&gt;So this is the JSON returned by Google Translate API:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; \n     &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;translations&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; \n          &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n            &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;translatedText&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Arbeit&quot;&lt;/span&gt;\n             &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n          &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n     &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I want to retrieve the value of &quot;translatedText&quot; attribute e.g. &quot;Arbeit&quot; using Google&apos;s Gson.&lt;/p&gt;\n&lt;p&gt;Two possible approaches:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Retrieve just one needed attribute&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; callToTranslateApi(&lt;span class=&quot;hljs-string&quot;&gt;&quot;work&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;de&quot;&lt;/span&gt;);\n &lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JsonParser&lt;/span&gt;().parse(json).getAsJsonObject();\n &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; jsonObject.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;).getAsJsonObject()\n         .get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;translations&quot;&lt;/span&gt;).getAsJsonArray()\n         .get(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).getAsJsonObject()\n         .get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;translatedText&quot;&lt;/span&gt;).getAsString();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Create Java object from JSON&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ApiResponse&lt;/span&gt; {\n     Data data;      \n     &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Data&lt;/span&gt; {\n         Translation[] translations;         \n         &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Translation&lt;/span&gt; {\n             String translatedText;\n         }\n      }\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;...&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;callToTranslateApi(&lt;span class=&quot;hljs-string&quot;&gt;&quot;work&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;de&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-type&quot;&gt;ApiResponse&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.fromJson(json, ApiResponse.class);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; response.data.translations[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].translatedText;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;You can use &lt;strong&gt;Jayway JsonPath&lt;/strong&gt;. Below is a GitHub link with source code, pom details and good documentation.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://github.com/jayway/JsonPath&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/jayway/JsonPath&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Please follow the below steps.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Add the jayway JSON path dependency in your class path using Maven or download the JAR file and manually add it.&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.jayway.jsonpath&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;json-path&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.2.0&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Please save your input JSON as a file for this example. In my case I saved your JSON as sampleJson.txt. Note you missed a comma between pageInfo and posts.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Read the JSON contents from the above file using bufferedReader and save it as String.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedReader&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:\\\\sampleJson.txt&quot;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-type&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sb&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StringBuilder&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; br.readLine();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (line != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n    sb.append(line);\n    sb.append(System.lineSeparator());\n    line = br.readLine();\n}\nbr.close();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonInput&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sb.toString();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: Parse your JSON string using jayway JSON parser.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Configuration.defaultConfiguration().jsonProvider().parse(jsonInput);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;: Read the details like below.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(document, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pageName&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pagePic&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(document, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pagePic&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(document, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.posts[0].post_id&quot;&lt;/span&gt;);\n\nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pageName &quot;&lt;/span&gt; + pageName);\nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pagePic &quot;&lt;/span&gt; + pagePic);\nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.posts[0].post_id &quot;&lt;/span&gt; + post_id);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;The output will be&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;$.pageInfo.pageName = abc\n$.pageInfo.pagePic = http:&lt;span class=&quot;hljs-comment&quot;&gt;//example.com/content.jpg&lt;/span&gt;\n$.posts[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].post_id  = &lt;span class=&quot;hljs-number&quot;&gt;123456789012_123456789012&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you have maven project then add below dependency  or normal project add json-simple jar.&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;20180813&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Write below java code for convert JSON string to JSON array.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ja&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONArray&lt;/span&gt;(String jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One can use &lt;a href=&quot;https://github.com/apache/incubator-netbeans-html4j&quot; rel=&quot;nofollow noreferrer&quot;&gt;Apache @Model annotation&lt;/a&gt; to create &lt;strong&gt;Java&lt;/strong&gt; model classes representing structure of &lt;strong&gt;JSON&lt;/strong&gt; files and use them to access various elements in the &lt;strong&gt;JSON&lt;/strong&gt; tree. Unlike other solutions this one &lt;em&gt;works completely without reflection&lt;/em&gt; and is thus suitable for environments where reflection is impossible or comes with significant overhead.&lt;/p&gt;\n\n&lt;p&gt;There is a &lt;a href=&quot;https://github.com/JaroslavTulach/incubator-netbeans-html4j/blob/examples/examples/jsonparse/README.md&quot; rel=&quot;nofollow noreferrer&quot;&gt;sample Maven project&lt;/a&gt; showing the usage. First of all it defines the structure:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Model(className=&quot;RepositoryInfo&quot;, properties = {\n    @Property(name = &quot;id&quot;, type = int.class),\n    @Property(name = &quot;name&quot;, type = String.class),\n    @Property(name = &quot;owner&quot;, type = Owner.class),\n    @Property(name = &quot;private&quot;, type = boolean.class),\n})&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RepositoryCntrl&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Model(className = &quot;Owner&quot;, properties = {\n        @Property(name = &quot;login&quot;, type = String.class)\n    })&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;OwnerCntrl&lt;/span&gt; {\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and then it uses the generated RepositoryInfo and Owner classes to parse the provided input stream and pick certain information up while doing that:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;RepositoryInfo&amp;gt; repositories = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; initializeStream(args)) {\n    Models.parse(CONTEXT, RepositoryInfo.class, is, repositories);\n}\n\nSystem.err.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;there is &quot;&lt;/span&gt; + repositories.size() + &lt;span class=&quot;hljs-string&quot;&gt;&quot; repositories&quot;&lt;/span&gt;);\nrepositories.stream().filter((repo) -&amp;gt; repo != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;).forEach((repo) -&amp;gt; {\n    System.err.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;repository &quot;&lt;/span&gt; + repo.getName() + \n        &lt;span class=&quot;hljs-string&quot;&gt;&quot; is owned by &quot;&lt;/span&gt; + repo.getOwner().getLogin()\n    );\n})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That is it! In addition to that here is a &lt;a href=&quot;http://dew.apidesign.org/dew/#7138581&quot; rel=&quot;nofollow noreferrer&quot;&gt;live gist&lt;/a&gt; showing similar example together with asynchronous network communication.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;jsoniter&lt;/code&gt; (jsoniterator) is a relatively new and simple json library, designed to be simple and fast. All you need to do to deserialize json data is&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;JsonIterator.deserialize(jsonData, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;[].class);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;where &lt;code&gt;jsonData&lt;/code&gt; is a string of json data.&lt;/p&gt;\n\n&lt;p&gt;Check out the &lt;a href=&quot;http://jsoniter.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;official website&lt;/a&gt;\nfor more information.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;JsonNode&lt;/code&gt; for a structured tree representation of your JSON string. It&apos;s part of the rock solid &lt;a href=&quot;https://github.com/FasterXML/jackson&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;em&gt;jackson&lt;/em&gt; library&lt;/a&gt; which is omnipresent.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;JsonNode&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;yourObj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mapper.readTree(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;k\\&quot;:\\&quot;v\\&quot;}&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;We can use the JSONObject class to convert a JSON string to a JSON object,\nand to iterate over the JSON object. Use the following code.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jObj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(contents.trim());\nIterator&amp;lt;?&amp;gt; keys = jObj.keys();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;( keys.hasNext() ) {\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (String)keys.next();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( jObj.get(key) &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; JSONObject ) {           \n    System.out.println(jObj.getString(String key));\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"94":["\n&lt;p&gt;Here&apos;s a generator that yields evenly-sized chunks:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lst, n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;Yield successive n-sized chunks from lst.&quot;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(lst), n):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; lst[i:i + n]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pprint\npprint.pprint(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunks(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)))\n[[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;69&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;71&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;72&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For Python 2, using &lt;code&gt;xrange&lt;/code&gt; instead of &lt;code&gt;range&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lst, n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;Yield successive n-sized chunks from lst.&quot;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(lst), n):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; lst[i:i + n]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Below is a list comprehension one-liner. The method above is preferable, though, since using named functions makes code easier to understand. For Python 3:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[lst[i:i + n] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(lst), n)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For Python 2:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[lst[i:i + n] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(lst), n)]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Something super simple:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;xs, n&lt;/span&gt;):\n    n = &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, n)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (xs[i:i+n] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(xs), n))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For Python 2, use &lt;code&gt;xrange()&lt;/code&gt; instead of &lt;code&gt;range()&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I know this is kind of old but nobody yet mentioned &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.array_split.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;numpy.array_split&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np\n\nlst = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)\nnp.array_split(lst, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[array([&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]),\n array([&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;]),\n array([&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;]),\n array([&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;]),\n array([&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;])]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Directly from the (old) Python documentation (recipes for itertools):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; izip, chain, repeat\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;grouper&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, iterable, padvalue=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;grouper(3, &apos;abcdefg&apos;, &apos;x&apos;) --&amp;gt; (&apos;a&apos;,&apos;b&apos;,&apos;c&apos;), (&apos;d&apos;,&apos;e&apos;,&apos;f&apos;), (&apos;g&apos;,&apos;x&apos;,&apos;x&apos;)&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; izip(*[chain(iterable, repeat(padvalue, n-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))]*n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The current version, as suggested by J.F.Sebastian:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#from itertools import izip_longest as zip_longest # for Python 2.x&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; zip_longest &lt;span class=&quot;hljs-comment&quot;&gt;# for Python 3.x&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#from six.moves import zip_longest # for both (uses the six compat library)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;grouper&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, iterable, padvalue=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;grouper(3, &apos;abcdefg&apos;, &apos;x&apos;) --&amp;gt; (&apos;a&apos;,&apos;b&apos;,&apos;c&apos;), (&apos;d&apos;,&apos;e&apos;,&apos;f&apos;), (&apos;g&apos;,&apos;x&apos;,&apos;x&apos;)&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; zip_longest(*[&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)]*n, fillvalue=padvalue)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I guess Guido&apos;s time machine worksworkedwill workwill have workedwas working again.&lt;/p&gt;\n\n&lt;p&gt;These solutions work because &lt;code&gt;[iter(iterable)]*n&lt;/code&gt; (or the equivalent in the earlier version) creates &lt;em&gt;one&lt;/em&gt; iterator, repeated &lt;code&gt;n&lt;/code&gt; times in the list. &lt;code&gt;izip_longest&lt;/code&gt; then effectively performs a round-robin of &quot;each&quot; iterator; because this is the same iterator, it is advanced by each such call, resulting in each such zip-roundrobin generating one tuple of &lt;code&gt;n&lt;/code&gt; items.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m surprised nobody has thought of using &lt;code&gt;iter&lt;/code&gt;&apos;s &lt;a href=&quot;http://docs.python.org/2/library/functions.html#iter&quot; rel=&quot;noreferrer&quot;&gt;two-argument form&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; islice\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunk&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;it, size&lt;/span&gt;):\n    it = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(it)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;(islice(it, size)), ())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works with any iterable and produces output lazily. It returns tuples rather than iterators, but I think it has a certain elegance nonetheless. It also doesn&apos;t pad; if you want padding, a simple variation on the above will suffice:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; islice, chain, repeat\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunk_pad&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;it, size, padval=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    it = chain(&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(it), repeat(padval))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;(islice(it, size)), (padval,) * size)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk_pad(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;)]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk_pad(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Like the &lt;code&gt;izip_longest&lt;/code&gt;-based solutions, the above &lt;em&gt;always&lt;/em&gt; pads. As far as I know, there&apos;s no one- or two-line itertools recipe for a function that &lt;em&gt;optionally&lt;/em&gt; pads. By combining the above two approaches, this one comes pretty close:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;_no_padding = &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt;()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunk&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;it, size, padval=_no_padding&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; padval == _no_padding:\n        it = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(it)\n        sentinel = ()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        it = chain(&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(it), repeat(padval))\n        sentinel = (padval,) * size\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;(islice(it, size)), sentinel)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;)]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;)]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I believe this is the shortest chunker proposed that offers optional padding.&lt;/p&gt;\n\n&lt;p&gt;As Tomasz Gandor &lt;a href=&quot;https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks/22045226?noredirect=1#comment93566337_22045226&quot;&gt;observed&lt;/a&gt;, the two padding chunkers will stop unexpectedly if they encounter a long sequence of pad values. Here&apos;s a final variation that works around that problem in a reasonable way:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;_no_padding = &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt;()\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunk&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;it, size, padval=_no_padding&lt;/span&gt;):\n    it = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(it)\n    chunker = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: &lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;(islice(it, size)), ())\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; padval == _no_padding:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; chunker\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ch &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; chunker:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; ch &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(ch) == size &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; ch + (padval,) * (size - &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(ch))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, (), (), &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), ((), ()), (&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,)]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(chunk([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;))\n[(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a generator that work on arbitrary iterables:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;split_seq&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable, size&lt;/span&gt;):\n    it = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)\n    item = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(itertools.islice(it, size))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; item:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; item\n        item = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(itertools.islice(it, size))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pprint\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;pprint.pprint(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(split_seq(xrange(&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)))\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;69&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;71&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;72&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Simple yet elegant&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;L = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; [L[x:x+&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(L), &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;or if you prefer:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;L, n&lt;/span&gt;): &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [L[x: x+n] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(L), n)]\nchunks(L, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunk&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;, size&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, *([&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;)] * size))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;How do you split a list into evenly sized chunks?&lt;/h2&gt;\n&lt;p&gt;&quot;Evenly sized chunks&quot;, to me, implies that they are all the same length, or barring that option, at &lt;strong&gt;minimal variance&lt;/strong&gt; in length. E.g. 5 baskets for 21 items could have the following results:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; statistics\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;statistics.variance([&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) \n&lt;span class=&quot;hljs-number&quot;&gt;3.2&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;statistics.variance([&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]) \n&lt;span class=&quot;hljs-number&quot;&gt;0.19999999999999998&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A practical reason to prefer the latter result: if you were using these functions to distribute work, you&apos;ve built-in the prospect of one likely finishing well before the others, so it would sit around doing nothing while the others continued working hard.&lt;/p&gt;\n&lt;h3&gt;Critique of other answers here&lt;/h3&gt;\n&lt;p&gt;When I originally wrote this answer, none of the other answers were evenly sized chunks - they all leave a runt chunk at the end, so they&apos;re not well balanced, and have a higher than necessary variance of lengths.&lt;/p&gt;\n&lt;p&gt;For example, the current top answer ends with:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;69&lt;/span&gt;],\n[&lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;71&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;72&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Others, like &lt;code&gt;list(grouper(3, range(7)))&lt;/code&gt;, and &lt;code&gt;chunk(range(7), 3)&lt;/code&gt; both return: &lt;code&gt;[(0, 1, 2), (3, 4, 5), (6, None, None)]&lt;/code&gt;. The &lt;code&gt;None&lt;/code&gt;&apos;s are just padding, and rather inelegant in my opinion. They are NOT evenly chunking the iterables.&lt;/p&gt;\n&lt;p&gt;Why can&apos;t we divide these better?&lt;/p&gt;\n&lt;h3&gt;Cycle Solution&lt;/h3&gt;\n&lt;p&gt;A high-level balanced solution using &lt;code&gt;itertools.cycle&lt;/code&gt;, which is the way I might do it today. Here&apos;s the setup:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cycle\nitems = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;)\nnumber_of_baskets = &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now we need our lists into which to populate the elements:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;baskets = [[] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(number_of_baskets)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Finally, we zip the elements we&apos;re going to allocate together with a cycle of the baskets until we run out of elements, which, semantically, it exactly what we want:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; element, basket &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(items, cycle(baskets)):\n    basket.append(element)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here&apos;s the result:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; pprint &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pprint\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;pprint(baskets)\n[[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;71&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;72&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;66&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;67&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;68&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;69&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To productionize this solution, we write a function, and provide the type annotations:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; cycle\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; typing &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;cycle_baskets&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items: &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;], maxbaskets: &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;]]:\n    baskets = [[] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(maxbaskets, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(items)))]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; item, basket &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(items, cycle(baskets)):\n        basket.append(item)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; baskets\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In the above, we take our list of items, and the max number of baskets. We create a list of empty lists, in which to append each element, in a round-robin style.&lt;/p&gt;\n&lt;h3&gt;Slices&lt;/h3&gt;\n&lt;p&gt;Another elegant solution is to use slices - specifically the less-commonly used &lt;strong&gt;step&lt;/strong&gt; argument to slices. i.e.:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;start = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\nstop = &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\nstep = number_of_baskets\n\nfirst_basket = items[start:stop:step]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is especially elegant in that slices don&apos;t care how long the data are - the result, our first basket, is only as long as it needs to be. We&apos;ll only need to increment the starting point for each basket.&lt;/p&gt;\n&lt;p&gt;In fact this could be a one-liner, but we&apos;ll go multiline for readability and to avoid an overlong line of code:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; typing &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;slice_baskets&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items: &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;], maxbaskets: &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;]]:\n    n_baskets = &lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(maxbaskets, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(items))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [items[i::n_baskets] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(n_baskets)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And &lt;code&gt;islice&lt;/code&gt; from the itertools module will provide a lazily iterating approach, like that which was originally asked for in the question.&lt;/p&gt;\n&lt;p&gt;I don&apos;t expect most use-cases to benefit very much, as the original data is already fully materialized in a list, but for large datasets, it could save nearly half the memory usage.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; islice\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; typing &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;, Generator\n    \n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;yield_islice_baskets&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items: &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;], maxbaskets: &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;&lt;/span&gt;) -&amp;gt; Generator[&lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;[&lt;span class=&quot;hljs-type&quot;&gt;Any&lt;/span&gt;], &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;]:\n    n_baskets = &lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(maxbaskets, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(items))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(n_baskets):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; islice(items, i, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, n_baskets)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;View results with:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; pprint &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pprint\n\nitems = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;))\npprint(cycle_baskets(items, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;))\npprint(slice_baskets(items, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;))\npprint([&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(s) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; s &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; yield_islice_baskets(items, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Updated prior solutions&lt;/h3&gt;\n&lt;p&gt;Here&apos;s another balanced solution, adapted from a function I&apos;ve used in production in the past, that uses the modulo operator:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;baskets_from&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items, maxbaskets=&lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;&lt;/span&gt;):\n    baskets = [[] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(maxbaskets)]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i, item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;enumerate&lt;/span&gt;(items):\n        baskets[i % maxbaskets].append(item)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, baskets) \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And I created a generator that does the same if you put it into a list:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;iter_baskets_from&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items, maxbaskets=&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;generates evenly balanced baskets from indexable iterable&apos;&apos;&apos;&lt;/span&gt;\n    item_count = &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(items)\n    baskets = &lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(item_count, maxbaskets)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x_i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(baskets):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; [items[y_i] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; y_i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(x_i, item_count, baskets)]\n    \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And finally, since I see that all of the above functions return elements in a contiguous order (as they were given):&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;iter_baskets_contiguous&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items, maxbaskets=&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, item_count=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;\n    generates balanced baskets from iterable, contiguous contents\n    provide item_count if providing a iterator that doesn&apos;t support len()\n    &apos;&apos;&apos;&lt;/span&gt;\n    item_count = item_count &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(items)\n    baskets = &lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(item_count, maxbaskets)\n    items = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(items)\n    floor = item_count // baskets \n    ceiling = floor + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    stepdown = item_count % baskets\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x_i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(baskets):\n        length = ceiling &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x_i &amp;lt; stepdown &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; floor\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; [items.&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(length)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Output&lt;/h2&gt;\n&lt;p&gt;To test them out:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(baskets_from(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_from(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_contiguous(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(baskets_from(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_from(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_contiguous(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(baskets_from(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ABCDEFG&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_from(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ABCDEFG&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_contiguous(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ABCDEFG&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(baskets_from(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_from(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iter_baskets_contiguous(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Which prints out:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;G&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;E&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;F&apos;&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;G&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;E&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;F&apos;&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;E&apos;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&apos;F&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;G&apos;&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Notice that the contiguous generator provide chunks in the same length patterns as the other two, but the items are all in order, and they are as evenly divided as one may divide a list of discrete elements.&lt;/p&gt;\n    ","\n&lt;p&gt;If you know list size:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;SplitList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;mylist, chunk_size&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [mylist[offs:offs+chunk_size] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; offs &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(mylist), chunk_size)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you don&apos;t (an iterator):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;IterChunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;sequence, chunk_size&lt;/span&gt;):\n    res = []\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; sequence:\n        res.append(item)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(res) &amp;gt;= chunk_size:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; res\n            res = []\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; res:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; res  &lt;span class=&quot;hljs-comment&quot;&gt;# yield the last, incomplete, portion&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the latter case, it can be rephrased in a more beautiful way if you can be sure that the sequence always contains a whole number of chunks of given size (i.e. there is no incomplete last chunk).&lt;/p&gt;\n    ","\n&lt;p&gt;I saw the most awesome Python-ish answer in a &lt;a href=&quot;https://stackoverflow.com/questions/23286254/convert-list-to-a-list-of-tuples-python&quot;&gt;duplicate&lt;/a&gt; of this question:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; zip_longest\n\na = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;)\ni = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(a)\nr = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(zip_longest(i, i, i))\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(r)\n[(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can create n-tuple for any n. If &lt;code&gt;a = range(1, 15)&lt;/code&gt;, then the result will be:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If the list is divided evenly, then you can replace &lt;code&gt;zip_longest&lt;/code&gt; with &lt;code&gt;zip&lt;/code&gt;, otherwise the triplet &lt;code&gt;(13, 14, None)&lt;/code&gt; would be lost. Python 3 is used above. For Python 2, use &lt;code&gt;izip_longest&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Don&apos;t reinvent the wheel.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Given&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; it\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; collections &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ct\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; more_itertools &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; mit\n\n\niterable = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;)\nn = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://github.com/more-itertools/more-itertools&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;&lt;code&gt;more_itertools&lt;/code&gt;&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;+&lt;/sup&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mit.chunked(iterable, n))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10]]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mit.sliced(iterable, n))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [range(0, 3), range(3, 6), range(6, 9), range(9, 11)]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mit.grouper(n, iterable))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [(0, 1, 2), (3, 4, 5), (6, 7, 8), (9, 10, None)]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mit.windowed(iterable, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(iterable)//n, step=n))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [(0, 1, 2), (3, 4, 5), (6, 7, 8), (9, 10, None)]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mit.chunked_even(iterable, n))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10]]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(or DIY, if you want)&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;The Standard Library&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(it.zip_longest(*[&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)] * n))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [(0, 1, 2), (3, 4, 5), (6, 7, 8), (9, 10, None)]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;d = {}\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i, x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;enumerate&lt;/span&gt;(iterable):\n    d.setdefault(i//n, []).append(x)\n    \n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(d.values())\n&lt;span class=&quot;hljs-comment&quot;&gt;# [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10]]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;dd = ct.defaultdict(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i, x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;enumerate&lt;/span&gt;(iterable):\n    dd[i//n].append(x)\n    \n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(dd.values())\n&lt;span class=&quot;hljs-comment&quot;&gt;# [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10]]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.chunked&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;more_itertools.chunked&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks/16315158#16315158&quot;&gt;related posted&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.sliced&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;more_itertools.sliced&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.grouper&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;more_itertools.grouper&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks/312644#312644&quot;&gt;related post&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;more_itertools.windowed&lt;/code&gt;&lt;/a&gt; (see also &lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.stagger&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;stagger&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.zip_offset&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;zip_offset&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://more-itertools.readthedocs.io/en/latest/api.html#more_itertools.chunked_even&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;more_itertools.chunked_even&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools.zip_longest&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;zip_longest&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks/3125186#3125186&quot;&gt;related post&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks/29009933#29009933&quot;&gt;related post&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.setdefault&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;setdefault&lt;/code&gt;&lt;/a&gt; (ordered results requires Python 3.6+)&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.defaultdict&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;collections.defaultdict&lt;/code&gt;&lt;/a&gt;  (ordered results requires Python 3.6+)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;sub&gt;&lt;sup&gt;+&lt;/sup&gt; A third-party library that implements &lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools-recipes&quot; rel=&quot;noreferrer&quot;&gt;itertools recipes&lt;/a&gt; and more. &lt;code&gt;&amp;gt; pip install more_itertools&lt;/code&gt; &lt;/sub&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[AA[i:i+SS] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(AA))[::SS]]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Where AA is array, SS is chunk size. For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;AA=&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;);SS=&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;[AA[i:i+SS] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(AA))[::SS]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;]]\n&lt;span class=&quot;hljs-comment&quot;&gt;# or [range(10, 13), range(13, 16), range(16, 19), range(19, 21)] in py3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To expand the ranges in py3 do&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;(py3) &amp;gt;&amp;gt;&amp;gt; [&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(AA[i:i+SS]) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(AA))[::SS]]\n[[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you had a chunk size of 3 for example, you could do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(*[iterable[i::&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)]) \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;source:\n&lt;a href=&quot;http://code.activestate.com/recipes/303060-group-a-list-into-sequential-n-tuples/&quot;&gt;http://code.activestate.com/recipes/303060-group-a-list-into-sequential-n-tuples/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I would use this when my chunk size is fixed number I can type, e.g. &apos;3&apos;, and would never change.&lt;/p&gt;\n    ","\n&lt;p&gt;The &lt;a href=&quot;https://github.com/pytoolz/toolz&quot;&gt;toolz&lt;/a&gt; library has the &lt;code&gt;partition&lt;/code&gt; function for this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; toolz.itertoolz.core &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; partition\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(partition(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]))\n[(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;With &lt;a href=&quot;https://www.python.org/dev/peps/pep-0572/&quot; rel=&quot;noreferrer&quot;&gt;Assignment Expressions&lt;/a&gt; in Python 3.8 it becomes quite nice:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; itertools\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;batch&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable, size&lt;/span&gt;):\n    it = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; item := &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(itertools.islice(it, size)):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; item\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works on an arbitrary iterable, not just a list.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pprint\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;pprint.pprint(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(batch(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)))\n[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;69&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;71&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;72&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I was curious about the performance of different approaches and here it is:&lt;/p&gt;\n\n&lt;p&gt;Tested on Python 3.5.1&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; time\nbatch_size = &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\narr_len = &lt;span class=&quot;hljs-number&quot;&gt;298937&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#---------slice-------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\r\\nslice&quot;&lt;/span&gt;)\nstart = time.time()\narr = [i &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, arr_len)]\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; arr:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;\n\n    tmp = arr[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:batch_size]\n    arr = arr[batch_size:-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(time.time() - start)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#-----------index-----------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\r\\nindex&quot;&lt;/span&gt;)\narr = [i &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, arr_len)]\nstart = time.time()\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;round&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(arr) / batch_size + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)):\n    tmp = arr[batch_size * i : batch_size * (i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(time.time() - start)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#----------batches 1------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;batch&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable, n=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;):\n    l = &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(iterable)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ndx &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l, n):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; iterable[ndx:&lt;span class=&quot;hljs-built_in&quot;&gt;min&lt;/span&gt;(ndx + n, l)]\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\r\\nbatches 1&quot;&lt;/span&gt;)\narr = [i &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, arr_len)]\nstart = time.time()\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; batch(arr, batch_size):\n    tmp = x\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(time.time() - start)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#----------batches 2------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; islice, chain\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;batch&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable, size&lt;/span&gt;):\n    sourceiter = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;:\n        batchiter = islice(sourceiter, size)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; chain([&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;(batchiter)], batchiter)\n\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\r\\nbatches 2&quot;&lt;/span&gt;)\narr = [i &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, arr_len)]\nstart = time.time()\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; batch(arr, batch_size):\n    tmp = x\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(time.time() - start)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#---------chunks-------------&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;l, n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;Yield successive n-sized chunks from l.&quot;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(l), n):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; l[i:i + n]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\r\\nchunks&quot;&lt;/span&gt;)\narr = [i &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, arr_len)]\nstart = time.time()\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; chunks(arr, batch_size):\n    tmp = x\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(time.time() - start)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;#-----------grouper-----------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; zip_longest &lt;span class=&quot;hljs-comment&quot;&gt;# for Python 3.x&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#from six.moves import zip_longest # for both (uses the six compat library)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;grouper&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable, n, padvalue=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;grouper(3, &apos;abcdefg&apos;, &apos;x&apos;) --&amp;gt; (&apos;a&apos;,&apos;b&apos;,&apos;c&apos;), (&apos;d&apos;,&apos;e&apos;,&apos;f&apos;), (&apos;g&apos;,&apos;x&apos;,&apos;x&apos;)&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; zip_longest(*[&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)]*n, fillvalue=padvalue)\n\narr = [i &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, arr_len)]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\r\\ngrouper&quot;&lt;/span&gt;)\nstart = time.time()\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; grouper(arr, batch_size):\n    tmp = x\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(time.time() - start)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Results:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;slice&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;31.18285083770752&lt;/span&gt;\n\nindex\n&lt;span class=&quot;hljs-number&quot;&gt;0.02184295654296875&lt;/span&gt;\n\nbatches &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0.03503894805908203&lt;/span&gt;\n\nbatches &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0.22681021690368652&lt;/span&gt;\n\nchunks\n&lt;span class=&quot;hljs-number&quot;&gt;0.019841909408569336&lt;/span&gt;\n\ngrouper\n&lt;span class=&quot;hljs-number&quot;&gt;0.006506919860839844&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I like the Python doc&apos;s version proposed by tzot and J.F.Sebastian a lot,\n but it has two shortcomings:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;it is not very explicit&lt;/li&gt;\n&lt;li&gt;I usually don&apos;t want a fill value in the last chunk&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I&apos;m using this one a lot in my code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; islice\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, iterable&lt;/span&gt;):\n    iterable = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;(islice(iterable, n)) &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; iterable.&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;UPDATE: A lazy chunks version:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; chain, islice\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, iterable&lt;/span&gt;):\n   iterable = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)\n   &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;:\n       &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; chain([&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;(iterable)], islice(iterable, n-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You may also use &lt;a href=&quot;http://utilspie.readthedocs.io/en/latest/#get-chunks&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;get_chunks&lt;/code&gt;&lt;/a&gt; function of &lt;a href=&quot;http://utilspie.readthedocs.io&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;utilspie&lt;/code&gt;&lt;/a&gt; library as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; utilspie &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; iterutils\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iterutils.get_chunks(a, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;))\n[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can install &lt;a href=&quot;https://pypi.python.org/pypi/utilspie&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;utilspie&lt;/code&gt;&lt;/a&gt; via pip:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;sudo pip install utilspie\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Disclaimer: I am the creator of &lt;a href=&quot;https://github.com/moin18/utilspie&quot; rel=&quot;noreferrer&quot;&gt;utilspie&lt;/a&gt; library&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;split_list&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;the_list, chunk_size&lt;/span&gt;):\n    result_list = []\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; the_list:\n        result_list.append(the_list[:chunk_size])\n        the_list = the_list[chunk_size:]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result_list\n\na_list = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; split_list(a_list, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;At this point, I think we need a &lt;strong&gt;recursive generator&lt;/strong&gt;, just in case...&lt;/p&gt;\n\n&lt;p&gt;In python 2:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;li, n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; li == []:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; li[:n]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; e &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; chunks(li[n:], n):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; e\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In python 3:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;li, n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; li == []:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; li[:n]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; chunks(li[n:], n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, in case of massive Alien invasion, a &lt;strong&gt;decorated recursive generator&lt;/strong&gt; might become handy:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dec&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;gen&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;new_gen&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;li, n&lt;/span&gt;):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; e &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; gen(li, n):\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; e == []:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; e\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; new_gen\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@dec&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;li, n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; li[:n]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; e &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; chunks(li[n:], n):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; e\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;heh, one line version&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;]: chunk = &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; ulist, step:  &lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; i: ulist[i:i+step],  xrange(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(ulist), step))\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;]: chunk(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;]: \n[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;51&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;54&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;62&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;63&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;66&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;69&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;71&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;72&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;74&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;76&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;77&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;78&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;79&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;82&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;83&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;84&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;85&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;86&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;87&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;88&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;89&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;90&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;91&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;92&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;93&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;94&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;95&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;96&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;97&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;98&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;99&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;split_seq&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq, num_pieces&lt;/span&gt;):\n    start = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; xrange(num_pieces):\n        stop = start + &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(seq[i::num_pieces])\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; seq[start:stop]\n        start = stop\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;seq = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; split_seq(seq, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; seq\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another more explicit version.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunkList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;initialList, chunkSize&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;\n    This function chunks a list into sub lists \n    that have a length equals to chunkSize.\n\n    Example:\n    lst = [3, 4, 9, 7, 1, 1, 2, 3]\n    print(chunkList(lst, 3)) \n    returns\n    [[3, 4, 9], [7, 1, 1], [2, 3]]\n    &quot;&quot;&quot;&lt;/span&gt;\n    finalList = []\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(initialList), chunkSize):\n        finalList.append(initialList[i:i+chunkSize])\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; finalList\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Without calling len() which is good for large lists:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;splitter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;l, n&lt;/span&gt;):\n    i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    chunk = l[:n]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; chunk:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; chunk\n        i += n\n        chunk = l[i:i+n]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this is for iterables:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isplitter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;l, n&lt;/span&gt;):\n    l = &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(l)\n    chunk = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(islice(l, n))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; chunk:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; chunk\n        chunk = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(islice(l, n))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The functional flavour of the above:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isplitter2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;l, n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; takewhile(&lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;,\n                     (&lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;(islice(start, n))\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; start &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; repeat(&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(l))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks_gen_sentinel&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, seq&lt;/span&gt;):\n    continuous_slices = imap(islice, repeat(&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(seq)), repeat(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;), repeat(n))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(imap(&lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;, continuous_slices).&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;,())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks_gen_filter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n, seq&lt;/span&gt;):\n    continuous_slices = imap(islice, repeat(&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(seq)), repeat(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;), repeat(n))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; takewhile(&lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;,imap(&lt;span class=&quot;hljs-built_in&quot;&gt;tuple&lt;/span&gt;, continuous_slices))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;See &lt;a href=&quot;http://docs.python.org/3.3/library/functions.html?highlight=zip#zip&quot; rel=&quot;noreferrer&quot;&gt;this reference&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;orange = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1001&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;otuples = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;( &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(*[&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(orange)]*&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;))\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(otuples)\n[(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;), ... (&lt;span class=&quot;hljs-number&quot;&gt;991&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;992&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;993&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;994&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;995&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;996&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;997&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;998&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;999&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;olist = [&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(i) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; otuples]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(olist)\n[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;], ..., [&lt;span class=&quot;hljs-number&quot;&gt;991&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;992&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;993&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;994&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;995&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;996&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;997&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;998&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;999&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;]]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Python3&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;chunks&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable,n&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;assumes n is an integer&amp;gt;0\n    &quot;&quot;&quot;&lt;/span&gt;\n    iterable=&lt;span class=&quot;hljs-built_in&quot;&gt;iter&lt;/span&gt;(iterable)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;:\n        result=[]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(n):\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n                a=&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;(iterable)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt; StopIteration:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n                result.append(a)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; result:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; result\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;\n\ng1=(i*i &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;))\ng2=chunks(g1,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; g2\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;generator object chunks at 0x0337B9B8&amp;gt;&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(g2)\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;[[0, 1, 4], [9, 16, 25], [36, 49, 64], [81]]&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Since everybody here talking about iterators. &lt;a href=&quot;https://boltons.readthedocs.io/&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;boltons&lt;/code&gt;&lt;/a&gt; has perfect method for that, called &lt;a href=&quot;https://boltons.readthedocs.io/en/latest/iterutils.html#boltons.iterutils.chunked_iter&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;iterutils.chunked_iter&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; boltons &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; iterutils\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(iterutils.chunked_iter(&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)), &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;],\n [&lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But if you don&apos;t want to be mercy on memory, you can use old-way and store the full &lt;code&gt;list&lt;/code&gt; in the first place with &lt;a href=&quot;https://boltons.readthedocs.io/en/latest/iterutils.html#boltons.iterutils.chunked&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;iterutils.chunked&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Consider using &lt;a href=&quot;http://matplotlib.sourceforge.net/&quot; rel=&quot;noreferrer&quot;&gt;matplotlib.cbook&lt;/a&gt; pieces&lt;/p&gt;\n\n&lt;p&gt;for example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; matplotlib.cbook &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; cbook\nsegments = cbook.pieces(np.arange(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; s &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; segments:\n     &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; s\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;a = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]\nCHUNK = &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n[a[i*CHUNK:(i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)*CHUNK] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; xrange((&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(a) + CHUNK - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) / CHUNK )]\n&lt;/code&gt;&lt;/pre&gt;\n    "],"95":["\n&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: I intend to make this a &quot;one stop post&quot; where you can use the &lt;code&gt;Correct&lt;/code&gt; way to find the last row. This will also cover the best practices to follow when finding the last row. And hence I will keep on updating it whenever I come across a new scenario/information.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;&lt;strong&gt;Unreliable ways of finding the last row&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;Some of the most common ways of finding last row which are highly unreliable and hence should never be used.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;UsedRange&lt;/li&gt;\n&lt;li&gt;xlDown&lt;/li&gt;\n&lt;li&gt;CountA&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;code&gt;UsedRange&lt;/code&gt; should &lt;strong&gt;NEVER&lt;/strong&gt; be used to find the last cell which has data. It is highly unreliable. Try this experiment.&lt;/p&gt;\n\n&lt;p&gt;Type something in cell &lt;code&gt;A5&lt;/code&gt;. Now when you calculate the last row with any of the methods given below, it will give you 5. Now color the cell &lt;code&gt;A10&lt;/code&gt; red. If you now use the any of the below code, you will still get 5. If you use &lt;code&gt;Usedrange.Rows.Count&lt;/code&gt; what do you get? It won&apos;t be 5.&lt;/p&gt;\n\n&lt;p&gt;Here is a scenario to show how &lt;code&gt;UsedRange&lt;/code&gt; works.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/3TqSI.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;xlDown&lt;/code&gt; is equally unreliable. &lt;/p&gt;\n\n&lt;p&gt;Consider this code&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;lastrow = Range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;(xlDown).Row\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What would happen if there was only one cell (&lt;code&gt;A1&lt;/code&gt;) which had data? You will end up reaching the last row in the worksheet! It&apos;s like selecting cell &lt;code&gt;A1&lt;/code&gt; and then pressing &lt;kbd&gt;End&lt;/kbd&gt; key and then pressing &lt;kbd&gt;Down Arrow&lt;/kbd&gt; key. This will also give you unreliable results if there are blank cells in a range.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;CountA&lt;/code&gt; is also unreliable because it will give you incorrect result if there are blank cells in between. &lt;/p&gt;\n\n&lt;p&gt;And hence one should avoid the use of &lt;code&gt;UsedRange&lt;/code&gt;, &lt;code&gt;xlDown&lt;/code&gt; and &lt;code&gt;CountA&lt;/code&gt; to find the last cell.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Find Last Row in a Column&lt;/h2&gt;\n\n&lt;p&gt;To find the last Row in Col E use this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt; Sheets(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;)\n    LastRow = .Range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;E&quot;&lt;/span&gt; &amp;amp; .Rows.Count).&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;(xlUp).Row\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you notice that we have a &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt;. We often chose to ignore that. See &lt;a href=&quot;https://stackoverflow.com/questions/19985345/vba-excel-compability-mode#comment29753337_19985345&quot;&gt;THIS&lt;/a&gt; question on the possible error that you may get. I always advise using &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt; and &lt;code&gt;Columns.Count&lt;/code&gt;. That question is a classic scenario where the code will fail because the &lt;code&gt;Rows.Count&lt;/code&gt; returns &lt;code&gt;65536&lt;/code&gt; for Excel 2003 and earlier and &lt;code&gt;1048576&lt;/code&gt; for Excel 2007 and later. Similarly &lt;code&gt;Columns.Count&lt;/code&gt; returns &lt;code&gt;256&lt;/code&gt; and &lt;code&gt;16384&lt;/code&gt;, respectively. &lt;/p&gt;\n\n&lt;p&gt;The above fact that Excel 2007+ has &lt;code&gt;1048576&lt;/code&gt; rows also emphasizes on the fact that we should always declare the variable which will hold the row value as &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; else you will get an &lt;code&gt;Overflow&lt;/code&gt; error.&lt;/p&gt;\n\n&lt;p&gt;Note that this approach will skip any hidden rows. Looking back at &lt;a href=&quot;https://i.stack.imgur.com/3TqSI.png&quot; rel=&quot;noreferrer&quot;&gt;my screenshot above for column A&lt;/a&gt;, if row 8 were hidden, this approach would return &lt;code&gt;5&lt;/code&gt; instead of &lt;code&gt;8&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Find Last Row in a Sheet&lt;/h2&gt;\n\n&lt;p&gt;To find the &lt;code&gt;Effective&lt;/code&gt; last row in the sheet, use this. Notice the use of &lt;code&gt;Application.WorksheetFunction.CountA(.Cells)&lt;/code&gt;. This is required because if there are no cells with data in the worksheet then &lt;code&gt;.Find&lt;/code&gt; will give you &lt;code&gt;Run Time Error 91: Object Variable or With block variable not set&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt; Sheets(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; Application.WorksheetFunction.CountA(.Cells) &amp;lt;&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n        lastrow = .Cells.Find(What:=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;, _\n                      After:=.Range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A1&quot;&lt;/span&gt;), _\n                      Lookat:=xlPart, _\n                      LookIn:=xlFormulas, _\n                      SearchOrder:=xlByRows, _\n                      SearchDirection:=xlPrevious, _\n                      MatchCase:=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;).Row\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n        lastrow = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Find Last Row in a Table (ListObject)&lt;/h2&gt;\n\n&lt;p&gt;The same principles apply, for example to get the last row in the third column of a table:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt; FindLastRowInExcelTableColAandB()\n&lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lastRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; ws &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet, tbl &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ListObject\n&lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = Sheets(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot;&gt;&apos;Modify as needed&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;&apos;Assuming the name of the table is &quot;Table1&quot;, modify as needed&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; tbl = ws.ListObjects(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Table1&quot;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt; tbl.ListColumns(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;).Range\n    lastrow = .Find(What:=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;, _\n                After:=.Cells(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), _\n                Lookat:=xlPart, _\n                LookIn:=xlFormulas, _\n                SearchOrder:=xlByRows, _\n                SearchDirection:=xlPrevious, _\n                MatchCase:=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;).Row\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Note: this answer was motivated by &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;. The purpose of &lt;code&gt;UsedRange&lt;/code&gt; is different from what is mentioned in the answer above.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;As to the correct way of finding the last used cell, one has first to decide what is considered &lt;em&gt;used&lt;/em&gt;, and then select a suitable method&lt;/strong&gt;. I conceive at least three meanings:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Used = non-blank, i.e., having &lt;strong&gt;data&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;.&quot;\n&lt;a href=&quot;http://support.microsoft.com/kb/244435&quot; rel=&quot;noreferrer&quot;&gt;As per official documentation&lt;/a&gt;, this is the criterion used by Excel at the time of saving. See also &lt;a href=&quot;https://support.office.com/en-sg/article/Locate-and-reset-the-last-cell-on-a-worksheet-c9e468a8-0fc3-4f69-8038-b3c1d86e99e9&quot; rel=&quot;noreferrer&quot;&gt;this official documentation&lt;/a&gt;.\nIf one is not aware of this, the criterion may produce unexpected results, but it may also be intentionally exploited (less often, surely), e.g., to highlight or print specific regions, which may eventually have no data.\nAnd, of course, it is desirable as a criterion for the range to use when saving a workbook, lest losing part of one&apos;s work.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;&quot; &lt;strong&gt;or conditional formatting.&lt;/strong&gt;\nSame as 2., but also including cells that are the target for any Conditional Formatting rule.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;How to find the last used cell depends on what &lt;em&gt;you&lt;/em&gt; want (your criterion)&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;For criterion 1, I suggest reading &lt;a href=&quot;https://stackoverflow.com/a/11169920/2707864&quot;&gt;this answer&lt;/a&gt;&lt;/em&gt;.\nNote that &lt;code&gt;UsedRange&lt;/code&gt; is cited as unreliable. I think that is misleading (i.e., &quot;unfair&quot; to &lt;code&gt;UsedRange&lt;/code&gt;), as &lt;code&gt;UsedRange&lt;/code&gt; is simply not meant to report the last cell containing data. So it should not be used in this case, as indicated in that answer. See also &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;For criterion 2, &lt;code&gt;UsedRange&lt;/code&gt; is the most reliable option&lt;/em&gt;, as compared to other options also designed for this use. It even makes it unnecessary to save a workbook to make sure that the last cell is updated.\n&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;End&lt;/kbd&gt; will go to a wrong cell prior to saving\n(The last cell is not reset until you save the worksheet, from\n&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot; rel=&quot;noreferrer&quot;&gt;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&lt;/a&gt;.\nIt is an old reference, but in this respect valid).&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;For criterion 3, I do not know any built-in method&lt;/em&gt;.\nCriterion 2 does not account for Conditional Formatting. One may have formatted cells, based on formulas, which are not detected by &lt;code&gt;UsedRange&lt;/code&gt; or &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;End&lt;/kbd&gt;.\nIn the figure, the last cell is B3, since formatting was applied explicitly to it. Cells B6:D7 have a format derived from a Conditional Formatting rule, and this is not detected even by &lt;code&gt;UsedRange&lt;/code&gt;.\nAccounting for this would require some VBA programming.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/vhayX.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;As to your specific question&lt;/strong&gt;:\n&lt;em&gt;What&apos;s the reason behind this?&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Your code uses the first cell in your range E4:E48 as a trampoline, for &lt;em&gt;jumping&lt;/em&gt; down with &lt;code&gt;End(xlDown)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;The &quot;erroneous&quot; output will obtain if there are no &lt;em&gt;non-blank&lt;/em&gt; cells in your range other than perhaps the first. Then, you are &lt;em&gt;leaping in the dark&lt;/em&gt;, i.e., down the worksheet\n(you should note the difference between &lt;em&gt;blank&lt;/em&gt; and &lt;em&gt;empty string&lt;/em&gt;!). &lt;/p&gt;\n\n&lt;p&gt;Note that:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;If your range contains non-contiguous non-blank cells, then it will also give a wrong result.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If there is only one non-blank cell, but it is not the first one, your code will still give you the correct result.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;I created this one-stop function for &lt;strong&gt;determining the last row, column and cell, be it for data, formatted (grouped/commented/hidden) cells or conditional formatting&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt; LastCellMsg()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; strResult &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngDataRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngDataCol &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; strDataCell &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; strDataFormatRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngDataFormatCol &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; strDataFormatCell &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; oFormatCond &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; FormatCondition\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngTempRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngTempCol &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngCFRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngCFCol &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; strCFCell &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngOverallRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; lngOverallCol &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; strOverallCell &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt; ActiveSheet\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; .ListObjects.Count &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n            MsgBox &lt;span class=&quot;hljs-string&quot;&gt;&quot;Cannot return reliable results, as there is at least one table in the worksheet.&quot;&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Exit&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n\n        strResult = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Workbook name: &quot;&lt;/span&gt; &amp;amp; .Parent.Name &amp;amp; vbCrLf\n        strResult = strResult &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sheet name: &quot;&lt;/span&gt; &amp;amp; .Name &amp;amp; vbCrLf\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;DATA:&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last data row&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; Application.WorksheetFunction.CountA(.Cells) &amp;lt;&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n            lngDataRow = .Cells.Find(What:=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;, _\n             After:=.Range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A1&quot;&lt;/span&gt;), _\n             Lookat:=xlPart, _\n             LookIn:=xlFormulas, _\n             SearchOrder:=xlByRows, _\n             SearchDirection:=xlPrevious, _\n             MatchCase:=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;).Row\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n            lngDataRow = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last data row: &quot; &amp;amp; lngDataRow &amp;amp; vbCrLf&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last data column&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; Application.WorksheetFunction.CountA(.Cells) &amp;lt;&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n            lngDataCol = .Cells.Find(What:=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;, _\n             After:=.Range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A1&quot;&lt;/span&gt;), _\n             Lookat:=xlPart, _\n             LookIn:=xlFormulas, _\n             SearchOrder:=xlByColumns, _\n             SearchDirection:=xlPrevious, _\n             MatchCase:=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;).Column\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n            lngDataCol = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last data column: &quot; &amp;amp; lngDataCol &amp;amp; vbCrLf&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last data cell&lt;/span&gt;\n        strDataCell = Replace(Cells(lngDataRow, lngDataCol).Address, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;, vbNullString)\n        strResult = strResult &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Last data cell: &quot;&lt;/span&gt; &amp;amp; strDataCell &amp;amp; vbCrLf\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;FORMATS:&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last data/formatted/grouped/commented/hidden row&lt;/span&gt;\n        strDataFormatRow = StrReverse(Split(StrReverse(.UsedRange.Address), &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;)(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last data/formatted row: &quot; &amp;amp; strDataFormatRow &amp;amp; vbCrLf&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last data/formatted/grouped/commented/hidden column&lt;/span&gt;\n        lngDataFormatCol = Range(StrReverse(Split(StrReverse(.UsedRange.Address), &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;)(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;).Column\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last data/formatted column: &quot; &amp;amp; lngDataFormatCol &amp;amp; vbCrLf&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last data/formatted/grouped/commented/hidden cell&lt;/span&gt;\n        strDataFormatCell = Replace(Cells(strDataFormatRow, lngDataFormatCol).Address, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;, vbNullString)\n        strResult = strResult &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Last data/formatted cell: &quot;&lt;/span&gt; &amp;amp; strDataFormatCell &amp;amp; vbCrLf\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;CONDITIONAL FORMATS:&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;For&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Each&lt;/span&gt; oFormatCond &lt;span class=&quot;hljs-keyword&quot;&gt;In&lt;/span&gt; .Cells.FormatConditions\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last conditionally-formatted row&lt;/span&gt;\n            lngTempRow = &lt;span class=&quot;hljs-built_in&quot;&gt;CLng&lt;/span&gt;(StrReverse(Split(StrReverse(oFormatCond.AppliesTo.Address), &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;)(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)))\n            &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; lngTempRow &amp;gt; lngCFRow &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt; lngCFRow = lngTempRow\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last conditionally-formatted column&lt;/span&gt;\n            lngTempCol = Range(StrReverse(Split(StrReverse(oFormatCond.AppliesTo.Address), &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;)(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;).Column\n            &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; lngTempCol &amp;gt; lngCFCol &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt; lngCFCol = lngTempCol\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Next&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;no results are returned for Conditional Format if there is no such&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; lngCFRow &amp;lt;&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last cond-formatted row: &quot; &amp;amp; lngCFRow &amp;amp; vbCrLf&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last cond-formatted column: &quot; &amp;amp; lngCFCol &amp;amp; vbCrLf&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;&apos;last conditionally-formatted cell&lt;/span&gt;\n            strCFCell = Replace(Cells(lngCFRow, lngCFCol).Address, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;, vbNullString)\n            strResult = strResult &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Last cond-formatted cell: &quot;&lt;/span&gt; &amp;amp; strCFCell &amp;amp; vbCrLf\n        &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;OVERALL:&lt;/span&gt;\n        lngOverallRow = Application.WorksheetFunction.Max(lngDataRow, strDataFormatRow, lngCFRow)\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last overall row: &quot; &amp;amp; lngOverallRow &amp;amp; vbCrLf&lt;/span&gt;\n        lngOverallCol = Application.WorksheetFunction.Max(lngDataCol, lngDataFormatCol, lngCFCol)\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos;strResult = strResult &amp;amp; &quot;Last overall column: &quot; &amp;amp; lngOverallCol &amp;amp; vbCrLf&lt;/span&gt;\n        strOverallCell = Replace(.Cells(lngOverallRow, lngOverallCol).Address, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;, vbNullString)\n        strResult = strResult &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Last overall cell: &quot;&lt;/span&gt; &amp;amp; strOverallCell &amp;amp; vbCrLf\n\n        MsgBox strResult\n        Debug.Print strResult\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Results look like this:&lt;br&gt;\n&lt;img src=&quot;https://i.stack.imgur.com/4UaTd.jpg&quot; alt=&quot;determine last cell&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;For more detailed results, some lines in the code can be uncommented:&lt;br&gt;\n&lt;img src=&quot;https://i.stack.imgur.com/iqXQ0.jpg&quot; alt=&quot;last column, row&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;One limitation exists - if there are tables in the sheet, results can become unreliable, so I decided to avoid running the code in this case:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; .ListObjects.Count &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n    MsgBox &lt;span class=&quot;hljs-string&quot;&gt;&quot;Cannot return reliable results, as there is at least one table in the worksheet.&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Exit&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One important note to keep in mind when using the solution ...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;LastRow = ws.Cells.Find(What:=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;, After:=ws.range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;a1&quot;&lt;/span&gt;), SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;... is to ensure that your &lt;code&gt;LastRow&lt;/code&gt; variable is of &lt;code&gt;Long&lt;/code&gt; type:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; LastRow &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Otherwise you will end up getting OVERFLOW errors in certain situations in .XLSX workbooks&lt;/p&gt;\n\n&lt;p&gt;This is my encapsulated function that I drop in to various code uses.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; FindLastRow(ws &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&apos; --------------------------------------------------------------------------------&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&apos; Find the last used Row on a Worksheet&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&apos; --------------------------------------------------------------------------------&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; WorksheetFunction.CountA(ws.Cells) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;&apos; Search for any entry, by searching backwards by Rows.&lt;/span&gt;\n        FindLastRow = ws.Cells.Find(What:=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;, After:=ws.range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;a1&quot;&lt;/span&gt;), SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Since the original question is about &lt;em&gt;problems&lt;/em&gt; with finding the last cell, &lt;strong&gt;in this answer I will list the various ways you can get unexpected results&lt;/strong&gt;; see &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my answer to &lt;em&gt;&quot;How can I find last row that contains data in the Excel sheet with a macro?&quot;&lt;/em&gt;&lt;/a&gt; for my take on solving this.&lt;/p&gt;\n\n&lt;p&gt;I&apos;ll start by expanding on &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba#comment73816621_27637752&quot;&gt;the comment by GlennFromIowa&lt;/a&gt;, adding even more detail:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;[...] one has first to decide what is considered used. I see at least 6 meanings. Cell has:&lt;/p&gt;\n  \n  &lt;ul&gt;\n  &lt;li&gt;1) data, i.e., a formula, possibly resulting in a blank value;&lt;/li&gt;\n  &lt;li&gt;2) a value, i.e., a non-blank formula or constant;&lt;/li&gt;\n  &lt;li&gt;3) formatting;&lt;/li&gt;\n  &lt;li&gt;4) conditional formatting;&lt;/li&gt;\n  &lt;li&gt;5) a shape (including Comment) overlapping the cell;&lt;/li&gt;\n  &lt;li&gt;6) involvement in a Table (List Object).&lt;/li&gt;\n  &lt;/ul&gt;\n  \n  &lt;p&gt;Which combination do you want to test for? Some (such as Tables) may be more difficult to test for, and some may be rare (such as a shape outside of data range),  but others may vary based on the situation (e.g., formulas with blank values).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Other things you might want to consider:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;A) Can there be &lt;em&gt;hidden rows&lt;/em&gt; (e.g. autofilter), &lt;em&gt;blank cells&lt;/em&gt; or blank rows?&lt;/li&gt;\n&lt;li&gt;B) What kind of performance is acceptable?&lt;/li&gt;\n&lt;li&gt;C) Can the VBA macro affect the workbook or the application settings in any way?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;With that in mind, let&apos;s see &lt;strong&gt;how the common ways of getting the &quot;last cell&quot; can produce unexpected results:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The &lt;code&gt;.End(xlDown)&lt;/code&gt; code from the question will break most easily (e.g. with &lt;strong&gt;a single non-empty cell&lt;/strong&gt; or when there are &lt;strong&gt;blank cells in between&lt;/strong&gt;) for the reasons explained in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (search for &lt;em&gt;&quot;xlDown is equally unreliable.&quot;&lt;/em&gt;) &lt;/li&gt;\n&lt;li&gt;Any solution based on &lt;code&gt;Count&lt;/code&gt;ing (&lt;code&gt;CountA&lt;/code&gt; or &lt;code&gt;Cells*.Count&lt;/code&gt;) or &lt;code&gt;.CurrentRegion&lt;/code&gt; will also break in presence of blank cells or rows &lt;/li&gt;\n&lt;li&gt;A solution involving &lt;code&gt;.End(xlUp)&lt;/code&gt; to search backwards from the end of a column will, just as CTRL+UP, look for &lt;strong&gt;data&lt;/strong&gt; (formulas producing a blank value are considered &quot;data&quot;) in &lt;strong&gt;visible rows&lt;/strong&gt; (so using it with autofilter enabled might produce incorrect results ). &lt;p&gt;You have to take care to avoid the standard pitfalls (for details I&apos;ll again refer to &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here, look for the &lt;em&gt;&quot;Find Last Row in a Column&quot;&lt;/em&gt; section), such as hard-coding the last row (&lt;code&gt;Range(&quot;A65536&quot;).End(xlUp)&lt;/code&gt;) instead of relying on &lt;code&gt;sht.Rows.Count&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;.SpecialCells(xlLastCell)&lt;/code&gt; is equivalent to CTRL+END, returning the bottom-most and right-most cell of the &quot;used range&quot;, so all caveats that apply to relying on the &quot;used range&quot;, apply to this method as well. In addition, the &quot;used range&quot; is only reset when saving the workbook and when accessing &lt;code&gt;worksheet.UsedRange&lt;/code&gt;, so &lt;code&gt;xlLastCell&lt;/code&gt; might produce stale results with unsaved modifications (e.g. after some rows were deleted). See the &lt;a href=&quot;https://stackoverflow.com/a/29899739/1026&quot;&gt;nearby answer by dotNET&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sht.UsedRange&lt;/code&gt; (described in detail in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; here) considers &lt;strong&gt;both data and formatting&lt;/strong&gt; (though not conditional formatting) and &lt;strong&gt;resets the &quot;used range&quot; of the worksheet&lt;/strong&gt;, which may or may not be what you want.&lt;p&gt;Note that a common mistake is to use &lt;code&gt;.UsedRange.Rows.Count&lt;/code&gt;, which returns the &lt;em&gt;number of rows&lt;/em&gt; in the used range, not the &lt;em&gt;last row number&lt;/em&gt; (they will be different if the first few rows are blank), for details see &lt;a href=&quot;https://stackoverflow.com/a/35975280/1026&quot;&gt;newguy&apos;s answer to &lt;em&gt;How can I find last row that contains data in the Excel sheet with a macro?&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;.Find&lt;/code&gt; allows you to find the last row with any data (including formulas) or a non-blank value &lt;strong&gt;in any column&lt;/strong&gt;. You can choose whether you&apos;re interested in formulas or values, but the catch is that it &lt;strong&gt;resets the defaults in the Excel&apos;s Find dialog&lt;/strong&gt; , which can be highly confusing to your users. It also needs to be used carefully, see &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (section &lt;em&gt;&quot;Find Last Row in a Sheet&quot;&lt;/em&gt;)&lt;/li&gt;\n&lt;li&gt;More explicit solutions that check individual &lt;code&gt;Cells&lt;/code&gt;&apos; in a loop are generally slower than re-using an Excel function (although can still be performant), but let you specify exactly what you want to find. See &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my solution&lt;/a&gt; based on &lt;code&gt;UsedRange&lt;/code&gt; and VBA arrays to find the last cell with data in the given column -- it handles hidden rows, filters, blanks, does not modify the Find defaults and is quite performant.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Whatever solution you pick, be careful&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;to use &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; to store the row numbers (to avoid getting &lt;code&gt;Overflow&lt;/code&gt; with more than 65k rows) and&lt;/li&gt;\n&lt;li&gt;to always specify the worksheet you&apos;re working with (i.e. &lt;code&gt;Dim ws As Worksheet ... ws.Range(...)&lt;/code&gt; instead of &lt;code&gt;Range(...)&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;when using &lt;code&gt;.Value&lt;/code&gt; (which is a &lt;code&gt;Variant&lt;/code&gt;) avoid implicit casts like &lt;code&gt;.Value &amp;lt;&amp;gt; &quot;&quot;&lt;/code&gt; as they will fail if the cell contains an error value.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I would add to the answer given by Siddarth Rout to say that the CountA call can be skipped by having Find return a Range object, instead of a row number, and then test the returned Range object to see if it is Nothing (blank worksheet). &lt;/p&gt;\n\n&lt;p&gt;Also, I would have my version of any LastRow procedure return a zero for a blank worksheet, then I can know it is blank.&lt;/p&gt;\n    ","\n&lt;p&gt;I wonder that nobody has mentioned this, But the easiest way of getting the last used cell is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; GetLastCell(sh &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; Worksheet) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range\n    GetLastCell = sh.Cells(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).SpecialCells(xlLastCell)\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This essentially returns the same cell that you get by &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;End&lt;/kbd&gt; after selecting Cell &lt;strong&gt;&lt;code&gt;A1&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;A word of caution: Excel keeps track of the most bottom-right cell that was ever used in a worksheet. So if for example you enter something in &lt;strong&gt;B3&lt;/strong&gt; and something else in &lt;strong&gt;H8&lt;/strong&gt; and then later on delete the contents of &lt;strong&gt;H8&lt;/strong&gt;, pressing &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;End&lt;/kbd&gt; will still take you to &lt;strong&gt;H8&lt;/strong&gt; cell. The above function will have the same behavior.&lt;/p&gt;\n    ","\n&lt;h1&gt;Updated at End of 2021&lt;/h1&gt;\n&lt;p&gt;With Excel&apos;s new &lt;a href=&quot;https://support.microsoft.com/en-us/office/tips-for-improving-excel-s-performance-a8294ac5-652d-47f2-8e89-1c3ce2c09439&quot; rel=&quot;nofollow noreferrer&quot;&gt;calculation engine and array functionality&lt;/a&gt;, and &lt;a href=&quot;https://support.microsoft.com/en-us/office/filter-function-f4f7cb66-82eb-4767-8f7c-4877ad80c759&quot; rel=&quot;nofollow noreferrer&quot;&gt;Filter Function&lt;/a&gt;, I believe this topic should now be far less contested and that the below options offer the best mix of speed, reliability, and simplicity (which has proven difficult to balance in the past as the numerous posts here illustrate).&lt;/p&gt;\n&lt;p&gt;Also, I&apos;m defining &lt;code&gt;last used&lt;/code&gt; as &lt;em&gt;NOT blank&lt;/em&gt; as defined by the &lt;a href=&quot;https://support.microsoft.com/en-us/office/is-functions-0f2d7971-6019-40a0-a171-f2d869135665&quot; rel=&quot;nofollow noreferrer&quot;&gt;isBlank&lt;/a&gt; function.&lt;/p&gt;\n&lt;h2&gt;Excel Formula&lt;/h2&gt;\n&lt;p&gt;First, note that the Filter Function makes it much simpler to get a last cell using the below formulas for a specific row or column (in these case &lt;code&gt;Column A&lt;/code&gt; or &lt;code&gt;Row 1&lt;/code&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;=MAX(FILTER(ROW(A:A),&lt;span class=&quot;hljs-built_in&quot;&gt;NOT&lt;/span&gt;(ISBLANK(A:A))))\n=MAX(FILTER(COLUMN(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),&lt;span class=&quot;hljs-built_in&quot;&gt;NOT&lt;/span&gt;(ISBLANK(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;VBA Function For Last Row Specific Range&lt;/h2&gt;\n&lt;p&gt;Using the above function we can convert it into a VBA function, yet make it even faster by limiting the range, while expanding its capabilities by doing multiple columns (thanks to &lt;a href=&quot;https://stackoverflow.com/users/445425/chris-neilsen&quot;&gt;Chris Neilsen&lt;/a&gt; for immediate feedback tweeking/suggestions). I also found massive speed improvement by scoping each column to only be a range with a row HIGHER than the previous last row.&lt;/p&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; FindLastRowInRange(someColumns &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Const&lt;/span&gt; zFx = &lt;span class=&quot;hljs-string&quot;&gt;&quot;=MAX(FILTER(ROW(????),NOT(ISBLANK(????)),0))&quot;&lt;/span&gt;\n   \n   &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; tRng &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range, i &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;, tRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;, pRng &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range\n   &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt; someColumns.Worksheet\n      &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; tRng = Intersect(someColumns.EntireColumn, .UsedRange)\n      \n      &lt;span class=&quot;hljs-keyword&quot;&gt;For&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;To&lt;/span&gt; tRng.Columns.Count\n         \n         &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; pRng = Intersect(tRng.Columns(i), _\n         Range(.Rows(FindLastRowInRange + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), .Rows(.Rows.Count)))\n         \n         &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Not&lt;/span&gt; pRng &lt;span class=&quot;hljs-built_in&quot;&gt;Is&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n            tRow = .Evaluate(Replace(zFx, &lt;span class=&quot;hljs-string&quot;&gt;&quot;????&quot;&lt;/span&gt;, _\n               pRng.Address, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n         \n            &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; tRow &amp;gt; FindLastRowInRange &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt; _\n               FindLastRowInRange = tRow\n            \n         &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;Next&lt;/span&gt; i\n   &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;With&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;VBA Function For Last Row In Worksheet&lt;/h2&gt;\n&lt;p&gt;To consider the entire worksheet (all columns), I would recommend using a different VBA formula that references the prior one, but is a &lt;a href=&quot;https://docs.microsoft.com/en-us/office/vba/api/excel.application.volatile&quot; rel=&quot;nofollow noreferrer&quot;&gt;Volatile Function&lt;/a&gt;. This ensures that the formula updates with &lt;em&gt;any&lt;/em&gt; changes to a worksheet. Obviously, one could combine these two formulas, but I prefer to limit the usage of volatile functions.&lt;/p&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; FindLastRowInSheet(anywhereInSheet &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n      Application.Volatile\n      FindLastRowInSheet = FindLastRowInRange(anywhereInSheet.Worksheet.UsedRange)\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Advantages Compared To Other Options&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Allows for some or ALL rows/columns in worksheet without changing approach.&lt;/li&gt;\n&lt;li&gt;No possibility of missing hidden rows as is a risk with &lt;code&gt;xlup&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Ignores formatted/usedrange issues.&lt;/li&gt;\n&lt;li&gt;Does not interfere with user&apos;s &lt;code&gt;Find&lt;/code&gt; settings.&lt;/li&gt;\n&lt;li&gt;Uses worksheet functionality which is faster than VBA calcs.&lt;/li&gt;\n&lt;li&gt;No counting cells (performance hog).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Hopefully this ends the debate, but if anyone finds weaknesses in this please share.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;sub&lt;/span&gt; last_filled_cell()\nmsgbox range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A65536&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;(xlup).row\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;sub&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here, &lt;kbd&gt;A65536&lt;/kbd&gt; is the last cell in the Column A this code was tested on excel 2003.&lt;/p&gt;\n    ","\n&lt;p&gt;However this question is seeking to find the last row using VBA, I think it would be good to include an array formula for worksheet function  as this gets visited frequently:&lt;/p&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;{=ADDRESS(MATCH(INDEX(D:D,MAX(&lt;span class=&quot;hljs-keyword&quot;&gt;IF&lt;/span&gt;(D:D&amp;lt;&amp;gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,ROW(D:D)-ROW(D1)+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)),&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),D:D,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;),COLUMN(D:D))}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You need to enter the formula without brackets and then hit &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Enter&lt;/kbd&gt; to make it an array formula.&lt;/p&gt;\n&lt;p&gt;This will give you address of last used cell in the column D.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Thanks to &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/43857774#comment104400383_43857774&quot;&gt;pgsystemtester&lt;/a&gt;, this will give you the row number of last used cell:&lt;/p&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;{=MATCH(INDEX(D:D,MAX(&lt;span class=&quot;hljs-keyword&quot;&gt;IF&lt;/span&gt;(D:D&amp;lt;&amp;gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,ROW(D:D)-ROW(D1)+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)),&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),D:D,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I was looking for a way to mimic the &lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;End&lt;/kbd&gt;, so dotNET solution is great, except with my Excel 2010 I need to add a &lt;code&gt;set&lt;/code&gt; if I want to avoid an error:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; GetLastCell(sh &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range\n  &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; GetLastCell = sh.Cells(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).SpecialCells(xlLastCell)\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and how to check this for yourself:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt; test()\n  &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; ws &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet, r &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range\n  &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = ActiveWorkbook.Sheets(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; r = GetLastCell(ws)\n  MsgBox r.Column &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;-&quot;&lt;/span&gt; &amp;amp; r.Row\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt; lastRow()\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n        i = Cells(Rows.Count, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;(xlUp).Row\n            MsgBox i\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;sub&lt;/span&gt; LastRow()\n\n&lt;span class=&quot;hljs-comment&quot;&gt;&apos;Paste &amp;amp; for better understanding of the working use F8 Key to run the code .&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;dim&lt;/span&gt; WS &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; worksheet\n&lt;span class=&quot;hljs-keyword&quot;&gt;dim&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; ws = thisworkbook(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SheetName&quot;&lt;/span&gt;)\n\nws.activate\n\nws.range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;a1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n\nws.range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;a1048576&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n\nactivecell.&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;(xlup).&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n\ni= activecell.row\n\nmsgbox &lt;span class=&quot;hljs-string&quot;&gt;&quot;My Last Row Is &quot;&lt;/span&gt; &amp;amp; i\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;sub&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For the last 3+ years these are the functions that I am using for finding last row and last column per defined column(for row) and row(for column):&lt;/p&gt;\n\n&lt;h2&gt;Last Column:&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; lastCol(&lt;span class=&quot;hljs-keyword&quot;&gt;Optional&lt;/span&gt; wsName &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;Optional&lt;/span&gt; rowToCheck &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; ws  &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; wsName = vbNullString &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = ActiveSheet\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = Worksheets(wsName)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n\n    lastCol = ws.Cells(rowToCheck, ws.Columns.Count).&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;(xlToLeft).Column\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Last Row:&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; lastRow(&lt;span class=&quot;hljs-keyword&quot;&gt;Optional&lt;/span&gt; wsName &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;Optional&lt;/span&gt; columnToCheck &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; ws &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; wsName = vbNullString &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = ActiveSheet\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = Worksheets(wsName)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n\n    lastRow = ws.Cells(ws.Rows.Count, columnToCheck).&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;(xlUp).Row\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For the case of the OP, this is the way to get the last row in column &lt;code&gt;E&lt;/code&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Debug.Print lastRow(columnToCheck:=Range(&quot;E4:E48&quot;).Column)&lt;/code&gt;&lt;/p&gt;\n\n&lt;h2&gt;Last Row, counting empty rows with data:&lt;/h2&gt;\n\n&lt;p&gt;Here we may use the &lt;a href=&quot;https://www.vitoshacademy.com/last-used-row-last-used-column-in-excel-with-formula-without-vba/&quot; rel=&quot;nofollow noreferrer&quot;&gt;well-known Excel formulas&lt;/a&gt;, which give us the last row of a worksheet in Excel, without involving VBA - &lt;code&gt;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(A:A))),ROW(A:A)),0)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;In order to put this in VBA and not to write anything in Excel, using the parameters for the latter functions, something like this could be in mind:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; LastRowWithHidden(&lt;span class=&quot;hljs-keyword&quot;&gt;Optional&lt;/span&gt; wsName &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;Optional&lt;/span&gt; columnToCheck &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; ws &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; wsName = vbNullString &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = ActiveSheet\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; ws = Worksheets(wsName)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; letters &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    letters = ColLettersGenerator(columnToCheck)\n    LastRowWithHidden = ws.Evaluate(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(&quot;&lt;/span&gt; &amp;amp; letters &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;))),ROW(&quot;&lt;/span&gt; &amp;amp; letters &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot; )),0)&quot;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; ColLettersGenerator(col &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; result &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Variant\n    result = Split(Cells(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, col).Address(&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;)\n    ColLettersGenerator = result(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &amp;amp; &lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt; &amp;amp; result(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2 id=&quot;last-row-in-a-regular-range-or-a-table-listobject&quot;&gt;&lt;strong&gt;Last Row in a regular range or a Table (ListObject)&lt;/strong&gt;&lt;/h2&gt;\n&lt;ol&gt;\n&lt;li&gt;Finding the last row requires using different methods if the range is a regular range or table (List Object).&lt;/li&gt;\n&lt;li&gt;Finding the last row in tables requires specifying additional parameters (table name , the column relative position to the first tables column).&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;I created this universal function for last row, regardless of range type. Just give it any cell reference whatsoever and it will return the last row.\nNo hassle having to knew range characteristics, especially if your ranges are some times a regular range and sometimes a ListObject.\nUsing a regular range method on a table might return wrong results.\nSure you can plan ahead of time and use the right method each time, but why bother if you can utilizes a universal function ?&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt; RunMyLastRow()\n&lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; Result &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\nResult = MyLastRow(Worksheets(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).Range(&lt;span class=&quot;hljs-string&quot;&gt;&quot;A1&quot;&lt;/span&gt;))\n&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Sub&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; MyLastRow(RefrenceRange &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; WS &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Worksheet\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; TableName &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; ColNumber &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; LastRow &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; FirstColumnTable &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Dim&lt;/span&gt; ColNumberTable &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Set&lt;/span&gt; WS = RefrenceRange.Worksheet\n    TableName = GetTableName(RefrenceRange)\n    ColNumber = RefrenceRange.Column\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;&apos;&apos;If the table (ListObject) does not start in column &quot;A&quot; we need to calculate the &lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;&apos;&apos;first Column table and how many Columns from its beginning the Column is located.&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; TableName &amp;lt;&amp;gt; vbNullString &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n     FirstColumnTable = WS.ListObjects(TableName).ListColumns(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).Range.Column\n     ColNumberTable = ColNumber - FirstColumnTable + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; TableName = vbNullString &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n    LastRow = WS.Cells(WS.Rows.Count, ColNumber).&lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;(xlUp).Row\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n    LastRow = WS.ListObjects(TableName).ListColumns(ColNumberTable).Range.Find( _\n               What:=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;, SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n    MyLastRow = LastRow\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n    \n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-vb s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;&apos;&apos;Get Table Name by Cell Range&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; GetTableName(RefrenceRange &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; Range) &lt;span class=&quot;hljs-keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; RefrenceRange.ListObject &lt;span class=&quot;hljs-built_in&quot;&gt;Is&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt;\n            GetTableName = vbNullString\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt;\n            GetTableName = RefrenceRange.ListObject.Name\n        &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    "]},"page":"104","randomQuestions":[{"title":"Iterating over dictionaries using 'for' loops","slug":"iterating-over-dictionaries-using-'for'-loops-1657388334481"},{"title":"How do servlets work? Instantiation, sessions, shared variables and multithreading","slug":"how-do-servlets-work-instantiation-sessions-shared-variables-and-multithreading-1657387540375"},{"title":"Is there a difference between \"==\" and \"is\"?","slug":"is-there-a-difference-between-\"\"-and-\"is\"-1657387902231"},{"title":"How do I vertically center text with CSS? [duplicate]","slug":"how-do-i-vertically-center-text-with-css-duplicate-1657387645821"},{"title":"What is the difference between const int*, const int * const, and int const *?","slug":"what-is-the-difference-between-const-int*-const-int-*-const-and-int-const-*-1657388184604"},{"title":"event.preventDefault() vs. return false","slug":"event.preventdefault()-vs.-return-false-1657387458377"},{"title":"Why can't an element with a z-index value cover its child?","slug":"why-can't-an-element-with-a-z-index-value-cover-its-child-1657387707187"},{"title":"Returning data from async call in Swift function","slug":"returning-data-from-async-call-in-swift-function-1657387469218"},{"title":"AsyncTask Android example","slug":"asynctask-android-example-1657388127898"},{"title":"How to find the 'sizeof' (a pointer pointing to an array)?","slug":"how-to-find-the-'sizeof'-(a-pointer-pointing-to-an-array)-1657387354284"},{"title":"Error: could not find function ... in R","slug":"error:-could-not-find-function-...-in-r-1657388476492"},{"title":"Error in finding last used cell in Excel with VBA","slug":"error-in-finding-last-used-cell-in-excel-with-vba-1657384584748"},{"title":"What special characters must be escaped in regular expressions?","slug":"what-special-characters-must-be-escaped-in-regular-expressions-1657387465381"},{"title":"Why is my variable unaltered after I modify it inside of a function? - Asynchronous code reference","slug":"why-is-my-variable-unaltered-after-i-modify-it-inside-of-a-function-asynchronous-code-reference-1657384288966"},{"title":"What is the canonical way to check for errors using the CUDA runtime API?","slug":"what-is-the-canonical-way-to-check-for-errors-using-the-cuda-runtime-api-1657387302698"},{"title":"Is it possible for flex items to align tightly to the items above them?","slug":"is-it-possible-for-flex-items-to-align-tightly-to-the-items-above-them-1657388511179"},{"title":"How can I transition height: 0; to height: auto; using CSS?","slug":"how-can-i-transition-height:-0-to-height:-auto-using-css-1657388022100"},{"title":"Read file line by line using ifstream in C++","slug":"read-file-line-by-line-using-ifstream-in-c++-1657388236966"},{"title":"Why does std::getline() skip input after a formatted extraction?","slug":"why-does-std::getline()-skip-input-after-a-formatted-extraction-1657384756118"},{"title":"How to format numbers as currency strings","slug":"how-to-format-numbers-as-currency-strings-1657388399166"}]},"__N_SSG":true}