{"pageProps":{"data":{"count":610,"rows":[{"id":410,"title":"How can I sanitize user input with PHP?","slug":"how-can-i-sanitize-user-input-with-php-1657387892329","postType":"QUESTION","createdAt":"2022-07-09T17:31:32.000Z","updatedAt":"2022-07-09T17:31:32.000Z","tags":[{"id":2186,"name":"xss","slug":"xss","createdAt":"2022-07-09T17:31:32.000Z","updatedAt":"2022-07-09T17:31:32.000Z","Questions_Tags":{"questionId":410,"tagId":2186}},{"id":2188,"name":"user-input","slug":"user-input","createdAt":"2022-07-09T17:31:32.000Z","updatedAt":"2022-07-09T17:31:32.000Z","Questions_Tags":{"questionId":410,"tagId":2188}}]},{"id":409,"title":"Submit same Partial View called multiple times data to controller?","slug":"submit-same-partial-view-called-multiple-times-data-to-controller-1657387887213","postType":"QUESTION","createdAt":"2022-07-09T17:31:27.000Z","updatedAt":"2022-07-09T17:31:27.000Z","tags":[{"id":2183,"name":"asp.net-mvc-4","slug":"asp.net-mvc-4","createdAt":"2022-07-09T17:31:27.000Z","updatedAt":"2022-07-09T17:31:27.000Z","Questions_Tags":{"questionId":409,"tagId":2183}}]},{"id":408,"title":"Sending Email in Android using JavaMail API without using the default/built-in app","slug":"sending-email-in-android-using-javamail-api-without-using-the-defaultbuilt-in-app-1657387883400","postType":"QUESTION","createdAt":"2022-07-09T17:31:23.000Z","updatedAt":"2022-07-09T17:31:23.000Z","tags":[{"id":2182,"name":"jakarta-mail","slug":"jakarta-mail","createdAt":"2022-07-09T17:31:23.000Z","updatedAt":"2022-07-09T17:31:23.000Z","Questions_Tags":{"questionId":408,"tagId":2182}}]},{"id":407,"title":"How to convert a factor to integer\\numeric without loss of information?","slug":"how-to-convert-a-factor-to-integernumeric-without-loss-of-information-1657387880273","postType":"QUESTION","createdAt":"2022-07-09T17:31:20.000Z","updatedAt":"2022-07-09T17:31:20.000Z","tags":[]},{"id":406,"title":"How do you remove duplicates from a list whilst preserving order?","slug":"how-do-you-remove-duplicates-from-a-list-whilst-preserving-order-1657387877978","postType":"QUESTION","createdAt":"2022-07-09T17:31:17.000Z","updatedAt":"2022-07-09T17:31:17.000Z","tags":[]}]},"answers":{"406":["\n&lt;p&gt;Here you have some alternatives: &lt;a href=&quot;http://www.peterbe.com/plog/uniqifiers-benchmark&quot; rel=&quot;noreferrer&quot;&gt;http://www.peterbe.com/plog/uniqifiers-benchmark&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Fastest one:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f7&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq&lt;/span&gt;):\n    seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n    seen_add = seen.add\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; (x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; seen_add(x))]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Why assign &lt;code&gt;seen.add&lt;/code&gt; to &lt;code&gt;seen_add&lt;/code&gt; instead of just calling &lt;code&gt;seen.add&lt;/code&gt;? Python is a dynamic language, and resolving &lt;code&gt;seen.add&lt;/code&gt; each iteration is more costly than resolving a local variable. &lt;code&gt;seen.add&lt;/code&gt; could have changed between iterations, and the runtime isn&apos;t smart enough to rule that out. To play it safe, it has to check the object each time.&lt;/p&gt;\n\n&lt;p&gt;If you plan on using this function a lot on the same dataset, perhaps you would be better off with an ordered set: &lt;a href=&quot;http://code.activestate.com/recipes/528878/&quot; rel=&quot;noreferrer&quot;&gt;http://code.activestate.com/recipes/528878/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;O&lt;/em&gt;(1) insertion, deletion and member-check per operation.&lt;/p&gt;\n\n&lt;p&gt;(Small additional note: &lt;code&gt;seen.add()&lt;/code&gt; always returns &lt;code&gt;None&lt;/code&gt;, so the &lt;em&gt;&lt;code&gt;or&lt;/code&gt;&lt;/em&gt; above is there only as a way to attempt a set update, and not as an integral part of the logical test.)&lt;/p&gt;\n    ","\n&lt;p&gt;The best solution varies by Python version and environment constraints:&lt;/p&gt;\n&lt;h4&gt;Python 3.7+ (and most interpreters supporting 3.6, as an implementation detail):&lt;/h4&gt;\n&lt;p&gt;First introduced in PyPy 2.5.0, and adopted in CPython 3.6 as an implementation detail, before being made a language guarantee in Python 3.7, plain &lt;code&gt;dict&lt;/code&gt; is insertion-ordered, and even more efficient than the (also C implemented as of CPython 3.5) &lt;code&gt;collections.OrderedDict&lt;/code&gt;. So the fastest solution, by far, is also the simplest:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;items = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;dict&lt;/span&gt;.fromkeys(items))  &lt;span class=&quot;hljs-comment&quot;&gt;# Or [*dict.fromkeys(items)] if you prefer&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Like &lt;code&gt;list(set(items))&lt;/code&gt; this pushes all the work to the C layer (on CPython), but since &lt;code&gt;dict&lt;/code&gt;s are insertion ordered, &lt;code&gt;dict.fromkeys&lt;/code&gt; doesn&apos;t lose ordering. It&apos;s slower than &lt;code&gt;list(set(items))&lt;/code&gt; (takes 50-100% longer typically), but &lt;em&gt;much&lt;/em&gt; faster than any other order-preserving solution (takes about half the time of &lt;a href=&quot;https://stackoverflow.com/a/480227/364696&quot;&gt;hacks involving use of &lt;code&gt;set&lt;/code&gt;s in a listcomp&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Important note&lt;/strong&gt;: The &lt;code&gt;unique_everseen&lt;/code&gt; solution from &lt;code&gt;more_itertools&lt;/code&gt; (see below) has some unique advantages in terms of laziness and support for non-hashable input items; if you need these features, it&apos;s the &lt;em&gt;only&lt;/em&gt; solution that will work.&lt;/p&gt;\n&lt;h4&gt;Python 3.5 (and all older versions if performance isn&apos;t &lt;em&gt;critical&lt;/em&gt;)&lt;/h4&gt;\n&lt;p&gt;As Raymond &lt;a href=&quot;https://stackoverflow.com/a/39835527/336527&quot;&gt;pointed out&lt;/a&gt;, in CPython 3.5 where &lt;code&gt;OrderedDict&lt;/code&gt; is implemented in C, ugly list comprehension hacks are slower than &lt;code&gt;OrderedDict.fromkeys&lt;/code&gt; (unless you actually need the list at the end - and even then, only if the input is very short). So on both performance and readability the best solution for CPython 3.5 is the &lt;code&gt;OrderedDict&lt;/code&gt; equivalent of the 3.6+ use of plain &lt;code&gt;dict&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; collections &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; OrderedDict\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;items = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(OrderedDict.fromkeys(items))\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;On CPython 3.4 and earlier, this will be slower than some other solutions, so if profiling shows you need a better solution, keep reading.&lt;/p&gt;\n&lt;h4&gt;Python 3.4 and earlier, if performance is critical and third-party modules are acceptable&lt;/h4&gt;\n&lt;p&gt;As &lt;a href=&quot;https://stackoverflow.com/a/19279812/1219006&quot;&gt;@abarnert&lt;/a&gt; notes, the &lt;a href=&quot;https://pythonhosted.org/more-itertools/api.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;more_itertools&lt;/code&gt;&lt;/a&gt; library (&lt;code&gt;pip install more_itertools&lt;/code&gt;) contains a &lt;a href=&quot;https://pythonhosted.org/more-itertools/api.html#more_itertools.unique_everseen&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;unique_everseen&lt;/code&gt;&lt;/a&gt; function that is built to solve this problem without any &lt;strong&gt;unreadable&lt;/strong&gt; (&lt;code&gt;not seen.add&lt;/code&gt;) &lt;strong&gt;mutations&lt;/strong&gt; in list comprehensions. This is the fastest solution too:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; more_itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; unique_everseen\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;items = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(unique_everseen(items))\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Just one simple library import and no hacks.&lt;/p&gt;\n&lt;p&gt;The module is adapting the itertools recipe &lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools-recipes&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;unique_everseen&lt;/code&gt;&lt;/a&gt; which looks like:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unique_everseen&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable, key=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;List unique elements, preserving order. Remember all elements ever seen.&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;# unique_everseen(&apos;AAAABBBCCDAABBB&apos;) --&amp;gt; A B C D&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;# unique_everseen(&apos;ABBCcAD&apos;, str.lower) --&amp;gt; A B C D&lt;/span&gt;\n    seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n    seen_add = seen.add\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; key &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; filterfalse(seen.__contains__, iterable):\n            seen_add(element)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; element\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; iterable:\n            k = key(element)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; k &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen:\n                seen_add(k)\n                &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; element\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;but unlike the &lt;code&gt;itertools&lt;/code&gt; recipe, it supports non-hashable items (at a performance cost; if all elements in &lt;code&gt;iterable&lt;/code&gt; are non-hashable, the algorithm becomes &lt;code&gt;O(n²)&lt;/code&gt;, vs. &lt;code&gt;O(n)&lt;/code&gt; if they&apos;re all hashable).&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Important note&lt;/strong&gt;: Unlike all the other solutions here, &lt;code&gt;unique_everseen&lt;/code&gt; can be used lazily; the peak memory usage will be the same (eventually, the underlying &lt;code&gt;set&lt;/code&gt; grows to the same size), but if you don&apos;t &lt;code&gt;list&lt;/code&gt;ify the result, you just iterate it, you&apos;ll be able to process unique items as they&apos;re found, rather than waiting until the entire input has been deduplicated before processing the first unique item.&lt;/p&gt;\n&lt;h4&gt;Python 3.4 and earlier, if performance is critical &lt;em&gt;and&lt;/em&gt; third party modules are unavailable&lt;/h4&gt;\n&lt;p&gt;You have two options:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Copy and paste in &lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools-recipes&quot; rel=&quot;noreferrer&quot;&gt;the &lt;code&gt;unique_everseen&lt;/code&gt; recipe&lt;/a&gt; to your code and use it per the &lt;code&gt;more_itertools&lt;/code&gt; example above&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Use ugly hacks to allow a single listcomp to both check and update a &lt;code&gt;set&lt;/code&gt; to track what&apos;s been seen:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n[x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; seen.add(x)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;at the expense of relying on the &lt;strong&gt;ugly hack&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; seen.add(x)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;which relies on the fact that &lt;code&gt;set.add&lt;/code&gt; is an in-place method that always returns &lt;code&gt;None&lt;/code&gt; so &lt;code&gt;not None&lt;/code&gt; evaluates to &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Note that &lt;em&gt;all&lt;/em&gt; of the solutions above are &lt;code&gt;O(n)&lt;/code&gt; (save calling &lt;code&gt;unique_everseen&lt;/code&gt; on an iterable of non-hashable items, which is &lt;code&gt;O(n²)&lt;/code&gt;, while the others would fail immediately with a &lt;code&gt;TypeError&lt;/code&gt;), so all solutions are performant enough when they&apos;re not the hottest code path. Which one to use depends on which versions of the language spec/interpreter/third-party modules you can rely on, whether or not performance is critical (don&apos;t assume it is; it usually isn&apos;t), and most importantly, readability (because if the person who maintains this code later ends up in a murderous mood, your clever micro-optimization probably wasn&apos;t worth it).&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;In CPython 3.6+&lt;/strong&gt; (and all other Python implementations starting with &lt;strong&gt;Python 3.7+&lt;/strong&gt;), dictionaries &lt;a href=&quot;https://docs.python.org/3/whatsnew/3.7.html#summary-release-highlights&quot; rel=&quot;noreferrer&quot;&gt;are ordered&lt;/a&gt;, so the way to remove duplicates from an iterable while keeping it in the original order is:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;dict&lt;/span&gt;.fromkeys(&lt;span class=&quot;hljs-string&quot;&gt;&apos;abracadabra&apos;&lt;/span&gt;))\n[&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;r&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;In Python 3.5&lt;/strong&gt; and below (including &lt;strong&gt;Python 2.7&lt;/strong&gt;), use the &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.OrderedDict&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt;. My timings show that this is now both the fastest and shortest of the various approaches for Python 3.5 (when it gained a C implementation; prior to 3.5 it&apos;s still the clearest solution, though not the fastest).&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; collections &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; OrderedDict\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(OrderedDict.fromkeys(&lt;span class=&quot;hljs-string&quot;&gt;&apos;abracadabra&apos;&lt;/span&gt;))\n[&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;r&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Not to kick a dead horse (this question is very old and already has lots of good answers), but here is a solution using pandas that is quite fast in many circumstances and is dead simple to use.  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n\nmy_list = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;pd.Series(my_list).drop_duplicates().tolist()\n&lt;span class=&quot;hljs-comment&quot;&gt;# Output:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# [0, 1, 2, 3, 4, 5]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In &lt;strong&gt;Python 3.7&lt;/strong&gt; and above, dictionaries are &lt;a href=&quot;https://mail.python.org/pipermail/python-dev/2017-December/151283.html&quot; rel=&quot;noreferrer&quot;&gt;guaranteed&lt;/a&gt; to remember their key insertion order. The answer to &lt;a href=&quot;https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6&quot;&gt;this&lt;/a&gt; question summarizes the current state of affairs.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;OrderedDict&lt;/code&gt; solution thus becomes obsolete and without any import statements we can simply issue:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;lst = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;dict&lt;/span&gt;.fromkeys(lst))\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;sequence = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;6&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;6&apos;&lt;/span&gt;]\nunique = []\n[unique.append(item) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; sequence &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; unique]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;unique  &lt;code&gt;[&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;6&apos;, &apos;4&apos;, &apos;5&apos;]&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; groupby\n[ key &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; key,_ &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; groupby(sortedList)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The list doesn&apos;t even have to be &lt;em&gt;sorted&lt;/em&gt;, the sufficient condition is that equal values are grouped together.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit: I assumed that &quot;preserving order&quot; implies that the list is actually ordered. If this is not the case, then the solution from MizardX is the right one.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Community edit: This is however the most elegant way to &quot;compress duplicate consecutive elements into a single element&quot;.&lt;/p&gt;\n    ","\n&lt;p&gt;I think if you wanna maintain the order,&lt;/p&gt;\n\n&lt;h2&gt;you can try this:&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;list1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;]    \nlist2 = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(list1))    \nlist2.sort(key=list1.index)    \n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; list2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;OR similarly you can do this:&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;list1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;]  \nlist2 = &lt;span class=&quot;hljs-built_in&quot;&gt;sorted&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(list1),key=list1.index)  \n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; list2 \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;You can also do this:&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;list1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;]    \nlist2 = []    \n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; list1:    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; list2:  \n        list2.append(i)`    \n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; list2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;It can also be written as this:&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;list1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;]    \nlist2 = []    \n[list2.append(i) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; list1 &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; list2]    \n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; list2 \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Just to add another (very performant) implementation of such a functionality from an external module&lt;sup&gt;1&lt;/sup&gt;: &lt;a href=&quot;https://iteration-utilities.readthedocs.io/en/latest/generated/unique_everseen.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;iteration_utilities.unique_everseen&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; iteration_utilities &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; unique_everseen\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;lst = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(unique_everseen(lst))\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Timings&lt;/h1&gt;\n\n&lt;p&gt;I did some timings (Python 3.6) and these show that it&apos;s faster than all other alternatives I tested, including &lt;code&gt;OrderedDict.fromkeys&lt;/code&gt;, &lt;code&gt;f7&lt;/code&gt; and &lt;code&gt;more_itertools.unique_everseen&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;%matplotlib notebook\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; iteration_utilities &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; unique_everseen\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; collections &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; OrderedDict\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; more_itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; unique_everseen &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; mi_unique_everseen\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f7&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq&lt;/span&gt;):\n    seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n    seen_add = seen.add\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; (x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; seen_add(x))]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;iteration_utilities_unique_everseen&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(unique_everseen(seq))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;more_itertools_unique_everseen&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(mi_unique_everseen(seq))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;odict&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(OrderedDict.fromkeys(seq))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; simple_benchmark &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; benchmark\n\nb = benchmark([f7, iteration_utilities_unique_everseen, more_itertools_unique_everseen, odict],\n              {&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**i: &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**i)) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)},\n              &lt;span class=&quot;hljs-string&quot;&gt;&apos;list size (no duplicates)&apos;&lt;/span&gt;)\nb.plot()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/XLrov.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/XLrov.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And just to make sure I also did a test with more duplicates just to check if it makes a difference:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; random\n\nb = benchmark([f7, iteration_utilities_unique_everseen, more_itertools_unique_everseen, odict],\n              {&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**i: [random.randint(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**(i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**i)] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)},\n              &lt;span class=&quot;hljs-string&quot;&gt;&apos;list size (lots of duplicates)&apos;&lt;/span&gt;)\nb.plot()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/YCx2c.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/YCx2c.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And one containing only one value:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;b = benchmark([f7, iteration_utilities_unique_everseen, more_itertools_unique_everseen, odict],\n              {&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**i: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]*(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;**i) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)},\n              &lt;span class=&quot;hljs-string&quot;&gt;&apos;list size (only duplicates)&apos;&lt;/span&gt;)\nb.plot()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/SPCcT.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/SPCcT.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In all of these cases the &lt;code&gt;iteration_utilities.unique_everseen&lt;/code&gt; function is the fastest (on my computer).&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;This &lt;code&gt;iteration_utilities.unique_everseen&lt;/code&gt; function can also handle unhashable values in the input (however with an &lt;code&gt;O(n*n)&lt;/code&gt; performance instead of the &lt;code&gt;O(n)&lt;/code&gt; performance when the values are hashable).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;lst = [{&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}, {&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;}]\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(unique_everseen(lst))\n[{&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;}, {&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}, {&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;}]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; Disclaimer: I&apos;m the author of that package.&lt;/p&gt;\n    ","\n&lt;p&gt;For another very late answer to another very old question:&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://docs.python.org/3/library/itertools.html#itertools-recipes&quot;&gt;&lt;code&gt;itertools&lt;/code&gt; recipes&lt;/a&gt; have a function that does this, using the &lt;code&gt;seen&lt;/code&gt; set technique, but:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Handles a standard &lt;code&gt;key&lt;/code&gt; function.&lt;/li&gt;\n&lt;li&gt;Uses no unseemly hacks.&lt;/li&gt;\n&lt;li&gt;Optimizes the loop by pre-binding &lt;code&gt;seen.add&lt;/code&gt; instead of looking it up N times. (&lt;code&gt;f7&lt;/code&gt; also does this, but some versions don&apos;t.)&lt;/li&gt;\n&lt;li&gt;Optimizes the loop by using &lt;code&gt;ifilterfalse&lt;/code&gt;, so you only have to loop over the unique elements in Python, instead of all of them. (You still iterate over all of them inside &lt;code&gt;ifilterfalse&lt;/code&gt;, of course, but that&apos;s in C, and much faster.)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Is it actually faster than &lt;code&gt;f7&lt;/code&gt;? It depends on your data, so you&apos;ll have to test it and see. If you want a list in the end, &lt;code&gt;f7&lt;/code&gt; uses a listcomp, and there&apos;s no way to do that here. (You can directly &lt;code&gt;append&lt;/code&gt; instead of &lt;code&gt;yield&lt;/code&gt;ing, or you can feed the generator into the &lt;code&gt;list&lt;/code&gt; function, but neither one can be as fast as the LIST_APPEND inside a listcomp.) At any rate, usually, squeezing out a few microseconds is not going to be as important as having an easily-understandable, reusable, already-written function that doesn&apos;t require DSU when you want to decorate.&lt;/p&gt;\n\n&lt;p&gt;As with all of the recipes, it&apos;s also available in &lt;a href=&quot;https://pypi.python.org/pypi/more-itertools&quot;&gt;&lt;code&gt;more-iterools&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;If you just want the no-&lt;code&gt;key&lt;/code&gt; case, you can simplify it as:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;iterable&lt;/span&gt;):\n    seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n    seen_add = seen.add\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; itertools.ifilterfalse(seen.__contains__, iterable):\n        seen_add(element)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; element\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For no hashable types (e.g. list of lists), based on MizardX&apos;s:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f7_noHash&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq&lt;/span&gt;)\n    seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [ x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;( x ) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; seen.add( &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;( x ) )]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;here is a simple way to do it:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;list1 = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;o&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;r&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;l&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-built_in&quot;&gt;sorted&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(list1 ), key=list1.index)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;that gives the output:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;o&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;r&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;l&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;5 x faster reduce variant but more sophisticated&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;l = [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;reduce(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; r, v: v &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; r[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; (r[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].append(v) &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; r[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].add(v)) &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; r, l, ([], &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()))[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Explanation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;default = (&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(), &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;())\n&lt;span class=&quot;hljs-comment&quot;&gt;# use list to keep order&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# use set to make lookup faster&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;reducer&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;result, item&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; result[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]:\n        result[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].append(item)\n        result[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].add(item)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;reduce(reducer, l, default)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;pandas users should check out &lt;a href=&quot;https://pandas.pydata.org/docs/reference/api/pandas.unique.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pandas.unique&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;lst = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;pd.unique(lst)\narray([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The function returns a NumPy array. If needed, you can convert it to a list with the &lt;a href=&quot;https://numpy.org/doc/1.18/reference/generated/numpy.ndarray.tolist.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;tolist&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt;\n    ","\n&lt;p&gt;Borrowing the recursive idea used in definining Haskell&apos;s &lt;code&gt;nub&lt;/code&gt; function for lists, this would be a recursive approach:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lst&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [] &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; lst==[] &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; [lst[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] + unique(&lt;span class=&quot;hljs-built_in&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: x!= lst[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], lst[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;e.g.:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;118&lt;/span&gt;]: unique([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;])\nOut[&lt;span class=&quot;hljs-number&quot;&gt;118&lt;/span&gt;]: [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I tried it for growing data sizes and saw sub-linear time-complexity (not definitive, but suggests this should be fine for normal data).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;122&lt;/span&gt;]: %timeit unique(np.random.randint(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, size=(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)))\n&lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt; loops, best of &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;25.3&lt;/span&gt; us per loop\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;123&lt;/span&gt;]: %timeit unique(np.random.randint(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, size=(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)))\n&lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt; loops, best of &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;42.9&lt;/span&gt; us per loop\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;124&lt;/span&gt;]: %timeit unique(np.random.randint(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, size=(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)))\n&lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt; loops, best of &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;132&lt;/span&gt; us per loop\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;125&lt;/span&gt;]: %timeit unique(np.random.randint(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, size=(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)))\n&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt; loops, best of &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1.05&lt;/span&gt; ms per loop\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;126&lt;/span&gt;]: %timeit unique(np.random.randint(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, size=(&lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt;)))\n&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; loops, best of &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; ms per loop\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I also think it&apos;s interesting that this could be readily generalized to uniqueness by other operations. Like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; operator\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;lst, cmp_op=operator.ne&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [] &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; lst==[] &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; [lst[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] + unique(&lt;span class=&quot;hljs-built_in&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: cmp_op(x, lst[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]), lst[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:]), cmp_op)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For example, you could pass in a function that uses the notion of rounding to the same integer as if it was &quot;equality&quot; for uniqueness purposes, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;test_round&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x,y&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;round&lt;/span&gt;(x) != &lt;span class=&quot;hljs-built_in&quot;&gt;round&lt;/span&gt;(y)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then unique(some_list, test_round) would provide the unique elements of the list where uniqueness no longer meant traditional equality (which is implied by using any sort of set-based or dict-key-based approach to this problem) but instead meant to take only the first element that rounds to K for each possible integer K that the elements might round to, e.g.:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]: unique([&lt;span class=&quot;hljs-number&quot;&gt;1.2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1.9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1.1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4.2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4.8&lt;/span&gt;], test_round)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]: [&lt;span class=&quot;hljs-number&quot;&gt;1.2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1.9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4.2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can reference a list comprehension as it is being built by the symbol &apos;_[1]&apos;. &lt;br&gt;For example, the following function unique-ifies a list of elements without changing their order by referencing its list comprehension.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;my_list&lt;/span&gt;): \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; my_list &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;locals&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&apos;_[1]&apos;&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;l1 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\nl2 = [x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; l1 &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;locals&lt;/span&gt;()[&lt;span class=&quot;hljs-string&quot;&gt;&apos;_[1]&apos;&lt;/span&gt;]]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; l2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;b&gt;1. These solutions are fine&lt;/b&gt;&lt;br&gt;\nFor removing duplicates while preserving order, the excellent solution(s) proposed elsewhere on this page:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n[x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; (x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; seen.add(x))]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and variation(s), e.g.:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n[x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; seen.add(x)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;are indeed popular because they are simple, minimalistic, and deploy the correct hashing for optimal efficency. The main complaint about these seems to be that using the invariant &lt;code&gt;None&lt;/code&gt; &quot;returned&quot; by method &lt;code&gt;seen.add(x)&lt;/code&gt; as a constant (and therefore excess/unnecessary) value in a logical expressionjust for its side-effectis hacky and/or confusing.&lt;/p&gt;\n&lt;p&gt;&lt;b&gt;2. but they waste one hash lookup per iteration.&lt;/b&gt;&lt;br&gt;\nSurprisingly, given the amount of discussion and debate on this topic, there is actually a significant improvement to the code that seems to have been overlooked. As shown, each &quot;test-and-set&quot; iteration requires &lt;strong&gt;two&lt;/strong&gt; hash lookups: the first to test membership &lt;code&gt;x not in seen&lt;/code&gt; and then again to actually add the value &lt;code&gt;seen.add(x)&lt;/code&gt;. Since the first operation guarantees that the second will always be successful, there is a wasteful duplication of effort here. And because the overall technique here is so efficient, the excess hash lookups will likely end up being the most expensive proportion of what little work remains.&lt;/p&gt;\n&lt;p&gt;&lt;b&gt;3. Instead, let the &lt;code&gt;set&lt;/code&gt; do its job!&lt;/b&gt;&lt;br&gt;\nNotice that the examples above only call &lt;code&gt;set.add&lt;/code&gt; with the foreknowledge that doing so will always result in an increase in set membership. The &lt;code&gt;set&lt;/code&gt; itself &lt;em&gt;never gets an chance to reject&lt;/em&gt; a duplicate; our code snippet has essentially usurped that role for itself. The use of explicit two-step test-and-set code is robbing &lt;code&gt;set&lt;/code&gt; of its core ability to exclude those duplicates itself.&lt;/p&gt;\n&lt;p&gt;&lt;b&gt;4. The improved code:&lt;/b&gt;&lt;br&gt;\nThe following version &lt;em&gt;&lt;strong&gt;cuts the number of hash lookups&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;per iteration&lt;/em&gt; &lt;em&gt;&lt;strong&gt;in half&lt;/strong&gt;&lt;/em&gt;from two down to just one. This improves the performance of an already-speedy approach considerably.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n[x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(seen) &amp;lt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(seen.add(x) &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; seen)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As for the unpleasant hack, now mutated a bit from before, it does appear to live on to see another day.&lt;/p&gt;\n    ","\n&lt;p&gt;If you need one liner then maybe this would help:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;reduce(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x, y: x + y &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; y[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; x, &lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: [x],lst))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;... should work but correct me if i&apos;m wrong&lt;/p&gt;\n    ","\n&lt;p&gt;MizardX&apos;s answer gives a good collection of multiple approaches.&lt;/p&gt;\n\n&lt;p&gt;This is what I came up with while thinking aloud:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;mylist = [x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i,x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;enumerate&lt;/span&gt;(mylist) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; mylist[i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could do a sort of ugly list comprehension hack.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[l[i] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(l)) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; l.index(l[i]) == i]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Relatively effective approach with &lt;code&gt;_sorted_&lt;/code&gt; a &lt;code&gt;numpy&lt;/code&gt; arrays:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;b = np.array([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;])    \nnumpy.hstack([b[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], [x[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;zip&lt;/span&gt;(b[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:], b[:-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; x[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]!=x[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]]])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Outputs:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;array([ &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;l = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,...]\nn = []\nn.extend(ele &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ele &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; l &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ele &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(n))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A generator expression that uses the O(1) look up of a set to determine whether or not to include an element in the new list.&lt;/p&gt;\n    ","\n&lt;p&gt;A simple recursive solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniquefy_list&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; uniquefy_list(a[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:]) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; a[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:] &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; [a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]+uniquefy_list(a[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:]) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(a)&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; [a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Eliminating the duplicate values in a sequence, but preserve the order of the remaining items. Use of general purpose generator function.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# for hashable sequence&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;remove_duplicates&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items&lt;/span&gt;):\n    seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; items:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; item\n            seen.add(item)\n\na = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;]\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(remove_duplicates(a))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [1, 5, 2, 9, 10]&lt;/span&gt;\n\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# for unhashable sequence&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;remove_duplicates&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;items, key=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n    seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; items:\n        val = item &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; key &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; key(item)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; val &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; item\n            seen.add(val)\n\na = [ {&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;}]\n&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(remove_duplicates(a, key=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; d: (d[&lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;],d[&lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;])))\n&lt;span class=&quot;hljs-comment&quot;&gt;# [{&apos;x&apos;: 1, &apos;y&apos;: 2}, {&apos;x&apos;: 1, &apos;y&apos;: 3}, {&apos;x&apos;: 2, &apos;y&apos;: 4}]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;x = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# brute force method&lt;/span&gt;\narr = []\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; x:\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; arr:\n    arr.insert(x[i],i)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# recursive method&lt;/span&gt;\ntmp = []\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;remove_duplicates&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;j=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; j &amp;lt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(x):\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; x[j] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; tmp:\n        tmp.append(x[j])\n      i = j+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  \n      remove_duplicates(i)\n\n      \n\nremove_duplicates()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One liner list comprehension:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;values_non_duplicated = [value &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; index, value &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;enumerate&lt;/span&gt;(values) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; value &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; values[ : index]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you routinely use &lt;a href=&quot;http://pandas.pydata.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;pandas&lt;/code&gt;&lt;/a&gt;, and aesthetics is preferred over performance, then consider the built-in function &lt;code&gt;pandas.Series.drop_duplicates&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n    &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np\n\n    uniquifier = &lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; alist: pd.Series(alist).drop_duplicates().tolist()\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;# from the chosen answer &lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f7&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seq&lt;/span&gt;):\n        seen = &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;()\n        seen_add = seen.add\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [ x &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seq &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; (x &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; seen &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; seen_add(x))]\n\n    alist = np.random.randint(low=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, high=&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, size=&lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt;).tolist()\n\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; uniquifier(alist) == f7(alist)  &lt;span class=&quot;hljs-comment&quot;&gt;# True&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Timing: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;    In [&lt;span class=&quot;hljs-number&quot;&gt;104&lt;/span&gt;]: %timeit f7(alist)\n    &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt; loops, best of &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1.3&lt;/span&gt; ms per loop\n    In [&lt;span class=&quot;hljs-number&quot;&gt;110&lt;/span&gt;]: %timeit uniquifier(alist)\n    &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; loops, best of &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4.39&lt;/span&gt; ms per loop\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;this will preserve order and run in O(n) time. basically the idea is to create a hole wherever there is a duplicate found and sink it down to the bottom. makes use of a read and write pointer. whenever a duplicate is found only the read pointer advances and write pointer stays on the duplicate entry to overwrite it.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deduplicate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;l&lt;/span&gt;):\n    count = {}\n    (read,write) = (&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; read &amp;lt; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(l):\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; l[read] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; count:\n            read += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;\n        count[l[read]] = &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;\n        l[write] = l[read]\n        read += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        write += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; l[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:write]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A solution without using imported modules or sets:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;text = &lt;span class=&quot;hljs-string&quot;&gt;&quot;ask not what your country can do for you ask what you can do for your country&quot;&lt;/span&gt;\nsentence = text.split(&lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;)\nnoduplicates = [(sentence[i]) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(sentence)) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; sentence[i] &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; sentence[:i]]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(noduplicates)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Gives output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;ask&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;not&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;what&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;your&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;country&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;can&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;do&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;for&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;you&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;An in-place method&lt;/h3&gt;\n\n&lt;p&gt;This method is quadratic, because we have a linear lookup into the list for every element of the list (to that we have to add the cost of rearranging the list because of the &lt;code&gt;del&lt;/code&gt; s).&lt;/p&gt;\n\n&lt;p&gt;That said, it is possible to operate in place if we start from the end of the list and proceed toward the origin removing each term that is present in the sub-list at its left&lt;/p&gt;\n\n&lt;p&gt;This idea in code is simply&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(l)-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;): \n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; l[i] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; l[:i]: &lt;span class=&quot;hljs-keyword&quot;&gt;del&lt;/span&gt; l[i] \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;em&gt;A simple test of the implementation&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;91&lt;/span&gt;]: &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; random &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; randint, seed                                                                                            \nIn [&lt;span class=&quot;hljs-number&quot;&gt;92&lt;/span&gt;]: seed(&lt;span class=&quot;hljs-string&quot;&gt;&apos;20080808&apos;&lt;/span&gt;) ; l = [randint(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;)] &lt;span class=&quot;hljs-comment&quot;&gt;# Beijing Olympics                                                                 &lt;/span&gt;\nIn [&lt;span class=&quot;hljs-number&quot;&gt;93&lt;/span&gt;]: &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(l)-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;): \n    ...:     &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(l) \n    ...:     &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(i, l[i], l[:i], end=&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) \n    ...:     &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; l[i] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; l[:i]: \n    ...:          &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;: remove&apos;&lt;/span&gt;, l[i]) \n    ...:          &lt;span class=&quot;hljs-keyword&quot;&gt;del&lt;/span&gt; l[i] \n    ...:     &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;: \n    ...:          &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;() \n    ...: &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(l)\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]: remove &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]: remove &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]: remove &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]: remove &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]: remove &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]: remove &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]: remove &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]\n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;94&lt;/span&gt;]:                                                                                                                             \n&lt;/code&gt;&lt;/pre&gt;\n    "],"407":["\n&lt;p&gt;See the Warning section of &lt;a href=&quot;http://www.inside-r.org/r-doc/base/factor&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;?factor&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;In particular, &lt;code&gt;as.numeric&lt;/code&gt; applied to\n  a factor is meaningless, and may\n  happen by implicit coercion.  To\n  transform a factor &lt;code&gt;f&lt;/code&gt; to\n  approximately its original numeric\n  values, &lt;code&gt;as.numeric(levels(f))[f]&lt;/code&gt; is\n  recommended and slightly more\n  efficient than\n  &lt;code&gt;as.numeric(as.character(f))&lt;/code&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The FAQ on R &lt;a href=&quot;http://cran.r-project.org/doc/FAQ/R-FAQ.html#How-do-I-convert-factors-to-numeric_003f&quot; rel=&quot;noreferrer&quot;&gt;has similar advice&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Why is &lt;code&gt;as.numeric(levels(f))[f]&lt;/code&gt; more efficent than &lt;code&gt;as.numeric(as.character(f))&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;as.numeric(as.character(f))&lt;/code&gt; is effectively &lt;code&gt;as.numeric(levels(f)[f])&lt;/code&gt;, so you are performing the conversion to numeric on &lt;code&gt;length(x)&lt;/code&gt; values, rather than on &lt;code&gt;nlevels(x)&lt;/code&gt; values.  The speed difference will be most apparent for long vectors with few levels.  If the values are mostly unique, there won&apos;t be much difference in speed. However you do the conversion, this operation is unlikely to be the bottleneck in your code, so don&apos;t worry too much about it.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Some timings&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;microbenchmark&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nmicrobenchmark&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;as.character&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n  paste0&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n  paste&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n  times &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1e5&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;## Unit: microseconds&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;##                         expr   min    lq      mean median     uq      max neval&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;##     as.numeric(levels(f))[f] 3.982 5.120  6.088624  5.405  5.974 1981.418 1e+05&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;##     as.numeric(levels(f)[f]) 5.973 7.111  8.352032  7.396  8.250 4256.380 1e+05&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;##  as.numeric(as.character(f)) 6.827 8.249  9.628264  8.534  9.671 1983.694 1e+05&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;##                    paste0(x) 7.964 9.387 11.026351  9.956 10.810 2911.257 1e+05&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;##                     paste(x) 7.965 9.387 11.127308  9.956 11.093 2419.458 1e+05&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;R has a number of (undocumented) convenience functions for converting factors:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;as.character.factor&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;as.data.frame.factor&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;as.Date.factor&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;as.list.factor&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;as.vector.factor&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;...&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;But annoyingly, there is nothing to handle the &lt;em&gt;factor -&amp;gt; numeric&lt;/em&gt; conversion. As an extension of Joshua Ulrich&apos;s answer, I would suggest to overcome this omission with the definition of your own idiomatic function:&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;as.double.factor &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;that you can store at the beginning of your script, or even better in your &lt;a href=&quot;http://www.statmethods.net/interface/customizing.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;.Rprofile&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Note: this particular answer is &lt;em&gt;not&lt;/em&gt; for converting numeric-valued factors to numerics, it is for converting categorical factors to their corresponding level numbers.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Every answer in this post failed to generate results for me , NAs were getting generated.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;y2&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt;factor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;D&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;; \n&lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;y2&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;y2&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; \n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt; Warning message&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt; NAs introduced by coercion\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What worked for me is this - &lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;as.integer&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;y2&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# [1] 1 2 3 4 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The most easiest way would be to use &lt;code&gt;unfactor&lt;/code&gt; function from package &lt;a href=&quot;http://cran.r-project.org/web/packages/varhandle/index.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;varhandle&lt;/a&gt; which can accept a &lt;strong&gt;factor vector&lt;/strong&gt; or even a &lt;strong&gt;dataframe&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;unfactor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;your_factor_variable&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This example can be a quick start:&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;x &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ny &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# -&amp;gt; &quot;character&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# -&amp;gt; &quot;numeric&quot;&lt;/span&gt;\n\nx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; factor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ny &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; factor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# -&amp;gt; &quot;factor&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# -&amp;gt; &quot;factor&quot;&lt;/span&gt;\n\nlibrary&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;varhandle&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; unfactor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ny &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; unfactor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# -&amp;gt; &quot;character&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# -&amp;gt; &quot;numeric&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can also use it on a dataframe. For example the &lt;code&gt;iris&lt;/code&gt; dataset:&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;sapply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;factor&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# load the package&lt;/span&gt;\nlibrary&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;varhandle&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# pass the iris to unfactor&lt;/span&gt;\ntmp_iris &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; unfactor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# check the classes of the columns&lt;/span&gt;\nsapply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;tmp_iris&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&quot;numeric&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;character&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# check if the last column is correctly converted&lt;/span&gt;\ntmp_iris&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;Species\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;  &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;    \n  &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;    \n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;    \n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;    \n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;    \n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;    \n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&quot;setosa&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;61&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;66&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;71&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;91&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;versicolor&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;106&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;116&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;121&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;126&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;131&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;136&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;141&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;146&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;virginica&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;It is possible &lt;strong&gt;only&lt;/strong&gt; in the case when the factor labels match the original values. I will explain it with an example.&lt;/p&gt;\n\n&lt;p&gt;Assume the data is vector &lt;code&gt;x&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;x &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now I will create a factor with four labels:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;f &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; factor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; levels &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; labels &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;D&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;1) &lt;code&gt;x&lt;/code&gt; is with type double, &lt;code&gt;f&lt;/code&gt; is with type integer. This is the first unavoidable loss of information. Factors are always stored as integers.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; typeof&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;double&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; typeof&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;integer&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2) It is not possible to revert back to the original values (10, 20, 30, 40) having only &lt;code&gt;f&lt;/code&gt; available. We can see that &lt;code&gt;f&lt;/code&gt; holds only integer values 1, 2, 3, 4 and two attributes - the list of labels (&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;) and the class attribute &quot;factor&quot;. Nothing more.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; str&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n Factor w&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; levels &lt;span class=&quot;hljs-string&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;D&quot;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;levels\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;A&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;B&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;D&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;factor&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To revert back to the original values we have to know the values of levels used in creating the factor. In this case &lt;code&gt;c(10, 20, 30, 40)&lt;/code&gt;. If we know the original levels (in correct order), we can revert back to the original values.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; orig_levels &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; x1 &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; orig_levels&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; all.equal&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; x1&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;TRUE&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this will work only in case when labels have been defined for all possible values in the original data.&lt;/p&gt;\n\n&lt;p&gt;So if you will need the original values, you have to keep them. Otherwise there is a high chance it will not be possible to get back to them only from a factor.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;hablar::convert&lt;/code&gt; if you have a data frame. The syntax is easy:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Sample df&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;hablar&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nlibrary&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\ndf &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span class=&quot;hljs-operator&quot;&gt;::&lt;/span&gt;tibble&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;a &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; as.factor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                    b &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; as.factor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.5&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;6.3&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;df &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  convert&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; b&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;gives you:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# A tibble: 2 x 2&lt;/span&gt;\n      a     b\n  &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;7.&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1.50&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;3.&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;6.30&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or if you want one column to be integer and one numeric:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;df &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  convert&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;int&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n          num&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;results in:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# A tibble: 2 x 2&lt;/span&gt;\n      a     b\n  &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;int&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1.50&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;6.30&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;late to the game, accidently, I found &lt;code&gt;trimws()&lt;/code&gt; can convert &lt;code&gt;factor(3:5)&lt;/code&gt; to &lt;code&gt;c(&quot;3&quot;,&quot;4&quot;,&quot;5&quot;)&lt;/code&gt;.  Then you can call &lt;code&gt;as.numeric()&lt;/code&gt;.  That is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;trimws&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x_factor_var&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;code&gt;strtoi()&lt;/code&gt; works if your factor levels are integers.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;type.convert(f)&lt;/code&gt; on a factor whose levels are completely numeric is another base option.&lt;/p&gt;\n\n&lt;p&gt;Performance-wise it&apos;s about equivalent to &lt;code&gt;as.numeric(as.character(f))&lt;/code&gt; but not nearly as quick as &lt;code&gt;as.numeric(levels(f))[f]&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;identical&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;type.convert&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;TRUE&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That said, if the reason the vector was created as a factor in the first instance has not been addressed (i.e. it likely contained some characters that could not be coerced to numeric) then this approach won&apos;t work and it will return a factor.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;some character level&quot;&lt;/span&gt;\nidentical&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;type.convert&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;f&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;FALSE&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;From the many answers I could read, the only given way was to expand the number of variables according to the number of factors. If you have a variable &quot;pet&quot; with levels &quot;dog&quot; and &quot;cat&quot;, you would end up with pet_dog and pet_cat.&lt;/p&gt;\n\n&lt;p&gt;In my case I wanted to stay with the same number of variables, by just translating the factor variable to a numeric one, in a way that can applied to many variables with many levels, so that cat=1 and dog=0 for instance.&lt;/p&gt;\n\n&lt;p&gt;Please find the corresponding solution below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;crime &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;city &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;SF&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;SF&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;NYC&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                    year &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1990&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1990&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                    crime &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\nindx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; sapply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;crime&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; is.factor&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\ncrime&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;indx&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; lapply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;crime&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;indx&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt; \n  listOri &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; unique&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n  listMod &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;seq_along&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;listOri&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n  res &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; factor&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; levels&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;listOri&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n  res &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;res&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;res&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Looks like the solution as.numeric(levels(f))[f] no longer work with R 4.0.&lt;/p&gt;\n\n&lt;p&gt;Alternative solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;factor2number &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    data.frame&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;levels&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; row.names &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;x&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n\nfactor2number&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;yourFactor&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"408":["\n&lt;p&gt;Send e-mail in Android using the JavaMail API using Gmail authentication.&lt;/p&gt;\n&lt;h3&gt;Steps to create a sample Project:&lt;/h3&gt;\n&lt;p&gt;&lt;strong&gt;MailSenderActivity.java:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MailSenderActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Activity&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        \n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Button) &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.findViewById(R.id.send);\n        send.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n            \n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {   \n                    &lt;span class=&quot;hljs-type&quot;&gt;GMailSender&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GMailSender&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;username@gmail.com&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;);\n                    sender.sendMail(&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is Subject&quot;&lt;/span&gt;,   \n                            &lt;span class=&quot;hljs-string&quot;&gt;&quot;This is Body&quot;&lt;/span&gt;,   \n                            &lt;span class=&quot;hljs-string&quot;&gt;&quot;user@gmail.com&quot;&lt;/span&gt;,   \n                            &lt;span class=&quot;hljs-string&quot;&gt;&quot;user@yahoo.com&quot;&lt;/span&gt;);   \n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {   \n                    Log.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SendMail&quot;&lt;/span&gt;, e.getMessage(), e);   \n                } \n                \n            }\n        });\n        \n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;GMailSender.java:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GMailSender&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;javax&lt;/span&gt;.mail.Authenticator {   \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mailhost&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;;   \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String user;   \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String password;   \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Session session;   \n  \n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; {   \n        Security.addProvider(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;com&lt;/span&gt;.provider.JSSEProvider());   \n    }  \n  \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;GMailSender&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String user, String password)&lt;/span&gt; {   \n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.user = user;   \n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.password = password;   \n  \n        &lt;span class=&quot;hljs-type&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Properties&lt;/span&gt;();   \n        props.setProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.transport.protocol&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp&quot;&lt;/span&gt;);   \n        props.setProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.host&quot;&lt;/span&gt;, mailhost);   \n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);   \n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;);   \n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;);   \n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.class&quot;&lt;/span&gt;,   \n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;javax.net.ssl.SSLSocketFactory&quot;&lt;/span&gt;);   \n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.fallback&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt;);   \n        props.setProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.quitwait&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt;);   \n  \n        session = Session.getDefaultInstance(props, &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;);   \n    }   \n  \n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; PasswordAuthentication &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PasswordAuthentication&lt;/span&gt;(user, password);   \n    }   \n  \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sendMail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String subject, String body, String sender, String recipients)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception {   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n        &lt;span class=&quot;hljs-type&quot;&gt;MimeMessage&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMessage&lt;/span&gt;(session);   \n        &lt;span class=&quot;hljs-type&quot;&gt;DataHandler&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHandler&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ByteArrayDataSource&lt;/span&gt;(body.getBytes(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;));   \n        message.setSender(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(sender));   \n        message.setSubject(subject);   \n        message.setDataHandler(handler);   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (recipients.indexOf(&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)   \n            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipients));   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;  \n            message.setRecipient(Message.RecipientType.TO, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(recipients));   \n        Transport.send(message);   \n        }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(Exception e){\n            \n        }\n    }   \n  \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ByteArrayDataSource&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataSource&lt;/span&gt; {   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt;[] data;   \n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String type;   \n  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ByteArrayDataSource&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt;[] data, String type)&lt;/span&gt; {   \n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;();   \n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.data = data;   \n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.type = type;   \n        }   \n  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ByteArrayDataSource&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt;[] data)&lt;/span&gt; {   \n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;();   \n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.data = data;   \n        }   \n  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String type)&lt;/span&gt; {   \n            &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.type = type;   \n        }   \n  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getContentType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {   \n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (type == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)   \n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;application/octet-stream&quot;&lt;/span&gt;;   \n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;  \n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; type;   \n        }   \n  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; InputStream &lt;span class=&quot;hljs-title function_&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {   \n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ByteArrayInputStream&lt;/span&gt;(data);   \n        }   \n  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {   \n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;ByteArrayDataSource&quot;&lt;/span&gt;;   \n        }   \n  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; OutputStream &lt;span class=&quot;hljs-title function_&quot;&gt;getOutputStream&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {   \n            &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IOException&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Not Supported&quot;&lt;/span&gt;);   \n        }   \n    }   \n}  \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;JSSEProvider.java:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*\n *  Licensed to the Apache Software Foundation (ASF) under one or more\n *  contributor license agreements.  See the NOTICE file distributed with\n *  this work for additional information regarding copyright ownership.\n *  The ASF licenses this file to You under the Apache License, Version 2.0\n *  (the &quot;License&quot;); you may not use this file except in compliance with\n *  the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@author&lt;/span&gt; Alexander Y. Kleymenov\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@version&lt;/span&gt; $Revision$\n */&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.security.AccessController;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.security.Provider;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSSEProvider&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Provider&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;JSSEProvider&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HarmonyJSSE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Harmony JSSE Provider&quot;&lt;/span&gt;);\n        AccessController.doPrivileged(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;java&lt;/span&gt;.security.PrivilegedAction&amp;lt;Void&amp;gt;() {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Void &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n                put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SSLContext.TLS&quot;&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;org.apache.harmony.xnet.provider.jsse.SSLContextImpl&quot;&lt;/span&gt;);\n                put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Alg.Alias.SSLContext.TLSv1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;TLS&quot;&lt;/span&gt;);\n                put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;KeyManagerFactory.X509&quot;&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl&quot;&lt;/span&gt;);\n                put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;TrustManagerFactory.X509&quot;&lt;/span&gt;,\n                        &lt;span class=&quot;hljs-string&quot;&gt;&quot;org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl&quot;&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n            }\n        });\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;ADD 3 jars found in the following link to your Android Project&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/javamail-android/mail.jar&quot; rel=&quot;noreferrer&quot;&gt;mail.jar&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/javamail-android/activation.jar&quot; rel=&quot;noreferrer&quot;&gt;activation.jar&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/javamail-android/additionnal.jar&quot; rel=&quot;noreferrer&quot;&gt;additional.jar&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/6859020/28557&quot;&gt;Click here - How to add External Jars&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;And don&apos;t forget to add this line in your manifest:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Just click below link to change account access for less secure apps&lt;/strong&gt;\n&lt;a href=&quot;https://www.google.com/settings/security/lesssecureapps&quot; rel=&quot;noreferrer&quot;&gt;https://www.google.com/settings/security/lesssecureapps&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Run the project and check your recipient mail account for the mail.\nCheers!&lt;/p&gt;\n&lt;p&gt;P.S. And don&apos;t forget that you cannot do network operation from any Activity in android.\nHence it is recommended to use &lt;code&gt;AsyncTask&lt;/code&gt; or &lt;code&gt;IntentService&lt;/code&gt; to avoid network on main thread exception.&lt;/p&gt;\n&lt;p&gt;Jar files: &lt;a href=&quot;https://code.google.com/archive/p/javamail-android/&quot; rel=&quot;noreferrer&quot;&gt;https://code.google.com/archive/p/javamail-android/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Thank you for your valuable information. Code is working fine. I am able to add attachment also by adding following code.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Multipart _multipart; \n_multipart = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMultipart&lt;/span&gt;(); \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addAttachment&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String filename,String subject)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception { \n    &lt;span class=&quot;hljs-type&quot;&gt;BodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;(); \n    &lt;span class=&quot;hljs-type&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileDataSource&lt;/span&gt;(filename); \n    messageBodyPart.setDataHandler(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHandler&lt;/span&gt;(source)); \n    messageBodyPart.setFileName(filename); \n    _multipart.addBodyPart(messageBodyPart);\n\n    &lt;span class=&quot;hljs-type&quot;&gt;BodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;(); \n    messageBodyPart2.setText(subject); \n\n    _multipart.addBodyPart(messageBodyPart2); \n} \n\n\n\nmessage.setContent(_multipart);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;Could not connect to SMTP host:\n  smtp.gmail.com, port: 465&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Add this line in your manifest:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use JavaMail API to handle your email tasks. JavaMail API is available in JavaEE package and its jar is available for download. Sadly it cannot be used directly in an Android application since it uses AWT components which are completely incompatible  in Android.&lt;/p&gt;\n\n&lt;p&gt;You can find the Android port for JavaMail at the following location:\n&lt;a href=&quot;http://code.google.com/p/javamail-android/&quot; rel=&quot;noreferrer&quot;&gt;http://code.google.com/p/javamail-android/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Add the jars to your application and use the SMTP method&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;100% working code with demo You can also send multiple emails using this answer.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Download Project &lt;strong&gt;&lt;a href=&quot;https://github.com/arpit999/SendMail&quot; rel=&quot;nofollow noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;  Download mail, activation, additional jar files and add in your &lt;strong&gt;project libs folder&lt;/strong&gt; in android studio. I added a screenshot see below &lt;strong&gt;&lt;a href=&quot;https://code.google.com/archive/p/javamail-android/downloads&quot; rel=&quot;nofollow noreferrer&quot;&gt;Download link&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/CCnFj.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/CCnFj.png&quot; alt=&quot;libs add&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Login with gmail (&lt;strong&gt;using your from mail&lt;/strong&gt;) and &lt;strong&gt;TURN ON&lt;/strong&gt;  toggle button &lt;a href=&quot;https://www.google.com/settings/u/1/security/lesssecureapps&quot; rel=&quot;nofollow noreferrer&quot;&gt;LINK&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Most of the people forget about this step i hope you will not.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Step 2 :&lt;/strong&gt;  After completing this process.  Copy and past this classes into your project.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;GMail.java&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.util.Log;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.UnsupportedEncodingException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Properties;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Message;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.MessagingException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Session;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Transport;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.AddressException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.InternetAddress;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMessage;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GMail&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;emailPort&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;587&quot;&lt;/span&gt;;&lt;span class=&quot;hljs-comment&quot;&gt;// gmail&apos;s smtp port&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;smtpAuth&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;starttls&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;emailHost&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;;\n\n\n    String fromEmail;\n    String fromPassword;\n    List&amp;lt;String&amp;gt; toEmailList;\n    String emailSubject;\n    String emailBody;\n\n    Properties emailProperties;\n    Session mailSession;\n    MimeMessage emailMessage;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;GMail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;GMail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String fromEmail, String fromPassword,\n            List&amp;lt;String&amp;gt; toEmailList, String emailSubject, String emailBody)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.fromEmail = fromEmail;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.fromPassword = fromPassword;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.toEmailList = toEmailList;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.emailSubject = emailSubject;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.emailBody = emailBody;\n\n        emailProperties = System.getProperties();\n        emailProperties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, emailPort);\n        emailProperties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;, smtpAuth);\n        emailProperties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.starttls.enable&quot;&lt;/span&gt;, starttls);\n        Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;GMail&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Mail server properties set.&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; MimeMessage &lt;span class=&quot;hljs-title function_&quot;&gt;createEmailMessage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; AddressException,\n            MessagingException, UnsupportedEncodingException {\n\n        mailSession = Session.getDefaultInstance(emailProperties, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n        emailMessage = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMessage&lt;/span&gt;(mailSession);\n\n        emailMessage.setFrom(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(fromEmail, fromEmail));\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (String toEmail : toEmailList) {\n            Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;GMail&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;toEmail: &quot;&lt;/span&gt; + toEmail);\n            emailMessage.addRecipient(Message.RecipientType.TO,\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(toEmail));\n        }\n\n        emailMessage.setSubject(emailSubject);\n        emailMessage.setContent(emailBody, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;);&lt;span class=&quot;hljs-comment&quot;&gt;// for a html email&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// emailMessage.setText(emailBody);// for a text email&lt;/span&gt;\n        Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;GMail&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Email Message created.&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; emailMessage;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sendEmail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; AddressException, MessagingException {\n\n        &lt;span class=&quot;hljs-type&quot;&gt;Transport&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;transport&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mailSession.getTransport(&lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp&quot;&lt;/span&gt;);\n        transport.connect(emailHost, fromEmail, fromPassword);\n        Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;GMail&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;allrecipients: &quot;&lt;/span&gt; + emailMessage.getAllRecipients());\n        transport.sendMessage(emailMessage, emailMessage.getAllRecipients());\n        transport.close();\n        Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;GMail&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Email sent successfully.&quot;&lt;/span&gt;);\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;SendMailTask.java&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.ProgressDialog;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.AsyncTask;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.util.Log;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SendMailTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ProgressDialog statusDialog;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Activity sendMailActivity;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;SendMailTask&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Activity activity)&lt;/span&gt; {\n        sendMailActivity = activity;\n\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        statusDialog = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt;(sendMailActivity);\n        statusDialog.setMessage(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Getting ready...&quot;&lt;/span&gt;);\n        statusDialog.setIndeterminate(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        statusDialog.setCancelable(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        statusDialog.show();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Object &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Object... args)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SendMailTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;About to instantiate GMail...&quot;&lt;/span&gt;);\n            publishProgress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Processing input....&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-type&quot;&gt;GMail&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;androidEmail&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GMail&lt;/span&gt;(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].toString(),\n                    args[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].toString(), (List) args[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], args[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;].toString(),\n                    args[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;].toString());\n            publishProgress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Preparing mail message....&quot;&lt;/span&gt;);\n            androidEmail.createEmailMessage();\n            publishProgress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sending email....&quot;&lt;/span&gt;);\n            androidEmail.sendEmail();\n            publishProgress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Email Sent.&quot;&lt;/span&gt;);\n            Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SendMailTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Mail Sent.&quot;&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {\n            publishProgress(e.getMessage());\n            Log.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SendMailTask&quot;&lt;/span&gt;, e.getMessage(), e);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Object... values)&lt;/span&gt; {\n        statusDialog.setMessage(values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].toString());\n\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Object result)&lt;/span&gt; {\n        statusDialog.dismiss();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Step 3 :&lt;/strong&gt;\nNow you can change this  class according to your needs also you can send multiple mail using this class. i provide xml and java file both.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;activity_main.xml&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;\n&amp;lt;LinearLayout xmlns:android=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;\n    xmlns:tools=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;\n    android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n    android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n    android:orientation=&lt;span class=&quot;hljs-string&quot;&gt;&quot;vertical&quot;&lt;/span&gt;\n    android:paddingLeft=&lt;span class=&quot;hljs-string&quot;&gt;&quot;20dp&quot;&lt;/span&gt;\n    android:paddingRight=&lt;span class=&quot;hljs-string&quot;&gt;&quot;20dp&quot;&lt;/span&gt;\n    android:paddingTop=&lt;span class=&quot;hljs-string&quot;&gt;&quot;30dp&quot;&lt;/span&gt;&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/textView1&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:paddingTop=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10dp&quot;&lt;/span&gt;\n        android:text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;From Email&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;EditText\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/editText1&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:background=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#FFFFFF&quot;&lt;/span&gt;\n        android:cursorVisible=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;\n        android:editable=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;\n        android:ems=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt;\n        android:enabled=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;\n        android:inputType=&lt;span class=&quot;hljs-string&quot;&gt;&quot;textEmailAddress&quot;&lt;/span&gt;\n        android:padding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5dp&quot;&lt;/span&gt;\n        android:textColor=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#000000&quot;&lt;/span&gt;&amp;gt;\n\n        &amp;lt;requestFocus /&amp;gt;\n    &amp;lt;/EditText&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/textView2&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:paddingTop=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10dp&quot;&lt;/span&gt;\n        android:text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Password (For from email)&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;EditText\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/editText2&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:background=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#FFFFFF&quot;&lt;/span&gt;\n        android:ems=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt;\n        android:inputType=&lt;span class=&quot;hljs-string&quot;&gt;&quot;textPassword&quot;&lt;/span&gt;\n        android:padding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5dp&quot;&lt;/span&gt;\n        android:textColor=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#000000&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/textView3&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:paddingTop=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10dp&quot;&lt;/span&gt;\n        android:text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;To Email&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;EditText\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/editText3&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:background=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt;\n        android:ems=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt;\n        android:inputType=&lt;span class=&quot;hljs-string&quot;&gt;&quot;textEmailAddress&quot;&lt;/span&gt;\n        android:padding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5dp&quot;&lt;/span&gt;\n        android:textColor=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#000000&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/textView4&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:paddingTop=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10dp&quot;&lt;/span&gt;\n        android:text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Subject&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;EditText\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/editText4&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:background=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt;\n        android:ems=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt;\n        android:padding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;5dp&quot;&lt;/span&gt;\n        android:textColor=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#000000&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;TextView\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/textView5&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:paddingTop=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10dp&quot;&lt;/span&gt;\n        android:text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Body&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;EditText\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/editText5&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:background=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt;\n        android:ems=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt;\n        android:inputType=&lt;span class=&quot;hljs-string&quot;&gt;&quot;textMultiLine&quot;&lt;/span&gt;\n        android:padding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;35dp&quot;&lt;/span&gt;\n        android:textColor=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#000000&quot;&lt;/span&gt; /&amp;gt;\n\n    &amp;lt;Button\n        android:id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/button1&quot;&lt;/span&gt;\n        android:layout_width=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:layout_height=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        android:text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Send Email&quot;&lt;/span&gt; /&amp;gt;\n\n&amp;lt;/LinearLayout&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;SendMailActivity.java&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.util.Log;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.view.View;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.Button;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SendMailActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Activity&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Button) &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.findViewById(R.id.button1);\n\n        send.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n                Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SendMailActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Send Button Clicked.&quot;&lt;/span&gt;);\n\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fromEmail&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ((TextView) findViewById(R.id.editText1))\n                        .getText().toString();\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fromPassword&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ((TextView) findViewById(R.id.editText2))\n                        .getText().toString();\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;toEmails&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ((TextView) findViewById(R.id.editText3))\n                        .getText().toString();\n                List&amp;lt;String&amp;gt; toEmailList = Arrays.asList(toEmails\n                        .split(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\s*,\\\\s*&quot;&lt;/span&gt;));\n                Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SendMailActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;To List: &quot;&lt;/span&gt; + toEmailList);\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;emailSubject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ((TextView) findViewById(R.id.editText4))\n                        .getText().toString();\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;emailBody&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ((TextView) findViewById(R.id.editText5))\n                        .getText().toString();\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SendMailTask&lt;/span&gt;(SendMailActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;).execute(fromEmail,\n                        fromPassword, toEmailList, emailSubject, emailBody);\n            }\n        });\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Dont forget to add &lt;strong&gt;internet&lt;/strong&gt; permission in your AndroidManifest.xml file&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Hope it work if it not then just comment down below.&lt;/p&gt;\n    ","\n&lt;p&gt;In order to help those getting a Network On Main Thread Exception with an SDK Target &amp;gt;9. This is using droopie&apos;s code above but will work similarly for any.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;StrictMode.&lt;span class=&quot;hljs-type&quot;&gt;ThreadPolicy&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;policy&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StrictMode&lt;/span&gt;.ThreadPolicy.Builder().permitAll().build();\n\nStrictMode.setThreadPolicy(policy); \n\nandroid.os.NetworkOnMainThreadException\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can use AsyncTask as below&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClickMail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SendEmailAsyncTask&lt;/span&gt;().execute();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SendEmailAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt; &amp;lt;Void, Void, Boolean&amp;gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;Mail&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mail&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;from@gmail.com&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;my password&quot;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;SendEmailAsyncTask&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (BuildConfig.DEBUG) Log.v(SendEmailAsyncTask.class.getName(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;SendEmailAsyncTask()&quot;&lt;/span&gt;);\n        String[] toArr = { &lt;span class=&quot;hljs-string&quot;&gt;&quot;to mail@gmail.com&quot;&lt;/span&gt;};\n        m.setTo(toArr);\n        m.setFrom(&lt;span class=&quot;hljs-string&quot;&gt;&quot;from mail@gmail.com&quot;&lt;/span&gt;);\n        m.setSubject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Email from Android&quot;&lt;/span&gt;);\n        m.setBody(&lt;span class=&quot;hljs-string&quot;&gt;&quot;body.&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Boolean &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Void... params)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (BuildConfig.DEBUG) Log.v(SendEmailAsyncTask.class.getName(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;doInBackground()&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            m.send();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (AuthenticationFailedException e) {\n            Log.e(SendEmailAsyncTask.class.getName(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;Bad account details&quot;&lt;/span&gt;);\n            e.printStackTrace();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (MessagingException e) {\n            Log.e(SendEmailAsyncTask.class.getName(), m.getTo(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&quot;failed&quot;&lt;/span&gt;);\n            e.printStackTrace();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {\n            e.printStackTrace();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;SMTP&lt;/h2&gt;\n\n&lt;p&gt;Using SMTP is one way to go, and the others have already pointed out ways how to do it. Just note that while doing this, you completely circumvent the built in mail app, and you will have to provide the address of the SMTP server, the user name and password for that server, either statically in your code, or query it from the user.&lt;/p&gt;\n\n&lt;h2&gt;HTTP&lt;/h2&gt;\n\n&lt;p&gt;Another way would involve a simple server side script, like php, that takes some URL parameters and uses them to send a mail. This way, you only need to make an HTTP request from the device (easily possible with the built in libraries) and don&apos;t need to store the SMTP login data on the device. This is one more indirection compared to direct SMTP usage, but because it&apos;s so very easy to make HTTP request and send mails from PHP, it might even be simpler than the direct way.&lt;/p&gt;\n\n&lt;h2&gt;Mail Application&lt;/h2&gt;\n\n&lt;p&gt;If the mail shall be send from the users default mail account that he already registered with the phone, you&apos;d have to take some other approach. If you have enough time and experience, you might want to check the source code of the Android Email application to see if it offers some entry point to send a mail without user interaction (I don&apos;t know, but maybe there is one).&lt;/p&gt;\n\n&lt;p&gt;Maybe you even find a way to query the users account details (so you can use them for SMTP), though I highly doubt that this is possible, because it would be a huge security risk and Android is built rather securely.&lt;/p&gt;\n    ","\n&lt;p&gt;here is an alt version that also works for me and has attachments (posted already above but complete version unlike the source link, which people posted they cant get it to work since its missing data)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Date; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Properties; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.CommandMap; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.DataHandler; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.DataSource; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.FileDataSource; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.MailcapCommandMap; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.BodyPart; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Multipart; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.PasswordAuthentication; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Session; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Transport; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.InternetAddress; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeBodyPart; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMessage; \n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMultipart; \n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mail&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;javax&lt;/span&gt;.mail.Authenticator { \n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _user; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _pass; \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String[] _to; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _from; \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _port; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _sport; \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _host; \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _subject; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _body; \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; _auth; \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; _debuggable; \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Multipart _multipart; \n\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Mail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n    _host = &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// default smtp server &lt;/span&gt;\n    _port = &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// default smtp port &lt;/span&gt;\n    _sport = &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// default socketfactory port &lt;/span&gt;\n\n    _user = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// username &lt;/span&gt;\n    _pass = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// password &lt;/span&gt;\n    _from = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// email sent from &lt;/span&gt;\n    _subject = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// email subject &lt;/span&gt;\n    _body = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// email body &lt;/span&gt;\n\n    _debuggable = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// debug mode on or off - default off &lt;/span&gt;\n    _auth = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// smtp authentication - default on &lt;/span&gt;\n\n    _multipart = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMultipart&lt;/span&gt;(); \n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// There is something wrong with MailCap, javamail can not find a handler for the multipart/mixed part, so this bit needs to be added. &lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;MailcapCommandMap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mc&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (MailcapCommandMap) CommandMap.getDefaultCommandMap(); \n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html;; x-java-content-handler=com.sun.mail.handlers.text_html&quot;&lt;/span&gt;); \n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml&quot;&lt;/span&gt;); \n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain&quot;&lt;/span&gt;); \n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed&quot;&lt;/span&gt;); \n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822&quot;&lt;/span&gt;); \n    CommandMap.setDefaultCommandMap(mc); \n  } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Mail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String user, String pass)&lt;/span&gt; { \n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;(); \n\n    _user = user; \n    _pass = pass; \n  } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception { \n    &lt;span class=&quot;hljs-type&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; _setProperties(); \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!_user.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; !_pass.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; _to.length &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; !_from.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; !_subject.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; !_body.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;)) { \n      &lt;span class=&quot;hljs-type&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Session.getInstance(props, &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;); \n\n      &lt;span class=&quot;hljs-type&quot;&gt;MimeMessage&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMessage&lt;/span&gt;(session); \n\n      msg.setFrom(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(_from)); \n\n      InternetAddress[] addressTo = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;[_to.length]; \n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; _to.length; i++) { \n        addressTo[i] = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(_to[i]); \n      } \n        msg.setRecipients(MimeMessage.RecipientType.TO, addressTo); \n\n      msg.setSubject(_subject); \n      msg.setSentDate(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;()); \n\n      &lt;span class=&quot;hljs-comment&quot;&gt;// setup message body &lt;/span&gt;\n      &lt;span class=&quot;hljs-type&quot;&gt;BodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;(); \n      messageBodyPart.setText(_body); \n      _multipart.addBodyPart(messageBodyPart); \n\n      &lt;span class=&quot;hljs-comment&quot;&gt;// Put parts in message &lt;/span&gt;\n      msg.setContent(_multipart); \n\n      &lt;span class=&quot;hljs-comment&quot;&gt;// send email &lt;/span&gt;\n      Transport.send(msg); \n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; \n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { \n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; \n    } \n  } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addAttachment&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String filename)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception { \n    &lt;span class=&quot;hljs-type&quot;&gt;BodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;(); \n    &lt;span class=&quot;hljs-type&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileDataSource&lt;/span&gt;(filename); \n    messageBodyPart.setDataHandler(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHandler&lt;/span&gt;(source)); \n    messageBodyPart.setFileName(filename); \n\n    _multipart.addBodyPart(messageBodyPart); \n  } \n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PasswordAuthentication &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PasswordAuthentication&lt;/span&gt;(_user, _pass); \n  } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Properties &lt;span class=&quot;hljs-title function_&quot;&gt;_setProperties&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n    &lt;span class=&quot;hljs-type&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Properties&lt;/span&gt;(); \n\n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.host&quot;&lt;/span&gt;, _host); \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(_debuggable) { \n      props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.debug&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;); \n    } \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(_auth) { \n      props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;); \n    } \n\n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, _port); \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.port&quot;&lt;/span&gt;, _sport); \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.class&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;javax.net.ssl.SSLSocketFactory&quot;&lt;/span&gt;); \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.fallback&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt;); \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; props; \n  } \n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// the getters and setters &lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _body; \n  } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setBody&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String _body)&lt;/span&gt; { \n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._body = _body; \n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] toArr)&lt;/span&gt; {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n      &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._to=toArr;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setFrom&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String string)&lt;/span&gt; {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n      &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._from=string;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setSubject&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String string)&lt;/span&gt; {\n      &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n      &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._subject=string;\n  }  \n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// more of the getters and setters .. &lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and to call it in an activity...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle icicle)&lt;/span&gt; { \n  &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(icicle); \n  setContentView(R.layout.main); \n\n  &lt;span class=&quot;hljs-type&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;addImage&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Button) findViewById(R.id.send_email); \n  addImage.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; { \n      &lt;span class=&quot;hljs-type&quot;&gt;Mail&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mail&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;gmailusername@gmail.com&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;); \n\n      String[] toArr = {&lt;span class=&quot;hljs-string&quot;&gt;&quot;bla@bla.com&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;lala@lala.com&quot;&lt;/span&gt;}; \n      m.setTo(toArr); \n      m.setFrom(&lt;span class=&quot;hljs-string&quot;&gt;&quot;wooo@wooo.com&quot;&lt;/span&gt;); \n      m.setSubject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is an email sent using my Mail JavaMail wrapper from an Android device.&quot;&lt;/span&gt;); \n      m.setBody(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Email body.&quot;&lt;/span&gt;); \n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; { \n        m.addAttachment(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/sdcard/filelocation&quot;&lt;/span&gt;); \n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(m.send()) { \n          Toast.makeText(MailApp.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Email was sent successfully.&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show(); \n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { \n          Toast.makeText(MailApp.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Email was not sent.&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show(); \n        } \n      } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(Exception e) { \n        &lt;span class=&quot;hljs-comment&quot;&gt;//Toast.makeText(MailApp.this, &quot;There was a problem sending the email.&quot;, Toast.LENGTH_LONG).show(); &lt;/span&gt;\n        Log.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MailApp&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Could not send email&quot;&lt;/span&gt;, e); \n      } \n    } \n  }); \n} \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;GmailBackground is small library to send an email in background without user interaction :&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    BackgroundMail.newBuilder(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;)\n            .withUsername(&lt;span class=&quot;hljs-string&quot;&gt;&quot;username@gmail.com&quot;&lt;/span&gt;)\n            .withPassword(&lt;span class=&quot;hljs-string&quot;&gt;&quot;password12345&quot;&lt;/span&gt;)\n            .withMailto(&lt;span class=&quot;hljs-string&quot;&gt;&quot;toemail@gmail.com&quot;&lt;/span&gt;)\n            .withType(BackgroundMail.TYPE_PLAIN)\n            .withSubject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;this is the subject&quot;&lt;/span&gt;)\n            .withBody(&lt;span class=&quot;hljs-string&quot;&gt;&quot;this is the body&quot;&lt;/span&gt;)\n            .withOnSuccessCallback(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BackgroundMail&lt;/span&gt;.OnSuccessCallback() {\n                &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onSuccess&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;//do some magic&lt;/span&gt;\n                }\n            })\n            .withOnFailCallback(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BackgroundMail&lt;/span&gt;.OnFailCallback() {\n                &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onFail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;//do some magic&lt;/span&gt;\n                }\n            })\n            .send();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Configuration:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;repositories {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n    maven { url &lt;span class=&quot;hljs-string&quot;&gt;&quot;https://jitpack.io&quot;&lt;/span&gt; }\n }\n dependencies {\n            compile &lt;span class=&quot;hljs-string&quot;&gt;&apos;com.github.yesidlazaro:GmailBackground:1.2.0&apos;&lt;/span&gt;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Permissions:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.ACCESS_NETWORK_STATE&quot;&lt;/span&gt;/&amp;gt;\n&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also for attachments, you need to set READ_EXTERNAL_STORAGE permission:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.READ_EXTERNAL_STORAGE&quot;&lt;/span&gt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/yesidlazaro/GmailBackground&quot; rel=&quot;noreferrer&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;(I&apos;ve tested it myself)&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Word of warning if using &quot;smtp.gmail.com&quot; as the default smtp server. &lt;/p&gt;\n\n&lt;p&gt;Google will force you to change your linked email account password frequently due to their over zealous &quot;suspicious activity&quot; polices. In essence it treats repeated smtp requests from different countries within a short time frame as &quot;suspicious activity&quot;. As they assume you (the email account holder) can only be in one country at a time.&lt;/p&gt;\n\n&lt;p&gt;When google systems detect &quot;suspicious activity&quot; it will prevent further emails until you change the password. As you will have hard coded the password into the app you have to re-release the app each time this happens, not ideal. This happened 3 times in a week to me, I even stored the password on another server and dynamically fetched the password each time google forced me to change it.&lt;/p&gt;\n\n&lt;p&gt;So I recommend using one of the many free smtp providers instead of &quot;smtp.gmail.com&quot; to avoid this security problem. Use the same code but change &quot;smtp.gmail.com&quot; to your new smtp forwarding host.&lt;/p&gt;\n    ","\n&lt;p&gt;Edit: JavaMail 1.5.5 &lt;a href=&quot;https://java.net/projects/javamail/pages/Android&quot; rel=&quot;nofollow noreferrer&quot;&gt;claims to support Android&lt;/a&gt;, so you shouldn&apos;t need anything else.&lt;/p&gt;\n\n&lt;p&gt;&lt;strike&gt;\nI&apos;ve ported the latest JavaMail (1.5.4) to Android. It&apos;s available in Maven Central, just add the following to &lt;code&gt;build.gradle&lt;/code&gt;~~&lt;/strike&gt;&lt;/p&gt;&lt;strike&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;compile &lt;span class=&quot;hljs-string&quot;&gt;&apos;eu.ocathain.com.sun.mail:javax.mail:1.5.4&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can then follow the official &lt;a href=&quot;http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/javamail/javamail.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Source code is available here: &lt;a href=&quot;https://bitbucket.org/artbristol/javamail-forked-android&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://bitbucket.org/artbristol/javamail-forked-android&lt;/a&gt;&lt;/p&gt;\n\n&lt;/strike&gt;&lt;p&gt;&lt;strike&gt;&lt;/strike&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I found a shorter alternative for others who need help. The code is:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.example.mail;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Properties;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Message;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.MessagingException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.PasswordAuthentication;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Session;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Transport;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.InternetAddress;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMessage;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SendMailTLS&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;username@gmail.com&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-type&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Properties&lt;/span&gt;();\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.starttls.enable&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.host&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;);\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;587&quot;&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Session.getInstance(props,\n          &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;javax&lt;/span&gt;.mail.Authenticator() {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; PasswordAuthentication &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PasswordAuthentication&lt;/span&gt;(username, password);\n            }\n          });\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n\n            &lt;span class=&quot;hljs-type&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMessage&lt;/span&gt;(session);\n            message.setFrom(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;from-email@gmail.com&quot;&lt;/span&gt;));\n            message.setRecipients(Message.RecipientType.TO,\n                InternetAddress.parse(&lt;span class=&quot;hljs-string&quot;&gt;&quot;to-email@gmail.com&quot;&lt;/span&gt;));\n            message.setSubject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Testing Subject&quot;&lt;/span&gt;);\n            message.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Dear Mail Crawler,&quot;&lt;/span&gt;\n                + &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n\\n No spam to my email, please!&quot;&lt;/span&gt;);\n\n            Transport.send(message);\n\n            System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Done&quot;&lt;/span&gt;);\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (MessagingException e) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RuntimeException&lt;/span&gt;(e);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Source: &lt;a href=&quot;https://www.mkyong.com/java/javamail-api-sending-email-via-gmail-smtp-example/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Sending Email via JavaMail API&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Hope this Helps! Good Luck!&lt;/p&gt;\n    ","\n&lt;p&gt;For sending a mail with attachment..&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SendAttachment&lt;/span&gt;{\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String [] args)&lt;/span&gt;{ \n             &lt;span class=&quot;hljs-comment&quot;&gt;//to address&lt;/span&gt;\n                    String to=&lt;span class=&quot;hljs-string&quot;&gt;&quot;abc@abc.com&quot;&lt;/span&gt;;&lt;span class=&quot;hljs-comment&quot;&gt;//change accordingly&lt;/span&gt;\n                    &lt;span class=&quot;hljs-comment&quot;&gt;//from address&lt;/span&gt;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; String user=&lt;span class=&quot;hljs-string&quot;&gt;&quot;efg@efg.com&quot;&lt;/span&gt;;&lt;span class=&quot;hljs-comment&quot;&gt;//change accordingly&lt;/span&gt;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; String password=&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;;&lt;span class=&quot;hljs-comment&quot;&gt;//change accordingly &lt;/span&gt;\n                     &lt;span class=&quot;hljs-type&quot;&gt;MailcapCommandMap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mc&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (MailcapCommandMap) CommandMap.getDefaultCommandMap();\n                   mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html;; x-java-content-handler=com.sun.mail.handlers.text_html&quot;&lt;/span&gt;);\n                  mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml&quot;&lt;/span&gt;);\n                  mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain&quot;&lt;/span&gt;);\n                  mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed&quot;&lt;/span&gt;);\n                  mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822&quot;&lt;/span&gt;);\n                  CommandMap.setDefaultCommandMap(mc); \n                  &lt;span class=&quot;hljs-comment&quot;&gt;//1) get the session object   &lt;/span&gt;\n                  &lt;span class=&quot;hljs-type&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; System.getProperties();\n                  properties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;); \n                  properties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.host&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;);\n                    properties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;);\n                    properties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.class&quot;&lt;/span&gt;,\n                            &lt;span class=&quot;hljs-string&quot;&gt;&quot;javax.net.ssl.SSLSocketFactory&quot;&lt;/span&gt;);\n                    properties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);\n                    properties.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;);\n\n                  &lt;span class=&quot;hljs-type&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Session.getDefaultInstance(properties,\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;javax&lt;/span&gt;.mail.Authenticator() {\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; PasswordAuthentication &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PasswordAuthentication&lt;/span&gt;(user,password);\n                   }\n                  });\n\n                  &lt;span class=&quot;hljs-comment&quot;&gt;//2) compose message   &lt;/span&gt;\n                  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{ \n                    &lt;span class=&quot;hljs-type&quot;&gt;MimeMessage&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMessage&lt;/span&gt;(session);\n                    message.setFrom(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(user));\n                    message.addRecipient(Message.RecipientType.TO,&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(to));\n                    message.setSubject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hii&quot;&lt;/span&gt;); \n                    &lt;span class=&quot;hljs-comment&quot;&gt;//3) create MimeBodyPart object and set your message content    &lt;/span&gt;\n                    &lt;span class=&quot;hljs-type&quot;&gt;BodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;();\n                    messageBodyPart1.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;How is This&quot;&lt;/span&gt;); \n                    &lt;span class=&quot;hljs-comment&quot;&gt;//4) create new MimeBodyPart object and set DataHandler object to this object    &lt;/span&gt;\n                    &lt;span class=&quot;hljs-type&quot;&gt;MimeBodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;();\n                &lt;span class=&quot;hljs-comment&quot;&gt;//Location of file to be attached&lt;/span&gt;\n                    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Environment.getExternalStorageDirectory().getPath()+&lt;span class=&quot;hljs-string&quot;&gt;&quot;/R2832.zip&quot;&lt;/span&gt;;&lt;span class=&quot;hljs-comment&quot;&gt;//change accordingly&lt;/span&gt;\n                    &lt;span class=&quot;hljs-type&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileDataSource&lt;/span&gt;(filename);\n                    messageBodyPart2.setDataHandler(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHandler&lt;/span&gt;(source));\n                    messageBodyPart2.setFileName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;); \n                    &lt;span class=&quot;hljs-comment&quot;&gt;//5) create Multipart object and add MimeBodyPart objects to this object    &lt;/span&gt;\n                    &lt;span class=&quot;hljs-type&quot;&gt;Multipart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;multipart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMultipart&lt;/span&gt;();\n                    multipart.addBodyPart(messageBodyPart1);\n                    multipart.addBodyPart(messageBodyPart2); \n                    &lt;span class=&quot;hljs-comment&quot;&gt;//6) set the multiplart object to the message object&lt;/span&gt;\n                    message.setContent(multipart ); \n                    &lt;span class=&quot;hljs-comment&quot;&gt;//7) send message &lt;/span&gt;\n                    Transport.send(message); \n                   System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MESSAGE SENT....&quot;&lt;/span&gt;);\n                   }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (MessagingException ex) {ex.printStackTrace();}\n                  }\n                }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Those who are getting &lt;code&gt;ClassDefNotFoundError&lt;/code&gt; try to move that Three jar files to lib folder of your Project,it worked for me!!&lt;/p&gt;\n    ","\n&lt;p&gt;I am unable to run Vinayak B&apos;s code. Finally i solved this issue by following :&lt;/p&gt;\n\n&lt;p&gt;1.Using this&lt;/p&gt;\n\n&lt;p&gt;2.Applying AsyncTask.&lt;/p&gt;\n\n&lt;p&gt;3.Changing security issue of sender gmail account.(Change to &quot;TURN ON&quot;) in &lt;a href=&quot;https://www.google.com/settings/security/lesssecureapps&quot; rel=&quot;nofollow noreferrer&quot;&gt;this&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Did you consider using Apache Commons Net ? Since 3.3, just one jar (and you can depend on it using gradle or maven) and you&apos;re done : &lt;a href=&quot;http://blog.dahanne.net/2013/06/17/sending-a-mail-in-java-and-android-with-apache-commons-net/&quot; rel=&quot;nofollow&quot;&gt;http://blog.dahanne.net/2013/06/17/sending-a-mail-in-java-and-android-with-apache-commons-net/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Without user intervention, you can send as follows:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Send email from client apk. Here mail.jar, activation.jar is required to send java email. If these jars are added, it might increase the APK Size. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Alternatively, You can use a web-service at the server side code, which will use the same mail.jar and activation.jar to send email. You can call the web-service via asynctask and send email. Refer same link. &lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;(But, you will need to know the credentials of the mail account)&lt;/p&gt;\n    ","\n&lt;p&gt;In case that you are demanded to keep the jar library as small as possible, you can include the SMTP/POP3/IMAP function separately to avoid the &quot;too many methods in the dex&quot; problem. &lt;/p&gt;\n\n&lt;p&gt;You can choose the wanted jar libraries from &lt;a href=&quot;https://java.net/projects/javamail/pages/Home&quot; rel=&quot;nofollow&quot;&gt;the javanet web page&lt;/a&gt;, for example, mailapi.jar + imap.jar can enable you to access icloud, hotmail mail server in IMAP protocol. (with the help of additional.jar and activation.jar)&lt;/p&gt;\n    ","\n&lt;p&gt;I tried using the code that @Vinayak B submitted. However I&apos;m getting an error saying: No provider for smtp&lt;/p&gt;\n\n&lt;p&gt;I created a new question for this with more information &lt;a href=&quot;https://stackoverflow.com/questions/28693325/sending-email-in-google-glass&quot;&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I was able to fix it myself after all. I had to use an other &lt;a href=&quot;http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-eeplat-419426.html#javamail-1.4.7-oth-JPR&quot; rel=&quot;nofollow noreferrer&quot;&gt;mail.jar&lt;/a&gt;\nand I had to make sure my &quot;&lt;a href=&quot;https://www.google.com/settings/security/lesssecureapps&quot; rel=&quot;nofollow noreferrer&quot;&gt;access for less secure apps&lt;/a&gt;&quot; was turned on.&lt;/p&gt;\n\n&lt;p&gt;I hope this helps anyone who has the same problem. With this done, this piece of code works on the google glass too.&lt;/p&gt;\n    ","\n&lt;p&gt;All the code provided in the other answers is correct and is working fine, but a bit messy, so I decided to publish a library (still in development though) to use it in a easier way: &lt;strong&gt;&lt;a href=&quot;https://github.com/enrichman/androidmail&quot; rel=&quot;nofollow&quot;&gt;AndroidMail&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;You have just to create a MailSender, build a mail and send it (already handled in background with an AsyncTask).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;MailSender&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mailSender&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MailSender&lt;/span&gt;(email, password);\n\nMail.&lt;span class=&quot;hljs-type&quot;&gt;MailBuilder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mail&lt;/span&gt;.MailBuilder();\n&lt;span class=&quot;hljs-type&quot;&gt;Mail&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mail&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; builder\n    .setSender(senderMail)\n    .addRecipient(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Recipient&lt;/span&gt;(recipient))\n    .setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;)\n    .build();\n\nmailSender.sendMail(mail);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can receive a notification for the email sent and it has also the support for different Recipients types (TO, CC and BCC), attachments and html:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;MailSender&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mailSender&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MailSender&lt;/span&gt;(email, password);\n\nMail.&lt;span class=&quot;hljs-type&quot;&gt;MailBuilder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mail&lt;/span&gt;.MailBuilder();\n&lt;span class=&quot;hljs-type&quot;&gt;Mail&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mail&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; builder\n    .setSender(senderMail)\n    .addRecipient(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Recipient&lt;/span&gt;(recipient))\n    .addRecipient(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Recipient&lt;/span&gt;(Recipient.TYPE.CC, recipientCC))\n    .setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;)\n    .setHtml(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;h1 style=\\&quot;color:red;\\&quot;&amp;gt;Hello&amp;lt;/h1&amp;gt;&quot;&lt;/span&gt;)\n    .addAttachment(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Attachment&lt;/span&gt;(filePath, fileName))\n    .build();\n\nmailSender.sendMail(mail, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MailSender&lt;/span&gt;.OnMailSentListener() {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onSuccess&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// mail sent!&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Exception error)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// something bad happened :(&lt;/span&gt;\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can get it via Gradle or Maven:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;compile &lt;span class=&quot;hljs-string&quot;&gt;&apos;it.enricocandino:androidmail:1.0.0-SNAPSHOT&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Please let me know if you have any issue with it! :)&lt;/p&gt;\n    ","\n&lt;p&gt;Here are a lot solutions. However I think we must change the configuration of the GMail to allow accessing from less secure devices. Go to the link below and enable it. It works for me&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://myaccount.google.com/lesssecureapps?pli=1&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://myaccount.google.com/lesssecureapps?pli=1&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Sending email programmatically with Kotlin.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;simple email sending, not all the other features (like attachments).&lt;/li&gt;\n&lt;li&gt;TLS is always on&lt;/li&gt;\n&lt;li&gt;Only 1 gradle email dependency needed also.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;I also found this list of email POP services really helpful:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://support.office.com/en-gb/article/pop-and-imap-email-settings-for-outlook-8361e398-8af4-4e97-b147-6c6c4ac95353&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://support.office.com/en-gb/article/pop-and-imap-email-settings-for-outlook-8361e398-8af4-4e97-b147-6c6c4ac95353&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;How to use:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;auth&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; EmailService.UserPassAuthenticator(&lt;span class=&quot;hljs-string&quot;&gt;&quot;you@gmail.com&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;yourPassword&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; listOf(InternetAddress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;to@email.com&quot;&lt;/span&gt;))\n    &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; InternetAddress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;you@gmail.com&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; EmailService.Email(auth, to, from, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Test Subject&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello Body World&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;emailService&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; EmailService(&lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;465&lt;/span&gt;)\n    \n    GlobalScope.launch { &lt;span class=&quot;hljs-comment&quot;&gt;// or however you do background threads&lt;/span&gt;\n        emailService.send(email)\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The code:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.*\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.*\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.InternetAddress\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeBodyPart\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMessage\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMultipart\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EmailService&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; val server: String, &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; val port: Int) {\n\n    data &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Email&lt;/span&gt;(\n        val auth: Authenticator,\n        val toList: List&amp;lt;InternetAddress&amp;gt;,\n        val from: Address,\n        val subject: String,\n        val body: String\n    )\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UserPassAuthenticator&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; val username: String, &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; val password: String) : Authenticator() {\n        override fun &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;: PasswordAuthentication {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; PasswordAuthentication(username, password)\n        }\n    }\n\n    fun &lt;span class=&quot;hljs-title function_&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(email: Email)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Properties()\n        props[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;\n        props[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.user&quot;&lt;/span&gt;] = email.from\n        props[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.host&quot;&lt;/span&gt;] = server\n        props[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;] = port\n        props[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.starttls.enable&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;\n        props[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.ssl.trust&quot;&lt;/span&gt;] = server\n        props[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.mime.charset&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;\n        val msg: Message = MimeMessage(Session.getDefaultInstance(props, email.auth))\n        msg.setFrom(email.from)\n        msg.sentDate = Calendar.getInstance().time\n        msg.setRecipients(Message.RecipientType.TO, email.toList.toTypedArray())\n&lt;span class=&quot;hljs-comment&quot;&gt;//      msg.setRecipients(Message.RecipientType.CC, email.ccList.toTypedArray())&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//      msg.setRecipients(Message.RecipientType.BCC, email.bccList.toTypedArray())&lt;/span&gt;\n        msg.replyTo = arrayOf(email.from)\n\n        msg.addHeader(&lt;span class=&quot;hljs-string&quot;&gt;&quot;X-Mailer&quot;&lt;/span&gt;, CLIENT_NAME)\n        msg.addHeader(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Precedence&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;bulk&quot;&lt;/span&gt;)\n        msg.subject = email.subject\n\n        msg.setContent(MimeMultipart().apply {\n            addBodyPart(MimeBodyPart().apply {\n                setText(email.body, &lt;span class=&quot;hljs-string&quot;&gt;&quot;iso-8859-1&quot;&lt;/span&gt;)\n                &lt;span class=&quot;hljs-comment&quot;&gt;//setContent(email.htmlBody, &quot;text/html; charset=UTF-8&quot;)&lt;/span&gt;\n            })\n        })\n        Transport.send(msg)\n    }\n\n    companion object {\n        const &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;CLIENT_NAME&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Android StackOverflow programmatic email&quot;&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Gradle:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;dependencies {\n    implementation &lt;span class=&quot;hljs-string&quot;&gt;&apos;com.sun.mail:android-mail:1.6.4&apos;&lt;/span&gt;\n    implementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;AndroidManifest:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; Add jar files mail.jar,activation.jar,additionnal.jar\n\n String sub=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Thank you for your online registration&quot;&lt;/span&gt; ; \n &lt;span class=&quot;hljs-type&quot;&gt;Mail&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mail&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;emailid&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;); \n\n String[] toArr = {&lt;span class=&quot;hljs-string&quot;&gt;&quot;ekkatrainfo@gmail.com&quot;&lt;/span&gt;,sEmailId};\n m.setFrom(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ekkatrainfo@gmail.com&quot;&lt;/span&gt;); \n\n     m.setTo(toArr);\n     m.setSubject(sub);\n    m.setBody(msg);\n\n\n\n                     &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n\n\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(m.send()) { \n\n                            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { \n\n                            } \n                          } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(Exception e) { \n\n                            Log.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MailApp&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Could not send email&quot;&lt;/span&gt;, e); \n                          } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.example.ekktra;\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Date;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Properties;\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.CommandMap;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.DataHandler;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.DataSource;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.FileDataSource;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.MailcapCommandMap;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.BodyPart;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Multipart;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.PasswordAuthentication;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Session;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.Transport;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.InternetAddress;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeBodyPart;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMessage;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.MimeMultipart;\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Mail&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;javax&lt;/span&gt;.mail.Authenticator { \n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _user; \n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _pass; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String[] _to; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _from; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _port; \n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _sport; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _host; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _subject; \n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String _body; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; _auth; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; _debuggable; \n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Multipart _multipart; \n\n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Mail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n      _host = &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// default smtp server &lt;/span&gt;\n      _port = &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// default smtp port &lt;/span&gt;\n      _sport = &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// default socketfactory port &lt;/span&gt;\n\n      _user = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// username &lt;/span&gt;\n      _pass = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// password &lt;/span&gt;\n      _from = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// email sent from &lt;/span&gt;\n      _subject = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// email subject &lt;/span&gt;\n      _body = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// email body &lt;/span&gt;\n\n      _debuggable = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// debug mode on or off - default off &lt;/span&gt;\n      _auth = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// smtp authentication - default on &lt;/span&gt;\n\n      _multipart = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMultipart&lt;/span&gt;(); \n\n      &lt;span class=&quot;hljs-comment&quot;&gt;// There is something wrong with MailCap, javamail can not find a handler for the        multipart/mixed part, so this bit needs to be added. &lt;/span&gt;\n      &lt;span class=&quot;hljs-type&quot;&gt;MailcapCommandMap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mc&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (MailcapCommandMap) CommandMap.getDefaultCommandMap(); \n   mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html;; x-java-content-handler=com.sun.mail.handlers.text_html&quot;&lt;/span&gt;); \n   mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml&quot;&lt;/span&gt;); \n   mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/plain;; x-java-content-  handler=com.sun.mail.handlers.text_plain&quot;&lt;/span&gt;); \n   mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed&quot;&lt;/span&gt;); \n   mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;message/rfc822;; x-java-content- handler=com.sun.mail.handlers.message_rfc822&quot;&lt;/span&gt;); \n    CommandMap.setDefaultCommandMap(mc); \n   } \n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Mail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String user, String pass)&lt;/span&gt; { \n  &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;(); \n\n  _user = user; \n   _pass = pass; \n } \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception { \n   &lt;span class=&quot;hljs-type&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; _setProperties(); \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!_user.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; !_pass.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp; _to.length &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; !_from.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &amp;amp;&amp;amp;   !_subject.equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;/*&amp;amp;&amp;amp; !_body.equals(&quot;&quot;)*/&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-type&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Session.getInstance(props, &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;); \n\n    &lt;span class=&quot;hljs-type&quot;&gt;MimeMessage&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeMessage&lt;/span&gt;(session); \n\n     msg.setFrom(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(_from)); \n\n    InternetAddress[] addressTo = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;[_to.length]; \n     &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; _to.length; i++) { \n      addressTo[i] = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;InternetAddress&lt;/span&gt;(_to[i]); \n    } \n      msg.setRecipients(MimeMessage.RecipientType.TO, addressTo); \n\n    msg.setSubject(_subject); \n    msg.setSentDate(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;()); \n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// setup message body &lt;/span&gt;\n  &lt;span class=&quot;hljs-type&quot;&gt;BodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;(); \n    messageBodyPart.setText(_body); \n    _multipart.addBodyPart(messageBodyPart); \n\n     &lt;span class=&quot;hljs-comment&quot;&gt;// Put parts in message &lt;/span&gt;\n    msg.setContent(_multipart); \n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// send email &lt;/span&gt;\n    Transport.send(msg); \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; \n   } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { \n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; \n   } \n  } \n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addAttachment&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String filename)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception { \n    &lt;span class=&quot;hljs-type&quot;&gt;BodyPart&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;messageBodyPart&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MimeBodyPart&lt;/span&gt;(); \n    &lt;span class=&quot;hljs-type&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileDataSource&lt;/span&gt;(filename); \n      messageBodyPart.setDataHandler(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHandler&lt;/span&gt;(source)); \n    messageBodyPart.setFileName(filename); \n\n   _multipart.addBodyPart(messageBodyPart); \n } \n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; \n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PasswordAuthentication &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PasswordAuthentication&lt;/span&gt;(_user, _pass); \n  } \n\n   &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Properties &lt;span class=&quot;hljs-title function_&quot;&gt;_setProperties&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n   &lt;span class=&quot;hljs-type&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Properties&lt;/span&gt;(); \n\n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.host&quot;&lt;/span&gt;, _host); \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(_debuggable) { \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.debug&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;); \n  } \n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(_auth) { \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;); \n   } \n\n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, _port); \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.port&quot;&lt;/span&gt;, _sport); \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.class&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;javax.net.ssl.SSLSocketFactory&quot;&lt;/span&gt;); \n    props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.socketFactory.fallback&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt;); \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; props; \n   } \n\n   &lt;span class=&quot;hljs-comment&quot;&gt;// the getters and setters &lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; { \n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _body; \n } \n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setBody&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String _body)&lt;/span&gt; { \n  &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._body = _body; \n }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] toArr)&lt;/span&gt; {\n     &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._to=toArr;\n }\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setFrom&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String string)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._from=string;\n}\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setSubject&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String string)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;._subject=string;\n  }  \n\n\n   }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For those who want to use JavaMail with Kotlin in 2020:&lt;/p&gt;\n&lt;h2&gt;First: Add these dependencies to your build.gradle file (official JavaMail Maven Dependencies)&lt;/h2&gt;\n&lt;blockquote&gt;\n&lt;p&gt;implementation &apos;com.sun.mail:android-mail:1.6.5&apos;&lt;/p&gt;\n&lt;p&gt;implementation &apos;com.sun.mail:android-activation:1.6.5&apos;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;implementation &quot;org.bouncycastle:bcmail-jdk15on:1.65&quot;&lt;/p&gt;\n&lt;p&gt;implementation &quot;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7&quot;&lt;/p&gt;\n&lt;p&gt;implementation &quot;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7&quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;BouncyCastle is for security reasons.&lt;/p&gt;\n&lt;h2&gt;Second: Add these permissions to your AndroidManifest.xml&lt;/h2&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; /&amp;gt;\n&amp;lt;uses-permission android:name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;android.permission.ACCESS_NETWORK_STATE&quot;&lt;/span&gt; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Third: When using SMTP, create a Config file&lt;/h2&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;object Config {\n    const &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;EMAIL_FROM&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;You_Sender_Email@email.com&quot;&lt;/span&gt;\n    const &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;PASS_FROM&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your_Sender_Password&quot;&lt;/span&gt;\n\n    const &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;EMAIL_TO&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your_Destination_Email@email.com&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Fourth: Create your Mailer Object&lt;/h2&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;object Mailer {\n\ninit {\n    Security.addProvider(BouncyCastleProvider())\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; fun &lt;span class=&quot;hljs-title function_&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;: Properties = Properties().also {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Smtp server&lt;/span&gt;\n        it[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.host&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Change when necessary&lt;/span&gt;\n        it[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;\n        it[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;465&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Easy and fast way to enable ssl in JavaMail&lt;/span&gt;\n        it[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.ssl.enable&quot;&lt;/span&gt;] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n    }\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Dont ever use &quot;getDefaultInstance&quot; like other examples do!&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; fun &lt;span class=&quot;hljs-title function_&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(emailFrom: String, emailPass: String)&lt;/span&gt;: Session = Session.getInstance(props(), object : Authenticator() {\n    override fun &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;: PasswordAuthentication {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; PasswordAuthentication(emailFrom, emailPass)\n    }\n})\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; fun &lt;span class=&quot;hljs-title function_&quot;&gt;builtMessage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(firstName: String, surName: String)&lt;/span&gt;: String {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;\n            &amp;lt;b&amp;gt;Name:&amp;lt;/b&amp;gt; $firstName  &amp;lt;br/&amp;gt;\n            &amp;lt;b&amp;gt;Surname:&amp;lt;/b&amp;gt; $surName &amp;lt;br/&amp;gt;\n        &quot;&quot;&quot;&lt;/span&gt;.trimIndent()\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; fun &lt;span class=&quot;hljs-title function_&quot;&gt;builtSubject&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(issue: String, firstName: String, surName: String)&lt;/span&gt;:String {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;\n            $issue | $firstName, $surName\n        &quot;&quot;&quot;&lt;/span&gt;.trimIndent()\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; fun &lt;span class=&quot;hljs-title function_&quot;&gt;sendMessageTo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(emailFrom: String, session: Session, message: String, subject: String)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        MimeMessage(session).let { mime -&amp;gt;\n            mime.setFrom(InternetAddress(emailFrom))\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Adding receiver&lt;/span&gt;\n            mime.addRecipient(Message.RecipientType.TO, InternetAddress(Config.EMAIL_TO))\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Adding subject&lt;/span&gt;\n            mime.subject = subject\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Adding message&lt;/span&gt;\n            mime.setText(message)\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Set Content of Message to Html if needed&lt;/span&gt;\n            mime.setContent(message, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;)\n            &lt;span class=&quot;hljs-comment&quot;&gt;// send mail&lt;/span&gt;\n            Transport.send(mime)\n        }\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (e: MessagingException) {\n        Log.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// Or use timber, it really doesn&apos;t matter&lt;/span&gt;\n    }\n}\n\nfun &lt;span class=&quot;hljs-title function_&quot;&gt;sendMail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(firstName: String, surName: String)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Open a session&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; session(Config.EMAIL_FROM, Config.PASSWORD_FROM)\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Create a message&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; builtMessage(firstName, surName)\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Create subject&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; builtSubject(firstName, surName)\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Send Email&lt;/span&gt;\n        CoroutineScope(Dispatchers.IO).launch { sendMessageTo(Config.EMAIL_FROM, session, message, subject) }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Note&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;If you want a more secure way to send your email (and you want a more secure way!), use http as mentioned in the solutions before (I will maybe add it later in this answer)&lt;/li&gt;\n&lt;li&gt;You have to properly check, if the users phone has internet access, otherwise the app will crash.&lt;/li&gt;\n&lt;li&gt;When using gmail, enable &quot;less secure apps&quot; (this will not work, when you gmail has two factors enabled) &lt;a href=&quot;https://myaccount.google.com/lesssecureapps?pli=1&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://myaccount.google.com/lesssecureapps?pli=1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Some credits belong to: &lt;a href=&quot;https://medium.com/@chetan.garg36/android-send-mails-not-intent-642d2a71d2ee&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://medium.com/@chetan.garg36/android-send-mails-not-intent-642d2a71d2ee&lt;/a&gt; (he used RxJava for his solution)&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; io.formics.tourguide\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.annotation.SuppressLint\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Intent\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.net.Credentials\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.net.Uri\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; androidx.appcompat.app.AppCompatActivity\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.util.Log\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.Toast\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; kotlinx.android.synthetic.main.activity_feedback.*\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.jetbrains.annotations.Async\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.lang.Exception\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Properties;\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.DataHandler;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.activation.FileDataSource\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.*\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.mail.internet.*\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FeedbackActivity&lt;/span&gt; : AppCompatActivity()  {\n  \n    &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Properties()\n\n\n    override fun &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(savedInstanceState: Bundle?)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_feedback)\n\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.auth&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.starttls.enable&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.host&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;);\n        props.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mail.smtp.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;587&quot;&lt;/span&gt;);\n\n        btnSendEmail.setOnClickListener {\n            Thread {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    sendEmail()\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// Your implementation&lt;/span&gt;\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (ex: Exception) {\n                    ex.printStackTrace()\n                }\n            }.start()\n\n\n        }\n    }\n\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; fun &lt;span class=&quot;hljs-title function_&quot;&gt;sendEmail&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n\n\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n\n            &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Session.getInstance(props,\n                object : javax.mail.Authenticator() {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;//Authenticating the password&lt;/span&gt;\n                    override fun &lt;span class=&quot;hljs-title function_&quot;&gt;getPasswordAuthentication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;: javax.mail.PasswordAuthentication {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; PasswordAuthentication(&lt;span class=&quot;hljs-string&quot;&gt;&quot;abc@xyz.com&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt;)\n                    }\n                })\n\n            &lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; MimeMessage(session);\n            message.setFrom(InternetAddress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;abc@xyz.com&quot;&lt;/span&gt;));\n            message.setRecipients(\n                Message.RecipientType.TO,\n                InternetAddress.parse(editCC.text.toString())\n            )\n            message.subject = editSubject.text.toString()\n            message.setText(\n                &lt;span class=&quot;hljs-string&quot;&gt;&quot;Dear Mail Crawler,&quot;&lt;/span&gt;\n                        + &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n\\n No spam to my email, please!&quot;&lt;/span&gt;\n            );\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//val messageBodyPart = MimeBodyPart();&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//val multipart = MimeMultipart();&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//val file = &quot;path of file to be attached&quot;;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//            val fileName = &quot;attachmentName&quot;&lt;/span&gt;\n           &lt;span class=&quot;hljs-comment&quot;&gt;// val source = FileDataSource(file);&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//messageBodyPart.setDataHandler(DataHandler(source));&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//messageBodyPart.setFileName(fileName);&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//multipart.addBodyPart(messageBodyPart);&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//message.setContent(multipart);&lt;/span&gt;\n\n            Transport.send(message);\n            System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Done&quot;&lt;/span&gt;);\n\n\n\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (e: MessagingException) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt;  RuntimeException(e);\n        }\n\n           }\n}\n\n\n\n\n \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To add attachment, don&apos;t forget to add. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;MailcapCommandMap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mc&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (MailcapCommandMap) CommandMap\n            .getDefaultCommandMap();\n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html;; x-java-content-handler=com.sun.mail.handlers.text_html&quot;&lt;/span&gt;);\n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml&quot;&lt;/span&gt;);\n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain&quot;&lt;/span&gt;);\n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed&quot;&lt;/span&gt;);\n    mc.addMailcap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822&quot;&lt;/span&gt;);\n    CommandMap.setDefaultCommandMap(mc);\n&lt;/code&gt;&lt;/pre&gt;\n    "],"409":["\n&lt;p&gt;Your problem is that the partial renders html based on a single &lt;code&gt;AdminProductDetailModel&lt;/code&gt; object, yet you are trying to post back a collection. When you dynamically add a new object you continue to add duplicate controls that look like &lt;code&gt;&amp;lt;input name=&quot;productTotalQuantity&quot; ..&amp;gt;&lt;/code&gt; (this is also creating invalid html because of the duplicate &lt;code&gt;id&lt;/code&gt; attributes) where as they need to be &lt;code&gt;&amp;lt;input name=&quot;[0].productTotalQuantity&quot; ..&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input name=&quot;[1].productTotalQuantity&quot; ..&amp;gt;&lt;/code&gt; etc. in order to bind to a collection on post back.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;DefaultModelBinder&lt;/code&gt; required that the indexer for collection items start at zero and be consecutive, or that the form values include a &lt;code&gt;Index=someValue&lt;/code&gt; where the indexer is &lt;code&gt;someValue&lt;/code&gt; (for example &lt;code&gt;&amp;lt;input name=&quot;[ABC].productTotalQuantity&quot; ..&amp;gt;&amp;lt;input name=&quot;Index&quot; value=&quot;ABC&quot;&amp;gt;&lt;/code&gt;. This is explained in detail in Phil Haack&apos;s article &lt;a href=&quot;http://haacked.com/archive/2008/10/23/model-binding-to-a-list.aspx/&quot; rel=&quot;noreferrer&quot;&gt;Model Binding To A List&lt;/a&gt;. Using the Index approach is generally better because it also allows you to delete items from the list (otherwise it would be necessary to rename all existing controls so the indexer is consecutive).&lt;/p&gt;\n\n&lt;p&gt;Two possible approaches to your issue.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Use the &lt;a href=&quot;https://github.com/danludwig/BeginCollectionItem&quot; rel=&quot;noreferrer&quot;&gt;BeginItemCollection&lt;/a&gt; helper for your partial view. This helper will render a hidden input for the &lt;code&gt;Index&lt;/code&gt; value based on a GUID. You need this in both the partial view and the loop where you render existing items. Your partial would look something like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;@model IKLE.Model.ProductModel.AdminProductDetailModel\n@using(Html.BeginCollectionItem()) \n{\n  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editor-field&quot;&lt;/span&gt;&amp;gt;\n    @Html.LabelFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId)\n    @Html.DropDownListFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId, Model.sizeList, &lt;span class=&quot;hljs-string&quot;&gt;&quot;--Select Size--&quot;&lt;/span&gt;)\n    @Html.ValidationMessageFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId)\n  &amp;lt;/div&amp;gt;\n  ....\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Option 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Manually create the html elements representing a new object with a &apos;fake&apos; indexer, place them in a hidden container, then in the Add button event, clone the html, update the indexers and Index value and append the cloned elements to the DOM. To make sure the html is correct, create one default object in a &lt;code&gt;for&lt;/code&gt; loop and inspect the html it generates. An example of this approach is shown in &lt;a href=&quot;https://stackoverflow.com/questions/24026374/adding-another-pet-to-a-model-form/24027152#24027152&quot;&gt;this answer&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;newItem&quot;&lt;/span&gt; style=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display:none&quot;&lt;/span&gt;&amp;gt;\n\n  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editor-field&quot;&lt;/span&gt;&amp;gt;\n    &amp;lt;label &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;_#__productTotalQuantity&quot;&lt;/span&gt;&amp;gt;Quantity&amp;lt;/label&amp;gt;\n    &amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;_#__productTotalQuantity&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;[#].productTotalQuantity&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; /&amp;gt;\n    ....\n  &amp;lt;/div&amp;gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// more properties of your model&lt;/span&gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note the use of a &apos;fake&apos; indexer to prevent this one being bound on post back (&apos;#&apos; and &apos;%&apos; wont match up so they are ignored by the &lt;code&gt;DefaultModelBinder&lt;/code&gt;)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#addField&apos;&lt;/span&gt;).click(function() {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Date()).getTime(); \n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; clone = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#NewItem&apos;&lt;/span&gt;).clone();\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Update the indexer and Index value of the clone&lt;/span&gt;\n  clone.html($(clone).html().replace(/\\[&lt;span class=&quot;hljs-meta&quot;&gt;#\\]/g, &apos;[&apos; + index + &apos;]&apos;));&lt;/span&gt;\n  clone.html($(clone).html().replace(/&lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt;/g, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt; + index  + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;));\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#yourContainer&apos;&lt;/span&gt;).append(clone.html());\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The advantage of option 1 is that you are strongly typing the view to your model, but it means making a call to the server each time you add a new item. The advantage of option 2 is that its all done client side, but if you make any changes to you model (e.g. add a validation attribute to a property) then you also need to manually update the html, making maintenance a bit harder.&lt;/p&gt;\n\n&lt;p&gt;Finally, if you are using client side validation (jquery-validate-unobtrusive.js), then you need re-parse the validator each time you add new elements to the DOM as explained in &lt;a href=&quot;https://stackoverflow.com/questions/26542509/validate-dynamically-added-fields/26542591#26542591&quot;&gt;this answer&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).data(&lt;span class=&quot;hljs-string&quot;&gt;&apos;validator&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n$.validator.unobtrusive.parse($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And of course you need to change you POST method to accept a collection&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;[&lt;span class=&quot;hljs-meta&quot;&gt;HttpPost&lt;/span&gt;]\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;hljs-title&quot;&gt;AddDetail&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;IEnumerable&amp;lt;AdminProductDetailModel&amp;gt; model&lt;/span&gt;)&lt;/span&gt;\n{\n  ....\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"410":["\n&lt;p&gt;It&apos;s a common misconception that user input can be filtered. PHP even has a (now deprecated) &quot;feature&quot;, called &lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot; rel=&quot;noreferrer&quot;&gt;magic-quotes&lt;/a&gt;, that builds on this idea. It&apos;s nonsense. Forget about filtering (or cleaning, or whatever people call it).&lt;/p&gt;\n&lt;p&gt;What you should do, to avoid problems, is quite simple: whenever you embed a a piece of data within a foreign code, you must treat it according to the formatting rules of that code. But you must understand that such rules could be too complicated to try to follow them all manually. For example, in SQL, rules for strings, numbers and identifiers are all different. For your convenience, in most cases there is a dedicated tool for such an embedding. For example, when you need to use a PHP variable in the SQL query, you have to use a prepared statement, that will take care of all the proper formatting/treatment.&lt;/p&gt;\n&lt;p&gt;Another example is HTML: If you embed strings within HTML markup, you must escape it with &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt;. This means that every single &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; statement should use &lt;code&gt;htmlspecialchars&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;A third example could be shell commands: If you are going to embed strings (such as arguments) to external commands, and call them with &lt;a href=&quot;http://php.net/manual/function.exec.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, then you must use &lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Also, a very compelling example is JSON. The rules are so numerous and complicated that you would never be able to follow them all manually. That&apos;s why you should never ever create a JSON string manually, but always use a dedicated function, &lt;a href=&quot;https://www.php.net/json_encode&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;json_encode()&lt;/code&gt;&lt;/a&gt; that will correctly format every bit of data.&lt;/p&gt;\n&lt;p&gt;And so on and so forth ...&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;only&lt;/em&gt; case where you need to actively filter data, is if you&apos;re accepting preformatted input. For example, if you let your users post HTML markup, that you plan to display on the site. However, you should be wise to avoid this at all cost, since no matter how well you filter it, it will always be a potential security hole.&lt;/p&gt;\n    ","\n&lt;p&gt;Do not try to prevent SQL injection by sanitizing input data.&lt;/p&gt;\n\n&lt;p&gt;Instead, &lt;strong&gt;do not allow data to be used in creating your SQL code&lt;/strong&gt;.  Use Prepared Statements (i.e. using parameters in a template query) that uses bound variables.  It is the only way to be guaranteed against SQL injection.&lt;/p&gt;\n\n&lt;p&gt;Please see my website &lt;a href=&quot;http://bobby-tables.com/&quot; rel=&quot;noreferrer&quot;&gt;http://bobby-tables.com/&lt;/a&gt; for more about preventing SQL injection.&lt;/p&gt;\n    ","\n&lt;p&gt;No.  You can&apos;t generically filter data without any context of what it&apos;s for.  Sometimes you&apos;d want to take a SQL query as input and sometimes you&apos;d want to take HTML as input.&lt;/p&gt;\n\n&lt;p&gt;You need to filter input on a whitelist -- ensure that the data matches some specification of what you expect.  Then you need to escape it before you use it, depending on the context in which you are using it.&lt;/p&gt;\n\n&lt;p&gt;The process of escaping data for SQL - to prevent SQL injection - is very different from the process of escaping data for (X)HTML, to prevent XSS.&lt;/p&gt;\n    ","\n&lt;p&gt;PHP has the new nice &lt;a href=&quot;https://www.php.net/manual/en/function.filter-input.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;filter_input&lt;/code&gt;&lt;/a&gt; functions now, that for instance liberate you from finding &apos;the ultimate e-mail regex&apos; now that there is a built-in &lt;code&gt;FILTER_VALIDATE_EMAIL&lt;/code&gt; type&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;My own filter class (uses JavaScript to highlight faulty fields) can be initiated by either an ajax request or normal form post. (see the example below)\n&amp;lt;?\n/**\n*  Pork Formvalidator. validates fields by regexes and can sanitize them. Uses PHP filter_var built-in functions and extra regexes\n*  @package pork\n*/&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n *  Pork.FormValidator\n *  Validates arrays or properties by setting up simple arrays. \n *  Note that some of the regexes are for dutch input!\n *  Example:\n * \n *  $validations = array(&apos;name&apos; =&amp;gt; &apos;anything&apos;,&apos;email&apos; =&amp;gt; &apos;email&apos;,&apos;alias&apos; =&amp;gt; &apos;anything&apos;,&apos;pwd&apos;=&amp;gt;&apos;anything&apos;,&apos;gsm&apos; =&amp;gt; &apos;phone&apos;,&apos;birthdate&apos; =&amp;gt; &apos;date&apos;);\n *  $required = array(&apos;name&apos;, &apos;email&apos;, &apos;alias&apos;, &apos;pwd&apos;);\n *  $sanitize = array(&apos;alias&apos;);\n *\n *  $validator = new FormValidator($validations, $required, $sanitize);\n *                  \n *  if($validator-&amp;gt;validate($_POST))\n *  {\n *      $_POST = $validator-&amp;gt;sanitize($_POST);\n *      // now do your saving, $_POST has been sanitized.\n *      die($validator-&amp;gt;getScript().&quot;&amp;lt;script type=&apos;text/javascript&apos;&amp;gt;alert(&apos;saved changes&apos;);&amp;lt;/script&amp;gt;&quot;);\n *  }\n *  else\n *  {\n *      die($validator-&amp;gt;getScript());\n *  }   \n *  \n * To validate just one element:\n * $validated = new FormValidator()-&amp;gt;validate(&apos;blah&lt;span class=&quot;hljs-doctag&quot;&gt;@bla&lt;/span&gt;.&apos;, &apos;email&apos;);\n * \n * To sanitize just one element:\n * $sanitized = new FormValidator()-&amp;gt;sanitize(&apos;&amp;lt;b&amp;gt;blah&amp;lt;/b&amp;gt;&apos;, &apos;string&apos;);\n * \n * &lt;span class=&quot;hljs-doctag&quot;&gt;@package&lt;/span&gt; pork\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@author&lt;/span&gt; SchizoDuckie\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@copyright&lt;/span&gt; SchizoDuckie 2008\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@version&lt;/span&gt; 1.0\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@access&lt;/span&gt; public\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FormValidator&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$regexes&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;(\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;date&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{4}\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;amount&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[-]?[0-9]+\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;number&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[-]?[0-9,]+\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;alfanum&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[0-9a-zA-Z ,.-_\\\\s\\?\\!]+\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;not_empty&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;[a-z0-9A-Z]+&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;words&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[A-Za-z]+[A-Za-z \\\\s]*\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;phone&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[0-9]{10,11}\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;zipcode&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[1-9][0-9]{3}[a-zA-Z]{2}\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;plate&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^([0-9a-zA-Z]{2}[-]){2}[0-9a-zA-Z]{2}\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;price&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[0-9.,]*(([.,][-])|([.,][0-9]{2}))?\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;2digitopt&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^\\d+(\\,\\d{2})?\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;2digitforce&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^\\d+\\,\\d\\d\\$&quot;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-string&quot;&gt;&apos;anything&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;^[\\d\\D]{1,}\\$&quot;&lt;/span&gt;\n    );\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$validations&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$sanatations&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$mandatories&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errors&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$corrects&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$fields&lt;/span&gt;;\n    \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;__construct&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$validations&lt;/span&gt;=&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;), &lt;span class=&quot;hljs-variable&quot;&gt;$mandatories&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;), &lt;span class=&quot;hljs-variable&quot;&gt;$sanatations&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;)\n    &lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;validations = &lt;span class=&quot;hljs-variable&quot;&gt;$validations&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;sanitations = &lt;span class=&quot;hljs-variable&quot;&gt;$sanitations&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;mandatories = &lt;span class=&quot;hljs-variable&quot;&gt;$mandatories&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;errors = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;corrects = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Validates an array of items (if needed) and returns true or false\n     *\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;validate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt;&lt;/span&gt;)\n    &lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;fields = &lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$havefailures&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;=&amp;gt;&lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;((&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;) == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; || &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_search&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$this&lt;/span&gt;-&amp;gt;validations) === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) &amp;amp;&amp;amp; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_search&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$this&lt;/span&gt;-&amp;gt;mandatories) === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) \n            {\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;corrects[] = &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;validateItem&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$this&lt;/span&gt;-&amp;gt;validations[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;]);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-variable&quot;&gt;$havefailures&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;addError&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$this&lt;/span&gt;-&amp;gt;validations[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;]);\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            {\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;corrects[] = &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;;\n            }\n        }\n    \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;(!&lt;span class=&quot;hljs-variable&quot;&gt;$havefailures&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     *\n     *  Adds unvalidated class to thos elements that are not validated. Removes them from classes that are.\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getScript&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-keyword&quot;&gt;empty&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;errors))\n        {\n            &lt;span class=&quot;hljs-variable&quot;&gt;$errors&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;errors &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;=&amp;gt;&lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;) { &lt;span class=&quot;hljs-variable&quot;&gt;$errors&lt;/span&gt;[] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;INPUT[name=&lt;span class=&quot;hljs-subst&quot;&gt;{$key}&lt;/span&gt;]&apos;&quot;&lt;/span&gt;; }\n\n            &lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;$$(&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;implode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errors&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&apos;).addClass(&quot;unvalidated&quot;);&apos;&lt;/span&gt;; \n            &lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt; .= &lt;span class=&quot;hljs-string&quot;&gt;&quot;new FormValidator().showMessage();&quot;&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-keyword&quot;&gt;empty&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;corrects))\n        {\n            &lt;span class=&quot;hljs-variable&quot;&gt;$corrects&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;corrects &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;) { &lt;span class=&quot;hljs-variable&quot;&gt;$corrects&lt;/span&gt;[] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;INPUT[name=&lt;span class=&quot;hljs-subst&quot;&gt;{$key}&lt;/span&gt;]&apos;&quot;&lt;/span&gt;; }\n            &lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt; .= &lt;span class=&quot;hljs-string&quot;&gt;&apos;$$(&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;implode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$corrects&lt;/span&gt;).&lt;span class=&quot;hljs-string&quot;&gt;&apos;).removeClass(&quot;unvalidated&quot;);&apos;&lt;/span&gt;;   \n        }\n        &lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;script type=&apos;text/javascript&apos;&amp;gt;&lt;span class=&quot;hljs-subst&quot;&gt;{$output}&lt;/span&gt; &amp;lt;/script&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt;);\n    }\n\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     *\n     * Sanitizes an array of items according to the $this-&amp;gt;sanitations\n     * sanitations will be standard of type string, but can also be specified.\n     * For ease of use, this syntax is accepted:\n     * $sanitations = array(&apos;fieldname&apos;, &apos;otherfieldname&apos;=&amp;gt;&apos;float&apos;);\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;sanitize&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt;&lt;/span&gt;)\n    &lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;=&amp;gt;&lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_search&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$this&lt;/span&gt;-&amp;gt;sanitations) === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_key_exists&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$this&lt;/span&gt;-&amp;gt;sanitations)) &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n            &lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;] = &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sanitizeItem&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$this&lt;/span&gt;-&amp;gt;validations[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;]);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$items&lt;/span&gt;);\n    }\n\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     *\n     * Adds an error to the errors array.\n     */&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;addError&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$field&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;&lt;/span&gt;)\n    &lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;errors[&lt;span class=&quot;hljs-variable&quot;&gt;$field&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     *\n     * Sanitize a single var according to $type.\n     * Allows for static calling to allow simple sanitization\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;sanitizeItem&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;&lt;/span&gt;)\n    &lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable&quot;&gt;$flags&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;url&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_SANITIZE_URL;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;int&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_SANITIZE_NUMBER_INT;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;float&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_SANITIZE_NUMBER_FLOAT;\n                &lt;span class=&quot;hljs-variable&quot;&gt;$flags&lt;/span&gt; = FILTER_FLAG_ALLOW_FRACTION | FILTER_FLAG_ALLOW_THOUSAND;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;email&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;254&lt;/span&gt;);\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_SANITIZE_EMAIL;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_SANITIZE_STRING;\n                &lt;span class=&quot;hljs-variable&quot;&gt;$flags&lt;/span&gt; = FILTER_FLAG_NO_ENCODE_QUOTES;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n             \n        }\n        &lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;filter_var&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$flags&lt;/span&gt;);        \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$output&lt;/span&gt;);\n    }\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;/** \n     *\n     * Validates a single var according to $type.\n     * Allows for static calling to allow simple validation.\n     *\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;validateItem&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;&lt;/span&gt;)\n    &lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_key_exists&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-variable&quot;&gt;$regexes&lt;/span&gt;))\n        {\n            &lt;span class=&quot;hljs-variable&quot;&gt;$returnval&lt;/span&gt; =  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;filter_var&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;, FILTER_VALIDATE_REGEXP, &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;options&quot;&lt;/span&gt;=&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;regexp&quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;!&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-variable&quot;&gt;$regexes&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;].&lt;span class=&quot;hljs-string&quot;&gt;&apos;!i&apos;&lt;/span&gt;))) !== &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$returnval&lt;/span&gt;);\n        }\n        &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$type&lt;/span&gt;)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;email&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;254&lt;/span&gt;);\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_VALIDATE_EMAIL;    \n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;int&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_VALIDATE_INT;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;boolean&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_VALIDATE_BOOLEAN;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;ip&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_VALIDATE_IP;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;url&apos;&lt;/span&gt;:\n                &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; = FILTER_VALIDATE_URL;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) ? &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; : &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;filter_var&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$var&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$filter&lt;/span&gt;) !== &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt; ? &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }       \n    \n\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Of course, keep in mind that you need to do your sql query escaping too depending on what type of db your are using (mysql_real_escape_string() is useless for an sql server for instance). You probably want to handle this automatically at your appropriate application layer like an ORM. Also, as mentioned above: for outputting to html use the other php dedicated functions like htmlspecialchars ;)&lt;/p&gt;\n&lt;p&gt;For really allowing HTML input with like stripped classes and/or tags depend on one of the dedicated xss validation packages. DO NOT WRITE YOUR OWN REGEXES TO PARSE HTML!&lt;/p&gt;\n    ","\n&lt;p&gt;No, there is not.&lt;/p&gt;\n&lt;p&gt;First of all, SQL injection is an input filtering problem, and XSS is an output escaping one - so you wouldn&apos;t even execute these two operations at the same time in the code lifecycle.&lt;/p&gt;\n&lt;p&gt;Basic rules of thumb&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;For SQL query, bind parameters&lt;/li&gt;\n&lt;li&gt;Use &lt;a href=&quot;https://www.php.net/manual/en/function.strip-tags.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;strip_tags()&lt;/code&gt;&lt;/a&gt; to filter out unwanted HTML&lt;/li&gt;\n&lt;li&gt;Escape all other output with &lt;a href=&quot;https://www.php.net/manual/en/function.htmlspecialchars.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;htmlspecialchars()&lt;/code&gt;&lt;/a&gt; and be mindful of the 2nd and 3rd parameters here.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;To address the XSS issue, take a look at &lt;a href=&quot;http://www.htmlpurifier.org&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML Purifier&lt;/a&gt;. It is fairly configurable and has a decent track record.&lt;/p&gt;\n&lt;p&gt;As for the SQL injection attacks, the solution is to use prepared statements. The &lt;a href=&quot;http://www.php.net/pdo&quot; rel=&quot;nofollow noreferrer&quot;&gt;PDO library&lt;/a&gt; and mysqli extension support these.&lt;/p&gt;\n    ","\n&lt;p&gt;PHP 5.2 introduced the &lt;a href=&quot;http://php.net/manual/en/function.filter-var.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;filter_var&lt;/code&gt;&lt;/a&gt; function.&lt;/p&gt;\n&lt;p&gt;It supports a great deal of &lt;code&gt;SANITIZE&lt;/code&gt;, &lt;code&gt;VALIDATE&lt;/code&gt; filters.&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;h2&gt; Methods for sanitizing user input with PHP:&lt;/h2&gt;\n&lt;/blockquote&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;h3&gt;Use Modern Versions of MySQL and PHP.&lt;/h3&gt;&lt;/li&gt;\n&lt;li&gt;&lt;h3&gt;Set charset explicitly:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;pre&gt;$mysqli-&amp;gt;set_charset(&quot;utf8&quot;);&lt;/pre&gt;&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot; rel=&quot;noreferrer&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;\n&lt;li&gt;&lt;pre&gt;$pdo = new PDO(&apos;mysql:host=localhost;dbname=testdb;charset=UTF8&apos;, $user, $password);&lt;/pre&gt;&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot; rel=&quot;noreferrer&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt; &lt;/li&gt;\n&lt;li&gt;&lt;pre&gt;$pdo-&amp;gt;exec(&quot;set names utf8&quot;);&lt;/pre&gt;&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot; rel=&quot;noreferrer&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;  &lt;/li&gt;\n&lt;li&gt;&lt;pre&gt;$pdo = new PDO(\n&quot;mysql:host=$host;dbname=$db&quot;, $user, $pass, \narray(\nPDO::ATTR_ERRMODE =&amp;gt; PDO::ERRMODE_EXCEPTION,\nPDO::MYSQL_ATTR_INIT_COMMAND =&amp;gt; &quot;SET NAMES utf8&quot;\n)\n);&lt;/pre&gt;&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot; rel=&quot;noreferrer&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;\n&lt;li&gt;&lt;pre&gt;&lt;s&gt;mysql_set_charset(&apos;utf8&apos;)&lt;/s&gt;&lt;/pre&gt;  &lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;h3&gt;Use secure charsets:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Select utf8, latin1, ascii.., dont use vulnerable charsets big5, cp932, gb2312, gbk, sjis.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;h3&gt;Use spatialized function:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.prepare.php&quot; rel=&quot;noreferrer&quot;&gt;MySQLi prepared statements:&lt;/a&gt;&lt;br&gt;\n\n&lt;pre&gt;$stmt = $mysqli-&amp;gt;prepare(&apos;SELECT * FROM test WHERE name = ? LIMIT 1&apos;); &lt;br&gt;$param = &quot;&apos; OR 1=1 /*&quot;;&lt;br&gt;$stmt-&amp;gt;bind_param(&apos;s&apos;, $param);&lt;br&gt;$stmt-&amp;gt;execute();&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot; rel=&quot;noreferrer&quot;&gt;PDO::quote()&lt;/a&gt; - places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver:&lt;br&gt;&lt;/p&gt;&lt;pre&gt;$pdo = new PDO(&apos;mysql:host=localhost;dbname=testdb;charset=UTF8&apos;, $user, $password);&lt;sup&gt;explicit set the character set&lt;/sup&gt;&lt;br&gt;$pdo-&amp;gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false);&lt;sup&gt;disable emulating prepared statements to prevent  fallback to emulating statements that MySQL can&apos;t prepare natively (to prevent injection)&lt;/sup&gt;&lt;br&gt;$var  = $pdo-&amp;gt;quote(&quot;&apos; OR 1=1 /*&quot;);&lt;sup&gt;not only escapes the literal, but also quotes it (in single-quote &apos; characters)&lt;/sup&gt;\n$stmt = $pdo-&amp;gt;query(&quot;SELECT * FROM test WHERE name = $var LIMIT 1&quot;);\n&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot; rel=&quot;noreferrer&quot;&gt;PDO Prepared Statements&lt;/a&gt;: vs MySQLi prepared statements supports more database drivers and named parameters: &lt;br&gt;&lt;/p&gt;&lt;pre&gt;$pdo = new PDO(&apos;mysql:host=localhost;dbname=testdb;charset=UTF8&apos;, $user, $password);&lt;sup&gt;explicit set the character set&lt;/sup&gt;&lt;br&gt;$pdo-&amp;gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false);&lt;sup&gt;disable emulating prepared statements to prevent  fallback to emulating statements that MySQL can&apos;t prepare natively (to prevent injection)&lt;/sup&gt;\n$stmt = $pdo-&amp;gt;prepare(&apos;SELECT * FROM test WHERE name = ? LIMIT 1&apos;);\n$stmt-&amp;gt;execute([&quot;&apos; OR 1=1 /*&quot;]);&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;s&gt;mysql_real_escape_string&lt;/s&gt;&lt;/a&gt; &lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot; rel=&quot;noreferrer&quot;&gt;mysqli_real_escape_string&lt;/a&gt; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection. But recommended to use Prepared Statements because they are not simply escaped strings, a statement comes up with a complete query execution plan, including which tables and indexes it would use, it is a optimized way.&lt;/li&gt;\n&lt;li&gt;Use single quotes (&apos; &apos;) around your variables inside your query.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;h3&gt;Check the variable contains what you are expecting for:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If you are expecting an integer, use:\n\n&lt;pre&gt;ctype_digit  Check for numeric character(s);&lt;br&gt;$value = (int) $value;&lt;br&gt;$value = intval($value);&lt;br&gt;$var = filter_var(&apos;0755&apos;, FILTER_VALIDATE_INT, $options);&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;For Strings use:\n&lt;pre&gt;is_string()  Find whether the type of a variable is string&lt;/pre&gt;&lt;br&gt;Use &lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot; rel=&quot;noreferrer&quot;&gt;Filter Function&lt;/a&gt; filter_var()  filters a variable with a specified filter:&lt;br&gt;&lt;pre&gt;$email = filter_var($email, FILTER_SANITIZE_EMAIL);&lt;br&gt;$newstr = filter_var($str, FILTER_SANITIZE_STRING);&lt;/pre&gt;&lt;a href=&quot;https://secure.php.net/manual/en/filter.filters.sanitize.php&quot; rel=&quot;noreferrer&quot;&gt;more predefined filters&lt;/a&gt;&lt;br&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot; rel=&quot;noreferrer&quot;&gt;filter_input()&lt;/a&gt;  Gets a specific external variable by name and optionally filters it:&lt;pre&gt;$search_html = filter_input(INPUT_GET, &apos;search&apos;, FILTER_SANITIZE_SPECIAL_CHARS);&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot; rel=&quot;noreferrer&quot;&gt;preg_match()&lt;/a&gt;  Perform a regular expression match;&lt;br&gt;&lt;/li&gt;\n&lt;li&gt;Write Your own validation function.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;One trick that can help in the specific circumstance where you have a page like &lt;code&gt;/mypage?id=53&lt;/code&gt; and you use the id in a WHERE clause is to ensure that id definitely is an integer, like so:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;])) {\n  &lt;span class=&quot;hljs-variable&quot;&gt;$id&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;];\n  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;settype&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$id&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;integer&apos;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_query&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT * FROM mytable WHERE id = &apos;&lt;span class=&quot;hljs-subst&quot;&gt;$id&lt;/span&gt;&apos;&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-comment&quot;&gt;# now use the result&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But of course that only cuts out one specific attack, so read all the other answers. (And yes I know that the code above isn&apos;t great, but it shows the specific defence.)&lt;/p&gt;\n    ","\n&lt;p&gt;There&apos;s no catchall function, because there are multiple concerns to be addressed.&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;SQL Injection&lt;/strong&gt; - Today, generally, every PHP project should be using &lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;prepared statements via PHP Data Objects (PDO)&lt;/a&gt; as a best practice, &lt;em&gt;preventing an error from a stray quote as well as a full-featured solution against injection&lt;/em&gt;. It&apos;s also the most flexible &amp;amp; secure way to access your database.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Check out &lt;a href=&quot;https://phpdelusions.net/pdo&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;em&gt;(The only proper) PDO tutorial&lt;/em&gt;&lt;/a&gt; for pretty much everything you need to know about PDO. (Sincere thanks to top SO contributor, @YourCommonSense, for this great resource on the subject.)&lt;/p&gt;\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;&lt;strong&gt;XSS - Sanitize data on the way in...&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://htmlpurifier.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML Purifier&lt;/a&gt; has been around a long time and is still actively updated. You can use it to sanitize malicious input, while still allowing a generous &amp;amp; configurable whitelist of tags. Works great with many WYSIWYG editors, but it might be heavy for some use cases.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;In other instances, where we don&apos;t want to accept HTML/Javascript at all, I&apos;ve found this simple function useful (and has passed multiple audits against XSS):&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* Prevent XSS input */&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;sanitizeXSS&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;   = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;filter_input_array&lt;/span&gt;(INPUT_GET, FILTER_SANITIZE_STRING);\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;  = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;filter_input_array&lt;/span&gt;(INPUT_POST, FILTER_SANITIZE_STRING);\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_REQUEST&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;)&lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt; + (&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;)&lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt; + (&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;)&lt;span class=&quot;hljs-variable&quot;&gt;$_REQUEST&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ol start=&quot;3&quot;&gt;\n&lt;li&gt;&lt;strong&gt;XSS - Sanitize data on the way out...&lt;/strong&gt; unless you guarantee the data was properly sanitized before you add it to your database, you&apos;ll need to sanitize it before displaying it to your user, we can leverage these useful PHP functions:&lt;/li&gt;\n&lt;/ol&gt;\n&lt;ul&gt;\n&lt;li&gt;When you call &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; to display user-supplied values, use &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt; unless the data was properly sanitized safe and is allowed to display HTML.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;json_encode&lt;/code&gt;&lt;/a&gt; is a safe way to provide user-supplied values from PHP to Javascript&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ol start=&quot;5&quot;&gt;\n&lt;li&gt;&lt;strong&gt;Do you call external shell commands using &lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.system.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; functions, or to the &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;backtick&lt;/code&gt;&lt;/a&gt; operator?&lt;/strong&gt; If so, in addition to SQL Injection &amp;amp; XSS you might have an additional concern to address, &lt;em&gt;users running malicious commands on your server&lt;/em&gt;. You need to use &lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; if you&apos;d like to escape the entire command OR &lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt; to escape individual arguments.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;What you are describing here is two separate issues: &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Sanitizing / filtering of user input data.&lt;/li&gt;\n&lt;li&gt;Escaping output.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;1) User input should always be assumed to be bad.&lt;/p&gt;\n\n&lt;p&gt;Using prepared statements, or/and filtering with mysql_real_escape_string is definitely a must.\nPHP also has filter_input built in which is a good place to start.&lt;/p&gt;\n\n&lt;p&gt;2) This is a large topic, and it depends on the context of the data being output. For HTML there are solutions such as htmlpurifier out there.\nas a rule of thumb, always escape anything you output.&lt;/p&gt;\n\n&lt;p&gt;Both issues are far too big to go into in a single post, but there are lots of posts which go into more detail:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://shiflett.org/articles&quot; rel=&quot;noreferrer&quot;&gt;Methods PHP output&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://www.lazycat.org/php-output-escaping.html&quot; rel=&quot;noreferrer&quot;&gt;Safer PHP output&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re using PostgreSQL, the input from PHP can be escaped with &lt;code&gt;pg_escape_literal()&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$username&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pg_escape_literal&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;username&apos;&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;From the &lt;a href=&quot;https://php.net/manual/es/function.pg-escape-literal.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;documentation&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;pg_escape_literal()&lt;/code&gt; escapes a literal for querying the PostgreSQL database. It returns an escaped literal in the PostgreSQL format.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;h1&gt;You never sanitize input.&lt;/h1&gt;\n&lt;h1&gt;You always sanitize output.&lt;/h1&gt;\n&lt;p&gt;The transforms you apply to data to make it safe for inclusion in an SQL statement are completely different from those you apply for inclusion in HTML are completely different from those you apply for inclusion in Javascript are completely different from those you apply for inclusion in LDIF are completely different from those you apply to inclusion in CSS are completely different from those you apply to inclusion in an Email....&lt;/p&gt;\n&lt;p&gt;By all means &lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;validate input&lt;/a&gt; - decide whether you should accept it for further processing or tell the user it is unacceptable. But don&apos;t apply any change to representation of the data until it is about to leave PHP land.&lt;/p&gt;\n&lt;p&gt;A long time ago someone tried to invent a one-size fits all mechanism for escaping data and we ended up with &quot;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;magic_quotes&lt;/a&gt;&quot; which didn&apos;t properly escape data for all output targets and resulted in different installation requiring different code to work.&lt;/p&gt;\n    ","\n&lt;p&gt;Easiest way to avoid mistakes in sanitizing input and escaping data is using PHP framework like &lt;a href=&quot;http://symfony.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Symfony&lt;/a&gt;, &lt;a href=&quot;http://nette.org/en/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Nette&lt;/a&gt; etc. or part of that framework (templating engine, database layer, ORM).&lt;/p&gt;\n\n&lt;p&gt;Templating engine like &lt;a href=&quot;http://twig.sensiolabs.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Twig&lt;/a&gt; or Latte has output escaping on by default - you don&apos;t have to solve manually if you have properly escaped your output depending on context (HTML or Javascript part of web page).&lt;/p&gt;\n\n&lt;p&gt;Framework is automatically sanitizing input and you should&apos;t use $_POST, $_GET or $_SESSION variables directly, but through mechanism like routing, session handling etc.&lt;/p&gt;\n\n&lt;p&gt;And for database (model) layer there are ORM frameworks like Doctrine or wrappers around PDO like Nette Database.&lt;/p&gt;\n\n&lt;p&gt;You can read more about it here - &lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;What is a software framework?&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Just wanted to add that on the subject of output escaping, if you use php DOMDocument to make your html output it will automatically escape in the right context. An attribute (value=&quot;&quot;) and the inner text of a &amp;lt;span&amp;gt; are not equal.\nTo be safe against XSS read this:\n&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot; rel=&quot;nofollow&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There is the filter extension (&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;howto-link&lt;/a&gt;, &lt;a href=&quot;http://php.net/filter&quot; rel=&quot;nofollow noreferrer&quot;&gt;manual&lt;/a&gt;), which works pretty well with all GPC variables. It&apos;s not a magic-do-it-all thing though, you will still have to use it.&lt;/p&gt;\n    ","\n&lt;p&gt;Use This trim white space and remove non-printable character&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt; = trim(preg_replace(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/[[:^print:]]/&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    "]},"page":"41","randomQuestions":[{"title":"Why can templates only be implemented in the header file?","slug":"why-can-templates-only-be-implemented-in-the-header-file-1657384341933"},{"title":"How to find the 'sizeof' (a pointer pointing to an array)?","slug":"how-to-find-the-'sizeof'-(a-pointer-pointing-to-an-array)-1657387354284"},{"title":"R cannot be resolved - Android error","slug":"r-cannot-be-resolved-android-error-1657388526258"},{"title":"How can I tell if a DOM element is visible in the current viewport?","slug":"how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport-1657388316510"},{"title":"ggplot with 2 y axes on each side and different scales","slug":"ggplot-with-2-y-axes-on-each-side-and-different-scales-1657388519163"},{"title":"Copy array by value","slug":"copy-array-by-value-1657387649531"},{"title":"Get the row(s) which have the max value in groups using groupby","slug":"get-the-row(s)-which-have-the-max-value-in-groups-using-groupby-1657388014787"},{"title":"Cleansing User Passwords","slug":"cleansing-user-passwords-1657387365583"},{"title":"What is a StackOverflowError?","slug":"what-is-a-stackoverflowerror-1657388319634"},{"title":"Dynamic tabs with user-click chosen components","slug":"dynamic-tabs-with-user-click-chosen-components-1657388465232"},{"title":"Is JavaScript a pass-by-reference or pass-by-value language?","slug":"is-javascript-a-pass-by-reference-or-pass-by-value-language-1657384675679"},{"title":"Cross-thread operation not valid: Control accessed from a thread other than the thread it was created on","slug":"cross-thread-operation-not-valid:-control-accessed-from-a-thread-other-than-the-thread-it-was-created-on-1657387659019"},{"title":"How to center an element horizontally and vertically","slug":"how-to-center-an-element-horizontally-and-vertically-1657388132330"},{"title":"How can I return pivot table output in MySQL?","slug":"how-can-i-return-pivot-table-output-in-mysql-1657384715043"},{"title":"Why should there be spaces around '[' and ']' in Bash?","slug":"why-should-there-be-spaces-around-''-and-''-in-bash-1657387984122"},{"title":"Is there any way to kill a Thread?","slug":"is-there-any-way-to-kill-a-thread-1657387859831"},{"title":"Reshaping multiple sets of measurement columns (wide format) into single columns (long format)","slug":"reshaping-multiple-sets-of-measurement-columns-(wide-format)-into-single-columns-(long-format)-1657388016983"},{"title":"Why does this UnboundLocalError occur (closure)? [duplicate]","slug":"why-does-this-unboundlocalerror-occur-(closure)-duplicate-1657388531538"},{"title":"Retrieve only the queried element in an object array in MongoDB collection","slug":"retrieve-only-the-queried-element-in-an-object-array-in-mongodb-collection-1657384890457"},{"title":"How can I get useful error messages in PHP?","slug":"how-can-i-get-useful-error-messages-in-php-1657384609065"}]},"__N_SSG":true}