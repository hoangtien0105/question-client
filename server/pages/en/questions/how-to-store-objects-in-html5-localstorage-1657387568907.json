{"pageProps":{"data":{"answer":["\n&lt;p&gt;Looking at the &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/iPhone/Conceptual/SafariJSDatabaseGuide/Name-ValueStorage/Name-ValueStorage.html&quot; rel=&quot;noreferrer&quot;&gt;Apple&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot; rel=&quot;noreferrer&quot;&gt;Mozilla&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem&quot; rel=&quot;noreferrer&quot;&gt;Mozilla again&lt;/a&gt; documentation, the functionality seems to be limited to handle only string key/value pairs.&lt;/p&gt;\n\n&lt;p&gt;A workaround can be to &lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;stringify&lt;/em&gt;&lt;/a&gt; your object before storing it, and later parse it when you retrieve it:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; testObject = { &lt;span class=&quot;hljs-string&quot;&gt;&apos;one&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;two&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;three&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; };\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Put the object into storage&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;testObject&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(testObject));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Retrieve the object from storage&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; retrievedObject = &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;testObject&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;retrievedObject: &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(retrievedObject));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A minor improvement on a &lt;a href=&quot;https://stackoverflow.com/a/2010994/59087&quot;&gt;variant&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(key, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(value));\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(key);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; value &amp;amp;&amp;amp; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(value);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because of &lt;a href=&quot;http://en.wikipedia.org/wiki/Short-circuit_evaluation&quot; rel=&quot;noreferrer&quot;&gt;short-circuit evaluation&lt;/a&gt;, &lt;code&gt;getObject()&lt;/code&gt; will &lt;em&gt;immediately&lt;/em&gt; return &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not in Storage. It also will not throw a &lt;code&gt;SyntaxError&lt;/code&gt; exception if &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt; (the empty string; &lt;code&gt;JSON.parse()&lt;/code&gt; cannot handle that).&lt;/p&gt;\n    ","\n&lt;p&gt;You might find it useful to extend the Storage object with these handy methods:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(key, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(value));\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(key));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This way you get the functionality that you really wanted even though underneath the API only supports strings.&lt;/p&gt;\n    ","\n&lt;p&gt;Creating a facade for the Storage object is an awesome solution. That way, you can implement your own &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods. For my API, I have created a facade for localStorage and then check if it is an object or not while setting and getting.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;set&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!key || !value) {&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;}\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; value === &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n      value = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(value);\n    }\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(key, value);\n  },\n  &lt;span class=&quot;hljs-attr&quot;&gt;get&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(key);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!value) {&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;}\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// assume it is an object that has been stringified&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] === &lt;span class=&quot;hljs-string&quot;&gt;&quot;{&quot;&lt;/span&gt;) {\n      value = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(value);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; value;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Stringify doesn&apos;t solve all problems&lt;/h2&gt;\n&lt;p&gt;It seems that the answers here don&apos;t cover all types that are possible in JavaScript, so here are some short examples on how to deal with them correctly:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Objects and Arrays:&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;};\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;object&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj);  &lt;span class=&quot;hljs-comment&quot;&gt;// Will ignore private members&lt;/span&gt;\n    obj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;object&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Boolean:&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bool = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;bool&lt;/span&gt; = bool;\n    bool = (&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;bool&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Numbers:&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num = &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;num&lt;/span&gt; = num;\n    num = +&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;num&lt;/span&gt;;    &lt;span class=&quot;hljs-comment&quot;&gt;// Short for &quot;num = parseFloat(localStorage.num);&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Dates:&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;now&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;date&lt;/span&gt; = date;\n    date = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;date&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Regular expressions:&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;hljs-regexp&quot;&gt;/^No\\.[\\d]*$/i&lt;/span&gt;;     &lt;span class=&quot;hljs-comment&quot;&gt;// Usage example: &quot;No.42&quot;.match(regex);&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;regex&lt;/span&gt; = regex;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; components = &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;regex&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;^/(.*)/([a-z]*)$&quot;&lt;/span&gt;);\n    regex = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(components[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], components[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Functions (not recommended):&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {}\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;func&lt;/span&gt; = func;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;func&lt;/span&gt;);      &lt;span class=&quot;hljs-comment&quot;&gt;// Recreates the function with the name &quot;func&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;I do not recommend&lt;/strong&gt; to store functions, because &lt;code&gt;eval()&lt;/code&gt; is evil and can lead to issues regarding security, optimisation and debugging.&lt;/p&gt;\n&lt;p&gt;In general, &lt;code&gt;eval()&lt;/code&gt; should never be used in JavaScript code.&lt;/p&gt;\n&lt;h2&gt;Private members&lt;/h2&gt;\n&lt;p&gt;The problem with using &lt;code&gt;JSON.stringify()&lt;/code&gt; for storing objects is, that this function can not serialise private members.&lt;/p&gt;\n&lt;p&gt;This issue can be solved by overwriting the &lt;code&gt;.toString()&lt;/code&gt; method (which is called implicitly when storing data in web storage):&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Object with private and public members:&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;privateContent, publicContent&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; privateMember = privateContent || &lt;span class=&quot;hljs-string&quot;&gt;&quot;defaultPrivateValue&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;publicMember&lt;/span&gt; = publicContent  || &lt;span class=&quot;hljs-string&quot;&gt;&quot;defaultPublicValue&quot;&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;private&quot;: &quot;&apos;&lt;/span&gt; + privateMember + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;, &quot;public&quot;: &quot;&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;publicMember&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;}&apos;&lt;/span&gt;;\n        };\n    }\n    &lt;span class=&quot;hljs-title class_&quot;&gt;MyClass&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;fromString&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;serialisedString&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; properties = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(serialisedString || &lt;span class=&quot;hljs-string&quot;&gt;&quot;{}&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyClass&lt;/span&gt;(properties.&lt;span class=&quot;hljs-property&quot;&gt;private&lt;/span&gt;, properties.&lt;span class=&quot;hljs-property&quot;&gt;public&lt;/span&gt;);\n    };\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Storing:&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;invisible&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;visible&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;object&lt;/span&gt; = obj;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Loading:&lt;/span&gt;\n    obj = &lt;span class=&quot;hljs-title class_&quot;&gt;MyClass&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fromString&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;object&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Circular references&lt;/h2&gt;\n&lt;p&gt;Another problem &lt;code&gt;stringify&lt;/code&gt; can&apos;t deal with are circular references:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {};\nobj[&lt;span class=&quot;hljs-string&quot;&gt;&quot;circular&quot;&lt;/span&gt;] = obj;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;object&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj);  &lt;span class=&quot;hljs-comment&quot;&gt;// Fails&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In this example, &lt;code&gt;JSON.stringify()&lt;/code&gt; will throw a &lt;code&gt;TypeError&lt;/code&gt; &lt;em&gt;&quot;Converting circular structure to JSON&quot;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;If storing circular references should be supported, the second parameter of &lt;code&gt;JSON.stringify()&lt;/code&gt; might be used:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;sub&lt;/span&gt;: {}};\nobj.&lt;span class=&quot;hljs-property&quot;&gt;sub&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;circular&quot;&lt;/span&gt;] = obj;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;object&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(key == &lt;span class=&quot;hljs-string&quot;&gt;&apos;circular&apos;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;$ref&quot;&lt;/span&gt; + value.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;$&quot;&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; value;\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, finding an efficient solution for storing circular references highly depends on the tasks that need to be solved, and restoring such data is not trivial either.&lt;/p&gt;\n&lt;p&gt;There are already some question on Stack&amp;nbsp;Overflow dealing with this problem: &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10392293/stringify-javascript-object-with-circular-reference/12659424#12659424&quot;&gt;Stringify (convert to JSON) a JavaScript object with circular reference&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There is a great library that wraps many solutions so it even supports older browsers called &lt;a href=&quot;https://github.com/andris9/jStorage&quot; rel=&quot;nofollow noreferrer&quot;&gt;jStorage&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;You can set an object&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-shell&quot;&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;.jStorage.&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(key, value)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And retrieve it easily&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = $.jStorage.get(key)\n&lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt; = $.jStorage.get(key, &lt;span class=&quot;hljs-string&quot;&gt;&quot;default value&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I arrived at this post after hitting on another post that has been closed as a duplicate of this - titled &apos;how to store an array in localstorage?&apos;.  Which is fine except neither thread actually provides a full answer as to how you can maintain an array in localStorage - however I have managed to craft a solution based on information contained in both threads.&lt;/p&gt;\n\n&lt;p&gt;So if anyone else is wanting to be able to push/pop/shift items within an array, and they want that array stored in localStorage or indeed sessionStorage, here you go:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getArray&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrayName&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; thisArray = [];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fetchArrayObject = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(arrayName);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; fetchArrayObject !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fetchArrayObject !== &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) { thisArray = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(fetchArrayObject); }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; thisArray;\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pushArrayItem&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrayName,arrayItem&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; existingArray = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getArray&lt;/span&gt;(arrayName);\n  existingArray.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(arrayItem);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(arrayName,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(existingArray));\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;popArrayItem&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrayName&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrayItem = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; existingArray = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getArray&lt;/span&gt;(arrayName);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (existingArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n    arrayItem = existingArray.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(arrayName,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(existingArray));\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arrayItem;\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;shiftArrayItem&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrayName&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrayItem = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; existingArray = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getArray&lt;/span&gt;(arrayName);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (existingArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n    arrayItem = existingArray.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(arrayName,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(existingArray));\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arrayItem;\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;unshiftArrayItem&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrayName,arrayItem&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; existingArray = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getArray&lt;/span&gt;(arrayName);\n  existingArray.&lt;span class=&quot;hljs-title function_&quot;&gt;unshift&lt;/span&gt;(arrayItem);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(arrayName,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(existingArray));\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;deleteArray&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrayName&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;removeItem&lt;/span&gt;(arrayName);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;example usage - storing simple strings in localStorage array:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushArrayItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myArray&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;item one&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushArrayItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myArray&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;item two&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;example usage - storing objects in sessionStorage array:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-delphi&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; item1 = &lt;span class=&quot;hljs-comment&quot;&gt;{}&lt;/span&gt;; item1.&lt;span class=&quot;hljs-keyword&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;fred&apos;&lt;/span&gt;; item1.age = &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;;\nsessionStorage.pushArrayItem(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myArray&apos;&lt;/span&gt;,item1);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; item2 = &lt;span class=&quot;hljs-comment&quot;&gt;{}&lt;/span&gt;; item2.&lt;span class=&quot;hljs-keyword&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;dave&apos;&lt;/span&gt;; item2.age = &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;;\nsessionStorage.pushArrayItem(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myArray&apos;&lt;/span&gt;,item2);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;common methods to manipulate arrays:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;.pushArrayItem(arrayName,arrayItem); &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; adds an element onto &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; named &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;\n.unshiftArrayItem(arrayName,arrayItem); &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; adds an element onto front &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; named &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;\n.popArrayItem(arrayName); &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; removes &lt;span class=&quot;hljs-operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt; element\n.shiftArrayItem(arrayName); &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; removes &lt;span class=&quot;hljs-operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt; element\n.getArray(arrayName); &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; entire &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;\n.deleteArray(arrayName); &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; removes entire &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; storage\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In theory, it is possible to store objects with functions:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;store&lt;/span&gt; (a)\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = {&lt;span class=&quot;hljs-attr&quot;&gt;f&lt;/span&gt;: {}, &lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: {}};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; a)\n  {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(k) &amp;amp;&amp;amp; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; a[k] === &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;)\n    {\n      c.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt;[k] = &lt;span class=&quot;hljs-built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(a[k]);\n    }\n  }\n\n  c.&lt;span class=&quot;hljs-property&quot;&gt;d&lt;/span&gt; = a;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(c);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;CODE&apos;&lt;/span&gt;, data);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;restore&lt;/span&gt; ()\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;CODE&apos;&lt;/span&gt;);\n  data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(data);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = data.&lt;span class=&quot;hljs-property&quot;&gt;d&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; data.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt;)\n  {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(k))\n    {\n      b[k] = &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(data.&lt;span class=&quot;hljs-property&quot;&gt;f&lt;/span&gt;[k]) + &lt;span class=&quot;hljs-string&quot;&gt;&quot;)&quot;&lt;/span&gt;);\n    }\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; b;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, function serialization/deserialization is unreliable because &lt;a href=&quot;http://ecma-international.org/ecma-262/5.1/#sec-15.3.4&quot; rel=&quot;nofollow noreferrer&quot;&gt;it is implementation-dependent&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;It is recommended using an abstraction library for many of the features discussed here, as well as better compatibility. There are lots of options:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/andris9/jStorage&quot; rel=&quot;nofollow noreferrer&quot;&gt;jStorage&lt;/a&gt; or &lt;a href=&quot;https://github.com/andris9/simpleStorage&quot; rel=&quot;nofollow noreferrer&quot;&gt;simpleStorage&lt;/a&gt;  my preference&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/localForage&quot; rel=&quot;nofollow noreferrer&quot;&gt;localForage&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/alekseykulikov/storage&quot; rel=&quot;nofollow noreferrer&quot;&gt;alekseykulikov/storage&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/brianleroux/lawnchair&quot; rel=&quot;nofollow noreferrer&quot;&gt;Lawnchair&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/marcuswestin/store.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;Store.js&lt;/a&gt;  another good option&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/aaronagray/omg&quot; rel=&quot;nofollow noreferrer&quot;&gt;OMG&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/macmcmeans/localDataStorage&quot; rel=&quot;nofollow noreferrer&quot;&gt;localDataStorage&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;You can use &lt;a href=&quot;https://github.com/macmcmeans/localDataStorage&quot; rel=&quot;nofollow noreferrer&quot;&gt;localDataStorage&lt;/a&gt; to transparently store JavaScript data types (Array, Boolean, Date, Float, Integer, String and Object). It also provides lightweight data obfuscation, automatically compresses strings, facilitates query by key (name) as well as query by (key) value, and helps to enforce segmented shared storage within the same domain by prefixing keys.&lt;/p&gt;\n&lt;p&gt;[DISCLAIMER] I am the author of the utility [/DISCLAIMER]&lt;/p&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;localDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Belgian&apos;&lt;/span&gt; )\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1200.0047&lt;/span&gt; )\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt; )\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key4&apos;&lt;/span&gt;, { &lt;span class=&quot;hljs-string&quot;&gt;&apos;RSK&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;7&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;] } )\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key5&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; )\n\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key1&apos;&lt;/span&gt; )  &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt;   &apos;Belgian&apos;&lt;/span&gt;\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key2&apos;&lt;/span&gt; )  &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt;   1200.0047&lt;/span&gt;\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key3&apos;&lt;/span&gt; )  &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt;   true&lt;/span&gt;\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key4&apos;&lt;/span&gt; )  &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt;   Object {RSK: Array(5)}&lt;/span&gt;\nlocalDataStorage.&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;key5&apos;&lt;/span&gt; )  &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt;   null&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As you can see, the primitive values are respected.&lt;/p&gt;\n    ","\n&lt;p&gt;You cannot store a key value without a string format.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;LocalStorage&lt;/em&gt; only supports string formats for keys/values.&lt;/p&gt;\n&lt;p&gt;That is why you should convert your data to string whatever it is an array or object.&lt;/p&gt;\n&lt;p&gt;To &lt;em&gt;store&lt;/em&gt; data in localStorage, first of all stringify it using the JSON.stringify() method.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myObj = [{&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;time&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Date 2017-02-03T08:38:04.449Z&quot;&lt;/span&gt;}];\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;item&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(myObj));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then when you want to retrieve data, you need to parse the string to object again.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getObj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;item&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;a href=&quot;https://docs.meteor.com/api/ejson.html&quot; rel=&quot;noreferrer&quot;&gt;ejson&lt;/a&gt; to store the objects as strings.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;EJSON is an extension of JSON to support more types. It supports all JSON-safe types, as well as:&lt;/p&gt;\n  \n  &lt;ul&gt;\n  &lt;li&gt;Date (JavaScript &lt;code&gt;Date&lt;/code&gt;)&lt;/li&gt;\n  &lt;li&gt;Binary (JavaScript &lt;code&gt;Uint8Array&lt;/code&gt; or the result of &lt;a href=&quot;https://docs.meteor.com/api/ejson.html#ejson_new_binary&quot; rel=&quot;noreferrer&quot;&gt;EJSON.newBinary&lt;/a&gt;)&lt;/li&gt;\n  &lt;li&gt;User-defined types (see &lt;a href=&quot;https://docs.meteor.com/api/ejson.html#ejson_add_type&quot; rel=&quot;noreferrer&quot;&gt;EJSON.addType&lt;/a&gt;. For example, &lt;a href=&quot;https://docs.meteor.com/api/ejson.html#mongo_object_id&quot; rel=&quot;noreferrer&quot;&gt;Mongo.ObjectID&lt;/a&gt; is implemented this way.)&lt;/li&gt;\n  &lt;/ul&gt;\n  \n  &lt;p&gt;All EJSON serializations are also valid JSON. For example an object with a date and a binary buffer would be serialized in EJSON as:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;{\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;d&quot;&lt;/span&gt;: {&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-variable&quot;&gt;$date&lt;/span&gt;&quot;&lt;/span&gt;: 1358205756553},\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;: {&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-variable&quot;&gt;$binary&lt;/span&gt;&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;c3VyZS4=&quot;&lt;/span&gt;}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Here is my localStorage wrapper using ejson&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/UziTech/storage.js&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/UziTech/storage.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I added some types to my wrapper including regular expressions and functions&lt;/p&gt;\n    ","\n&lt;p&gt;Another option would be to use an existing plugin.&lt;/p&gt;\n\n&lt;p&gt;For example &lt;a href=&quot;https://github.com/mar10/persisto&quot; rel=&quot;noreferrer&quot;&gt;persisto&lt;/a&gt; is an open source project that provides an easy interface to localStorage/sessionStorage and automates persistence for form fields (input, radio buttons, and checkboxes).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/cU5V0.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/cU5V0.png&quot; alt=&quot;persisto features&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(Disclaimer: I am the author.)&lt;/p&gt;\n    ","\n&lt;p&gt;For TypeScript users willing to set and get typed properties:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Silly wrapper to be able to type the storage keys\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;export &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TypedStorage&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;removeItem&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key: keyof T&lt;/span&gt;): &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; {\n        localStorage.removeItem(key);\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getItem&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;keyof&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;key: K&lt;/span&gt;): T[K] | &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; | &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; =  localStorage.getItem(key);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; JSON.parse(data);\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setItem&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;keyof&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;(&lt;span class=&quot;hljs-params&quot;&gt;key: K, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;: T[K]&lt;/span&gt;): &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; = JSON.stringify(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\n        localStorage.setItem(key, data);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;http://www.typescriptlang.org/play/#src=%2F**%0D%0A%20*%20Silly%20wrapper%20to%20be%20able%20to%20type%20the%20storage%20keys%0D%0A%20*%2F%0D%0Aexport%20class%20TypedStorage%3CT%3E%20%7B%0D%0A%0D%0A%20%20%20%20public%20removeItem(key%3A%20keyof%20T)%3A%20void%20%7B%0D%0A%20%20%20%20%20%20%20%20localStorage.removeItem(key)%3B%0D%0A%20%20%20%20%7D%0D%0A%0D%0A%20%20%20%20public%20getItem%3CK%20extends%20keyof%20T%3E(key%3A%20K)%3A%20T%5BK%5D%20%7C%20null%20%7B%0D%0A%20%20%20%20%20%20%20%20const%20data%3A%20string%20%7C%20null%20%3D%20%20localStorage.getItem(key)%3B%0D%0A%20%20%20%20%20%20%20%20return%20JSON.parse(data)%3B%0D%0A%20%20%20%20%7D%0D%0A%0D%0A%20%20%20%20public%20setItem%3CK%20extends%20keyof%20T%3E(key%3A%20K%2C%20value%3A%20T%5BK%5D)%3A%20void%20%7B%0D%0A%20%20%20%20%20%20%20%20const%20data%3A%20string%20%3D%20JSON.stringify(value)%3B%0D%0A%20%20%20%20%20%20%20%20localStorage.setItem(key%2C%20data)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0A%2F%2F%20write%20an%20interface%20for%20the%20storage%0D%0Ainterface%20MyStore%20%7B%0D%0A%20%20%20age%3A%20number%2C%0D%0A%20%20%20name%3A%20string%2C%0D%0A%20%20%20address%3A%20%7Bcity%3Astring%7D%0D%0A%7D%0D%0A%0D%0Aconst%20storage%3A%20TypedStorage%3CMyStore%3E%20%3D%20new%20TypedStorage%3CMyStore%3E()%3B%0D%0A%0D%0Astorage.setItem(%22wrong%20key%22%2C%20%22%22)%3B%20%2F%2F%20error%20unknown%20key%0D%0Astorage.setItem(%22age%22%2C%20%22hello%22)%3B%20%2F%2F%20error%2C%20age%20should%20be%20number%0D%0Astorage.setItem(%22address%22%2C%20%7Bcity%3A%22Here%22%7D)%3B%20%2F%2F%20ok%0D%0A%0D%0Aconst%20address%3A%20%7Bcity%3Astring%7D%20%3D%20storage.getItem(%22address%22)%3B&quot; rel=&quot;nofollow noreferrer&quot;&gt;Example usage&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// write an interface for the storage&lt;/span&gt;\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyStore&lt;/span&gt; &lt;/span&gt;{\n   age: number,\n   name: &lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;,\n   address: {city:&lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;}\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;storage&lt;/span&gt;: TypedStorage&amp;lt;MyStore&amp;gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypedStorage&lt;/span&gt;&amp;lt;MyStore&amp;gt;();\n\nstorage.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrong key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// error unknown key&lt;/span&gt;\nstorage.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// error, age should be number&lt;/span&gt;\nstorage.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;address&quot;&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;city&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;Here&quot;&lt;/span&gt;}); &lt;span class=&quot;hljs-comment&quot;&gt;// ok&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;address&lt;/span&gt;: {city:&lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;} = storage.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;address&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://github.com/adrianmay/rhaboo&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/adrianmay/rhaboo&lt;/a&gt; is a localStorage sugar layer that lets you write things like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; store = Rhaboo.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;persistent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Some name&apos;&lt;/span&gt;);\nstore.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;, store.count ? store.count+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\nstore.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;somethingfancy&apos;&lt;/span&gt;, {\n  &lt;span class=&quot;hljs-attr&quot;&gt;one&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;man&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;went&apos;&lt;/span&gt;],\n  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;mow&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;went&lt;/span&gt;: [  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, { &lt;span class=&quot;hljs-attr&quot;&gt;mow&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;meadow&apos;&lt;/span&gt; ] }, {}  ]\n});\nstore.somethingfancy.went[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].mow.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;lawn&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It doesn&apos;t use JSON.stringify/parse because that would be inaccurate and slow on big objects. Instead, each terminal value has its own localStorage entry.&lt;/p&gt;\n\n&lt;p&gt;You can probably guess that I might have something to do with rhaboo.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;Akash&apos;&lt;/span&gt;})); &lt;span class=&quot;hljs-comment&quot;&gt;// Set Object in localStorage&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Get Object from localStorage&lt;/span&gt;\n\nsessionStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;Akash&apos;&lt;/span&gt;})); &lt;span class=&quot;hljs-comment&quot;&gt;// Set Object in sessionStorage&lt;/span&gt;\nsessionStorage.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Get Object from sessionStorage&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I made another minimalistic wrapper with only 20 lines of code to allow using it like it should:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myKey&apos;&lt;/span&gt;,{&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;:[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;ok&apos;&lt;/span&gt;});\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myKey&apos;&lt;/span&gt;);   &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; true&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myKey&apos;&lt;/span&gt;);   &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; {a:[1,2,5], b: &apos;ok&apos;}&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;();         &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; [&apos;myKey&apos;]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myKey&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/zevero/simpleWebstorage&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zevero/simpleWebstorage&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I made a thing that doesn&apos;t break the existing Storage objects, but creates a wrapper so you can do what you want. The result is a normal object, no methods, with access like any object.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/rudiedirkx/ObjectStorage&quot; rel=&quot;nofollow&quot;&gt;The thing I made.&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you want 1 &lt;code&gt;localStorage&lt;/code&gt; property to be magic:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prop = &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectStorage&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;prop&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you need several:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; storage = &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectStorage&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;prop&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;more&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;props&apos;&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Everything you do to &lt;code&gt;prop&lt;/code&gt;, or the objects &lt;strong&gt;inside&lt;/strong&gt; &lt;code&gt;storage&lt;/code&gt; will be automatically saved into &lt;code&gt;localStorage&lt;/code&gt;. You&apos;re always playing with a real object, so you can do stuff like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;storage.&lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt;.list.push(&lt;span class=&quot;hljs-string&quot;&gt;&apos;more data&apos;&lt;/span&gt;);\nstorage.another.list.splice(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, {another: &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And every new object &lt;strong&gt;inside&lt;/strong&gt; a tracked object will be automatically tracked.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The very big downside:&lt;/strong&gt; it depends on &lt;code&gt;Object.observe()&lt;/code&gt; so it has very limited browser support. And it doesn&apos;t look like it&apos;ll be coming for Firefox or Edge anytime soon.&lt;/p&gt;\n    ","\n&lt;p&gt;I found a way to make it work with objects that have cyclic references.&lt;/p&gt;\n\n&lt;p&gt;Let&apos;s make an object with cyclic references.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-yaml&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;=&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attr&quot;&gt;L:&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attr&quot;&gt;L:&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;v:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;lorem&apos;&lt;/span&gt; },\n        &lt;span class=&quot;hljs-attr&quot;&gt;R:&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;v:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;ipsum&apos;&lt;/span&gt; }\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;R:&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attr&quot;&gt;L:&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;v:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;dolor&apos;&lt;/span&gt; },\n        &lt;span class=&quot;hljs-attr&quot;&gt;R:&lt;/span&gt; {\n            &lt;span class=&quot;hljs-attr&quot;&gt;L:&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;v:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;sit&apos;&lt;/span&gt; },\n            &lt;span class=&quot;hljs-attr&quot;&gt;R:&lt;/span&gt; { &lt;span class=&quot;hljs-attr&quot;&gt;v:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;amet&apos;&lt;/span&gt; }\n        }\n    }\n}\n&lt;span class=&quot;hljs-string&quot;&gt;obj.R.L.uncle&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;obj.L;&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;obj.R.R.uncle&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;obj.L;&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;obj.R.R.L.uncle&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;obj.R.L;&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;obj.R.R.R.uncle&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;obj.R.L;&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;obj.L.L.uncle&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;obj.R;&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;obj.L.R.uncle&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;obj.R;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We can&apos;t do &lt;code&gt;JSON.stringify&lt;/code&gt; here, because of the circular references.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/4taQx.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/4taQx.png&quot; alt=&quot;circularUncle&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;LOCALSTORAGE.CYCLICJSON&lt;/code&gt; has &lt;code&gt;.stringify&lt;/code&gt; and &lt;code&gt;.parse&lt;/code&gt; just like normal &lt;code&gt;JSON&lt;/code&gt;, but works with objects with circular references. (&quot;Works&quot; meaning parse(stringify(obj)) and obj are deep equal AND have identical sets of &apos;inner equalities&apos;)&lt;/p&gt;\n\n&lt;p&gt;But we can just use the shortcuts:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;LOCALSTORAGE.setObject(&lt;span class=&quot;hljs-string&quot;&gt;&apos;latinUncles&apos;&lt;/span&gt;, obj)\nrecovered = LOCALSTORAGE.getObject(&lt;span class=&quot;hljs-string&quot;&gt;&apos;latinUncles&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, &lt;code&gt;recovered&lt;/code&gt; will be &quot;the same&quot; to obj, in the following sense:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-section&quot;&gt;[\nobj.L.L.v === recovered.L.L.v,\nobj.L.R.v === recovered.L.R.v,\nobj.R.L.v === recovered.R.L.v,\nobj.R.R.L.v === recovered.R.R.L.v,\nobj.R.R.R.v === recovered.R.R.R.v,\nobj.R.L.uncle === obj.L,\nobj.R.R.uncle === obj.L,\nobj.R.R.L.uncle === obj.R.L,\nobj.R.R.R.uncle === obj.R.L,\nobj.L.L.uncle === obj.R,\nobj.L.R.uncle === obj.R,\nrecovered.R.L.uncle === recovered.L,\nrecovered.R.R.uncle === recovered.L,\nrecovered.R.R.L.uncle === recovered.R.L,\nrecovered.R.R.R.uncle === recovered.R.L,\nrecovered.L.L.uncle === recovered.R,\nrecovered.L.R.uncle === recovered.R\n]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is the implementation of &lt;code&gt;LOCALSTORAGE&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable constant_&quot;&gt;LOCALSTORAGE&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;use strict&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ignore = [&lt;span class=&quot;hljs-title class_&quot;&gt;Boolean&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Number&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;primitive&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; item === &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt;){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (item === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;ignore.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (item &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; ignore[i]) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; }\n      }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n    }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;infant&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(value) ? [] : {};\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;decycleIntoForest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;object, replacer&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; replacer !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;function&apos;&lt;/span&gt;){\n      replacer = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x; }\n    }\n    object = &lt;span class=&quot;hljs-title function_&quot;&gt;replacer&lt;/span&gt;(object);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;primitive&lt;/span&gt;(object)) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; object;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objects = [object];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; forest  = [&lt;span class=&quot;hljs-title function_&quot;&gt;infant&lt;/span&gt;(object)];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bucket  = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;WeakMap&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// bucket = inverse of objects &lt;/span&gt;\n    bucket.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(object, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;addToBucket&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = objects.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n      objects.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(obj);\n      bucket.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(obj, result);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isInBucket&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; bucket.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(obj); }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;processNode&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;source, target&lt;/span&gt;){\n      &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(source).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-title function_&quot;&gt;replacer&lt;/span&gt;(source[key]);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;primitive&lt;/span&gt;(value)){\n          target[key] = {&lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: value};\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ptr;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;isInBucket&lt;/span&gt;(value)){\n            ptr = bucket.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(value);\n          } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            ptr = &lt;span class=&quot;hljs-title function_&quot;&gt;addToBucket&lt;/span&gt;(value);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newTree = &lt;span class=&quot;hljs-title function_&quot;&gt;infant&lt;/span&gt;(value);\n            forest.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(newTree);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;processNode&lt;/span&gt;(value, newTree);\n          }\n          target[key] = {&lt;span class=&quot;hljs-attr&quot;&gt;pointer&lt;/span&gt;: ptr};\n        }\n      });\n    }\n    &lt;span class=&quot;hljs-title function_&quot;&gt;processNode&lt;/span&gt;(object, forest[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; forest;\n  };\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deForestIntoCycle&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;forest&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objects = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; objectRequested = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; todo = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;processTree&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;idx&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (idx &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; objects) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objects[idx];\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (objectRequested[idx]) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n      objectRequested[idx] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tree = forest[idx];\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; node = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(tree) ? [] : {};\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; tree) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = tree[key];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;pointer&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; ptr = o.&lt;span class=&quot;hljs-property&quot;&gt;pointer&lt;/span&gt;;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-title function_&quot;&gt;processTree&lt;/span&gt;(ptr);\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (value === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n            todo.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({\n              &lt;span class=&quot;hljs-attr&quot;&gt;node&lt;/span&gt;: node,\n              &lt;span class=&quot;hljs-attr&quot;&gt;key&lt;/span&gt;: key,\n              &lt;span class=&quot;hljs-attr&quot;&gt;idx&lt;/span&gt;: ptr\n            });\n          } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            node[key] = value;\n          }\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o) {\n            node[key] = o.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n          } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;unexpected&apos;&lt;/span&gt;)\n          }\n        }\n      }\n      objects[idx] = node;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; node;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;hljs-title function_&quot;&gt;processTree&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; todo.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; item = todo[i];\n      item.&lt;span class=&quot;hljs-property&quot;&gt;node&lt;/span&gt;[item.&lt;span class=&quot;hljs-property&quot;&gt;key&lt;/span&gt;] = objects[item.&lt;span class=&quot;hljs-property&quot;&gt;idx&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n  };\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt; = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;log&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; the = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;the&apos;&lt;/span&gt;);\n      the.&lt;span class=&quot;hljs-property&quot;&gt;textContent&lt;/span&gt; = the.&lt;span class=&quot;hljs-property&quot;&gt;textContent&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt; + x;\n\t},\n\t&lt;span class=&quot;hljs-attr&quot;&gt;delimiter&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; the = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;the&apos;&lt;/span&gt;);\n      the.&lt;span class=&quot;hljs-property&quot;&gt;textContent&lt;/span&gt; = the.&lt;span class=&quot;hljs-property&quot;&gt;textContent&lt;/span&gt; +\n\t\t&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n*******************************************&apos;&lt;/span&gt;;\n\t}\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;logCyclicObjectToConsole&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;root&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; cycleFree = &lt;span class=&quot;hljs-title function_&quot;&gt;decycleIntoForest&lt;/span&gt;(root);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; shown = cycleFree.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;tree, idx&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; indentIncrement = &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showItem&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;nodeSlot, indent, label&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; leadingSpaces = &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;repeat&lt;/span&gt;(indent);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; leadingSpacesPlus = &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;repeat&lt;/span&gt;(indent + indentIncrement);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (shown[nodeSlot]) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(leadingSpaces + label + &lt;span class=&quot;hljs-string&quot;&gt;&apos; ... see above (object #&apos;&lt;/span&gt; + nodeSlot + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;);\n      } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(leadingSpaces + label + &lt;span class=&quot;hljs-string&quot;&gt;&apos; object#&apos;&lt;/span&gt; + nodeSlot);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tree = cycleFree[nodeSlot];\n        shown[nodeSlot] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(tree).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; entry = tree[key];\n          &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; entry) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(leadingSpacesPlus + key + &lt;span class=&quot;hljs-string&quot;&gt;&quot;: &quot;&lt;/span&gt; + entry.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;);\n          } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;pointer&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; entry) {\n              &lt;span class=&quot;hljs-title function_&quot;&gt;showItem&lt;/span&gt;(entry.&lt;span class=&quot;hljs-property&quot;&gt;pointer&lt;/span&gt;, indent + indentIncrement, key);\n            }\n          }\n        });\n      }\n    }\n\t&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;delimiter&lt;/span&gt;();\n    &lt;span class=&quot;hljs-title function_&quot;&gt;showItem&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;root&apos;&lt;/span&gt;);\n  };\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;decycleIntoForest&lt;/span&gt;(obj));\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;str&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deForestIntoCycle&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(str));\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;CYCLICJSON&lt;/span&gt; = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;decycleIntoForest&lt;/span&gt;: decycleIntoForest,\n    deForestIntoCycle : deForestIntoCycle,\n    &lt;span class=&quot;hljs-attr&quot;&gt;logCyclicObjectToConsole&lt;/span&gt;: logCyclicObjectToConsole,\n    stringify : stringify,\n    parse : parse\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setObject&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name, object&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(object);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(name, str);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getObject&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(name);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (str===&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(str);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable constant_&quot;&gt;CYCLICJSON&lt;/span&gt; : &lt;span class=&quot;hljs-variable constant_&quot;&gt;CYCLICJSON&lt;/span&gt;,\n    setObject  : setObject,\n    getObject  : getObject\n  }\n})();\nobj = {\n\t&lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: {\n\t\t&lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;lorem&apos;&lt;/span&gt; },\n\t\t&lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;ipsum&apos;&lt;/span&gt; }\n\t},\n\t&lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: {\n\t\t&lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;dolor&apos;&lt;/span&gt; },\n\t\t&lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: {\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;sit&apos;&lt;/span&gt; },\n\t\t\t&lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;amet&apos;&lt;/span&gt; }\n\t\t}\n\t}\n}\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// LOCALSTORAGE.setObject(&apos;latinUncles&apos;, obj)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// recovered = LOCALSTORAGE.getObject(&apos;latinUncles&apos;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// localStorage not available inside fiddle ):&lt;/span&gt;\n&lt;span class=&quot;hljs-variable constant_&quot;&gt;LOCALSTORAGE&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;CYCLICJSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;logCyclicObjectToConsole&lt;/span&gt;(obj)\nputIntoLS = &lt;span class=&quot;hljs-variable constant_&quot;&gt;LOCALSTORAGE&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;CYCLICJSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj);\nrecovered = &lt;span class=&quot;hljs-variable constant_&quot;&gt;LOCALSTORAGE&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;CYCLICJSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(putIntoLS);\n&lt;span class=&quot;hljs-variable constant_&quot;&gt;LOCALSTORAGE&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;CYCLICJSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;logCyclicObjectToConsole&lt;/span&gt;(recovered);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; the = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;the&apos;&lt;/span&gt;);\nthe.&lt;span class=&quot;hljs-property&quot;&gt;textContent&lt;/span&gt; = the.&lt;span class=&quot;hljs-property&quot;&gt;textContent&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n\\n&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(\n[\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;,\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;,\nrecovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nrecovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nrecovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nrecovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\nrecovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;,\nrecovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;\n]\n)&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;the&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;pre&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This question has been answered sufficiently from the JavaScript-only perspective, and others have already noted that both &lt;code&gt;localStorage.getItem&lt;/code&gt; and &lt;code&gt;localStorage.setItem&lt;/code&gt; have no concept of objectsthey handle strings and strings only. This answer provides a TypeScript-friendly solution that incorporates what &lt;a href=&quot;https://stackoverflow.com/a/2010948/39155&quot;&gt;others&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/a/3146971/39155&quot;&gt;have&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/a/4762411/39155&quot;&gt;suggested&lt;/a&gt; in JavaScript-only solutions.&lt;/p&gt;\n&lt;h2&gt;TypeScript 4.2.3&lt;/h2&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;key: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;, value: &lt;span class=&quot;hljs-built_in&quot;&gt;unknown&lt;/span&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(key, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(value));\n};\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getObject&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;key: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; value = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(key);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!value) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(value);\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;global&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attr&quot;&gt;setObject&lt;/span&gt;: &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;, value: &lt;span class=&quot;hljs-built_in&quot;&gt;unknown&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attr&quot;&gt;getObject&lt;/span&gt;: &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key: &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;unknown&lt;/span&gt;;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Usage&lt;/h3&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setObject&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ages&apos;&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;]);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getObject&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ages&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Explanation&lt;/h3&gt;\n&lt;p&gt;We declare both &lt;code&gt;setObject&lt;/code&gt; and &lt;code&gt;getObject&lt;/code&gt; functions on the &lt;code&gt;Storage&lt;/code&gt; prototype&lt;code&gt;localStorage&lt;/code&gt; is an instance of this type. There&apos;s nothing special we really need to note besides the null handling in &lt;code&gt;getObject&lt;/code&gt;. Since &lt;code&gt;getItem&lt;/code&gt; can return &lt;code&gt;null&lt;/code&gt;, we must exit early since calling &lt;code&gt;JSON.parse&lt;/code&gt; on a &lt;code&gt;null&lt;/code&gt; value will throw a runtime exception.&lt;/p&gt;\n&lt;p&gt;After declaring the functions on the &lt;code&gt;Storage&lt;/code&gt; prototype, we include their type definitions on the &lt;code&gt;Storage&lt;/code&gt; type in the global namespace.&lt;/p&gt;\n&lt;p&gt;Note: If we defined these functions with arrow functions, we&apos;d need to assume that the storage object we&apos;re calling is always &lt;code&gt;localStorage&lt;/code&gt;, which might not be true. For instance, the above code will add &lt;code&gt;setObject&lt;/code&gt; and &lt;code&gt;getObject&lt;/code&gt; support to &lt;code&gt;sessionStorage&lt;/code&gt; as well.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is some extended version of the code &lt;a href=&quot;https://stackoverflow.com/questions/2010892/how-to-store-objects-in-html5-localstorage/5790739#5790739&quot;&gt;posted by danott&lt;/a&gt;:&lt;/p&gt;\n&lt;p&gt;It&apos;ll also implement a &lt;strong&gt;delete&lt;/strong&gt; value from localstorage and shows how to adds a Getter and Setter layer so instead of,&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;localstorage.setItem(preview, true)&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;you can write&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;config.preview = true&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;Okay, here were go:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;=&lt;span class=&quot;hljs-title class_&quot;&gt;Storage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_setItem&lt;/span&gt; &amp;gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;u&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_setItem&lt;/span&gt; = &lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setItem&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setItem&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;)\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; value &amp;gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;u&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//..undefined&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;removeItem&lt;/span&gt;(key)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;_setItem&lt;/span&gt;(key, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(value));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_getItem&lt;/span&gt; &amp;gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;u&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;_getItem&lt;/span&gt; = &lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getItem&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable constant_&quot;&gt;PT&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getItem&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;)\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ItemData&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;_getItem&lt;/span&gt;(key)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n  {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;ItemData&lt;/span&gt;);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e)\n  {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ItemData&lt;/span&gt;;\n  }\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Aliases for localStorage.set/getItem&lt;/span&gt;\nget = &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getItem&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;)\nset = &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;setItem&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Create ConfigWrapperObject&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; config = {}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Helper to create getter &amp;amp; setter&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;configCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;PropToAdd&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;defineProperty&lt;/span&gt;( config, &lt;span class=&quot;hljs-title class_&quot;&gt;PropToAdd&lt;/span&gt;, {\n      &lt;span class=&quot;hljs-attr&quot;&gt;get&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)    { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;PropToAdd&lt;/span&gt;)    )},\n      &lt;span class=&quot;hljs-attr&quot;&gt;set&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;) {         &lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;PropToAdd&lt;/span&gt;, val)}\n    })\n}\n&lt;span class=&quot;hljs-comment&quot;&gt;//------------------------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage Part&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Create properties&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;configCreate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;preview&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-title function_&quot;&gt;configCreate&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;notification&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-comment&quot;&gt;//...&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Configuration Data transfer&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Set&lt;/span&gt;\nconfig.&lt;span class=&quot;hljs-property&quot;&gt;preview&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Get&lt;/span&gt;\nconfig.&lt;span class=&quot;hljs-property&quot;&gt;preview&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Delete&lt;/span&gt;\nconfig.&lt;span class=&quot;hljs-property&quot;&gt;preview&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Well, you may strip the aliases part with &lt;code&gt;.bind(...)&lt;/code&gt;. However, I just put it in since it&apos;s really good to know about this. I took me hours to find out why a simple &lt;code&gt;get = localStorage.getItem;&lt;/code&gt; don&apos;t work.&lt;/p&gt;\n    ","\n&lt;h3&gt;Circular References&lt;/h3&gt;\n&lt;p&gt;In this answer I focus on data-only objects (without functions, etc.) with circular references and develop ideas mentioned &lt;a href=&quot;https://stackoverflow.com/a/27013704/860099&quot;&gt;by maja&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/a/58825573/860099&quot;&gt;and mathheadinclouds&lt;/a&gt; (I use his test case and\nmy code is several times shorter).&lt;/p&gt;\n&lt;p&gt;Actually, we can use JSON.stringify with a proper &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot; rel=&quot;nofollow noreferrer&quot;&gt;replacer&lt;/a&gt; - if the source object contains multi-references to some object, or contains circular references then we reference it by special path-string (similar to &lt;a href=&quot;https://jsonpath.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JSONPath&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// JSON.strigify replacer for objects with circ ref&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;refReplacer&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; m = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(), v = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(), init = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;field, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; p = m.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;) ? &lt;span class=&quot;hljs-string&quot;&gt;`[&lt;span class=&quot;hljs-subst&quot;&gt;${field}&lt;/span&gt;]`&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt; + field);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; isComplex = value === &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;(value)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isComplex) m.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(value, p);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; pp = v.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(value)||&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; path = p.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/undefined\\.\\.?/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; val = pp ? &lt;span class=&quot;hljs-string&quot;&gt;`#REF:&lt;span class=&quot;hljs-subst&quot;&gt;${pp[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&apos;[&apos;&lt;/span&gt; ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;$&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;$.&apos;&lt;/span&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;${pp}&lt;/span&gt;`&lt;/span&gt; : value;\n\n    !init ? (init=value) : (val===init ? val=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#REF:$&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!pp &amp;amp;&amp;amp; isComplex) v.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(value, path);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val;\n  }\n}\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// TEST&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Generate obj with duplicate/circular references&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;lorem&apos;&lt;/span&gt; },\n        &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;ipsum&apos;&lt;/span&gt; }\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;dolor&apos;&lt;/span&gt; },\n        &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;sit&apos;&lt;/span&gt; },\n            &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;amet&apos;&lt;/span&gt; }\n        }\n    }\n}\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;;\ntestObject = obj;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; json = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(testObject, &lt;span class=&quot;hljs-title function_&quot;&gt;refReplacer&lt;/span&gt;(), &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Test Object\\n&quot;&lt;/span&gt;, testObject);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;JSON with JSONpath references\\n&quot;&lt;/span&gt;, json);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Parse such JSON content with JSONpath-like references:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Parse JSON content with JSONpath references to object&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parseRefJSON&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;json&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; objToPath = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; pathToObj = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; o = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(json);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;traverse&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;parent, field&lt;/span&gt;) =&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj = parent;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; path = &lt;span class=&quot;hljs-string&quot;&gt;&apos;#REF:$&apos;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (field !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;) {\n      obj = parent[field];\n      path = objToPath.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(parent) + (&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(parent) ? &lt;span class=&quot;hljs-string&quot;&gt;`[&lt;span class=&quot;hljs-subst&quot;&gt;${field}&lt;/span&gt;]`&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${field ? &lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt; + field : &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;}&lt;/span&gt;`&lt;/span&gt;);\n    }\n\n    objToPath.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(obj, path);\n    pathToObj.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(path, obj);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; ref = pathToObj.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(obj);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (ref) parent[field] = ref;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; f &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; obj) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj === &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;(obj)) &lt;span class=&quot;hljs-title function_&quot;&gt;traverse&lt;/span&gt;(obj, f);\n  }\n\n  &lt;span class=&quot;hljs-title function_&quot;&gt;traverse&lt;/span&gt;(o);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; o;\n}\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// TEST 1&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; json = &lt;span class=&quot;hljs-string&quot;&gt;`\n{\n    &quot;L&quot;: {\n        &quot;L&quot;: {\n            &quot;v&quot;: &quot;lorem&quot;,\n            &quot;uncle&quot;: {\n                &quot;L&quot;: {\n                    &quot;v&quot;: &quot;dolor&quot;,\n                    &quot;uncle&quot;: &quot;#REF:$.L&quot;\n                },\n                &quot;R&quot;: {\n                    &quot;L&quot;: {\n                        &quot;v&quot;: &quot;sit&quot;,\n                        &quot;uncle&quot;: &quot;#REF:$.L.L.uncle.L&quot;\n                    },\n                    &quot;R&quot;: {\n                        &quot;v&quot;: &quot;amet&quot;,\n                        &quot;uncle&quot;: &quot;#REF:$.L.L.uncle.L&quot;\n                    },\n                    &quot;uncle&quot;: &quot;#REF:$.L&quot;\n                }\n            }\n        },\n        &quot;R&quot;: {\n            &quot;v&quot;: &quot;ipsum&quot;,\n            &quot;uncle&quot;: &quot;#REF:$.L.L.uncle&quot;\n        }\n    },\n    &quot;R&quot;: &quot;#REF:$.L.L.uncle&quot;\n}`&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; testObject = &lt;span class=&quot;hljs-title function_&quot;&gt;parseRefJSON&lt;/span&gt;(json);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Test Object\\n&quot;&lt;/span&gt;, testObject);\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// TEST 2&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Tests from mathheadinclouds answer: &apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; recovered = testObject;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj = { &lt;span class=&quot;hljs-comment&quot;&gt;// Original object&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;lorem&apos;&lt;/span&gt; },\n        &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;ipsum&apos;&lt;/span&gt; }\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;dolor&apos;&lt;/span&gt; },\n        &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: {\n            &lt;span class=&quot;hljs-attr&quot;&gt;L&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;sit&apos;&lt;/span&gt; },\n            &lt;span class=&quot;hljs-attr&quot;&gt;R&lt;/span&gt;: { &lt;span class=&quot;hljs-attr&quot;&gt;v&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;amet&apos;&lt;/span&gt; }\n        }\n    }\n}\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;;\n\n[\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;,\n  obj.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;,\n  recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;,\n  recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;,\n  recovered.&lt;span class=&quot;hljs-property&quot;&gt;L&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;uncle&lt;/span&gt; === recovered.&lt;span class=&quot;hljs-property&quot;&gt;R&lt;/span&gt;\n].&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;test pass: &apos;&lt;/span&gt; + x));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;To load/save the resulting JSON content into storage, use the following code:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;localStorage.myObject&lt;/span&gt; = JSON.stringify(testObject, refReplacer())&lt;span class=&quot;hljs-comment&quot;&gt;;  // Save&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;testObject&lt;/span&gt; = parseRefJSON(localStorage.myObject)&lt;span class=&quot;hljs-comment&quot;&gt;;                   // Load&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I suggest using &lt;a href=&quot;https://github.com/pichillilorenzo/jackson-js&quot; rel=&quot;nofollow noreferrer&quot;&gt;Jackson-js&lt;/a&gt;. It is a library that handles serializing and deserializing of Objects while retaining their structure, based on decorators.&lt;/p&gt;\n&lt;p&gt;The library handles all the pitfalls such as cyclic reference, attributes aliasing, etc.&lt;/p&gt;\n&lt;p&gt;Simply describe your class using the @JsonProperty() and @JsonClassType() decorators.&lt;/p&gt;\n&lt;p&gt;Serialize your object using:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vbnet&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; objectMapper = &lt;span class=&quot;hljs-built_in&quot;&gt;new&lt;/span&gt; ObjectMapper();\nlocalstore.setItem(&lt;span class=&quot;hljs-keyword&quot;&gt;key&lt;/span&gt;, objectMapper.stringify&amp;lt;yourObjectType&amp;gt;(yourObject));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For slightly more detailed explanation, check my answer here:&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16261119/typescript-objects-serialization/66706365#66706365&quot;&gt;Typescript objects serialization?&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;And the Jackson-js tutorial here:&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://itnext.io/jackson-js-powerful-javascript-decorators-to-serialize-deserialize-objects-into-json-and-vice-df952454cf&quot; rel=&quot;nofollow noreferrer&quot;&gt;Jackson-js: Powerful JavaScript decorators to serialize/deserialize objects into JSON and vice versa (Part 1)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;user&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(user));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then to retrieve it from the store and convert to an object again:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; user = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;user&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;If&lt;/span&gt; we need to &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; all entries &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; the store we can simply &lt;span class=&quot;hljs-attr&quot;&gt;do&lt;/span&gt;:\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;clear&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":306,"title":"How to store objects in HTML5 localStorage","content":"\n                \n&lt;p&gt;I&apos;d like to store a JavaScript object in HTML5 &lt;code&gt;localStorage&lt;/code&gt;, but my object is apparently being converted to a string.&lt;/p&gt;\n&lt;p&gt;I can store and retrieve primitive JavaScript types and arrays using &lt;code&gt;localStorage&lt;/code&gt;, but objects don&apos;t seem to work.  Should they?&lt;/p&gt;\n&lt;p&gt;Here&apos;s my code:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; testObject = { &lt;span class=&quot;hljs-string&quot;&gt;&apos;one&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;two&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;three&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; };\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;typeof testObject: &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; testObject);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;testObject properties:&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; prop &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; testObject) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;  &apos;&lt;/span&gt; + prop + &lt;span class=&quot;hljs-string&quot;&gt;&apos;: &apos;&lt;/span&gt; + testObject[prop]);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Put the object into storage&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;setItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;testObject&apos;&lt;/span&gt;, testObject);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Retrieve the object from storage&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; retrievedObject = &lt;span class=&quot;hljs-variable language_&quot;&gt;localStorage&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getItem&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;testObject&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;typeof retrievedObject: &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; retrievedObject);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Value of retrievedObject: &apos;&lt;/span&gt; + retrievedObject);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The console output is&lt;/p&gt;\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;typeof testObject: object\ntestObject properties:\n  one: 1\n  two: 2\n  three: 3\ntypeof retrievedObject: string\nValue of retrievedObject: [object Object]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It looks to me like the &lt;code&gt;setItem&lt;/code&gt; method is converting the input to a string before storing it.&lt;/p&gt;\n&lt;p&gt;I see this behavior in Safari, Chrome, and Firefox, so I assume it&apos;s my misunderstanding of the &lt;a href=&quot;http://www.w3.org/TR/webstorage/&quot; rel=&quot;noreferrer&quot;&gt;HTML5 Web Storage&lt;/a&gt; specification, not a browser-specific bug or limitation.&lt;/p&gt;\n&lt;p&gt;I&apos;ve tried to make sense of the &lt;em&gt;structured clone&lt;/em&gt; algorithm described in &lt;em&gt;&lt;a href=&quot;https://html.spec.whatwg.org/multipage/infrastructure.html#infrastructure&quot; rel=&quot;noreferrer&quot;&gt;2 Common infrastructure&lt;/a&gt;&lt;/em&gt;.  I don&apos;t fully understand what it&apos;s saying, but maybe my problem has to do with my object&apos;s properties not being enumerable (???).&lt;/p&gt;\n&lt;p&gt;Is there an easy workaround?&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Update: The W3C eventually changed their minds about the structured-clone specification, and decided to change the spec to match the implementations.  See &lt;em&gt;&lt;a href=&quot;https://www.w3.org/Bugs/Public/show_bug.cgi?id=12111&quot; rel=&quot;noreferrer&quot;&gt;12111 – spec for Storage object getItem(key) method does not match implementation behavior&lt;/a&gt;&lt;/em&gt;. So this question is no longer 100% valid, but the answers still may be of interest.&lt;/p&gt;\n    ","slug":"how-to-store-objects-in-html5-localstorage-1657387568907","postType":"QUESTION","createdAt":"2022-07-09T17:26:08.000Z","updatedAt":"2022-07-09T17:26:08.000Z","tags":[{"id":1822,"name":"local-storage","slug":"local-storage","createdAt":"2022-07-09T17:26:09.000Z","updatedAt":"2022-07-09T17:26:09.000Z","Questions_Tags":{"questionId":306,"tagId":1822}}],"relatedQuestions":[{"title":"How to store objects in HTML5 localStorage","slug":"how-to-store-objects-in-html5-localstorage-1657387568907","tags":[{"name":"local-storage","Questions_Tags":{"questionId":306,"tagId":1822}}]}]},"randomQuestions":[{"title":"What's the meaning of \"=>\" (an arrow formed from equals & greater than) in JavaScript?","slug":"what's-the-meaning-of-\"greater\"-(an-arrow-formed-from-equals-and-greater-than)-in-javascript-1657387977118"},{"title":"Firebase query if child of child contains a value","slug":"firebase-query-if-child-of-child-contains-a-value-1657387841291"},{"title":"How to remove the space between inline/inline-block elements?","slug":"how-to-remove-the-space-between-inlineinline-block-elements-1657384532273"},{"title":"Safely turning a JSON string into an object","slug":"safely-turning-a-json-string-into-an-object-1657388194824"},{"title":"Are global variables thread-safe in Flask? How do I share data between requests?","slug":"are-global-variables-thread-safe-in-flask-how-do-i-share-data-between-requests-1657387949951"},{"title":"What is move semantics?","slug":"what-is-move-semantics-1657387702625"},{"title":"How to convert string representation of list to a list","slug":"how-to-convert-string-representation-of-list-to-a-list-1657387384181"},{"title":"Reference: What is variable scope, which variables are accessible from where and what are \"undefined variable\" errors?","slug":"reference:-what-is-variable-scope-which-variables-are-accessible-from-where-and-what-are-\"undefined-variable\"-errors-1657384644697"},{"title":"Split comma-separated strings in a column into separate rows","slug":"split-comma-separated-strings-in-a-column-into-separate-rows-1657387785823"},{"title":"What is the difference between == and equals() in Java?","slug":"what-is-the-difference-between-and-equals()-in-java-1657387729654"},{"title":"\"Thinking in AngularJS\" if I have a jQuery background? [closed]","slug":"\"thinking-in-angularjs\"-if-i-have-a-jquery-background-closed-1657384761159"},{"title":"Using Auto Layout in UITableView for dynamic cell layouts & variable row heights","slug":"using-auto-layout-in-uitableview-for-dynamic-cell-layouts-and-variable-row-heights-1657387722263"},{"title":"Is storing a delimited list in a database column really that bad?","slug":"is-storing-a-delimited-list-in-a-database-column-really-that-bad-1657384474773"},{"title":"Reference - What does this error mean in PHP?","slug":"reference-what-does-this-error-mean-in-php-1657384301782"},{"title":"Example images for code and mark-up Q&As [closed]","slug":"example-images-for-code-and-mark-up-qandas-closed-1657387690222"},{"title":"Why is iostream::eof inside a loop condition (i.e. `while (!stream.eof())`) considered wrong?","slug":"why-is-iostream::eof-inside-a-loop-condition-(i.e.-while-(!stream.eof()))-considered-wrong-1657384355427"},{"title":"getContactsFromFirebase() method return an empty list","slug":"getcontactsfromfirebase()-method-return-an-empty-list-1657388433928"},{"title":"Why does this PDO statement silently fail?","slug":"why-does-this-pdo-statement-silently-fail-1657384892133"},{"title":"How can I upload files to a server using JSP/Servlet?","slug":"how-can-i-upload-files-to-a-server-using-jspservlet-1657384847658"},{"title":"How can I save an activity state using the save instance state?","slug":"how-can-i-save-an-activity-state-using-the-save-instance-state-1657387429981"}]},"__N_SSG":true}