{"pageProps":{"data":{"answer":["\n&lt;p&gt;This problem has two typical causes:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Static fields used by the objects you stored in the list&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Accidentally adding the &lt;em&gt;same&lt;/em&gt; object to the list&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Static Fields&lt;/h2&gt;\n&lt;p&gt;If the objects in your list store data in static fields, each object in your list will appear to be the same because they hold the same values. Consider the class below:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; value; \n  &lt;span class=&quot;hljs-comment&quot;&gt;//      ^^^^^^------------ - Here&apos;s the problem!&lt;/span&gt;\n  \n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; value)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.value = value;\n  }\n  \n  &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; value;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In that example, there is only one &lt;code&gt;int value&lt;/code&gt; which is shared between all instances of &lt;code&gt;Foo&lt;/code&gt; because it is declared &lt;code&gt;static&lt;/code&gt;. (See &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;&quot;Understanding Class Members&quot;&lt;/em&gt;&lt;/a&gt; tutorial.)&lt;/p&gt;\n&lt;p&gt;If you add multiple &lt;code&gt;Foo&lt;/code&gt; objects to a list using the code below, each instance will return &lt;code&gt;3&lt;/code&gt; from a call to &lt;code&gt;getValue()&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;; i++) {      \n  list.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;(i));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The solution is simple - don&apos;t use the &lt;code&gt;static&lt;/code&gt; keywords for fields in your class unless you actually want the values shared between every instance of that class.&lt;/p&gt;\n&lt;h2&gt;Adding the Same Object&lt;/h2&gt;\n&lt;p&gt;If you add a temporary variable to a list, you must create a new instance of the object you are adding, each time you loop. Consider the following erroneous code snippet:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Foo&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Foo&amp;gt;();    \n&lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;; i++) {\n  tmp.setValue(i);\n  list.add(tmp);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here, the &lt;code&gt;tmp&lt;/code&gt; object was constructed outside the loop. As a result, the &lt;em&gt;same object instance&lt;/em&gt; is being added to the list three times. The instance will hold the value &lt;code&gt;2&lt;/code&gt;, because that was the value passed during the last call to &lt;code&gt;setValue()&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;To fix this, just move the object construction inside the loop:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Foo&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Foo&amp;gt;();        \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;; i++) {\n  &lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// &amp;lt;-- fresh instance!&lt;/span&gt;\n  tmp.setValue(i);\n  list.add(tmp);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Your problem is with the type &lt;code&gt;static&lt;/code&gt; which requires a new initialization every time a loop is iterated. If you are in a loop it is better to keep the concrete initialization inside the loop.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Object&amp;gt; objects = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;(); \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; length_you_want; i++) {\n    &lt;span class=&quot;hljs-type&quot;&gt;SomeStaticClass&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myStaticObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SomeStaticClass&lt;/span&gt;();\n    myStaticObject.tag = i;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Do stuff with myStaticObject&lt;/span&gt;\n    objects.add(myStaticClass);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Instead of:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Object&amp;gt; objects = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;(); \n\n&lt;span class=&quot;hljs-type&quot;&gt;SomeStaticClass&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myStaticObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SomeStaticClass&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; length; i++) {\n    myStaticObject.tag = i;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Do stuff with myStaticObject&lt;/span&gt;\n    objects.add(myStaticClass);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// This will duplicate the last item &quot;length&quot; times&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here &lt;code&gt;tag&lt;/code&gt; is a variable in &lt;code&gt;SomeStaticClass&lt;/code&gt; to check the validity of the above snippet; you can have some other implementation based on your use case.&lt;/p&gt;\n    ","\n&lt;p&gt;Had the same trouble with the calendar instance.&lt;/p&gt;\n\n&lt;p&gt;Wrong code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myCalendar&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Calendar.getInstance();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; days &amp;lt; daysPerWeek; days++) {\n    myCalendar.add(Calendar.DAY_OF_YEAR, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// In the next line lies the error&lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;newCal&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; myCalendar;\n    calendarList.add(newCal);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You have to create a NEW object of the calendar, which can be done with &lt;code&gt;calendar.clone()&lt;/code&gt;;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myCalendar&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Calendar.getInstance();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; days &amp;lt; daysPerWeek; days++) {\n    myCalendar.add(Calendar.DAY_OF_YEAR, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// RIGHT WAY&lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;newCal&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Calendar) myCalendar.clone();\n    calendarList.add(newCal);\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Every time you add an object to an ArrayList, make sure you add a new object and not already used object. What is happening is that when you add the same 1 copy of object, that same object is added to different positions in an ArrayList. And when you make change to one, because the same copy is added over and over again, all the copies get affected. \nFor example,\nSay you have an ArrayList like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;ArrayList&amp;lt;Card&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Card&amp;gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;Card&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Card&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now if you add this Card c to list, it will be added no problem. It will be saved at location 0. But, when you save the same Card c in the list, it will be saved at location 1. So remember that you added same 1 object to two different locations in a list. Now if you make a change that Card object c, the objects in a list at location 0 and 1 will also reflect that change, because they are the same object. &lt;/p&gt;\n\n&lt;p&gt;One solution would be to make a constructor in Card class, that accepts another Card object. Then in that constructor, you can set the properties like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Card&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Card c)&lt;/span&gt;{\n&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.property1 = c.getProperty1();\n&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.property2 = c.getProperty2(); \n... &lt;span class=&quot;hljs-comment&quot;&gt;//add all the properties that you have in this class Card this way&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And lets say you have the same 1 copy of Card, so at the time of adding a new object, you can do this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;list.add(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Card&lt;/span&gt;(nameOfTheCardObjectThatYouWantADifferentCopyOf));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It can also consequence of using the same reference instead of using a new one.      &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; List&amp;lt;Foo&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Foo&amp;gt;();        \n\n setdata();\n......\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setdata&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt; {\n  &lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;();\n  tmp.setValue(i);\n  list.add(tmp);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Instead of: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;Foo&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Foo&amp;gt;(); \n&lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;();       \nsetdata();\n......\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setdata&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt; {\n  tmp.setValue(i);\n  list.add(tmp);\n} \n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":349,"title":"Why does my ArrayList contain N copies of the last item added to the list?","content":"\n                \n&lt;p&gt;I&apos;m adding three different objects to an ArrayList, but the list contains three copies of the last object I added. &lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (Foo f : list) {\n  System.out.println(f.getValue());\n}    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Expected:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Actual:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What mistake have I made?&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;Note: this is designed to be a canonical Q&amp;amp;A for the numerous similar issues that arise on this site.&lt;/sup&gt;&lt;/p&gt;\n    ","slug":"why-does-my-arraylist-contain-n-copies-of-the-last-item-added-to-the-list-1657387712003","postType":"QUESTION","createdAt":"2022-07-09T17:28:32.000Z","updatedAt":"2022-07-09T17:28:32.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"The ViewData item that has the key 'XXX' is of type 'System.Int32' but must be of type 'IEnumerable<SelectListItem>'","slug":"the-viewdata-item-that-has-the-key-'xxx'-is-of-type-'system.int32'-but-must-be-of-type-'ienumerablelessselectlistitemgreater'-1657388454191"},{"title":"How to include a PHP variable inside a MySQL statement","slug":"how-to-include-a-php-variable-inside-a-mysql-statement-1657387669365"},{"title":"Why does my JavaScript code receive a \"No 'Access-Control-Allow-Origin' header is present on the requested resource\" error, while Postman does not?","slug":"why-does-my-javascript-code-receive-a-\"no-'access-control-allow-origin'-header-is-present-on-the-requested-resource\"-error-while-postman-does-not-1657384636363"},{"title":"Use a content script to access the page context variables and functions","slug":"use-a-content-script-to-access-the-page-context-variables-and-functions-1657384842444"},{"title":"JSTL in JSF2 Facelets... makes sense?","slug":"jstl-in-jsf2-facelets...-makes-sense-1657387667435"},{"title":"Preview an image before it is uploaded","slug":"preview-an-image-before-it-is-uploaded-1657388048128"},{"title":"What methods of ‘clearfix’ can I use?","slug":"what-methods-of-'clearfix'-can-i-use-1657387672727"},{"title":"How do I properly clean up Excel interop objects?","slug":"how-do-i-properly-clean-up-excel-interop-objects-1657388329706"},{"title":"getContactsFromFirebase() method return an empty list","slug":"getcontactsfromfirebase()-method-return-an-empty-list-1657388433928"},{"title":"How do I add a delay in a JavaScript loop?","slug":"how-do-i-add-a-delay-in-a-javascript-loop-1657388544679"},{"title":"Of the many findElement(s)/By functions in Selenium, when would you use one over the other?","slug":"of-the-many-findelement(s)by-functions-in-selenium-when-would-you-use-one-over-the-other-1657388412658"},{"title":"Add a property to a JavaScript object using a variable as the name?","slug":"add-a-property-to-a-javascript-object-using-a-variable-as-the-name-1657388425650"},{"title":"Can a local variable's memory be accessed outside its scope?","slug":"can-a-local-variable's-memory-be-accessed-outside-its-scope-1657384460386"},{"title":"Is there a CSS parent selector?","slug":"is-there-a-css-parent-selector-1657384430692"},{"title":"Converting string into datetime","slug":"converting-string-into-datetime-1657387717295"},{"title":"How to use Regular Expressions (Regex) in Microsoft Excel both in-cell and loops","slug":"how-to-use-regular-expressions-(regex)-in-microsoft-excel-both-in-cell-and-loops-1657387487287"},{"title":"How do I attach events to dynamic HTML elements with jQuery? [duplicate]","slug":"how-do-i-attach-events-to-dynamic-html-elements-with-jquery-duplicate-1657387992964"},{"title":"Order Bars in ggplot2 bar graph","slug":"order-bars-in-ggplot2-bar-graph-1657388099080"},{"title":"When to use LinkedList over ArrayList in Java?","slug":"when-to-use-linkedlist-over-arraylist-in-java-1657388107480"},{"title":"Understanding slicing","slug":"understanding-slicing-1657384397680"}]},"__N_SSG":true}