{"pageProps":{"data":{"answer":["\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;JSON.parse(jsonString)&lt;/code&gt;&lt;/a&gt; is a pure JavaScript approach so long as you can guarantee a reasonably modern browser.&lt;/p&gt;\n    ","\n&lt;p&gt;The jQuery method is now deprecated. Use this method instead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; jsonObject = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;em&gt;Original answer using deprecated jQuery functionality&lt;/em&gt;:&lt;/p&gt;\n\n&lt;p&gt;If you&apos;re using jQuery just use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;jQuery.&lt;span class=&quot;hljs-title function_&quot;&gt;parseJSON&lt;/span&gt;( jsonString );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&apos;s exactly what you&apos;re looking for (see the jQuery &lt;a href=&quot;http://api.jquery.com/jQuery.parseJSON/&quot; rel=&quot;noreferrer&quot;&gt;documentation&lt;/a&gt;).&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;This answer is for IE &amp;lt; 7, for modern browsers check Jonathan&apos;s answer above.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;This answer is outdated and &lt;a href=&quot;https://stackoverflow.com/a/5686237/542251&quot;&gt;Jonathan&apos;s answer above&lt;/a&gt; (&lt;code&gt;JSON.parse(jsonString)&lt;/code&gt;) is now the best answer&lt;/em&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://json.org/&quot; rel=&quot;noreferrer&quot;&gt;JSON.org&lt;/a&gt; has JSON parsers for many languages including four different ones for JavaScript.  I believe most people would consider &lt;a href=&quot;http://www.json.org/js.html&quot; rel=&quot;noreferrer&quot;&gt;json2.js&lt;/a&gt; their goto implementation.&lt;/p&gt;\n    ","\n&lt;p&gt;Use the simple code example in &quot;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/cc836466%28v=vs.94%29.aspx&quot; rel=&quot;noreferrer&quot;&gt;JSON.parse()&lt;/a&gt;&quot;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsontext = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;firstname&quot;:&quot;Jesper&quot;,&quot;surname&quot;:&quot;Aaberg&quot;,&quot;phone&quot;:[&quot;555-0100&quot;,&quot;555-0120&quot;]}&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; contact = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsontext);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and reversing it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This seems to be the issue:&lt;/p&gt;\n\n&lt;p&gt;An input that is received via Ajax websocket etc, and it will be in String format,  but you need to know if it is &lt;code&gt;JSON.parsable&lt;/code&gt;. The touble is, if you always run it through &lt;code&gt;JSON.parse&lt;/code&gt;, the program MAY continue &quot;successfully&quot; but you&apos;ll still see an error thrown in the console with the dreaded &lt;code&gt;&quot;Error: unexpected token &apos;x&apos;&quot;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n  data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jqxhr.&lt;span class=&quot;hljs-property&quot;&gt;responseText&lt;/span&gt;);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (_error) {}\n\ndata || (data = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;message&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Server error, please retry&apos;&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I&apos;m not sure about other ways to do it but here&apos;s how you do it in &lt;a href=&quot;http://www.prototypejs.org/learn/json&quot; rel=&quot;nofollow noreferrer&quot;&gt;Prototype (JSON tutorial)&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Ajax&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;Request&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/some_url&apos;&lt;/span&gt;, {\n  &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;get&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;requestHeaders&lt;/span&gt;: {&lt;span class=&quot;hljs-title class_&quot;&gt;Accept&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/json&apos;&lt;/span&gt;},\n  &lt;span class=&quot;hljs-attr&quot;&gt;onSuccess&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;transport&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; json = transport.&lt;span class=&quot;hljs-property&quot;&gt;responseText&lt;/span&gt;.evalJSON(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n  }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Calling &lt;code&gt;evalJSON()&lt;/code&gt; with true as the argument sanitizes the incoming string.&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re using &lt;a href=&quot;https://jquery.com/&quot; rel=&quot;noreferrer&quot;&gt;jQuery&lt;/a&gt;, you can also use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;getJSON&lt;/span&gt;(url, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) { });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can do things like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;data.&lt;span class=&quot;hljs-property&quot;&gt;key1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;something&lt;/span&gt;\ndata.&lt;span class=&quot;hljs-property&quot;&gt;key1&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;something_else&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;etc.&lt;/p&gt;\n    ","\n&lt;p&gt;Just for fun, here is a way using a function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; jsonObject = (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;return &apos;&lt;/span&gt; + jsonFormatData))()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n  &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: url,\n  &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;json&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: data,\n  &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: callback\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The callback is passed the returned data, which will be a JavaScript object or array as defined by the JSON structure and parsed using the &lt;code&gt;$.parseJSON()&lt;/code&gt; method.&lt;/p&gt;\n    ","\n&lt;p&gt;Using &lt;code&gt;JSON.parse&lt;/code&gt; is probably the best way.&lt;/p&gt;\n&lt;p&gt;Here&apos;s an example&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonRes = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;students&quot; : [&apos;&lt;/span&gt; +\n          &lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;firstName&quot;:&quot;Michel&quot; , &quot;lastName&quot;:&quot;John&quot; ,&quot;age&quot;:18},&apos;&lt;/span&gt; +\n          &lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;firstName&quot;:&quot;Richard&quot; , &quot;lastName&quot;:&quot;Joe&quot;,&quot;age&quot;:20 },&apos;&lt;/span&gt; +\n          &lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;firstName&quot;:&quot;James&quot; , &quot;lastName&quot;:&quot;Henry&quot;,&quot;age&quot;:15 } ]}&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; studentObject = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonRes);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try using the method with this Data object.  ex:&lt;code&gt;Data=&apos;{result:true,count:1}&lt;/code&gt;&apos;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n  &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;var obj=&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;Data&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(obj.&lt;span class=&quot;hljs-property&quot;&gt;count&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;message&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This method really helps in Nodejs when &lt;strong&gt;you are working with serial port programming&lt;/strong&gt; &lt;/p&gt;\n    ","\n&lt;p&gt;The easiest way using &lt;code&gt;parse()&lt;/code&gt; method:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; response = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;result&quot;:true,&quot;count&quot;:1}&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JsonObject&lt;/span&gt;= &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(response);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can get the values of the JSON elements, for example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myResponseResult = &lt;span class=&quot;hljs-title class_&quot;&gt;JsonObject&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myResponseCount = &lt;span class=&quot;hljs-title class_&quot;&gt;JsonObject&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;count&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using &lt;a href=&quot;http://jquery.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jQuery&lt;/a&gt; as described in the &lt;a href=&quot;http://api.jquery.com/jQuery.parseJSON/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;jQuery.parseJSON()&lt;/code&gt;&lt;/a&gt; documentation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I found a &quot;better&quot; way:&lt;/p&gt;\n\n&lt;p&gt;In CoffeeScript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jqxhr.&lt;span class=&quot;hljs-property&quot;&gt;responseText&lt;/span&gt;)\ndata ||= { &lt;span class=&quot;hljs-attr&quot;&gt;message&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Server error, please retry&apos;&lt;/span&gt; }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In Javascript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n  data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jqxhr.&lt;span class=&quot;hljs-property&quot;&gt;responseText&lt;/span&gt;);\n} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (_error) {}\n\ndata || (data = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;message&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Server error, please retry&apos;&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;JSON parsing is always a pain. If the input is not as expected it throws an error and crashes what you are doing. &lt;/p&gt;\n\n&lt;p&gt;You can use the following tiny function to safely parse your input. It always turns an object even if the input is not valid or is already an object which is better for most cases:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;safeParse&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;input, def&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Convert null to empty object&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!input) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; def || {};\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(input) === &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Object]&apos;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; input;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(input);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (e) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; def || {};\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Parse the JSON string with &lt;code&gt;JSON.parse()&lt;/code&gt;, and the data becomes a JavaScript object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonString)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here, JSON represents to process JSON dataset.&lt;/p&gt;\n\n&lt;p&gt;Imagine we received this text from a web server:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;name&quot;:&quot;John&quot;, &quot;age&quot;:30, &quot;city&quot;:&quot;New York&quot;}&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To parse into a JSON object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;name&quot;:&quot;John&quot;, &quot;age&quot;:30, &quot;city&quot;:&quot;New York&quot;}&apos;&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here &lt;code&gt;obj&lt;/code&gt; is the respective JSON object which looks like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{ &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;city&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;New York&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To fetch a value use the &lt;code&gt;.&lt;/code&gt; operator:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;obj.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// John&lt;/span&gt;\nobj.&lt;span class=&quot;hljs-property&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//30&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Convert a JavaScript object into a string with &lt;code&gt;JSON.stringify()&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;json.parse will change into object.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;JSON.parse()&lt;/code&gt; converts any JSON string passed into the function into a JSON object.&lt;/p&gt;\n\n&lt;p&gt;To understand it better, press &lt;kbd&gt;F12&lt;/kbd&gt; to open &quot;Inspect Element&quot; in your browser and go to the console to write the following commands:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; response = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;result&quot;:true,&quot;count&quot;:1}&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//sample json object(string form)&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(response); &lt;span class=&quot;hljs-comment&quot;&gt;//converts passed string to JSON Object.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now run the command:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(response));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You&apos;ll get output as an Object &lt;code&gt;{result: true, count: 1}&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;In order to use that Object, you can assign it to the variable, maybe &lt;code&gt;obj&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(response);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;By using &lt;code&gt;obj&lt;/code&gt; and the dot (&lt;code&gt;.&lt;/code&gt;) operator you can access properties of the JSON object.&lt;/p&gt;\n\n&lt;p&gt;Try to run the command:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(obj.&lt;span class=&quot;hljs-property&quot;&gt;result&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Official documentation&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;JSON.parse()&lt;/code&gt; method parses a JSON string, constructing the JavaScript value or object described by the string. An optional &lt;code&gt;reviver&lt;/code&gt; function can be provided to perform a transformation on the resulting object before it is returned.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(text[, reviver])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;text&lt;/code&gt;\n: The string to parse as JSON. See the JSON object for a description of JSON syntax.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;reviver (optional)&lt;/code&gt;\n: If a function, this prescribes how the value originally produced by parsing is transformed, before being returned.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Return value&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The Object corresponding to the given JSON text.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Exceptions&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Throws a SyntaxError exception if the string to parse is not valid JSON.&lt;/p&gt;\n    ","\n&lt;p&gt;Converting the object to JSON, and then parsing it, works for me, like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(object))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If we have a string like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;status\\&quot;:1,\\&quot;token\\&quot;:\\&quot;65b4352b2dfc4957a09add0ce5714059\\&quot;}&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then we can simply use &lt;code&gt;JSON.parse&lt;/code&gt; twice to convert this string to a JSON object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sampleString = &lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;status\\&quot;:1,\\&quot;token\\&quot;:\\&quot;65b4352b2dfc4957a09add0ce5714059\\&quot;}&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonString= &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(sampleString)\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonObject= &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonString)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And we can extract values from the JSON object using:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// instead of last JSON.parse:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; { status, token } = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The result will be:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;status = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; and token = 65b4352b2dfc4957a09add0ce5714059\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Performance&lt;/h1&gt;\n&lt;p&gt;There are already good answer for this question, but I was curious about performance and today 2020.09.21 I conduct tests on MacOs HighSierra 10.13.6 on Chrome v85, Safari v13.1.2 and Firefox v80 for chosen solutions.&lt;/p&gt;\n&lt;h2&gt;Results&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;eval/Function&lt;/code&gt; (A,B,C) approach is fast on Chrome (but for big-deep object N=1000 they crash: &quot;maximum stack call exceed)&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;eval&lt;/code&gt; (A) is fast/medium fast on all browsers&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;JSON.parse&lt;/code&gt; (D,E) are fastest on Safari and Firefox&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/Wzn1w.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/Wzn1w.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h2&gt;Details&lt;/h2&gt;\n&lt;p&gt;I perform 4 tests cases:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;for small shallow object &lt;a href=&quot;https://jsbench.me/ipkf9kvabu/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;for small deep object &lt;a href=&quot;https://jsbench.me/57kf9ldcel/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;for big shallow object &lt;a href=&quot;https://jsbench.me/5lkf9l9slg/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;for big deep object &lt;a href=&quot;https://jsbench.me/s6kf9lghxa/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Object used in above tests came from &lt;a href=&quot;https://stackoverflow.com/a/61523278/860099&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj_ShallowSmall = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;field0&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;field1&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;field2&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;field3&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;field4&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;field5&lt;/span&gt;: [],\n  &lt;span class=&quot;hljs-attr&quot;&gt;field6&lt;/span&gt;: {},\n  &lt;span class=&quot;hljs-attr&quot;&gt;field7&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;text7&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;field8&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;text8&quot;&lt;/span&gt;,\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj_DeepSmall = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;level0&lt;/span&gt;: {\n   &lt;span class=&quot;hljs-attr&quot;&gt;level1&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-attr&quot;&gt;level2&lt;/span&gt;: {\n     &lt;span class=&quot;hljs-attr&quot;&gt;level3&lt;/span&gt;: {\n      &lt;span class=&quot;hljs-attr&quot;&gt;level4&lt;/span&gt;: {\n       &lt;span class=&quot;hljs-attr&quot;&gt;level5&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-attr&quot;&gt;level6&lt;/span&gt;: {\n         &lt;span class=&quot;hljs-attr&quot;&gt;level7&lt;/span&gt;: {\n          &lt;span class=&quot;hljs-attr&quot;&gt;level8&lt;/span&gt;: {\n           &lt;span class=&quot;hljs-attr&quot;&gt;level9&lt;/span&gt;: [[[[[[[[[[&lt;span class=&quot;hljs-string&quot;&gt;&apos;abc&apos;&lt;/span&gt;]]]]]]]]]],\n  }}}}}}}}},\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj_ShallowBig = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;fill&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a,c,i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (a[&lt;span class=&quot;hljs-string&quot;&gt;&apos;field&apos;&lt;/span&gt;+i]=&lt;span class=&quot;hljs-title function_&quot;&gt;getField&lt;/span&gt;(i),a) ,{});\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj_DeepBig = &lt;span class=&quot;hljs-title function_&quot;&gt;genDeepObject&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// ------------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Show objects&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// ------------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj_ShallowSmall:&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj_ShallowSmall));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj_DeepSmall:&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj_DeepSmall));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj_ShallowBig:&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj_ShallowBig));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;obj_DeepBig:&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj_DeepBig));\n\n\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// ------------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// HELPERS&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// ------------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getField&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;k&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i=k%&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; k;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {};  \n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i&amp;gt;=&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;+k;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;genDeepObject&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;N&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// generate: {level0:{level1:{...levelN: {end:[[[...N-times...[&apos;abc&apos;]...]]] }}}...}}}&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; obj={};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; o=obj;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; a=arr;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;N; i++) {\n    o[&lt;span class=&quot;hljs-string&quot;&gt;&apos;level&apos;&lt;/span&gt;+i]={};\n    o=o[&lt;span class=&quot;hljs-string&quot;&gt;&apos;level&apos;&lt;/span&gt;+i];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; aa=[];\n    a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(aa);\n    a=aa;\n  }\n\n  a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]=&lt;span class=&quot;hljs-string&quot;&gt;&apos;abc&apos;&lt;/span&gt;;\n  o[&lt;span class=&quot;hljs-string&quot;&gt;&apos;end&apos;&lt;/span&gt;]=arr;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj;\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Below snippet presents chosen solutions&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// src: https://stackoverflow.com/q/45015/860099&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;json&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&quot;&lt;/span&gt; + json + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// https://stackoverflow.com/a/26377600/860099&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;B&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;json&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;return (&apos;&lt;/span&gt;+json+&lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;))()\n}\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// improved https://stackoverflow.com/a/26377600/860099&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;C&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;json&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;return (&apos;&lt;/span&gt;+json+&lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;)()\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// src: https://stackoverflow.com/a/5686237/860099&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;D&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;json&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(json);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// src: https://stackoverflow.com/a/233630/860099&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;E&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;json&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $.&lt;span class=&quot;hljs-title function_&quot;&gt;parseJSON&lt;/span&gt;(json)\n}\n\n\n\n \n&lt;span class=&quot;hljs-comment&quot;&gt;// --------------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// TEST&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// --------------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; json = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{&quot;a&quot;:&quot;abc&quot;,&quot;b&quot;:&quot;123&quot;,&quot;d&quot;:[1,2,3],&quot;e&quot;:{&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3}}&apos;&lt;/span&gt;;\n\n[A,B,C,D,E].&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;f&lt;/span&gt;=&amp;gt;&lt;/span&gt; {  \n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(\n    f.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(json))\n  )})&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\nThis shippet only presents functions used in performance tests - it not perform tests itself!&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;And here are example results for chrome&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/mzfaY.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/mzfaY.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Older question, I know, however nobody notice this solution by using &lt;code&gt;new Function()&lt;/code&gt;, an anonymous function that returns the data. &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Just an example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; oData = &lt;span class=&quot;hljs-string&quot;&gt;&apos;test1:&quot;This is my object&quot;,test2:&quot;This is my object&quot;&apos;&lt;/span&gt;;\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; oData !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt; )\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n   oData = (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;return {&apos;&lt;/span&gt;+oData+&lt;span class=&quot;hljs-string&quot;&gt;&apos;};&apos;&lt;/span&gt;))();\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e) { oData=&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; }\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; oData !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;object&apos;&lt;/span&gt; )\n  { &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;Error in code&apos;&lt;/span&gt; ); }\n &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( oData.&lt;span class=&quot;hljs-property&quot;&gt;test1&lt;/span&gt; );\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( oData.&lt;span class=&quot;hljs-property&quot;&gt;test2&lt;/span&gt; );\n      }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;This is a little more safe because it executes inside a function and do not compile in your code directly. So if there is a function declaration inside it, it will not be bound to the default window object. &lt;/p&gt;\n\n&lt;p&gt;I use this to &apos;compile&apos; configuration settings of DOM elements (for example the data attribute) simple and fast.  &lt;/p&gt;\n    ","\n&lt;h2&gt;Summary:&lt;/h2&gt;\n\n&lt;p&gt;Javascript (both browser and NodeJS) have a built in &lt;code&gt;JSON&lt;/code&gt; object. On this Object are 2 convenient methods for dealing with &lt;code&gt;JSON&lt;/code&gt;. They are the following:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;      Takes &lt;code&gt;JSON&lt;/code&gt; as argument, returns JS object&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;  Takes JS object as argument returns &lt;code&gt;JSON&lt;/code&gt; object&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Other applications:&lt;/h2&gt;\n\n&lt;p&gt;Besides for very conveniently dealing with &lt;code&gt;JSON&lt;/code&gt; they have can be used for other means.  The combination of both &lt;code&gt;JSON&lt;/code&gt; methods allows us to make very easy make deep clones of arrays or objects. For example:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; ,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; newArr = arr1.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;();\n\narr1[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;changed&apos;&lt;/span&gt;; \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(newArr); &lt;span class=&quot;hljs-comment&quot;&gt;// not a deep clone&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr2 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; ,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; newArrDeepclone = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr2));\n\narr2[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&apos;changed&apos;&lt;/span&gt;; \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(newArrDeepclone); &lt;span class=&quot;hljs-comment&quot;&gt;// A deep clone, values unchanged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You also can use &lt;code&gt;reviver&lt;/code&gt; function to filter.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(jsonString, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;reviver&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-comment&quot;&gt;//your code here to filter&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more information read &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;JSON.parse&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Just to the cover parse for different input types&lt;/p&gt;\n\n&lt;p&gt;Parse the data with JSON.parse(), and the data becomes a JavaScript object.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;name&quot;:&quot;John&quot;, &quot;age&quot;:30, &quot;city&quot;:&quot;New York&quot;}&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When using the JSON.parse() on a JSON derived from an array, the method will return a JavaScript array, instead of a JavaScript object.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArr = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;responseText&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(myArr[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Date objects are not allowed in JSON.\nFor Dates do somthing like this&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;name&quot;:&quot;John&quot;, &quot;birth&quot;:&quot;1986-12-14&quot;, &quot;city&quot;:&quot;New York&quot;}&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(text);\nobj.&lt;span class=&quot;hljs-property&quot;&gt;birth&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(obj.&lt;span class=&quot;hljs-property&quot;&gt;birth&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Functions are not allowed in JSON.\nIf you need to include a function, write it as a string.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;hljs-string&quot;&gt;&apos;{ &quot;name&quot;:&quot;John&quot;, &quot;age&quot;:&quot;function () {return 30;}&quot;, &quot;city&quot;:&quot;New York&quot;}&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(text);\nobj.&lt;span class=&quot;hljs-property&quot;&gt;age&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&quot;&lt;/span&gt; + obj.&lt;span class=&quot;hljs-property&quot;&gt;age&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot;)&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * Safely turning a JSON string into an object\n *\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; {&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;} &lt;span class=&quot;hljs-variable&quot;&gt;str&lt;/span&gt; - JSON String\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@returns&lt;/span&gt; deserialized object, false if error\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;jsonParse&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;str&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; data = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    data = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(str);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (err) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; data;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this. This one is written in typescript.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;safeJsonParse&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;str: string&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(str);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (e) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; str;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":498,"title":"Safely turning a JSON string into an object","content":"\n                \n&lt;p&gt;Given a string of JSON data, how can I safely turn that string into a JavaScript object?&lt;/p&gt;\n\n&lt;p&gt;Obviously I can do this unsafely with something like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&quot;&lt;/span&gt; + json + &lt;span class=&quot;hljs-string&quot;&gt;&apos;)&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but that leaves me vulnerable to the JSON string containing other code, which it seems very dangerous to simply eval.&lt;/p&gt;\n    ","slug":"safely-turning-a-json-string-into-an-object-1657388194824","postType":"QUESTION","createdAt":"2022-07-09T17:36:34.000Z","updatedAt":"2022-07-09T17:36:34.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Why are floating point numbers inaccurate?","slug":"why-are-floating-point-numbers-inaccurate-1657387346111"},{"title":"Why do I need to override the equals and hashCode methods in Java?","slug":"why-do-i-need-to-override-the-equals-and-hashcode-methods-in-java-1657388359877"},{"title":"Convert Rows to columns using 'Pivot' in SQL Server","slug":"convert-rows-to-columns-using-'pivot'-in-sql-server-1657388372528"},{"title":"Tkinter: AttributeError: NoneType object has no attribute <attribute name>","slug":"tkinter:-attributeerror:-nonetype-object-has-no-attribute-lessattribute-namegreater-1657385472410"},{"title":"How to create a MySQL hierarchical recursive query?","slug":"how-to-create-a-mysql-hierarchical-recursive-query-1657387662163"},{"title":"What is the difference between client-side and server-side programming?","slug":"what-is-the-difference-between-client-side-and-server-side-programming-1657384372926"},{"title":"Convert one date format into another in PHP","slug":"convert-one-date-format-into-another-in-php-1657384566234"},{"title":"\"Thinking in AngularJS\" if I have a jQuery background? [closed]","slug":"\"thinking-in-angularjs\"-if-i-have-a-jquery-background-closed-1657384761159"},{"title":"Flatten an irregular list of lists","slug":"flatten-an-irregular-list-of-lists-1657387315571"},{"title":"How can I group an array of objects by key?","slug":"how-can-i-group-an-array-of-objects-by-key-1657388065372"},{"title":"event.preventDefault() vs. return false","slug":"event.preventdefault()-vs.-return-false-1657387458377"},{"title":"How do I compare strings in Java?","slug":"how-do-i-compare-strings-in-java-1657384243187"},{"title":"How to make function decorators and chain them together?","slug":"how-to-make-function-decorators-and-chain-them-together-1657388180803"},{"title":"Maintain the aspect ratio of a div with CSS","slug":"maintain-the-aspect-ratio-of-a-div-with-css-1657387513615"},{"title":"addEventListener vs onclick","slug":"addeventlistener-vs-onclick-1657388191429"},{"title":"How do you use a variable in a regular expression?","slug":"how-do-you-use-a-variable-in-a-regular-expression-1657387939007"},{"title":"Why is \"using namespace std;\" considered bad practice?","slug":"why-is-\"using-namespace-std\"-considered-bad-practice-1657384296377"},{"title":"Why is my variable unaltered after I modify it inside of a function? - Asynchronous code reference","slug":"why-is-my-variable-unaltered-after-i-modify-it-inside-of-a-function-asynchronous-code-reference-1657384288966"},{"title":"How can I fix 'android.os.NetworkOnMainThreadException'?","slug":"how-can-i-fix-'android.os.networkonmainthreadexception'-1657384454963"},{"title":"How do I split a delimited string so I can access individual items?","slug":"how-do-i-split-a-delimited-string-so-i-can-access-individual-items-1657388042385"}]},"__N_SSG":true}