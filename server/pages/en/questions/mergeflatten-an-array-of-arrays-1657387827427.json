{"pageProps":{"data":{"answer":["\n&lt;p&gt;You can use &lt;code&gt;concat&lt;/code&gt; to merge arrays:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrays = [\n  [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]\n];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; merged = [].&lt;span class=&quot;hljs-property&quot;&gt;concat&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;([], arrays);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(merged);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Using the &lt;code&gt;apply&lt;/code&gt; method of &lt;code&gt;concat&lt;/code&gt; will just take the second parameter as an array, so the last line is identical to this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; merged2 = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;([&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;There is also the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.prototype.flat()&lt;/code&gt;&lt;/a&gt; method (introduced in ES2019) which you could use to flatten the arrays, although &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat#Browser_compatibility&quot; rel=&quot;noreferrer&quot;&gt;it is only available in Node.js starting with version 11, and not at all in Internet Explorer&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrays = [\n      [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;],\n      [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;],\n      [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;],\n      [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;],\n      [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;],\n      [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;],\n      [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]\n    ];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; merge3 = arrays.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//The depth level specifying how deep a nested array structure should be flattened. Defaults to 1.&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(merge3);\n    &lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s a short function that uses some of the newer JavaScript array methods to flatten an n-dimensional array.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;flat, toFlatten&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; flat.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(toFlatten) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(toFlatten) : toFlatten);\n  }, []);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 4, 5]&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([[[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;1.1&lt;/span&gt;]], &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 1.1, 2, 3, 4, 5]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There is a confusingly hidden method, which constructs a new array without mutating the original one:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; oldArray = [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;concat&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;([], oldArray);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(newArray); &lt;span class=&quot;hljs-comment&quot;&gt;// [ 1, 2, 3, 4 ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;It can be best done by javascript reduce function.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrays = [[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$0&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$15&quot;&lt;/span&gt;],[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$3&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$75&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$5&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$100&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$7&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$3&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$75&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$5&quot;&lt;/span&gt;]];\n\narrays = arrays.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;){\n     &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(b);\n}, []);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or, with ES2015:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arrays = arrays.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(b), []);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/zAzaH/&quot; rel=&quot;noreferrer&quot;&gt;js-fiddle&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?v=control&quot; rel=&quot;noreferrer&quot;&gt;Mozilla docs&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There&apos;s a new native method called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat&quot; rel=&quot;noreferrer&quot;&gt;flat&lt;/a&gt; to do this exactly. &lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;(As of late 2019, &lt;code&gt;flat&lt;/code&gt; is now published in the ECMA 2019 standard, and &lt;code&gt;core-js@3&lt;/code&gt; (babel&apos;s library)  includes it in their polyfill &lt;a href=&quot;https://github.com/zloirock/core-js/blob/master/docs/2019-03-19-core-js-3-babel-and-a-look-into-the-future.md#what-changed-in-core-js3&quot; rel=&quot;noreferrer&quot;&gt;library&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\narr1.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(); \n&lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 4]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr2 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]];\narr2.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;();\n&lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 4, [5, 6]]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Flatten 2 levels deep&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr3 = [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]], &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]];\narr3.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// [2, 2, 5, 5, 5, [6], 7];&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Flatten all levels&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr4 = [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]], &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]];\narr4.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Infinity&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// [2, 2, 5, 5, 5, 6, 7];&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Most of the answers here don&apos;t work on huge (e.g. 200 000 elements) arrays, and even if they do, they&apos;re slow. &lt;a href=&quot;https://stackoverflow.com/a/25804569/3853934&quot;&gt;polkovnikov.ph&apos;s answer&lt;/a&gt; has the best performance, but it doesn&apos;t work for deep flattening.&lt;/p&gt;\n\n&lt;p&gt;Here is &lt;strong&gt;the fastest solution, which works also on arrays with multiple levels of nesting&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; flatten = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, result = []&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, length = arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; length; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; value = arr[i];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(value)) {\n      &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(value, result);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      result.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(value);\n    }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Examples&lt;/h2&gt;\n\n&lt;h3&gt;Huge arrays&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;200000&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;fill&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It handles huge arrays just fine. On my machine this code takes about 14 ms to execute.&lt;/p&gt;\n\n&lt;h3&gt;Nested arrays&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;fill&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;fill&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;fill&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]))));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It works with nested arrays. This code produces &lt;code&gt;[1, 1, 1, 1, 1, 1, 1, 1]&lt;/code&gt;.&lt;/p&gt;\n\n&lt;h3&gt;Arrays with different levels of nesting&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]]]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It doesn&apos;t have any problems with flattening arrays like this one.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Update: it turned out that this solution doesn&apos;t work with large arrays. It you&apos;re looking for a better, faster solution, check out &lt;a href=&quot;https://stackoverflow.com/a/39000004/3853934&quot;&gt;this answer&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(...arr)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Is simply expands &lt;code&gt;arr&lt;/code&gt; and passes it as arguments to &lt;code&gt;concat()&lt;/code&gt;, which merges all the arrays into one. It&apos;s equivalent to &lt;code&gt;[].concat.apply([], arr)&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can also try this for deep flattening:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deepFlatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(           &lt;span class=&quot;hljs-comment&quot;&gt;// return shalowly flattened array&lt;/span&gt;\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;=&amp;gt;&lt;/span&gt;             &lt;span class=&quot;hljs-comment&quot;&gt;// with each x in array&lt;/span&gt;\n      &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(x)      &lt;span class=&quot;hljs-comment&quot;&gt;// is x an array?&lt;/span&gt;\n        ? &lt;span class=&quot;hljs-title function_&quot;&gt;deepFlatten&lt;/span&gt;(x)    &lt;span class=&quot;hljs-comment&quot;&gt;// if yes, return deeply flattened x&lt;/span&gt;\n        : x                 &lt;span class=&quot;hljs-comment&quot;&gt;// if no, return just x&lt;/span&gt;\n    )\n  )\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See demo on &lt;a href=&quot;https://jsbin.com/pimici/2/edit?js,console&quot; rel=&quot;noreferrer&quot;&gt;JSBin&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;References for ECMAScript 6 elements used in this answer:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot; rel=&quot;noreferrer&quot;&gt;Spread operator&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noreferrer&quot;&gt;Arrow functions&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Side note: methods like &lt;code&gt;find()&lt;/code&gt; and arrow functions are not supported by all browsers, but it doesn&apos;t mean that you can&apos;t use these features right now. Just use &lt;a href=&quot;https://babeljs.io/&quot; rel=&quot;noreferrer&quot;&gt;Babel&lt;/a&gt;  it transforms ES6 code into ES5.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use &lt;a href=&quot;http://underscorejs.org/&quot; rel=&quot;noreferrer&quot;&gt;Underscore&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\n\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(x); &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [1, 2, 3, 4]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Generic procedures mean we don&apos;t have to rewrite complexity each time we need to utilize a specific behaviour.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;concatMap&lt;/code&gt; (or &lt;code&gt;flatMap&lt;/code&gt;) is exactly what we need in this situation.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// concat :: ([a],[a]) -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;xs,ys&lt;/span&gt;) =&amp;gt;\n  xs.&lt;span class=&quot;hljs-property&quot;&gt;concat&lt;/span&gt; (ys)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// concatMap :: (a -&amp;gt; [b]) -&amp;gt; [a] -&amp;gt; [b]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;concatMap&lt;/span&gt; = f =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;xs&lt;/span&gt; =&amp;gt;&lt;/span&gt;\n  xs.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(f).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(concat, [])\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// id :: a -&amp;gt; a&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;id&lt;/span&gt; = x =&amp;gt;\n  x\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// flatten :: [[a]] -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; flatten =\n  concatMap (id)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// your sample data&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data =\n  [[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]]\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt; (flatten (data))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;h3&gt;foresight&lt;/h3&gt;\n\n&lt;p&gt;And yes, you guessed it correctly, it only flattens &lt;strong&gt;one&lt;/strong&gt; level, which is exactly how it &lt;em&gt;should&lt;/em&gt; work&lt;/p&gt;\n\n&lt;p&gt;Imagine some data set like this&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Player :: (String, Number) -&amp;gt; Player&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Player&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;name,number&lt;/span&gt;) =&amp;gt;\n  [ name, number ]\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// team :: ( . Player) -&amp;gt; Team&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Team&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;...players&lt;/span&gt;) =&amp;gt;\n  players\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Game :: (Team, Team) -&amp;gt; Game&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Game&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;teamA, teamB&lt;/span&gt;) =&amp;gt;\n  [ teamA, teamB ]\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// sample data&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; teamA =\n  &lt;span class=&quot;hljs-title class_&quot;&gt;Team&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Player&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;bob&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;), &lt;span class=&quot;hljs-title class_&quot;&gt;Player&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;alice&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; teamB =\n  &lt;span class=&quot;hljs-title class_&quot;&gt;Team&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Player&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;ricky&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;), &lt;span class=&quot;hljs-title class_&quot;&gt;Player&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;julian&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; game =\n  &lt;span class=&quot;hljs-title class_&quot;&gt;Game&lt;/span&gt; (teamA, teamB)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt; (game)\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ [ [ &apos;bob&apos;, 5 ], [ &apos;alice&apos;, 6 ] ],&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//   [ [ &apos;ricky&apos;, 4 ], [ &apos;julian&apos;, 2 ] ] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Ok, now say we want to print a roster that shows all the players that will be participating in &lt;code&gt;game&lt;/code&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;gamePlayers&lt;/span&gt; = game =&amp;gt;\n  flatten (game)\n\ngamePlayers (game)\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [ [ &apos;bob&apos;, 5 ], [ &apos;alice&apos;, 6 ], [ &apos;ricky&apos;, 4 ], [ &apos;julian&apos;, 2 ] ]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If our &lt;code&gt;flatten&lt;/code&gt; procedure flattened nested arrays too, we&apos;d end up with this garbage result &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;gamePlayers&lt;/span&gt; = game =&amp;gt;\n  &lt;span class=&quot;hljs-title function_&quot;&gt;badGenericFlatten&lt;/span&gt;(game)\n\ngamePlayers (game)\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [ &apos;bob&apos;, 5, &apos;alice&apos;, 6, &apos;ricky&apos;, 4, &apos;julian&apos;, 2 ]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;rollin&apos; deep, baby&lt;/h3&gt;\n\n&lt;p&gt;That&apos;s not to say sometimes you don&apos;t want to flatten nested arrays, too  only that shouldn&apos;t be the default behaviour.&lt;/p&gt;\n\n&lt;p&gt;We can make a &lt;code&gt;deepFlatten&lt;/code&gt; procedure with ease &lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// concat :: ([a],[a]) -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;xs,ys&lt;/span&gt;) =&amp;gt;\n  xs.&lt;span class=&quot;hljs-property&quot;&gt;concat&lt;/span&gt; (ys)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// concatMap :: (a -&amp;gt; [b]) -&amp;gt; [a] -&amp;gt; [b]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;concatMap&lt;/span&gt; = f =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;xs&lt;/span&gt; =&amp;gt;&lt;/span&gt;\n  xs.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(f).&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(concat, [])\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// id :: a -&amp;gt; a&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;id&lt;/span&gt; = x =&amp;gt;\n  x\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// flatten :: [[a]] -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; flatten =\n  concatMap (id)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// deepFlatten :: [[a]] -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; deepFlatten =\n  concatMap (&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isArray&lt;/span&gt; (x) ? deepFlatten (x) : x)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// your sample data&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data =\n  [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]], [&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;]], &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt; (flatten (data))\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 0, 1, [ 2, [ 3, [ 4, 5 ], 6 ] ], 7, [ 8 ], 9 ]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt; (deepFlatten (data))\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;There. Now you have a tool for each job  one for squashing one level of nesting, &lt;code&gt;flatten&lt;/code&gt;, and one for obliterating all nesting &lt;code&gt;deepFlatten&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Maybe you can call it &lt;code&gt;obliterate&lt;/code&gt; or &lt;code&gt;nuke&lt;/code&gt; if you don&apos;t like the name &lt;code&gt;deepFlatten&lt;/code&gt;.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Don&apos;t iterate twice !&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Of course the above implementations are clever and concise, but using a &lt;code&gt;.map&lt;/code&gt; followed by a call to &lt;code&gt;.reduce&lt;/code&gt; means we&apos;re actually doing more iterations than necessary&lt;/p&gt;\n\n&lt;p&gt;Using a trusty combinator I&apos;m calling &lt;code&gt;mapReduce&lt;/code&gt; helps keep the iterations to a minium; it takes a mapping function &lt;code&gt;m :: a -&amp;gt; b&lt;/code&gt;, a reducing function &lt;code&gt;r :: (b,a) -&amp;gt;b&lt;/code&gt; and returns a new reducing function - this combinator is at the heart of &lt;em&gt;transducers&lt;/em&gt;; if you&apos;re interested, &lt;a href=&quot;https://stackoverflow.com/search?q=user%3A633183+transducer&quot;&gt;I&apos;ve written other answers about them&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// mapReduce = (a -&amp;gt; b, (b,a) -&amp;gt; b, (b,a) -&amp;gt; b)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;mapReduce&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;m,r&lt;/span&gt;) =&amp;gt;\n  &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc,x&lt;/span&gt;) =&amp;gt;&lt;/span&gt; r (acc, m (x))\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// concatMap :: (a -&amp;gt; [b]) -&amp;gt; [a] -&amp;gt; [b]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;concatMap&lt;/span&gt; = f =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;xs&lt;/span&gt; =&amp;gt;&lt;/span&gt;\n  xs.&lt;span class=&quot;hljs-property&quot;&gt;reduce&lt;/span&gt; (mapReduce (f, concat), [])\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// concat :: ([a],[a]) -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;xs,ys&lt;/span&gt;) =&amp;gt;\n  xs.&lt;span class=&quot;hljs-property&quot;&gt;concat&lt;/span&gt; (ys)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// id :: a -&amp;gt; a&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;id&lt;/span&gt; = x =&amp;gt;\n  x\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// flatten :: [[a]] -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; flatten =\n  concatMap (id)\n  \n&lt;span class=&quot;hljs-comment&quot;&gt;// deepFlatten :: [[a]] -&amp;gt; [a]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; deepFlatten =\n  concatMap (&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isArray&lt;/span&gt; (x) ? deepFlatten (x) : x)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// your sample data&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data =\n  [ [ [ &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; ],\n      [ &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; ] ],\n    [ [ &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; ],\n      [ &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt; ] ] ]\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt; (flatten (data))\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ [ 1. 2 ], [ 3, 4 ], [ 5, 6 ], [ 7, 8 ] ]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt; (deepFlatten (data))\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 1, 2, 3, 4, 5, 6, 7, 8 ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;To flatten an array of single element arrays, you don&apos;t need to import a library, a simple loop is both the simplest and &lt;a href=&quot;http://jsperf.com/flatten-constant-depht-array&quot; rel=&quot;noreferrer&quot;&gt;most efficient&lt;/a&gt; solution :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n  a[i] = a[i][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To downvoters: please read the question, don&apos;t downvote because it doesn&apos;t suit your very different problem. This solution is both the fastest and simplest for the asked question.&lt;/p&gt;\n    ","\n&lt;p&gt;A solution for the more general case, when you may have some non-array elements in your array.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flattenArrayOfArrays&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, r&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!r){ r = []}\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(a[i].&lt;span class=&quot;hljs-property&quot;&gt;constructor&lt;/span&gt; == &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;){\n            &lt;span class=&quot;hljs-title function_&quot;&gt;flattenArrayOfArrays&lt;/span&gt;(a[i], r);\n        }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n            r.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(a[i]);\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another ECMAScript 6 solution in functional style:&lt;/p&gt;\n\n&lt;p&gt;Declare a function: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt; = arr =&amp;gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n  &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(b) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(b) : b), []\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and use it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;( [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]]] ) &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [1,2,3,4,5,6]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt; = arr =&amp;gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(\n         &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(b) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(b) : b), []\n       );\n\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;]) )&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Consider also a native function &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat&quot; rel=&quot;noreferrer&quot;&gt;Array.prototype.flat()&lt;/a&gt; (proposal for ES6) available in last releases of modern browsers. &lt;em&gt;Thanks to @(Константин Ван) and @(Mark Amery) mentioned it in the comments.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;flat&lt;/code&gt; function has one parameter, specifying the expected depth of array nesting, which equals &lt;code&gt;1&lt;/code&gt; by default.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]].&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;();                  &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [1, 2, 3, 4]&lt;/span&gt;\n\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]].&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;();          &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [1, 2, 3, 4, [5, 6]]&lt;/span&gt;\n\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]].&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);         &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [1, 2, 3, 4, 5, 6]&lt;/span&gt;\n\n[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]].&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Infinity&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [1, 2, 3, 4, 5, 6]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;() );\n\narr =  [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;() );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) );\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Infinity&lt;/span&gt;) );&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can also try the new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.flat()&lt;/code&gt;&lt;/a&gt; method. It works in the following manner:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]].&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;()\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;flat()&lt;/code&gt; method creates a new array with all sub-array elements concatenated into it recursively up to the 1 layer of depth (i.e. arrays inside arrays)&lt;/p&gt;\n&lt;p&gt;If you want to also flatten out 3 dimensional or even higher dimensional arrays you simply call the flat method multiple times. For example (3 dimensions):&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]].&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h2&gt;Be careful!&lt;/h2&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.flat()&lt;/code&gt;&lt;/a&gt; method is relatively new. Older browsers like ie might not have implemented the method. If you want you code to work on all browsers you might have to transpile your JS to an older version. Check for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat&quot; rel=&quot;noreferrer&quot;&gt;MDN web docs&lt;/a&gt; for current browser compatibility.&lt;/p&gt;\n    ","\n&lt;p&gt;What about using &lt;code&gt;reduce(callback[, initialValue])&lt;/code&gt; method of &lt;code&gt;JavaScript 1.8&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;list.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;p,n&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(n),[]);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Would do the job.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; common = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [...a, ...b], [])\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.flat()&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; for any depth of nested array.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [ [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]]], [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]]]] ];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; flatten = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Infinity&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(flatten)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;check here for browser &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat#Browser_compatibility&quot; rel=&quot;noreferrer&quot;&gt;compatibility&lt;/a&gt; &lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; When &lt;code&gt;Function.prototype.apply&lt;/code&gt; (&lt;code&gt;[].concat.apply([], arrays)&lt;/code&gt;) or the spread operator (&lt;code&gt;[].concat(...arrays)&lt;/code&gt;) is used in order to flatten an array, both can cause stack overflows for large arrays, because every argument of a function is stored on the stack.&lt;/p&gt;\n\n&lt;p&gt;Here is a stack-safe implementation in functional style that weighs up the most important requirements against one another:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;reusability&lt;/li&gt;\n&lt;li&gt;readability&lt;/li&gt;\n&lt;li&gt;conciseness&lt;/li&gt;\n&lt;li&gt;performance&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// small, reusable auxiliary functions:&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;foldl&lt;/span&gt; = f =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;acc&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;xs&lt;/span&gt; =&amp;gt;&lt;/span&gt; xs.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;uncurry&lt;/span&gt;(f), acc); &lt;span class=&quot;hljs-comment&quot;&gt;// aka reduce&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uncurry&lt;/span&gt; = f =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(a) (b);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt; = xs =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;y&lt;/span&gt; =&amp;gt;&lt;/span&gt; xs.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(y);\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// the actual function to flatten an array - a self-explanatory one-line:&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt; = xs =&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;foldl&lt;/span&gt;(concat) ([]) (xs);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// arbitrary array sizes (until the heap blows up :D)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; xs = [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(xs));\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Deriving a recursive solution for deeply nested arrays is trivially now&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// yet more small, reusable auxiliary functions:&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt; = f =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;xs&lt;/span&gt; =&amp;gt;&lt;/span&gt; xs.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(f));\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt; = f =&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(a);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; isArray = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isArray&lt;/span&gt;;\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// the derived recursive function:&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flattenr&lt;/span&gt; = xs =&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(x) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flattenr&lt;/span&gt;(x) : x) (xs));\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; ys = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,],&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flattenr&lt;/span&gt;(ys));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;As soon as you get used to small arrow functions in curried form, function composition and higher order functions, this code reads like prose. Programming then merely consists of putting together small building blocks that always work as expected, because they don&apos;t contain any side effects.&lt;/p&gt;\n    ","\n&lt;h1&gt;ES6 One Line Flatten&lt;/h1&gt;\n\n&lt;p&gt;&lt;em&gt;See &lt;a href=&quot;https://lodash.com/docs/4.17.5#flatten&quot; rel=&quot;noreferrer&quot;&gt;lodash flatten&lt;/a&gt;, &lt;a href=&quot;http://underscorejs.org/#flatten&quot; rel=&quot;noreferrer&quot;&gt;underscore flatten (shallow &lt;code&gt;true&lt;/code&gt;)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, e&lt;/span&gt;) =&amp;gt;&lt;/span&gt; acc.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(e), []);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/10865042/2013580&quot;&gt;or&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [].&lt;span class=&quot;hljs-property&quot;&gt;concat&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;([], arr);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Tested with&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;already flatted&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;expect&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;])).&lt;span class=&quot;hljs-title function_&quot;&gt;toEqual&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]);\n});\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;flats first level&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;expect&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]], &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]])).&lt;span class=&quot;hljs-title function_&quot;&gt;toEqual&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]], &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;ES6 One Line Deep Flatten&lt;/h1&gt;\n\n&lt;p&gt;&lt;em&gt;See &lt;a href=&quot;https://lodash.com/docs/4.17.5#flattenDeep&quot; rel=&quot;noreferrer&quot;&gt;lodash flattenDeep&lt;/a&gt;, &lt;a href=&quot;http://underscorejs.org/#flatten&quot; rel=&quot;noreferrer&quot;&gt;underscore flatten&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flattenDeep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, e&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(e) ? acc.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flattenDeep&lt;/span&gt;(e)) : acc.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(e), []);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Tested with&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;already flatted&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;expect&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flattenDeep&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;])).&lt;span class=&quot;hljs-title function_&quot;&gt;toEqual&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]);\n});\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;flats&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-title function_&quot;&gt;expect&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flattenDeep&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]], &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]])).&lt;span class=&quot;hljs-title function_&quot;&gt;toEqual&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]);\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using the spread operator:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; input = [[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; output = [].&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(...input);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(output); &lt;span class=&quot;hljs-comment&quot;&gt;// --&amp;gt; [&quot;$6&quot;, &quot;$12&quot;, &quot;$25&quot;, &quot;$25&quot;, &quot;$18&quot;, &quot;$22&quot;, &quot;$10&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = [[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;$16&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]]\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = array.&lt;span class=&quot;hljs-title function_&quot;&gt;flat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Infinity&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(a);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you only have arrays with 1 string element:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;]].&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will do the job. Bt that specifically matches your code example.&lt;/p&gt;\n    ","\n&lt;p&gt;I recommend a space-efficient &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*&quot; rel=&quot;noreferrer&quot;&gt;generator function&lt;/a&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;* &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(arr)) &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; arr;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; el &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; arr) &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt;* &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(el);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Example:&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(...&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]]]])); &lt;span class=&quot;hljs-comment&quot;&gt;// 1 2 3 4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif16&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;If desired, create an array of flattened values as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; flattened = [...&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]]]])]; &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 4]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A Haskellesque approach&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;[x,...xs]&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x ? [...&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(x) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatArray&lt;/span&gt;(x) : [x], ...&lt;span class=&quot;hljs-title function_&quot;&gt;flatArray&lt;/span&gt;(xs)] : [];\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; na = [[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]],[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,[[[&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;]]],&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;];\n    fa = &lt;span class=&quot;hljs-title function_&quot;&gt;flatArray&lt;/span&gt;(na);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(fa);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif17&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I have done it using recursion and closures&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; temp = [];\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;recursiveFlatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(arr[i])) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;recursiveFlatten&lt;/span&gt;(arr[i]);\n      } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        temp.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(arr[i]);\n      }\n    }\n  }\n  &lt;span class=&quot;hljs-title function_&quot;&gt;recursiveFlatten&lt;/span&gt;(arr);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; temp;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;ES6 way:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;true&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt; = arr =&amp;gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, next&lt;/span&gt;) =&amp;gt;&lt;/span&gt; acc.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(next) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(next) : next), [])\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; a = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]]]]\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(a))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif18&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;ES5 way for &lt;code&gt;flatten&lt;/code&gt; function with ES3 fallback for N-times nested arrays:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; flatten = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;reduce&lt;/span&gt; &amp;amp;&amp;amp; !!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;isArray&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;prev, next&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; prev.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(next) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(next) : next);\n      }, []);\n    };\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [];\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; len = array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; target;\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (; i &amp;lt; len; i++) {\n        target = array[i];\n        arr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(\n          (&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;toString&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(target) === &lt;span class=&quot;hljs-string&quot;&gt;&apos;[object Array]&apos;&lt;/span&gt;) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(target) : target\n        );\n      }\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n    };\n  }\n}());\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]]]]];\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(a));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif19&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I was goofing with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*&quot; rel=&quot;noreferrer&quot;&gt;ES6 Generators&lt;/a&gt; the other day and wrote &lt;a href=&quot;https://gist.github.com/ashwell/3dcc6702158604978d96&quot; rel=&quot;noreferrer&quot;&gt;this gist&lt;/a&gt;. Which contains...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrayOfArrays=[]&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;* &lt;span class=&quot;hljs-title function_&quot;&gt;flatgen&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; arrayOfArrays ) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;( item )) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt;* &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(item)\n      } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; item\n      }\n    }\n  }\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [...&lt;span class=&quot;hljs-title function_&quot;&gt;flatgen&lt;/span&gt;()];\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; flatArray = &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;([[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]],[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]]);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(flatArray);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Basically I&apos;m creating a generator that loops over the original input array, if it finds an array it uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield*&quot; rel=&quot;noreferrer&quot;&gt;yield*&lt;/a&gt; operator in combination with recursion to continually flatten the internal arrays. If the item is not an array it just &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield&quot; rel=&quot;noreferrer&quot;&gt;yields&lt;/a&gt; the single item. Then using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot; rel=&quot;noreferrer&quot;&gt;ES6 Spread operator&lt;/a&gt; (aka splat operator) I flatten out the generator into a new array instance.&lt;/p&gt;\n\n&lt;p&gt;I haven&apos;t tested the performance of this, but I figure it is a nice simple example of using generators and the yield* operator.&lt;/p&gt;\n\n&lt;p&gt;But again, I was just goofing so I&apos;m sure there are more performant ways to do this.&lt;/p&gt;\n    ","\n&lt;p&gt;just the best solution without lodash&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt; = arr =&amp;gt; [].&lt;span class=&quot;hljs-property&quot;&gt;concat&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;([], arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(item) ? &lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(item) : item))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I would rather transform the whole array, as-is, to a string, but unlike other answers, would do that using &lt;code&gt;JSON.stringify&lt;/code&gt; and not use the &lt;code&gt;toString()&lt;/code&gt; method, which produce an unwanted result.&lt;/p&gt;\n\n&lt;p&gt;With that &lt;code&gt;JSON.stringify&lt;/code&gt; output, all that&apos;s left is to remove all brackets, wrap the result with start &amp;amp; ending brackets yet again, and serve the result with &lt;code&gt;JSON.parse&lt;/code&gt; which brings the string back to &quot;life&quot;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Can handle infinite nested arrays without any speed costs.&lt;/li&gt;\n&lt;li&gt;Can rightly handle Array items which are strings containing commas.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;,[[[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]]],[&lt;span class=&quot;hljs-string&quot;&gt;&quot;3,4&quot;&lt;/span&gt;],&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;hljs-string&quot;&gt;&quot;[&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\[|]/g&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) +&lt;span class=&quot;hljs-string&quot;&gt;&quot;]&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; flattened = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(s);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(flattened)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif20&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;Only for multidimensional Array of Strings/Numbers (not Objects)&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;if you use lodash, you can just use its &lt;code&gt;flatten&lt;/code&gt; method: &lt;a href=&quot;https://lodash.com/docs/4.17.14#flatten&quot; rel=&quot;noreferrer&quot;&gt;https://lodash.com/docs/4.17.14#flatten&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The nice thing about lodash is that it also has methods to flatten the arrays: &lt;/p&gt;\n\n&lt;p&gt;i) recursively: &lt;a href=&quot;https://lodash.com/docs/4.17.14#flattenDeep&quot; rel=&quot;noreferrer&quot;&gt;https://lodash.com/docs/4.17.14#flattenDeep&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;ii) upto n levels of nesting: &lt;a href=&quot;https://lodash.com/docs/4.17.14#flattenDepth&quot; rel=&quot;noreferrer&quot;&gt;https://lodash.com/docs/4.17.14#flattenDepth&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;For example&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; _ = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;lodash&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; pancake =  _.&lt;span class=&quot;hljs-title function_&quot;&gt;flatten&lt;/span&gt;(array)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I think array.flat(Infinity) is a perfect solution. But flat function is a relatively new function and may not run in older versions of browsers. We can use recursive function for solving this.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;A&quot;&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;B&quot;&lt;/span&gt;, [[&lt;span class=&quot;hljs-string&quot;&gt;&quot;B11&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;B12&quot;&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;B131&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;B132&quot;&lt;/span&gt;]], &lt;span class=&quot;hljs-string&quot;&gt;&quot;B2&quot;&lt;/span&gt;]], &lt;span class=&quot;hljs-string&quot;&gt;&quot;C&quot;&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;D&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;E&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;F&quot;&lt;/span&gt;, [&lt;span class=&quot;hljs-string&quot;&gt;&quot;G&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;H&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;I&quot;&lt;/span&gt;]]]\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flatArray&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) =&amp;gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = []\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; arr) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(item)) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; subRes = &lt;span class=&quot;hljs-title function_&quot;&gt;flatArray&lt;/span&gt;(item)\n            res.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(...subRes)\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            res.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(item)\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; res\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;flatArray&lt;/span&gt;(arr))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif21&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    "],"id":387,"title":"Merge/flatten an array of arrays","content":"\n                \n&lt;p&gt;I have a JavaScript array like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$18&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$22&quot;&lt;/span&gt;], [&lt;span class=&quot;hljs-string&quot;&gt;&quot;$10&quot;&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How would I go about merging the separate inner arrays into one like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;$6&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$12&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$25&quot;&lt;/span&gt;, ...]\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"mergeflatten-an-array-of-arrays-1657387827427","postType":"QUESTION","createdAt":"2022-07-09T17:30:27.000Z","updatedAt":"2022-07-09T17:30:27.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Why are floating point numbers inaccurate?","slug":"why-are-floating-point-numbers-inaccurate-1657387346111"},{"title":"How can I upload files to a server using JSP/Servlet?","slug":"how-can-i-upload-files-to-a-server-using-jspservlet-1657384847658"},{"title":"Can I bind an array to an IN() condition in a PDO query?","slug":"can-i-bind-an-array-to-an-in()-condition-in-a-pdo-query-1657388382858"},{"title":"How does Access-Control-Allow-Origin header work?","slug":"how-does-access-control-allow-origin-header-work-1657384881723"},{"title":"How to remove the space between inline/inline-block elements?","slug":"how-to-remove-the-space-between-inlineinline-block-elements-1657384532273"},{"title":"javascript function doesn't work when link is clicked","slug":"javascript-function-doesn't-work-when-link-is-clicked-1657387767488"},{"title":"What is the (function() { } )() construct in JavaScript?","slug":"what-is-the-(function()-)()-construct-in-javascript-1657385508348"},{"title":"Creating multiline strings in JavaScript","slug":"creating-multiline-strings-in-javascript-1657388025414"},{"title":"How can I vertically center a div element for all browsers using CSS?","slug":"how-can-i-vertically-center-a-div-element-for-all-browsers-using-css-1657385488425"},{"title":"How can I parse a JSON file with PHP? [duplicate]","slug":"how-can-i-parse-a-json-file-with-php-duplicate-1657388002325"},{"title":"With arrays, why is it the case that a[5] == 5[a]?","slug":"with-arrays-why-is-it-the-case-that-a5-5a-1657387956216"},{"title":"How do you get the footer to stay at the bottom of a Web page?","slug":"how-do-you-get-the-footer-to-stay-at-the-bottom-of-a-web-page-1657387817544"},{"title":"Convert form data to JavaScript object with jQuery","slug":"convert-form-data-to-javascript-object-with-jquery-1657388036834"},{"title":"Dynamically access object property using variable","slug":"dynamically-access-object-property-using-variable-1657384439324"},{"title":"Why shouldn't I use mysql_* functions in PHP?","slug":"why-shouldn't-i-use-mysql_*-functions-in-php-1657384260352"},{"title":"The 3 different equals","slug":"the-3-different-equals-1657385490242"},{"title":"How can I upload files asynchronously with jQuery?","slug":"how-can-i-upload-files-asynchronously-with-jquery-1657384815389"},{"title":"Asking the user for input until they give a valid response","slug":"asking-the-user-for-input-until-they-give-a-valid-response-1657384376162"},{"title":"mysqli or die, does it have to die?","slug":"mysqli-or-die-does-it-have-to-die-1657388533922"},{"title":"What is the difference between const int*, const int * const, and int const *?","slug":"what-is-the-difference-between-const-int*-const-int-*-const-and-int-const-*-1657388184604"}]},"__N_SSG":true}