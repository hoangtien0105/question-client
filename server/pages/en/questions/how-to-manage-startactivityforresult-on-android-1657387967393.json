{"pageProps":{"data":{"answer":["\n&lt;p&gt;From your &lt;code&gt;FirstActivity&lt;/code&gt;, call the &lt;code&gt;SecondActivity&lt;/code&gt; using the &lt;code&gt;startActivityForResult()&lt;/code&gt; method.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; LAUNCH_SECOND_ACTIVITY = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nIntent i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nstartActivityForResult(i, LAUNCH_SECOND_ACTIVITY);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In your &lt;code&gt;SecondActivity&lt;/code&gt;, set the data which you want to return back to &lt;code&gt;FirstActivity&lt;/code&gt;. If you don&apos;t want to return back, don&apos;t set any.&lt;/p&gt;\n&lt;p&gt;For example: In &lt;code&gt;SecondActivity&lt;/code&gt; if you want to send back data:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;returnIntent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;();\nreturnIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt;,result);\nsetResult(Activity.RESULT_OK,returnIntent);\nfinish();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you don&apos;t want to return data:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lisp&quot;&gt;Intent returnIntent = new Intent()&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\nsetResult(&lt;span class=&quot;hljs-name&quot;&gt;Activity&lt;/span&gt;.RESULT_CANCELED, returnIntent)&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\nfinish()&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now in your &lt;code&gt;FirstActivity&lt;/code&gt; class, write the following code for the &lt;code&gt;onActivityResult()&lt;/code&gt; method.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (requestCode == LAUNCH_SECOND_ACTIVITY) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(resultCode == Activity.RESULT_OK){\n            String result=data.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt;);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (resultCode == Activity.RESULT_CANCELED) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Write your code if there&apos;s no result&lt;/span&gt;\n        }\n    }\n} &lt;span class=&quot;hljs-comment&quot;&gt;//onActivityResult&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To implement passing data between two activities in a much better way in Kotlin, please go through &lt;em&gt;&apos;&lt;a href=&quot;https://proandroiddev.com/is-onactivityresult-deprecated-in-activity-results-api-lets-deep-dive-into-it-302d5cf6edd&quot; rel=&quot;noreferrer&quot;&gt;A better way to pass data between Activities&lt;/a&gt;&apos;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n&lt;p&gt;How to check the result from the main activity?&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;You need to override &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onActivityResult%28int,%20int,%20android.content.Intent%29&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Activity.onActivityResult()&lt;/code&gt;&lt;/a&gt; and then check its parameters:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;requestCode&lt;/code&gt; identifies which app returned these results. This is defined by you when you call &lt;code&gt;startActivityForResult()&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;resultCode&lt;/code&gt; informs you whether this app succeeded, failed, or something different&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;data&lt;/code&gt; holds any information returned by this app. This may be &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;To see the entire process in context, here is a supplemental answer. See &lt;a href=&quot;https://stackoverflow.com/a/40969871/3681880&quot;&gt;my fuller answer&lt;/a&gt; for more explanation.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/Tyhf8.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;MainActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AppCompatActivity&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Add a different request code for every activity you are starting from here&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;SECOND_ACTIVITY_REQUEST_CODE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Go to Second Activity&quot; button click&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onButtonClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Start the SecondActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SecondActivity.class);\n        startActivityForResult(intent, SECOND_ACTIVITY_REQUEST_CODE);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// This method is called when the second activity finishes&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// check that it is the SecondActivity with an OK result&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (requestCode == SECOND_ACTIVITY_REQUEST_CODE) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (resultCode == RESULT_OK) { &lt;span class=&quot;hljs-comment&quot;&gt;// Activity.RESULT_OK&lt;/span&gt;\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// get String data from Intent&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;returnString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;keyName&quot;&lt;/span&gt;);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// set text view with string&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;textView&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TextView) findViewById(R.id.textView);\n                textView.setText(returnString);\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;SecondActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SecondActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_second);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Send text back&quot; button click&lt;/span&gt;\n    public void onButtonClick(&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; view) {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// get the text from the EditText&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt; editText = (&lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.editText);\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; stringToPassBack = editText.getText().toString();\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// put the String to pass back into an Intent and close this activity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;();\n        intent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;keyName&quot;&lt;/span&gt;, stringToPassBack);\n        setResult(&lt;span class=&quot;hljs-type&quot;&gt;RESULT_OK&lt;/span&gt;, intent);\n        finish();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Complementing &lt;a href=&quot;https://stackoverflow.com/questions/10407159/how-to-manage-startactivityforresult-on-android/10407371#10407371&quot;&gt;the answer from Nishant&lt;/a&gt;, the best way to return the activity result is:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;returnIntent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\nreturnIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;result&quot;&lt;/span&gt;,result);\nsetResult(RESULT_OK,returnIntent);\nfinish();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I was having a problem with&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;Intent&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then I found out that the correct way is using&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;getIntent&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;to get the current intent.&lt;/p&gt;\n    ","\n&lt;h3&gt;startActivityForResult:  Deprecated in Android X&lt;/h3&gt;\n&lt;p&gt;For the &lt;em&gt;new&lt;/em&gt; way we have &lt;code&gt;registerForActivityResult&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;In Java :&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// You need to create a launcher variable inside onAttach or onCreate or global, i.e, before the activity is displayed&lt;/span&gt;\n ActivityResultLauncher&amp;lt;Intent&amp;gt; launchSomeActivity = registerForActivityResult(\n     &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ActivityResultContracts&lt;/span&gt;.StartActivityForResult(),\n     &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ActivityResultCallback&lt;/span&gt;&amp;lt;ActivityResult&amp;gt;() {\n              &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n              &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ActivityResult result)&lt;/span&gt; {\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result.getResultCode() == Activity.RESULT_OK) {\n                         &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; result.getData();\n                         &lt;span class=&quot;hljs-comment&quot;&gt;// your operation....&lt;/span&gt;\n                    }\n               }\n      });\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;openYourActivity&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SomeActivity.class);\n            launchSomeActivity.launch(intent);\n      }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;In Kotlin :&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; resultLauncher = registerForActivityResult(StartActivityForResult()) { result -&amp;gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result.resultCode == Activity.RESULT_OK) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt;: Intent? = result.&lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// your operation...&lt;/span&gt;\n    }\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;openYourActivity&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; intent = Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SomeActivity::&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.java)\n    resultLauncher.launch(intent)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Advantage:&lt;/h3&gt;\n&lt;ol&gt;\n&lt;li&gt;The new way is reduce complexity which we faced when we call the activity from a fragment or from another activity&lt;/li&gt;\n&lt;li&gt;Easily ask for any permission and get callback&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;For those who have problem with &lt;a href=&quot;https://stackoverflow.com/questions/10564474/wrong-requestcode-in-onactivityresult&quot;&gt;wrong requestCode in onActivityResult&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you are calling &lt;code&gt;startActivityForResult()&lt;/code&gt; from your &lt;code&gt;Fragment&lt;/code&gt;, the requestCode is changed by the Activity that owns the Fragment.&lt;/p&gt;\n\n&lt;p&gt;If you want to get the correct resultCode in your activity try this:&lt;/p&gt;\n\n&lt;p&gt;Change:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;startActivityForResult(intent, 1);&lt;/code&gt; To:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;getActivity().startActivityForResult(intent, 1);&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;The ActivityResultRegistry is the recommended approach&lt;/h2&gt;\n&lt;p&gt;&lt;code&gt;ComponentActivity&lt;/code&gt; now provides an &lt;code&gt;ActivityResultRegistry&lt;/code&gt; that lets you handle the &lt;code&gt;startActivityForResult()&lt;/code&gt;+&lt;code&gt;onActivityResult()&lt;/code&gt; as well as &lt;code&gt;requestPermissions()&lt;/code&gt;+&lt;code&gt;onRequestPermissionsResult()&lt;/code&gt; flows without overriding methods in your &lt;code&gt;Activity&lt;/code&gt; or &lt;code&gt;Fragment&lt;/code&gt;, brings increased type safety via &lt;code&gt;ActivityResultContract&lt;/code&gt;, and provides hooks for testing these flows.&lt;/p&gt;\n&lt;p&gt;It is strongly recommended to use the Activity Result APIs introduced in Android&amp;nbsp;10 Activity 1.2.0-alpha02 and Fragment 1.3.0-alpha02.&lt;/p&gt;\n&lt;p&gt;Add this to your &lt;code&gt;build.gradle&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;def activity_version = &lt;span class=&quot;hljs-string&quot;&gt;&quot;1.2.0-beta01&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Java language implementation&lt;/span&gt;\nimplementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;androidx.activity:activity:&lt;span class=&quot;hljs-variable&quot;&gt;$activity_version&lt;/span&gt;&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Kotlin&lt;/span&gt;\nimplementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;androidx.activity:activity-ktx:&lt;span class=&quot;hljs-variable&quot;&gt;$activity_version&lt;/span&gt;&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;How to use the pre-built contract&lt;/h2&gt;\n&lt;p&gt;This new API has the following pre-built functionalities&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;TakeVideo&lt;/li&gt;\n&lt;li&gt;PickContact&lt;/li&gt;\n&lt;li&gt;GetContent&lt;/li&gt;\n&lt;li&gt;GetContents&lt;/li&gt;\n&lt;li&gt;OpenDocument&lt;/li&gt;\n&lt;li&gt;OpenDocuments&lt;/li&gt;\n&lt;li&gt;OpenDocumentTree&lt;/li&gt;\n&lt;li&gt;CreateDocument&lt;/li&gt;\n&lt;li&gt;Dial&lt;/li&gt;\n&lt;li&gt;TakePicture&lt;/li&gt;\n&lt;li&gt;RequestPermission&lt;/li&gt;\n&lt;li&gt;RequestPermissions&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;&lt;strong&gt;An example that uses the takePicture contract:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; takePicture = prepareCall(ActivityResultContracts.TakePicture()) { bitmap: Bitmap? -&amp;gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Do something with the Bitmap, if present&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(savedInstanceState: &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt;?)&lt;/span&gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_main)\n\n    button.setOnClickListener { takePicture() }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So whats going on here? Lets break it down slightly. &lt;code&gt;takePicture&lt;/code&gt; is just a callback which returns a nullable Bitmap - whether or not its null depends on whether or not the &lt;code&gt;onActivityResult&lt;/code&gt; process was successful. &lt;code&gt;prepareCall&lt;/code&gt; then registers this call into a new feature on &lt;code&gt;ComponentActivity&lt;/code&gt; called the &lt;code&gt;ActivityResultRegistry&lt;/code&gt; - well come back to this later. &lt;code&gt;ActivityResultContracts.TakePicture()&lt;/code&gt; is one of the built-in helpers which Google have created for us, and finally invoking &lt;code&gt;takePicture&lt;/code&gt; actually triggers the Intent in the same way that you would previously with &lt;code&gt;Activity.startActivityForResult(intent, REQUEST_CODE)&lt;/code&gt;.&lt;/p&gt;\n&lt;h2&gt;How to write a custom contract&lt;/h2&gt;\n&lt;p&gt;A simple contract that takes an Int as an &lt;em&gt;input&lt;/em&gt; and returns a string that the requested Activity returns in the result Intent.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyContract&lt;/span&gt; : &lt;span class=&quot;hljs-type&quot;&gt;ActivityResultContract&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Int, String&lt;/span&gt;&amp;gt;&lt;/span&gt;() {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;companion&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; ACTION = &lt;span class=&quot;hljs-string&quot;&gt;&quot;com.myapp.action.MY_ACTION&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; INPUT_INT = &lt;span class=&quot;hljs-string&quot;&gt;&quot;input_int&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; OUTPUT_STRING = &lt;span class=&quot;hljs-string&quot;&gt;&quot;output_string&quot;&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;createIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(input: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;: Intent {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; Intent(ACTION)\n            .apply { putExtra(INPUT_INT, input) }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;parseResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(resultCode: &lt;span class=&quot;hljs-type&quot;&gt;Int&lt;/span&gt;, intent: &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;?)&lt;/span&gt;&lt;/span&gt;: String? {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; (resultCode) {\n            Activity.RESULT_OK -&amp;gt; intent?.getStringExtra(OUTPUT_STRING)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyActivity&lt;/span&gt; : &lt;span class=&quot;hljs-type&quot;&gt;AppCompatActivity&lt;/span&gt;&lt;/span&gt;() {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; myActionCall = prepareCall(MyContract()) { result -&amp;gt;\n        Log.i(&lt;span class=&quot;hljs-string&quot;&gt;&quot;MyActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Obtained result: &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;&quot;&lt;/span&gt;)\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(savedInstanceState: &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt;?)&lt;/span&gt;&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState)\n        ...\n        button.setOnClickListener {\n            myActionCall(&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;)\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Check &lt;a href=&quot;https://developer.android.com/training/basics/intents/result&quot; rel=&quot;nofollow noreferrer&quot;&gt;this official documentation&lt;/a&gt; for more information.&lt;/p&gt;\n    ","\n&lt;p&gt;If you want to update the user interface with the activity result, you can&apos;t to use &lt;code&gt;this.runOnUiThread(new Runnable() {}&lt;/code&gt;. Doing this, the UI won&apos;t refresh with the new value. Instead, you can do this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (resultCode == RESULT_CANCELED) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    }\n\n    global_lat = data.getDoubleExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;LATITUDE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    global_lng = data.getDoubleExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;LONGITUDE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    new_latlng = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onResume();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(new_latlng)\n    {\n        PhysicalTagProperties.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.setLocation(global_lat, global_lng);\n        new_latlng=&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This seems silly, but it works pretty well.&lt;/p&gt;\n    ","\n&lt;p&gt;I will post the new &quot;way&quot; with &lt;a href=&quot;https://developer.android.com/jetpack/androidx&quot; rel=&quot;nofollow noreferrer&quot;&gt;Android X&lt;/a&gt; in a short answer (because in some case you does not need custom registry or contract). If you want more information, see:  &lt;em&gt;&lt;a href=&quot;https://developer.android.com/training/basics/intents/result&quot; rel=&quot;nofollow noreferrer&quot;&gt;Getting a result from an activity&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: there is actually a bug with the backward compatibility of Android X so you have to add &lt;code&gt;fragment_version&lt;/code&gt; in your Gradle file. &lt;strong&gt;Otherwise you will get an exception &quot;New result API error : Can only use lower 16 bits for requestCode&quot;&lt;/strong&gt;.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;dependencies {\n\n    def activity_version = &lt;span class=&quot;hljs-string&quot;&gt;&quot;1.2.0-beta01&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Java language implementation&lt;/span&gt;\n    implementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;androidx.activity:activity:&lt;span class=&quot;hljs-variable&quot;&gt;$activity_version&lt;/span&gt;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Kotlin&lt;/span&gt;\n    implementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;androidx.activity:activity-ktx:&lt;span class=&quot;hljs-variable&quot;&gt;$activity_version&lt;/span&gt;&quot;&lt;/span&gt;\n\n    def fragment_version = &lt;span class=&quot;hljs-string&quot;&gt;&quot;1.3.0-beta02&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Java language implementation&lt;/span&gt;\n    implementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;androidx.fragment:fragment:&lt;span class=&quot;hljs-variable&quot;&gt;$fragment_version&lt;/span&gt;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Kotlin&lt;/span&gt;\n    implementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;androidx.fragment:fragment-ktx:&lt;span class=&quot;hljs-variable&quot;&gt;$fragment_version&lt;/span&gt;&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Testing Fragments in Isolation&lt;/span&gt;\n    debugImplementation &lt;span class=&quot;hljs-string&quot;&gt;&quot;androidx.fragment:fragment-testing:&lt;span class=&quot;hljs-variable&quot;&gt;$fragment_version&lt;/span&gt;&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now you just have to add this member variable of your activity. This use a predefined registry and generic contract.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt;&lt;/span&gt;{\n\n   ...\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/**\n     * Activity callback API.\n     */&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// https://developer.android.com/training/basics/intents/result&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ActivityResultLauncher&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;&amp;gt; mStartForResult = registerForActivityResult(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ActivityResultContracts&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;StartActivityForResult&lt;/span&gt;(),\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ActivityResultCallback&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;ActivityResult&lt;/span&gt;&amp;gt;() {\n\n                &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n                public void onActivityResult(&lt;span class=&quot;hljs-type&quot;&gt;ActivityResult&lt;/span&gt; result) {\n                    switch (result.getResultCode()) {\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Activity&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;RESULT_OK&lt;/span&gt;:\n                            &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = result.getData();\n                            &lt;span class=&quot;hljs-comment&quot;&gt;// Handle the Intent&lt;/span&gt;\n                            &lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.makeText(&lt;span class=&quot;hljs-type&quot;&gt;MyActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Activity returned ok&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;LENGTH_SHORT&lt;/span&gt;).show();\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Activity&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;RESULT_CANCELED&lt;/span&gt;:\n                            &lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.makeText(&lt;span class=&quot;hljs-type&quot;&gt;MyActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Activity canceled&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;LENGTH_SHORT&lt;/span&gt;).show();\n                            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n                    }\n                }\n            });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Before new API you had :&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;btn.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(MyActivity .&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, EditActivity.class);\n                startActivityForResult(intent, Constants.INTENT_EDIT_REQUEST_CODE);\n            }\n        });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;You may notice that the request code is now generated (and hold) by the Google framework.&lt;/strong&gt;\nYour code becomes:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; btn.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.OnClickListener() {\n\n                &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View v)&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(MyActivity .&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, EditActivity.class);\n                    mStartForResult.launch(intent);\n                }\n            });\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;First you use &lt;code&gt;startActivityForResult()&lt;/code&gt; with parameters in the first &lt;code&gt;Activity&lt;/code&gt; and if you want to send data from the second &lt;code&gt;Activity&lt;/code&gt; to first &lt;code&gt;Activity&lt;/code&gt; then pass the value using &lt;code&gt;Intent&lt;/code&gt; with the &lt;code&gt;setResult()&lt;/code&gt; method and get that data inside the &lt;code&gt;onActivityResult()&lt;/code&gt; method in the first &lt;code&gt;Activity&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;It is a very common problem on Android&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;It can be broken down into three pieces&lt;/strong&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Start Activity B (happens in Activity A)&lt;/li&gt;\n&lt;li&gt;Set requested data  (happens in activity B)&lt;/li&gt;\n&lt;li&gt;Receive requested data (happens in activity A)&lt;/li&gt;\n&lt;/ol&gt;\n&lt;blockquote&gt;\n&lt;ol&gt;\n&lt;li&gt;startActivity B&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(A.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, B.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nstartActivity(i);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;Set requested data&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;In this part, you decide whether you want to send data back or not when a particular event occurs.&lt;/p&gt;\n&lt;p&gt;E.g.: In activity B there is an EditText and two buttons b1, b2.\nClicking on Button b1 sends data back to activity A.\nClicking on Button b2 does not send any data.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Sending data&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;b1......clickListener\n{\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;resultIntent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;();\n    resultIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Your_key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your_value&quot;&lt;/span&gt;);\n    setResult(RES_CODE_A, resultIntent);\n    finish();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Not sending data&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;b2.....&lt;span class=&quot;hljs-selector-class&quot;&gt;.clickListener&lt;/span&gt;\n{\n   &lt;span class=&quot;hljs-built_in&quot;&gt;setResult&lt;/span&gt;(RES_CODE_B, new Intent());\n   &lt;span class=&quot;hljs-built_in&quot;&gt;finish&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;The user clicks the back button&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;By default, the result is set with Activity.RESULT_CANCEL response code&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;ol start=&quot;3&quot;&gt;\n&lt;li&gt;Retrieve result&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;For that override onActivityResult method&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (resultCode == RES_CODE_A) {\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;// b1 was clicked&lt;/span&gt;\n       &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;RES_CODE_A&quot;&lt;/span&gt;);\n\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(resultCode == RES_CODE_B){\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;// b2 was clicked&lt;/span&gt;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n       &lt;span class=&quot;hljs-comment&quot;&gt;// The back button was clicked&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In &lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Suppose A &amp;amp; B are activities the navigation is from A -&amp;gt; B\nWe need the result back from A &amp;lt;- B&lt;/p&gt;\n&lt;p&gt;in &lt;strong&gt;A&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// calling the Activity B&lt;/span&gt;\n    resultLauncher.&lt;span class=&quot;hljs-title function_&quot;&gt;launch&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(requireContext(), &lt;span class=&quot;hljs-attr&quot;&gt;B&lt;/span&gt;::&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;java&lt;/span&gt;))\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// we get data in here from B&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; resultLauncher =\n    &lt;span class=&quot;hljs-title function_&quot;&gt;registerForActivityResult&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ActivityResultContracts.StartActivityForResult()&lt;/span&gt;) { result -&amp;gt;\n        when (result.&lt;span class=&quot;hljs-property&quot;&gt;resultCode&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Activity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;RESULT_OK&lt;/span&gt; -&amp;gt; {\n                result.&lt;span class=&quot;hljs-property&quot;&gt;data&lt;/span&gt;?.&lt;span class=&quot;hljs-title function_&quot;&gt;getStringExtra&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;VALUE&quot;&lt;/span&gt;)?.&lt;span class=&quot;hljs-property&quot;&gt;let&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// data received here&lt;/span&gt;\n                }\n            }\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Activity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;RESULT_CANCELED&lt;/span&gt; -&amp;gt; {\n                &lt;span class=&quot;hljs-comment&quot;&gt;// cancel or failure&lt;/span&gt;\n            }\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In &lt;strong&gt;B&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// Sending result value back to A&lt;/span&gt;\n    if (success) {\n       &lt;span class=&quot;hljs-built_in&quot;&gt;setResult&lt;/span&gt;(RESULT_OK, Intent()&lt;span class=&quot;hljs-selector-class&quot;&gt;.putExtra&lt;/span&gt;(&quot;VALUE&quot;, value))\n    } else {\n       &lt;span class=&quot;hljs-built_in&quot;&gt;setResult&lt;/span&gt;(RESULT_CANCELED)\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In your Main Activity&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Bundle savedInstanceState&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;activity_main&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;takeCam&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;setOnClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;OnClickListener&lt;/span&gt;() {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;View view&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt; intent=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getApplicationContext&lt;/span&gt;(),&lt;span class=&quot;hljs-title class_&quot;&gt;TakePhotoActivity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;class&lt;/span&gt;);\n            intent.&lt;span class=&quot;hljs-title function_&quot;&gt;putExtra&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mode&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Take&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;startActivity&lt;/span&gt;(intent);\n        }\n    });\n    &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;selectGal&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;setOnClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;OnClickListener&lt;/span&gt;() {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;View view&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt; intent=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;getApplicationContext&lt;/span&gt;(),&lt;span class=&quot;hljs-title class_&quot;&gt;TakePhotoActivity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;class&lt;/span&gt;);\n            intent.&lt;span class=&quot;hljs-title function_&quot;&gt;putExtra&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mode&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Gallery&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;startActivity&lt;/span&gt;(intent);\n        }\n    });\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;int requestCode, int resultCode, Intent data&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;(requestCode, resultCode, data);\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In Second Activity to Display&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;CAMERA_REQUEST&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1888&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ImageView imageView;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;MY_CAMERA_PERMISSION_CODE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;PICK_PHOTO_FOR_AVATAR&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_take_photo);\n\n    imageView=findViewById(R.id.imageView);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mode&quot;&lt;/span&gt;).equals(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Gallery&quot;&lt;/span&gt;))\n    {\n        pickImage();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.M) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (checkSelfPermission(Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\n                requestPermissions(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;[]{Manifest.permission.CAMERA}, MY_CAMERA_PERMISSION_CODE);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;cameraIntent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(MediaStore.ACTION_IMAGE_CAPTURE);\n                startActivityForResult(cameraIntent, CAMERA_REQUEST);\n            }\n        }\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;pickImage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(Intent.ACTION_PICK);\n    intent.setType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;image/*&quot;&lt;/span&gt;);\n    startActivityForResult(intent, PICK_PHOTO_FOR_AVATAR);\n}\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onRequestPermissionsResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; String[] permissions, &lt;span class=&quot;hljs-meta&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;[] grantResults)&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (requestCode == MY_CAMERA_PERMISSION_CODE)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (grantResults[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] == PackageManager.PERMISSION_GRANTED)\n        {\n            &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;cameraIntent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\n            startActivityForResult(cameraIntent, CAMERA_REQUEST);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        {\n            Toast.makeText(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Camera Permission Denied..&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (requestCode == CAMERA_REQUEST &amp;amp;&amp;amp; resultCode == Activity.RESULT_OK) {\n        &lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;photo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Bitmap) data.getExtras().get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;);\n        imageView.setImageBitmap(photo);\n    }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (requestCode == PICK_PHOTO_FOR_AVATAR &amp;amp;&amp;amp; resultCode == Activity.RESULT_OK) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                Log.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ABC&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;No Such Image Selected&quot;&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                Uri selectedData=data.getData();\n                Log.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ABC&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Image Pick-Up&quot;&lt;/span&gt;);\n                imageView.setImageURI(selectedData);\n                &lt;span class=&quot;hljs-type&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;inputStream&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getApplicationContext().getContentResolver().openInputStream(selectedData);\n                &lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bitmap&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; BitmapFactory.decodeStream(inputStream);\n                Bitmap bmp=MediaStore.Images.Media.getBitmap(getContentResolver(),selectedData);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (FileNotFoundException e) {\n                e.printStackTrace();\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(IOException e){\n\n            }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You need to override Activity.onActivityResult():&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (resultCode == RESULT_CODE_ONE) {\n\n       &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;RESULT_CODE_ONE&quot;&lt;/span&gt;);\n\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(resultCode == RESULT_CODE_TWO){\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;// b was clicked&lt;/span&gt;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":433,"title":"How to manage startActivityForResult on Android","content":"\n                \n&lt;p&gt;In my activity, I&apos;m calling a second activity from the main activity by &lt;code&gt;startActivityForResult&lt;/code&gt;. In my second activity, there are some methods that finish this activity (maybe without a result), however, just one of them returns a result.&lt;/p&gt;\n&lt;p&gt;For example, from the main activity, I call a second one. In this activity, I&apos;m checking some features of a handset, such as does it have a camera. If it doesn&apos;t have then I&apos;ll close this activity. Also, during the preparation of &lt;code&gt;MediaRecorder&lt;/code&gt; or &lt;code&gt;MediaPlayer&lt;/code&gt; if a problem happens then I&apos;ll close this activity.&lt;/p&gt;\n&lt;p&gt;If its device has a camera and recording is done completely, then after recording a video if a user clicks on the done button then I&apos;ll send the result (address of the recorded video) back to the main activity.&lt;/p&gt;\n&lt;p&gt;How do I check the result from the main activity?&lt;/p&gt;\n    ","slug":"how-to-manage-startactivityforresult-on-android-1657387967393","postType":"QUESTION","createdAt":"2022-07-09T17:32:47.000Z","updatedAt":"2022-07-09T17:32:47.000Z","tags":[{"id":2267,"name":"startactivityforresult","slug":"startactivityforresult","createdAt":"2022-07-09T17:32:47.000Z","updatedAt":"2022-07-09T17:32:47.000Z","Questions_Tags":{"questionId":433,"tagId":2267}}],"relatedQuestions":[{"title":"How to manage startActivityForResult on Android","slug":"how-to-manage-startactivityforresult-on-android-1657387967393","tags":[{"name":"startactivityforresult","Questions_Tags":{"questionId":433,"tagId":2267}}]}]},"randomQuestions":[{"title":"XMLHttpRequest cannot load XXX No 'Access-Control-Allow-Origin' header","slug":"xmlhttprequest-cannot-load-xxx-no-'access-control-allow-origin'-header-1657384758362"},{"title":"Grouping functions (tapply, by, aggregate) and the *apply family","slug":"grouping-functions-(tapply-by-aggregate)-and-the-*apply-family-1657387844286"},{"title":"Object comparison in JavaScript [duplicate]","slug":"object-comparison-in-javascript-duplicate-1657387675463"},{"title":"Determine Whether Two Date Ranges Overlap","slug":"determine-whether-two-date-ranges-overlap-1657387924335"},{"title":"Why do we always prefer using parameters in SQL statements?","slug":"why-do-we-always-prefer-using-parameters-in-sql-statements-1657388031476"},{"title":"What is a stack trace, and how can I use it to debug my application errors?","slug":"what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors-1657384750732"},{"title":"Using global variables in a function","slug":"using-global-variables-in-a-function-1657384796002"},{"title":"Using LIMIT within GROUP BY to get N results per group?","slug":"using-limit-within-group-by-to-get-n-results-per-group-1657388324167"},{"title":"How should a model be structured in MVC? [closed]","slug":"how-should-a-model-be-structured-in-mvc-closed-1657388394807"},{"title":"Switch between two frames in tkinter?","slug":"switch-between-two-frames-in-tkinter-1657388528781"},{"title":"Why does my JavaScript code receive a \"No 'Access-Control-Allow-Origin' header is present on the requested resource\" error, while Postman does not?","slug":"why-does-my-javascript-code-receive-a-\"no-'access-control-allow-origin'-header-is-present-on-the-requested-resource\"-error-while-postman-does-not-1657384636363"},{"title":"What is the best regular expression to check if a string is a valid URL?","slug":"what-is-the-best-regular-expression-to-check-if-a-string-is-a-valid-url-1657387618306"},{"title":"Ways to circumvent the same-origin policy","slug":"ways-to-circumvent-the-same-origin-policy-1657384763316"},{"title":"Relative imports for the billionth time","slug":"relative-imports-for-the-billionth-time-1657387756383"},{"title":"Why does Tkinter image not show up if created in a function?","slug":"why-does-tkinter-image-not-show-up-if-created-in-a-function-1657387388233"},{"title":"Why is 24.0000 not equal to 24.0000 in MATLAB?","slug":"why-is-24.0000-not-equal-to-24.0000-in-matlab-1657388376753"},{"title":"How can I sort arrays and data in PHP?","slug":"how-can-i-sort-arrays-and-data-in-php-1657384726665"},{"title":"How to count the number of set bits in a 32-bit integer?","slug":"how-to-count-the-number-of-set-bits-in-a-32-bit-integer-1657388437370"},{"title":"How do I use arrays in C++?","slug":"how-do-i-use-arrays-in-c++-1657387456118"},{"title":"How to filter Pandas dataframe using 'in' and 'not in' like in SQL","slug":"how-to-filter-pandas-dataframe-using-'in'-and-'not-in'-like-in-sql-1657387371355"}]},"__N_SSG":true}