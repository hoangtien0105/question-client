{"pageProps":{"data":{"answer":["\n&lt;p&gt;A debugger is a program that can examine the state of your program while your program is running. The &lt;a href=&quot;https://stackoverflow.com/questions/216819/how-does-a-debugger-work&quot;&gt;technical means it uses for doing this&lt;/a&gt; are not important for understanding the basics of how to use a debugger. You can use a debugger to halt the execution of your program when it reaches a particular place in your code, then examine the values of the variables in the program. You can use a debugger to run your program very slowly, one line of code at a time (called &lt;em&gt;single stepping&lt;/em&gt;), while you examine the values of its variables.&lt;/p&gt;\n\n&lt;h2&gt;Using a debugger is an expected basic skill&lt;/h2&gt;\n\n&lt;p&gt;A debugger is a very powerful tool for helping diagnose problems with programs.  And debuggers are available for all practical programming languages. Therefore being able to use a debugger is considered a &lt;strong&gt;basic skill&lt;/strong&gt; of any professional or enthusiast programmer. And using a debugger &lt;em&gt;yourself&lt;/em&gt;  is considered &lt;strong&gt;basic work&lt;/strong&gt; you should do &lt;em&gt;yourself&lt;/em&gt; before asking others for help. As this site is for professional and enthusiast programmers, and not a helpdesk or mentoring site, if you have a question about a problem with a specific program, but have not used a debugger, your question is very likely to be closed and downvoted. If you persist with questions like that, you will eventually be blocked from posting more. &lt;/p&gt;\n\n&lt;h2&gt;How a debugger can help you&lt;/h2&gt;\n\n&lt;p&gt;By using a debugger you can discover whether a variable has the wrong value, and where in your program its value changed to the wrong value.&lt;/p&gt;\n\n&lt;p&gt;Using single stepping you can also discover whether the control flow is as you expect. For example, whether an &lt;code&gt;if&lt;/code&gt; branch executed when you expect it ought to be.&lt;/p&gt;\n\n&lt;h2&gt;General notes on using a debugger&lt;/h2&gt;\n\n&lt;p&gt;The specifics of using a debugger depend on the debugger and, to a lesser degree, the programming language you are using.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;You can &lt;em&gt;attach&lt;/em&gt; a debugger to a process already running your program. You might do if your program is stuck.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;In practice it is often easier to run your program under the control of a debugger from the very start.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;You indicate &lt;em&gt;where&lt;/em&gt; your program should stop executing by indicating the source-code file and line number of the line at which execution should stop, or by indicating the name of the method/function at which the program should stop (if you want to stop as soon as execution enters the method). The technical means that the debugger uses to cause your program to stop is called a &lt;em&gt;breakpoint&lt;/em&gt; and this process is called &lt;em&gt;setting a breakpoint&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Most &lt;a href=&quot;https://stackoverflow.com/a/426586/545127&quot;&gt;modern debuggers are part of an IDE&lt;/a&gt; and provide you with a convenient GUI for examining the source code and variables of your program, with a point-and-click interface for setting breakpoints, running your program and single stepping it.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Using a debugger can be very difficult unless your program executable or bytecode files include debugging &lt;em&gt;symbol information&lt;/em&gt; and cross-references to your source-code. You might have to &lt;a href=&quot;https://stackoverflow.com/questions/89603/how-does-the-debugging-option-g-change-the-binary-executable&quot;&gt;compile (or recompile) your program slightly differently&lt;/a&gt; to ensure that information is present. If the compiler performs extensive optimizations, those cross-references can become confusing. You might therefore have to &lt;a href=&quot;https://stackoverflow.com/a/7857696/545127&quot;&gt;recompile your program with optimizations turned off&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I want to add that a debugger isn&apos;t always the perfect solution, and shouldn&apos;t always be the go-to solution to debugging. Here are a few cases where a debugger might not work for you:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The part of your program which fails is really large (poor modularization, perhaps?) and you&apos;re not exactly sure where to start stepping through the code. Stepping through all of it might be too time-consuming.&lt;/li&gt;\n&lt;li&gt;Your program uses a lot of callbacks and other non-linear flow control methods, which makes the debugger confused when you step through it.&lt;/li&gt;\n&lt;li&gt;Your program is multi-threaded. Or even worse, your problem is caused by a race condition.&lt;/li&gt;\n&lt;li&gt;The code that has the bug in it runs many times before it bugs out. This can be particularly problematic in main loops, or worse yet, in physics engines, where the problem could be numerical. Even setting a breakpoint, in this case, would simply have you hitting it many times, with the bug not appearing.&lt;/li&gt;\n&lt;li&gt;Your program must run in real-time. This is a big issue for programs that connect to the network. If you set up a breakpoint in your network code, the other end isn&apos;t going to wait for you to step through, it&apos;s simply going to time out. Programs that rely on the system clock, e.g. games with frameskip, aren&apos;t much better off either.&lt;/li&gt;\n&lt;li&gt;Your program performs some form of destructive actions, like writing to files or sending e-mails, and you&apos;d like to limit the number of times you need to run through it.&lt;/li&gt;\n&lt;li&gt;You can tell that your bug is caused by incorrect values arriving at function X, but you don&apos;t know where these values come from. Having to run through the program, again and again, setting breakpoints farther and farther back, can be a huge hassle. Especially if function X is called from many places throughout the program.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In all of these cases, either having your program stop abruptly could cause the end results to differ, or stepping through manually in search of the one line where the bug is caused is too much of a hassle. This can equally happen whether your bug is incorrect behavior, or a crash. For instance, if memory corruption causes a crash, by the time the crash happens, it&apos;s too far from where the memory corruption first occurred, and no useful information is left.&lt;/p&gt;\n\n&lt;p&gt;So, what are the alternatives?&lt;/p&gt;\n\n&lt;p&gt;Simplest is simply logging and assertions. Add logs to your program at various points, and compare what you get with what you&apos;re expecting. For instance, see if the function where you think there&apos;s a bug is even called in the first place. See if the variables at the start of a method are what you think they are. Unlike breakpoints, it&apos;s okay for there to be many log lines in which nothing special happens. You can simply search through the log afterward. Once you hit a log line that&apos;s different from what you&apos;re expecting, add more in the same area. Narrow it down farther and farther, until it&apos;s small enough to be able to log every line in the bugged area.&lt;/p&gt;\n\n&lt;p&gt;Assertions can be used to trap incorrect values as they occur, rather than once they have an effect visible to the end-user. The quicker you catch an incorrect value, the closer you are to the line that produced it.&lt;/p&gt;\n\n&lt;p&gt;Refactor and unit test. If your program is too big, it might be worthwhile to test it one class or one function at a time. Give it inputs, and look at the outputs, and see which are not as you&apos;re expecting. Being able to narrow down a bug from an entire program to a single function can make a huge difference in debugging time.&lt;/p&gt;\n\n&lt;p&gt;In case of memory leaks or memory stomping, use appropriate tools that are able to analyze and detect these at runtime. Being able to detect where the actual corruption occurs is the first step. After this, you can use logs to work your way back to where incorrect values were introduced.&lt;/p&gt;\n\n&lt;p&gt;Remember that debugging is a process going backward. You have the end result - a bug - and find the cause, which preceded it. It&apos;s about working your way backward and, unfortunately, debuggers only step forwards. This is where good logging and postmortem analysis can give you much better results.&lt;/p&gt;\n    "],"id":67,"title":"What is a debugger and how can it help me diagnose problems?","content":"\n                \n&lt;p&gt;This is intended to be a general-purpose question to assist new programmers who have a problem with a program, but do not know how to use a debugger to diagnose the cause of the problem.&lt;/p&gt;\n&lt;p&gt;This question covers three classes of more specific question:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;When I run my program, it does not produce the output I expect for the input I gave it.&lt;/li&gt;\n&lt;li&gt;When I run my program, it crashes and gives me a stack trace. I have &lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;examined the stack trace&lt;/a&gt;, but I still do not know the cause of the problem because the stack trace does not provide me with enough information.&lt;/li&gt;\n&lt;li&gt;When I run my program, it crashes because of a segmentation fault (SEGV).&lt;/li&gt;\n&lt;/ul&gt;\n    ","slug":"what-is-a-debugger-and-how-can-it-help-me-diagnose-problems-1657384472469","postType":"QUESTION","createdAt":"2022-07-09T16:34:32.000Z","updatedAt":"2022-07-09T16:34:32.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How do I make a flat list out of a list of lists?","slug":"how-do-i-make-a-flat-list-out-of-a-list-of-lists-1657384500439"},{"title":"Preview an image before it is uploaded","slug":"preview-an-image-before-it-is-uploaded-1657388048128"},{"title":"Event binding on dynamically created elements?","slug":"event-binding-on-dynamically-created-elements-1657384268057"},{"title":"Iterator invalidation rules for C++ containers","slug":"iterator-invalidation-rules-for-c++-containers-1657387561090"},{"title":"Why does the order in which libraries are linked sometimes cause errors in GCC?","slug":"why-does-the-order-in-which-libraries-are-linked-sometimes-cause-errors-in-gcc-1657387609554"},{"title":"Numbering rows within groups in a data frame","slug":"numbering-rows-within-groups-in-a-data-frame-1657388556436"},{"title":"Convert Rows to columns using 'Pivot' in SQL Server","slug":"convert-rows-to-columns-using-'pivot'-in-sql-server-1657388372528"},{"title":"Get the row(s) which have the max value in groups using groupby","slug":"get-the-row(s)-which-have-the-max-value-in-groups-using-groupby-1657388014787"},{"title":"How to sum a variable by group","slug":"how-to-sum-a-variable-by-group-1657384838148"},{"title":"How to find the 'sizeof' (a pointer pointing to an array)?","slug":"how-to-find-the-'sizeof'-(a-pointer-pointing-to-an-array)-1657387354284"},{"title":"How do I use arrays in C++?","slug":"how-do-i-use-arrays-in-c++-1657387456118"},{"title":"What is the JavaScript version of sleep()?","slug":"what-is-the-javascript-version-of-sleep()-1657387391406"},{"title":"Collapse / concatenate / aggregate a column to a single comma separated string within each group","slug":"collapse-concatenate-aggregate-a-column-to-a-single-comma-separated-string-within-each-group-1657387870901"},{"title":"The 3 different equals","slug":"the-3-different-equals-1657385490242"},{"title":"Selenium - wait until element is present, visible and interactable","slug":"selenium-wait-until-element-is-present-visible-and-interactable-1657384820071"},{"title":"How to remove all duplicates from an array of objects?","slug":"how-to-remove-all-duplicates-from-an-array-of-objects-1657388256190"},{"title":"How do I declare a 2d array in C++ using new?","slug":"how-do-i-declare-a-2d-array-in-c++-using-new-1657388441163"},{"title":"How can I validate an email address in JavaScript?","slug":"how-can-i-validate-an-email-address-in-javascript-1657385475959"},{"title":"What is the scope of variables in JavaScript?","slug":"what-is-the-scope-of-variables-in-javascript-1657384464291"},{"title":"How to join (merge) data frames (inner, outer, left, right)","slug":"how-to-join-(merge)-data-frames-(inner-outer-left-right)-1657384406445"}]},"__N_SSG":true}