{"pageProps":{"data":{"answer":["\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-perl&quot;&gt;cursor.execute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO table VALUES (%s, %s, %s)&quot;&lt;/span&gt;, (var1, var2, var3))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that the parameters are passed as a tuple.&lt;/p&gt;\n\n&lt;p&gt;The database API does proper escaping and quoting of variables. Be careful not to use the string formatting operator (&lt;code&gt;%&lt;/code&gt;), because&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;it does not do any escaping or quoting.&lt;/li&gt;\n&lt;li&gt;it is prone to Uncontrolled string format attacks e.g. &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot; rel=&quot;noreferrer&quot;&gt;SQL injection&lt;/a&gt;.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;Different implementations of the Python DB-API are allowed to use different placeholders, so you&apos;ll need to find out which one you&apos;re using -- it could be (e.g. with MySQLdb):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-perl&quot;&gt;cursor.execute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO table VALUES (%s, %s, %s)&quot;&lt;/span&gt;, (var1, var2, var3))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or (e.g. with sqlite3 from the Python standard library):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(&quot;INSERT INTO table VALUES (?, ?, ?)&quot;, (var1, var2, var3))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or others yet (after &lt;code&gt;VALUES&lt;/code&gt; you could have &lt;code&gt;(:1, :2, :3)&lt;/code&gt; , or &quot;named styles&quot; &lt;code&gt;(:fee, :fie, :fo)&lt;/code&gt; or &lt;code&gt;(%(fee)s, %(fie)s, %(fo)s)&lt;/code&gt; where you pass a dict instead of a map as the second argument to &lt;code&gt;execute&lt;/code&gt;).  Check the &lt;code&gt;paramstyle&lt;/code&gt; string constant in the DB API module you&apos;re using, and look for paramstyle at &lt;a href=&quot;http://www.python.org/dev/peps/pep-0249/&quot; rel=&quot;noreferrer&quot;&gt;http://www.python.org/dev/peps/pep-0249/&lt;/a&gt; to see what all the parameter-passing styles are!&lt;/p&gt;\n    ","\n&lt;p&gt;Many ways. &lt;strong&gt;DON&apos;T&lt;/strong&gt; use the most obvious one (&lt;code&gt;%s&lt;/code&gt; with &lt;code&gt;%&lt;/code&gt;) in real code, it&apos;s open to &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot; rel=&quot;noreferrer&quot;&gt;attacks&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Here copy-paste&apos;d &lt;strong&gt;&lt;a href=&quot;http://docs.python.org/2/library/sqlite3.html&quot; rel=&quot;noreferrer&quot;&gt;from pydoc of sqlite3&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Never do this -- insecure!&lt;/span&gt;\nsymbol = &lt;span class=&quot;hljs-string&quot;&gt;&apos;RHAT&apos;&lt;/span&gt;\nc.execute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT * FROM stocks WHERE symbol = &apos;%s&apos;&quot;&lt;/span&gt; % symbol)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# Do this instead&lt;/span&gt;\nt = (&lt;span class=&quot;hljs-string&quot;&gt;&apos;RHAT&apos;&lt;/span&gt;,)\nc.execute(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT * FROM stocks WHERE symbol=?&apos;&lt;/span&gt;, t)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; c.fetchone()\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# Larger example that inserts many records at a time&lt;/span&gt;\npurchases = [(&lt;span class=&quot;hljs-string&quot;&gt;&apos;2006-03-28&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;BUY&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;IBM&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45.00&lt;/span&gt;),\n             (&lt;span class=&quot;hljs-string&quot;&gt;&apos;2006-04-05&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;BUY&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MSFT&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;72.00&lt;/span&gt;),\n             (&lt;span class=&quot;hljs-string&quot;&gt;&apos;2006-04-06&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;SELL&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;IBM&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;53.00&lt;/span&gt;),\n            ]\nc.executemany(&lt;span class=&quot;hljs-string&quot;&gt;&apos;INSERT INTO stocks VALUES (?,?,?,?,?)&apos;&lt;/span&gt;, purchases)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;More examples if you need:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Multiple values single statement/execution&lt;/span&gt;\nc.execute(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT * FROM stocks WHERE symbol=? OR symbol=?&apos;&lt;/span&gt;, (&lt;span class=&quot;hljs-string&quot;&gt;&apos;RHAT&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MSO&apos;&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; c.fetchall()\nc.execute(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT * FROM stocks WHERE symbol IN (?, ?)&apos;&lt;/span&gt;, (&lt;span class=&quot;hljs-string&quot;&gt;&apos;RHAT&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MSO&apos;&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; c.fetchall()\n&lt;span class=&quot;hljs-comment&quot;&gt;# This also works, though ones above are better as a habit as it&apos;s inline with syntax of executemany().. but your choice.&lt;/span&gt;\nc.execute(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT * FROM stocks WHERE symbol=? OR symbol=?&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;RHAT&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MSO&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; c.fetchall()\n&lt;span class=&quot;hljs-comment&quot;&gt;# Insert a single item&lt;/span&gt;\nc.execute(&lt;span class=&quot;hljs-string&quot;&gt;&apos;INSERT INTO stocks VALUES (?,?,?,?,?)&apos;&lt;/span&gt;, (&lt;span class=&quot;hljs-string&quot;&gt;&apos;2006-03-28&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;BUY&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;IBM&apos;&lt;/span&gt;, 1000, 45.00))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://web.archive.org/web/20090504233107/amk.ca/python/writing/DB-API.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.amk.ca/python/writing/DB-API.html&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Be careful when you simply append values of variables to your statements:\nImagine a user naming himself &lt;code&gt;&apos;;DROP TABLE Users;&apos;&lt;/code&gt; --\nThat&apos;s why you need to use SQL escaping, which Python provides for you when you use &lt;code&gt;cursor.execute&lt;/code&gt; in a decent manner. Example in the URL is:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(&quot;insert into Attendees values (?, ?, ?)&quot;, (name, seminar, paid))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The syntax for providing a single value can be confusing for inexperienced Python users.&lt;/p&gt;\n&lt;p&gt;Given the query&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; mytable (fruit) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-operator&quot;&gt;%&lt;/span&gt;s)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Generally*, the value passed to &lt;code&gt;cursor.execute&lt;/code&gt; must wrapped in an ordered sequence such as a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#tuple&quot; rel=&quot;nofollow noreferrer&quot;&gt;tuple&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#list&quot; rel=&quot;nofollow noreferrer&quot;&gt;list&lt;/a&gt; even though the value itself is a singleton, so we must provide a single element tuple, like this: &lt;code&gt;(value,)&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;cursor.execute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;INSERT INTO mytable (fruit) VALUES (%s)&quot;&quot;&quot;&lt;/span&gt;, (&lt;span class=&quot;hljs-string&quot;&gt;&apos;apple&apos;&lt;/span&gt;,))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Passing a single string&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;cursor.execute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;INSERT INTO mytable (fruit) VALUES (%s)&quot;&quot;&quot;&lt;/span&gt;, (&lt;span class=&quot;hljs-string&quot;&gt;&apos;apple&apos;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;will result in an error which varies by the DB-API connector, for example&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;psycopg2:\n&lt;blockquote&gt;\n&lt;p&gt;TypeError: not all arguments converted during string formatting&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;sqlite3\n&lt;blockquote&gt;\n&lt;p&gt;sqlite3.ProgrammingError: Incorrect number of bindings supplied. The current statement uses 1, and there are 5 supplied&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;li&gt;mysql.connector\n&lt;blockquote&gt;\n&lt;p&gt;mysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;hr&gt;\n&lt;p&gt;*  The pymysql connector handles a single string parameter without erroring.  However it&apos;s better to wrap the string in a tuple even if it&apos;s a single because&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;you won&apos;t need to change the code if you switch connector package&lt;/li&gt;\n&lt;li&gt;you keep a consistent mental model of the query parameters being a sequence of objects rather than a single object.&lt;/li&gt;\n&lt;/ul&gt;\n    "],"id":581,"title":"How to use variables in SQL statement in Python?","content":"\n                \n&lt;p&gt;I have the following Python code:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;cursor.execute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO table VALUES var1, var2, var3,&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;where &lt;code&gt;var1&lt;/code&gt; is an integer, &lt;code&gt;var2&lt;/code&gt; and &lt;code&gt;var3&lt;/code&gt; are strings.&lt;/p&gt;\n&lt;p&gt;How can I write the variable names without Python including them as part of the query text?&lt;/p&gt;\n    ","slug":"how-to-use-variables-in-sql-statement-in-python-1657388479077","postType":"QUESTION","createdAt":"2022-07-09T17:41:19.000Z","updatedAt":"2022-07-09T17:41:19.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"SQL select only rows with max value on a column [duplicate]","slug":"sql-select-only-rows-with-max-value-on-a-column-duplicate-1657384614292"},{"title":"What is the difference between \"INNER JOIN\" and \"OUTER JOIN\"?","slug":"what-is-the-difference-between-\"inner-join\"-and-\"outer-join\"-1657387501982"},{"title":"Post an HTML Table to ADO.NET DataTable","slug":"post-an-html-table-to-ado.net-datatable-1657387462723"},{"title":"How should I use servlets and Ajax?","slug":"how-should-i-use-servlets-and-ajax-1657385492684"},{"title":"How do you use a variable in a regular expression?","slug":"how-do-you-use-a-variable-in-a-regular-expression-1657387939007"},{"title":"Google Maps JS API v3 - Simple Multiple Marker Example","slug":"google-maps-js-api-v3-simple-multiple-marker-example-1657388073335"},{"title":"Using Auto Layout in UITableView for dynamic cell layouts & variable row heights","slug":"using-auto-layout-in-uitableview-for-dynamic-cell-layouts-and-variable-row-heights-1657387722263"},{"title":"CSS selector for first element with class","slug":"css-selector-for-first-element-with-class-1657388028765"},{"title":"Remove duplicate values from JS array [duplicate]","slug":"remove-duplicate-values-from-js-array-duplicate-1657387801931"},{"title":"Get the data received in a Flask request","slug":"get-the-data-received-in-a-flask-request-1657387804432"},{"title":"What is an efficient way to implement a singleton pattern in Java? [closed]","slug":"what-is-an-efficient-way-to-implement-a-singleton-pattern-in-java-closed-1657387970474"},{"title":"How can I read and parse CSV files in C++?","slug":"how-can-i-read-and-parse-csv-files-in-c++-1657387869219"},{"title":"What is a debugger and how can it help me diagnose problems?","slug":"what-is-a-debugger-and-how-can-it-help-me-diagnose-problems-1657384472469"},{"title":"Iterating through a Collection, avoiding ConcurrentModificationException when removing objects in a loop","slug":"iterating-through-a-collection-avoiding-concurrentmodificationexception-when-removing-objects-in-a-loop-1657387311824"},{"title":"What are copy elision and return value optimization?","slug":"what-are-copy-elision-and-return-value-optimization-1657385455976"},{"title":"Get the row(s) which have the max value in groups using groupby","slug":"get-the-row(s)-which-have-the-max-value-in-groups-using-groupby-1657388014787"},{"title":"How to evaluate a math expression given in string form?","slug":"how-to-evaluate-a-math-expression-given-in-string-form-1657387797852"},{"title":"How to test multiple variables for equality against a single value?","slug":"how-to-test-multiple-variables-for-equality-against-a-single-value-1657384358504"},{"title":"Importing installed package from script raises \"AttributeError: module has no attribute\" or \"ImportError: cannot import name\"","slug":"importing-installed-package-from-script-raises-\"attributeerror:-module-has-no-attribute\"-or-\"importerror:-cannot-import-name\"-1657387790607"},{"title":"When to use LinkedList over ArrayList in Java?","slug":"when-to-use-linkedlist-over-arraylist-in-java-1657388107480"}]},"__N_SSG":true}