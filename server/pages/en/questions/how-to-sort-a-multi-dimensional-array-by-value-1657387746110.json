{"pageProps":{"data":{"answer":["\n&lt;p&gt;Try a &lt;a href=&quot;http://php.net/manual/en/function.usort.php&quot; rel=&quot;noreferrer&quot;&gt;usort&lt;/a&gt;. If you are still on PHP 5.2 or earlier, you&apos;ll have to define a sorting function first:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;sortByOrder&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] - &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n}\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;sortByOrder&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Starting in PHP 5.3, you can use an anonymous function:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] - &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And finally with PHP 7 you can use the &lt;a href=&quot;https://stackoverflow.com/a/31298778&quot;&gt;spaceship operator&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To extend this to multi-dimensional sorting, reference the second/third sorting elements if the first is zero - best explained below. You can also use this for sorting on sub-elements.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$retval&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$retval&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$retval&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;suborder&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;suborder&apos;&lt;/span&gt;];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$retval&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable&quot;&gt;$retval&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;details&apos;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;subsuborder&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;details&apos;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;subsuborder&apos;&lt;/span&gt;];\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$retval&lt;/span&gt;;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you need to retain key associations, use &lt;code&gt;uasort()&lt;/code&gt; - see &lt;a href=&quot;http://php.net/manual/en/array.sorting.php&quot; rel=&quot;noreferrer&quot;&gt;comparison of array sorting functions&lt;/a&gt; in the manual.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;aasort&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&amp;amp;&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$sorter&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable&quot;&gt;$ret&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;reset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$ii&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$va&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$sorter&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$ii&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$va&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;asort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sorter&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$sorter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$ii&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$va&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$ret&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$ii&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$ii&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$ret&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;aasort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$your_array&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;order&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use this function:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;array_sort_by_column&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&amp;amp;&lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$col&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$dir&lt;/span&gt; = SORT_ASC&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$sort_col&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$row&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$sort_col&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$row&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$col&lt;/span&gt;];\n    }\n\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_multisort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sort_col&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$dir&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$arr&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_sort_by_column&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;\nThis answer is at least ten years old, and there are likely better solutions now, but I am adding some extra info as requested in a couple of comments.&lt;/p&gt;\n&lt;p&gt;It works because &lt;code&gt;array_multisort()&lt;/code&gt; can sort multiple arrays. Example input:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n(\n    [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; a7e87329b5eab8578f4f1098a152d6f4\n            [title] =&amp;gt; Flower\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n        )\n\n    [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; b24ce0cd392a5b0b8dedc66c25213594\n            [title] =&amp;gt; Free\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n        )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;First &lt;code&gt;$sort_col&lt;/code&gt; is made which is an two dimensional array with the values being what we want to sort by and the keys matching the input array. For example for this input, choosing key &lt;code&gt;$sort_col&lt;/code&gt; &lt;code&gt;&quot;order&quot;&lt;/code&gt; we get:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n(\n    [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,\n    [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;array_multisort()&lt;/code&gt; then sorts that array (resulting in key order &lt;code&gt;1, 0&lt;/code&gt;) but this is only the two dimensional array. So the original input array is also passed as the &lt;code&gt;$rest&lt;/code&gt; argument. As the keys match it will be sorted so its keys are also in the same order, giving the desired result.&lt;/p&gt;\n&lt;p&gt;Note:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;it is passed by reference so that the supplied array is modified in place.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;array_multisort()&lt;/code&gt; can sort multiple additional array like this, not just one&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;To achieve this we can use &quot;&lt;a href=&quot;https://www.php.net/manual/en/function.array-multisort.php&quot; rel=&quot;noreferrer&quot;&gt;array_multisort&lt;/a&gt;&quot; method which &apos;Sorts multiple or multi-dimensional arrays&apos;. It&apos;s method parameters are&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;$keys - an array being sorted&lt;/li&gt;\n&lt;li&gt;SORT_ASC - sort order (ascending)&lt;/li&gt;\n&lt;li&gt;sort flags (compare items normally(don&apos;t change types)\nor numerically or as strings)&lt;/li&gt;\n&lt;li&gt;$new - then rest of the arrays. Only elements\ncorresponding to equivalent elements in previous&lt;br&gt;\narrays are compared.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&apos;sort flags&apos; is SORT_REGULAR by default and it is omitted.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$new&lt;/span&gt; = [\n    [\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;hashtag&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;a7e87329b5eab8578f4f1098a152d6f4&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;title&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Flower&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,\n    ],\n    [\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;hashtag&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;b24ce0cd392a5b0b8dedc66c25213594&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;title&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Free&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,\n    ],\n    [\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;hashtag&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;e7d31fc0602fb2ede144d18cdffd816b&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;title&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Ready&apos;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n    ],\n];\n&lt;span class=&quot;hljs-variable&quot;&gt;$keys&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_column&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$new&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_multisort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$keys&lt;/span&gt;, SORT_ASC, &lt;span class=&quot;hljs-variable&quot;&gt;$new&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;var_dump&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$new&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n(\n    [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; e7d31fc0602fb2ede144d18cdffd816b\n            [title] =&amp;gt; Ready\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        )\n    [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; b24ce0cd392a5b0b8dedc66c25213594\n            [title] =&amp;gt; Free\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n        )\n    [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; a7e87329b5eab8578f4f1098a152d6f4\n            [title] =&amp;gt; Flower\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n        )\n)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I usually use &lt;a href=&quot;http://php.net/usort&quot; rel=&quot;noreferrer&quot;&gt;usort&lt;/a&gt;, and pass my own comparison function. In this case, it is very simple:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;compareOrder&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;&lt;/span&gt;)\n&lt;/span&gt;{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] - &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n}\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;compareOrder&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In PHP 7 using the spaceship operator:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To sort the array by the value of the &quot;title&quot; key, use:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;uasort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strcmp&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;title&apos;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;title&apos;&lt;/span&gt;]);\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;strcmp&lt;/strong&gt; compare the strings.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;uasort()&lt;/strong&gt; maintains the array keys as they were defined.&lt;/p&gt;\n    ","\n&lt;p&gt;Use &lt;code&gt;array_multisort()&lt;/code&gt;, &lt;code&gt;array_map()&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_multisort&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_map&lt;/span&gt;(function(&lt;span class=&quot;hljs-variable&quot;&gt;$element&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$element&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n  }, &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;), SORT_ASC, &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;print_r&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://3v4l.org/AJNKi&quot; rel=&quot;noreferrer&quot;&gt;DEMO&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$sort&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable&quot;&gt;$array_lowercase&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_map&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;strtolower&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$array_to_be_sorted&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_multisort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array_lowercase&lt;/span&gt;, SORT_ASC, SORT_STRING, &lt;span class=&quot;hljs-variable&quot;&gt;$alphabetically_ordered_array&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This takes care of both upper and lower case alphabets.&lt;/p&gt;\n    ","\n&lt;p&gt;The most flexible approach would be using this method:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Arr&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sortByKeys&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$keys&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$assoc&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;): &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here&apos;s why:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;You can sort by any key (also nested like &lt;code&gt;&apos;key1.key2.key3&apos;&lt;/code&gt; or &lt;code&gt;[&apos;k1&apos;, &apos;k2&apos;, &apos;k3&apos;]&lt;/code&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;It works both on associative and not associative arrays (&lt;code&gt;$assoc&lt;/code&gt; flag)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;It doesn&apos;t use references - it returns a new sorted array&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;In your case it would be as simple as:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$sortedArray&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;Arr&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sortByKeys&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This method is a part of &lt;a href=&quot;https://github.com/minwork/array&quot; rel=&quot;nofollow noreferrer&quot;&gt;this library&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;The working &quot;arrow function&quot; syntax with PHP &lt;strong&gt;7.4&lt;/strong&gt; and above:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;uasort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$yourArray&lt;/span&gt;, fn(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;]);\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;pretty print&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;pre&amp;gt;&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;print_r&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$yourArray&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As the accepted answer states you can use:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;];\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you need sort by more than one column, then you would do the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column1&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column2&apos;&lt;/span&gt;]] &amp;lt;=&amp;gt; [&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column1&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column2&apos;&lt;/span&gt;]];\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This can be extended to any number of columns in your data. This relies on the fact you can directly compare arrays in PHP. In the above example the array would be sorted first by &lt;code&gt;column1&lt;/code&gt; and then by &lt;code&gt;column2&lt;/code&gt;. But you can sort by the columns in any order e.g.:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column2&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column1&apos;&lt;/span&gt;]] &amp;lt;=&amp;gt; [&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column2&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column1&apos;&lt;/span&gt;]];\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you need to sort one column ascending and another descending, then swap the descending column to the other side of the operator &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$myArray&lt;/span&gt;, function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column1&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column2&apos;&lt;/span&gt;]] &amp;lt;=&amp;gt; [&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column1&apos;&lt;/span&gt;],&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;column2&apos;&lt;/span&gt;]];\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If anyone needs sort according to a key, the best is to use the below:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;build_sorter&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;build_sorter&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;use&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strnatcmp&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;]);\n   };\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This solution is for usort() with an easy-to-remember notation for multidimensional sorting. The spaceship operator &amp;lt;=&amp;gt; is used, which is available from PHP 7.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$in&lt;/span&gt;,function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;first&apos;&lt;/span&gt;]   &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;first&apos;&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;//first asc&lt;/span&gt;\n      ?: &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;second&apos;&lt;/span&gt;]  &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;second&apos;&lt;/span&gt;] &lt;span class=&quot;hljs-comment&quot;&gt;//second asc&lt;/span&gt;\n      ?: &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;third&apos;&lt;/span&gt;]   &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;third&apos;&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;//third desc (a b swapped!)&lt;/span&gt;\n      &lt;span class=&quot;hljs-comment&quot;&gt;//etc&lt;/span&gt;\n  ;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$in&lt;/span&gt; = [\n  [&lt;span class=&quot;hljs-string&quot;&gt;&apos;firstname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Anton&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Gruber&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;birthdate&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;03.08.1967&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&apos;firstname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Anna&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Egger&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;birthdate&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;04.01.1960&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&apos;firstname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Paul&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mueller&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;birthdate&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;15.10.1971&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&apos;firstname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Marie&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Schmidt &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;birthdate&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;24.12.1963&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],\n  [&lt;span class=&quot;hljs-string&quot;&gt;&apos;firstname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Emma&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mueller&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;birthdate&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;23.11.1969&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;],\n];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;First task: Order By rank asc, surname asc&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$in&lt;/span&gt;,function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt;]      &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt;]     &lt;span class=&quot;hljs-comment&quot;&gt;//first asc&lt;/span&gt;\n      ?: &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt;]   &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;//second asc&lt;/span&gt;\n  ;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Second task: Order By rank desc, surname asc, firstmame asc&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$in&lt;/span&gt;,function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt;]      &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt;]       &lt;span class=&quot;hljs-comment&quot;&gt;//first desc&lt;/span&gt;\n      ?: &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt;]   &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt;]    &lt;span class=&quot;hljs-comment&quot;&gt;//second asc&lt;/span&gt;\n      ?: &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;firstname&apos;&lt;/span&gt;] &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;firstname&apos;&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;//third asc&lt;/span&gt;\n  ;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Third task: Order By rank desc, birthdate asc&lt;/p&gt;\n&lt;p&gt;The date cannot be sorted in this notation. It is converted with strtotime.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$in&lt;/span&gt;,function(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt;]      &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rank&apos;&lt;/span&gt;]       &lt;span class=&quot;hljs-comment&quot;&gt;//first desc&lt;/span&gt;\n      ?: &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;birthdate&apos;&lt;/span&gt;]) &amp;lt;=&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;birthdate&apos;&lt;/span&gt;])    &lt;span class=&quot;hljs-comment&quot;&gt;//second asc&lt;/span&gt;\n  ;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could use &lt;code&gt;usort&lt;/code&gt; and a user-defined sort function with a callback function:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;usort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$new&lt;/span&gt;, fn(&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;] - &lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;order&apos;&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;TRICK:&lt;/strong&gt; you could use &lt;code&gt;a &amp;gt; b&lt;/code&gt; or &lt;code&gt;a - b&lt;/code&gt; or &lt;code&gt;a &amp;lt;=&amp;gt; b&lt;/code&gt; for sorting in an &lt;em&gt;ascending&lt;/em&gt; order. For a &lt;em&gt;descending&lt;/em&gt; order just the swap position of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I found this helpful:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-variable&quot;&gt;$columns&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_column&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;order&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_multisort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$columns&lt;/span&gt;, SORT_ASC, &lt;span class=&quot;hljs-variable&quot;&gt;$data&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://lucidar.me/en/web-dev/how-to-sort-multidimensional-array-in-php/#sort-by-name-ascending&quot; rel=&quot;nofollow noreferrer&quot;&gt;Sort by name ascending&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Let&apos;s face it: PHP does &lt;em&gt;not&lt;/em&gt; have a simple out-of-the box function to properly handle every array sort scenario.&lt;/p&gt;\n&lt;p&gt;This routine is intuitive, which means faster debugging and maintenance:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Automatic population of the array&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$tempArray&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable&quot;&gt;$annotations&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;();\n&lt;span class=&quot;hljs-comment&quot;&gt;// ... some code&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// SQL $sql retrieves result array $result&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// $row[0] is the ID, but is populated out of order (comes from&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// multiple selects populating various dimensions for the same DATE&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// for example&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$row&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_fetch_array&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$needle&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$row&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;arrayIndexes&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$needle&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// Create a parallel array with IDs only&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$annotations&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$needle&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;someDimension&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$row&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// Whatever&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;asort&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$tempArray&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$tempArray&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$arrayKey&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$dataInOrder&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$annotations&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$arrayKey&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;someDimension&apos;&lt;/span&gt;];\n    &lt;span class=&quot;hljs-comment&quot;&gt;// .... more code&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;arrayIndexes&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$needle&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$tempArray&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;in_array&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$needle&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$tempArray&lt;/span&gt;)) {\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;array_push&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$tempArray&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$needle&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":361,"title":"How to Sort a Multi-dimensional Array by Value","content":"\n                \n&lt;p&gt;How can I sort this array by the value of the &quot;order&quot; key?&lt;/p&gt;\n&lt;p&gt;Even though the values are currently sequential, they will not always be.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n(\n    [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; a7e87329b5eab8578f4f1098a152d6f4\n            [title] =&amp;gt; Flower\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n        )\n\n    [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; b24ce0cd392a5b0b8dedc66c25213594\n            [title] =&amp;gt; Free\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n        )\n\n    [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;Array&lt;/span&gt;\n        (\n            [hashtag] =&amp;gt; e7d31fc0602fb2ede144d18cdffd816b\n            [title] =&amp;gt; Ready\n            [order] =&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        )\n)\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"how-to-sort-a-multi-dimensional-array-by-value-1657387746110","postType":"QUESTION","createdAt":"2022-07-09T17:29:06.000Z","updatedAt":"2022-07-09T17:29:06.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"What is the most efficient way to deep clone an object in JavaScript?","slug":"what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript-1657384601026"},{"title":"Trouble with UTF-8 characters; what I see is not what I stored","slug":"trouble-with-utf-8-characters-what-i-see-is-not-what-i-stored-1657384817490"},{"title":"Use a content script to access the page context variables and functions","slug":"use-a-content-script-to-access-the-page-context-variables-and-functions-1657384842444"},{"title":"MySQL Error 1093 - Can't specify target table for update in FROM clause","slug":"mysql-error-1093-can't-specify-target-table-for-update-in-from-clause-1657388078961"},{"title":"Why can't an element with a z-index value cover its child?","slug":"why-can't-an-element-with-a-z-index-value-cover-its-child-1657387707187"},{"title":"How to manage startActivityForResult on Android","slug":"how-to-manage-startactivityforresult-on-android-1657387967393"},{"title":"How do function pointers in C work?","slug":"how-do-function-pointers-in-c-work-1657388332074"},{"title":"Relative imports for the billionth time","slug":"relative-imports-for-the-billionth-time-1657387756383"},{"title":"What is a StackOverflowError?","slug":"what-is-a-stackoverflowerror-1657388319634"},{"title":"How do I make a redirect in PHP?","slug":"how-do-i-make-a-redirect-in-php-1657387381903"},{"title":"Why use getters and setters/accessors?","slug":"why-use-getters-and-settersaccessors-1657387343971"},{"title":"How do I split a list into equally-sized chunks?","slug":"how-do-i-split-a-list-into-equally-sized-chunks-1657384580399"},{"title":"How do I return the response from an Observable/http/async call in angular?","slug":"how-do-i-return-the-response-from-an-observablehttpasync-call-in-angular-1657387335024"},{"title":"Does Python have a ternary conditional operator?","slug":"does-python-have-a-ternary-conditional-operator-1657387555448"},{"title":"Google Maps JS API v3 - Simple Multiple Marker Example","slug":"google-maps-js-api-v3-simple-multiple-marker-example-1657388073335"},{"title":"Pandas conditional creation of a series/dataframe column","slug":"pandas-conditional-creation-of-a-seriesdataframe-column-1657387461003"},{"title":"Is there a JavaScript / jQuery DOM change listener?","slug":"is-there-a-javascript-jquery-dom-change-listener-1657387961200"},{"title":"Why is processing a sorted array faster than processing an unsorted array?","slug":"why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array-1657385497444"},{"title":"Why does printf not flush after the call unless a newline is in the format string?","slug":"why-does-printf-not-flush-after-the-call-unless-a-newline-is-in-the-format-string-1657387853407"},{"title":"Web-scraping JavaScript page with Python","slug":"web-scraping-javascript-page-with-python-1657388240875"}]},"__N_SSG":true}