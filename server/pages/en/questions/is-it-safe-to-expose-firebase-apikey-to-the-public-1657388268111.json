{"pageProps":{"data":{"answer":["\n                \n&lt;p&gt;The &lt;code&gt;apiKey&lt;/code&gt; in this configuration snippet just identifies your Firebase project on the Google servers. It is not a security risk for someone to know it. In fact, it is necessary for them to know it, in order for them to interact with your Firebase project. This same configuration data is also included in every iOS and Android app that uses Firebase as its backend.&lt;/p&gt;\n&lt;p&gt;In that sense it is very similar to the database URL that identifies the back-end database associated with your project in the same snippet: &lt;code&gt;https://&amp;lt;app-id&amp;gt;.firebaseio.com&lt;/code&gt;. See this question on why this is not a security risk: &lt;a href=&quot;https://stackoverflow.com/questions/35418143/how-to-restrict-firebase-data-modification&quot;&gt;How to restrict Firebase data modification?&lt;/a&gt;, including the use of Firebase&apos;s server side security rules to ensure only authorized users can access the backend services.&lt;/p&gt;\n&lt;p&gt;If you want to learn how to secure all data access to your Firebase backend services is authorized, read up on the documentation on &lt;a href=&quot;https://firebase.google.com/docs/rules&quot; rel=&quot;noreferrer&quot;&gt;Firebase security rules&lt;/a&gt;. These rules control access to file storage and database access, and are enforced on the Firebase servers. So no matter if it&apos;s &lt;em&gt;your&lt;/em&gt; code, or somebody else&apos;s code that uses you configuration data, it can only do what the security rules allow it to do.&lt;/p&gt;\n&lt;p&gt;For another explanation of what Firebase uses these values for, and for which of them you &lt;em&gt;can&lt;/em&gt; set quotas, see the Firebase documentation on &lt;a href=&quot;https://firebase.google.com/docs/projects/api-keys&quot; rel=&quot;noreferrer&quot;&gt;using and managing API keys&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;If you&apos;d like to reduce the risk of committing this configuration data to version control, consider using the &lt;a href=&quot;https://firebase.google.com/docs/hosting/reserved-urls#sdk_auto-configuration&quot; rel=&quot;noreferrer&quot;&gt;SDK auto-configuration of Firebase Hosting&lt;/a&gt;. While the keys will still end up in the browser in the same format, they won&apos;t be hard-coded into your code anymore with that.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; (May 2021): Thanks to the new feature called &lt;a href=&quot;https://firebase.google.com/docs/app-check&quot; rel=&quot;noreferrer&quot;&gt;Firebase App Check&lt;/a&gt;, it is now actually possible to limit access to the backend services in your Firebase project to only those coming from iOS, Android and Web apps that are registered in that specific project.&lt;/p&gt;\n&lt;p&gt;You&apos;ll typically want to combine this with the user authentication based security described above, so that you have another shield against abusive users that &lt;em&gt;do&lt;/em&gt; use your app.&lt;/p&gt;\n&lt;p&gt;By combining App Check with security rules you have both broad protection against abuse, and fine gained control over what data each user can access, while still allowing direct access to the database from your client-side application code.&lt;/p&gt;\n    ","\n&lt;p&gt;Building on the answers of prufrofro and Frank van Puffelen &lt;a href=&quot;https://stackoverflow.com/questions/35418143/how-to-restrict-firebase-data-modification&quot;&gt;here&lt;/a&gt;, I put together this setup that doesn&apos;t prevent scraping, but can make it slightly harder to use your API key.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; To get your data, even with this method, one can for example simply open the JS console in Chrome and type:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;firebase.&lt;span class=&quot;hljs-title function_&quot;&gt;database&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;ref&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/get/all/the/data&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;once&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(data.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;());\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Only the database security rules can protect your data.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Nevertheless, I restricted my production API key use to my domain name like this:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;a href=&quot;https://console.developers.google.com/apis&quot; rel=&quot;noreferrer&quot;&gt;https://console.developers.google.com/apis&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Select your Firebase project&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;Credentials&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;Under API keys, pick your Browser key. It should look like this: &quot;&lt;em&gt;Browser key (auto created by Google Service)&lt;/em&gt;&quot;&lt;/li&gt;\n&lt;li&gt;In &quot;&lt;em&gt;Accept requests from these\nHTTP referrers (web sites)&lt;/em&gt;&quot;, add the URL of your app (exemple: &lt;code&gt;projectname.firebaseapp.com/*&lt;/code&gt; )&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Now the app will only work on this specific domain name. So I created another API Key that will be private for localhost developement.&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Click Create credentials &amp;gt; API Key&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;By default, as mentioned by Emmanuel Campos, &lt;a href=&quot;https://support.google.com/firebase/answer/6400741&quot; rel=&quot;noreferrer&quot;&gt;Firebase only whitelists &lt;code&gt;localhost&lt;/code&gt; and your Firebase hosting domain&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;In order to make sure I don&apos;t publish the wrong API key by mistake, I use one of the following methods to automatically use the more restricted one in production.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Setup for Create-React-App&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;In &lt;code&gt;/env.development&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable constant_&quot;&gt;REACT_APP_API_KEY&lt;/span&gt;=###dev-key###\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In &lt;code&gt;/env.production&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable constant_&quot;&gt;REACT_APP_API_KEY&lt;/span&gt;=###public-key###\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In &lt;code&gt;/src/index.js&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; firebaseConfig = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;apiKey&lt;/span&gt;: process.&lt;span class=&quot;hljs-property&quot;&gt;env&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;REACT_APP_API_KEY&lt;/span&gt;,\n  &lt;span class=&quot;hljs-comment&quot;&gt;// ... &lt;/span&gt;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I am not convinced to expose security/config keys to client. I would not call it secure, not because some one can steal all private information from first day, because someone can make excessive request, and drain your quota and make you owe to Google a lot of money. &lt;/p&gt;\n\n&lt;p&gt;You need to think about many concepts from restricting people not to access where they are not supposed to be, DOS attacks etc. &lt;/p&gt;\n\n&lt;p&gt;I would more prefer the client first will hit to your web server, there you put what ever first hand firewall, captcha , cloudflare, custom security in between the client and server, or between server and firebase and you are good to go. At least you can first stop suspect activity before it reaches to firebase. You will have much more flexibility.&lt;/p&gt;\n\n&lt;p&gt;I only see one good usage scenario for using client based config for internal usages. For example, you have internal domain, and you are pretty sure outsiders cannot access there, so you can setup environment like browser -&amp;gt; firebase type.&lt;/p&gt;\n    ","\n&lt;p&gt;The API key exposure creates a vulnerability when user/password sign up is enabled. There is an open API endpoint that takes the API key and allows anyone to create a new user account. They then can use this new account to log in to your Firebase Auth protected app or use the SDK to auth with user/pass and run queries.&lt;/p&gt;\n\n&lt;p&gt;I&apos;ve reported this to Google but they say it&apos;s working as intended.&lt;/p&gt;\n\n&lt;p&gt;If you can&apos;t disable user/password accounts you should do the following:\nCreate a cloud function to auto disable new users onCreate and create a new DB entry to manage their access.&lt;/p&gt;\n\n&lt;p&gt;Ex: MyUsers/{userId}/Access: 0  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;exports&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addUser&lt;/span&gt; = functions.&lt;span class=&quot;hljs-property&quot;&gt;auth&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;user&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(onAddUser);\n&lt;span class=&quot;hljs-built_in&quot;&gt;exports&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;deleteUser&lt;/span&gt; = functions.&lt;span class=&quot;hljs-property&quot;&gt;auth&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;user&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;onDelete&lt;/span&gt;(onDeleteUser);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Update your rules to only allow reads for users with access &amp;gt; 1.&lt;/p&gt;\n\n&lt;p&gt;On the off chance the listener function doesn&apos;t disable the account fast enough then the read rules will prevent them from reading any data.&lt;/p&gt;\n    ","\n&lt;p&gt;I believe once database rules are written accurately, it will be enough to protect your data. Moreover, there are guidelines that one can follow to structure your database accordingly. For example, making a UID node under users, and putting all under information under it. After that, you will need to implement a simple database rule as below &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;rules&quot;&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;users&quot;&lt;/span&gt;: {\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;$uid&quot;&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;.read&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;auth != null &amp;amp;&amp;amp; auth.uid == $uid&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;.write&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;auth != null &amp;amp;&amp;amp; auth.uid == $uid&quot;&lt;/span&gt;\n      }\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;No other user will be able to read other users&apos; data, moreover, domain policy will restrict requests coming from other domains. \nOne can read more about it on \n&lt;a href=&quot;https://firebase.google.com/docs/database/security/user-security&quot; rel=&quot;noreferrer&quot;&gt;Firebase Security rules&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;While the original question was answered (that the api key can be exposed - the protection of the data must be set from the DB rulles), I was also looking for a solution to restrict the access to specific parts of the DB.\nSo after reading this and some personal research about the possibilities, I came up with a slightly different approach to restrict data usage for unauthorised users:&lt;/p&gt;\n&lt;p&gt;I save my users in my DB too, under the same uid (and save the profile data in there). So i just set the db rules like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;.read&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;auth != null &amp;amp;&amp;amp; root.child(&apos;/userdata/&apos;+auth.uid+&apos;/userRole&apos;).exists()&quot;&lt;/span&gt;,\n&lt;span class=&quot;hljs-string&quot;&gt;&quot;.write&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;auth != null &amp;amp;&amp;amp; root.child(&apos;/userdata/&apos;+auth.uid+&apos;/userRole&apos;).exists()&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This way only a previous saved user can add new users in the DB so there is no way anyone without an account can do operations on DB.&lt;/p&gt;\n&lt;p&gt;Also adding new users is posible only if the user has a special role and edit only by admin or by that user itself (something like this):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;userdata&quot;&lt;/span&gt;: {\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;$userId&quot;&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;.write&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;$userId === auth.uid || root.child(&apos;/userdata/&apos;+auth.uid+&apos;/userRole&apos;).val() === &apos;superadmin&apos;&quot;&lt;/span&gt;,\n   ...\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;EXPOSURE OF API KEYS ISN&apos;T A SECURITY RISK BUT ANYONE CAN PUT YOUR CREDENTIALS ON THEIR SITE.&lt;/p&gt;\n&lt;p&gt;Open api keys leads to attacks that can use a lot resources at firebase that will definitely cost your hard money.&lt;/p&gt;\n&lt;p&gt;You can always restrict you firebase project keys to domains / IP&apos;s.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://console.cloud.google.com/apis/credentials/key&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://console.cloud.google.com/apis/credentials/key&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;select your project Id and key and restrict it to Your Android/iOs/web App.&lt;/p&gt;\n    ","\n&lt;p&gt;It is oky to include them, and special care is required only for Firebase ML or when using Firebase Authentication&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;API keys for Firebase are different from typical API keys:&lt;/strong&gt;&lt;/em&gt;\nUnlike how API keys are typically used, API keys for Firebase services are not used to control access to backend resources; that can only be done with Firebase Security Rules. Usually, you need to fastidiously guard API keys (for example, by using a vault service or setting the keys as environment variables); however, API keys for Firebase services are ok to include in code or checked-in config files.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Although API keys for Firebase services are safe to include in code, there are a few specific cases when you should enforce limits for your API key; for example, if you&apos;re using Firebase ML or using Firebase Authentication with the email/password sign-in method. Learn more about these cases later on this page.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;For more informations, check  &lt;a href=&quot;https://firebase.google.com/docs/projects/api-keys&quot; rel=&quot;nofollow noreferrer&quot;&gt;the offical docs&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I am making a blog website on github pages. I got an idea to embbed comments in the end of every blog page. I understand how firebase get and gives you data.&lt;/p&gt;\n&lt;p&gt;I have tested many times with project and even using console. I am totally disagree the saying vlit is vulnerable.\nBelieve me there is no issue of showing your api key publically if you have followed privacy steps recommend by firebase.\nGo to &lt;a href=&quot;https://console.developers.google.com/apis&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://console.developers.google.com/apis&lt;/a&gt;\nand perfrom a security steup.&lt;/p&gt;\n    ","\n&lt;p&gt;You should not expose this info. in public, specially api keys.\nIt may lead to a privacy leak.&lt;/p&gt;\n\n&lt;p&gt;Before making the website public you should hide it. You can do it in 2 or more ways&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Complex coding/hiding&lt;/li&gt;\n&lt;li&gt;Simply put firebase SDK codes at bottom of your website or app thus firebase automatically does all works. you don&apos;t need to put API keys anywhere&lt;/li&gt;\n&lt;/ol&gt;\n    "],"id":522,"title":"Is it safe to expose Firebase apiKey to the public?","content":"\n                \n&lt;p&gt;The &lt;a href=&quot;https://firebase.google.com/docs/web/setup#add_firebase_to_your_app&quot; rel=&quot;noreferrer&quot;&gt;Firebase Web-App guide&lt;/a&gt; states I should put the given &lt;code&gt;apiKey&lt;/code&gt; in my Html to initialize Firebase:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;// TODO: Replace with your project&apos;s customized code snippet\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://www.gstatic.com/firebasejs/3.0.2/firebase.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Initialize Firebase&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; config = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;apiKey&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;your-api-key&amp;gt;&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;authDomain&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;your-auth-domain&amp;gt;&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;databaseURL&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;your-database-url&amp;gt;&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;storageBucket&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;your-storage-bucket&amp;gt;&apos;&lt;/span&gt;\n  };\n  firebase.&lt;span class=&quot;hljs-title function_&quot;&gt;initializeApp&lt;/span&gt;(config);\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;By doing so, the &lt;code&gt;apiKey&lt;/code&gt; is exposed to every visitor.&lt;/p&gt;\n&lt;p&gt;What is the &lt;strong&gt;purpose of that key&lt;/strong&gt; and is it really &lt;strong&gt;meant to be public&lt;/strong&gt;?&lt;/p&gt;\n    ","slug":"is-it-safe-to-expose-firebase-apikey-to-the-public-1657388268111","postType":"QUESTION","createdAt":"2022-07-09T17:37:48.000Z","updatedAt":"2022-07-09T17:37:48.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"What does ** (double star/asterisk) and * (star/asterisk) do for parameters?","slug":"what-does-**-(double-starasterisk)-and-*-(starasterisk)-do-for-parameters-1657384800967"},{"title":"What is a debugger and how can it help me diagnose problems?","slug":"what-is-a-debugger-and-how-can-it-help-me-diagnose-problems-1657384472469"},{"title":"Why are these constructs using pre and post-increment undefined behavior?","slug":"why-are-these-constructs-using-pre-and-post-increment-undefined-behavior-1657384520109"},{"title":"input() error - NameError: name '...' is not defined","slug":"input()-error-nameerror:-name-'...'-is-not-defined-1657388497243"},{"title":"How do I count the occurrences of a list item?","slug":"how-do-i-count-the-occurrences-of-a-list-item-1657387916234"},{"title":"The difference between bracket [ ] and double bracket [[ ]] for accessing the elements of a list or dataframe","slug":"the-difference-between-bracket-and-double-bracket-for-accessing-the-elements-of-a-list-or-dataframe-1657388451711"},{"title":"Reference: What is variable scope, which variables are accessible from where and what are \"undefined variable\" errors?","slug":"reference:-what-is-variable-scope-which-variables-are-accessible-from-where-and-what-are-\"undefined-variable\"-errors-1657384644697"},{"title":"How does the Windows Command Interpreter (CMD.EXE) parse scripts?","slug":"how-does-the-windows-command-interpreter-(cmd.exe)-parse-scripts-1657387731560"},{"title":"In CSS Flexbox, why are there no \"justify-items\" and \"justify-self\" properties?","slug":"in-css-flexbox-why-are-there-no-\"justify-items\"-and-\"justify-self\"-properties-1657384782711"},{"title":"Fetch the rows which have the Max value for a column for each distinct value of another column","slug":"fetch-the-rows-which-have-the-max-value-for-a-column-for-each-distinct-value-of-another-column-1657387423925"},{"title":"How can I convert ereg expressions to preg in PHP?","slug":"how-can-i-convert-ereg-expressions-to-preg-in-php-1657387652855"},{"title":"What is a lambda expression in C++11?","slug":"what-is-a-lambda-expression-in-c++11-1657387999252"},{"title":"How do you use bcrypt for hashing passwords in PHP? [duplicate]","slug":"how-do-you-use-bcrypt-for-hashing-passwords-in-php-duplicate-1657387318517"},{"title":"Relative imports for the billionth time","slug":"relative-imports-for-the-billionth-time-1657387756383"},{"title":"Sorting object property by values","slug":"sorting-object-property-by-values-1657388367300"},{"title":"Ways to circumvent the same-origin policy","slug":"ways-to-circumvent-the-same-origin-policy-1657384763316"},{"title":"How can I prevent SQL injection in PHP?","slug":"how-can-i-prevent-sql-injection-in-php-1657384220094"},{"title":"HTTP GET with request body","slug":"http-get-with-request-body-1657387379038"},{"title":"How do I make a redirect in PHP?","slug":"how-do-i-make-a-redirect-in-php-1657387381903"},{"title":"Is an array name a pointer?","slug":"is-an-array-name-a-pointer-1657387874827"}]},"__N_SSG":true}