{"pageProps":{"data":{"answer":["\n&lt;p&gt;As per the best practices:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;If your usecase is to validate the &lt;strong&gt;presence&lt;/strong&gt; of any element you need to induce &lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.wait.html#module-selenium.webdriver.support.wait&quot; rel=&quot;noreferrer&quot;&gt;WebDriverWait&lt;/a&gt; setting the &lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#module-selenium.webdriver.support.expected_conditions&quot; rel=&quot;noreferrer&quot;&gt;expected_conditions&lt;/a&gt; as &lt;a href=&quot;https://selenium.dev/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.presence_of_element_located&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;presence_of_element_located()&lt;/code&gt;&lt;/a&gt; which is the expectation for checking that an element is present on the DOM of a page. This does not necessarily mean that the element is visible. So the effective line of code will be:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;WebDriverWait(browser, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;).until(EC.presence_of_element_located((By.CSS_SELECTOR, &lt;span class=&quot;hljs-string&quot;&gt;&quot;.reply-button&quot;&lt;/span&gt;))).click()\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If your usecase is to &lt;strong&gt;extract any attribute&lt;/strong&gt; of any element you need to induce &lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.wait.html#module-selenium.webdriver.support.wait&quot; rel=&quot;noreferrer&quot;&gt;WebDriverWait&lt;/a&gt; setting the &lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#module-selenium.webdriver.support.expected_conditions&quot; rel=&quot;noreferrer&quot;&gt;expected_conditions&lt;/a&gt; as &lt;a href=&quot;https://selenium.dev/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.visibility_of_element_located&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;visibility_of_element_located(locator)&lt;/code&gt;&lt;/a&gt; which is an expectation for checking that an element is present on the DOM of a page and visible. Visibility means that the element is not only displayed but also has a height and width that is greater than 0. So in your usecase effectively the line of code will be:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;email = WebDriverWait(driver, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;).until(EC.visibility_of_element_located((By.CSS_SELECTOR, &lt;span class=&quot;hljs-string&quot;&gt;&quot;element_css&quot;&lt;/span&gt;))).get_attribute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If your usecase is to invoke &lt;strong&gt;&lt;code&gt;click()&lt;/code&gt;&lt;/strong&gt; on any element you need to induce &lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.wait.html#module-selenium.webdriver.support.wait&quot; rel=&quot;noreferrer&quot;&gt;WebDriverWait&lt;/a&gt; setting the &lt;a href=&quot;https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#module-selenium.webdriver.support.expected_conditions&quot; rel=&quot;noreferrer&quot;&gt;expected_conditions&lt;/a&gt; as &lt;a href=&quot;https://selenium.dev/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html#selenium.webdriver.support.expected_conditions.element_to_be_clickable&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;element_to_be_clickable()&lt;/code&gt;&lt;/a&gt; which is an expectation for for checking an element is visible and enabled such that you can click it. So in your usecase effectively the line of code will be:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;WebDriverWait(browser, &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;).until(EC.element_to_be_clickable((By.CSS_SELECTOR, &lt;span class=&quot;hljs-string&quot;&gt;&quot;.reply-button&quot;&lt;/span&gt;))).click()\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;References&lt;/h2&gt;\n\n&lt;p&gt;You can find a couple of detailed discussion in:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/49775502/webdriverwait-not-working-as-expected/49775808#49775808&quot;&gt;WebDriverWait not working as expected&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50610553/selenium-check-for-the-presence-of-element/50621712#50621712&quot;&gt;Selenium: Check for the presence of element&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;After clicking the &lt;em&gt;Reply&lt;/em&gt; button, use &lt;code&gt;.visibility_of_element_located&lt;/code&gt; like below:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;browser.find_element_by_css_selector(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.reply-button&quot;&lt;/span&gt;).click()\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# Wait for initialize, in seconds&lt;/span&gt;\nwait = WebDriverWait(browser, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n\nemail = wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, &lt;span class=&quot;hljs-string&quot;&gt;&apos;.anonemail&apos;&lt;/span&gt;))).get_attribute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(email)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Following import:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.common.by &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; By\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.support.ui &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; WebDriverWait\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.support &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; expected_conditions &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; EC\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://selenium-python.readthedocs.io/waits.html&quot; rel=&quot;noreferrer&quot;&gt;Waits documentation&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can use waits. Check for more information in &lt;em&gt;&lt;a href=&quot;https://selenium-python.readthedocs.io/waits.html&quot; rel=&quot;noreferrer&quot;&gt;Selenium waits&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;In the example below we are waiting 10 seconds for the element to be visible, using the function &lt;em&gt;visibility_of_element_located&lt;/em&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;driver = webdriver.Firefox()\ndriver.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://somedomain/url_that_delays_loading&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n    element = WebDriverWait(driver, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;).until(\n        EC.visibility_of_element_located((By.ID, &lt;span class=&quot;hljs-string&quot;&gt;&quot;myDynamicElement&quot;&lt;/span&gt;))\n    )\n&lt;span class=&quot;hljs-keyword&quot;&gt;finally&lt;/span&gt;:\n    driver.quit()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;a href=&quot;https://selenium-python.readthedocs.io/waits.html#implicit-waits&quot; rel=&quot;nofollow noreferrer&quot;&gt;implicitly_wait&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; selenium &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; webdriver\n\ndriver = webdriver.Firefox()\ndriver.implicitly_wait(&lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;)\ndriver.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://url&quot;&lt;/span&gt;)\ndriver.find_element_by_id(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id_of_element&quot;&lt;/span&gt;).click()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It waits until element is loaded.&lt;/p&gt;\n&lt;p&gt;In your case the implementation would be,&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;browser.implicitly_wait(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\nbrowser.find_element_by_css_selector(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.reply-button&quot;&lt;/span&gt;).click()\nemail = browser.find_element_by_css_selector(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.anonemail&quot;&lt;/span&gt;).get_attribute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I also had a similar problem to yours, I tried using &lt;code&gt;implicit_wait()&lt;/code&gt; and &lt;code&gt;WebDriverWait&lt;/code&gt; but they did not work.\nSo I solved setting the &lt;code&gt;implicit_wait(10)&lt;/code&gt; in the &lt;code&gt;web driver&lt;/code&gt; instance and using this snippet to click on the button:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;element = driver.find_elements_by_xpath(&lt;span class=&quot;hljs-string&quot;&gt;&quot;//button[contains(string(), &apos;Log In&apos;)]&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\ndriver.execute_script(&lt;span class=&quot;hljs-string&quot;&gt;&quot;arguments[0].click();&quot;&lt;/span&gt;, element)\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":160,"title":"Selenium - wait until element is present, visible and interactable","content":"\n                \n&lt;p&gt;I have a Selenium script (Python) that clicks a reply button to make the class &lt;em&gt;anonemail&lt;/em&gt; appear. The time it takes for the class anonemail to appear varies. Because of that I have to use sleep until the element has appeared.&lt;/p&gt;\n&lt;p&gt;I want to wait until the class has appeared instead of using sleep. I have heard about wait commands, but I don&apos;t know how to use them.&lt;/p&gt;\n&lt;p&gt;This is what I have thus far:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;browser.find_element_by_css_selector(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.reply-button&quot;&lt;/span&gt;).click()\nsleep(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\nemail=browser.find_element_by_css_selector(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.anonemail&quot;&lt;/span&gt;).get_attribute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"selenium-wait-until-element-is-present-visible-and-interactable-1657384820071","postType":"QUESTION","createdAt":"2022-07-09T16:40:20.000Z","updatedAt":"2022-07-09T16:40:20.000Z","tags":[{"id":586,"name":"selenium-webdriver","slug":"selenium-webdriver","createdAt":"2022-07-09T16:40:20.000Z","updatedAt":"2022-07-09T16:40:20.000Z","Questions_Tags":{"questionId":160,"tagId":586}},{"id":587,"name":"webdriverwait","slug":"webdriverwait","createdAt":"2022-07-09T16:40:20.000Z","updatedAt":"2022-07-09T16:40:20.000Z","Questions_Tags":{"questionId":160,"tagId":587}},{"id":588,"name":"expected-condition","slug":"expected-condition","createdAt":"2022-07-09T16:40:20.000Z","updatedAt":"2022-07-09T16:40:20.000Z","Questions_Tags":{"questionId":160,"tagId":588}}],"relatedQuestions":[{"title":"Selenium - wait until element is present, visible and interactable","slug":"selenium-wait-until-element-is-present-visible-and-interactable-1657384820071","tags":[{"name":"selenium-webdriver","Questions_Tags":{"questionId":160,"tagId":586}},{"name":"webdriverwait","Questions_Tags":{"questionId":160,"tagId":587}},{"name":"expected-condition","Questions_Tags":{"questionId":160,"tagId":588}}]}]},"randomQuestions":[{"title":"When should I wrap quotes around a shell variable?","slug":"when-should-i-wrap-quotes-around-a-shell-variable-1657384659265"},{"title":"How can I prevent SQL injection in PHP?","slug":"how-can-i-prevent-sql-injection-in-php-1657384220094"},{"title":"Align inline-block DIVs to top of container element","slug":"align-inline-block-divs-to-top-of-container-element-1657387489610"},{"title":"How can I avoid Java code in JSP files, using JSP 2?","slug":"how-can-i-avoid-java-code-in-jsp-files-using-jsp-2-1657384618866"},{"title":"What does \"list comprehension\" and similar mean? How does it work and how can I use it?","slug":"what-does-\"list-comprehension\"-and-similar-mean-how-does-it-work-and-how-can-i-use-it-1657387996940"},{"title":"When can I use a forward declaration?","slug":"when-can-i-use-a-forward-declaration-1657388251827"},{"title":"What is a plain English explanation of \"Big O\" notation?","slug":"what-is-a-plain-english-explanation-of-\"big-o\"-notation-1657387641953"},{"title":"How do I return the response from an Observable/http/async call in angular?","slug":"how-do-i-return-the-response-from-an-observablehttpasync-call-in-angular-1657387335024"},{"title":"Sort array of objects by string property value","slug":"sort-array-of-objects-by-string-property-value-1657384860090"},{"title":"Iterating over dictionaries using 'for' loops","slug":"iterating-over-dictionaries-using-'for'-loops-1657388334481"},{"title":"The 3 different equals","slug":"the-3-different-equals-1657385490242"},{"title":"What is JSONP, and why was it created?","slug":"what-is-jsonp-and-why-was-it-created-1657387770563"},{"title":"With arrays, why is it the case that a[5] == 5[a]?","slug":"with-arrays-why-is-it-the-case-that-a5-5a-1657387956216"},{"title":"Parameterize an SQL IN clause","slug":"parameterize-an-sql-in-clause-1657387536064"},{"title":"How do I import a module given the full path?","slug":"how-do-i-import-a-module-given-the-full-path-1657388139965"},{"title":"Is there a CSS parent selector?","slug":"is-there-a-css-parent-selector-1657384430692"},{"title":"Sending Email in Android using JavaMail API without using the default/built-in app","slug":"sending-email-in-android-using-javamail-api-without-using-the-defaultbuilt-in-app-1657387883400"},{"title":"How to close/hide the Android soft keyboard programmatically?","slug":"how-to-closehide-the-android-soft-keyboard-programmatically-1657388217420"},{"title":"Do DOM tree elements with IDs become global properties?","slug":"do-dom-tree-elements-with-ids-become-global-properties-1657387475110"},{"title":"What is the best regular expression to check if a string is a valid URL?","slug":"what-is-the-best-regular-expression-to-check-if-a-string-is-a-valid-url-1657387618306"}]},"__N_SSG":true}