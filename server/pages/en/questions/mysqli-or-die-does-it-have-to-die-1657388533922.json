{"pageProps":{"data":{"answer":["\n&lt;blockquote&gt;\n&lt;p&gt;Does it have to die&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Quite contrary, &lt;strong&gt;it shouldn&apos;t &lt;code&gt;or die()&lt;/code&gt; ever.&lt;/strong&gt;&lt;br&gt;\nPHP is a language of bad heredity. Very bad heredity. And &lt;code&gt;or die()&lt;/code&gt; with error message is one of the worst rudiments:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;die throws the error message out, revealing some system internals to the potential attacker&lt;/li&gt;\n&lt;li&gt;such error message confuses casual users, because they don&apos;t understand what does it mean&lt;/li&gt;\n&lt;li&gt;Besides, &lt;code&gt;die&lt;/code&gt; kills the script in the middle, leaving users without  familiar interface to work with, so they&apos;d likely just drop out&lt;/li&gt;\n&lt;li&gt;it kills the script irrecoverably. While exceptions can be caught and gracefully handled&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;die()&lt;/code&gt; gives you no hint of &lt;em&gt;where the error has been occurred&lt;/em&gt;. And in a relatively big application it will be quite a pain to find.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;So, never use &lt;code&gt;die()&lt;/code&gt; with MySQL errors, &lt;strong&gt;even for the temporary debugging&lt;/strong&gt;: there are better ways.&lt;/p&gt;\n&lt;p&gt;Instead of manually checking for the error, just configure mysqli to throw exceptions on error, by adding the following line to your connection code&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;mysqli_report&lt;/span&gt;(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and after that just write every mysqli command as is, without any &lt;code&gt;or die&lt;/code&gt; or anything else:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = mysqli_query(&lt;span class=&quot;hljs-variable&quot;&gt;$link&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This code will throw an exception in case of error and thus you will always be informed of every problem without a single line of extra code.&lt;/p&gt;\n&lt;p&gt;A more detailed explanation on how to make your error reporting production ready, uniform and overall sensible while making your code much cleaner, you can find in my article on &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot; rel=&quot;nofollow noreferrer&quot;&gt;PHP error reporting&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;or&lt;/code&gt; is just an operator (very similar to &lt;code&gt;||&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;or die()&lt;/code&gt; syntax works because &lt;code&gt;or&lt;/code&gt; short-circuits, which means that if the first statement is true, &lt;code&gt;True or X&lt;/code&gt; will always be true, so &lt;code&gt;X&lt;/code&gt; isn&apos;t evaluated and your script doesn&apos;t &lt;code&gt;die&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Yes, you can provide a different function after the (or).\nI have tested the following:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_query&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sel_db&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;what!&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;some_func&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_error&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sel_db&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;some_func&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ERROR: &quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$str&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It doesn&apos;t have to be &lt;code&gt;die()&lt;/code&gt; specifically, but it needs to be something that&apos;ll make the script halt by calling &lt;code&gt;exit()&lt;/code&gt; or &lt;code&gt;die()&lt;/code&gt;, or something that throws an exception. Otherwise, the script will continue with the return value of that function (which is probably either null or some sort of junk) in &lt;code&gt;$update_result&lt;/code&gt;, which will almost certainly cause problems.&lt;/p&gt;\n    "],"id":599,"title":"mysqli or die, does it have to die?","content":"\n                \n&lt;p&gt;If I use a bit of code like this: &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$update_result&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_query&lt;/span&gt;( &lt;span class=&quot;hljs-variable&quot;&gt;$link&lt;/span&gt; , &lt;span class=&quot;hljs-variable&quot;&gt;$sql_update_login&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;die&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;Unable to execute query. &apos;&lt;/span&gt;. &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_error&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$link&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Does it have to die or can you put a different query afterwards?  Like a predetermined function that writes a log of the error to another table?  Such as:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$update_result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mysqli_query( &lt;span class=&quot;hljs-variable&quot;&gt;$link&lt;/span&gt; , &lt;span class=&quot;hljs-variable&quot;&gt;$sql_update_login&lt;/span&gt; ) or function(&apos;&lt;span class=&quot;hljs-variable&quot;&gt;$query&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What are the other options after &apos;or&apos;?  I haven&apos;t found it in the documentation, any clues are appreciated.&lt;/p&gt;\n    ","slug":"mysqli-or-die-does-it-have-to-die-1657388533922","postType":"QUESTION","createdAt":"2022-07-09T17:42:13.000Z","updatedAt":"2022-07-09T17:42:13.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Maintain the aspect ratio of a div with CSS","slug":"maintain-the-aspect-ratio-of-a-div-with-css-1657387513615"},{"title":"Center one and right/left align other flexbox element","slug":"center-one-and-rightleft-align-other-flexbox-element-1657387899083"},{"title":"How should a model be structured in MVC? [closed]","slug":"how-should-a-model-be-structured-in-mvc-closed-1657388394807"},{"title":"Do DOM tree elements with IDs become global properties?","slug":"do-dom-tree-elements-with-ids-become-global-properties-1657387475110"},{"title":"How do JavaScript closures work?","slug":"how-do-javascript-closures-work-1657384418555"},{"title":"PHP code is not being executed, but the code shows in the browser source code","slug":"php-code-is-not-being-executed-but-the-code-shows-in-the-browser-source-code-1657384553581"},{"title":"I just assigned a variable, but echo $variable shows something else","slug":"i-just-assigned-a-variable-but-echo-dollarvariable-shows-something-else-1657387574561"},{"title":"How to serve static files in Flask","slug":"how-to-serve-static-files-in-flask-1657387862496"},{"title":"How do I use extern to share variables between source files?","slug":"how-do-i-use-extern-to-share-variables-between-source-files-1657387453605"},{"title":"Arrays, linked lists and other data structures in cmd.exe (batch) script","slug":"arrays-linked-lists-and-other-data-structures-in-cmd.exe-(batch)-script-1657387558484"},{"title":"What is the difference between char s[] and char *s?","slug":"what-is-the-difference-between-char-s-and-char-*s-1657387823570"},{"title":"How do I pass variables and data from PHP to JavaScript?","slug":"how-do-i-pass-variables-and-data-from-php-to-javascript-1657384684553"},{"title":"getContactsFromFirebase() method return an empty list","slug":"getcontactsfromfirebase()-method-return-an-empty-list-1657388433928"},{"title":"javascript function doesn't work when link is clicked","slug":"javascript-function-doesn't-work-when-link-is-clicked-1657387767488"},{"title":"console.log() async or sync?","slug":"console.log()-async-or-sync-1657388401087"},{"title":"What is dependency injection?","slug":"what-is-dependency-injection-1657387953056"},{"title":"How do I split a list into equally-sized chunks?","slug":"how-do-i-split-a-list-into-equally-sized-chunks-1657384580399"},{"title":"Sending Email in Android using JavaMail API without using the default/built-in app","slug":"sending-email-in-android-using-javamail-api-without-using-the-defaultbuilt-in-app-1657387883400"},{"title":"Captured variable in a loop in C#","slug":"captured-variable-in-a-loop-in-c-1657387696779"},{"title":"How to remove \"noise\" from GCC/clang assembly output?","slug":"how-to-remove-\"noise\"-from-gccclang-assembly-output-1657387612391"}]},"__N_SSG":true}