{"pageProps":{"data":{"answer":["\n&lt;p&gt;This always works for me:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, this doesn&apos;t make PHP to show parse errors - the only way to show those errors is to modify your php.ini with this line:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(if you don&apos;t have access to &lt;code&gt;php.ini&lt;/code&gt;, then putting this line in &lt;code&gt;.htaccess&lt;/code&gt; might work too):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_flag display_errors &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can&apos;t catch parse errors when enabling error output at runtime, because it parses the file before actually executing anything (and since it encounters an error during this, it won&apos;t execute anything). You&apos;ll need to change the actual server configuration so that display_errors is on and the approriate error_reporting level is used. If you don&apos;t have access to php.ini, you may be able to use .htaccess or similar, depending on the server.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/78296/reasons-why-php-would-echo-errors-even-with-errorreporting0&quot;&gt;This question&lt;/a&gt; may provide additional info.&lt;/p&gt;\n    ","\n&lt;p&gt;Inside your &lt;strong&gt;php.ini&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then restart your web server.&lt;/p&gt;\n    ","\n&lt;p&gt;To display all errors you need to:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1. Have these lines in the PHP script you&apos;re calling from the browser (typically &lt;code&gt;index.php&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;2.(a) Make sure that this script has no syntax errors&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;or&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2.(b) Set &lt;code&gt;display_errors = On&lt;/code&gt; in your &lt;code&gt;php.ini&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Otherwise, it can&apos;t even run those 2 lines!&lt;/p&gt;\n\n&lt;p&gt;You can check for syntax errors in your script by running (at the command line):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php -l index.php\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you &lt;em&gt;include&lt;/em&gt; the script from another PHP script then it &lt;em&gt;will&lt;/em&gt; display syntax errors in the &lt;em&gt;included&lt;/em&gt; script.  For example:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;index.php&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Any syntax errors here will result in a blank screen in the browser&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;my_script.php&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;my_script.php&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;adjfkj &lt;span class=&quot;hljs-comment&quot;&gt;// This syntax error will be displayed in the browser&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Some web hosting providers allow you to change PHP parameters in the &lt;code&gt;.htaccess&lt;/code&gt; file.&lt;/p&gt;\n\n&lt;p&gt;You can add the following line:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_value display_errors &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I had the same issue as yours and this solution fixed it.&lt;/p&gt;\n    ","\n&lt;p&gt;You might find all of the settings for &quot;error reporting&quot; or &quot;display errors&quot; do not appear to work in PHP&amp;nbsp;7. That is because error handling has changed. Try this instead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n     &lt;span class=&quot;hljs-comment&quot;&gt;// Your code&lt;/span&gt;\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getTrace&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; in &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getFile&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getLine&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; called from &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;line&apos;&lt;/span&gt;];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or, to catch exceptions and errors in one go (this is not backward compatible with PHP&amp;nbsp;5):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n     &lt;span class=&quot;hljs-comment&quot;&gt;// Your code&lt;/span&gt;\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getTrace&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; in &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getFile&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getLine&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&apos; called from &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;file&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-string&quot;&gt;&apos; on line &apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$trace&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;line&apos;&lt;/span&gt;];\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This will work:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);    \n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is the best way to write it, but a syntax error gives blank output, so use the console to check for syntax errors. The best way to debug PHP code is to use the console; run the following:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php -l phpfilename.php\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Set this in your &lt;strong&gt;index.php&lt;/strong&gt; file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Create a file called &lt;strong&gt;php.ini&lt;/strong&gt; in the folder where your PHP file resides.&lt;/p&gt;\n\n&lt;p&gt;Inside php.ini add the following code (I am giving an simple error showing code):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n\ndisplay_startup_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As we are now running PHP 7, answers given here are not correct any more. The only one still OK is &lt;a href=&quot;https://stackoverflow.com/questions/1053424/how-do-i-get-php-errors-to-display/36269588#36269588&quot;&gt;the one from Frank Forte&lt;/a&gt;, as he talks about PHP&amp;nbsp;7.&lt;/p&gt;\n\n&lt;p&gt;On the other side, rather than trying to catch errors with a try/catch you can use a trick: use include.&lt;/p&gt;\n\n&lt;p&gt;Here three pieces of code:&lt;/p&gt;\n\n&lt;p&gt;File: tst1.php&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;On&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Missing &quot; and ;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Testing\n?&amp;gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running this in PHP&amp;nbsp;7 will show nothing.&lt;/p&gt;\n\n&lt;p&gt;Now, try this:&lt;/p&gt;\n\n&lt;p&gt;File: tst2.php&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;On&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;tst3.php&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;File: tst3.php&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Missing &quot; and ;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Testing\n?&amp;gt;\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now run tst2 which sets the error reporting, and then include tst3. You will see:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Parse error: syntax error, unexpected end of file, expecting variable (T_VARIABLE) or ${ (T_DOLLAR_OPEN_CURLY_BRACES) or {$ (T_CURLY_OPEN) in tst3.php on line 4&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;I would usually go with the following code in my plain PHP projects.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;defined&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ENVIRONMENT&apos;&lt;/span&gt;)){\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;define&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ENVIRONMENT&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;DEVELOPMENT&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$base_url&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;defined&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ENVIRONMENT&apos;&lt;/span&gt;))\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (ENVIRONMENT)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;DEVELOPMENT&apos;&lt;/span&gt;:\n            &lt;span class=&quot;hljs-variable&quot;&gt;$base_url&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://localhost/product/&apos;&lt;/span&gt;;\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL|E_STRICT);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;PRODUCTION&apos;&lt;/span&gt;:\n            &lt;span class=&quot;hljs-variable&quot;&gt;$base_url&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Production URL&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;/* https://google.com */&lt;/span&gt;\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n            &lt;span class=&quot;hljs-comment&quot;&gt;/* Mechanism to log errors */&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;exit&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;The application environment is not set correctly.&apos;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If, despite following all of the above answers (or you can&apos;t edit your php.ini file), you still can&apos;t get an error message, try making a new PHP file that enables error reporting and then include the problem file. eg:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;require_once&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;problem_file.php&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Despite having everything set properly in my &lt;code&gt;php.ini&lt;/code&gt; file, this was the only way I could catch a namespace error. My exact scenario was:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//file1.php&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;a&lt;/span&gt;\\&lt;span class=&quot;hljs-title class_&quot;&gt;b&lt;/span&gt;;\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;x&lt;/span&gt; &lt;/span&gt;{\n    ...\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//file2.php&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;c&lt;/span&gt;\\&lt;span class=&quot;hljs-title class_&quot;&gt;d&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;c&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;d&lt;/span&gt;\\&lt;span class=&quot;hljs-title&quot;&gt;x&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Dies because it&apos;s not sure which &apos;x&apos; class to use&lt;/span&gt;\n&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;x&lt;/span&gt; &lt;/span&gt;{\n    ...\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you somehow find yourself in a situation where you can&apos;t modifiy the setting via &lt;code&gt;php.ini&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt; you&apos;re out of luck for displaying errors when your PHP scripts contain parse errors. You&apos;d then have to resolve to &lt;a href=&quot;http://stefaanlippens.net/php-lint-multiple-files-parallel&quot; rel=&quot;noreferrer&quot;&gt;linting the files on the command line&lt;/a&gt; like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;find . -name &lt;span class=&quot;hljs-string&quot;&gt;&apos;*.php&apos;&lt;/span&gt; -type f -print0 | xargs -&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; -n1 -P8 php -l | grep -v &lt;span class=&quot;hljs-string&quot;&gt;&quot;No syntax errors&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If your host is so locked down that it does not allow changing the value via &lt;code&gt;php.ini&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt;, it may also disallow changing the value via &lt;code&gt;ini_set&lt;/code&gt;. You can check that with the following PHP script:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( !&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ) ) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;display_errors cannot be set.&quot;&lt;/span&gt;;\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;changing display_errors via script is possible.&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do something like below:&lt;/p&gt;\n\n&lt;p&gt;Set the below parameters in your main index file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then based on your requirement you can choose which you want to show:&lt;/p&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; errors, warnings and notices:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL); OR &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; errors:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ERROR);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; warnings:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_WARNING);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;em&gt;all&lt;/em&gt; notices:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_NOTICE);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more information, check &lt;a href=&quot;http://php.net/manual/en/function.error-reporting.php&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can add your own custom error handler, which can provide extra debug information. Furthermore, you can set it up to send you the information via email.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ERR_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$errno&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errstr&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errfile&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$errline&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$msg&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;b&amp;gt;Something bad happened.&amp;lt;/b&amp;gt; [&lt;span class=&quot;hljs-subst&quot;&gt;$errno&lt;/span&gt;] &lt;span class=&quot;hljs-subst&quot;&gt;$errstr&lt;/span&gt; &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;\n    &amp;lt;b&amp;gt;File:&amp;lt;/b&amp;gt; &lt;span class=&quot;hljs-subst&quot;&gt;$errfile&lt;/span&gt; &amp;lt;br&amp;gt;\n    &amp;lt;b&amp;gt;Line:&amp;lt;/b&amp;gt; &lt;span class=&quot;hljs-subst&quot;&gt;$errline&lt;/span&gt; &amp;lt;br&amp;gt;\n    &amp;lt;pre&amp;gt;&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;json_encode&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;debug_backtrace&lt;/span&gt;(), JSON_PRETTY_PRINT).&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/pre&amp;gt; &amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$msg&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;EXC_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ERR_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;(), &lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getFile&lt;/span&gt;(), &lt;span class=&quot;hljs-variable&quot;&gt;$exception&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getLine&lt;/span&gt;());\n}\n\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;shutDownFunction&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_get_last&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;] == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ERR_HANDLER&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;message&quot;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt;], &lt;span class=&quot;hljs-variable&quot;&gt;$error&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;line&quot;&lt;/span&gt;]);\n    }\n}\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;set_error_handler&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;ERR_HANDLER&quot;&lt;/span&gt;, E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;register_shutdown_function&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;shutdownFunction&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;set_exception_handler&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXC_HANDLER&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This code on top should work:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, try to edit the code on the phone in the file:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;error_reporting =on\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The best/easy/fast solution that you can use if it&apos;s a quick debugging, is to surround your code with catching exceptions. That&apos;s what I&apos;m doing when I want to check something fast in production.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Page code&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Caught exception: &apos;&lt;/span&gt;,  &lt;span class=&quot;hljs-variable&quot;&gt;$e&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getMessage&lt;/span&gt;(), &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;    &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Turn off error reporting&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Report runtime errors&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ERROR | E_WARNING | E_PARSE);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Report all errors&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Same as error_reporting(E_ALL);&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;error_reporting&quot;&lt;/span&gt;, E_ALL);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Report all errors except E_NOTICE&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL &amp;amp; ~E_NOTICE);\n    &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;While your site is live, the &lt;code&gt;php.ini&lt;/code&gt; file should have display_errors disabled for security reasons. However, for the development environment, display_errors can be enabled for troubleshooting. &lt;/p&gt;\n    ","\n&lt;p&gt;Just write:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do this by changing the  php.ini file and add the following &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\ndisplay_startup_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OR you can also use the following code as this always works for me&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Accepted asnwer including extra options. In PHP files for in my DEVELOPMENT apache vhost (.htaccess if you can ensure it doesn&apos;t get into production):&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, this doesn&apos;t make PHP to show parse errors - the only way to show those errors is to modify your php.ini with this line:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(if you don&apos;t have access to &lt;code&gt;php.ini&lt;/code&gt;, then putting this line in &lt;code&gt;.htaccess&lt;/code&gt; might work too):&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// I&apos;ve added some extra options that set E_ALL as per https://www.php.net/manual/en/errorfunc.configuration.php.&lt;/span&gt;\nphp_flag log_errors on\nphp_flag display_errors on\nphp_flag display_startup_errors on\nphp_value error_reporting &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;\nphp_value error_log /&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;/www/mywebsite.ext/logs/php.error.log\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you have &lt;a href=&quot;https://en.wikipedia.org/wiki/Xdebug&quot; rel=&quot;nofollow noreferrer&quot;&gt;Xdebug&lt;/a&gt; installed you can override every setting by setting:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;xdebug.force_display_errors = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\nxdebug.force_error_reporting = -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;force_display_errors&lt;/p&gt;\n  \n  &lt;p&gt;Type: int, Default value: 0, Introduced in Xdebug &amp;gt;= 2.3 If this\n  setting is set to 1 then errors will always be displayed, no matter\n  what the setting of PHP&apos;s display_errors is.&lt;/p&gt;\n  \n  &lt;p&gt;force_error_reporting&lt;/p&gt;\n  \n  &lt;p&gt;Type: int, Default value: 0, Introduced in Xdebug &amp;gt;= 2.3\n  This setting is a bitmask, like error_reporting. This bitmask will be logically ORed with the bitmask represented by error_reporting to dermine which errors should be displayed. This setting can only be made in php.ini and allows you to force certain errors from being shown no matter what an application does with ini_set().&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;You might want to use this code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Report all errors except E_NOTICE&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL &amp;amp; ~E_NOTICE);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Display all PHP errors &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);  &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;error_reporting&apos;&lt;/span&gt;, E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Turn off all error reporting&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If it is on the command line, you can run &lt;code&gt;php&lt;/code&gt; with &lt;code&gt;-ddisplay_errors=1&lt;/code&gt; to override the setting in &lt;code&gt;php.ini&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;php -ddisplay_errors=1 script.php\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Put this at the top of your page.&lt;/p&gt;\n    ","\n&lt;p&gt;Input this on the top of your code&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And in the php.ini file, insert this:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This must work.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;You can show Php error in your display via simple ways.\nFirstly, just put this below code in your php.ini file.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;display_errors = on;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;(if you don&apos;t have access to php.ini, then putting this line in .htaccess might work too):&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;php_flag display_errors &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;OR you can also use the following code in your index.php file&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_startup_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In Unix &lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot; rel=&quot;nofollow noreferrer&quot;&gt;CLI&lt;/a&gt;, it&apos;s very practical to redirect &lt;a href=&quot;https://unix.stackexchange.com/questions/42728/what-does-31-12-23-do-in-a-script&quot;&gt;only errors to a file&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;./script &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&amp;gt; errors.log\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;From your script, either use &lt;code&gt;var_dump()&lt;/code&gt; or equivalent as usual (both STDOUT and STDERR will receive the output), but &lt;strong&gt;to write only in the log&lt;/strong&gt; file:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;fwrite&lt;/span&gt;(STDERR, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Debug infos\\n&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Write in errors.log^&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Then from another shell, for live changes:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;tail -f errors.log\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;or simply&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;watch cat errors.log\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":92,"title":"How do I get PHP errors to display?","content":"\n                \n&lt;p&gt;I have checked my PHP ini file (&lt;code&gt;php.ini&lt;/code&gt;) and &lt;code&gt;display_errors&lt;/code&gt; is set and also error reporting is &lt;code&gt;E_ALL&lt;/code&gt;. I have restarted my Apache webserver.&lt;/p&gt;\n\n&lt;p&gt;I have even put these lines at the top of my script, and it doesn&apos;t even catch simple parse errors. For example, I declare variables with a &lt;code&gt;&quot;$&quot;&lt;/code&gt; and I don&apos;t close statements&lt;code&gt;&quot;;&quot;&lt;/code&gt;. But all my scripts show a blank page on these errors, but I want to actually see the &lt;strong&gt;errors&lt;/strong&gt; in my browser output. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What is left to do?&lt;/p&gt;\n    ","slug":"how-do-i-get-php-errors-to-display-1657384570095","postType":"QUESTION","createdAt":"2022-07-09T16:36:10.000Z","updatedAt":"2022-07-09T16:36:10.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Order Bars in ggplot2 bar graph","slug":"order-bars-in-ggplot2-bar-graph-1657388099080"},{"title":"How do I install pip on Windows?","slug":"how-do-i-install-pip-on-windows-1657388147761"},{"title":"How can I transition height: 0; to height: auto; using CSS?","slug":"how-can-i-transition-height:-0-to-height:-auto-using-css-1657388022100"},{"title":"What is the `self` parameter in class methods?","slug":"what-is-the-self-parameter-in-class-methods-1657387518448"},{"title":"Deep cloning objects","slug":"deep-cloning-objects-1657387930865"},{"title":"How do I set, clear, and toggle a single bit?","slug":"how-do-i-set-clear-and-toggle-a-single-bit-1657388227052"},{"title":"How to return DataSnapshot value as a result of a method?","slug":"how-to-return-datasnapshot-value-as-a-result-of-a-method-1657387538165"},{"title":"How do I Pandas group-by to get sum?","slug":"how-do-i-pandas-group-by-to-get-sum-1657387908708"},{"title":"UnboundLocalError on local variable when reassigned after first use","slug":"unboundlocalerror-on-local-variable-when-reassigned-after-first-use-1657387685248"},{"title":"\"Least Astonishment\" and the Mutable Default Argument","slug":"\"least-astonishment\"-and-the-mutable-default-argument-1657384412508"},{"title":"addEventListener vs onclick","slug":"addeventlistener-vs-onclick-1657388191429"},{"title":"How does the Windows Command Interpreter (CMD.EXE) parse scripts?","slug":"how-does-the-windows-command-interpreter-(cmd.exe)-parse-scripts-1657387731560"},{"title":"How do I create variable variables?","slug":"how-do-i-create-variable-variables-1657384387679"},{"title":"How to generate a self-signed SSL certificate using OpenSSL? [closed]","slug":"how-to-generate-a-self-signed-ssl-certificate-using-openssl-closed-1657388298626"},{"title":"Deserialize JSON into C# dynamic object?","slug":"deserialize-json-into-c-dynamic-object-1657388568720"},{"title":"Why can't an element with a z-index value cover its child?","slug":"why-can't-an-element-with-a-z-index-value-cover-its-child-1657387707187"},{"title":"How do I get PHP errors to display?","slug":"how-do-i-get-php-errors-to-display-1657384570095"},{"title":"How do I profile a Python script?","slug":"how-do-i-profile-a-python-script-1657388346692"},{"title":"What is the meaning of single and double underscore before an object name?","slug":"what-is-the-meaning-of-single-and-double-underscore-before-an-object-name-1657387926929"},{"title":"Selenium \"selenium.common.exceptions.NoSuchElementException\" when using Chrome","slug":"selenium-\"selenium.common.exceptions.nosuchelementexception\"-when-using-chrome-1657388136699"}]},"__N_SSG":true}