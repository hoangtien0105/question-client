{"pageProps":{"data":{"answer":["\n&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;br&gt;\nFrom v0.20, &lt;code&gt;melt&lt;/code&gt; is a first order function, you can now use&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.melt(id_vars=[&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;], \n        var_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Date&quot;&lt;/span&gt;, \n        value_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Value&quot;&lt;/span&gt;)\n\n  location    name        Date  Value\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        A  &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        B   &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;        A  &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;        B   &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;        A  &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;        B   &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;OLD(ER) VERSIONS: &amp;lt;0.20&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;You can use &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/generated/pandas.melt.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;pd.melt&lt;/code&gt;&lt;/a&gt; to get most of the way there, and then sort:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df\n  location  name  Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;  Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        A  test        &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;        &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        B   foo        &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;        &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df2 = pd.melt(df, id_vars=[&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;], \n                  var_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Date&quot;&lt;/span&gt;, value_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Value&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df2\n  location  name        Date  Value\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        A  test    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        B   foo    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;        A  test    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;        B   foo    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;        A  test  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;        B   foo  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df2 = df2.sort([&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;])\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;df2\n  location  name        Date  Value\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        A  test    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;        A  test    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;        A  test  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        B   foo    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;        B   foo    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;        B   foo  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(Might want to throw in a &lt;code&gt;.reset_index(drop=True)&lt;/code&gt;, just to keep the output clean.)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;pd.DataFrame.sort&lt;/code&gt; &lt;a href=&quot;https://stackoverflow.com/questions/44123874/dataframe-object-has-no-attribute-sort&quot;&gt;has been deprecated&lt;/a&gt; in favour of &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_values.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;pd.DataFrame.sort_values&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Use &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.set_index.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;set_index&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.stack.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;MultiIndex Series&lt;/code&gt;, then for &lt;code&gt;DataFrame&lt;/code&gt; add &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.reset_index.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;reset_index&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;rename&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df1 = (df.set_index([&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;])\n         .stack()\n         .reset_index(name=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;)\n         .rename(columns={&lt;span class=&quot;hljs-string&quot;&gt;&apos;level_2&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;Date&apos;&lt;/span&gt;}))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; (df1)\n  location  name        Date  Value\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;        A  test    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;        A  test    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;        A  test  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;        B   foo    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;        B   foo    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;        B   foo  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;&lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/generated/pandas.wide_to_long.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;pd.wide_to_long&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;\n\n&lt;p&gt;You can add a prefix to your year columns and then feed directly to &lt;code&gt;pd.wide_to_long&lt;/code&gt;. I won&apos;t pretend this is &lt;em&gt;efficient&lt;/em&gt;, but it may in certain situations be more convenient than &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/generated/pandas.melt.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;pd.melt&lt;/code&gt;&lt;/a&gt;, e.g. when your columns already have an appropriate prefix.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.columns = np.hstack((df.columns[:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], df.columns[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;:].&lt;span class=&quot;hljs-built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: &lt;span class=&quot;hljs-string&quot;&gt;f&apos;Value&lt;span class=&quot;hljs-subst&quot;&gt;{x}&lt;/span&gt;&apos;&lt;/span&gt;)))\n\nres = pd.wide_to_long(df, stubnames=[&lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;], i=&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;, j=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Date&apos;&lt;/span&gt;).reset_index()\\\n        .sort_values([&lt;span class=&quot;hljs-string&quot;&gt;&apos;location&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;])\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(res)\n\n   name        Date location  Value\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  test    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;        A     &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  test    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;        A     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  test  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;        A     &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   foo    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;        B     &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   foo    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;        B     &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   foo  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;        B     &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I guess I found a simpler solution&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;temp1 = pd.melt(df1, id_vars=[&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;], var_name=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Date&apos;&lt;/span&gt;, value_name=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;)\ntemp2 = pd.melt(df1, id_vars=[&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;], var_name=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Date&apos;&lt;/span&gt;, value_name=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Value&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Concat whole &lt;code&gt;temp1&lt;/code&gt; with &lt;code&gt;temp2&lt;/code&gt;&apos;s column &lt;code&gt;name&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;temp1[&lt;span class=&quot;hljs-string&quot;&gt;&apos;new_column&apos;&lt;/span&gt;] = temp2[&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You now have what you asked for.&lt;/p&gt;\n    ","\n&lt;p&gt;Adding a link to a notebook which you can duplicate, demonstrating @DMS&apos;s answer using &lt;a href=&quot;https://pandas.pydata.org/docs/reference/api/pandas.melt.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;pandas.melt&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.melt(id_vars=[&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;], \n    var_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;date&quot;&lt;/span&gt;, \n    value_name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://deepnote.com/@DataScience/Unpivot-a-DataFrame-from-wide-to-long-format-lN7WlqOdSlqroI_7DGAkoA&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://deepnote.com/@DataScience/Unpivot-a-DataFrame-from-wide-to-long-format-lN7WlqOdSlqroI_7DGAkoA&lt;/a&gt;&lt;/p&gt;\n    "],"id":544,"title":"Convert columns into rows with Pandas","content":"\n                \n&lt;p&gt;So my dataset has some information by location for n dates. The problem is each date is actually a different column header. For example the CSV looks like&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;location    name    Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;    Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;    March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;\nA           &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\nB           &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;What I would like is for it to look like&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;location    name    Date        Value\nA           &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;  Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;       \nA           &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;  Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\nA           &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;  March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\nB           &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;   Jan-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;       \nB           &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;   Feb-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;\nB           &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;   March-&lt;span class=&quot;hljs-number&quot;&gt;2010&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;My problem is I don&apos;t know how many dates are in the column (though I know they will always start after name)&lt;/p&gt;\n    ","slug":"convert-columns-into-rows-with-pandas-1657388374964","postType":"QUESTION","createdAt":"2022-07-09T17:39:34.000Z","updatedAt":"2022-07-09T17:39:34.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Switch between two frames in tkinter?","slug":"switch-between-two-frames-in-tkinter-1657388528781"},{"title":"Get the row(s) which have the max value in groups using groupby","slug":"get-the-row(s)-which-have-the-max-value-in-groups-using-groupby-1657388014787"},{"title":"Convert Rows to columns using 'Pivot' in SQL Server","slug":"convert-rows-to-columns-using-'pivot'-in-sql-server-1657388372528"},{"title":"How can I find the time complexity of an algorithm?","slug":"how-can-i-find-the-time-complexity-of-an-algorithm-1657388486001"},{"title":"The ViewData item that has the key 'XXX' is of type 'System.Int32' but must be of type 'IEnumerable<SelectListItem>'","slug":"the-viewdata-item-that-has-the-key-'xxx'-is-of-type-'system.int32'-but-must-be-of-type-'ienumerablelessselectlistitemgreater'-1657388454191"},{"title":"What is __init__.py for?","slug":"what-is-__init__.py-for-1657388415243"},{"title":"What is the (function() { } )() construct in JavaScript?","slug":"what-is-the-(function()-)()-construct-in-javascript-1657385508348"},{"title":"How to reshape data from long to wide format","slug":"how-to-reshape-data-from-long-to-wide-format-1657384486421"},{"title":"Why can't an element with a z-index value cover its child?","slug":"why-can't-an-element-with-a-z-index-value-cover-its-child-1657387707187"},{"title":"What is the difference between char s[] and char *s?","slug":"what-is-the-difference-between-char-s-and-char-*s-1657387823570"},{"title":"Learning Regular Expressions [closed]","slug":"learning-regular-expressions-closed-1657384719460"},{"title":"Grouping functions (tapply, by, aggregate) and the *apply family","slug":"grouping-functions-(tapply-by-aggregate)-and-the-*apply-family-1657387844286"},{"title":"How to avoid using Select in Excel VBA","slug":"how-to-avoid-using-select-in-excel-vba-1657384286300"},{"title":"Prefer composition over inheritance?","slug":"prefer-composition-over-inheritance-1657387399409"},{"title":"How to make a div 100% height of the browser window","slug":"how-to-make-a-div-100percent-height-of-the-browser-window-1657388265955"},{"title":"Scanner is skipping nextLine() after using next() or nextFoo()?","slug":"scanner-is-skipping-nextline()-after-using-next()-or-nextfoo()-1657384379697"},{"title":"SQL injection that gets around mysql_real_escape_string()","slug":"sql-injection-that-gets-around-mysql_real_escape_string()-1657384364747"},{"title":"Serialize and Deserialize Json and Json Array in Unity","slug":"serialize-and-deserialize-json-and-json-array-in-unity-1657388273270"},{"title":"Using i and j as variables in MATLAB","slug":"using-i-and-j-as-variables-in-matlab-1657388506358"},{"title":"What is the strict aliasing rule?","slug":"what-is-the-strict-aliasing-rule-1657384742852"}]},"__N_SSG":true}