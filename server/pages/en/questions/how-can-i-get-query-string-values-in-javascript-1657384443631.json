{"pageProps":{"data":{"answer":["\n&lt;p&gt;&lt;strong&gt;Update: Jan-2022&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Proxy()&lt;/code&gt;&lt;/a&gt; is more &lt;a href=&quot;https://jsben.ch/MeP5G&quot; rel=&quot;noreferrer&quot;&gt;performant&lt;/a&gt; than using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Object.fromEntries()&lt;/code&gt;&lt;/a&gt; and better supported&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; params = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Proxy&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;), {\n  &lt;span class=&quot;hljs-attr&quot;&gt;get&lt;/span&gt;: &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;searchParams, prop&lt;/span&gt;) =&amp;gt;&lt;/span&gt; searchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(prop),\n});\n&lt;span class=&quot;hljs-comment&quot;&gt;// Get the value of &quot;some_key&quot; in eg &quot;https://example.com/?some_key=some_value&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; value = params.&lt;span class=&quot;hljs-property&quot;&gt;some_key&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;some_value&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Update: June-2021&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;For a specific case when you need all query params:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; urlSearchParams = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; params = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fromEntries&lt;/span&gt;(urlSearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;entries&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Update: Sep-2018&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;You can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#Browser_compatibility&quot; rel=&quot;noreferrer&quot;&gt;URLSearchParams&lt;/a&gt; which is simple and has &lt;a href=&quot;https://caniuse.com/urlsearchparams&quot; rel=&quot;noreferrer&quot;&gt;decent (but not complete) browser support&lt;/a&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; urlParams = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; myParam = urlParams.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myParam&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Original&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;You don&apos;t need jQuery for that purpose. You can use just some pure JavaScript:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name, url = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.location.href&lt;/span&gt;) {\n    name = name.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\[\\]]/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\\\$&amp;amp;&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[?&amp;amp;]&apos;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&apos;(=([^&amp;amp;#]*)|&amp;amp;|#|$)&apos;&lt;/span&gt;),\n        results = regex.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(url);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!results) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!results[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(results[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// query string: ?foo=lorem&amp;amp;bar=&amp;amp;baz&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;lorem&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bar = &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;&quot; (present with empty value)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; baz = &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;baz&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;&quot; (present with no value)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qux = &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;qux&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// null (absent)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;NOTE: If a parameter is present several times (&lt;code&gt;?foo=lorem&amp;amp;foo=ipsum&lt;/code&gt;), you will get the first value (&lt;code&gt;lorem&lt;/code&gt;). There is no standard about this and usages vary, see for example this question: &lt;a href=&quot;https://stackoverflow.com/questions/1746507/authoritative-position-of-duplicate-http-get-query-keys&quot;&gt;Authoritative position of duplicate HTTP GET query keys&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;NOTE: The function is case-sensitive. If you prefer case-insensitive parameter name, &lt;a href=&quot;https://stackoverflow.com/questions/3939715/case-insensitive-regex-in-javascript&quot;&gt;add &apos;i&apos; modifier to RegExp&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;NOTE: If you&apos;re getting a no-useless-escape eslint error, you can replace &lt;code&gt;name = name.replace(/[\\[\\]]/g, &apos;\\\\$&amp;amp;&apos;);&lt;/code&gt; with &lt;code&gt;name = name.replace(/[[\\]]/g, &apos;\\\\$&amp;amp;&apos;)&lt;/code&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;This is an update based on the new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot; rel=&quot;noreferrer&quot;&gt;URLSearchParams specs&lt;/a&gt; to achieve the same result more succinctly. See answer titled &quot;&lt;a href=&quot;https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript/901144#12151322&quot;&gt;URLSearchParams&lt;/a&gt;&quot; below.&lt;/p&gt;\n    ","\n&lt;p&gt;Some of the solutions posted here are inefficient. Repeating the regular expression search every time the script needs to access a parameter is completely unnecessary, one single function to split up the parameters into an associative-array style object is enough. If you&apos;re not working with the HTML 5 History API, this is only necessary once per page load.  The other suggestions here also fail to decode the URL correctly.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; urlParams;\n(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onpopstate&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; match,\n        pl     = &lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// Regex for replacing addition symbol with a space&lt;/span&gt;\n        search = &lt;span class=&quot;hljs-regexp&quot;&gt;/([^&amp;amp;=]+)=?([^&amp;amp;]*)/g&lt;/span&gt;,\n        decode = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(s.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(pl, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;)); },\n        query  = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  \n    urlParams = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (match = search.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(query))\n       urlParams[&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])] = &lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n})();&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Example querystring:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;?i=main&amp;amp;mode=front&amp;amp;sid=de8d49b78a85a322c4155015fdce22c4&amp;amp;enc=+Hello%20&amp;amp;empty&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Result:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; urlParams = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;enc&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot; Hello &quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;i&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;main&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;mode&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;front&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;sid&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;de8d49b78a85a322c4155015fdce22c4&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;empty&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(urlParams[&lt;span class=&quot;hljs-string&quot;&gt;&quot;mode&quot;&lt;/span&gt;]);\n&lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; &quot;front&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;empty&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; urlParams);\n&lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This could easily be improved upon to handle array-style query strings too.  An example of this is &lt;a href=&quot;http://jsbin.com/adali3/2&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;, but since array-style parameters aren&apos;t defined in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3986&quot; rel=&quot;noreferrer&quot;&gt;RFC 3986&lt;/a&gt; I won&apos;t pollute this answer with the source code. &lt;a href=&quot;https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript/23401756#23401756&quot;&gt;For those interested in a &quot;polluted&quot; version, look at campbeln&apos;s answer below&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Also, as pointed out in the comments, &lt;code&gt;;&lt;/code&gt; is a legal delimiter for &lt;code&gt;key=value&lt;/code&gt; pairs.  It would require a more complicated regex to handle &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;&amp;amp;&lt;/code&gt;, which I think is unnecessary because it&apos;s rare that &lt;code&gt;;&lt;/code&gt; is used and I would say even more unlikely that both would be used.  If you need to support &lt;code&gt;;&lt;/code&gt; instead of &lt;code&gt;&amp;amp;&lt;/code&gt;, just swap them in the regex.&lt;/p&gt;\n&lt;hr&gt; \nIf you&apos;re using a server-side preprocessing language, you might want to use its native JSON functions to do the heavy lifting for you.  For example, in PHP you can write:\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; urlParams = &amp;lt;?php echo &lt;span class=&quot;hljs-title function_&quot;&gt;json_encode&lt;/span&gt;($_GET, &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;_HEX_TAG);?&amp;gt;;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Much simpler!&lt;/p&gt;\n&lt;p&gt;#UPDATED&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;A new capability would be to retrieve repeated params as following &lt;code&gt;myparam=1&amp;amp;myparam=2&lt;/code&gt;. There is not a &lt;em&gt;specification&lt;/em&gt;, however, most of the current approaches follow the generation of an array.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myparam = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So, this is the approach to manage it:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; urlParams = {};\n(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onpopstate&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; match,\n        pl = &lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// Regex for replacing addition symbol with a space&lt;/span&gt;\n        search = &lt;span class=&quot;hljs-regexp&quot;&gt;/([^&amp;amp;=]+)=?([^&amp;amp;]*)/g&lt;/span&gt;,\n        decode = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(s.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(pl, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;));\n        },\n        query = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (match = search.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(query)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; urlParams) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;isArray&lt;/span&gt;(urlParams[&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])])) {\n                urlParams[&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])] = [urlParams[&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])]];\n            }\n            urlParams[&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]));\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            urlParams[&lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])] = &lt;span class=&quot;hljs-title function_&quot;&gt;decode&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n        }\n    }\n})();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;ES2015 (ES6)&lt;/h1&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;getQueryStringParams = &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;query&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; query\n        ? (&lt;span class=&quot;hljs-regexp&quot;&gt;/^[?#]/&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;test&lt;/span&gt;(query) ? query.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) : query)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;)\n            .&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;params, param&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; [key, value] = param.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n                    params[key] = value ? &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(value.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)) : &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n                }, {}\n            )\n        : {}\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h2&gt;Without jQuery&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qs = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a == &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ++i)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p=a[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (p.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n            b[p[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n            b[p[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(p[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;));\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; b;\n})(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;With an URL like &lt;code&gt;?topic=123&amp;amp;name=query+string&lt;/code&gt;, the following will return:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;qs[&lt;span class=&quot;hljs-string&quot;&gt;&quot;topic&quot;&lt;/span&gt;];    &lt;span class=&quot;hljs-comment&quot;&gt;// 123&lt;/span&gt;\nqs[&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;];     &lt;span class=&quot;hljs-comment&quot;&gt;// query string&lt;/span&gt;\nqs[&lt;span class=&quot;hljs-string&quot;&gt;&quot;nothere&quot;&lt;/span&gt;];  &lt;span class=&quot;hljs-comment&quot;&gt;// undefined (object)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h2&gt;Google method&lt;/h2&gt;\n&lt;p&gt;Tearing Google&apos;s code I found the method they use: &lt;code&gt;getUrlParameters&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;b&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; b === &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a !== h &amp;amp;&amp;amp; c) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; d = {}, b = b || k[B][vb], e = b[p](&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;), f = b[p](&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;), b = (f === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; ? b[&lt;span class=&quot;hljs-title class_&quot;&gt;Ya&lt;/span&gt;](e + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) : [b[&lt;span class=&quot;hljs-title class_&quot;&gt;Ya&lt;/span&gt;](e + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, f - e - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;, b[&lt;span class=&quot;hljs-title class_&quot;&gt;Ya&lt;/span&gt;](f + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)][K](&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;))[z](&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;), e = i.&lt;span class=&quot;hljs-property&quot;&gt;dd&lt;/span&gt; ? ia : &lt;span class=&quot;hljs-built_in&quot;&gt;unescape&lt;/span&gt;, f = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, g = b[w]; f &amp;lt; g; ++f) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; l = b[f][p](&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (l !== -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; q = b[f][I](&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l),\n                l = b[f][I](l + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n                l = l[&lt;span class=&quot;hljs-title class_&quot;&gt;Ca&lt;/span&gt;](&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                d[q] = &lt;span class=&quot;hljs-title function_&quot;&gt;e&lt;/span&gt;(l)\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (A) {}\n        }\n    }\n    c &amp;amp;&amp;amp; (a = d);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; d\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It is obfuscated, but it is understandable. It does not work because some variables are undefined.&lt;/p&gt;\n&lt;p&gt;They start to look for parameters on the url from &lt;code&gt;?&lt;/code&gt; and also from the hash &lt;code&gt;#&lt;/code&gt;. Then for each parameter they split in the equal sign &lt;code&gt;b[f][p](&quot;=&quot;)&lt;/code&gt; (which looks like &lt;code&gt;indexOf&lt;/code&gt;, they use the position of the char to get the key/value). Having it split they check whether the parameter has a value or not, if it has then they store the value of &lt;code&gt;d&lt;/code&gt;, otherwise they just continue.&lt;/p&gt;\n&lt;p&gt;In the end the object &lt;code&gt;d&lt;/code&gt; is returned, handling escaping and the &lt;code&gt;+&lt;/code&gt; sign. This object is just like mine, it has the same behavior.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;My method as a &lt;strong&gt;jQuery plugin&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;$&lt;/span&gt;) {\n    $.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt; = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;paramsArray&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; params = {};\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; paramsArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ++i)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; param = paramsArray[i]\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n            \n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (param.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; !== &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n                &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n            \n            params[param[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(param[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;));\n        }\n            \n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n    })(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;))\n})(jQuery);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Usage&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//Get a param&lt;/span&gt;\n$.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;param&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//-or-&lt;/span&gt;\n$.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;param&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-comment&quot;&gt;//This outputs something like...&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//&quot;val&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Get all params as object&lt;/span&gt;\n$.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//This outputs something like...&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//Object { param: &quot;val&quot;, param2: &quot;val&quot; }&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Set a param (only in the $.QueryString object, doesn&apos;t affect the browser&apos;s querystring)&lt;/span&gt;\n$.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;param&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;newvalue&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//This doesn&apos;t output anything, it just updates the $.QueryString object&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Convert object into string suitable for url a querystring (Requires jQuery)&lt;/span&gt;\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;param&lt;/span&gt;($.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt;)\n&lt;span class=&quot;hljs-comment&quot;&gt;//This outputs something like...&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//&quot;param=newvalue&amp;amp;param2=val&quot;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Update the url/querystring in the browser&apos;s location bar with the $.QueryString object&lt;/span&gt;\nhistory.&lt;span class=&quot;hljs-title function_&quot;&gt;replaceState&lt;/span&gt;({}, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt; + $.&lt;span class=&quot;hljs-title function_&quot;&gt;param&lt;/span&gt;($.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt;));\n&lt;span class=&quot;hljs-comment&quot;&gt;//-or-&lt;/span&gt;\nhistory.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({}, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt; + $.&lt;span class=&quot;hljs-title function_&quot;&gt;param&lt;/span&gt;($.&lt;span class=&quot;hljs-title class_&quot;&gt;QueryString&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h2&gt;&lt;a href=&quot;http://jsperf.com/querystring-with-javascript&quot; rel=&quot;noreferrer&quot;&gt;Performance test (split method against regex method)&lt;/a&gt; (&lt;a href=&quot;http://jsperf.com/&quot; rel=&quot;noreferrer&quot;&gt;jsPerf&lt;/a&gt;)&lt;/h2&gt;\n&lt;p&gt;Preparation code: methods declaration&lt;/p&gt;\n&lt;h3&gt;Split test code&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qs = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;GetQueryString&lt;/span&gt;(query);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; search = qs[&lt;span class=&quot;hljs-string&quot;&gt;&quot;q&quot;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = qs[&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; undef = qs[&lt;span class=&quot;hljs-string&quot;&gt;&quot;undefinedstring&quot;&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Regex test code&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; search = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;q&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; undef = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;undefinedstring&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Testing in Firefox 4.0 x86 on Windows Server 2008 R2 / 7 x64&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Split method&lt;/strong&gt;: 144,780 ±2.17% fastest&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Regex method&lt;/strong&gt;: 13,891 ±0.85% | 90% slower&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h1&gt;URLSearchParams&lt;/h1&gt;\n&lt;p&gt;Firefox 44+, Opera 36+, Edge 17+, Safari 10.3+ and Chrome 49+ support the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot; rel=&quot;noreferrer&quot;&gt;URLSearchParams&lt;/a&gt; API:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/01/urlsearchparams&quot; rel=&quot;noreferrer&quot;&gt;Chrome Announcement and details&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-36/&quot; rel=&quot;noreferrer&quot;&gt;Opera Announcement and details&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/44#Miscellaneous&quot; rel=&quot;noreferrer&quot;&gt;Firefox Announcement and details&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;There is a google-suggested &lt;strong&gt;&lt;a href=&quot;https://github.com/WebReflection/url-search-params&quot; rel=&quot;noreferrer&quot;&gt;URLSearchParams polyfill&lt;/a&gt;&lt;/strong&gt; for the stable versions of IE.&lt;/p&gt;\n&lt;p&gt;It is not standardized by &lt;a href=&quot;https://www.w3.org/TR/2014/WD-url-1-20141209/#interface-urlsearchparams&quot; rel=&quot;noreferrer&quot;&gt;W3C&lt;/a&gt;, but it is a living standard by &lt;a href=&quot;https://url.spec.whatwg.org&quot; rel=&quot;noreferrer&quot;&gt;WhatWG&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;You can use it on &lt;code&gt;location&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; params = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;or&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; params = (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(location)).&lt;span class=&quot;hljs-property&quot;&gt;searchParams&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or of course on any URL:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; url = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://example.com?foo=1&amp;amp;bar=2&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; params = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(url.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can get params also using a shorthand &lt;code&gt;.searchParams&lt;/code&gt; property on the URL object, like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; params = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;https://example.com?foo=1&amp;amp;bar=2&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;searchParams&lt;/span&gt;;\nparams.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;1&quot;&lt;/span&gt;\nparams.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;2&quot; &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You read/set parameters through the &lt;code&gt;get(KEY)&lt;/code&gt;, &lt;code&gt;set(KEY, VALUE)&lt;/code&gt;, &lt;code&gt;append(KEY, VALUE)&lt;/code&gt; API. You can also iterate over all values &lt;code&gt;for (let p of params) {}&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;A &lt;a href=&quot;https://trac.webkit.org/browser/trunk/Source/WebCore/platform/URLParser.cpp&quot; rel=&quot;noreferrer&quot;&gt;reference implementation&lt;/a&gt; and a &lt;a href=&quot;https://googlechrome.github.io/samples/urlsearchparams/&quot; rel=&quot;noreferrer&quot;&gt;sample page&lt;/a&gt; are available for auditing and testing.&lt;/p&gt;\n    ","\n&lt;p&gt;Improved version of &lt;a href=&quot;https://stackoverflow.com/questions/901115/get-querystring-values-with-jquery/901144#901144&quot;&gt;Artem Barger&apos;s answer&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getParameterByName&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; match = &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[?&amp;amp;]&apos;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=([^&amp;amp;]*)&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; match &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more information on improvement see: &lt;a href=&quot;http://james.padolsey.com/javascript/bujs-1-getparameterbyname/&quot; rel=&quot;noreferrer&quot;&gt;http://james.padolsey.com/javascript/bujs-1-getparameterbyname/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Just another recommendation. The plugin &lt;em&gt;&lt;a href=&quot;https://github.com/allmarkedup/jQuery-URL-Parser&quot; rel=&quot;nofollow noreferrer&quot;&gt;Purl&lt;/a&gt;&lt;/em&gt; allows to retrieve all parts of URL, including anchor, host, etc.&lt;/p&gt;\n&lt;p&gt;It can be used with or without jQuery.&lt;/p&gt;\n&lt;p&gt;Usage is very simple and cool:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = $.&lt;span class=&quot;hljs-title function_&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/folder/dir/index.html?item=value&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// jQuery version&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-title function_&quot;&gt;purl&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/folder/dir/index.html?item=value&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// plain JS version&lt;/span&gt;\nurl.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;protocol&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// returns &apos;http&apos;&lt;/span&gt;\nurl.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;path&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// returns &apos;/folder/dir/index.html&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, as of Nov 11, 2014, Purl is no longer maintained and the author recommends using &lt;a href=&quot;https://github.com/medialize/URI.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;URI.js&lt;/a&gt; instead.  The jQuery plugin is different in that it focuses on elements - for usage with strings, just use &lt;code&gt;URI&lt;/code&gt; directly, with or without jQuery.  Similar code would look as such, fuller docs &lt;a href=&quot;http://medialize.github.io/URI.js/docs.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URI&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/folder/dir/index.html?item=value&apos;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// plain JS version&lt;/span&gt;\nurl.&lt;span class=&quot;hljs-title function_&quot;&gt;protocol&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// returns &apos;http&apos;&lt;/span&gt;\nurl.&lt;span class=&quot;hljs-title function_&quot;&gt;path&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// returns &apos;/folder/dir/index.html&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;&lt;em&gt;tl;dr&lt;/em&gt;&lt;/h1&gt;\n&lt;p&gt;A quick, &lt;strong&gt;complete solution&lt;/strong&gt;, which handles &lt;strong&gt;multivalued keys&lt;/strong&gt; and &lt;strong&gt;encoded characters&lt;/strong&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// using ES5   (200 characters)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qd = {};\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;) location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; s = item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;), k = s[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], v = s[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(s[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]); (qd[k] = qd[k] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(v)})\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// using ES6   (23 characters cooler)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qd = {};\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;) location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;`&amp;amp;`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; [k,v] = item.&lt;span class=&quot;hljs-property&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;`=`&lt;/span&gt;; v = v &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(v); (qd[k] = qd[k] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(v)})\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// as a function with reduce&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getQueryParams&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;\n    ? location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;`&amp;amp;`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;qd, item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; [k,v] = item.&lt;span class=&quot;hljs-property&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;`=`&lt;/span&gt;; v = v &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(v); (qd[k] = qd[k] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(v); &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; qd}, {})\n    : {}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4&gt;Multi-lined:&lt;/h4&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qd = {};\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;) location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; s = item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;),\n        k = s[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;],\n        v = s[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(s[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]); &lt;span class=&quot;hljs-comment&quot;&gt;//  null-coalescing / short-circuit&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//(k in qd) ? qd[k].push(v) : qd[k] = [v]&lt;/span&gt;\n    (qd[k] = qd[k] || []).&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(v) &lt;span class=&quot;hljs-comment&quot;&gt;// null-coalescing / short-circuit&lt;/span&gt;\n})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;What is all this code...&lt;br&gt;\n&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/q/476436/985454&quot;&gt;&quot;null-coalescing&quot;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Short-Circuit_Evaluation&quot; rel=&quot;noreferrer&quot;&gt;short-circuit evaluation&lt;/a&gt;&lt;br&gt;\nES6 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot; rel=&quot;noreferrer&quot;&gt;Destructuring assignments&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noreferrer&quot;&gt;Arrow functions&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals&quot; rel=&quot;noreferrer&quot;&gt;Template strings&lt;/a&gt;&lt;/em&gt;\n####Example:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;?a=1&amp;amp;b=0&amp;amp;c=3&amp;amp;d&amp;amp;e&amp;amp;a=5&amp;amp;a=t%20e%20x%20t&amp;amp;e=http%3A%2F%2Fw3schools.com%2Fmy%20test.asp%3Fname%3Dståle%26car%3Dsaab&quot;&lt;/span&gt;\n&amp;gt; qd\n&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;t e x t&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: [&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;e&lt;/span&gt;: [&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://w3schools.com/my test.asp?name=ståle&amp;amp;car=saab&quot;&lt;/span&gt;]\n\n&amp;gt; qd.&lt;span class=&quot;hljs-property&quot;&gt;a&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;5&quot;&lt;/span&gt;\n&amp;gt; qd[&lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;5&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br&gt;\n&lt;hr&gt;\n&lt;h1&gt;Read more... about the Vanilla JavaScript solution.&lt;/h1&gt;\n&lt;p&gt;&lt;em&gt;To access different parts of a URL use &lt;code&gt;location.(search|hash)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;h2&gt;Easiest (dummy) solution&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; queryDict = {};\nlocation.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {queryDict[item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;\n&lt;li&gt;Handles &lt;b&gt;empty keys&lt;/b&gt; correctly.&lt;/li&gt;\n&lt;li&gt;Overrides &lt;b&gt;multi-keys&lt;/b&gt; with &lt;b&gt;last&lt;/b&gt; value found.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;?a=1&amp;amp;b=0&amp;amp;c=3&amp;amp;d&amp;amp;e&amp;amp;a=5&quot;&lt;/span&gt;\n&amp;gt; queryDict\n&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;e&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Multi-valued keys&lt;/h2&gt;\n&lt;p&gt;Simple key check &lt;code&gt;(item in dict) ? dict.item.push(val) : dict.item = [val]&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qd = {};\nlocation.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {(item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; qd) ? qd[item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) : qd[item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = [item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]]})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;\n&lt;li&gt;Now returns &lt;b&gt;arrays&lt;/b&gt; instead.&lt;/li&gt;\n&lt;li&gt;Access values by &lt;code&gt;qd.key[index]&lt;/code&gt; or &lt;code&gt;qd[key][index]&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;gt; qd\n&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: [&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;e&lt;/span&gt;: [&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Encoded characters?&lt;/h2&gt;\n&lt;p&gt;Use &lt;code&gt;decodeURIComponent()&lt;/code&gt; for the second &lt;em&gt;or both&lt;/em&gt; splits.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qd = {};\nlocation.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; k = item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], v = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(item.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]); (k &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; qd) ? qd[k].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(v) : qd[k] = [v]})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;####Example:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;?a=1&amp;amp;b=0&amp;amp;c=3&amp;amp;d&amp;amp;e&amp;amp;a=5&amp;amp;a=t%20e%20x%20t&amp;amp;e=http%3A%2F%2Fw3schools.com%2Fmy%20test.asp%3Fname%3Dståle%26car%3Dsaab&quot;&lt;/span&gt;\n&amp;gt; qd\n&lt;span class=&quot;hljs-attr&quot;&gt;a&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;t e x t&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;b&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;c&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;]\n&lt;span class=&quot;hljs-attr&quot;&gt;d&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;// decodeURIComponent(undefined) returns &quot;undefined&quot; !!!*&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;e&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://w3schools.com/my test.asp?name=ståle&amp;amp;car=saab&quot;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br&gt;\n&lt;hr&gt;\n# From comments\n**\\*!!!** Please note, that `decodeURIComponent(undefined)` returns string `&quot;undefined&quot;`. The solution lies in a simple usage of [`&amp;amp;&amp;amp;`][5], which ensures that `decodeURIComponent()` is not called on undefined values. _(See the &quot;complete solution&quot; at the top.)_\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;v = v &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(v);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br&gt;\nIf the querystring is empty (`location.search == &quot;&quot;`), the result is somewhat misleading `qd == {&quot;&quot;: undefined}`. It is suggested to check the querystring before launching the parsing function likeso:\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;) location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(...)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Roshambo on snipplr.com has a simple script to achieve this described in &lt;em&gt;&lt;a href=&quot;http://snipplr.com/view/26662/get-url-parameters-with-jquery--improved/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Get URL Parameters with jQuery | Improved&lt;/a&gt;&lt;/em&gt;. With his script you also easily get to pull out just the parameters you want.&lt;/p&gt;\n&lt;p&gt;Here&apos;s the gist:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.urlParam = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name, url&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!url) {\n     url = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; results = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[\\\\?&amp;amp;]&apos;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=([^&amp;amp;#]*)&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(url);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!results) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; results[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] || &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then just get your parameters from the query string.&lt;/p&gt;\n&lt;p&gt;So if the URL/query string was &lt;code&gt;xyz.example/index.html?lang=de&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Just call &lt;code&gt;var langval = $.urlParam(&apos;lang&apos;);&lt;/code&gt;, and you&apos;ve got it.&lt;/p&gt;\n&lt;p&gt;UZBEKJON has a great blog post on this as well, &lt;em&gt;&lt;a href=&quot;http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Get URL parameters &amp;amp; values with jQuery&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re using jQuery, you can use a library, such as &lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot; rel=&quot;noreferrer&quot;&gt;jQuery BBQ: Back Button &amp;amp; Query Library&lt;/a&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;...jQuery BBQ provides a full &lt;code&gt;.deparam()&lt;/code&gt; method, along with both hash state management, and fragment / query string parse and merge utility methods.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Edit: Adding Deparam Example:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DeparamExample&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = $.deparam.&lt;span class=&quot;hljs-title function_&quot;&gt;querystring&lt;/span&gt;();\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//nameofparam is the name of a param from url&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//code below will get param if ajax refresh with hash&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; params.&lt;span class=&quot;hljs-property&quot;&gt;nameofparam&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n                params = jQuery.&lt;span class=&quot;hljs-property&quot;&gt;deparam&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fragment&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;);\n            }\n            \n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; params.&lt;span class=&quot;hljs-property&quot;&gt;nameofparam&lt;/span&gt; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; paramValue = params.&lt;span class=&quot;hljs-property&quot;&gt;nameofparam&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n                  \n            }\n        };&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;If you want to just use plain JavaScript, you could use...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getParamValue = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; resetParams = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; query = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;hljs-regexp&quot;&gt;/[?&amp;amp;;](.+?)=([^&amp;amp;;]+)/g&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; match;\n\n            params = {};\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (query) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (match = regex.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(query)) {\n                    params[match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(match[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n                }\n            }    \n        };\n\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;addEventListener&lt;/span&gt;\n    &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;popstate&apos;&lt;/span&gt;, resetParams);\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;resetParams&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;param&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(param) ? params[param] : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n\n})();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because of the new HTML History API and specifically &lt;code&gt;history.pushState()&lt;/code&gt; and &lt;code&gt;history.replaceState()&lt;/code&gt;, the URL can change which will invalidate the cache of parameters and their values.&lt;/p&gt;\n\n&lt;p&gt;This version will update its internal cache of parameters each time the history changes.&lt;/p&gt;\n    ","\n&lt;p&gt;Just use two &lt;strong&gt;splits&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; half = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(n + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; half !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(half.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I was reading all the previous and more complete answers. But I think that is the simplest and faster method. You can check in this jsPerf &lt;a href=&quot;http://jsperf.com/querystring-with-javascript/9&quot; rel=&quot;noreferrer&quot;&gt;benchmark&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;To solve the problem in Rup&apos;s comment, add a conditional split by changing the first line to the two below. But absolute accuracy means it&apos;s now slower than regexp (see &lt;a href=&quot;http://jsperf.com/querystring-with-javascript/10&quot; rel=&quot;noreferrer&quot;&gt;jsPerf&lt;/a&gt;).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; half = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt; + n + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!half) half = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt; + n + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; half !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(half.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So if you know you won&apos;t run into Rup&apos;s counter-case, this wins. Otherwise, regexp.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;em&gt;Or&lt;/em&gt; if you have control of the querystring and can guarantee that a value you are trying to get will never contain any URL encoded\n  characters (having these in a value would be a bad idea) - you can use\n  the following slightly more simplified and readable version of the 1st option:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getQueryStringValueByName&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; queryStringFromStartOfValue = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(name + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n         &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; queryStringFromStartOfValue !== &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt; ? queryStringFromStartOfValue.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;Here&apos;s my stab at making Andy E&apos;s excellent solution into a full fledged jQuery plugin:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;$&lt;/span&gt;) {\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;extend&lt;/span&gt;({      \n        &lt;span class=&quot;hljs-attr&quot;&gt;getQueryString&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;) {           \n            &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parseParams&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = {},\n                    e,\n                    a = &lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// Regex for replacing addition symbol with a space&lt;/span&gt;\n                    r = &lt;span class=&quot;hljs-regexp&quot;&gt;/([^&amp;amp;=]+)=?([^&amp;amp;]*)/g&lt;/span&gt;,\n                    d = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(s.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(a, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;)); },\n                    q = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (e = r.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(q))\n                    params[&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])] = &lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n            }\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queryStringParams&lt;/span&gt;)\n                &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queryStringParams&lt;/span&gt; = &lt;span class=&quot;hljs-title function_&quot;&gt;parseParams&lt;/span&gt;(); \n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queryStringParams&lt;/span&gt;[name];\n        }\n    });\n})(jQuery);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The syntax is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; someVar = $.&lt;span class=&quot;hljs-title function_&quot;&gt;getQueryString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myParam&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Best of both worlds!&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re doing more URL manipulation than simply parsing the querystring, you may find &lt;a href=&quot;http://medialize.github.com/URI.js/&quot; rel=&quot;noreferrer&quot;&gt;URI.js&lt;/a&gt; helpful. It is a library for manipulating URLs - and comes with all the bells and whistles. (Sorry for self-advertising here)&lt;/p&gt;\n\n&lt;p&gt;to convert your querystring into a map:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-title function_&quot;&gt;URI&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?foo=bar&amp;amp;bar=baz&amp;amp;foo=world&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;query&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\ndata == {\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;world&quot;&lt;/span&gt;],\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;baz&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(URI.js also &quot;fixes&quot; bad querystrings like &lt;code&gt;?&amp;amp;foo&amp;amp;&amp;amp;bar=baz&amp;amp;&lt;/code&gt; to &lt;code&gt;?foo&amp;amp;bar=baz&lt;/code&gt;)&lt;/p&gt;\n    ","\n&lt;p&gt;I like &lt;a href=&quot;https://stackoverflow.com/a/3867610/632117&quot;&gt;Ryan Phelan&apos;s solution&lt;/a&gt;. But I don&apos;t see any point of extending jQuery for that? There is no usage of jQuery functionality.&lt;/p&gt;\n\n&lt;p&gt;On the other hand, I like the built-in function in Google Chrome: window.location.getParameter.&lt;/p&gt;\n\n&lt;p&gt;So why not to use this? Okay, other browsers don&apos;t have. So let&apos;s create this function if it does not exist:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getParameter&lt;/span&gt; ) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getParameter&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;parseParams&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = {},\n            e,\n            a = &lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;,  &lt;span class=&quot;hljs-comment&quot;&gt;// Regex for replacing addition symbol with a space&lt;/span&gt;\n            r = &lt;span class=&quot;hljs-regexp&quot;&gt;/([^&amp;amp;=]+)=?([^&amp;amp;]*)/g&lt;/span&gt;,\n            d = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(s.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(a, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;)); },\n            q = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (e = r.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(q))\n            params[&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])] = &lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queryStringParams&lt;/span&gt;)\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queryStringParams&lt;/span&gt; = &lt;span class=&quot;hljs-title function_&quot;&gt;parseParams&lt;/span&gt;(); \n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;queryStringParams&lt;/span&gt;[key];\n  };\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This function is more or less from Ryan Phelan, but it is wrapped differently: clear name and no dependencies of other javascript libraries. &lt;a href=&quot;http://sharepointkunskap.wordpress.com/2012/01/11/get-url-parameters-with-javascript/&quot; rel=&quot;noreferrer&quot;&gt;More about this function on my blog&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a fast way to get an object similar to the PHP &lt;a href=&quot;http://php.net/manual/en/reserved.variables.get.php&quot;&gt;$_GET&lt;/a&gt; array:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get_query&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qs = url.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(url.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, result = {}; i &amp;lt; qs.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n        qs[i] = qs[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n        result[qs[i][&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(qs[i][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $_GET = &lt;span class=&quot;hljs-title function_&quot;&gt;get_query&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For the query string &lt;code&gt;x=5&amp;amp;y&amp;amp;z=hello&amp;amp;x=6&lt;/code&gt; this returns the object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n  &lt;span class=&quot;hljs-attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;6&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;z&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Keep it simple in plain JavaScript code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;qs&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vars = [], hash;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; hashes = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; hashes.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n    {\n        hash = hashes[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n        vars.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(hash[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n        vars[hash[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = hash[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vars[key];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Call it from anywhere in the JavaScript code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;hljs-title function_&quot;&gt;qs&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;someKey&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;From &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLUtils/search#Get_the_value_of_a_single_search_param&quot;&gt;the MDN&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;loadPageVar&lt;/span&gt; (sVar) {\n&amp;nbsp;&amp;nbsp;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;unescape&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;^(?:.*[&amp;amp;\\\\?]&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-built_in&quot;&gt;escape&lt;/span&gt;(sVar).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[\\.\\+\\*]/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\$&amp;amp;&quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&quot;(?:\\\\=([^&amp;amp;]*))?)?.*$&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;i&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&quot;$1&quot;&lt;/span&gt;));\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;loadPageVar&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;These are all great answers, but I needed something a bit more robust, and thought you all might like to have what I created.&lt;/p&gt;\n\n&lt;p&gt;It is a simple library method that does dissection and manipulation of URL parameters. The static method has the following sub methods that can be called on the subject URL:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;getHost&lt;/li&gt;\n&lt;li&gt;getPath&lt;/li&gt;\n&lt;li&gt;getHash&lt;/li&gt;\n&lt;li&gt;setHash&lt;/li&gt;\n&lt;li&gt;getParams&lt;/li&gt;\n&lt;li&gt;getQuery&lt;/li&gt;\n&lt;li&gt;setParam&lt;/li&gt;\n&lt;li&gt;getParam&lt;/li&gt;\n&lt;li&gt;hasParam&lt;/li&gt;\n&lt;li&gt;removeParam&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;getParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam1&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.test.com/folder/mypage.html?myparam1=1&amp;amp;myparam2=2#something&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URLParser&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;u&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; path=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,query=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,hash=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,params;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(u.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){\n        hash = u.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(u.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n        u = u.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; , u.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;));\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(u.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){\n        path = u.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; , u.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;));\n        query = u.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(u.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n        params= query.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n    }&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n        path = u;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {\n        &lt;span class=&quot;hljs-attr&quot;&gt;getHost&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; hostexp = &lt;span class=&quot;hljs-regexp&quot;&gt;/\\/\\/([\\w.-]*)/&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; match = hostexp.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(path);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (match != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; match.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;getPath&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; pathexp = &lt;span class=&quot;hljs-regexp&quot;&gt;/\\/\\/[\\w.-]*(?:\\/([^?]*))/&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; match = pathexp.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(path);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (match != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; match.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; match[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;getHash&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; hash;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;getParams&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; params\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;getQuery&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; query;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;setHash&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(query.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                query = &lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt; + query;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(value.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                query = query + &lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; + value;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; path + query;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;setParam&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name, value&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!params){\n                params= &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n            }\n            params.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(name + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt; + value);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; params.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(query.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                    query += &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;;\n                query += params[i];\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(query.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                query = &lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt; + query;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(hash.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                query = query + &lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; + hash;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; path + query;\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;getParam&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(params){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; params.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; pair = params[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(pair[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) == name)\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(pair[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n                }\n            }\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Query variable %s not found&apos;&lt;/span&gt;, name);\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;hasParam&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(params){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; params.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; pair = params[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(pair[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) == name)\n                        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n                }\n            }\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Query variable %s not found&apos;&lt;/span&gt;, name);\n        },\n        &lt;span class=&quot;hljs-attr&quot;&gt;removeParam&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;){\n            query = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(params){\n                &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newparams = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n                &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i &amp;lt; params.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;i++) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; pair = params[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(pair[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) != name)\n                          newparams .&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(params[i]);\n                }\n                params = newparams;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; params.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(query.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                        query += &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;;\n                    query += params[i];\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(query.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                query = &lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt; + query;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(hash.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                query = query + &lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt; + hash;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; path + query;\n        },\n    }\n}\n\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Host: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;getHost&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Path: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;getPath&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Query: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;getQuery&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hash: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;getHash&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Params Array: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;getParams&lt;/span&gt;() + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Param: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;getParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam1&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Has Param: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;hasParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam1&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(url + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Remove the first parameter&lt;/span&gt;\nurl = &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;removeParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam1&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(url + &lt;span class=&quot;hljs-string&quot;&gt;&apos; - Remove the first parameter&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Add a third parameter&lt;/span&gt;\nurl = &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;setParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam3&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(url + &lt;span class=&quot;hljs-string&quot;&gt;&apos; - Add a third parameter&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Remove the second parameter&lt;/span&gt;\nurl = &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;removeParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam2&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(url + &lt;span class=&quot;hljs-string&quot;&gt;&apos; - Remove the second parameter&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Add a hash&lt;/span&gt;\nurl = &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;setHash&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;newhash&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(url + &lt;span class=&quot;hljs-string&quot;&gt;&apos; - Set Hash&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Remove the last parameter&lt;/span&gt;\nurl = &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;removeParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam3&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(url + &lt;span class=&quot;hljs-string&quot;&gt;&apos; - Remove the last parameter&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Remove a parameter that doesn&apos;t exist&lt;/span&gt;\nurl = &lt;span class=&quot;hljs-title class_&quot;&gt;URLParser&lt;/span&gt;(url).&lt;span class=&quot;hljs-title function_&quot;&gt;removeParam&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;myparam3&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(url + &lt;span class=&quot;hljs-string&quot;&gt;&apos; - Remove a parameter that doesn\\&quot;t exist&amp;lt;br&amp;gt;&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Code golf:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;&amp;amp;&amp;amp;location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/gi&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; a) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; s = a[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;);\n    a[i]  = a[&lt;span class=&quot;hljs-built_in&quot;&gt;unescape&lt;/span&gt;(s[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;])] = &lt;span class=&quot;hljs-built_in&quot;&gt;unescape&lt;/span&gt;(s[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Display it!&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; a) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;write&lt;/span&gt;(i + &lt;span class=&quot;hljs-string&quot;&gt;&quot;:&quot;&lt;/span&gt; + a[i] + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br/&amp;gt;&quot;&lt;/span&gt;);   \n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On my Mac: &lt;code&gt;test.htm?i=can&amp;amp;has=cheezburger&lt;/code&gt; displays&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:can\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:cheezburger\n&lt;span class=&quot;hljs-attr&quot;&gt;i&lt;/span&gt;:can\n&lt;span class=&quot;hljs-attr&quot;&gt;has&lt;/span&gt;:cheezburger\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use regular expressions a lot, but not for that.&lt;/p&gt;\n\n&lt;p&gt;It seems easier and more efficient to me to read the query string once in my application, and build an object from all the key/value pairs like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; search = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substr&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n    p = s.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\&amp;amp;/&lt;/span&gt;), l = p.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;, kv, r = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (l === &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;}\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (l--) {\n    kv = p[l].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\=/&lt;/span&gt;);\n    r[kv[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(kv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] || &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) || &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r;\n}();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For a URL like &lt;code&gt;http://domain.com?param1=val1&amp;amp;param2=val2&lt;/code&gt; you can get their value later in your code as &lt;code&gt;search.param1&lt;/code&gt; and &lt;code&gt;search.param2&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = [];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(x = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; x &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ++x)\n            data.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(location.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/\\?&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;[x],&lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;([^\\n&amp;amp;]*)&quot;&lt;/span&gt;)))[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;])\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; data;\n    }\n\n\n&lt;span class=&quot;hljs-attr&quot;&gt;example&lt;/span&gt;:\ndata = &lt;span class=&quot;hljs-title function_&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;);\nquery string : ?id=&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&amp;amp;name=jet&amp;amp;foo=b\n&lt;span class=&quot;hljs-attr&quot;&gt;returns&lt;/span&gt;:\n    data[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;hljs-comment&quot;&gt;// 3&lt;/span&gt;\n    data[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;hljs-comment&quot;&gt;// jet&lt;/span&gt;\n    data[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] &lt;span class=&quot;hljs-comment&quot;&gt;// b&lt;/span&gt;\nor\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]) &lt;span class=&quot;hljs-comment&quot;&gt;// return 3&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Roshambo jQuery method wasn&apos;t taking care of decode URL&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;http://snipplr.com/view/26662/get-url-parameters-with-jquery--improved/&quot; rel=&quot;noreferrer&quot;&gt;http://snipplr.com/view/26662/get-url-parameters-with-jquery--improved/&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Just added that capability also while adding in  the return statement &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(results[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;)) || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can find the updated gist:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.urlParam = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;){\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; results = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[\\\\?&amp;amp;]&apos;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&apos;=([^&amp;amp;#]*)&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!results) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; }\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(results[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;)) || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I like &lt;a href=&quot;http://jquery-howto.blogspot.co.uk/2009/09/get-url-parameters-values-with-jquery.html&quot;&gt;this one&lt;/a&gt; (taken from jquery-howto.blogspot.co.uk):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// get an array with all querystring values&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// example: var valor = getUrlVars()[&quot;valor&quot;];&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUrlVars&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; vars = [], hash;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; hashes = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; hashes.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        hash = hashes[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n        vars.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(hash[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n        vars[hash[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = hash[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vars;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Works great for me.&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s my edit to &lt;a href=&quot;https://stackoverflow.com/questions/901115/get-query-string-values-in-javascript/3855394#3855394&quot;&gt;this excellent answer&lt;/a&gt; - with added ability to parse query strings with keys without values.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://sb.com/reg/step1?param&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; qs = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a == &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = {};\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ++i) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; p=a[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (p[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) p[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(p[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;));\n        b[p[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]] = p[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; b;\n})((url.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;))[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;b&gt;IMPORTANT!&lt;/b&gt; The parameter for that function in the last line is different. It&apos;s just an example of how one can pass an arbitrary URL to it. You can use last line from Bruno&apos;s answer to parse the current URL.&lt;/p&gt;\n\n&lt;p&gt;So what exactly changed? With url &lt;code&gt;http://sb.com/reg/step1?param=&lt;/code&gt; results will be same. But with url &lt;code&gt;http://sb.com/reg/step1?param&lt;/code&gt; Bruno&apos;s solution returns an object without keys, while mine returns an object with key &lt;code&gt;param&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; value.&lt;/p&gt;\n    ","\n&lt;p&gt;I needed an object from the query string, and I hate lots of code. It may not be the most robust in the universe, but it&apos;s just a few lines of code.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; q = {};\nlocation.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;){\n    q[i.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]]=i.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A URL like &lt;code&gt;this.htm?hello=world&amp;amp;foo=bar&lt;/code&gt; will create:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-attr&quot;&gt;hello&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;world&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s an extended version of Andy E&apos;s linked &quot;Handle array-style query strings&quot;-version. Fixed a bug (&lt;code&gt;?key=1&amp;amp;key[]=2&amp;amp;key[]=3&lt;/code&gt;; &lt;code&gt;1&lt;/code&gt; is lost and replaced with &lt;code&gt;[2,3]&lt;/code&gt;), made a few minor performance improvements (re-decoding of values, recalculating &quot;[&quot; position, etc.) and added a number of improvements (functionalized, support for &lt;code&gt;?key=1&amp;amp;key=2&lt;/code&gt;, support for &lt;code&gt;;&lt;/code&gt; delimiters). I left the variables annoyingly short, but added comments galore to make them readable (oh, and I reused &lt;code&gt;v&lt;/code&gt; within the local functions, sorry if that is confusing ;).&lt;/p&gt;\n\n&lt;p&gt;It will handle the following querystring...&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;?test=Hello&amp;amp;person=neek&amp;amp;person[]=jeff&amp;amp;person[]=jim&amp;amp;person[extra]=john&amp;amp;test3&amp;amp;nocache=1398914891264&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;...making it into an object that looks like...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;person&quot;&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;neek&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;jeff&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;jim&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;length&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;extra&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;john&quot;&lt;/span&gt;\n    },\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;test3&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;nocache&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;1398914891264&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As you can see above, this version handles some measure of &quot;malformed&quot; arrays, i.e. - &lt;code&gt;person=neek&amp;amp;person[]=jeff&amp;amp;person[]=jim&lt;/code&gt; or &lt;code&gt;person=neek&amp;amp;person=jeff&amp;amp;person=jim&lt;/code&gt; as the key is identifiable and valid (at least in dotNet&apos;s &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/xsc9a449.aspx&quot; rel=&quot;noreferrer&quot;&gt;NameValueCollection.Add&lt;/a&gt;):&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;If the specified key already exists in the target NameValueCollection\n  instance, the specified value is added to the existing comma-separated\n  list of values in the form &quot;value1,value2,value3&quot;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It seems &lt;a href=&quot;https://stackoverflow.com/questions/1746507/authoritative-position-of-duplicate-http-get-query-keys&quot;&gt;the jury is somewhat out&lt;/a&gt; on repeated keys as there is no spec. In this case, multiple keys are stored as an (fake)array. But do note that I &lt;strong&gt;do not&lt;/strong&gt; process values based on commas into arrays.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The code:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;getQueryStringKey = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getQueryStringAsObject&lt;/span&gt;()[key];\n};\n\n\ngetQueryStringAsObject = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b, cv, e, k, ma, sk, v, r = {},\n        d = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(v).&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;); }, &lt;span class=&quot;hljs-comment&quot;&gt;//# d(ecode) the v(alue)&lt;/span&gt;\n        q = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-comment&quot;&gt;//# suggested: q = decodeURIComponent(window.location.search.substring(1)),&lt;/span&gt;\n        s = &lt;span class=&quot;hljs-regexp&quot;&gt;/([^&amp;amp;;=]+)=?([^&amp;amp;;]*)/g&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//# original regex that does not allow for ; as a delimiter:   /([^&amp;amp;=]+)=?([^&amp;amp;]*)/g&lt;/span&gt;\n    ;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//# ma(make array) out of the v(alue)&lt;/span&gt;\n    ma = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//# If the passed v(alue) hasn&apos;t been setup as an object&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; v != &lt;span class=&quot;hljs-string&quot;&gt;&quot;object&quot;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# Grab the cv(current value) then setup the v(alue) as an object&lt;/span&gt;\n            cv = v;\n            v = {};\n            v.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# If there was a cv(current value), .push it into the new v(alue)&apos;s array&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//#     &lt;span class=&quot;hljs-doctag&quot;&gt;NOTE:&lt;/span&gt; This may or may not be 100% logical to do... but it&apos;s better than loosing the original value&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (cv) { &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(v, cv); }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; v;\n    };\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//# While we still have key-value e(ntries) from the q(uerystring) via the s(earch regex)...&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (e = s.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(q)) { &lt;span class=&quot;hljs-comment&quot;&gt;//# while((e = s.exec(q)) !== null) {&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//# Collect the open b(racket) location (if any) then set the d(ecoded) v(alue) from the above split key-value e(ntry) &lt;/span&gt;\n        b = e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;[&quot;&lt;/span&gt;);\n        v = &lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//# As long as this is NOT a hash[]-style key-value e(ntry)&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (b &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;//# b == &quot;-1&quot;&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# d(ecode) the simple k(ey)&lt;/span&gt;\n            k = &lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# If the k(ey) already exists&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (r[k]) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;//# ma(make array) out of the k(ey) then .push the v(alue) into the k(ey)&apos;s array in the r(eturn value)&lt;/span&gt;\n                r[k] = &lt;span class=&quot;hljs-title function_&quot;&gt;ma&lt;/span&gt;(r[k]);\n                &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(r[k], v);\n            }\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# Else this is a new k(ey), so just add the k(ey)/v(alue) into the r(eturn value)&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                r[k] = v;\n            }\n        }\n        &lt;span class=&quot;hljs-comment&quot;&gt;//# Else we&apos;ve got ourselves a hash[]-style key-value e(ntry) &lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# Collect the d(ecoded) k(ey) and the d(ecoded) sk(sub-key) based on the b(racket) locations&lt;/span&gt;\n            k = &lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, b));\n            sk = &lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(b + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, e[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;]&quot;&lt;/span&gt;, b)));\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# ma(make array) out of the k(ey) &lt;/span&gt;\n            r[k] = &lt;span class=&quot;hljs-title function_&quot;&gt;ma&lt;/span&gt;(r[k]);\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# If we have a sk(sub-key), plug the v(alue) into it&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (sk) { r[k][sk] = v; }\n            &lt;span class=&quot;hljs-comment&quot;&gt;//# Else .push the v(alue) into the k(ey)&apos;s array&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;call&lt;/span&gt;(r[k], v); }\n        }\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//# Return the r(eturn value)&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; r;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is a function I created a while back and I&apos;m quite happy with. It is not case sensitive - which is handy. Also, if the requested QS doesn&apos;t exist, it just returns an empty string.&lt;/p&gt;\n\n&lt;p&gt;I use a compressed version of this. I&apos;m posting uncompressed for the novice types to better explain what&apos;s going on.&lt;/p&gt;\n\n&lt;p&gt;I&apos;m sure this could be optimized or done differently to work faster, but it&apos;s always worked great for what I need.&lt;/p&gt;\n\n&lt;p&gt;Enjoy.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getQSP&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;sName, sURL&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; theItmToRtn = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; theSrchStrg = location.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (sURL) theSrchStrg = sURL;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sOrig = theSrchStrg;\n    theSrchStrg = theSrchStrg.&lt;span class=&quot;hljs-title function_&quot;&gt;toUpperCase&lt;/span&gt;();\n    sName = sName.&lt;span class=&quot;hljs-title function_&quot;&gt;toUpperCase&lt;/span&gt;();\n    theSrchStrg = theSrchStrg.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;?&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;) theSrchStrg = theSrchStrg + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; theSrchToken = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt; + sName + &lt;span class=&quot;hljs-string&quot;&gt;&quot;=&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (theSrchStrg.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(theSrchToken) != -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; theSrchTokenLth = theSrchToken.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; theSrchTokenLocStart = theSrchStrg.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(theSrchToken) + theSrchTokenLth;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; theLocOfNextAndSign = theSrchStrg.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;, theSrchTokenLocStart);\n        theItmToRtn = &lt;span class=&quot;hljs-built_in&quot;&gt;unescape&lt;/span&gt;(sOrig.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(theSrchTokenLocStart, theLocOfNextAndSign));\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;unescape&lt;/span&gt;(theItmToRtn);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you are using Browserify, you can use the &lt;code&gt;url&lt;/code&gt; module from &lt;em&gt;Node.js&lt;/em&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;url&apos;&lt;/span&gt;);\n\nurl.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/?bob=123&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;query&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// returns { &quot;bob&quot;: &quot;123&quot; }&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Further reading: &lt;a href=&quot;http://nodejs.org/api/url.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;URL Node.js v0.12.2 Manual &amp;amp; Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; You can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL&quot; rel=&quot;noreferrer&quot;&gt;URL&lt;/a&gt; interface, its quite widely adopted in almost all the new browser and if the code is going to run on an old browser you can use a &lt;a href=&quot;https://github.com/lifaon74/url-polyfill&quot; rel=&quot;noreferrer&quot;&gt;polyfill like this one&lt;/a&gt;. Here&apos;s a code example on how to use URL interface to get query parameters (aka search parameters)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; url = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;URL&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/?bob=123&apos;&lt;/span&gt;);\nurl.&lt;span class=&quot;hljs-property&quot;&gt;searchParams&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;bob&apos;&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can also use URLSearchParams for it, here&apos;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#Example&quot; rel=&quot;noreferrer&quot;&gt;an example from MDN&lt;/a&gt; to do it with URLSearchParams:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; paramsString = &lt;span class=&quot;hljs-string&quot;&gt;&quot;q=URLUtils.searchParams&amp;amp;topic=api&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; searchParams = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;URLSearchParams&lt;/span&gt;(paramsString);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Iterate the search parameters.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; p &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; searchParams) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(p);\n}\n\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;topic&quot;&lt;/span&gt;) === &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;topic&quot;&lt;/span&gt;) === &lt;span class=&quot;hljs-string&quot;&gt;&quot;api&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;getAll&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;topic&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// [&quot;api&quot;]&lt;/span&gt;\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;) === &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// true&lt;/span&gt;\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;topic&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;webdev&quot;&lt;/span&gt;);\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;q=URLUtils.searchParams&amp;amp;topic=api&amp;amp;topic=webdev&quot;&lt;/span&gt;\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;topic&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;More webdev&quot;&lt;/span&gt;);\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;q=URLUtils.searchParams&amp;amp;topic=More+webdev&quot;&lt;/span&gt;\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;delete&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;topic&quot;&lt;/span&gt;);\nsearchParams.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;q=URLUtils.searchParams&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;We&apos;ve just released &lt;a href=&quot;https://github.com/stretchr/arg.js&quot; rel=&quot;noreferrer&quot;&gt;arg.js&lt;/a&gt;, a project aimed at solving this problem once and for all.  It&apos;s traditionally been so difficult but now you can do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;hljs-title class_&quot;&gt;Arg&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or getting the whole lot:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = &lt;span class=&quot;hljs-title class_&quot;&gt;Arg&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;all&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and if you care about the difference between &lt;code&gt;?query=true&lt;/code&gt; and &lt;code&gt;#hash=true&lt;/code&gt; then you can use the &lt;code&gt;Arg.query()&lt;/code&gt; and &lt;code&gt;Arg.hash()&lt;/code&gt; methods.&lt;/p&gt;\n    ","\n&lt;p&gt;The problem with the top answer on that question is that it&apos;s not-supported parameters placed after #, but sometimes it&apos;s needed to get this value also.&lt;/p&gt;\n\n&lt;p&gt;I modified the answer to let it parse a full query string with a hash sign also:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getQueryStringData = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regexS = &lt;span class=&quot;hljs-string&quot;&gt;&quot;[\\\\?&amp;amp;#]&quot;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&quot;=([^&amp;amp;#]*)&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(regexS);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; results = regex.&lt;span class=&quot;hljs-title function_&quot;&gt;exec&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;?&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (results != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n        result = &lt;span class=&quot;hljs-built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(results[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt;));\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;GetQueryStringParams&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;sParam&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sPageURL = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;search&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sURLVariables = sPageURL.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;&apos;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; sURLVariables.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; sParameterName = sURLVariables[i].&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;=&apos;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (sParameterName[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] == sParam)\n        {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; sParameterName[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this is how you can use this function assuming the URL is&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;code&gt;http://dummy.com/?stringtext=jquery&amp;amp;stringword=jquerybyexample&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tech = &lt;span class=&quot;hljs-title class_&quot;&gt;GetQueryStringParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;stringtext&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; blog = &lt;span class=&quot;hljs-title class_&quot;&gt;GetQueryStringParams&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;stringword&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":59,"title":"How can I get query string values in JavaScript?","content":"\n                    &lt;div&gt;\n            &lt;aside class=&quot;s-notice s-notice__info post-notice js-post-notice mb16&quot; role=&quot;status&quot;&gt;\n        &lt;div class=&quot;d-flex fd-column fw-nowrap&quot;&gt;\n            &lt;div class=&quot;d-flex fw-nowrap&quot;&gt;\n                    &lt;div class=&quot;flex--item mr8&quot;&gt;\n                        &lt;svg aria-hidden=&quot;true&quot; class=&quot;svg-icon iconLock&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 18 18&quot;&gt;&lt;path d=&quot;M16 9a2 2 0 0 0-2-2V6A5 5 0 0 0 4 6v1a2 2 0 0 0-2 2v6c0 1.1.9 2 2 2h10a2 2 0 0 0 2-2V9Zm-7 5a2 2 0 1 1 0-4 2 2 0 0 1 0 4Zm3.1-7H5.9V6a3.1 3.1 0 0 1 6.2 0v1Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                    &lt;/div&gt;\n                &lt;div class=&quot;flex--item wmn0 fl1 lh-lg&quot;&gt;\n                    &lt;div class=&quot;flex--item fl1 lh-lg&quot;&gt;\n                        &lt;b&gt;This question&apos;s answers are a &lt;a href=&quot;/help/privileges/edit-community-wiki&quot;&gt;community effort&lt;/a&gt;&lt;/b&gt;. Edit existing answers to improve this post. It is not currently accepting new answers or interactions.\n                        \n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/aside&gt;\n\n    &lt;/div&gt;\n\n&lt;p&gt;Is there a plugin-less way of retrieving &lt;a href=&quot;http://en.wikipedia.org/wiki/Query_string&quot; rel=&quot;nofollow noreferrer&quot;&gt;query string&lt;/a&gt; values via jQuery (or without)? &lt;/p&gt;\n\n&lt;p&gt;If so, how? If not, is there a plugin which can do so?&lt;/p&gt;\n    ","slug":"how-can-i-get-query-string-values-in-javascript-1657384443631","postType":"QUESTION","createdAt":"2022-07-09T16:34:03.000Z","updatedAt":"2022-07-09T16:34:03.000Z","tags":[{"id":212,"name":"url","slug":"url","createdAt":"2022-07-09T16:34:03.000Z","updatedAt":"2022-07-09T16:34:03.000Z","Questions_Tags":{"questionId":59,"tagId":212}},{"id":213,"name":"plugins","slug":"plugins","createdAt":"2022-07-09T16:34:03.000Z","updatedAt":"2022-07-09T16:34:03.000Z","Questions_Tags":{"questionId":59,"tagId":213}},{"id":214,"name":"query-string","slug":"query-string","createdAt":"2022-07-09T16:34:03.000Z","updatedAt":"2022-07-09T16:34:03.000Z","Questions_Tags":{"questionId":59,"tagId":214}}],"relatedQuestions":[{"title":"How can I get query string values in JavaScript?","slug":"how-can-i-get-query-string-values-in-javascript-1657384443631","tags":[{"name":"url","Questions_Tags":{"questionId":59,"tagId":212}},{"name":"plugins","Questions_Tags":{"questionId":59,"tagId":213}},{"name":"query-string","Questions_Tags":{"questionId":59,"tagId":214}}]}]},"randomQuestions":[{"title":"How do I check if an array includes a value in JavaScript?","slug":"how-do-i-check-if-an-array-includes-a-value-in-javascript-1657387421185"},{"title":"What does the 'static' keyword do in a class?","slug":"what-does-the-'static'-keyword-do-in-a-class-1657388554238"},{"title":"What do lambda function closures capture? [duplicate]","slug":"what-do-lambda-function-closures-capture-duplicate-1657388161827"},{"title":"Android permission doesn't work even if I have declared it","slug":"android-permission-doesn't-work-even-if-i-have-declared-it-1657387726990"},{"title":"What is array to pointer decay?","slug":"what-is-array-to-pointer-decay-1657384709608"},{"title":"How do I count the occurrences of a list item?","slug":"how-do-i-count-the-occurrences-of-a-list-item-1657387916234"},{"title":"Google Maps JS API v3 - Simple Multiple Marker Example","slug":"google-maps-js-api-v3-simple-multiple-marker-example-1657388073335"},{"title":"What is the \"N+1 selects problem\" in ORM (Object-Relational Mapping)?","slug":"what-is-the-\"n+1-selects-problem\"-in-orm-(object-relational-mapping)-1657388055597"},{"title":"How to access the correct `this` inside a callback","slug":"how-to-access-the-correct-this-inside-a-callback-1657384283261"},{"title":"Make container shrink-to-fit child elements as they wrap","slug":"make-container-shrink-to-fit-child-elements-as-they-wrap-1657388134549"},{"title":"What is __init__.py for?","slug":"what-is-__init__.py-for-1657388415243"},{"title":"Firebase query if child of child contains a value","slug":"firebase-query-if-child-of-child-contains-a-value-1657387841291"},{"title":"Prefer composition over inheritance?","slug":"prefer-composition-over-inheritance-1657387399409"},{"title":"How to convert a factor to integer\\numeric without loss of information?","slug":"how-to-convert-a-factor-to-integernumeric-without-loss-of-information-1657387880273"},{"title":"The useState set method is not reflecting a change immediately","slug":"the-usestate-set-method-is-not-reflecting-a-change-immediately-1657384524775"},{"title":"How do I make a list of data frames?","slug":"how-do-i-make-a-list-of-data-frames-1657385480437"},{"title":"How to get all possible combinations of a list’s elements?","slug":"how-to-get-all-possible-combinations-of-a-list's-elements-1657388271070"},{"title":"How to join (merge) data frames (inner, outer, left, right)","slug":"how-to-join-(merge)-data-frames-(inner-outer-left-right)-1657384406445"},{"title":"Which equals operator (== vs ===) should be used in JavaScript comparisons?","slug":"which-equals-operator-(-vs-)-should-be-used-in-javascript-comparisons-1657384663105"},{"title":"Asking the user for input until they give a valid response","slug":"asking-the-user-for-input-until-they-give-a-valid-response-1657384376162"}]},"__N_SSG":true}