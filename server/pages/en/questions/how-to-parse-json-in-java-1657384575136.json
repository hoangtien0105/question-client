{"pageProps":{"data":{"answer":["\n&lt;p&gt;The &lt;a href=&quot;https://github.com/stleary/JSON-java&quot; rel=&quot;noreferrer&quot;&gt;org.json&lt;/a&gt; library is easy to use.&lt;/p&gt;\n&lt;p&gt;Just remember (while casting or using methods like &lt;code&gt;getJSONObject&lt;/code&gt; and &lt;code&gt;getJSONArray&lt;/code&gt;) that in JSON notation&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;[  ]&lt;/code&gt; represents an array, so library will parse it to &lt;code&gt;JSONArray&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;{  }&lt;/code&gt; represents an object, so library will parse it to &lt;code&gt;JSONObject&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Example code below:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.json.*;\n\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ... ; &lt;span class=&quot;hljs-comment&quot;&gt;//assign your JSON String here&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(jsonString);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// notice that `&quot;posts&quot;: [...]`&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length(); i++)\n{\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; arr.getJSONObject(i).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;);\n    ......\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You may find more examples from: &lt;a href=&quot;http://theoryapp.com/parse-json-in-java/&quot; rel=&quot;noreferrer&quot;&gt;Parse JSON in Java&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Downloadable jar:  &lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot; rel=&quot;noreferrer&quot;&gt;http://mvnrepository.com/artifact/org.json/json&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For the sake of the example lets assume you have a class &lt;strong&gt;&lt;code&gt;Person&lt;/code&gt;&lt;/strong&gt; with just a &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Person&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String name;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String name)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.name = name;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;&lt;a href=&quot;https://github.com/google/gson&quot;&gt;Google GSON&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/com.google.code.gson/gson&quot;&gt;Maven&lt;/a&gt;)&lt;/h1&gt;\n\n&lt;p&gt;My personal favourite as to the great JSON serialisation / de-serialisation of objects.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-type&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.fromJson(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;, Person.class);\nSystem.out.println(person.name); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n\nSystem.out.println(g.toJson(person)); &lt;span class=&quot;hljs-comment&quot;&gt;// {&quot;name&quot;:&quot;John&quot;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you want to get a single attribute out you can do it easily with the Google library as well:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JsonParser&lt;/span&gt;().parse(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;).getAsJsonObject();\n\nSystem.out.println(jsonObject.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;).getAsString()); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;&lt;a href=&quot;https://github.com/stleary/JSON-java&quot;&gt;Org.JSON&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/org.json/json&quot;&gt;Maven&lt;/a&gt;)&lt;/h1&gt;\n\n&lt;p&gt;If you don&apos;t need object de-serialisation but to simply get an attribute, you can try org.json (&lt;strong&gt;or look GSON example above!&lt;/strong&gt;)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;);\n\nSystem.out.println(obj.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/&quot;&gt;Jackson&lt;/a&gt; (&lt;a href=&quot;http://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind&quot;&gt;Maven&lt;/a&gt;)&lt;/h1&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mapper.readValue(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;name\\&quot;: \\&quot;John\\&quot;}&quot;&lt;/span&gt;, Person.class);\n\nSystem.out.println(user.name); &lt;span class=&quot;hljs-comment&quot;&gt;//John&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;If one wants to create Java object from JSON and vice versa, use GSON or JACKSON third party jars etc.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//from object to JSON &lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\ngson.toJson(yourObject);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// from JSON to object &lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;yourObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(JSONString,yourObject.class);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;But if one just want to parse a JSON string and get some values, (OR create a JSON string from scratch to send over wire) just use JaveEE jar which contains JsonReader, JsonArray, JsonObject etc. You may want to download the implementation of that spec like javax.json. With these two jars I am able to parse the json and use the values.  &lt;/p&gt;\n\n&lt;p&gt;These APIs actually follow the DOM/SAX parsing model of XML.       &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.get(); &lt;span class=&quot;hljs-comment&quot;&gt;// REST call &lt;/span&gt;\n    &lt;span class=&quot;hljs-type&quot;&gt;JsonReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonReader&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Json.createReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StringReader&lt;/span&gt;(response.readEntity(String.class)));\n    &lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonArray&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonReader.readArray();\n    &lt;span class=&quot;hljs-type&quot;&gt;ListIterator&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonArray.listIterator();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ( l.hasNext() ) {\n          &lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (JsonObject)l.next();\n          &lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ciAttr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; j.getJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ciAttributes&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/quick-json/&quot; rel=&quot;noreferrer&quot;&gt;quick-json parser&lt;/a&gt; is very straightforward, flexible, very fast and customizable. Try it&lt;/p&gt;\n\n&lt;p&gt;Features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Compliant with JSON specification (RFC4627) &lt;/li&gt;\n&lt;li&gt;High-Performance JSON parser &lt;/li&gt;\n&lt;li&gt;Supports Flexible/Configurable parsing approach &lt;/li&gt;\n&lt;li&gt;Configurable validation of key/value pairs of any JSON Hierarchy &lt;/li&gt;\n&lt;li&gt;Easy to use # Very small footprint&lt;/li&gt;\n&lt;li&gt;Raises developer friendly and easy to trace exceptions &lt;/li&gt;\n&lt;li&gt;Pluggable Custom Validation support - Keys/Values can be validated by configuring custom validators as and when encountered &lt;/li&gt;\n&lt;li&gt;Validating and Non-Validating parser support &lt;/li&gt;\n&lt;li&gt;Support for two types of configuration (JSON/XML) for using quick-JSON validating parser &lt;/li&gt;\n&lt;li&gt;Requires JDK 1.5&lt;/li&gt;\n&lt;li&gt;No dependency on external libraries &lt;/li&gt;\n&lt;li&gt;Support for JSON Generation through object serialisation &lt;/li&gt;\n&lt;li&gt;Support for collection type selection during parsing process &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;It can be used like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;JsonParserFactory factory=JsonParserFactory.getInstance();\nJSONParser parser=factory.newJsonParser();\nMap jsonMap=parser.parseJson(jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could use &lt;a href=&quot;https://github.com/google/gson&quot; rel=&quot;nofollow noreferrer&quot;&gt;Google Gson&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Using this library you only need to create a model with the same JSON structure. Then the model is automatically filled in. You have to call your variables as your JSON keys, or use &lt;a href=&quot;https://www.javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/annotations/SerializedName.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;@SerializedName&lt;/code&gt;&lt;/a&gt; if you want to use different names.&lt;/p&gt;\n&lt;h1&gt;JSON&lt;/h1&gt;\n&lt;p&gt;From your example:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n        &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;post_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-attr&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Model&lt;/h1&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyModel&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ArrayList&amp;lt;Post&amp;gt; posts = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String post_id;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;actor_id&quot;)&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// &amp;lt;- example SerializedName&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String actorId;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String picOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String nameOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String message;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String likesCount;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ArrayList&amp;lt;String&amp;gt; comments;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String timeOfPost;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Parsing&lt;/h1&gt;\n&lt;p&gt;Now you can parse using Gson library:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;MyModel&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(jsonString, MyModel.class);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Gradle import&lt;/h1&gt;\n&lt;p&gt;Remember to import the library in the app Gradle file&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;implementation &lt;span class=&quot;hljs-string&quot;&gt;&apos;com.google.code.gson:gson:2.8.6&apos;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// or earlier versions&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Automatic model generation&lt;/h1&gt;\n&lt;p&gt;You can generate model from JSON automatically using online tools like &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;h3&gt;A - Explanation&lt;/h3&gt;\n&lt;p&gt;You can use &lt;strong&gt;Jackson&lt;/strong&gt; libraries, for binding JSON String into &lt;strong&gt;POJO&lt;/strong&gt; (&lt;em&gt;&lt;strong&gt;Plain Old Java Object&lt;/strong&gt;&lt;/em&gt;) instances. POJO is simply a class with only private fields and public getter/setter methods. Jackson is going to traverse the methods (using &lt;strong&gt;reflection&lt;/strong&gt;), and maps the JSON object into the POJO instance as the field names of the class fits to the field names of the JSON object.&lt;/p&gt;\n&lt;p&gt;In your JSON object, which is actually a &lt;strong&gt;composite&lt;/strong&gt; object, the main object consists o two sub-objects. So, our POJO classes should have the same hierarchy. I&apos;ll call the whole JSON Object as &lt;strong&gt;Page&lt;/strong&gt; object. &lt;strong&gt;Page&lt;/strong&gt; object consist of a &lt;strong&gt;PageInfo&lt;/strong&gt; object, and a &lt;strong&gt;Post&lt;/strong&gt; object array.&lt;/p&gt;\n&lt;p&gt;So we have to create three different POJO classes;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Page&lt;/strong&gt; Class, a composite of &lt;strong&gt;PageInfo&lt;/strong&gt; Class and array of &lt;strong&gt;Post&lt;/strong&gt; Instances&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;PageInfo&lt;/strong&gt; Class&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Posts&lt;/strong&gt; Class&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The only package I&apos;ve used is Jackson ObjectMapper, what we do is binding data;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;com.fasterxml.jackson.databind.ObjectMapper\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The required dependencies, the jar files is listed below;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;jackson-core-2.5.1.jar&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;jackson-databind-2.5.1.jar&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;jackson-annotations-2.5.0.jar&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Here is the required code;&lt;/p&gt;\n&lt;h3&gt;B - Main POJO Class : Page&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex.model;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Page&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Post[] posts;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageInfo &lt;span class=&quot;hljs-title function_&quot;&gt;getPageInfo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageInfo;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPageInfo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(PageInfo pageInfo)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pageInfo = pageInfo;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Post[] getPosts() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; posts;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPosts&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post[] posts)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.posts = posts;\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;C - Child POJO Class : PageInfo&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex.model;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPageName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageName;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPageName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String pageName)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pageName = pageName;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPagePic&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pagePic;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPagePic&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String pagePic)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.pagePic = pagePic;\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;D - Child POJO Class : Post&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex.model;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String post_id;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String actor_id;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String picOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String nameOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String message;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; likesCount;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String[] comments;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; timeOfPost;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPost_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; post_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPost_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String post_id)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.post_id = post_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getActor_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; actor_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setActor_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String actor_id)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.actor_id = actor_id;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPicOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; picOfPersonWhoPosted;\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setPicOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String picOfPersonWhoPosted)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.picOfPersonWhoPosted = picOfPersonWhoPosted;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getNameOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; nameOfPersonWhoPosted;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setNameOfPersonWhoPosted&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String nameOfPersonWhoPosted)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.nameOfPersonWhoPosted = nameOfPersonWhoPosted;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; message;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setMessage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String message)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.message = message;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getLikesCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; likesCount;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setLikesCount&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; likesCount)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.likesCount = likesCount;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String[] getComments() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; comments;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setComments&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] comments)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.comments = comments;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getTimeOfPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; timeOfPost;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setTimeOfPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; timeOfPost)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.timeOfPost = timeOfPost;\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;E - Sample JSON File : sampleJSONFile.json&lt;/h3&gt;\n&lt;p&gt;I&apos;ve just copied your JSON sample into this file and put it under the project folder.&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n   &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;post_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;F - Demo Code&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.levo.jsonex;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.File;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.fasterxml.jackson.databind.ObjectMapper;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.levo.jsonex.model.Page;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.levo.jsonex.model.PageInfo;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.levo.jsonex.model.Post;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONDemo&lt;/span&gt; {\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;objectMapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n        \n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; objectMapper.readValue(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;File&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sampleJSONFile.json&quot;&lt;/span&gt;), Page.class);\n            \n            printParsedObject(page);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n            e.printStackTrace();\n        }\n        \n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printParsedObject&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Page page)&lt;/span&gt; {\n        printPageInfo(page.getPageInfo());\n        System.out.println();\n        printPosts(page.getPosts());\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printPageInfo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(PageInfo pageInfo)&lt;/span&gt; {\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Page Info;&quot;&lt;/span&gt;);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;**********&quot;&lt;/span&gt;);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPage Name : &quot;&lt;/span&gt; + pageInfo.getPageName());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPage Pic  : &quot;&lt;/span&gt; + pageInfo.getPagePic());\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printPosts&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post[] posts)&lt;/span&gt; {\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Page Posts;&quot;&lt;/span&gt;);\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;**********&quot;&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(Post post : posts) {\n            printPost(post);\n        }\n    }\n    \n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;printPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post post)&lt;/span&gt; {\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPost Id                   : &quot;&lt;/span&gt; + post.getPost_id());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tActor Id                  : &quot;&lt;/span&gt; + post.getActor_id());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tPic Of Person Who Posted  : &quot;&lt;/span&gt; + post.getPicOfPersonWhoPosted());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tName Of Person Who Posted : &quot;&lt;/span&gt; + post.getNameOfPersonWhoPosted());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tMessage                   : &quot;&lt;/span&gt; + post.getMessage());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tLikes Count               : &quot;&lt;/span&gt; + post.getLikesCount());\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tComments                  : &quot;&lt;/span&gt; + Arrays.toString(post.getComments()));\n        System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\tTime Of Post              : &quot;&lt;/span&gt; + post.getTimeOfPost());\n    }\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;G - Demo Output&lt;/h3&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Page Info;\n****(*****\n    Page Name : abc\n    Page Pic  : http:&lt;span class=&quot;hljs-comment&quot;&gt;//example.com/content.jpg&lt;/span&gt;\nPage Posts;\n**********\n    Post Id                   : &lt;span class=&quot;hljs-number&quot;&gt;123456789012_123456789012&lt;/span&gt;\n    Actor Id                  : &lt;span class=&quot;hljs-number&quot;&gt;1234567890&lt;/span&gt;\n    Pic Of Person Who Posted  : http:&lt;span class=&quot;hljs-comment&quot;&gt;//example.com/photo.jpg&lt;/span&gt;\n    Name Of Person Who Posted : Jane Doe\n    Message                   : Sounds cool. Can&lt;span class=&quot;hljs-string&quot;&gt;&apos;t wait to see it!\n    Likes Count               : 2\n    Comments                  : []\n    Time Of Post              : 1234567890\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Almost all the answers given requires a full deserialization of the JSON into a Java object before accessing the value in the property of interest. Another alternative, which does not go this route is to use &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JsonPATH&lt;/a&gt; which is like XPath for JSON and allows traversing of JSON objects.&lt;/p&gt;\n&lt;p&gt;It is a specification and the good folks at JayWay have created a Java implementation for the specification which you can find here: &lt;a href=&quot;https://github.com/jayway/JsonPath&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/jayway/JsonPath&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;So basically to use it, add it to your project, eg:&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.jayway.jsonpath&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;json-path&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${version}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and to use:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(yourJsonString, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pageName&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pagePic&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(yourJsonString, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pagePic&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(yourJsonString, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pagePosts[0].post_id&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;etc...&lt;/p&gt;\n&lt;p&gt;Check the JsonPath specification page for more information on the other ways to transverse JSON.&lt;/p&gt;\n    ","\n&lt;p&gt;Use &lt;a href=&quot;https://github.com/ralfstx/minimal-json&quot; rel=&quot;nofollow noreferrer&quot;&gt;minimal-json&lt;/a&gt; which is very fast and easy to use.\nYou can parse from String obj and Stream.&lt;/p&gt;\n&lt;p&gt;Sample data:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;order&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4711&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;NE555 Timer IC&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;cat-id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;645723&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;quantity&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;LM358N OpAmp IC&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;cat-id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;764525&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;quantity&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n  &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Parsing:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Json.parse(input).asObject();\n&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;orders&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; object.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;order&quot;&lt;/span&gt;).asInt();\n&lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; object.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;items&quot;&lt;/span&gt;).asArray();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Creating JSON:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Json.object().add(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sakib&quot;&lt;/span&gt;).add(&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Maven:&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.eclipsesource.minimal-json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;minimal-json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.9.4&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The below example shows how to read the text in the question, represented as the &quot;jsonText&quot; variable.  This solution uses the Java EE7 &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/json/package-summary.html&quot; rel=&quot;noreferrer&quot;&gt;javax.json&lt;/a&gt; API (which is mentioned in some of the other answers).  The reason I&apos;ve added it as a separate answer is that the following code shows how to &lt;em&gt;actually&lt;/em&gt; access some of the values shown in the question.  An &lt;a href=&quot;https://jsonp.java.net/download.html&quot; rel=&quot;noreferrer&quot;&gt;implementation of the javax.json API&lt;/a&gt; would be required to make this code run.  The full package for each of the classes required was included as I didn&apos;t want to declare &quot;import&quot; statements.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;javax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; \n    javax.json.Json.createReader(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StringReader&lt;/span&gt;(jsonText));\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jr.readObject();\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the page info.&lt;/span&gt;\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageInfo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jo.getJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;);\nSystem.out.println(pageInfo.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the posts.&lt;/span&gt;\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jo.getJsonArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the first post.&lt;/span&gt;\njavax.json.&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; posts.getJsonObject(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;//Read the post_id field.&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;postId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; post.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, before anyone goes and downvotes this answer because it doesn&apos;t use GSON, org.json, Jackson, or any of the other 3rd party frameworks available, it&apos;s an example of &quot;required code&quot; per the question to parse the provided text.  I am well aware that &lt;a href=&quot;http://openjdk.java.net/jeps/198&quot; rel=&quot;noreferrer&quot;&gt;adherence to the current standard JSR 353 was not being considered for JDK 9&lt;/a&gt; and as such the &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=353&quot; rel=&quot;noreferrer&quot;&gt;JSR 353 spec&lt;/a&gt; should be treated the same as any other 3rd party JSON handling implementation.&lt;/p&gt;\n    ","\n&lt;p&gt;Since nobody mentioned it yet, here is a beginning of a solution using &lt;a href=&quot;http://openjdk.java.net/projects/nashorn/&quot; rel=&quot;noreferrer&quot;&gt;Nashorn&lt;/a&gt; (JavaScript runtime part of Java 8, but deprecated in Java 11).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;EXTRACTOR_SCRIPT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;var fun = function(raw) { &quot;&lt;/span&gt; +\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;var json = JSON.parse(raw); &quot;&lt;/span&gt; +\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;return [json.pageInfo.pageName, json.pageInfo.pagePic, json.posts[0].post_id];};&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ScriptException, NoSuchMethodException {\n    &lt;span class=&quot;hljs-type&quot;&gt;ScriptEngine&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ScriptEngineManager&lt;/span&gt;().getEngineByName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;nashorn&quot;&lt;/span&gt;);\n    engine.eval(EXTRACTOR_SCRIPT);\n    &lt;span class=&quot;hljs-type&quot;&gt;Invocable&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;invocable&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (Invocable) engine;\n    &lt;span class=&quot;hljs-type&quot;&gt;JSObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (JSObject) invocable.invokeFunction(&lt;span class=&quot;hljs-string&quot;&gt;&quot;fun&quot;&lt;/span&gt;, JSON);\n    result.values().forEach(e -&amp;gt; System.out.println(e));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Performance comparison&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I wrote JSON content containing three arrays of respectively 20, 20 and 100 elements. I only want to get the 100 elements from the third array. I use the following JavaScript function to parse and get my entries.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; function(raw) {JSON.parse(raw).entries};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running the call a million times using &lt;strong&gt;Nashorn&lt;/strong&gt; takes 7.5~7.8 seconds&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;(JSObject) invocable.invokeFunction(&lt;span class=&quot;hljs-string&quot;&gt;&quot;fun&quot;&lt;/span&gt;, json);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;org.json&lt;/strong&gt; takes 20~21 seconds&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(JSON).getJSONArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;entries&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Jackson&lt;/strong&gt; takes 6.5~7 seconds&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;mapper.readValue(JSON, Entries.class).getEntries();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case Jackson performs better than Nashorn, which performs much better than org.json.\nNashorn API is harder to use than org.json&apos;s or Jackson&apos;s. Depending on your requirements Jackson and Nashorn both can be viable solutions.&lt;/p&gt;\n    ","\n&lt;p&gt;I believe the best practice should be to go through the official &lt;a href=&quot;http://json-processing-spec.java.net/&quot; rel=&quot;noreferrer&quot;&gt;Java JSON API&lt;/a&gt; which are still work in progress.&lt;/p&gt;\n    ","\n&lt;p&gt;This blew my mind with how easy it was. You can just pass a &lt;code&gt;String&lt;/code&gt; holding your JSON to the constructor of a JSONObject in the default org.json package. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;rootOfPage&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONArray&lt;/span&gt;(JSONString);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Done. &lt;em&gt;Drops microphone&lt;/em&gt;.\nThis works with &lt;code&gt;JSONObjects&lt;/code&gt; as well. After that, you can just look through your hierarchy of &lt;code&gt;Objects&lt;/code&gt; using the &lt;code&gt;get()&lt;/code&gt; methods on your objects.&lt;/p&gt;\n    ","\n&lt;p&gt;There are many JSON libraries available in Java.&lt;/p&gt;\n\n&lt;p&gt;The most notorious ones are: Jackson, GSON, Genson, FastJson and org.json.&lt;/p&gt;\n\n&lt;p&gt;There are typically three things one should look at for choosing any library:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Performance&lt;/li&gt;\n&lt;li&gt;Ease of use (code is simple to write and legible) - that goes with features.&lt;/li&gt;\n&lt;li&gt;For mobile apps: dependency/jar size&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Specifically for JSON libraries (and any serialization/deserialization libs), databinding is also usually of interest as it removes the need of writing boiler-plate code to pack/unpack the data.&lt;/p&gt;\n\n&lt;p&gt;For 1, see this benchmark: &lt;a href=&quot;https://github.com/fabienrenaud/java-json-benchmark&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/fabienrenaud/java-json-benchmark&lt;/a&gt; I did using &lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot; rel=&quot;noreferrer&quot;&gt;JMH&lt;/a&gt; which compares (jackson, gson, genson, fastjson, org.json, jsonp) performance of serializers and deserializers using stream and databind APIs.\nFor 2, you can find numerous examples on the Internet. The benchmark above can also be used as a source of examples...&lt;/p&gt;\n\n&lt;p&gt;Quick takeaway of the benchmark: &lt;strong&gt;Jackson&lt;/strong&gt; performs 5 to 6 times better than org.json and more than twice better than GSON.&lt;/p&gt;\n\n&lt;p&gt;For your particular example, the following code decodes your json with jackson:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyObj&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;Post&amp;gt; posts;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String post_id;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@JsonProperty(&quot;actor_id&quot;)&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String actorId;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@JsonProperty(&quot;picOfPersonWhoPosted&quot;)&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pictureOfPoster;\n        &lt;span class=&quot;hljs-meta&quot;&gt;@JsonProperty(&quot;nameOfPersonWhoPosted&quot;)&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String nameOfPoster;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String likesCount;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;String&amp;gt; comments;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String timeOfPost;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;JACKSON&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException {\n        &lt;span class=&quot;hljs-type&quot;&gt;MyObj&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JACKSON.readValue(args[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;], MyObj.class); &lt;span class=&quot;hljs-comment&quot;&gt;// assumes args[0] contains your json payload provided in your question.&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Let me know if you have any questions.&lt;/p&gt;\n    ","\n&lt;p&gt;In addition to other answers, I recomend this online opensource service &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsonschema2pojo.org&lt;/a&gt; for quick generating Java classes from json or json schema for GSON, Jackson 1.x or Jackson 2.x. For example, if you have:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n   &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n         &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;post_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1234567890&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1234567890&lt;/span&gt;\n         &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;a href=&quot;http://www.jsonschema2pojo.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsonschema2pojo.org&lt;/a&gt; for GSON generated:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Generated(&quot;org.jsonschema2pojo&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Container&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;pageInfo&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageInfo pageInfo;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;posts&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Post&amp;gt; posts = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Post&amp;gt;();\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Generated(&quot;org.jsonschema2pojo&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;pageName&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;pagePic&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String pagePic;\n}\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@Generated(&quot;org.jsonschema2pojo&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;post_id&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String postId;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;actor_id&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; actorId;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;picOfPersonWhoPosted&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String picOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;nameOfPersonWhoPosted&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String nameOfPersonWhoPosted;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;message&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String message;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;likesCount&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; likesCount;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;comments&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Object&amp;gt; comments = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;Object&amp;gt;();\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SerializedName(&quot;timeOfPost&quot;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Expose&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; timeOfPost;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you have some Java class(say Message) representing the JSON string(jsonString), you can use &lt;a href=&quot;https://github.com/FasterXML/jackson&quot; rel=&quot;noreferrer&quot;&gt;Jackson&lt;/a&gt;  JSON library with:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;Message message= &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;().readValue(jsonString, Message.class);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and from message object you can fetch any of its attribute.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Gson&lt;/strong&gt; is easy to learn and implement, what we need to know are following two methods&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;toJson()&lt;/em&gt;&lt;/strong&gt;  Convert Java object to JSON format&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;fromJson()&lt;/em&gt;&lt;/strong&gt;  Convert JSON into Java object&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;`&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.BufferedReader;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.FileReader;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.google.gson.Gson;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;GsonExample&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-type&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedReader&lt;/span&gt;(\n            &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;c:\\\\file.json&quot;&lt;/span&gt;));\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//convert the json string back to object&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;DataObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(br, DataObject.class);\n\n        System.out.println(obj);\n\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {\n        e.printStackTrace();\n    }\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;`&lt;/p&gt;\n    ","\n&lt;p&gt;There are many open source libraries present to parse JSON content to an object or just to read JSON values. Your requirement is just to read values and parsing it to custom object. So org.json library is enough in your case.&lt;/p&gt;\n\n&lt;p&gt;Use org.json library to parse it and create JsonObject:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(&amp;lt;jsonStr&amp;gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, use this object to get your values:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObj.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can see a complete example here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://codedestine.com/how-read-write-json-in-java&quot; rel=&quot;noreferrer&quot;&gt;How to parse JSON in Java&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Read the following blog post, &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;JSON in Java&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;This post is a little bit old, but still I want to answer you question.&lt;/p&gt;\n&lt;p&gt;Step 1: Create a POJO class of your data.&lt;/p&gt;\n&lt;p&gt;Step 2: Now create a object using JSON.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;employee&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n&lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n    employee =  mapper.readValue(newFile(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/home/sumit/employee.json&quot;&lt;/span&gt;), Employee.class);\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(JsonGenerationException e) {\n    e.printStackTrace();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For further reference you can refer to the following &lt;a href=&quot;http://javahai.blogspot.in/2016/03/create-java-object-from-json-string.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use the Gson Library to parse the JSON string.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(jsonAsString, JsonObject.class);\n\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;).getAsString();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pagePic&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;).getAsString();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;postId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;).get(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).getAsJsonObject().get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;).getAsString();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can also loop through the &quot;posts&quot; array as so:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; jsonObject.getAsJsonArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (JsonElement post : posts) {\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;postId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; post.getAsJsonObject().get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;).getAsString();\n  &lt;span class=&quot;hljs-comment&quot;&gt;//do something&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;I have JSON like this:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;{\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;: {\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;,\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Java class&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageInfo&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pageName;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String pagePic;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Getters and setters&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Code for converting this JSON to a Java class.&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;    &lt;span class=&quot;hljs-type&quot;&gt;PageInfo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageInfo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.parse(jsonString).read(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo&quot;&lt;/span&gt;, PageInfo.class);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;dependency&amp;gt;\n    &amp;lt;groupId&amp;gt;com.jayway.jsonpath&amp;lt;/groupId&amp;gt;\n    &amp;lt;artifactId&amp;gt;json-path&amp;lt;/artifactId&amp;gt;\n    &amp;lt;version&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;2.2&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;.0&lt;/span&gt;&amp;lt;/version&amp;gt;\n&amp;lt;/dependency&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Please do something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONParser&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonParser&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONParser&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (JSONObject) jsonParser.parse(contentString);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (String) jsonObject.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;productId&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;{\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;: {\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;,\n         &lt;span class=&quot;hljs-string&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n    },\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;: [\n         {\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;message&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;,\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;comments&quot;&lt;/span&gt;: [],\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;\n         }\n    ]\n}\n\nJava code :\n\n&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(responsejsonobj);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageName&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; obj.getJSONArray(&lt;span class=&quot;hljs-string&quot;&gt;&quot;posts&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length(); i++)\n{\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; arr.getJSONObject(i).getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;post_id&quot;&lt;/span&gt;);\n    ......etc\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;First you need to select an &lt;strong&gt;implementation library&lt;/strong&gt; to do that.&lt;/p&gt;\n\n&lt;p&gt;The &lt;strong&gt;Java API for JSON Processing (JSR 353)&lt;/strong&gt; provides portable APIs to parse, generate, transform, and query JSON using object model and streaming APIs. &lt;/p&gt;\n\n&lt;p&gt;The &lt;strong&gt;reference implementation&lt;/strong&gt; is here: &lt;a href=&quot;https://jsonp.java.net/&quot; rel=&quot;noreferrer&quot;&gt;https://jsonp.java.net/&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;Here you can find a &lt;strong&gt;list of implementations&lt;/strong&gt; of JSR 353:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27984619/what-are-the-api-that-does-implement-jsr-353-json&quot;&gt;What are the API that does implement JSR-353 (JSON)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And &lt;strong&gt;to help you decide&lt;/strong&gt;... I found this article as well:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://blog.takipi.com/the-ultimate-json-library-json-simple-vs-gson-vs-jackson-vs-json/&quot; rel=&quot;noreferrer&quot;&gt;http://blog.takipi.com/the-ultimate-json-library-json-simple-vs-gson-vs-jackson-vs-json/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you go for Jackson, here is a good article about conversion between JSON to/from Java using Jackson: &lt;a href=&quot;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/&quot; rel=&quot;noreferrer&quot;&gt;https://www.mkyong.com/java/how-to-convert-java-object-to-from-json-jackson/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hope it helps!&lt;/p&gt;\n    ","\n&lt;p&gt;Top answers on this page use too simple examples like object with one property (e.g. {name: value}). I think that still simple but real life example can help someone.&lt;/p&gt;\n&lt;p&gt;So this is the JSON returned by Google Translate API:&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; \n     &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;translations&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; \n          &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n            &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;&quot;translatedText&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Arbeit&quot;&lt;/span&gt;\n             &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n          &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n     &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I want to retrieve the value of &quot;translatedText&quot; attribute e.g. &quot;Arbeit&quot; using Google&apos;s Gson.&lt;/p&gt;\n&lt;p&gt;Two possible approaches:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Retrieve just one needed attribute&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt;  &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; callToTranslateApi(&lt;span class=&quot;hljs-string&quot;&gt;&quot;work&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;de&quot;&lt;/span&gt;);\n &lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonObject&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JsonParser&lt;/span&gt;().parse(json).getAsJsonObject();\n &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; jsonObject.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;).getAsJsonObject()\n         .get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;translations&quot;&lt;/span&gt;).getAsJsonArray()\n         .get(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).getAsJsonObject()\n         .get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;translatedText&quot;&lt;/span&gt;).getAsString();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Create Java object from JSON&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ApiResponse&lt;/span&gt; {\n     Data data;      \n     &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Data&lt;/span&gt; {\n         Translation[] translations;         \n         &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Translation&lt;/span&gt; {\n             String translatedText;\n         }\n      }\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;...&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;callToTranslateApi(&lt;span class=&quot;hljs-string&quot;&gt;&quot;work&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;de&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-type&quot;&gt;ApiResponse&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; g.fromJson(json, ApiResponse.class);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; response.data.translations[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].translatedText;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;You can use &lt;strong&gt;Jayway JsonPath&lt;/strong&gt;. Below is a GitHub link with source code, pom details and good documentation.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://github.com/jayway/JsonPath&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/jayway/JsonPath&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Please follow the below steps.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Add the jayway JSON path dependency in your class path using Maven or download the JAR file and manually add it.&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.jayway.jsonpath&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;json-path&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.2.0&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Please save your input JSON as a file for this example. In my case I saved your JSON as sampleJson.txt. Note you missed a comma between pageInfo and posts.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Read the JSON contents from the above file using bufferedReader and save it as String.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BufferedReader&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;FileReader&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;D:\\\\sampleJson.txt&quot;&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-type&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sb&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StringBuilder&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; br.readLine();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (line != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n    sb.append(line);\n    sb.append(System.lineSeparator());\n    line = br.readLine();\n}\nbr.close();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jsonInput&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; sb.toString();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: Parse your JSON string using jayway JSON parser.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Configuration.defaultConfiguration().jsonProvider().parse(jsonInput);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;: Read the details like below.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pageName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(document, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pageName&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pagePic&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(document, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pagePic&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;post_id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; JsonPath.read(document, &lt;span class=&quot;hljs-string&quot;&gt;&quot;$.posts[0].post_id&quot;&lt;/span&gt;);\n\nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pageName &quot;&lt;/span&gt; + pageName);\nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.pageInfo.pagePic &quot;&lt;/span&gt; + pagePic);\nSystem.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;$.posts[0].post_id &quot;&lt;/span&gt; + post_id);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;The output will be&lt;/strong&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;$.pageInfo.pageName = abc\n$.pageInfo.pagePic = http:&lt;span class=&quot;hljs-comment&quot;&gt;//example.com/content.jpg&lt;/span&gt;\n$.posts[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].post_id  = &lt;span class=&quot;hljs-number&quot;&gt;123456789012_123456789012&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you have maven project then add below dependency  or normal project add json-simple jar.&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;json&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;20180813&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Write below java code for convert JSON string to JSON array.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONArray&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ja&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONArray&lt;/span&gt;(String jsonString);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One can use &lt;a href=&quot;https://github.com/apache/incubator-netbeans-html4j&quot; rel=&quot;nofollow noreferrer&quot;&gt;Apache @Model annotation&lt;/a&gt; to create &lt;strong&gt;Java&lt;/strong&gt; model classes representing structure of &lt;strong&gt;JSON&lt;/strong&gt; files and use them to access various elements in the &lt;strong&gt;JSON&lt;/strong&gt; tree. Unlike other solutions this one &lt;em&gt;works completely without reflection&lt;/em&gt; and is thus suitable for environments where reflection is impossible or comes with significant overhead.&lt;/p&gt;\n\n&lt;p&gt;There is a &lt;a href=&quot;https://github.com/JaroslavTulach/incubator-netbeans-html4j/blob/examples/examples/jsonparse/README.md&quot; rel=&quot;nofollow noreferrer&quot;&gt;sample Maven project&lt;/a&gt; showing the usage. First of all it defines the structure:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Model(className=&quot;RepositoryInfo&quot;, properties = {\n    @Property(name = &quot;id&quot;, type = int.class),\n    @Property(name = &quot;name&quot;, type = String.class),\n    @Property(name = &quot;owner&quot;, type = Owner.class),\n    @Property(name = &quot;private&quot;, type = boolean.class),\n})&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RepositoryCntrl&lt;/span&gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Model(className = &quot;Owner&quot;, properties = {\n        @Property(name = &quot;login&quot;, type = String.class)\n    })&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;OwnerCntrl&lt;/span&gt; {\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and then it uses the generated RepositoryInfo and Owner classes to parse the provided input stream and pick certain information up while doing that:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;List&amp;lt;RepositoryInfo&amp;gt; repositories = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; initializeStream(args)) {\n    Models.parse(CONTEXT, RepositoryInfo.class, is, repositories);\n}\n\nSystem.err.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;there is &quot;&lt;/span&gt; + repositories.size() + &lt;span class=&quot;hljs-string&quot;&gt;&quot; repositories&quot;&lt;/span&gt;);\nrepositories.stream().filter((repo) -&amp;gt; repo != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;).forEach((repo) -&amp;gt; {\n    System.err.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;repository &quot;&lt;/span&gt; + repo.getName() + \n        &lt;span class=&quot;hljs-string&quot;&gt;&quot; is owned by &quot;&lt;/span&gt; + repo.getOwner().getLogin()\n    );\n})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That is it! In addition to that here is a &lt;a href=&quot;http://dew.apidesign.org/dew/#7138581&quot; rel=&quot;nofollow noreferrer&quot;&gt;live gist&lt;/a&gt; showing similar example together with asynchronous network communication.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;jsoniter&lt;/code&gt; (jsoniterator) is a relatively new and simple json library, designed to be simple and fast. All you need to do to deserialize json data is&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;JsonIterator.deserialize(jsonData, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;[].class);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;where &lt;code&gt;jsonData&lt;/code&gt; is a string of json data.&lt;/p&gt;\n\n&lt;p&gt;Check out the &lt;a href=&quot;http://jsoniter.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;official website&lt;/a&gt;\nfor more information.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;JsonNode&lt;/code&gt; for a structured tree representation of your JSON string. It&apos;s part of the rock solid &lt;a href=&quot;https://github.com/FasterXML/jackson&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;em&gt;jackson&lt;/em&gt; library&lt;/a&gt; which is omnipresent.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectMapper&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;JsonNode&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;yourObj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; mapper.readTree(&lt;span class=&quot;hljs-string&quot;&gt;&quot;{\\&quot;k\\&quot;:\\&quot;v\\&quot;}&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;We can use the JSONObject class to convert a JSON string to a JSON object,\nand to iterate over the JSON object. Use the following code.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JSONObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;jObj&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSONObject&lt;/span&gt;(contents.trim());\nIterator&amp;lt;?&amp;gt; keys = jObj.keys();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;( keys.hasNext() ) {\n  &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (String)keys.next();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( jObj.get(key) &lt;span class=&quot;hljs-keyword&quot;&gt;instanceof&lt;/span&gt; JSONObject ) {           \n    System.out.println(jObj.getString(String key));\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":93,"title":"How to parse JSON in Java","content":"\n                \n&lt;p&gt;I have the following JSON text. How can I parse it to get the values of &lt;code&gt;pageName&lt;/code&gt;, &lt;code&gt;pagePic&lt;/code&gt;, &lt;code&gt;post_id&lt;/code&gt;, etc.?&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;    &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n       &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageInfo&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n             &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pageName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n             &lt;span class=&quot;hljs-attr&quot;&gt;&quot;pagePic&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/content.jpg&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n             &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;post_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;123456789012_123456789012&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;actor_id&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;picOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com/photo.jpg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;nameOfPersonWhoPosted&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jane Doe&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sounds cool. Can&apos;t wait to see it!&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;likesCount&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n                  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;timeOfPost&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;\n             &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n        &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"how-to-parse-json-in-java-1657384575136","postType":"QUESTION","createdAt":"2022-07-09T16:36:15.000Z","updatedAt":"2022-07-09T16:36:15.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How do I pass a variable by reference?","slug":"how-do-i-pass-a-variable-by-reference-1657384657232"},{"title":"Calling a function of a module by using its name (a string)","slug":"calling-a-function-of-a-module-by-using-its-name-(a-string)-1657388565656"},{"title":"WebDriverWait not working as expected","slug":"webdriverwait-not-working-as-expected-1657387373148"},{"title":"What is __init__.py for?","slug":"what-is-__init__.py-for-1657388415243"},{"title":"How to deal with SettingWithCopyWarning in Pandas","slug":"how-to-deal-with-settingwithcopywarning-in-pandas-1657384778377"},{"title":"How do I pass variables and data from PHP to JavaScript?","slug":"how-do-i-pass-variables-and-data-from-php-to-javascript-1657384684553"},{"title":"Why don't flex items shrink past content size?","slug":"why-don't-flex-items-shrink-past-content-size-1657384687282"},{"title":"Why not use Double or Float to represent currency?","slug":"why-not-use-double-or-float-to-represent-currency-1657387417964"},{"title":"How to remove items from a list while iterating?","slug":"how-to-remove-items-from-a-list-while-iterating-1657384496375"},{"title":"Understanding slicing","slug":"understanding-slicing-1657384397680"},{"title":"srand() — why call it only once?","slug":"srand()-why-call-it-only-once-1657387794760"},{"title":"What is a raw type and why shouldn't we use it?","slug":"what-is-a-raw-type-and-why-shouldn't-we-use-it-1657384481079"},{"title":"Syntax error due to using a reserved word as a table or column name in MySQL","slug":"syntax-error-due-to-using-a-reserved-word-as-a-table-or-column-name-in-mysql-1657384689274"},{"title":"How can I prevent SQL injection in PHP?","slug":"how-can-i-prevent-sql-injection-in-php-1657384220094"},{"title":"Learning Regular Expressions [closed]","slug":"learning-regular-expressions-closed-1657384719460"},{"title":"Dynamically select data frame columns using $ and a character value","slug":"dynamically-select-data-frame-columns-using-dollar-and-a-character-value-1657387836662"},{"title":"What does \"list comprehension\" and similar mean? How does it work and how can I use it?","slug":"what-does-\"list-comprehension\"-and-similar-mean-how-does-it-work-and-how-can-i-use-it-1657387996940"},{"title":"How do I redirect to another webpage?","slug":"how-do-i-redirect-to-another-webpage-1657384869767"},{"title":"Submit same Partial View called multiple times data to controller?","slug":"submit-same-partial-view-called-multiple-times-data-to-controller-1657387887213"},{"title":"How do I merge two dictionaries in a single expression?","slug":"how-do-i-merge-two-dictionaries-in-a-single-expression-1657387593160"}]},"__N_SSG":true}