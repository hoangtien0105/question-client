{"pageProps":{"data":{"answer":["\n&lt;p&gt;Find the &lt;code&gt;index&lt;/code&gt; of the array element you want to remove using &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt;, and then remove that index with &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The splice() method changes the contents of an array by removing\nexisting elements and/or adding new elements.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; array = [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (index &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// only splice array when item is found&lt;/span&gt;\n  array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// 2nd parameter means remove one item only&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// array = [2, 9]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array); &lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;The second parameter of &lt;code&gt;splice&lt;/code&gt; is the number of elements to remove. Note that &lt;code&gt;splice&lt;/code&gt; modifies the array in place and returns a new array containing the elements that have been removed.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;For the reason of completeness, here are functions. The first function removes only a single occurrence (i.e. removing the first match of &lt;code&gt;5&lt;/code&gt; from &lt;code&gt;[2,5,9,1,5,8,5]&lt;/code&gt;), while the second function removes all occurrences:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeItemOnce&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, value&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(value);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (index &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeItemAll&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, value&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (i &amp;lt; arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[i] === value) {\n      arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n      ++i;\n    }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n}\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;removeItemOnce&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;))\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;removeItemAll&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;In TypeScript, these functions can stay type-safe with a type parameter:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; removeItem&amp;lt;T&amp;gt;(&lt;span class=&quot;hljs-attr&quot;&gt;arr&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;&amp;lt;T&amp;gt;, &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;: T): &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;&amp;lt;T&amp;gt; { \n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; index = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(value);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (index &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Edited on 2016 October&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Do it simple, intuitive and explicit (&lt;a href=&quot;https://en.wikipedia.org/wiki/Occam%27s_razor&quot; rel=&quot;noreferrer&quot;&gt;Occam&apos;s razor&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;Do it immutable (original array stays unchanged)&lt;/li&gt;\n&lt;li&gt;Do it with standard JavaScript functions, if your browser doesn&apos;t support them - &lt;strong&gt;use polyfill&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;In this code example I use &lt;strong&gt;&lt;code&gt;array.filter(...)&lt;/code&gt;&lt;/strong&gt; function to remove unwanted items from an array. This function doesn&apos;t change the original array and creates a new one. If your browser doesn&apos;t support this function (e.g. Internet Explorer before version 9, or Firefox before version 1.5), consider &lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-array&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;polyfilling with &lt;code&gt;core-js&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;h2&gt;Removing item (ECMA-262 Edition 5 code AKA old style JavaScript)&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n\narr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; item !== value\n})\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr)\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 1, 2, 4, 5 ]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Removing item (ECMAScript 6 code)&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; value = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n\narr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item !== value)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr)\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 1, 2, 4, 5 ]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; ECMAScript 6 &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; arrow function syntax is not supported in Internet Explorer at all, Chrome before version 45, Firefox before version 22, and Safari before version 10. To use ECMAScript 6 syntax in old browsers you can use &lt;a href=&quot;https://babeljs.io/&quot; rel=&quot;noreferrer&quot;&gt;BabelJS&lt;/a&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h2&gt;Removing multiple items (ECMAScript&amp;nbsp;7 code)&lt;/h2&gt;\n&lt;p&gt;An additional advantage of this method is that you can remove multiple items&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; forDeletion = [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n\narr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; !forDeletion.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(item))\n&lt;span class=&quot;hljs-comment&quot;&gt;// !!! Read below about array.includes(...) support !!!&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr)\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 1, 4 ]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; &lt;code&gt;array.includes(...)&lt;/code&gt; function is not supported in Internet Explorer at all, Chrome before version 47, Firefox before version 43, Safari before version 9, and Edge before version 14 but you can &lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-array&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;polyfill with &lt;code&gt;core-js&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;h2&gt;Removing multiple items (in the future, maybe)&lt;/h2&gt;\n&lt;p&gt;If the &lt;a href=&quot;https://github.com/tc39/proposal-bind-operator&quot; rel=&quot;noreferrer&quot;&gt;&quot;This-Binding Syntax&quot;&lt;/a&gt; proposal is ever accepted, you&apos;ll be able to do this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// array-lib.js&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;...forDeletion&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; !forDeletion.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(item))\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// main.js&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; { remove } &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;./array-lib.js&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// :: This-Binding Syntax Proposal&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// using &quot;remove&quot; function as &quot;virtual method&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// without extending Array.prototype&lt;/span&gt;\narr = &lt;span class=&quot;hljs-attr&quot;&gt;arr&lt;/span&gt;::&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr)\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 1, 4 ]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://babeljs.io/repl/#?browsers=chrome%20%3E%2050&amp;amp;build=&amp;amp;builtIns=false&amp;amp;corejs=3.21&amp;amp;spec=false&amp;amp;loose=false&amp;amp;code_lz=AQ4MwVwOwYwFwJYHsrAE4FMC2SBuGAKAOhLCTQBEMAbDRFASmAG8AoUD9OiNVOACwQBnImATU4GNAQSSswALwA-YAEIylGnWRQiCWNQgATDEJlyGDdqAC-rayFpxgAQzRpFwANoBGADTAAEwBAMwBACwBAKyhALr2HAD0icAAXKnAACqCQgC0AEL6RvoA5sAAygCeUHAuAB7AAApoSAAOSEIu1A7AycAQQqVcOPjg0PA6rkLAAES4CGhwEF3AWHT8SEYzPW4eCq7u6ZgjhMHAYcBRVj0wKEJItETUSCUEu1ZJKV7A_sDhwLEgA&amp;amp;debug=false&amp;amp;forceAllTransforms=false&amp;amp;shippedProposals=false&amp;amp;circleciRepo=&amp;amp;evaluate=true&amp;amp;fileSize=false&amp;amp;timeTravel=false&amp;amp;sourceType=module&amp;amp;lineWrap=false&amp;amp;presets=es2015%2Creact%2Cstage-0%2Cstage-2&amp;amp;prettier=false&amp;amp;targets=&amp;amp;version=7.17.9&amp;amp;externalPlugins=&amp;amp;assumptions=%7B%7D&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Try it yourself in BabelJS :)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot; rel=&quot;noreferrer&quot;&gt;Array.prototype.includes&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://vanslaars.io/articles/create-pipe-function&quot; rel=&quot;noreferrer&quot;&gt;Functional composition&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I don&apos;t know how you are expecting &lt;code&gt;array.remove(int)&lt;/code&gt; to behave. There are three possibilities I can think of that you might want.&lt;/p&gt;\n&lt;p&gt;To remove an element of an array at an index &lt;code&gt;i&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you want to remove every element with value &lt;code&gt;number&lt;/code&gt; from the array:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i--) {\n &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (array[i] === number) {\n  array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you just want to make the element at index &lt;code&gt;i&lt;/code&gt; no longer exist, but you don&apos;t want the indexes of the other elements to change:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; array[i];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It depends on whether you want to keep an empty spot or not.&lt;/p&gt;\n\n&lt;p&gt;If you &lt;strong&gt;do&lt;/strong&gt; want an empty slot:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;array[index] = &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you &lt;strong&gt;don&apos;t&lt;/strong&gt; want an empty slot:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//To keep the original:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//oldArray = [...array];&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//This modifies the array.&lt;/span&gt;\narray.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And if you need the value of that item, you can just store the returned array&apos;s element:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; value = array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to remove at either end of the array, you can use &lt;code&gt;array.pop()&lt;/code&gt; for the last one or &lt;code&gt;array.shift()&lt;/code&gt; for the first one (both return the value of the item as well).&lt;/p&gt;\n\n&lt;p&gt;If you don&apos;t know the index of the item, you can use &lt;code&gt;array.indexOf(item)&lt;/code&gt; to get it (in a &lt;code&gt;if()&lt;/code&gt; to get one item or in a &lt;code&gt;while()&lt;/code&gt; to get all of them). &lt;code&gt;array.indexOf(item)&lt;/code&gt; returns either the index or &lt;code&gt;-1&lt;/code&gt; if not found.&amp;nbsp;&lt;/p&gt;\n    ","\n&lt;p&gt;A friend was having issues in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot; rel=&quot;noreferrer&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; and showed me what he did. I told him it was wrong, and he told me he got the answer here. The current top answer will not work in all browsers (Internet&amp;nbsp;Explorer&amp;nbsp;8 for example), and it will only remove the first occurrence of the item.&lt;/p&gt;\n&lt;h2&gt;Remove ALL instances from an array&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeAllInstances&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, item&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i--;) {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[i] === item) arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It loops through the array backwards (since indices and length will change as items are removed) and removes the item if it&apos;s found. It works in all browsers.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;There are two major approaches&lt;/strong&gt;&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;splice()&lt;/strong&gt;: &lt;code&gt;anArray.splice(index, 1);&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; fruits = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Apple&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Banana&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mango&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Orange&apos;&lt;/span&gt;]\n &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; removed = fruits.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n &lt;span class=&quot;hljs-comment&quot;&gt;// fruits is [&apos;Apple&apos;, &apos;Banana&apos;, &apos;Orange&apos;]&lt;/span&gt;\n &lt;span class=&quot;hljs-comment&quot;&gt;// removed is [&apos;Mango&apos;]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;delete&lt;/strong&gt;: &lt;code&gt;delete anArray[index];&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; fruits = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Apple&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Banana&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mango&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Orange&apos;&lt;/span&gt;]\n &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; removed = &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;fruits&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n &lt;span class=&quot;hljs-comment&quot;&gt;// fruits is [&apos;Apple&apos;, &apos;Banana&apos;, undefined, &apos;Orange&apos;]&lt;/span&gt;\n &lt;span class=&quot;hljs-comment&quot;&gt;// removed is true&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Be careful when you use the &lt;code&gt;delete&lt;/code&gt; for an array. It is good for deleting attributes of objects, but not so good for arrays. It is better to use &lt;code&gt;splice&lt;/code&gt; for arrays.&lt;/p&gt;\n&lt;p&gt;Keep in mind that when you use &lt;code&gt;delete&lt;/code&gt; for an array you could get wrong results for &lt;code&gt;anArray.length&lt;/code&gt;. In other words, &lt;code&gt;delete&lt;/code&gt; would remove the element, but it wouldn&apos;t update the value of the length property.&lt;/p&gt;\n&lt;p&gt;You can also expect to have holes in index numbers after using delete, e.g. you could end up with having indexes 1, 3, 4, 8, 9, and 11 and length as it was before using delete. In that case, all indexed &lt;code&gt;for&lt;/code&gt; loops would crash, since indexes are no longer sequential.&lt;/p&gt;\n&lt;p&gt;If you are forced to use &lt;code&gt;delete&lt;/code&gt; for some reason, then you should use &lt;a href=&quot;https://stackoverflow.com/questions/9329446/for-each-over-an-array-in-javascript&quot;&gt;&lt;code&gt;for each&lt;/code&gt;&lt;/a&gt; loops when you need to loop through arrays. As the matter of fact, always avoid using indexed &lt;code&gt;for&lt;/code&gt; loops, if possible. That way the code would be more robust and less prone to problems with indexes.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;removeByValue&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i] === val) {\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n      i--;\n    }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fruits = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;apple&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;banana&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;carrot&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;orange&apos;&lt;/span&gt;];\nfruits.&lt;span class=&quot;hljs-title function_&quot;&gt;removeByValue&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;banana&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(fruits);\n&lt;span class=&quot;hljs-comment&quot;&gt;// -&amp;gt; [&apos;apple&apos;, &apos;carrot&apos;, &apos;orange&apos;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There is no need to use &lt;code&gt;indexOf&lt;/code&gt; or &lt;code&gt;splice&lt;/code&gt;. However, it performs better if you only want to remove one occurrence of an element. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Find and move (move):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;move&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, val&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l = arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; l; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[i] !== val) {\n      arr[j++] = arr[i];\n    }\n  }\n  arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = j;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Use &lt;code&gt;indexOf&lt;/code&gt; and &lt;code&gt;splice&lt;/code&gt; (indexof):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;indexof&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, val&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; ((i = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(val)) != -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Use only &lt;code&gt;splice&lt;/code&gt; (splice):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, val&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i--;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[i] === val) {\n      arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Run-times on nodejs for array with 1000 elements (average over 10000 runs):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;indexof&lt;/em&gt; is approximately 10x slower than &lt;em&gt;move&lt;/em&gt;. Even if improved by removing the call to &lt;code&gt;indexOf&lt;/code&gt; in &lt;em&gt;splice&lt;/em&gt; it performs much worse than &lt;em&gt;move&lt;/em&gt;. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Remove&lt;/span&gt; all &lt;span class=&quot;hljs-attr&quot;&gt;occurrences&lt;/span&gt;:\n    move &lt;span class=&quot;hljs-number&quot;&gt;0.0048&lt;/span&gt; ms\n    indexof &lt;span class=&quot;hljs-number&quot;&gt;0.0463&lt;/span&gt; ms\n    splice &lt;span class=&quot;hljs-number&quot;&gt;0.0359&lt;/span&gt; ms\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Remove&lt;/span&gt; first &lt;span class=&quot;hljs-attr&quot;&gt;occurrence&lt;/span&gt;:\n    move_one &lt;span class=&quot;hljs-number&quot;&gt;0.0041&lt;/span&gt; ms\n    indexof_one &lt;span class=&quot;hljs-number&quot;&gt;0.0021&lt;/span&gt; ms\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This provides a predicate instead of a value.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; it will update the given array, and return the affected rows.&lt;/p&gt;\n&lt;h2&gt;Usage&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; removed = helper.&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(arr, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;row&lt;/span&gt; =&amp;gt;&lt;/span&gt; row.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; );\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; removed = helper.&lt;span class=&quot;hljs-title function_&quot;&gt;removeAll&lt;/span&gt;(arr, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;row&lt;/span&gt; =&amp;gt;&lt;/span&gt; row.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;startsWith&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;BMW&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Definition&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; helper = {\n &lt;span class=&quot;hljs-comment&quot;&gt;// Remove and return the first occurrence&lt;/span&gt;\n\n &lt;span class=&quot;hljs-attr&quot;&gt;remove&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, predicate&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;predicate&lt;/span&gt;(array[i])) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n   }\n  }\n },\n\n &lt;span class=&quot;hljs-comment&quot;&gt;// Remove and return all occurrences&lt;/span&gt;\n\n &lt;span class=&quot;hljs-attr&quot;&gt;removeAll&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, predicate&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; removed = [];\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;predicate&lt;/span&gt;(array[i])) {\n    removed.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));\n    &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n   }\n   i++;\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; removed;\n },\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do it easily with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;noreferrer&quot;&gt;filter&lt;/a&gt; method:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arrOriginal, elementToRemove&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arrOriginal.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; el !== elementToRemove});\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;This removes all elements from the array and also works faster than a combination of &lt;code&gt;slice&lt;/code&gt; and &lt;code&gt;indexOf&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;John Resig &lt;a href=&quot;http://ejohn.org/blog/javascript-array-remove/&quot; rel=&quot;noreferrer&quot;&gt;posted a good implementation&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Array Remove - By John Resig (MIT Licensed)&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;remove&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;, to&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rest = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;((to || &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; || &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; : &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;, rest);\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you dont want to extend a global object, you can do something like the following, instead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Array Remove - By John Resig (MIT Licensed)&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;remove&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;, to&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; rest = array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;((to || &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; || array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;);\n    array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ? array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; : &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;apply&lt;/span&gt;(array, rest);\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But the main reason I am posting this is to warn users against the alternative implementation suggested in the comments on that page (Dec 14, 2007):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;remove&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;, to&lt;/span&gt;){\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;, (to=[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;||&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,++to-&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;][&lt;span class=&quot;hljs-variable language_&quot;&gt;arguments&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;])&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;?&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;+&lt;span class=&quot;hljs-attr&quot;&gt;to&lt;/span&gt;:to);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It seems to work well at first, but through a painful process I discovered it fails when trying to remove the second to last element in an array. For example, if you have a 10-element array and you try to remove the 9th element with this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You end up with an 8-element array. Don&apos;t know why but I confirmed John&apos;s original implementation doesn&apos;t have this problem.&lt;/p&gt;\n    ","\n&lt;p&gt;You can use ES6. For example to delete the value &apos;3&apos; in this case:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array=[&lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;6&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;)=&amp;gt;&lt;/span&gt;value!=&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(newArray);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output : &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;4&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;5&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;6&quot;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://underscorejs.org/#without&quot; rel=&quot;noreferrer&quot;&gt;Underscore.js&lt;/a&gt; can be used to solve issues with multiple browsers. It uses in-build browser methods if present. If they are absent like in the case of older Internet&amp;nbsp;Explorer versions it uses its own custom methods.&lt;/p&gt;\n\n&lt;p&gt;A simple example to remove elements from array (from the website):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;without&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [2, 3, 4]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you want a new array with the deleted positions removed, you can always delete the specific element and filter out the array. It might need an extension of the &lt;a href=&quot;http://www.tutorialspoint.com/javascript/array_filter.htm&quot; rel=&quot;noreferrer&quot;&gt;array object&lt;/a&gt; for browsers that don&apos;t implement the filter method, but in the long term it&apos;s easier since all you do is this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; my_array = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; my_array[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(my_array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; a !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;undefined&apos;&lt;/span&gt;;}));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It should display &lt;code&gt;[1, 2, 3, 4, 6]&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Here are a few ways to &lt;strong&gt;remove an item from an array using JavaScript&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;All the method described &lt;strong&gt;do not mutate the original array&lt;/strong&gt;, and instead create a new one.&lt;/p&gt;\n&lt;h2&gt;If you know the index of an item&lt;/h2&gt;\n&lt;p&gt;Suppose you have an array, and you want to remove an item in position &lt;code&gt;i&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;One method is to use &lt;code&gt;slice()&lt;/code&gt;:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; items = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;f&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filteredItems = items.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, i).&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(items.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, items.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;))\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filteredItems)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt; creates a new array with the indexes it receives. We simply create a new array, from start to the index we want to remove, and concatenate another array from the first position following the one we removed to the end of the array.&lt;/p&gt;\n&lt;h2&gt;If you know the value&lt;/h2&gt;\n&lt;p&gt;In this case, one good option is to use &lt;code&gt;filter()&lt;/code&gt;, which offers a more &lt;em&gt;declarative&lt;/em&gt; approach:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; items = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;f&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; valueToRemove = &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filteredItems = items.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item !== valueToRemove)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filteredItems)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;This uses the ES6 arrow functions. You can use the traditional functions to support older browsers:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; items = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;f&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; valueToRemove = &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filteredItems = items.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; item !== valueToRemove\n})\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filteredItems)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;or you can use Babel and transpile the ES6 code back to ES5 to make it more digestible to old browsers, yet write modern JavaScript in your code.&lt;/p&gt;\n&lt;h2&gt;Removing multiple items&lt;/h2&gt;\n&lt;p&gt;What if instead of a single item, you want to remove many items?&lt;/p&gt;\n&lt;p&gt;Let&apos;s find the simplest solution.&lt;/p&gt;\n&lt;h3&gt;By index&lt;/h3&gt;\n&lt;p&gt;You can just create a function and remove items in series:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; items = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;f&apos;&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeItem&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;items, i&lt;/span&gt;) =&amp;gt;\n  items.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(items.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(i, items.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; filteredItems = &lt;span class=&quot;hljs-title function_&quot;&gt;removeItem&lt;/span&gt;(items, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\nfilteredItems = &lt;span class=&quot;hljs-title function_&quot;&gt;removeItem&lt;/span&gt;(filteredItems, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n&lt;span class=&quot;hljs-comment&quot;&gt;//[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filteredItems)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h3&gt;By value&lt;/h3&gt;\n&lt;p&gt;You can search for inclusion inside the callback function:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; items = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;f&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; valuesToRemove = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filteredItems = items.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; !valuesToRemove.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(item))\n&lt;span class=&quot;hljs-comment&quot;&gt;//&amp;nbsp;[&quot;a&quot;, &quot;b&quot;, &quot;e&quot;, &quot;f&quot;]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filteredItems)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h2&gt;Avoid mutating the original array&lt;/h2&gt;\n&lt;p&gt;&lt;code&gt;splice()&lt;/code&gt; (not to be confused with &lt;code&gt;slice()&lt;/code&gt;) mutates the original array, and should be avoided.&lt;/p&gt;\n&lt;p&gt;(originally posted on my site &lt;a href=&quot;https://flaviocopes.com/how-to-remove-item-from-array/&quot; rel=&quot;noreferrer&quot;&gt;https://flaviocopes.com/how-to-remove-item-from-array/&lt;/a&gt;)&lt;/p&gt;\n    ","\n&lt;p&gt;Check out this code. It works in every &lt;strong&gt;major browser&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;remove_item = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, value&lt;/span&gt;) {\n &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (b &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; arr) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[b] === value) {\n   arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(b, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n   &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n  }\n }\n &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; res = &lt;span class=&quot;hljs-title function_&quot;&gt;remove_item&lt;/span&gt;(array,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(res)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can use lodash &lt;a href=&quot;https://lodash.com/docs#pull&quot; rel=&quot;noreferrer&quot;&gt;_.pull&lt;/a&gt; (mutate array), &lt;a href=&quot;https://lodash.com/docs#pullAt&quot; rel=&quot;noreferrer&quot;&gt;_.pullAt&lt;/a&gt; (mutate array) or &lt;a href=&quot;https://lodash.com/docs#without&quot; rel=&quot;noreferrer&quot;&gt;_.without&lt;/a&gt; (does&apos;t mutate array), &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array1 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;]\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;pull&lt;/span&gt;(array1, &lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array1) &lt;span class=&quot;hljs-comment&quot;&gt;// [&apos;a&apos;, &apos;b&apos;, &apos;d&apos;]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array2 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;f&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;g&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;h&apos;&lt;/span&gt;]\n_.&lt;span class=&quot;hljs-title function_&quot;&gt;pullAt&lt;/span&gt;(array2, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array2) &lt;span class=&quot;hljs-comment&quot;&gt;// [&apos;f&apos;, &apos;g&apos;, &apos;h&apos;]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array3 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;i&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;j&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;k&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;l&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = _.&lt;span class=&quot;hljs-title function_&quot;&gt;without&lt;/span&gt;(array3, &lt;span class=&quot;hljs-string&quot;&gt;&apos;i&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// [&apos;j&apos;, &apos;k&apos;, &apos;l&apos;]&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array3) &lt;span class=&quot;hljs-comment&quot;&gt;// [&apos;i&apos;, &apos;j&apos;, &apos;k&apos;, &apos;l&apos;]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;ES6 &amp;amp; without mutation:  (October 2016)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeByIndex&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;list, index&lt;/span&gt;) =&amp;gt;\n      [\n        ...list.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, index),\n        ...list.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n      ];\n         \noutput = &lt;span class=&quot;hljs-title function_&quot;&gt;removeByIndex&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; [33,11,44]&lt;/span&gt;\n      \n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(output)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Removing a particular element/string from an array can be done in a one-liner:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;theArray.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(theArray.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;stringToRemoveFromArray&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;where:&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;theArray&lt;/em&gt;: the array you want to remove something particular from&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;stringToRemoveFromArray&lt;/em&gt;: the string you want to be removed and 1 is the number of elements you want to remove.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: If &quot;stringToRemoveFromArray&quot; is not located in the array, this will remove the last element of the array.&lt;/p&gt;\n&lt;p&gt;It&apos;s always good practice to check if the element exists in your array first, before removing it.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (theArray.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;stringToRemoveFromArray&quot;&lt;/span&gt;) &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){\n   theArray.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(theArray.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;stringToRemoveFromArray&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Depending if you have newer or older version of Ecmascript running on your client&apos;s computers:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array=[&lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;6&apos;&lt;/span&gt;]\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt;)=&amp;gt;&lt;/span&gt;value!=&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;OR&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;6&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; item !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt; });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Where &apos;3&apos; is the value you want to be removed from the array.\nThe array would then become : &lt;code&gt;[&apos;1&apos;,&apos;2&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;]&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;ES10&lt;/h1&gt;\n&lt;p&gt;This post summarizes common approaches to element removal from an array as of &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#10th_Edition_%E2%80%93_ECMAScript_2019&quot; rel=&quot;noreferrer&quot;&gt;ECMAScript 2019&lt;/a&gt; (ES10).&lt;/p&gt;\n&lt;h2&gt;1. General cases&lt;/h2&gt;\n&lt;h3&gt;1.1. Removing Array element by value using &lt;code&gt;.splice()&lt;/code&gt;&lt;/h3&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: Yes(loop), No(indexOf) | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: By index |&lt;/p&gt;\n&lt;p&gt;If you know the value you want to remove from an array you can use the splice method. First, you must identify the index of the target item. You then use the index as the start element and remove just one element.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// With a &apos;for&apos; loop&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( arr[i] === &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;) {\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  }\n} &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [1, 2, 3, 4, 6, 7, 8, 9, 0]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// With the .indexOf() method&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; i = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\narr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [1, 2, 3, 4, 6, 7, 8, 9, 0]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;1.2. Removing Array element using the &lt;code&gt;.filter()&lt;/code&gt; method&lt;/h3&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: No | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: By value | &lt;br&gt;&lt;/p&gt;\n&lt;p&gt;The specific element can be &lt;em&gt;&lt;strong&gt;filtered out&lt;/strong&gt;&lt;/em&gt; from the array, by providing a filtering function. Such function is then called for every element in the array.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; value = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]\narr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item !== value)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr)\n&lt;span class=&quot;hljs-comment&quot;&gt;// [ 1, 2, 4, 5 ]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;1.3. Removing Array element by extending &lt;code&gt;Array.prototype&lt;/code&gt;&lt;/h3&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: Yes/No (Depends on implementation) | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: Yes/No (Depends on implementation) | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: By index / By value (Depends on implementation) |&lt;/p&gt;\n&lt;p&gt;The prototype of Array can be extended with additional methods. Such methods will be then available to use on created arrays.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Extending prototypes of objects from the standard library of JavaScript (like Array) is considered by some as an antipattern.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// In-place, removes all, by value implementation&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;remove&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i] === item) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n        }\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr1 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\narr1.&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// arr1 equals [2,3]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Non-stationary, removes first, by value implementation&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;remove&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[i] === item) {\n            arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr2 = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\narr2 = arr2.&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// arr2 equals [2,3,1]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;1.4. Removing Array element using the &lt;code&gt;delete&lt;/code&gt; operator&lt;/h3&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: No | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: By index |&lt;/p&gt;\n&lt;p&gt;Using the delete operator does not affect the length property. Nor does it affect the indexes of subsequent elements. The array becomes sparse, which is a fancy way of saying the deleted item is not removed but becomes undefined.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; arr[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// Delete element with index 4&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr ); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 4, undefined, 6]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The delete operator is designed to remove properties from JavaScript objects, which arrays are objects.&lt;/p&gt;\n&lt;h3&gt;1.5. Removing Array element using &lt;code&gt;Object&lt;/code&gt; utilities (&amp;gt;= ES10)&lt;/h3&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: No | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: By value |&lt;/p&gt;\n&lt;p&gt;ES10 introduced &lt;code&gt;Object.fromEntries&lt;/code&gt;, which can be used to create the desired Array from any Array-like object and filter unwanted elements during the process.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; object = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; valueToRemove = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;fromEntries&lt;/span&gt;(\n  &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;entries&lt;/span&gt;(object)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;[ key, val ]&lt;/span&gt;) =&amp;gt;&lt;/span&gt; val !== valueToRemove)\n));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr); &lt;span class=&quot;hljs-comment&quot;&gt;// [1,2,4]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;2. Special cases&lt;/h2&gt;\n&lt;h3&gt;2.1 Removing element if it&apos;s at the end of the Array&lt;/h3&gt;\n&lt;h4&gt;&lt;strong&gt;2.1.1. Changing Array &lt;code&gt;length&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: No | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: N/A |&lt;/p&gt;\n&lt;p&gt;JavaScript Array elements can be removed from the end of an array by setting the length property to a value less than the current value. Any element whose index is greater than or equal to the new length will be removed.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;];\narr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Set length to remove element&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr ); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 4, 5]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h4&gt;&lt;strong&gt;2.1.2. Using &lt;code&gt;.pop()&lt;/code&gt; method&lt;/strong&gt;&lt;/h4&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: No | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: N/A |&lt;/p&gt;\n&lt;p&gt;The pop method removes the last element of the array, returns that element, and updates the length property. The pop method modifies the array on which it is invoked, This means unlike using delete the last element is removed completely and the array length reduced.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;];\narr.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// returns 6&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr ); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 4, 5]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;2.2. Removing element if it&apos;s at the beginning of the Array&lt;/h3&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: No | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: N/A |&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;.shift()&lt;/code&gt; method works much like the pop method except it removes the first element of a JavaScript array instead of the last. When the element is removed the remaining elements are shifted down.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\narr.&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// returns 1&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( arr ); &lt;span class=&quot;hljs-comment&quot;&gt;// [2, 3, 4]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;2.3. Removing element if it&apos;s the only element in the Array&lt;/h3&gt;\n&lt;p&gt;| &lt;strong&gt;In-place&lt;/strong&gt;: Yes | &lt;br&gt;\n| &lt;strong&gt;Removes duplicates&lt;/strong&gt;: N/A | &lt;br&gt;\n| &lt;strong&gt;By value / index&lt;/strong&gt;: N/A |&lt;/p&gt;\n&lt;p&gt;The fastest technique is to set an array variable to an empty array.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\narr = []; &lt;span class=&quot;hljs-comment&quot;&gt;//empty array&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Alternatively technique from 2.1.1 can be used by setting length to 0.&lt;/p&gt;\n    ","\n&lt;p&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;nofollow noreferrer&quot;&gt;filter&lt;/a&gt; is an elegant way to achieve this requirement&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; num = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\narr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x !== num);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 4]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;By the way, &lt;code&gt;filter&lt;/code&gt; will remove all of the occurrences matched in the condition (not just the first occurrence) like you can see in the following example&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; num = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\narr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x !== num);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 4]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;In case, you just want to remove the first occurence, you can use the &lt;code&gt;Array.prototype.splice()&lt;/code&gt; method&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; num = &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\narr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(num), &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr); &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 2, 3, 3, 4]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;Performance&lt;/h2&gt;\n&lt;p&gt;Today (2019-12-09) I conduct performance tests on macOS v10.13.6 (High Sierra) for chosen solutions. I show &lt;code&gt;delete&lt;/code&gt; (A), but I do not use it in comparison with other methods, because it left empty space in the array.&lt;/p&gt;\n&lt;p&gt;The conclusions&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;the fastest solution is &lt;code&gt;array.splice&lt;/code&gt; (C) (except Safari for small arrays where it has the second time)&lt;/li&gt;\n&lt;li&gt;for big arrays, &lt;code&gt;array.slice+splice&lt;/code&gt; (H) is the fastest immutable solution for Firefox and Safari; &lt;code&gt;Array.from&lt;/code&gt; (B) is fastest in Chrome&lt;/li&gt;\n&lt;li&gt;mutable solutions are usually 1.5x-6x faster than immutable&lt;/li&gt;\n&lt;li&gt;for small tables on Safari, surprisingly the mutable solution (C) is slower than the immutable solution (G)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Details&lt;/h2&gt;\n&lt;p&gt;In tests, I remove the middle element from the array in different ways. The &lt;strong&gt;A, C&lt;/strong&gt; solutions are in-place. The &lt;strong&gt;B, D, E, F, G, H&lt;/strong&gt; solutions are immutable.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Results for an array with 10 elements&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/foNhq.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/foNhq.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;In Chrome the &lt;code&gt;array.splice&lt;/code&gt; (C) is the fastest in-place solution. The &lt;code&gt;array.filter&lt;/code&gt; (D) is the fastest immutable solution. The slowest is &lt;code&gt;array.slice&lt;/code&gt; (F). You can perform the test on your machine &lt;a href=&quot;https://jsperf.com/small-array-remove-element&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Results for an array with 1.000.000 elements&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/7zCJt.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/7zCJt.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;In Chrome the &lt;code&gt;array.splice&lt;/code&gt; (C) is the fastest in-place solution (the &lt;code&gt;delete&lt;/code&gt; (C) is similar fast - but it left an empty slot in the array (so it does not perform a &apos;full remove&apos;)). The &lt;code&gt;array.slice-splice&lt;/code&gt; (H) is the fastest immutable solution. The slowest is &lt;code&gt;array.filter&lt;/code&gt; (D and E). You can perform the test on your machine &lt;a href=&quot;https://jsperf.com/big-array-remove-element&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;letter,array&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(letter, array.&lt;span class=&quot;hljs-property&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;`,`&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;delete&lt;/span&gt; array[index];\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;, array);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;B&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(array);\n  arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, arr);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;C&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt;, array);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;D&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item !== &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt;, arr);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;E&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; i !== index)\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;E&apos;&lt;/span&gt;, arr);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;F&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, index).&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;F&apos;&lt;/span&gt;, arr);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;G&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [...array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, index), ...array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)]\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;G&apos;&lt;/span&gt;, arr);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;H&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n  arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  &lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;H&apos;&lt;/span&gt;, arr);\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;([...a]);\n&lt;span class=&quot;hljs-title function_&quot;&gt;B&lt;/span&gt;([...a]);\n&lt;span class=&quot;hljs-title function_&quot;&gt;C&lt;/span&gt;([...a]);\n&lt;span class=&quot;hljs-title function_&quot;&gt;D&lt;/span&gt;([...a]);\n&lt;span class=&quot;hljs-title function_&quot;&gt;E&lt;/span&gt;([...a]);\n&lt;span class=&quot;hljs-title function_&quot;&gt;F&lt;/span&gt;([...a]);\n&lt;span class=&quot;hljs-title function_&quot;&gt;G&lt;/span&gt;([...a]);\n&lt;span class=&quot;hljs-title function_&quot;&gt;H&lt;/span&gt;([...a]);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;This snippet only presents code used in performance tests - it does not perform tests itself.&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Comparison for browsers: Chrome v78.0.0, Safari v13.0.4, and Firefox v71.0.0&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/Ct9DN.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/Ct9DN.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;OK,&lt;/strong&gt; for example you have the array below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And we want to delete number 4. You can simply use the below code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;num.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(num.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// num will be [1, 2, 3, 5];&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are reusing this function, you write a reusable function which will be attached to the &lt;em&gt;native&lt;/em&gt; array function like below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;remove&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;remove&lt;/span&gt; || &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; i = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(x);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(i===-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// num.remove(5) === [1, 2, 3];&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But how about if you have the below array instead with a few [5]s in the array?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; num = [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;We need a loop to check them all, but an easier and more efficient way is using built-in JavaScript functions, so we write a function which use a filter like below instead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;_removeValue&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;arr, x&lt;/span&gt;) =&amp;gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt; =&amp;gt;&lt;/span&gt; n!==x);\n&lt;span class=&quot;hljs-comment&quot;&gt;//_removeValue([1, 2, 3, 4, 5, 5, 6, 5], 5) // Return [1, 2, 3, 4, 6]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also there are third-party libraries which do help you to do this, like Lodash or Underscore. For more information, look at lodash _.pull, _.pullAt or _.without.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m pretty new to JavaScript and needed this functionality. I merely wrote this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeFromArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, item, index&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;((index = array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(item)) &amp;gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n    array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(index, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then when I want to use it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//Set-up some dummy data&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dummyObj = {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;meow&quot;&lt;/span&gt;};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; dummyArray = [dummyObj, &lt;span class=&quot;hljs-string&quot;&gt;&quot;item1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;item1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;item2&quot;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//Remove the dummy data&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;removeFromArray&lt;/span&gt;(dummyArray, dummyObj);\n&lt;span class=&quot;hljs-title function_&quot;&gt;removeFromArray&lt;/span&gt;(dummyArray, &lt;span class=&quot;hljs-string&quot;&gt;&quot;item2&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output - As expected.\n[&quot;item1&quot;, &quot;item1&quot;]&lt;/p&gt;\n\n&lt;p&gt;You may have different needs than I, so you can easily modify it to suit them. I hope this helps someone.&lt;/p&gt;\n    ","\n&lt;p&gt;I want to answer based on &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_%E2%80%93_ECMAScript_2015&quot; rel=&quot;noreferrer&quot;&gt;ECMAScript&amp;nbsp;6&lt;/a&gt;. Assume you have an array like below:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you want to delete at a special index like &lt;code&gt;2&lt;/code&gt;, write the below code:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; arr became [1,2,4]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But if you want to delete a special item like &lt;code&gt;3&lt;/code&gt; and you don&apos;t know its index, do like below:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e !== &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//=&amp;gt; arr became [1,2,4]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Hint&lt;/strong&gt;: please use an arrow function for filter callback unless you will get an empty array.&lt;/p&gt;\n    ","\n&lt;p&gt;If you have complex objects in the array you can use filters? \nIn situations where $.inArray or array.splice is not as easy to use. Especially if the objects are perhaps shallow in the array.&lt;/p&gt;\n\n&lt;p&gt;E.g. if you have an object with an Id field and you want the object removed from an array:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;array&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;element, i&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; element.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; !== idToRemove;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; This method is recommended only if you cannot use ECMAScript 2015 (formerly known as ES6). If you can use it, other answers here provide much neater implementations.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://gist.github.com/zykadelic/5069236&quot; rel=&quot;noreferrer&quot;&gt;This gist here&lt;/a&gt; will solve your problem, and also deletes all occurrences of the argument instead of just 1 (or a specified value).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;destroy&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;){\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Return null if no objects were found and removed&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; destroyed = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++){\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Use while-loop to find adjacent equal objects&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i] === obj){\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Remove this[i] and store it within destroyed&lt;/span&gt;\n            destroyed = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; destroyed;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;];\n\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;destroy&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);         &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; 3&lt;/span&gt;\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;destroy&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);     &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; false&lt;/span&gt;\nx;                    &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [1, 2, true, undefined]&lt;/span&gt;\n\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;destroy&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);      &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; true&lt;/span&gt;\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;destroy&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;undefined&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; undefined&lt;/span&gt;\nx;                    &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [1, 2]&lt;/span&gt;\n\nx.&lt;span class=&quot;hljs-title function_&quot;&gt;destroy&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);         &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; null&lt;/span&gt;\nx;                    &lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [1, 2]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You should never mutate your array as this is against the functional programming pattern. You can create a new array without referencing the one you want to change data of using the ECMAScript&amp;nbsp;6 method &lt;code&gt;filter&lt;/code&gt;;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArray = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Suppose you want to remove &lt;code&gt;5&lt;/code&gt; from the array, you can simply do it like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;value&lt;/span&gt; =&amp;gt;&lt;/span&gt; value !== &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This will give you a new array without the value you wanted to remove. So the result will be:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]; &lt;span class=&quot;hljs-comment&quot;&gt;// 5 has been removed from this array&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For further understanding you can read the MDN documentation on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;noreferrer&quot;&gt;Array.filter&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can do a backward loop to make sure not to screw up the indexes, if there are multiple instances of the element.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myElement = &lt;span class=&quot;hljs-string&quot;&gt;&quot;chocolate&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArray = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;chocolate&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;poptart&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;poptart&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;poptart&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;chocolate&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;poptart&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;poptart&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;chocolate&apos;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/* Important code */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = myArray.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i--) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (myArray[i] == myElement) myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(myArray);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif16&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/lun471k/7m6G9/&quot; rel=&quot;noreferrer&quot;&gt;Live Demo&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;A more modern, &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_%E2%80%93_ECMAScript_2015&quot; rel=&quot;nofollow noreferrer&quot;&gt;ECMAScript 2015&lt;/a&gt; (formerly known as Harmony or ES 6) approach. Given:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; items = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; index = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;items.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; i !== index);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Yielding:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can use &lt;a href=&quot;https://babeljs.io/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Babel&lt;/a&gt; and a &lt;a href=&quot;https://cdn.polyfill.io/v3/&quot; rel=&quot;nofollow noreferrer&quot;&gt;polyfill service&lt;/a&gt; to ensure this is well supported across browsers.&lt;/p&gt;\n    "],"id":301,"title":"How can I remove a specific item from an array?","content":"\n                \n&lt;p&gt;How do I remove a specific value from an array? Something like:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;array.&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;(value);  &lt;span class=&quot;hljs-comment&quot;&gt;// removes all elements with value&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I have to use &lt;em&gt;core&lt;/em&gt; JavaScript. Frameworks are not allowed.&lt;/p&gt;\n    ","slug":"how-can-i-remove-a-specific-item-from-an-array-1657387552077","postType":"QUESTION","createdAt":"2022-07-09T17:25:52.000Z","updatedAt":"2022-07-09T17:25:52.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Firebase query if child of child contains a value","slug":"firebase-query-if-child-of-child-contains-a-value-1657387841291"},{"title":"How can I return pivot table output in MySQL?","slug":"how-can-i-return-pivot-table-output-in-mysql-1657384715043"},{"title":"Returning data from async call in Swift function","slug":"returning-data-from-async-call-in-swift-function-1657387469218"},{"title":"How do I write a correct micro-benchmark in Java?","slug":"how-do-i-write-a-correct-micro-benchmark-in-java-1657384488725"},{"title":"With arrays, why is it the case that a[5] == 5[a]?","slug":"with-arrays-why-is-it-the-case-that-a5-5a-1657387956216"},{"title":"Is storing a delimited list in a database column really that bad?","slug":"is-storing-a-delimited-list-in-a-database-column-really-that-bad-1657384474773"},{"title":"How do I return the response from an Observable/http/async call in angular?","slug":"how-do-i-return-the-response-from-an-observablehttpasync-call-in-angular-1657387335024"},{"title":"When to use LinkedList over ArrayList in Java?","slug":"when-to-use-linkedlist-over-arraylist-in-java-1657388107480"},{"title":"input() error - NameError: name '...' is not defined","slug":"input()-error-nameerror:-name-'...'-is-not-defined-1657388497243"},{"title":"Is JavaScript a pass-by-reference or pass-by-value language?","slug":"is-javascript-a-pass-by-reference-or-pass-by-value-language-1657384675679"},{"title":"How do I make a list of data frames?","slug":"how-do-i-make-a-list-of-data-frames-1657385480437"},{"title":"What is the difference between == and equals() in Java?","slug":"what-is-the-difference-between-and-equals()-in-java-1657387729654"},{"title":"How do I compose a rotation matrix with human readable angles from scratch?","slug":"how-do-i-compose-a-rotation-matrix-with-human-readable-angles-from-scratch-1657387963457"},{"title":"Removing trailing newline character from fgets() input","slug":"removing-trailing-newline-character-from-fgets()-input-1657387308069"},{"title":"Reference: What is variable scope, which variables are accessible from where and what are \"undefined variable\" errors?","slug":"reference:-what-is-variable-scope-which-variables-are-accessible-from-where-and-what-are-\"undefined-variable\"-errors-1657384644697"},{"title":"re.findall behaves weird","slug":"re.findall-behaves-weird-1657388408049"},{"title":"When can I use a forward declaration?","slug":"when-can-i-use-a-forward-declaration-1657388251827"},{"title":"How do I make a redirect in PHP?","slug":"how-do-i-make-a-redirect-in-php-1657387381903"},{"title":"How do I set a variable to the output of a command in Bash?","slug":"how-do-i-set-a-variable-to-the-output-of-a-command-in-bash-1657387250909"},{"title":"Why is setTimeout(fn, 0) sometimes useful?","slug":"why-is-settimeout(fn-0)-sometimes-useful-1657388379869"}]},"__N_SSG":true}