{"pageProps":{"data":{"answer":["\n&lt;p&gt;Your problem is that the partial renders html based on a single &lt;code&gt;AdminProductDetailModel&lt;/code&gt; object, yet you are trying to post back a collection. When you dynamically add a new object you continue to add duplicate controls that look like &lt;code&gt;&amp;lt;input name=&quot;productTotalQuantity&quot; ..&amp;gt;&lt;/code&gt; (this is also creating invalid html because of the duplicate &lt;code&gt;id&lt;/code&gt; attributes) where as they need to be &lt;code&gt;&amp;lt;input name=&quot;[0].productTotalQuantity&quot; ..&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input name=&quot;[1].productTotalQuantity&quot; ..&amp;gt;&lt;/code&gt; etc. in order to bind to a collection on post back.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;DefaultModelBinder&lt;/code&gt; required that the indexer for collection items start at zero and be consecutive, or that the form values include a &lt;code&gt;Index=someValue&lt;/code&gt; where the indexer is &lt;code&gt;someValue&lt;/code&gt; (for example &lt;code&gt;&amp;lt;input name=&quot;[ABC].productTotalQuantity&quot; ..&amp;gt;&amp;lt;input name=&quot;Index&quot; value=&quot;ABC&quot;&amp;gt;&lt;/code&gt;. This is explained in detail in Phil Haack&apos;s article &lt;a href=&quot;http://haacked.com/archive/2008/10/23/model-binding-to-a-list.aspx/&quot; rel=&quot;noreferrer&quot;&gt;Model Binding To A List&lt;/a&gt;. Using the Index approach is generally better because it also allows you to delete items from the list (otherwise it would be necessary to rename all existing controls so the indexer is consecutive).&lt;/p&gt;\n\n&lt;p&gt;Two possible approaches to your issue.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Use the &lt;a href=&quot;https://github.com/danludwig/BeginCollectionItem&quot; rel=&quot;noreferrer&quot;&gt;BeginItemCollection&lt;/a&gt; helper for your partial view. This helper will render a hidden input for the &lt;code&gt;Index&lt;/code&gt; value based on a GUID. You need this in both the partial view and the loop where you render existing items. Your partial would look something like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;@model IKLE.Model.ProductModel.AdminProductDetailModel\n@using(Html.BeginCollectionItem()) \n{\n  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editor-field&quot;&lt;/span&gt;&amp;gt;\n    @Html.LabelFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId)\n    @Html.DropDownListFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId, Model.sizeList, &lt;span class=&quot;hljs-string&quot;&gt;&quot;--Select Size--&quot;&lt;/span&gt;)\n    @Html.ValidationMessageFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId)\n  &amp;lt;/div&amp;gt;\n  ....\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Option 2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Manually create the html elements representing a new object with a &apos;fake&apos; indexer, place them in a hidden container, then in the Add button event, clone the html, update the indexers and Index value and append the cloned elements to the DOM. To make sure the html is correct, create one default object in a &lt;code&gt;for&lt;/code&gt; loop and inspect the html it generates. An example of this approach is shown in &lt;a href=&quot;https://stackoverflow.com/questions/24026374/adding-another-pet-to-a-model-form/24027152#24027152&quot;&gt;this answer&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;newItem&quot;&lt;/span&gt; style=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display:none&quot;&lt;/span&gt;&amp;gt;\n\n  &amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editor-field&quot;&lt;/span&gt;&amp;gt;\n    &amp;lt;label &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;_#__productTotalQuantity&quot;&lt;/span&gt;&amp;gt;Quantity&amp;lt;/label&amp;gt;\n    &amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;_#__productTotalQuantity&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;[#].productTotalQuantity&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; /&amp;gt;\n    ....\n  &amp;lt;/div&amp;gt;\n  &lt;span class=&quot;hljs-comment&quot;&gt;// more properties of your model&lt;/span&gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note the use of a &apos;fake&apos; indexer to prevent this one being bound on post back (&apos;#&apos; and &apos;%&apos; wont match up so they are ignored by the &lt;code&gt;DefaultModelBinder&lt;/code&gt;)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#addField&apos;&lt;/span&gt;).click(function() {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; index = (&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Date()).getTime(); \n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; clone = $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#NewItem&apos;&lt;/span&gt;).clone();\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Update the indexer and Index value of the clone&lt;/span&gt;\n  clone.html($(clone).html().replace(/\\[&lt;span class=&quot;hljs-meta&quot;&gt;#\\]/g, &apos;[&apos; + index + &apos;]&apos;));&lt;/span&gt;\n  clone.html($(clone).html().replace(/&lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt;/g, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt; + index  + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;&apos;&lt;/span&gt;));\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#yourContainer&apos;&lt;/span&gt;).append(clone.html());\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The advantage of option 1 is that you are strongly typing the view to your model, but it means making a call to the server each time you add a new item. The advantage of option 2 is that its all done client side, but if you make any changes to you model (e.g. add a validation attribute to a property) then you also need to manually update the html, making maintenance a bit harder.&lt;/p&gt;\n\n&lt;p&gt;Finally, if you are using client side validation (jquery-validate-unobtrusive.js), then you need re-parse the validator each time you add new elements to the DOM as explained in &lt;a href=&quot;https://stackoverflow.com/questions/26542509/validate-dynamically-added-fields/26542591#26542591&quot;&gt;this answer&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;).data(&lt;span class=&quot;hljs-string&quot;&gt;&apos;validator&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n$.validator.unobtrusive.parse($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;form&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And of course you need to change you POST method to accept a collection&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;[&lt;span class=&quot;hljs-meta&quot;&gt;HttpPost&lt;/span&gt;]\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;hljs-title&quot;&gt;AddDetail&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;IEnumerable&amp;lt;AdminProductDetailModel&amp;gt; model&lt;/span&gt;)&lt;/span&gt;\n{\n  ....\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":409,"title":"Submit same Partial View called multiple times data to controller?","content":"\n                \n&lt;p&gt;I have added a button in my view. When this button is clicked partial view is added. In my form I can add as much partial view as I can. When Submitting this form data I am unable to send all the partial view data to controller. \nI have made a different model having all the attributes and I have made a list of that model to my main model. Can anyone please give me some trick so that I can send all the partial view content to my controller?&lt;/p&gt;\n\n&lt;p&gt;In My View&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;CSQGroup&quot;&lt;/span&gt;&amp;gt;   \n&amp;lt;/div&amp;gt;\n&amp;lt;div&amp;gt;\n  &amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Add Field&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;addField&quot;&lt;/span&gt; onclick=&lt;span class=&quot;hljs-string&quot;&gt;&quot;addFieldss()&quot;&lt;/span&gt; /&amp;gt;\n&amp;lt;/div&amp;gt;\n\n&lt;span class=&quot;hljs-function&quot;&gt;function &lt;span class=&quot;hljs-title&quot;&gt;addFieldss&lt;/span&gt;()&lt;/span&gt;\n{    \n  $.ajax({\n    url: &lt;span class=&quot;hljs-string&quot;&gt;&apos;@Url.Content(&quot;~/AdminProduct/GetColorSizeQty&quot;)&apos;&lt;/span&gt;,\n    type: &lt;span class=&quot;hljs-string&quot;&gt;&apos;GET&apos;&lt;/span&gt;,\n    success:function(result) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newDiv = $(document.createElement(&lt;span class=&quot;hljs-string&quot;&gt;&quot;div&quot;&lt;/span&gt;)).attr(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;CSQ&apos;&lt;/span&gt; + myCounter);  \n      newDiv.html(result);\n      newDiv.appendTo(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#CSQGroup&quot;&lt;/span&gt;);\n      myCounter++;\n    },\n    error: function(result) {\n      alert(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Failure&quot;&lt;/span&gt;);\n    }\n  });\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In My controller&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;hljs-title&quot;&gt;GetColorSizeQty&lt;/span&gt;()&lt;/span&gt;\n{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; AdminProductDetailModel();\n  data.colorList = commonCore.getallTypeofList(&lt;span class=&quot;hljs-string&quot;&gt;&quot;color&quot;&lt;/span&gt;);\n  data.sizeList = commonCore.getallTypeofList(&lt;span class=&quot;hljs-string&quot;&gt;&quot;size&quot;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; PartialView(data);\n}\n\n[&lt;span class=&quot;hljs-meta&quot;&gt;HttpPost&lt;/span&gt;]\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;hljs-title&quot;&gt;AddDetail&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;AdminProductDetailModel model&lt;/span&gt;)&lt;/span&gt;\n{\n  ....\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In my Partial View&lt;/p&gt;\n\n&lt;pre class=&quot;lang-cs s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;@model IKLE.Model.ProductModel.AdminProductDetailModel\n&amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editor-field&quot;&lt;/span&gt;&amp;gt;\n  @Html.LabelFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId)\n  @Html.DropDownListFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId, Model.sizeList, &lt;span class=&quot;hljs-string&quot;&gt;&quot;--Select Size--&quot;&lt;/span&gt;)\n  @Html.ValidationMessageFor(model =&amp;gt; model.fkConfigChoiceCategorySizeId)\n&amp;lt;/div&amp;gt;\n&amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editor-field&quot;&lt;/span&gt;&amp;gt;\n  @Html.LabelFor(model =&amp;gt; model.fkConfigChoiceCategoryColorId)\n  @Html.DropDownListFor(model =&amp;gt; model.fkConfigChoiceCategoryColorId, Model.colorList, &lt;span class=&quot;hljs-string&quot;&gt;&quot;--Select Color--&quot;&lt;/span&gt;)\n  @Html.ValidationMessageFor(model =&amp;gt; model.fkConfigChoiceCategoryColorId)\n&amp;lt;/div&amp;gt;   \n&amp;lt;div &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;editor-field&quot;&lt;/span&gt;&amp;gt;\n  @Html.LabelFor(model =&amp;gt; model.productTotalQuantity)\n  @Html.TextBoxFor(model =&amp;gt; model.productTotalQuantity)\n  @Html.ValidationMessageFor(model =&amp;gt; model.productTotalQuantity)\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"submit-same-partial-view-called-multiple-times-data-to-controller-1657387887213","postType":"QUESTION","createdAt":"2022-07-09T17:31:27.000Z","updatedAt":"2022-07-09T17:31:27.000Z","tags":[{"id":2183,"name":"asp.net-mvc-4","slug":"asp.net-mvc-4","createdAt":"2022-07-09T17:31:27.000Z","updatedAt":"2022-07-09T17:31:27.000Z","Questions_Tags":{"questionId":409,"tagId":2183}}],"relatedQuestions":[{"title":"Submit same Partial View called multiple times data to controller?","slug":"submit-same-partial-view-called-multiple-times-data-to-controller-1657387887213","tags":[{"name":"asp.net-mvc-4","Questions_Tags":{"questionId":409,"tagId":2183}}]}]},"randomQuestions":[{"title":"What is the purpose of the var keyword and when should I use it (or omit it)?","slug":"what-is-the-purpose-of-the-var-keyword-and-when-should-i-use-it-(or-omit-it)-1657387525538"},{"title":"How do function pointers in C work?","slug":"how-do-function-pointers-in-c-work-1657388332074"},{"title":"Iterating through a Collection, avoiding ConcurrentModificationException when removing objects in a loop","slug":"iterating-through-a-collection-avoiding-concurrentmodificationexception-when-removing-objects-in-a-loop-1657387311824"},{"title":"How can I prevent SQL injection in PHP?","slug":"how-can-i-prevent-sql-injection-in-php-1657384220094"},{"title":"Correctly allocating multi-dimensional arrays","slug":"correctly-allocating-multi-dimensional-arrays-1657387733756"},{"title":"What is a raw type and why shouldn't we use it?","slug":"what-is-a-raw-type-and-why-shouldn't-we-use-it-1657384481079"},{"title":"How do I use reflection to call a generic method?","slug":"how-do-i-use-reflection-to-call-a-generic-method-1657387256751"},{"title":"Split array into chunks","slug":"split-array-into-chunks-1657387896420"},{"title":"How can I read and parse CSV files in C++?","slug":"how-can-i-read-and-parse-csv-files-in-c++-1657387869219"},{"title":"How do I select rows from a DataFrame based on column values?","slug":"how-do-i-select-rows-from-a-dataframe-based-on-column-values-1657384901065"},{"title":"Is there any way to kill a Thread?","slug":"is-there-any-way-to-kill-a-thread-1657387859831"},{"title":"scanf() leaves the newline character in the buffer","slug":"scanf()-leaves-the-newline-character-in-the-buffer-1657384699202"},{"title":"Cleansing User Passwords","slug":"cleansing-user-passwords-1657387365583"},{"title":"Using LIMIT within GROUP BY to get N results per group?","slug":"using-limit-within-group-by-to-get-n-results-per-group-1657388324167"},{"title":"In CSS Flexbox, why are there no \"justify-items\" and \"justify-self\" properties?","slug":"in-css-flexbox-why-are-there-no-\"justify-items\"-and-\"justify-self\"-properties-1657384782711"},{"title":"Where and why do I have to put the \"template\" and \"typename\" keywords?","slug":"where-and-why-do-i-have-to-put-the-\"template\"-and-\"typename\"-keywords-1657384467606"},{"title":"How to use variables in SQL statement in Python?","slug":"how-to-use-variables-in-sql-statement-in-python-1657388479077"},{"title":"How to access a local variable from a different function using pointers?","slug":"how-to-access-a-local-variable-from-a-different-function-using-pointers-1657388159760"},{"title":"How to manage startActivityForResult on Android","slug":"how-to-manage-startactivityforresult-on-android-1657387967393"},{"title":"How to iterate over rows in a DataFrame in Pandas","slug":"how-to-iterate-over-rows-in-a-dataframe-in-pandas-1657387358115"}]},"__N_SSG":true}