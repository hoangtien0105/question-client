{"pageProps":{"data":{"answer":["\n&lt;h3&gt;TL;DR&lt;/h3&gt;\n&lt;ol&gt;\n&lt;li&gt;Always have set &lt;code&gt;PDO::ATTR_ERRMODE&lt;/code&gt; to &lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt; in your PDO connection code. It will let the database tell you what the actual problem is, be it with query, server, database or whatever.&lt;/li&gt;\n&lt;li&gt;Always replace every PHP variable in the SQL query with a question mark, and execute the query using &lt;a href=&quot;https://phpdelusions.net/pdo_examples/select#prepare&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;prepared statement&lt;/strong&gt;&lt;/a&gt;. It will help to avoid syntax errors of all sorts.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h3&gt;Explanation&lt;/h3&gt;\n&lt;p&gt;Sometimes your PDO code produces an error like &lt;code&gt;Call to a member function execute()&lt;/code&gt; or similar. Or even without any error but the query doesn&apos;t work all the same. It means that your query failed to execute.&lt;/p&gt;\n&lt;p&gt;Every time a query fails, MySQL has an error message that &lt;strong&gt;explains the reason&lt;/strong&gt;. Unfortunately, by default such errors are not transferred to PHP, and all you have is a silence or a cryptic error message mentioned above.  Hence it is very important to configure PHP and PDO to report you MySQL errors. And once you get the error message, it will be a no-brainer to fix the issue.&lt;/p&gt;\n&lt;p&gt;In order to get the detailed information about the problem, either put the following line in your code right after connect&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$dbh&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;setAttribute&lt;/span&gt;( PDO::&lt;span class=&quot;hljs-variable constant_&quot;&gt;ATTR_ERRMODE&lt;/span&gt;, PDO::&lt;span class=&quot;hljs-variable constant_&quot;&gt;ERRMODE_EXCEPTION&lt;/span&gt; );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(where &lt;code&gt;$dbh&lt;/code&gt; is the name of your PDO instance variable) or - better - add this parameter as a &lt;a href=&quot;https://phpdelusions.net/pdo_examples/connect_to_mysql#example&quot; rel=&quot;nofollow noreferrer&quot;&gt;connection option&lt;/a&gt;. After that all database errors will be translated into PDO exceptions which, if left alone, would act just as regular PHP errors.&lt;/p&gt;\n&lt;p&gt;After getting the error message, you have to read and comprehend it. It sounds too obvious, but learners often overlook the &lt;em&gt;meaning&lt;/em&gt; of the error message. Yet most of time it explains the problem pretty straightforward:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Say, if it says that a particular table doesn&apos;t exist, you have to check spelling, typos, letter case. Also you have to make sure that your PHP script connects to a correct database&lt;/li&gt;\n&lt;li&gt;Or, if it says there is an error in the SQL syntax, then you have to examine your SQL. And the problem spot is right &lt;strong&gt;before&lt;/strong&gt; the query part cited in the error message.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;You have to also &lt;em&gt;trust&lt;/em&gt; the error message. If it says that number of tokens doesn&apos;t match the number of bound variables then it &lt;em&gt;is&lt;/em&gt; so. Same goes for absent tables or columns. Given the choice, whether it&apos;s your own mistake or the error message is wrong, always stick to the former. Again it sounds condescending, but hundreds of questions on this very site prove this advice extremely useful.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Note that in order to see PDO errors, you have to be able to see PHP errors in general. To do so, you have to configure PHP depends on the site environment:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;on a &lt;strong&gt;development&lt;/strong&gt; server it is very handy to have errors right on the screen, for which displaying errors have to be turned on:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;while on a &lt;strong&gt;live&lt;/strong&gt; site, all errors have to be &lt;strong&gt;logged, but never shown&lt;/strong&gt; to the client. For this, configure PHP this way:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;error_reporting&lt;/span&gt;(E_ALL);\n  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;display_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n  &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;log_errors&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Note that &lt;code&gt;error_reporting&lt;/code&gt; should be set to &lt;code&gt;E_ALL&lt;/code&gt; all the time.&lt;/p&gt;\n&lt;p&gt;Also note that despite the common delusion, &lt;strong&gt;no try-catch have to be used for the error reporting&lt;/strong&gt;. PHP will report you PDO errors already, and in a way better form. An uncaught exception is very good for development, yet if you want to show a customized error page, still don&apos;t use try catch for this, but just set a &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot; rel=&quot;nofollow noreferrer&quot;&gt;custom error handler&lt;/a&gt;. In a nutshell, you don&apos;t have to treat PDO errors as something special but regard them as any other error in your code.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;\nSometimes there is no error but no results either. Then it means, &lt;em&gt;there is no data to match your criteria&lt;/em&gt;. So you have to admit this fact, even if you can swear the data and the criteria are all right. They are not. You have to check them again. I&apos;ve short answer that would help you to pinpoint the matching issue, &lt;a href=&quot;https://stackoverflow.com/a/57986043/285587&quot;&gt;Having issue with matching rows in the database using PDO&lt;/a&gt;. Just follow this instruction, and the linked tutorial step by step and either have your problem solved or have an answerable question for Stack Overflow.&lt;/p&gt;\n    "],"id":185,"title":"Why does this PDO statement silently fail?","content":"\n                \n&lt;p&gt;This is my PHP SQL statement and it&apos;s returning false while var dumping&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$dbh&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;prepare&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;INSERT INTO users(full_name, e_mail, username, password) VALUES (:fullname, :email, :username, :password)&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;execute&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(\n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;:fullname&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;fullname&apos;&lt;/span&gt;], \n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;:email&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;email&apos;&lt;/span&gt;], \n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;:username&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$_GET&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;username&apos;&lt;/span&gt;],\n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;:password&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$password_hash&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"why-does-this-pdo-statement-silently-fail-1657384892133","postType":"QUESTION","createdAt":"2022-07-09T16:41:32.000Z","updatedAt":"2022-07-09T16:41:32.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"What is the difference between \"px\", \"dip\", \"dp\" and \"sp\"?","slug":"what-is-the-difference-between-\"px\"-\"dip\"-\"dp\"-and-\"sp\"-1657388093250"},{"title":"Why JSF calls getters multiple times","slug":"why-jsf-calls-getters-multiple-times-1657388244489"},{"title":"No 'Access-Control-Allow-Origin' header is present on the requested resourceâ€”when trying to get data from a REST API","slug":"no-'access-control-allow-origin'-header-is-present-on-the-requested-resourcewhen-trying-to-get-data-from-a-rest-api-1657387628467"},{"title":"\"Cross origin requests are only supported for HTTP.\" error when loading a local file","slug":"\"cross-origin-requests-are-only-supported-for-http.\"-error-when-loading-a-local-file-1657387942403"},{"title":"How to print a number with commas as thousands separators in JavaScript","slug":"how-to-print-a-number-with-commas-as-thousands-separators-in-javascript-1657387777379"},{"title":"Add a property to a JavaScript object using a variable as the name?","slug":"add-a-property-to-a-javascript-object-using-a-variable-as-the-name-1657388425650"},{"title":"\"Thinking in AngularJS\" if I have a jQuery background? [closed]","slug":"\"thinking-in-angularjs\"-if-i-have-a-jquery-background-closed-1657384761159"},{"title":"Why use getters and setters/accessors?","slug":"why-use-getters-and-settersaccessors-1657387343971"},{"title":"Actual meaning of 'shell=True' in subprocess","slug":"actual-meaning-of-'shelltrue'-in-subprocess-1657388470341"},{"title":"How do I make Git forget about a file that was tracked, but is now in .gitignore?","slug":"how-do-i-make-git-forget-about-a-file-that-was-tracked-but-is-now-in-.gitignore-1657387328843"},{"title":"UTF-8 all the way through","slug":"utf-8-all-the-way-through-1657384323434"},{"title":"What do querySelectorAll and getElementsBy* methods return?","slug":"what-do-queryselectorall-and-getelementsby*-methods-return-1657384425935"},{"title":"Trouble with UTF-8 characters; what I see is not what I stored","slug":"trouble-with-utf-8-characters-what-i-see-is-not-what-i-stored-1657384817490"},{"title":"Difference between sh and Bash","slug":"difference-between-sh-and-bash-1657388197713"},{"title":"How can I fix 'android.os.NetworkOnMainThreadException'?","slug":"how-can-i-fix-'android.os.networkonmainthreadexception'-1657384454963"},{"title":"Default constructor with empty brackets","slug":"default-constructor-with-empty-brackets-1657388246967"},{"title":"Undefined behavior and sequence points","slug":"undefined-behavior-and-sequence-points-1657384639493"},{"title":"How do you get the footer to stay at the bottom of a Web page?","slug":"how-do-you-get-the-footer-to-stay-at-the-bottom-of-a-web-page-1657387817544"},{"title":"What is a plain English explanation of \"Big O\" notation?","slug":"what-is-a-plain-english-explanation-of-\"big-o\"-notation-1657387641953"},{"title":"Sorting object property by values","slug":"sorting-object-property-by-values-1657388367300"}]},"__N_SSG":true}