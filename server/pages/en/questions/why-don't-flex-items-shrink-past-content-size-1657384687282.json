{"pageProps":{"data":{"answer":["\n&lt;h3&gt;The Automatic Minimum Size of Flex Items&lt;/h3&gt;\n\n&lt;p&gt;You&apos;re encountering a flexbox default setting.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;A flex item cannot be smaller than the size of its content along the main axis.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;The defaults are...&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;min-width: auto&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;min-height: auto&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;...for flex items in row-direction and column-direction, respectively.&lt;/p&gt;\n\n&lt;p&gt;You can override these defaults by setting flex items to:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;min-width: 0&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;min-height: 0&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;overflow: hidden&lt;/code&gt; (or any other value, except &lt;code&gt;visible&lt;/code&gt;)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Flexbox Specification&lt;/h3&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/css-flexbox-1/#min-size-auto&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;4.5. Automatic Minimum Size of Flex\n  Items&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n  \n  &lt;p&gt;To provide a more reasonable default minimum size for flex items, this\n  specification introduces a new &lt;code&gt;auto&lt;/code&gt; value as the initial value of\n  the &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;min-height&lt;/code&gt; properties defined in CSS 2.1.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;em&gt;With regard to the &lt;code&gt;auto&lt;/code&gt; value...&lt;/em&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;On a flex item whose &lt;code&gt;overflow&lt;/code&gt; is &lt;code&gt;visible&lt;/code&gt; in the main axis, when specified on the flex items main-axis min-size property, specifies an &lt;em&gt;automatic minimum size&lt;/em&gt;. It otherwise computes to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In other words:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The &lt;code&gt;min-width: auto&lt;/code&gt; and &lt;code&gt;min-height: auto&lt;/code&gt; defaults apply only when &lt;code&gt;overflow&lt;/code&gt; is &lt;code&gt;visible&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;If the &lt;code&gt;overflow&lt;/code&gt; value is not &lt;code&gt;visible&lt;/code&gt;, the value of the min-size property is &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Hence, &lt;code&gt;overflow: hidden&lt;/code&gt; can be a substitute for &lt;code&gt;min-width: 0&lt;/code&gt; and &lt;code&gt;min-height: 0&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;and...&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The minimum sizing algorithm applies only on the main axis.&lt;/li&gt;\n&lt;li&gt;For example, a flex item in a row-direction container does not get &lt;code&gt;min-height: auto&lt;/code&gt; by default.&lt;/li&gt;\n&lt;li&gt;For a more detailed explanation see this post:\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/40407619/3597276&quot;&gt;min-width rendering differently in flex-direction: row and flex-direction: column&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;You&apos;ve applied min-width: 0 and the item still doesn&apos;t shrink?&lt;/h3&gt;\n\n&lt;p&gt;&lt;em&gt;Nested Flex Containers&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;If you&apos;re dealing with flex items on multiple levels of the HTML structure, it may be necessary to override the default &lt;code&gt;min-width: auto&lt;/code&gt; / &lt;code&gt;min-height: auto&lt;/code&gt; on items at higher levels.&lt;/p&gt;\n\n&lt;p&gt;Basically, a higher level flex item with &lt;code&gt;min-width: auto&lt;/code&gt; can prevent shrinking on items nested below with &lt;code&gt;min-width: 0&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;Examples:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/47456839/3597276&quot;&gt;Flex item is not shrinking smaller than its content&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/44826555/3597276&quot;&gt;Fitting child into parent&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/49897730/3597276&quot;&gt;white-space css property is creating issues with flex&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Browser Rendering Notes&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;em&gt;Chrome vs. Firefox / Edge&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Since at least 2017, it appears that Chrome is either (1) reverting back to the &lt;code&gt;min-width: 0&lt;/code&gt; / &lt;code&gt;min-height: 0&lt;/code&gt; defaults, or (2) automatically applying the &lt;code&gt;0&lt;/code&gt; defaults in certain situations based on a mystery algorithm. (This could be what they call an &lt;a href=&quot;https://github.com/WICG/interventions&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;intervention&lt;/strong&gt;&lt;/a&gt;.) As a result, many people are seeing their layout (especially desired scrollbars) work as expected in Chrome, but not in Firefox / Edge. This issue is covered in more detail here: &lt;a href=&quot;https://stackoverflow.com/q/49575838/3597276&quot;&gt;flex-shrink discrepancy between Firefox and Chrome&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;em&gt;IE11&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;As noted in the spec, the &lt;code&gt;auto&lt;/code&gt; value for the &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;min-height&lt;/code&gt; properties is &quot;new&quot;. This means that some browsers may still render a &lt;code&gt;0&lt;/code&gt; value by default, because they implemented flex layout before the value was updated and because &lt;code&gt;0&lt;/code&gt; is the initial value for &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;min-height&lt;/code&gt; in &lt;a href=&quot;http://www.w3.org/TR/CSS2/visudet.html#min-max-widths&quot; rel=&quot;noreferrer&quot;&gt;CSS 2.1&lt;/a&gt;. &lt;a href=&quot;https://stackoverflow.com/questions/40052987/flexbox-flex-basis-0px-in-chrome&quot;&gt;One such browser is IE11.&lt;/a&gt; Other browsers have updated to the newer &lt;code&gt;auto&lt;/code&gt; value as defined in the &lt;a href=&quot;http://www.w3.org/TR/css-flexbox-1/#min-size-auto&quot; rel=&quot;noreferrer&quot;&gt;flexbox spec&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Revised Demo&lt;/h3&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;word-break&lt;/span&gt;: break-word\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col1&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: orange;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;80px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;min-width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;   &lt;span class=&quot;hljs-comment&quot;&gt;/* NEW */&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col2&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: yellow\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col3&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: skyblue\n}\n\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col4&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: red\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://jsfiddle.net/78h8wv4o/4/&quot; rel=&quot;noreferrer&quot;&gt;jsFiddle&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;m finding this has bitten me repeatedly over the years for both flex and grid, so I&apos;m going to suggest the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;* { min-width: 0; min-height: 0; }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and then just use &lt;code&gt;min-width: auto&lt;/code&gt; or &lt;code&gt;min-height: auto&lt;/code&gt; if you need that behaviour.&lt;/p&gt;\n&lt;p&gt;In fact, throw in box-sizing as well to make all layout more sane:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;* { box-sizing: border-box; min-width: 0; min-height: 0; }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Does anyone know if there are any odd consequences? I&apos;ve not encountered anything in several years of using a mix of the above. In fact, I can&apos;t think of any cases where I&apos;d want to layout from content outwards to the flex/grid, rather than flex/grid inwards to the content --- and surely if they exist, they&apos;re rare. So this feels like a bad default. But maybe I&apos;m missing something?&lt;/p&gt;\n    ","\n&lt;p&gt;For this code below, adding &lt;code&gt;width: 100%&lt;/code&gt; solved my problem.&lt;/p&gt;\n&lt;pre class=&quot;lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.post-cover&lt;/span&gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.inner&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;flex-direction&lt;/span&gt;: column;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;justify-content&lt;/span&gt;: center;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-content&lt;/span&gt;: flex-start;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;align-items&lt;/span&gt;: flex-start;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;word-break&lt;/span&gt;: break-all;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.post-cover&lt;/span&gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.article-page&lt;/span&gt; {\n    &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;40px&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;0.875em&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2.0&lt;/span&gt;;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;overflow&lt;/span&gt;: hidden;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;text-overflow&lt;/span&gt;: ellipsis;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;white-space&lt;/span&gt;: nowrap;\n    &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;;   &lt;span class=&quot;hljs-comment&quot;&gt;/* Add this */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;The pure answer to your question is that by default, browsers tend to display as much information as possible to the reader (and not to hide anything).&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;That happens by default, and even includes showing default black color fonts on a white background (for maximum page contrast and readability), adding a scroll bar where content is larger than the viewport height (or width) or still showing content from a markup (or the background color) even if this was mistakenly placed after &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; or even &lt;code&gt;&amp;lt;/html&amp;gt;&lt;/code&gt; tags in the html file.&lt;/p&gt;\n&lt;p&gt;In context of CSS, this applies as well, but you also are allowed to play with many customizations on top of that.&lt;/p&gt;\n&lt;p&gt;Even in a screen if using a huge font (like &lt;code&gt;font-size: 50em;&lt;/code&gt;) this initially acts as an overflowing element (and placing the font inside a flexible child container by using &lt;code&gt;display: flex&lt;/code&gt; doesn&apos;t change this default behaviour unless you use &lt;code&gt;overflow: hidden&lt;/code&gt; or resize the element in some way.&lt;/p&gt;\n&lt;p&gt;An elegant solution is to use a dynamic resizing of the letters, for example&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;font-size: calc(0.5em + 2vw)&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;which works great even in a responsive scenario.&lt;/p&gt;\n&lt;p&gt;As a previous answer mentioned, &lt;em&gt;A flex item cannot be smaller than the size of its content along the main axis&lt;/em&gt; (for the same reason, that is not only specific to the flexbox model implemented in CSS but because of the inner browser way of working). Even a long word is displayed with a scrollbar if it&apos;s longer than display width as if being a block type element with a fixed size instead.&lt;/p&gt;\n&lt;p&gt;This is mentioned in old html 4.01 specifications as&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&quot;By convention, visual HTML user agents wrap text lines to fit within\nthe available margins. Wrapping algorithms depend on the script being\nformatted.&lt;/p&gt;\n&lt;p&gt;In Western scripts, for example, text should only be wrapped at white\nspace. &quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;as seen &lt;a href=&quot;https://www.w3.org/TR/html401/struct/text.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;here&lt;/a&gt; in paragraph 9.5.3. This means that, since then, the text had to be continuously displayed by default (unless we decide to split it but not at single character level: a single non-white character shown at 120em size will trigger scrollbars displaying on the browser).&lt;/p&gt;\n&lt;p&gt;Words are also clearly defined in paragraph 9.1 in the same source:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;we use the term &quot;word&quot; here to mean &quot;sequences of non-white space\ncharacters&quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;The purpose of displaying the original format of any word is to not destroy, hide or distort the original information, the meaning or intent of the code author. As such, we also have &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; for keeping in same line two words that are connected - when breaking them might be disruptive (such as New York, 10 PM, 10 km/h, § 10, etc)&lt;/p&gt;\n    ","\n&lt;p&gt;I tried everything, even putting the below code in the index.css.&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;* {\n  min-width: 0;\n  min-height: 0;\n  box-sizing: border-box;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But nothing worked.&lt;/p&gt;\n&lt;p&gt;finally I made the div I wanted to shrink past it&apos;s content to have &lt;code&gt;position: absolute;&lt;/code&gt;. Then it started shrinking.\nIt&apos;s parent div would need a defined height and width. This might not be the best solution for every scenario but if this works for you, good!&lt;/p&gt;\n    "],"id":122,"title":"Why don't flex items shrink past content size?","content":"\n                \n&lt;p&gt;I have 4 flexbox columns and everything works fine, but when I add some text to a column and set it to a big font size, it is making the column wider than it should be due to the flex property.&lt;/p&gt;\n\n&lt;p&gt;I tried to use &lt;code&gt;word-break: break-word&lt;/code&gt; and it helped, but still when I resize the column to a very small width, letters in the text are broken into multiple lines (one letter per line), and yet the column does not get smaller width than one letter size. &lt;/p&gt;\n\n&lt;p&gt;Watch this &lt;a href=&quot;http://screencast-o-matic.com/watch/cDetln1tyT&quot; rel=&quot;noreferrer&quot;&gt;video&lt;/a&gt;\n(at the start, the first column is the smallest, but when I resized the window, it is the widest column. I just want to respect flex settings always; flex sizes 1 : 3 : 4 : 4)&lt;/p&gt;\n\n&lt;p&gt;I know, setting font-size and column padding to smaller will help... but is there any other solution?&lt;/p&gt;\n\n&lt;p&gt;I can not use &lt;code&gt;overflow-x: hidden&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://jsfiddle.net/78h8wv4o/3/&quot; rel=&quot;noreferrer&quot;&gt;JSFiddle&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;false&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-css lang-css s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.container&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;display&lt;/span&gt;: flex;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;100%&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;200px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;30px&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;word-break&lt;/span&gt;: break-word\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col1&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: orange;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;80px&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col2&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: yellow\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col3&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: skyblue\n}\n&lt;span class=&quot;hljs-selector-class&quot;&gt;.col4&lt;/span&gt; {\n  &lt;span class=&quot;hljs-attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;\n  &lt;span class=&quot;hljs-attribute&quot;&gt;background&lt;/span&gt;: red\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;col col4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","slug":"why-don't-flex-items-shrink-past-content-size-1657384687282","postType":"QUESTION","createdAt":"2022-07-09T16:38:07.000Z","updatedAt":"2022-07-09T16:38:07.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How to print without a newline or space","slug":"how-to-print-without-a-newline-or-space-1657387814213"},{"title":"Switch between two frames in tkinter?","slug":"switch-between-two-frames-in-tkinter-1657388528781"},{"title":"How do I make Git forget about a file that was tracked, but is now in .gitignore?","slug":"how-do-i-make-git-forget-about-a-file-that-was-tracked-but-is-now-in-.gitignore-1657387328843"},{"title":"Why does std::getline() skip input after a formatted extraction?","slug":"why-does-std::getline()-skip-input-after-a-formatted-extraction-1657384756118"},{"title":"What is a raw type and why shouldn't we use it?","slug":"what-is-a-raw-type-and-why-shouldn't-we-use-it-1657384481079"},{"title":"Reference — What does this symbol mean in PHP?","slug":"reference-what-does-this-symbol-mean-in-php-1657384561666"},{"title":"Undefined behavior and sequence points","slug":"undefined-behavior-and-sequence-points-1657384639493"},{"title":"When can I use a forward declaration?","slug":"when-can-i-use-a-forward-declaration-1657388251827"},{"title":"What causes a java.lang.ArrayIndexOutOfBoundsException and how do I prevent it?","slug":"what-causes-a-java.lang.arrayindexoutofboundsexception-and-how-do-i-prevent-it-1657384370848"},{"title":"Numbering rows within groups in a data frame","slug":"numbering-rows-within-groups-in-a-data-frame-1657388556436"},{"title":"Prefer composition over inheritance?","slug":"prefer-composition-over-inheritance-1657387399409"},{"title":"How to print a number with commas as thousands separators in JavaScript","slug":"how-to-print-a-number-with-commas-as-thousands-separators-in-javascript-1657387777379"},{"title":"Is an array name a pointer?","slug":"is-an-array-name-a-pointer-1657387874827"},{"title":"How do you get the footer to stay at the bottom of a Web page?","slug":"how-do-you-get-the-footer-to-stay-at-the-bottom-of-a-web-page-1657387817544"},{"title":"Sending Email in Android using JavaMail API without using the default/built-in app","slug":"sending-email-in-android-using-javamail-api-without-using-the-defaultbuilt-in-app-1657387883400"},{"title":"How to remove \"noise\" from GCC/clang assembly output?","slug":"how-to-remove-\"noise\"-from-gccclang-assembly-output-1657387612391"},{"title":"srand() — why call it only once?","slug":"srand()-why-call-it-only-once-1657387794760"},{"title":"Which characters are valid in CSS class names/selectors?","slug":"which-characters-are-valid-in-css-class-namesselectors-1657387959188"},{"title":"How do I check if an array includes a value in JavaScript?","slug":"how-do-i-check-if-an-array-includes-a-value-in-javascript-1657387421185"},{"title":"C++ Singleton design pattern","slug":"c++-singleton-design-pattern-1657387830040"}]},"__N_SSG":true}