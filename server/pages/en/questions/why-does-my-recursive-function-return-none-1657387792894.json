{"pageProps":{"data":{"answer":["\n&lt;p&gt;It is returning &lt;code&gt;None&lt;/code&gt; because when you recursively call it:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n    get_input()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;..you don&apos;t return the value.&lt;/p&gt;\n&lt;p&gt;So while the recursion does happen, the return value gets discarded, and then you fall off the end of the function.  Falling off the end of the function means that python implicitly returns &lt;code&gt;None&lt;/code&gt;, just like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;):\n&lt;span class=&quot;hljs-meta&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;pass&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(f(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;))\n&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So, instead of just &lt;em&gt;calling&lt;/em&gt; &lt;code&gt;get_input()&lt;/code&gt; in your &lt;code&gt;if&lt;/code&gt; statement, you need to &lt;code&gt;return&lt;/code&gt; it:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; get_input()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To return a value other than None, you need to use a return statement.&lt;/p&gt;\n\n&lt;p&gt;In your case, the if block only executes a return when executing one branch. Either move the return outside of the if/else block, or have returns in both options.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get_input&lt;/span&gt;():\n    my_var = &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Enter &quot;a&quot; or &quot;b&quot;: &apos;&lt;/span&gt;)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; get_input()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; my_var\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;got input:&apos;&lt;/span&gt;, get_input())\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;i think this code more clearly&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get_input&lt;/span&gt;():\n    my_var = &lt;span class=&quot;hljs-built_in&quot;&gt;str&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Enter &quot;a&quot; or &quot;b&quot;: &apos;&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var == &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; my_var == &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;got input:&apos;&lt;/span&gt;, my_var)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; my_var\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; get_input()\nget_input()\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":375,"title":"Why does my recursive function return None?","content":"\n                \n&lt;p&gt;I have this function that calls itself:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;get_input&lt;/span&gt;():\n    my_var = &lt;span class=&quot;hljs-built_in&quot;&gt;input&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Enter &quot;a&quot; or &quot;b&quot;: &apos;&lt;/span&gt;)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; my_var != &lt;span class=&quot;hljs-string&quot;&gt;&quot;b&quot;&lt;/span&gt;:\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;You didn\\&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.&apos;&lt;/span&gt;)\n        get_input()\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; my_var\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;got input:&apos;&lt;/span&gt;, get_input())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, if I input just &quot;a&quot; or &quot;b&quot;, everything works fine:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;Type &quot;a&quot; or &quot;b&quot;: a\ngot input: a\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But, if I type something else and then &quot;a&quot; or &quot;b&quot;, I get this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;Type &quot;a&quot; or &quot;b&quot;: purple\nYou didn&apos;t type &quot;a&quot; or &quot;b&quot;. Try again.\nType &quot;a&quot; or &quot;b&quot;: a\ngot input: None\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I don&apos;t know why &lt;code&gt;get_input()&lt;/code&gt; is returning &lt;code&gt;None&lt;/code&gt; since it should only return &lt;code&gt;my_var&lt;/code&gt;. Where is this &lt;code&gt;None&lt;/code&gt; coming from and how do I fix my function?&lt;/p&gt;\n    ","slug":"why-does-my-recursive-function-return-none-1657387792894","postType":"QUESTION","createdAt":"2022-07-09T17:29:52.000Z","updatedAt":"2022-07-09T17:29:52.000Z","tags":[{"id":2058,"name":"recursion","slug":"recursion","createdAt":"2022-07-09T17:29:52.000Z","updatedAt":"2022-07-09T17:29:52.000Z","Questions_Tags":{"questionId":375,"tagId":2058}},{"id":2059,"name":"return","slug":"return","createdAt":"2022-07-09T17:29:52.000Z","updatedAt":"2022-07-09T17:29:52.000Z","Questions_Tags":{"questionId":375,"tagId":2059}}],"relatedQuestions":[{"title":"Why does my recursive function return None?","slug":"why-does-my-recursive-function-return-none-1657387792894","tags":[{"name":"recursion","Questions_Tags":{"questionId":375,"tagId":2058}},{"name":"return","Questions_Tags":{"questionId":375,"tagId":2059}}]}]},"randomQuestions":[{"title":"Serialize and Deserialize Json and Json Array in Unity","slug":"serialize-and-deserialize-json-and-json-array-in-unity-1657388273270"},{"title":"XMLHttpRequest cannot load XXX No 'Access-Control-Allow-Origin' header","slug":"xmlhttprequest-cannot-load-xxx-no-'access-control-allow-origin'-header-1657384758362"},{"title":"What is a clearfix?","slug":"what-is-a-clearfix-1657387337825"},{"title":"Why not use Double or Float to represent currency?","slug":"why-not-use-double-or-float-to-represent-currency-1657387417964"},{"title":"Is there a difference between \"==\" and \"is\"?","slug":"is-there-a-difference-between-\"\"-and-\"is\"-1657387902231"},{"title":"JavaScript property access: dot notation vs. brackets?","slug":"javascript-property-access:-dot-notation-vs.-brackets-1657384717494"},{"title":"SQL select only rows with max value on a column [duplicate]","slug":"sql-select-only-rows-with-max-value-on-a-column-duplicate-1657384614292"},{"title":"What is the difference between single-quoted and double-quoted strings in PHP?","slug":"what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php-1657384624345"},{"title":"Is there a unique Android device ID?","slug":"is-there-a-unique-android-device-id-1657388089268"},{"title":"Variables are not behaving as expected","slug":"variables-are-not-behaving-as-expected-1657384865672"},{"title":"Using LIMIT within GROUP BY to get N results per group?","slug":"using-limit-within-group-by-to-get-n-results-per-group-1657388324167"},{"title":"How to print a number with commas as thousands separators in JavaScript","slug":"how-to-print-a-number-with-commas-as-thousands-separators-in-javascript-1657387777379"},{"title":"How do I properly clean up Excel interop objects?","slug":"how-do-i-properly-clean-up-excel-interop-objects-1657388329706"},{"title":"How do I set, clear, and toggle a single bit?","slug":"how-do-i-set-clear-and-toggle-a-single-bit-1657388227052"},{"title":"addEventListener vs onclick","slug":"addeventlistener-vs-onclick-1657388191429"},{"title":"Error in finding last used cell in Excel with VBA","slug":"error-in-finding-last-used-cell-in-excel-with-vba-1657384584748"},{"title":"Prefer composition over inheritance?","slug":"prefer-composition-over-inheritance-1657387399409"},{"title":"Why does this PDO statement silently fail?","slug":"why-does-this-pdo-statement-silently-fail-1657384892133"},{"title":"How to convert string representation of list to a list","slug":"how-to-convert-string-representation-of-list-to-a-list-1657387384181"},{"title":"Why don't flex items shrink past content size?","slug":"why-don't-flex-items-shrink-past-content-size-1657384687282"}]},"__N_SSG":true}