{"pageProps":{"data":{"answer":["\n&lt;p&gt;You&apos;re modifying the list while you iterate over it. That means that the first time through the loop, &lt;code&gt;i == 1&lt;/code&gt;, so 1 is removed from the list. Then the &lt;code&gt;for&lt;/code&gt; loop goes to the second item in the list, which is not 2, but 3! Then that&apos;s removed from the list, and then the &lt;code&gt;for&lt;/code&gt; loop goes on to the third item in the list, which is now 5. And so on. Perhaps it&apos;s easier to visualize like so, with a ^ pointing to the value of &lt;code&gt;i&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6.&lt;/span&gt;..]\n ^\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That&apos;s the state of the list initially; then 1 is removed and the loop goes to the second item in the list:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6.&lt;/span&gt;..]\n    ^\n[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6.&lt;/span&gt;..]\n       ^\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And so on. &lt;/p&gt;\n\n&lt;p&gt;There&apos;s no good way to alter a list&apos;s length while iterating over it. The best you can do is something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;numbers = [n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; numbers &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; n &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or this, for in-place alteration (the thing in parens is a generator expression, which is implicitly converted into a tuple before slice-assignment):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;numbers[:] = (n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; numbers &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; n &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to perform an operation on n before removing it, one trick you could try is this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i, n &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;enumerate&lt;/span&gt;(numbers):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; n &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt; :\n        &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;do something&quot;&lt;/span&gt;)\n        numbers[i] = &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\nnumbers = [n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; numbers &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; n &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Begin at the list&apos;s end and go backwards:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;li = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;))\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(li)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(li) - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; li[i] &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;del&lt;/span&gt; li[i]\n        \n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(li)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;] \n[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6260089/strange-result-when-removing-item-from-a-list/6260097#6260097&quot;&gt;@senderle&apos;s&lt;/a&gt; answer is the way to go!&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Having said that to further illustrate even a bit more your problem, if you think about it, you will always want to remove the index 0 twenty times:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5.&lt;/span&gt;..........&lt;span class=&quot;hljs-number&quot;&gt;.50&lt;/span&gt;]\n ^\n[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5.&lt;/span&gt;..........&lt;span class=&quot;hljs-number&quot;&gt;.50&lt;/span&gt;]\n ^\n[&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5.&lt;/span&gt;..........&lt;span class=&quot;hljs-number&quot;&gt;.50&lt;/span&gt;]\n ^\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So you could actually go with something like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;aList = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;))\ni = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:\n    aList.pop(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n    i += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(aList) &lt;span class=&quot;hljs-comment&quot;&gt;#[21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I hope it helps.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;The ones below are &lt;strong&gt;not&lt;/strong&gt; bad practices AFAIK.&lt;/p&gt;\n&lt;p&gt;EDIT (Some more):&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;lis = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)\nlis = lis[&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Will do the job also.&lt;/p&gt;\n&lt;p&gt;EDIT2 (I&apos;m bored):&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;functional = &lt;span class=&quot;hljs-built_in&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: x&amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;So I found a solution but it&apos;s really clumsy...&lt;/p&gt;\n&lt;p&gt;First of all you make an index array, where you list all the index&apos; you want to delete like in the following&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;numbers = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)\nindex_arr = []\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(numbers):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; numbers[i] &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:\n        index_arr.append(i)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;after that you want to delete all the entries from the numbers list with the index saved in the index_arr. The problem you will encounter is the same as before. Therefore you have to subtract 1 from every index in the index_arr after you just removed a number from the numbers arr, like in the following:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;numbers = &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)\nindex_arr = []\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(numbers):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; numbers[i] &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:\n        index_arr.append(i)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; del_index &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; index_list:\n    numbers.pop(del_index)\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;#the nasty part&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(index_list)):\n        index_list[i] -= &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It will work, but I guess it&apos;s not the intended way to do it&lt;/p&gt;\n    ","\n&lt;p&gt;Building on and simplying the answer by @eyquem ...&lt;/p&gt;\n&lt;p&gt;The problem is that elements are being yanked out from under you as you iterate, skipping numbers as you progress to what &lt;em&gt;was&lt;/em&gt; the next number.&lt;/p&gt;\n&lt;p&gt;If you start from the end and go backwards, removing items on-the-go won&apos;t matter, because when it steps to the &quot;next&quot; item (actually the prior item), the deletion does not affect the first half of the list.&lt;/p&gt;\n&lt;p&gt;Simply adding &lt;code&gt;reversed()&lt;/code&gt; to your iterator solves the problem. A comment would be good form to preclude future developers from &quot;tidying up&quot; your code and breaking it mysteriously.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;reversed&lt;/span&gt;(numbers): &lt;span class=&quot;hljs-comment&quot;&gt;# `reversed` so removing doesn&apos;t foobar iteration&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:\n    numbers.remove(i)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As an additional information to @Senderle&apos;s answer, just for records,  I thought it&apos;s helpful to visualize the logic behind the scene when python sees &lt;code&gt;for&lt;/code&gt; on a &quot;&lt;strong&gt;Sequence type&lt;/strong&gt;&quot;.&lt;/p&gt;\n&lt;p&gt;Let&apos;s say we have :&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;lst = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; lst:\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(i ** &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It is actually going to be :&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;index = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n        i = lst.__getitem__(index)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt; IndexError:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(i ** &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n    index += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;That&apos;s what it is, there is a try-catch mechanism that &lt;code&gt;for&lt;/code&gt; has when we use it on a Sequence types or Iterables(It&apos;s a little different though - calling &lt;code&gt;next()&lt;/code&gt; and &lt;code&gt;StopIteration&lt;/code&gt; Exception).&lt;/p&gt;\n&lt;p&gt;*All I&apos;m trying to say is, python will keep track of an independent variable here called &lt;code&gt;index&lt;/code&gt;, so no matter what happens to the list (removing or adding), python increments that variable and calls &lt;code&gt;__getitem__()&lt;/code&gt; method with &quot;this variable&quot; and asks for item.&lt;/p&gt;\n    ","\n&lt;p&gt;You could also use continue to &lt;strong&gt;ignore the values less than 20&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;mylist = []\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;51&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:\n        &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;:\n        mylist.append(i)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(mylist)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Since &lt;a href=&quot;https://docs.python.org/3/whatsnew/3.3.html#other-language-changes&quot; rel=&quot;nofollow noreferrer&quot;&gt;Python 3.3&lt;/a&gt; you may use the list &lt;code&gt;copy()&lt;/code&gt; method as the iterator:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;numbers = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; numbers.copy():\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:\n        numbers.remove(i)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(numbers)\n\n[&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;33&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;35&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;38&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;39&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;46&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;49&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":358,"title":"Strange result when removing item from a list while iterating over it [duplicate]","content":"\n                    &lt;div&gt;\n            &lt;aside class=&quot;s-notice s-notice__info post-notice js-post-notice mb16&quot; role=&quot;status&quot;&gt;\n        &lt;div class=&quot;d-flex fd-column fw-nowrap&quot;&gt;\n            &lt;div class=&quot;d-flex fw-nowrap&quot;&gt;\n                &lt;div class=&quot;flex--item wmn0 fl1 lh-lg&quot;&gt;\n                    &lt;div class=&quot;flex--item fl1 lh-lg&quot;&gt;\n                        &lt;b&gt;This question already has answers here&lt;/b&gt;:\n                        \n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n                    &lt;div class=&quot;flex--item mb0 mt4&quot;&gt;\n                        &lt;a href=&quot;/questions/1207406/how-to-remove-items-from-a-list-while-iterating&quot; dir=&quot;ltr&quot;&gt;How to remove items from a list while iterating?&lt;/a&gt;\n                            &lt;span class=&quot;question-originals-answer-count&quot;&gt;\n                                (25 answers)\n                            &lt;/span&gt;\n                    &lt;/div&gt;\n                &lt;div class=&quot;flex--item mb0 mt8&quot;&gt;Closed &lt;span title=&quot;2022-05-30 10:35:12Z&quot; class=&quot;relativetime&quot;&gt;last month&lt;/span&gt;.&lt;/div&gt;\n        &lt;/div&gt;\n&lt;/aside&gt;\n\n    &lt;/div&gt;\n\n&lt;p&gt;I&apos;ve got this piece of code:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;numbers = &lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; numbers:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;:\n        numbers.remove(i)\n\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(numbers)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;but the result I&apos;m getting is:&lt;br&gt;\n&lt;code&gt;[2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;Of course, I&apos;m expecting the numbers below 20 to not appear in the results. Looks like I&apos;m doing something wrong with the remove.&lt;/p&gt;\n    ","slug":"strange-result-when-removing-item-from-a-list-while-iterating-over-it-duplicate-1657387735759","postType":"QUESTION","createdAt":"2022-07-09T17:28:55.000Z","updatedAt":"2022-07-09T17:28:55.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How do I pass variables and data from PHP to JavaScript?","slug":"how-do-i-pass-variables-and-data-from-php-to-javascript-1657384684553"},{"title":"Is there a built in function for string natural sort?","slug":"is-there-a-built-in-function-for-string-natural-sort-1657388069553"},{"title":"How to avoid having class data shared among instances?","slug":"how-to-avoid-having-class-data-shared-among-instances-1657387687732"},{"title":"How to access the correct `this` inside a callback","slug":"how-to-access-the-correct-this-inside-a-callback-1657384283261"},{"title":"Useless use of cat?","slug":"useless-use-of-cat-1657388390794"},{"title":"Are 'Arrow Functions' and 'Functions' equivalent / interchangeable?","slug":"are-'arrow-functions'-and-'functions'-equivalent-interchangeable-1657384527873"},{"title":"Why use getters and setters/accessors?","slug":"why-use-getters-and-settersaccessors-1657387343971"},{"title":"SQL injection that gets around mysql_real_escape_string()","slug":"sql-injection-that-gets-around-mysql_real_escape_string()-1657384364747"},{"title":"Calling a function of a module by using its name (a string)","slug":"calling-a-function-of-a-module-by-using-its-name-(a-string)-1657388565656"},{"title":"How do I set a variable to the output of a command in Bash?","slug":"how-do-i-set-a-variable-to-the-output-of-a-command-in-bash-1657387250909"},{"title":"The difference between bracket [ ] and double bracket [[ ]] for accessing the elements of a list or dataframe","slug":"the-difference-between-bracket-and-double-bracket-for-accessing-the-elements-of-a-list-or-dataframe-1657388451711"},{"title":"PHP - Failed to open stream : No such file or directory","slug":"php-failed-to-open-stream-:-no-such-file-or-directory-1657387872896"},{"title":"What do lambda function closures capture? [duplicate]","slug":"what-do-lambda-function-closures-capture-duplicate-1657388161827"},{"title":"Is there a CSS parent selector?","slug":"is-there-a-css-parent-selector-1657384430692"},{"title":"commandButton/commandLink/ajax action/listener method not invoked or input value not set/updated","slug":"commandbuttoncommandlinkajax-actionlistener-method-not-invoked-or-input-value-not-setupdated-1657384667519"},{"title":"What is the difference between const int*, const int * const, and int const *?","slug":"what-is-the-difference-between-const-int*-const-int-*-const-and-int-const-*-1657388184604"},{"title":"Ways to deal with #document under iframe","slug":"ways-to-deal-with-document-under-iframe-1657388403345"},{"title":"List of lists changes reflected across sublists unexpectedly","slug":"list-of-lists-changes-reflected-across-sublists-unexpectedly-1657384393720"},{"title":"UTF-8 all the way through","slug":"utf-8-all-the-way-through-1657384323434"},{"title":"mysqli or die, does it have to die?","slug":"mysqli-or-die-does-it-have-to-die-1657388533922"}]},"__N_SSG":true}