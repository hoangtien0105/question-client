{"pageProps":{"data":{"answer":["\n&lt;p&gt;You should implement a session timeout of your own. Both options mentioned by others (&lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.gc-maxlifetime&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;session.gc_maxlifetime&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.cookie-lifetime&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;session.cookie_lifetime&lt;/em&gt;&lt;/a&gt;) are not reliable. I&apos;ll explain the reasons for that.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;First:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;session.gc_maxlifetime&lt;/strong&gt;&lt;br&gt;\n  &lt;em&gt;session.gc_maxlifetime&lt;/em&gt; specifies the number of seconds after which data will be seen as &apos;garbage&apos; and cleaned up. Garbage collection occurs during session start.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;But the garbage collector is only started with a probability of &lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.gc-probability&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;session.gc_probability&lt;/em&gt;&lt;/a&gt; divided by &lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.gc-divisor&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;session.gc_divisor&lt;/em&gt;&lt;/a&gt;. And using the default values for those options (1 and 100 respectively), the chance is only at 1%.&lt;/p&gt;\n\n&lt;p&gt;Well, you could simply adjust these values so that the garbage collector is started more often. But when the garbage collector is started, it will check the validity for every registered session. And that is cost-intensive.&lt;/p&gt;\n\n&lt;p&gt;Furthermore, when using PHP&apos;s default &lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.save-handler&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;session.save_handler&lt;/em&gt;&lt;/a&gt; files, the session data is stored in files in a path specified in &lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.save-path&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;session.save_path&lt;/em&gt;&lt;/a&gt;. With that session handler, the age of the session data is calculated on the file&apos;s last modification date and not the last access date:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are using the default file-based session handler, your filesystem must keep track of access times (atime). Windows FAT does not so you will have to come up with another way to handle garbage collecting your session if you are stuck with a FAT filesystem or any other filesystem where atime tracking is not available. Since PHP 4.2.3 it has used mtime (modified date) instead of atime. So, you won&apos;t have problems with filesystems where atime tracking is not available.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So it additionally might occur that a session data file is deleted while the session itself is still considered as valid because the session data was not updated recently.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;And second:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;session.cookie_lifetime&lt;/strong&gt;&lt;br&gt;\n  &lt;em&gt;session.cookie_lifetime&lt;/em&gt; specifies the lifetime of the cookie in seconds which is sent to the browser. []&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes, that&apos;s right. This only affects the cookie lifetime and the session itself may still be valid. But it&apos;s the server&apos;s task to invalidate a session, not the client. So this doesn&apos;t help anything. In fact, having &lt;em&gt;session.cookie_lifetime&lt;/em&gt; set to &lt;code&gt;0&lt;/code&gt; would make the sessions cookie a real &lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP_cookie#Session_cookie&quot; rel=&quot;noreferrer&quot;&gt;session cookie&lt;/a&gt; that is only valid until the browser is closed.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Conclusion / best solution:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The best solution is to implement a session timeout of your own. Use a simple time stamp that denotes the time of the last activity (i.e. request) and update it with every request:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;LAST_ACTIVITY&apos;&lt;/span&gt;]) &amp;amp;&amp;amp; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() - &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;LAST_ACTIVITY&apos;&lt;/span&gt;] &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// last request was more than 30 minutes ago&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_unset&lt;/span&gt;();     &lt;span class=&quot;hljs-comment&quot;&gt;// unset $_SESSION variable for the run-time &lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_destroy&lt;/span&gt;();   &lt;span class=&quot;hljs-comment&quot;&gt;// destroy session data in storage&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;LAST_ACTIVITY&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// update last activity time stamp&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Updating the session data with every request also changes the session file&apos;s modification date so that the session is not removed by the garbage collector prematurely.&lt;/p&gt;\n\n&lt;p&gt;You can also use an additional time stamp to regenerate the session ID periodically to avoid attacks on sessions like &lt;a href=&quot;http://www.owasp.org/index.php/Session_fixation&quot; rel=&quot;noreferrer&quot;&gt;session fixation&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;CREATED&apos;&lt;/span&gt;])) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;CREATED&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;();\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() - &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;CREATED&apos;&lt;/span&gt;] &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// session started more than 30 minutes ago&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_regenerate_id&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);    &lt;span class=&quot;hljs-comment&quot;&gt;// change session ID for the current session and invalidate old session ID&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;CREATED&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;();  &lt;span class=&quot;hljs-comment&quot;&gt;// update creation time&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;session.gc_maxlifetime&lt;/code&gt; should be at least equal to the lifetime of this custom expiration handler (1800 in this example);&lt;/li&gt;\n&lt;li&gt;if you want to expire the session after 30 minutes of &lt;em&gt;activity&lt;/em&gt; instead of after 30 minutes &lt;em&gt;since start&lt;/em&gt;, you&apos;ll also need to use &lt;code&gt;setcookie&lt;/code&gt; with an expire of &lt;code&gt;time()+60*30&lt;/code&gt; to keep the session cookie active.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;h2&gt;Simple way of PHP session expiry in 30 minutes.&lt;/h2&gt;\n\n&lt;p&gt;Note : if you want to change the time, just change the 30 with your desired time and do not change * 60: this will gives the minutes.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;In minutes : (30 * 60) &lt;br&gt;\nIn days : (n * 24 * 60 * 60 ) n = no of days  &lt;br&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Login.php&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n\n&amp;lt;html&amp;gt;\n    &amp;lt;form name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;form1&quot;&lt;/span&gt; method=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;table&amp;gt;\n            &amp;lt;tr&amp;gt;\n                &amp;lt;td&amp;gt;Username&amp;lt;/td&amp;gt;\n                &amp;lt;td&amp;gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt;&amp;gt;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr&amp;gt;\n                &amp;lt;td&amp;gt;Password&amp;lt;/td&amp;gt;\n                &amp;lt;td&amp;gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;pwd&quot;&lt;/span&gt;&amp;gt;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr&amp;gt;\n                &amp;lt;td&amp;gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;SignIn&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt;&amp;gt;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n        &amp;lt;/table&amp;gt;\n    &amp;lt;/form&amp;gt;\n&amp;lt;/html&amp;gt;\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;submit&apos;&lt;/span&gt;])) {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$v1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;FirstUser&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$v2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;MyPassword&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$v3&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;];\n        &lt;span class=&quot;hljs-variable&quot;&gt;$v4&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;pwd&apos;&lt;/span&gt;];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$v1&lt;/span&gt; == &lt;span class=&quot;hljs-variable&quot;&gt;$v3&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable&quot;&gt;$v2&lt;/span&gt; == &lt;span class=&quot;hljs-variable&quot;&gt;$v4&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;luser&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$v1&lt;/span&gt;;\n            &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;start&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Taking now logged in time.&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Ending a session in 30 minutes from the starting time.&lt;/span&gt;\n            &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;expire&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;start&apos;&lt;/span&gt;] + (&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Location: http://localhost/somefolder/homepage.php&apos;&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Please enter the username or password again!&quot;&lt;/span&gt;;\n        }\n    }\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;HomePage.php&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;luser&apos;&lt;/span&gt;])) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Please Login again&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;a href=&apos;http://localhost/somefolder/login.php&apos;&amp;gt;Click Here to Login&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$now&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Checking the time now when home page starts.&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$now&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;expire&apos;&lt;/span&gt;]) {\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_destroy&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your session has expired! &amp;lt;a href=&apos;http://localhost/somefolder/login.php&apos;&amp;gt;Login here&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;hljs-comment&quot;&gt;//Starting this else one [else1]&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n            &amp;lt;!-- From here all HTML coding can be done --&amp;gt;\n            &amp;lt;html&amp;gt;\n                Welcome\n                &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;luser&apos;&lt;/span&gt;];\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;a href=&apos;http://localhost/somefolder/logout.php&apos;&amp;gt;Log out&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;;\n                &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n            &amp;lt;/html&amp;gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n        }\n    }\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;LogOut.php&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_destroy&lt;/span&gt;();\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Location: http://localhost/somefolder/login.php&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Is this to log the user out after a set time? Setting the session creation time (or an expiry time) when it is registered, and then checking that on each page load could handle that.&lt;/p&gt;\n\n&lt;p&gt;E.g.:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;example&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;registered&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;());\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// later&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() - &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;example&apos;&lt;/span&gt;][&lt;span class=&quot;hljs-string&quot;&gt;&apos;registered&apos;&lt;/span&gt;]) &amp;gt; (&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;unset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;example&apos;&lt;/span&gt;]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; I&apos;ve got a feeling you mean something else though.&lt;/p&gt;\n\n&lt;p&gt;You can scrap sessions after a certain lifespan by using the &lt;a href=&quot;http://uk3.php.net/manual/en/session.configuration.php#ini.session.gc-maxlifetime&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;session.gc_maxlifetime&lt;/code&gt;&lt;/a&gt; ini setting:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;\n    ini_set(&apos;session.gc_maxlifetime&apos;, 60*30);&lt;/p&gt;\n    ","\n&lt;p&gt;This post shows a couple of ways of controlling the session timeout: &lt;a href=&quot;http://bytes.com/topic/php/insights/889606-setting-timeout-php-sessions&quot;&gt;http://bytes.com/topic/php/insights/889606-setting-timeout-php-sessions&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;IMHO the second option is a nice solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/***\n * Starts a session with a specific timeout and a specific GC probability.\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; int $timeout The number of seconds until it should time out.\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; int $probability The probablity, in int percentage, that the garbage \n *        collection routine will be triggered right now.\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@param&lt;/span&gt; strint $cookie_domain The domain path for the cookie.\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;session_start_timeout&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$timeout&lt;/span&gt;=&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$probability&lt;/span&gt;=&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$cookie_domain&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Set the max lifetime&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session.gc_maxlifetime&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$timeout&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Set the session cookie to timout&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session.cookie_lifetime&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$timeout&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Change the save path. Sessions stored in teh same path&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// all share the same lifetime; the lowest lifetime will be&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// used for all. Therefore, for this to work, the session&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// must be stored in a directory where only sessions sharing&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// it&apos;s lifetime are. Best to just dynamically create on.&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$seperator&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strstr&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtoupper&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;substr&lt;/span&gt;(PHP_OS, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)), &lt;span class=&quot;hljs-string&quot;&gt;&quot;WIN&quot;&lt;/span&gt;) ? &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\\\&quot;&lt;/span&gt; : &lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$path&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session.save_path&quot;&lt;/span&gt;) . &lt;span class=&quot;hljs-variable&quot;&gt;$seperator&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;session_&quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$timeout&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;sec&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;file_exists&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$path&lt;/span&gt;)) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mkdir&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$path&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;600&lt;/span&gt;)) {\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;trigger_error&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Failed to create session save path directory &apos;&lt;span class=&quot;hljs-subst&quot;&gt;$path&lt;/span&gt;&apos;. Check permissions.&quot;&lt;/span&gt;, E_USER_ERROR);\n        }\n    }\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session.save_path&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$path&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Set the chance to trigger the garbage collection.&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session.gc_probability&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$probability&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session.gc_divisor&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Should always be 100&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Start the session!&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Renew the time left until this session times out.&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// If you skip this, the session will time out based&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// on the time when it was created, rather than when&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// it was last used.&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_COOKIE&lt;/span&gt;[&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_name&lt;/span&gt;()])) {\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;setcookie&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_name&lt;/span&gt;(), &lt;span class=&quot;hljs-variable&quot;&gt;$_COOKIE&lt;/span&gt;[&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_name&lt;/span&gt;()], &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() + &lt;span class=&quot;hljs-variable&quot;&gt;$timeout&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$cookie_domain&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Well i understand the aboves answers are correct but they are on application level, why don&apos;t we simply use &lt;code&gt;.htaccess&lt;/code&gt; file to set the expire time ?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&amp;lt;IfModule mod_php5.c&amp;gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;#Session timeout&lt;/span&gt;\n    php_value session.cookie_lifetime &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;\n    php_value session.gc_maxlifetime &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;\n&amp;lt;/IfModule&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;isSet&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;started&apos;&lt;/span&gt;])){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;((&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mktime&lt;/span&gt;() - &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;started&apos;&lt;/span&gt;] - &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Logout, destroy session, etc.&lt;/span&gt;\n    }\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;started&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mktime&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use the &lt;code&gt;session_set_cookie_params&lt;/code&gt; function to do this.&lt;/p&gt;\n&lt;p&gt;It is necessary to call this function before the &lt;code&gt;session_start()&lt;/code&gt; call.&lt;/p&gt;\n&lt;p&gt;Try this:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$lifetime&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;strtotime&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;+30 minutes&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_set_cookie_params&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$lifetime&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;See more in: &lt;a href=&quot;http://php.net/manual/function.session-set-cookie-params.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://php.net/manual/function.session-set-cookie-params.php&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;It&apos;s actually easy with a function like the following. It uses database table name &apos;sessions&apos; with fields &apos;id&apos; and &apos;time&apos;.&lt;/p&gt;\n\n&lt;p&gt;Every time when the user visits your site or service again you should invoke this function to check if its return value is TRUE. If it&apos;s FALSE the user has expired and the session will be destroyed (Note: This function uses a database class to connect and query the database, of course you could also do it inside your function or something like that):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;session_timeout_ok&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$db&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$timeout&lt;/span&gt; = SESSION_TIMEOUT; &lt;span class=&quot;hljs-comment&quot;&gt;//const, e.g. 6 * 60 for 6 minutes&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$session_id&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_id&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT time FROM sessions WHERE session_id = &apos;&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$session_id&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$rows&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$db&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;query&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$rows&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Timestamp could not be read&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;FALSE&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Timestamp was read succesfully&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$rows&lt;/span&gt;) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable&quot;&gt;$zeile&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$rows&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n            &lt;span class=&quot;hljs-variable&quot;&gt;$time_past&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$zeile&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;time&apos;&lt;/span&gt;];\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-variable&quot;&gt;$timeout&lt;/span&gt; + &lt;span class=&quot;hljs-variable&quot;&gt;$time_past&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() ) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;//Time has expired&lt;/span&gt;\n                &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_destroy&lt;/span&gt;();\n                &lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;DELETE FROM sessions WHERE session_id = &apos;&quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$session_id&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;;\n                &lt;span class=&quot;hljs-variable&quot;&gt;$affected&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$db&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;query&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt;);\n                &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;FALSE&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                &lt;span class=&quot;hljs-comment&quot;&gt;//Time is okay&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;TRUE&lt;/span&gt;;\n                &lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;UPDATE sessions SET time=&apos;&quot;&lt;/span&gt; . &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos; WHERE session_id = &apos;&quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$session_id&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;;\n                &lt;span class=&quot;hljs-variable&quot;&gt;$erg&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$db&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;query&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$erg&lt;/span&gt; == &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;) {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;//DB error&lt;/span&gt;\n                }\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-comment&quot;&gt;//Session is new, write it to database table sessions&lt;/span&gt;\n            &lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;INSERT INTO sessions(session_id,time) VALUES (&apos;&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$session_id&lt;/span&gt;.&lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;,&apos;&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;().&lt;span class=&quot;hljs-string&quot;&gt;&quot;&apos;)&quot;&lt;/span&gt;;\n            &lt;span class=&quot;hljs-variable&quot;&gt;$res&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$db&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;query&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$sql&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$res&lt;/span&gt; === &lt;span class=&quot;hljs-literal&quot;&gt;FALSE&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-comment&quot;&gt;//Database error&lt;/span&gt;\n                &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n            }\n            &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$ok&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Store a timestamp in the session&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;    \n&lt;span class=&quot;hljs-variable&quot;&gt;$user&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;user_name&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable&quot;&gt;$pass&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$_POST&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;user_pass&apos;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;require&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;db_connection.php&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Hey, always escape input if necessary!&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_query&lt;/span&gt;(&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sprintf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SELECT * FROM accounts WHERE user_Name=&apos;%s&apos; AND user_Pass=&apos;%s&apos;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_real_escape_string&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$user&lt;/span&gt;), &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_real_escape_string&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$pass&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_num_rows&lt;/span&gt;( &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; ) &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-variable&quot;&gt;$array&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_fetch_assoc&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;);    \n\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;user_id&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-variable&quot;&gt;$user&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;login_time&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;();\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Location:loggedin.php&quot;&lt;/span&gt;);            \n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Location:login.php&quot;&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now, Check if the timestamp is within the allowed time window (1800 seconds is 30 minutes)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( !&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;( &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;user_id&apos;&lt;/span&gt;] ) || &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() - &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;login_time&apos;&lt;/span&gt;] &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Location:login.php&quot;&lt;/span&gt;);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-comment&quot;&gt;// uncomment the next line to refresh the session, so it will expire after thirteen minutes of inactivity, and not thirteen minutes after login&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;//$_SESSION[&apos;login_time&apos;] = time();&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; ( &lt;span class=&quot;hljs-string&quot;&gt;&quot;this session is &quot;&lt;/span&gt;. &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;user_id&apos;&lt;/span&gt;] );\n    &lt;span class=&quot;hljs-comment&quot;&gt;//show rest of the page and all other content&lt;/span&gt;\n}\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Please use following block of code in your include file which loaded in every pages.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$expiry&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt; ;&lt;span class=&quot;hljs-comment&quot;&gt;//session expiry required after 30 mins&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;LAST&apos;&lt;/span&gt;]) &amp;amp;&amp;amp; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;() - &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;LAST&apos;&lt;/span&gt;] &amp;gt; &lt;span class=&quot;hljs-variable&quot;&gt;$expiry&lt;/span&gt;)) {\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_unset&lt;/span&gt;();\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_destroy&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;LAST&apos;&lt;/span&gt;] = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This was an eye-opener for me, what Christopher Kramer wrote in 2014 on\n&lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#115842&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.php.net/manual/en/session.configuration.php#115842&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;On debian (based) systems, changing session.gc_maxlifetime at runtime has no real effect. Debian disables PHP&apos;s own garbage collector by setting session.gc_probability=0. Instead it has a cronjob running every 30 minutes (see /etc/cron.d/php5) that cleans up old sessions. This cronjob basically looks into your php.ini and uses the value of session.gc_maxlifetime there to decide which sessions to clean (see /usr/lib/php5/maxlifetime). [...]&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;How PHP handles sessions is quite confusing for beginners to understand. This might help them by giving an overview of how sessions work:\n&lt;a href=&quot;https://www.sitepoint.com/writing-custom-session-handlers/&quot; rel=&quot;nofollow noreferrer&quot;&gt;how sessions work(custom-session-handlers) &lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Use this class for 30 min&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Session&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;session.gc_maxlifetime&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;) ;\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;] =&lt;span class=&quot;hljs-variable&quot;&gt;$val&lt;/span&gt;;\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;])){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-variable&quot;&gt;$key&lt;/span&gt;];\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;checkSession&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;init&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;adminlogin&quot;&lt;/span&gt;)==&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;){\n            &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;destroy&lt;/span&gt;();\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Location:login.php&quot;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;checkLogin&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;init&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;self&lt;/span&gt;::&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;adminlogin&quot;&lt;/span&gt;)==&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;){\n            &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Location:index.php&quot;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;destroy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_destroy&lt;/span&gt;();\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Location:login.php&quot;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using timestamp...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-variable&quot;&gt;$session&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_start&lt;/span&gt;();\n} \n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$session&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;hljs-keyword&quot;&gt;isset&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;login_time&apos;&lt;/span&gt;])) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;$session&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;login_time&apos;&lt;/span&gt;]=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Login :&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;login_time&apos;&lt;/span&gt;];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;idle_time&apos;&lt;/span&gt;]=&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;login_time&apos;&lt;/span&gt;]+&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Session Idle :&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;idle_time&apos;&lt;/span&gt;];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n        &lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;login_time&apos;&lt;/span&gt;]=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    }\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;()&amp;gt;&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;idle_time&apos;&lt;/span&gt;]){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Session Idle :&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;idle_time&apos;&lt;/span&gt;];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Current :&quot;&lt;/span&gt;.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;time&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Session Time Out&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_destroy&lt;/span&gt;();\n        &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;session_unset&lt;/span&gt;();\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Logged In&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;\n    }\n}\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n\n\n&lt;p&gt;&lt;strong&gt;I have used 20 seconds to expire the session using timestamp&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;p&gt;If you need 30 min add 1800 (30 min in seconds)...&lt;/p&gt;\n    ","\n&lt;p&gt;You can straight use a DB to do it as an alternative. I use a DB function to do it that I call chk_lgn. &lt;/p&gt;\n\n&lt;p&gt;Check login checks to see if they are logged in or not and, in doing so, it sets the date time stamp of the check as last active in the user&apos;s db row/column.&lt;/p&gt;\n\n&lt;p&gt;I also do the time check there. This works for me for the moment as I use this function for every page. &lt;/p&gt;\n\n&lt;p&gt;P.S. No one I had seen had suggested a pure DB solution.&lt;/p&gt;\n    ","\n&lt;p&gt;Here you can set the hours&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$lifespan&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;1800&lt;/span&gt;;\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;ini_set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;session.gc_maxlifetime&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$lifespan&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;//default life time&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Just Store the current time and If it exceeds 30 minutes by comparing then destroy the current session.&lt;/p&gt;\n    "],"id":441,"title":"How do I expire a PHP session after 30 minutes?","content":"\n                \n&lt;p&gt;I need to keep a session alive for 30 minutes and then destroy it. &lt;/p&gt;\n    ","slug":"how-do-i-expire-a-php-session-after-30-minutes-1657387990658","postType":"QUESTION","createdAt":"2022-07-09T17:33:10.000Z","updatedAt":"2022-07-09T17:33:10.000Z","tags":[{"id":2292,"name":"session","slug":"session","createdAt":"2022-07-09T17:33:10.000Z","updatedAt":"2022-07-09T17:33:10.000Z","Questions_Tags":{"questionId":441,"tagId":2292}},{"id":2293,"name":"cookies","slug":"cookies","createdAt":"2022-07-09T17:33:10.000Z","updatedAt":"2022-07-09T17:33:10.000Z","Questions_Tags":{"questionId":441,"tagId":2293}}],"relatedQuestions":[{"title":"How do I expire a PHP session after 30 minutes?","slug":"how-do-i-expire-a-php-session-after-30-minutes-1657387990658","tags":[{"name":"session","Questions_Tags":{"questionId":441,"tagId":2292}},{"name":"cookies","Questions_Tags":{"questionId":441,"tagId":2293}}]}]},"randomQuestions":[{"title":"The model item passed into the dictionary is of type .. but this dictionary requires a model item of type","slug":"the-model-item-passed-into-the-dictionary-is-of-type-..-but-this-dictionary-requires-a-model-item-of-type-1657388480874"},{"title":"Why does my ArrayList contain N copies of the last item added to the list?","slug":"why-does-my-arraylist-contain-n-copies-of-the-last-item-added-to-the-list-1657387712003"},{"title":"What does \"Fatal error: Unexpectedly found nil while unwrapping an Optional value\" mean?","slug":"what-does-\"fatal-error:-unexpectedly-found-nil-while-unwrapping-an-optional-value\"-mean-1657384593944"},{"title":"How to unnest (explode) a column in a pandas DataFrame, into multiple rows","slug":"how-to-unnest-(explode)-a-column-in-a-pandas-dataframe-into-multiple-rows-1657387806735"},{"title":"How do I modify the URL without reloading the page?","slug":"how-do-i-modify-the-url-without-reloading-the-page-1657387509731"},{"title":"Default constructor with empty brackets","slug":"default-constructor-with-empty-brackets-1657388246967"},{"title":"How can I change an element's class with JavaScript?","slug":"how-can-i-change-an-element's-class-with-javascript-1657387694695"},{"title":"How to add to the PYTHONPATH in Windows, so it finds my modules/packages?","slug":"how-to-add-to-the-pythonpath-in-windows-so-it-finds-my-modulespackages-1657388540360"},{"title":"Copy array by value","slug":"copy-array-by-value-1657387649531"},{"title":"When to use single quotes, double quotes, and backticks in MySQL","slug":"when-to-use-single-quotes-double-quotes-and-backticks-in-mysql-1657384337981"},{"title":"Big O, how do you calculate/approximate it?","slug":"big-o-how-do-you-calculateapproximate-it-1657387856392"},{"title":"What is the `self` parameter in class methods?","slug":"what-is-the-self-parameter-in-class-methods-1657387518448"},{"title":"How can I vertically center a div element for all browsers using CSS?","slug":"how-can-i-vertically-center-a-div-element-for-all-browsers-using-css-1657385488425"},{"title":"How can I read and parse CSV files in C++?","slug":"how-can-i-read-and-parse-csv-files-in-c++-1657387869219"},{"title":"How does the Windows Command Interpreter (CMD.EXE) parse scripts?","slug":"how-does-the-windows-command-interpreter-(cmd.exe)-parse-scripts-1657387731560"},{"title":"Why is using \"for...in\" for array iteration a bad idea?","slug":"why-is-using-\"for...in\"-for-array-iteration-a-bad-idea-1657384653458"},{"title":"JavaScript closure inside loops – simple practical example","slug":"javascript-closure-inside-loops-simple-practical-example-1657384278449"},{"title":"Why is the gets function so dangerous that it should not be used?","slug":"why-is-the-gets-function-so-dangerous-that-it-should-not-be-used-1657384544362"},{"title":"JSTL in JSF2 Facelets... makes sense?","slug":"jstl-in-jsf2-facelets...-makes-sense-1657387667435"},{"title":"How do we control web page caching, across all browsers?","slug":"how-do-we-control-web-page-caching-across-all-browsers-1657387529059"}]},"__N_SSG":true}