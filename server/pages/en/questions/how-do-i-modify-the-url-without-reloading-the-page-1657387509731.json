{"pageProps":{"data":{"answer":["\n&lt;p&gt;This can now be done in Chrome, Safari, Firefox 4+, and Internet&amp;nbsp;Explorer&amp;nbsp;10pp4+!&lt;/p&gt;\n\n&lt;p&gt;See this question&apos;s answer for more information:\n&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3338642/updating-address-bar-with-new-url-without-hash-or-reloading-the-page&quot;&gt;Updating address bar with new URL without hash or reloading the page&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;processAjaxData&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response, urlPath&lt;/span&gt;){\n     &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = response.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;;\n     &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;title&lt;/span&gt; = response.&lt;span class=&quot;hljs-property&quot;&gt;pageTitle&lt;/span&gt;;\n     &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;html&quot;&lt;/span&gt;:response.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageTitle&quot;&lt;/span&gt;:response.&lt;span class=&quot;hljs-property&quot;&gt;pageTitle&lt;/span&gt;},&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;, urlPath);\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can then use &lt;code&gt;window.onpopstate&lt;/code&gt; to detect the back/forward button navigation:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onpopstate&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(e.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt;){\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;content&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; = e.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;title&lt;/span&gt; = e.&lt;span class=&quot;hljs-property&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pageTitle&lt;/span&gt;;\n    }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;For a more in-depth look at manipulating browser history, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history&quot; rel=&quot;noreferrer&quot;&gt;this MDN article&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;HTML5 introduced the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History/pushState&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;history.pushState()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;history.replaceState()&lt;/code&gt;&lt;/a&gt; methods, which allow you to add and modify history entries, respectively.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;page2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Title&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/page2.php&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Read more about this from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can also use HTML5 &lt;strong&gt;replaceState&lt;/strong&gt; if you want to change the url but don&apos;t want to add the entry to the browser history:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;replaceState&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-comment&quot;&gt;//prevents browser from storing history with each change:&lt;/span&gt;\n   &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replaceState&lt;/span&gt;(statedata, title, url);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This would &apos;break&apos; the back button functionality. This may be required in some instances such as an image gallery (where you want the back button to return back to the gallery index page instead of moving back through each and every image you viewed) whilst giving each image its own unique url.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is my solution (newUrl is your new URL which you want to replace with the current one):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;history.pushState({}, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, newUrl);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;NOTE: If you are working with an HTML5 browser then you should ignore this answer. This is now possible as can be seen in the other answers.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;There is no way to modify the &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_locator&quot; rel=&quot;noreferrer&quot;&gt;URL&lt;/a&gt; in the browser without reloading the page. The URL represents what the last loaded page was. If you change it (&lt;code&gt;document.location&lt;/code&gt;) then it will reload the page.&lt;/p&gt;\n\n&lt;p&gt;One obvious reason being, you write a site on &lt;code&gt;www.mysite.com&lt;/code&gt; that looks like a bank login page. Then you change the browser URL bar to say &lt;code&gt;www.mybank.com&lt;/code&gt;. The user will be totally unaware that they are really looking at &lt;code&gt;www.mysite.com&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;parent.location.hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In modern &lt;strong&gt;browsers and HTML5&lt;/strong&gt;, there is a method called &lt;code&gt;pushState&lt;/code&gt; on window &lt;code&gt;history&lt;/code&gt;. That will change the URL and push it to the history without loading the page.&lt;/p&gt;\n&lt;p&gt;You can use it like this, it will take 3 parameters, 1) state object 2) title and a URL):&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;another&quot;&lt;/span&gt;}, &lt;span class=&quot;hljs-string&quot;&gt;&quot;another page&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;example.html&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This will change the URL, but not reload the page. Also, it doesn&apos;t check if the page exists, so if you do some JavaScript code that is reacting to the URL, you can work with them like this.&lt;/p&gt;\n&lt;p&gt;Also, there is &lt;code&gt;history.replaceState()&lt;/code&gt; which does exactly the same thing, except it will modify the current history instead of creating a new one!&lt;/p&gt;\n&lt;p&gt;Also you can create a function to check if &lt;code&gt;history.pushState&lt;/code&gt; exist, then carry on with the rest like this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;goTo&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;page, title, url&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt; !== &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; history.&lt;span class=&quot;hljs-property&quot;&gt;pushState&lt;/span&gt;) {\n    history.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt;: page}, title, url);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(url);\n  }\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;goTo&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;another page&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;example&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;example.html&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Also, you can change the &lt;code&gt;#&lt;/code&gt; for &lt;code&gt;&amp;lt;HTML5 browsers&lt;/code&gt;, which won&apos;t reload the page. That&apos;s the way Angular uses to do &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-page_application&quot; rel=&quot;noreferrer&quot;&gt;SPA&lt;/a&gt; according to hashtag...&lt;/p&gt;\n&lt;p&gt;Changing &lt;code&gt;#&lt;/code&gt; is quite easy, doing like:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;window.location.hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;example&quot;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And you can detect it like this:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;onhashchange&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#changed&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The HTML5 replaceState is the answer, as already mentioned by Vivart and geo1701. However it is not supported in all browsers/versions.\n&lt;a href=&quot;https://github.com/balupton/history.js&quot; rel=&quot;noreferrer&quot;&gt;History.js&lt;/a&gt; wraps HTML5 state features and provides additional support for HTML4 browsers.&lt;/p&gt;\n    ","\n&lt;p&gt;Before HTML5 we can use:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;parent.location.hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http:www.example.com&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This method will reload your page, but HTML5 introduced the &lt;code&gt;history.pushState(page, caption, replace_url)&lt;/code&gt; that should not reload your page.&lt;/p&gt;\n    ","\n&lt;p&gt;If what you&apos;re trying to do is allow users to bookmark/share pages, and you don&apos;t need it to be exactly the right URL, and you&apos;re not using hash anchors for anything else, then you can do this in two parts; you use the location. hash discussed above, and then implement a check on the home page, to look for a URL with a hash anchor in it, and redirect you to the subsequent result.&lt;/p&gt;\n&lt;p&gt;For instance:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;User is on &lt;code&gt;www.site.com/section/page/4&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;User does some action which changes the URL to &lt;code&gt;www.site.com/#/section/page/6&lt;/code&gt; (with the hash). Say you&apos;ve loaded the correct content for page 6 into the page, so apart from the hash the user is not too disturbed.&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;User passes this URL on to someone else, or bookmarks it&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Someone else, or the same user at a later date, goes to &lt;code&gt;www.site.com/#/section/page/6&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Code on &lt;code&gt;www.site.com/&lt;/code&gt; redirects the user to &lt;code&gt;www.site.com/section/page/6&lt;/code&gt;, using something like this:&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){ \n   &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt; = &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Hope that makes sense! It&apos;s a useful approach for some situations.&lt;/p&gt;\n    ","\n&lt;p&gt;Below is the function to change the URL without reloading the page. It is only supported for HTML5.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;ChangeUrl&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;page, url&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; (history.&lt;span class=&quot;hljs-property&quot;&gt;pushState&lt;/span&gt;) != &lt;span class=&quot;hljs-string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;span class=&quot;hljs-title class_&quot;&gt;Page&lt;/span&gt;: page, &lt;span class=&quot;hljs-title class_&quot;&gt;Url&lt;/span&gt;: url};\n            history.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;(obj, obj.&lt;span class=&quot;hljs-property&quot;&gt;Page&lt;/span&gt;, obj.&lt;span class=&quot;hljs-property&quot;&gt;Url&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;homePage&quot;&lt;/span&gt;;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// alert(&quot;Browser does not support HTML5.&quot;);&lt;/span&gt;\n        }\n    }\n\n  &lt;span class=&quot;hljs-title class_&quot;&gt;ChangeUrl&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Page1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;homePage&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use this beautiful and simple function to do so anywhere on your application.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;changeurl&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;url, title&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; new_url = &lt;span class=&quot;hljs-string&quot;&gt;&apos;/&apos;&lt;/span&gt; + url;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;history&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;data&apos;&lt;/span&gt;, title, new_url);\n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can not only edit the URL but you can update the title along with it.&lt;/p&gt;\n    ","\n&lt;p&gt;Any changes of the loction (either &lt;code&gt;window.location&lt;/code&gt; or &lt;code&gt;document.location&lt;/code&gt;) will cause a request on that new URL, if youre not just changing the URL fragment. If you change the URL, you change the URL.&lt;/p&gt;\n\n&lt;p&gt;Use server-side URL rewrite techniques like &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html&quot; rel=&quot;noreferrer&quot;&gt;Apaches mod_rewrite&lt;/a&gt; if you dont like the URLs you are currently using.&lt;/p&gt;\n    ","\n&lt;p&gt;You can add anchor tags. I use this on my site so that I can track with Google Analytics what people are visiting on the page.&lt;/p&gt;\n\n&lt;p&gt;I just add an anchor tag and then the part of the page I want to track:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; trackCode = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/#&quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title function_&quot;&gt;urlencode&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myDiv&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;());\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.piano-chords.net&quot;&lt;/span&gt; + trackCode;\npageTracker.&lt;span class=&quot;hljs-title function_&quot;&gt;_trackPageview&lt;/span&gt;(trackCode);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;As pointed out by Thomas Stjernegaard Jeppesen, you could use &lt;a href=&quot;https://github.com/browserstate/history.js&quot; rel=&quot;noreferrer&quot;&gt;History.js&lt;/a&gt; to modify URL parameters whilst the user navigates through your Ajax links and apps. &lt;/p&gt;\n\n&lt;p&gt;Almost an year has passed since that answer, and History.js grew and became more stable and cross-browser. Now it can be used to manage history states in HTML5-compliant as well as in many HTML4-only browsers. &lt;a href=&quot;http://browserstate.github.io/history.js/demo/?state=1&quot; rel=&quot;noreferrer&quot;&gt;In this demo&lt;/a&gt; You can see an example of how it works (as well as being able to try its functionalities and limits. &lt;/p&gt;\n\n&lt;p&gt;Should you need any help in how to use and implement this library, i suggest you to take a look at the source code of the demo page: you will see it&apos;s very easy to do.&lt;/p&gt;\n\n&lt;p&gt;Finally, for a comprehensive explanation of what can be the issues about using hashes (and hashbangs), check out &lt;a href=&quot;https://github.com/browserstate/history.js/wiki/Intelligent-State-Handling&quot; rel=&quot;noreferrer&quot;&gt;this link&lt;/a&gt; by Benjamin Lupton. &lt;/p&gt;\n    ","\n&lt;p&gt;Use &lt;code&gt;history.pushState()&lt;/code&gt; from the HTML 5 History API.&lt;/p&gt;\n\n&lt;p&gt;Refer to the &lt;a href=&quot;http://diveintohtml5.info/history.html&quot; rel=&quot;noreferrer&quot;&gt;HTML5 History API&lt;/a&gt; for more details.&lt;/p&gt;\n    ","\n&lt;p&gt;Your new url.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; newUrlIS =  &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;origin&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos;/user/profile/management&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In a sense, calling pushState() is similar to setting window.location = &quot;#foo&quot;, in that both will also create and activate another history entry associated with the current document. But pushState() has a few advantages:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;history.pushState({}, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, newUrlIS);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can check out the root: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/History_API&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This code works for me. I used it into my application in ajax.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;history.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pushState&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt; }, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/bank&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Once a page load into an ID using ajax, It does change the browser url automatically without reloading the page.&lt;/p&gt;\n&lt;p&gt;This is ajax function bellow.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showData&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n      &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n      &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Bank.php&quot;&lt;/span&gt;, \n      &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: {}, \n      &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;html&lt;/span&gt;){          \n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(html).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;margin-left&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;0px&quot;&lt;/span&gt;);\n      }\n    });\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Example: From any page or controller like &quot;Dashboard&quot;, When I click on the bank, it loads bank list using the ajax code without reloading the page. At this time, browser URL will not be changed.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;history.&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;pushState&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt; }, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/bank&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But when I use this code into the ajax, it change the browser url without reloading the page.\nThis is the full ajax code here in the bellow.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;showData&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n          &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n          &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Bank.php&quot;&lt;/span&gt;, \n          &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: {}, \n          &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;html&lt;/span&gt;){          \n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(html).&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#viewpage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;css&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;margin-left&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;0px&quot;&lt;/span&gt;);\n            history.&lt;span class=&quot;hljs-title function_&quot;&gt;pushState&lt;/span&gt;({ &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt; }, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/bank&apos;&lt;/span&gt;);\n          }\n        });\n      }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;This is all you will need to navigate without reload&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// add setting without reload &lt;/span&gt;\nlocation.&lt;span class=&quot;hljs-property&quot;&gt;hash&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;setting&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// if url change with hash do somthing&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hashchange&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;url hash changed!&apos;&lt;/span&gt;);\n});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// if url change do somthing (dont detect changes with hash)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//window.addEventListener(&apos;locationchange&apos;, function(){&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//    console.log(&apos;url changed!&apos;);&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;//})&lt;/span&gt;\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// remove #setting without reload &lt;/span&gt;\n\nhistory.&lt;span class=&quot;hljs-title function_&quot;&gt;back&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Simply use, it will not reload the page, but just the URL :&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#form_name&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;action&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/shop/index.htm&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;submit&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":286,"title":"How do I modify the URL without reloading the page?","content":"\n                \n&lt;p&gt;Is there a way I can modify the URL of the current page without reloading the page?&lt;/p&gt;\n&lt;p&gt;I would like to access the portion &lt;strong&gt;before&lt;/strong&gt; the # hash if possible.&lt;/p&gt;\n&lt;p&gt;I only need to change the portion &lt;strong&gt;after&lt;/strong&gt; the domain, so it&apos;s not like I&apos;m violating cross-domain policies.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-ini&quot;&gt; &lt;span class=&quot;hljs-attr&quot;&gt;window.location.href&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;www.mysite.com/page2.php&quot;&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;;  // this reloads&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"how-do-i-modify-the-url-without-reloading-the-page-1657387509731","postType":"QUESTION","createdAt":"2022-07-09T17:25:09.000Z","updatedAt":"2022-07-09T17:25:09.000Z","tags":[{"id":1747,"name":"url-rewriting","slug":"url-rewriting","createdAt":"2022-07-09T17:25:09.000Z","updatedAt":"2022-07-09T17:25:09.000Z","Questions_Tags":{"questionId":286,"tagId":1747}}],"relatedQuestions":[{"title":"How do I modify the URL without reloading the page?","slug":"how-do-i-modify-the-url-without-reloading-the-page-1657387509731","tags":[{"name":"url-rewriting","Questions_Tags":{"questionId":286,"tagId":1747}}]}]},"randomQuestions":[{"title":"Providing white space in a Swing GUI","slug":"providing-white-space-in-a-swing-gui-1657384734588"},{"title":"How to remove the space between inline/inline-block elements?","slug":"how-to-remove-the-space-between-inlineinline-block-elements-1657384532273"},{"title":"How to replace all occurrences of a string in JavaScript","slug":"how-to-replace-all-occurrences-of-a-string-in-javascript-1657384895467"},{"title":"What is the copy-and-swap idiom?","slug":"what-is-the-copy-and-swap-idiom-1657384840329"},{"title":"How can I vertically center a div element for all browsers using CSS?","slug":"how-can-i-vertically-center-a-div-element-for-all-browsers-using-css-1657385488425"},{"title":"How can I vertically align elements in a div?","slug":"how-can-i-vertically-align-elements-in-a-div-1657385504431"},{"title":"What are good ways to prevent SQL injection? [duplicate]","slug":"what-are-good-ways-to-prevent-sql-injection-duplicate-1657388431570"},{"title":"How to iterate over rows in a DataFrame in Pandas","slug":"how-to-iterate-over-rows-in-a-dataframe-in-pandas-1657387358115"},{"title":"Why does Tkinter image not show up if created in a function?","slug":"why-does-tkinter-image-not-show-up-if-created-in-a-function-1657387388233"},{"title":"What is the JavaScript version of sleep()?","slug":"what-is-the-javascript-version-of-sleep()-1657387391406"},{"title":"How to evaluate a math expression given in string form?","slug":"how-to-evaluate-a-math-expression-given-in-string-form-1657387797852"},{"title":"Percentage Height HTML 5/CSS","slug":"percentage-height-html-5css-1657387471048"},{"title":"How does JavaScript .prototype work?","slug":"how-does-javascript-.prototype-work-1657388169270"},{"title":"Generating random whole numbers in JavaScript in a specific range","slug":"generating-random-whole-numbers-in-javascript-in-a-specific-range-1657388112728"},{"title":"How to reshape data from long to wide format","slug":"how-to-reshape-data-from-long-to-wide-format-1657384486421"},{"title":"input() error - NameError: name '...' is not defined","slug":"input()-error-nameerror:-name-'...'-is-not-defined-1657388497243"},{"title":"How do JavaScript closures work?","slug":"how-do-javascript-closures-work-1657384418555"},{"title":"How do I pass data between Activities in Android application?","slug":"how-do-i-pass-data-between-activities-in-android-application-1657384739839"},{"title":"What is The Rule of Three?","slug":"what-is-the-rule-of-three-1657384390295"},{"title":"What's the difference between INNER JOIN, LEFT JOIN, RIGHT JOIN and FULL JOIN? [duplicate]","slug":"what's-the-difference-between-inner-join-left-join-right-join-and-full-join-duplicate-1657388082887"}]},"__N_SSG":true}