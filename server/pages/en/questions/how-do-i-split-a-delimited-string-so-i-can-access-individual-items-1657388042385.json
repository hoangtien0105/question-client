{"pageProps":{"data":{"answer":["\n&lt;p&gt;I don&apos;t believe SQL Server has a built-in split function, so other than a UDF, the only other answer I know is to hijack the PARSENAME function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; PARSENAME(REPLACE(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;PARSENAME takes a string and splits it on the period character.  It takes a number as its second argument, and that number specifies which segment of the string to return (working from back to front).&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; PARSENAME(REPLACE(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot;&gt;--return Hello&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Obvious problem is when the string already contains a period.  I still think using a UDF is the best way...any other suggestions?&lt;/p&gt;\n    ","\n&lt;p&gt;You may find the solution in &lt;em&gt;&lt;a href=&quot;http://www.codeproject.com/KB/database/SQL_UDF_to_Parse_a_String.aspx&quot; rel=&quot;noreferrer&quot;&gt;SQL User Defined Function to Parse a Delimited String&lt;/a&gt;&lt;/em&gt; helpful (from &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Code_Project&quot; rel=&quot;noreferrer&quot;&gt;The Code Project&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;You can use this simple logic:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;1|20|3|343|44|6|8765&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n\nWHILE LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    IF PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%|%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;,\n                                    &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,\n                                    PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%|%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;,\n                                  LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n                                  LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@products&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@individual&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;First, create a function (using CTE, common table expression does away with the need for a temp table) &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; dbo.SplitString \n    (\n        &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt;), \n        &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; tokens(p, a, b) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n            &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n                &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n                p &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n                charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n            &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n        )\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n            p&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; zeroBasedOccurance,\n            &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n                &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, \n                a, \n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; b&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; s\n        &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n      )\n    GO\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, use it as any table (or modify it to fit within your existing stored proc) like this. &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; s \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; zeroBasedOccurance&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Previous version would fail for input string longer than 4000 chars. This version takes care of the limitation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; dbo.SplitString \n(\n    &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; nvarchar(max), \n    &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n&lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; tokens(p, a, b) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;), \n        &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;bigint&lt;/span&gt;), \n        charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n        p &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n    &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n    p&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; ItemIndex,\n    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n        &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, \n        a, \n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; b&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) \n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; s\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n);\n\nGO\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage remains the same.&lt;/p&gt;\n    ","\n&lt;p&gt;Most of the solutions here use while loops or recursive CTEs. A set-based approach will be superior, I promise, if you can use a delimiter other than a space:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[SplitString]\n    (\n        &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; NVARCHAR(MAX),\n        &lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;255&lt;/span&gt;)\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt; ( &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;], idx &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;RANK&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; n) &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n          ( \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; n &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Number, \n              [&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LTRIM(RTRIM(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;, [Number],\n              CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;, [Number]) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; [Number])))\n            &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Number &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; name)\n              &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; sys.all_objects) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; x\n              &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; Number &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;)\n              &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;, [Number], LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;)) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delim&lt;/span&gt;\n          ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; y\n        );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Sample usage:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; dbo.SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo,bar,blat,foo,splunge&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; idx &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Results:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;----&lt;/span&gt;\nblat\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You could also add the &lt;code&gt;idx&lt;/code&gt; you want as an argument to the function, but I&apos;ll leave that as an exercise to the reader.&lt;/p&gt;\n&lt;p&gt;You can&apos;t do this with &lt;em&gt;just&lt;/em&gt; the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;native &lt;code&gt;STRING_SPLIT&lt;/code&gt; function&lt;/a&gt; added in SQL Server 2016, because there is no guarantee that the output will be rendered in the order of the original list. In other words, if you pass in &lt;code&gt;3,6,1&lt;/code&gt; the result will likely be in that order, but it &lt;em&gt;could&lt;/em&gt; be &lt;code&gt;1,3,6&lt;/code&gt;. I have asked for the community&apos;s help in improving the built-in function here:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2020/03/t-sql-queries/please-help-string-split-improvements&quot; rel=&quot;nofollow noreferrer&quot;&gt;Please help with STRING_SPLIT improvements\n&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;With enough &lt;em&gt;qualitative&lt;/em&gt; feedback, they may actually consider making some of these enhancements:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://feedback.azure.com/d365community/idea/5eaf994d-4025-ec11-b6e6-000d3a4f0da0&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT is not feature complete&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;More on split functions, why (and proof that) while loops and recursive CTEs don&apos;t scale, and better alternatives, if splitting strings coming from the application layer:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.sqlperformance.com/2012/07/t-sql-queries/split-strings&quot; rel=&quot;nofollow noreferrer&quot;&gt;Split strings the right way  or the next best way&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2012/08/t-sql-queries/splitting-strings-follow-up&quot; rel=&quot;nofollow noreferrer&quot;&gt;Splitting Strings : A Follow-Up&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://www.sqlperformance.com/2012/08/t-sql-queries/splitting-strings-now-with-less-t-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;Splitting Strings : Now with less T-SQL&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/01/t-sql-queries/comparing-splitting-concat&quot; rel=&quot;nofollow noreferrer&quot;&gt;Comparing string splitting / concatenation methods&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlblog.org/2009/08/01/processing-a-list-of-integers-my-approach&quot; rel=&quot;nofollow noreferrer&quot;&gt;Processing a list of integers : my approach&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlblog.org/2010/07/07/splitting-a-list-of-integers-another-roundup&quot; rel=&quot;nofollow noreferrer&quot;&gt;Splitting a list of integers : another roundup&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlblog.org/2009/08/06/more-on-splitting-lists-custom-delimiters-preventing-duplicates-and-maintaining-order&quot; rel=&quot;nofollow noreferrer&quot;&gt;More on splitting lists : custom delimiters, preventing duplicates, and maintaining order&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.mssqltips.com/sqlservertip/4140/removing-duplicates-from-strings-in-sql-server/?utm_source=AaronBertrand&quot; rel=&quot;nofollow noreferrer&quot;&gt;Removing Duplicates from Strings in SQL Server&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;On SQL Server 2016 or above, though, you should look at &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;STRING_SPLIT()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-agg-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;STRING_AGG()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/03/sql-server-2016/string-split&quot; rel=&quot;nofollow noreferrer&quot;&gt;Performance Surprises and Assumptions : STRING_SPLIT()&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/04/sql-server-2016/string-split-follow-up-1&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT() in SQL Server 2016 : Follow-Up #1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/04/sql-server-2016/string-split-follow-up-2&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT() in SQL Server 2016 : Follow-Up #2&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://sqlperformance.com/2016/12/sql-performance/sql-server-v-next-string_agg-performance&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL Server v.Next : STRING_AGG() performance&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.mssqltips.com/sqlservertip/5275/solve-old-problems-with-sql-servers-new-stringagg-and-stringsplit-functions/?utm_source=AaronBertrand&quot; rel=&quot;nofollow noreferrer&quot;&gt;Solve old problems with SQL Servers new STRING_AGG and STRING_SPLIT functions&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;You can leverage a Number table to do the string parsing. &lt;/p&gt;\n\n&lt;p&gt;Create a physical numbers table:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; dbo.Numbers (N &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;primary&lt;/span&gt; key);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; dbo.Numbers\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; top &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; number) &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; master..spt_values\n    go\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Create test table with 1000000 rows&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; #yak (i &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;identity&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;primary&lt;/span&gt; key, &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;))\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; #yak(&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;a,b,c&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.Numbers n &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; dbo.Numbers nn\n    go\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Create the function&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [dbo].[ufn_ParseArray]\n        (   &lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;      nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt;), \n            &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;  &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;,\n            &lt;span class=&quot;hljs-variable&quot;&gt;@BaseIdent&lt;/span&gt;  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n        )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;  \n        (   &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;  &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; n &lt;span class=&quot;hljs-keyword&quot;&gt;asc&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@BaseIdent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) [i],\n                    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;, n, charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, n) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; n) s\n            &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;    dbo.Numbers\n            &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt;   n &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;convert&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;, len(&lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt;\n                    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Input&lt;/span&gt;, n, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;\n        )\n    go\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage (outputs 3mil rows in 40s on my laptop)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; #yak \n    &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; apply dbo.ufn_ParseArray(&lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;cleanup&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; dbo.Numbers;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;  [dbo].[ufn_ParseArray]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Performance here is not amazing, but calling a function over a million row table is not the best idea. If performing a string split over many rows I would avoid the function. &lt;/p&gt;\n    ","\n&lt;p&gt;This question is &lt;strong&gt;not about a string split approach&lt;/strong&gt;, but about &lt;strong&gt;how to get the nth element&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;All answers here are doing some kind of string splitting using recursion, &lt;code&gt;CTE&lt;/code&gt;s, multiple &lt;code&gt;CHARINDEX&lt;/code&gt;, &lt;code&gt;REVERSE&lt;/code&gt; and &lt;code&gt;PATINDEX&lt;/code&gt;, inventing functions, call for CLR methods, number tables, &lt;code&gt;CROSS APPLY&lt;/code&gt;s ... Most answers cover many lines of code.&lt;/p&gt;\n&lt;p&gt;But - if you really &lt;strong&gt;want nothing more than an approach to get the nth element&lt;/strong&gt; - this can be done as &lt;strong&gt;real one-liner&lt;/strong&gt;, no UDF, not even a sub-select... And as an extra benefit: &lt;strong&gt;type safe&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Get part 2 delimited by a space:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt; NVARCHAR(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos;part1 part2 part3&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; XML).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[2]&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Of course &lt;strong&gt;you can use variables&lt;/strong&gt; for delimiter and position (use &lt;code&gt;sql:column&lt;/code&gt; to retrieve the position directly from a query&apos;s value):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt; NVARCHAR(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; XML).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[sql:variable(&quot;@pos&quot;)][1]&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If your string might include &lt;strong&gt;forbidden characters&lt;/strong&gt; (especially one among &lt;code&gt;&amp;amp;&amp;gt;&amp;lt;&lt;/code&gt;), you still can do it this way. Just use &lt;code&gt;FOR XML PATH&lt;/code&gt; on your string first to replace all forbidden characters with the fitting escape sequence implicitly.&lt;/p&gt;\n&lt;p&gt;It&apos;s a very special case if - additionally - &lt;strong&gt;your delimiter is the semicolon&lt;/strong&gt;. In this case I replace the delimiter first to &apos;#DLMT#&apos;, and replace this to the XML tags finally:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos;Some &amp;lt;, &amp;gt; and &amp;amp;;Other äöü@;One more&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@input&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@dlmt&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;#DLMT#&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)),N&lt;span class=&quot;hljs-string&quot;&gt;&apos;#DLMT#&apos;&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; XML).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[sql:variable(&quot;@pos&quot;)][1]&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;UPDATE for SQL-Server 2016+&lt;/h2&gt;\n&lt;p&gt;Regretfully the developers forgot to return the part&apos;s index with &lt;code&gt;STRING_SPLIT&lt;/code&gt;. But, using SQL-Server 2016+, there is &lt;code&gt;JSON_VALUE&lt;/code&gt; and &lt;code&gt;OPENJSON&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;With &lt;code&gt;JSON_VALUE&lt;/code&gt; we can pass in the position as the index&apos; array.&lt;/p&gt;\n&lt;p&gt;For &lt;code&gt;OPENJSON&lt;/code&gt; the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/openjson-transact-sql?view=sql-server-2017&quot; rel=&quot;noreferrer&quot;&gt;documentation&lt;/a&gt; states clearly:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;When OPENJSON parses a JSON array, the function returns the indexes of the elements in the JSON text as keys.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;A string like &lt;code&gt;1,2,3&lt;/code&gt; needs nothing more than brackets: &lt;code&gt;[1,2,3]&lt;/code&gt;.&lt;br&gt;\nA string of words like &lt;code&gt;this is an example&lt;/code&gt; needs to be &lt;code&gt;[&quot;this&quot;,&quot;is&quot;,&quot;an&quot;,&quot;example&quot;]&lt;/code&gt;.&lt;br&gt;\nThese are very easy string operations. Just try it out:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;--We can build the json-path &apos;$[1]&apos; using CONCAT&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;JSON_VALUE&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&quot;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;,&quot;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;]&apos;&lt;/span&gt;,CONCAT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;$[&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;]&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;--See this for a position safe string-splitter (&lt;em&gt;zero-based&lt;/em&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  JsonArray.[key] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Position]\n       ,JsonArray.[&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Part]\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; OPENJSON(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[&quot;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;,&quot;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;]&apos;&lt;/span&gt;) JsonArray\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In &lt;a href=&quot;https://stackoverflow.com/a/56617711/5089204&quot;&gt;this post&lt;/a&gt; I tested various approaches and found, that &lt;code&gt;OPENJSON&lt;/code&gt; is really fast. Even much faster than the famous &quot;delimitedSplit8k()&quot; method...&lt;/p&gt;\n&lt;h2&gt;UPDATE 2 - Get the values type-safe&lt;/h2&gt;\n&lt;p&gt;We can use an &lt;em&gt;array within an array&lt;/em&gt; simply by using doubled &lt;code&gt;[[]]&lt;/code&gt;. This allows for a typed &lt;code&gt;WITH&lt;/code&gt;-clause:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt;  &lt;span class=&quot;hljs-variable&quot;&gt;@SomeDelimitedString&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;part1|1|20190920&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@JsonArray&lt;/span&gt; NVARCHAR(MAX)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;CONCAT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;[[&quot;&apos;&lt;/span&gt;,REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@SomeDelimitedString&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;,&quot;&apos;&lt;/span&gt;),&lt;span class=&quot;hljs-string&quot;&gt;&apos;&quot;]]&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SomeDelimitedString&lt;/span&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; TheOriginal\n      ,&lt;span class=&quot;hljs-variable&quot;&gt;@JsonArray&lt;/span&gt;                    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; TransformedToJSON\n      ,ValuesFromTheArray.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; OPENJSON(&lt;span class=&quot;hljs-variable&quot;&gt;@JsonArray&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt;(TheFirstFragment  &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;hljs-string&quot;&gt;&apos;$[0]&apos;&lt;/span&gt;\n    ,TheSecondFragment &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;          &lt;span class=&quot;hljs-string&quot;&gt;&apos;$[1]&apos;&lt;/span&gt;\n    ,TheThirdFragment  &lt;span class=&quot;hljs-type&quot;&gt;DATE&lt;/span&gt;         &lt;span class=&quot;hljs-string&quot;&gt;&apos;$[2]&apos;&lt;/span&gt;) ValuesFromTheArray\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is a UDF which will do it.  It will return a table of the delimited values, haven&apos;t tried all scenarios on it but your example works fine.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; SplitString \n(\n    &lt;span class=&quot;hljs-comment&quot;&gt;-- Add the parameters for the function here&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; \n&lt;span class=&quot;hljs-variable&quot;&gt;@ReturnTable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-comment&quot;&gt;-- Add the column definitions for the TABLE variable here&lt;/span&gt;\n    [id] [&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n    [part] [&lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;](&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@part&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;--initialize spaces&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        While &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;Begin&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@part&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@ReturnTable&lt;/span&gt;(part)\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@part&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@mystring&lt;/span&gt;,charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; len(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;),len(&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;))\n\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@iSpaces&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@deliminator&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n\n        If len(&lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@ReturnTable&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@myString&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\nGO\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You would call it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;From&lt;/span&gt; SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:  Updated solution to handle delimters with a len&amp;gt;1 as in :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;From&lt;/span&gt; SplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello**John**Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;**&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here I post a simple way of solution&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[split](\n          &lt;span class=&quot;hljs-variable&quot;&gt;@delimited&lt;/span&gt; NVARCHAR(MAX),\n          &lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt; NVARCHAR(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)\n        ) &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), val NVARCHAR(MAX))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@xml&lt;/span&gt; XML\n          &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@xml&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;t&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@delimited&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/t&amp;gt;&amp;lt;t&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/t&amp;gt;&apos;&lt;/span&gt;\n\n          &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt;(val)\n          &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  r.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(MAX)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; item\n          &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;  &lt;span class=&quot;hljs-variable&quot;&gt;@xml&lt;/span&gt;.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/t&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; records(r)\n          &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;br&gt;\n    Execute the function like this&lt;br&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.split(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In my opinion you guys are making it way too complicated. Just create a CLR UDF and be done with it.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;System&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data.SqlClient;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data.SqlTypes;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; Microsoft.SqlServer.Server;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Collections.Generic;\n\npublic partial class UserDefinedFunctions {\n  [SqlFunction]\n  public &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; SqlString SearchString(string &lt;span class=&quot;hljs-keyword&quot;&gt;Search&lt;/span&gt;) {\n    List&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;string&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; SearchWords &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; List&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;string&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;();\n    foreach (string s &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; Search.Split(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;[] { &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; })) {\n      if (&lt;span class=&quot;hljs-operator&quot;&gt;!&lt;/span&gt;s.ToLower().&lt;span class=&quot;hljs-keyword&quot;&gt;Equals&lt;/span&gt;(&quot;or&quot;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;!&lt;/span&gt;s.ToLower().&lt;span class=&quot;hljs-keyword&quot;&gt;Equals&lt;/span&gt;(&quot;and&quot;)) {\n        SearchWords.Add(s);\n      }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SqlString(string.Join(&quot; OR &quot;, SearchWords.ToArray()));\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;What about using &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; statement?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt;(id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), item &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;),(&apos;&apos;&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT * FROM (VALUES(&apos;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;)) AS V(A)&apos;&lt;/span&gt; \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXEC&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result-set achieved.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id  item\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Hello\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   John\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   Smith\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I use the answer of frederic but this did not work in SQL Server 2005&lt;/p&gt;\n\n&lt;p&gt;I modified it and I&apos;m using &lt;code&gt;select&lt;/code&gt; with &lt;code&gt;union all&lt;/code&gt; and it works&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith how are you&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;(id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), item &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max))\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos; UNION ALL SELECT &apos;&apos;&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; SELECT  &apos;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;  &apos;&lt;/span&gt; \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXEC&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Splited&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the result-set is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id  item\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Hello\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   John\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   Smith\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;   how\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;are&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   you\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This pattern works fine and you can generalize&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Convert&lt;/span&gt;(xml,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;Replace(FIELD,&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[INDEX])&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;TYPE&apos;&lt;/span&gt;)\n                          &lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;                                   &lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;     &lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;^&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;note &lt;strong&gt;FIELD&lt;/strong&gt;, &lt;strong&gt;INDEX&lt;/strong&gt; and &lt;strong&gt;TYPE&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Let some table with identifiers like&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;sys.message&lt;span class=&quot;hljs-number&quot;&gt;.1234&lt;/span&gt;.warning.A45\nsys.message&lt;span class=&quot;hljs-number&quot;&gt;.1235&lt;/span&gt;.error.O98\n....\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, you can write&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Source         &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[1])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(10)&apos;&lt;/span&gt;),\n       RecordType     &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[2])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(20)&apos;&lt;/span&gt;),\n       RecordNumber   &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[3])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;int&apos;&lt;/span&gt;),\n       Status         &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; q.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[4])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(5)&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   (\n         &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;   q &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Convert&lt;/span&gt;(xml,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;Replace(fieldName,&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&apos;&lt;/span&gt;)\n         &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;     some_TABLE\n       ) Q\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;splitting and casting all parts.&lt;/p&gt;\n    ","\n&lt;p&gt;Yet another get n&apos;th part of string by delimeter function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; GetStringPartByDelimeter (\n    &lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; nvarchar(max),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@delimeter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; nvarchar(max),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n) &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; NVARCHAR(MAX) \n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;\n    while (&lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@delimeter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt;)\n\n        if(&lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n            if(&lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n                &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; len(&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@endPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@startPos&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@position&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and the usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; dbo.GetStringPartByDelimeter (&lt;span class=&quot;hljs-string&quot;&gt;&apos;a;b;c;d;e&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which returns:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;c\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If your database has compatibility level of 130 or higher then you can use the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot; rel=&quot;nofollow noreferrer&quot;&gt;STRING_SPLIT&lt;/a&gt; function along with &lt;a href=&quot;https://technet.microsoft.com/en-us/library/gg699618(v=sql.110).aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;OFFSET FETCH&lt;/a&gt; clauses to get the specific item by index.&lt;/p&gt;\n\n&lt;p&gt;To get the item at &lt;strong&gt;index N&lt;/strong&gt; (zero based), you can use the following code&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; STRING_SPLIT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;OFFSET&lt;/span&gt; N &lt;span class=&quot;hljs-keyword&quot;&gt;ROWS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FETCH&lt;/span&gt; NEXT &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ROWS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ONLY&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To check the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/relational-databases/databases/view-or-change-the-compatibility-level-of-a-database&quot; rel=&quot;nofollow noreferrer&quot;&gt;compatibility level of your database&lt;/a&gt;, execute this code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; compatibility_level  \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; sys.databases &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;YourDBName&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [SplitWordList]\n(\n &lt;span class=&quot;hljs-variable&quot;&gt;@list&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; \n(\n Word &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,\n Position &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;identity&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; \n    &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@lpos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@ignore&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@dl&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a2&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z2&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n1&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n2&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;smallint&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n    &lt;span class=&quot;hljs-variable&quot;&gt;@a1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@a2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;z&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@z2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Z&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;0&apos;&lt;/span&gt;),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@n2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-string&quot;&gt;&apos;9&apos;&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@ignore&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;&quot;&apos;&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dl&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; datalength(&lt;span class=&quot;hljs-variable&quot;&gt;@list&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@lpos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n  while (&lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@dl&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@list&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n    if (&lt;span class=&quot;hljs-variable&quot;&gt;@ignore&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; ascii(&lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt;)\n      if ((&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@a1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@z1&lt;/span&gt;))  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@a2&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@z2&lt;/span&gt;))\n        &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@n1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@a&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@n2&lt;/span&gt;))\n      &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@c&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; if (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@pos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n  if (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@t&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt;)\n  &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Test it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; SplitWordList(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I was looking for the solution on net and the below works for me.\n&lt;a href=&quot;http://code.developwithus.com/topics/database/mssql/&quot; rel=&quot;nofollow&quot;&gt;Ref&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;And you call the function like this :&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; dbo.split(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ram shyam hari gopal&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; ANSI_NULLS &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;\nGO\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; QUOTED_IDENTIFIER &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;\nGO\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[Split](&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;), &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))       \n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@temptable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (items &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;))       \n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;       \n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;)        \n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;       \n    IF len(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;       \n    WHILE &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;       \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;)       \n        IF &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;       \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)       \n        &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt;       \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;       \n        IF(len(&lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)  \n            &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@temptable&lt;/span&gt;(Items) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@slice&lt;/span&gt;)       \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;,len(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@idx&lt;/span&gt;)       \n        IF len(&lt;span class=&quot;hljs-variable&quot;&gt;@String&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; break       \n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;   \n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;       \n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The following example uses a recursive CTE&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; 18.09.2013&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; dbo.SplitStrings_CTE(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; nvarchar(max), &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (val nvarchar(max), [level] &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY CLUSTERED([level]))\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; cte &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;,  &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val,\n         &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(STUFF(&lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@List&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; nvarchar(max)) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; stval, \n         &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [level]\n  &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(stval, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, stval)),\n         &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(STUFF(stval, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, stval), &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; nvarchar(max)),\n         [level] &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; stval &lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n  )\n  &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@returns&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; REPLACE(val, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val, [level]\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte\n  &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; val &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Demo on &lt;a href=&quot;http://sqlfiddle.com/#!3/c43e0/1&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SQLFiddle&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;Alter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Function&lt;/span&gt; dbo.fn_Split\n    (\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; nvarchar(max),\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;  nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt;  &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Null&lt;/span&gt;\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Results&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (id &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTITY&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; nvarchar(max))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n       &lt;span class=&quot;hljs-comment&quot;&gt;/* USAGE\n            Select * From dbo.fn_Split(&apos;apple pear grape banana orange honeydew cantalope 3 2 1 4&apos;, &apos; &apos;, Null)\n            Select * From dbo.fn_Split(&apos;1,abc,&quot;Doe, John&quot;,4&apos;, &apos;,&apos;, &apos;&quot;&apos;)\n            Select * From dbo.fn_Split(&apos;Hello 0,&quot;&amp;amp;&quot;&quot;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&apos;, &apos;,&apos;, &apos;&quot;&apos;)\n       */&lt;/span&gt;\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Declare Variables&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt;\n          &lt;span class=&quot;hljs-variable&quot;&gt;@X&lt;/span&gt;     xml,\n          &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt;  nvarchar(max),\n          &lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt; nvarchar(max),\n          &lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;,\n          &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt;   &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- HTML Encode @Expression&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;For&lt;/span&gt; XML Path(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;))\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Find all occurences of @Delimiter within @Qualifier and replace with |||***|||&lt;/span&gt;\n       While PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; Len(IsNull(&lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n          &lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt;\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- Starting character position of @Qualifier&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;),\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- @Expression starting at the @Start position&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SubString&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;@Start&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- Next position of @Qualifier within @Expression&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; PATINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;%&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- The part of Expression found between the @Qualifiers&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Left&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@Temp&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;,\n             &lt;span class=&quot;hljs-comment&quot;&gt;-- New @Expression&lt;/span&gt;\n             &lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;,\n                                   &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;When&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@End&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Else&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Qualifier&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;End&lt;/span&gt;,\n                                   Replace(&lt;span class=&quot;hljs-variable&quot;&gt;@Temp2&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;|||***|||&apos;&lt;/span&gt;)\n                           )\n       &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Replace all occurences of @Delimiter within @Expression with &apos;&amp;lt;/fn_Split&amp;gt;&amp;lt;fn_Split&amp;gt;&apos;&lt;/span&gt;\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- And convert it to XML so we can select from it&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt;\n          &lt;span class=&quot;hljs-variable&quot;&gt;@X&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Cast&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;fn_Split&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;\n                    Replace(&lt;span class=&quot;hljs-variable&quot;&gt;@Expression&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/fn_Split&amp;gt;&amp;lt;fn_Split&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;\n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/fn_Split&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; xml)\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Insert into our returnable table replacing &apos;|||***|||&apos; back to @Delimiter&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@Results&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n          &quot;Value&quot; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LTRIM(RTrim(Replace(C.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;), &lt;span class=&quot;hljs-string&quot;&gt;&apos;|||***|||&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@Delimiter&lt;/span&gt;)))\n       &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n          &lt;span class=&quot;hljs-variable&quot;&gt;@X&lt;/span&gt;.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fn_Split&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; X(C)\n\n       &lt;span class=&quot;hljs-comment&quot;&gt;-- Return our temp table&lt;/span&gt;\n       &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can split a string in SQL without needing a function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(MAX)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;BED40DFC-F468-46DD-8017-00EF2FA3E4A4,64B59FC5-3F4D-4B0E-9A48-01F3D4F220B0,A611A108-97CA-42F3-A2E1-057165339719,E72D95EA-578F-45FC-88E5-075F66FD726C&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- http://stackoverflow.com/questions/14712864/how-to-query-values-from-xml-nodes&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    x.XmlCol.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(36)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(&lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&amp;lt;e&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; xml) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; RawXml\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b \n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY b.RawXml.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;) x(XmlCol);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you need to support arbitrary strings (with xml special characters)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; NVARCHAR(MAX)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;html&amp;gt;unsafe &amp;amp; safe Utf8CharsDon&apos;&apos;tGetEncoded ÄöÜ - &quot;Conex&quot;&amp;lt;html&amp;gt;,Barnes &amp;amp; Noble,abc,def,ghi&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- http://stackoverflow.com/questions/14712864/how-to-query-values-from-xml-nodes&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    x.XmlCol.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(MAX)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; val \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    &lt;span class=&quot;hljs-built_in&quot;&gt;CAST&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@bla&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)), &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&amp;lt;e&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/e&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; xml) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; RawXml\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; b \n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY b.RawXml.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;e&apos;&lt;/span&gt;) x(XmlCol); \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know it&apos;s an old Question, but i think some one can benefit from my solution.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;)\n,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name))\n    ,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    ,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name)),&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;)\n,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name))\n    ,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(column_name,CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,column_name,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,LEN(column_name)),&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    ,LEN(column_name))\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; table_name\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!3/776f3/1&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL FIDDLE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It separates all the 3 sub-strings deliminator by &apos; &apos;.&lt;/li&gt;\n&lt;li&gt;One must not use while loop, as it decreases the performance.&lt;/li&gt;\n&lt;li&gt;No need to Pivot as all the resultant sub-string will be displayed in\none Row&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Limitations:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;One must know the total no. of spaces (sub-string).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the solution can give sub-string up to to N.&lt;/p&gt;\n\n&lt;p&gt;To overcame the limitation we can use the following &lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;ref&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;But again the above &lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;solution&lt;/strong&gt;&lt;/a&gt; can&apos;t be use in a table (Actaully i wasn&apos;t able to use it).&lt;/p&gt;\n\n&lt;p&gt;Again i hope this solution can help some-one.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; In case of Records &amp;gt; 50000 it is not &lt;strong&gt;advisable&lt;/strong&gt; to use &lt;strong&gt;&lt;code&gt;LOOPS&lt;/code&gt;&lt;/strong&gt; as it will degrade the &lt;strong&gt;Performance&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Pure set-based solution using &lt;code&gt;TVF&lt;/code&gt; with recursive &lt;code&gt;CTE&lt;/code&gt;. You can &lt;code&gt;JOIN&lt;/code&gt; and &lt;code&gt;APPLY&lt;/code&gt; this function to any dataset.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [dbo].[SplitStringToResultSet] (&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max), &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)) [x], &lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; rtrim(&lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@value&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max))) [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;]) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; j\n    &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;right&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, len(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; len(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;]\n    , &lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt;(r.[&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;], &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, r.value) &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; len(r.value) &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;abs&lt;/span&gt;(charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, r.[&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;])&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt; ) [x]\n    , [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;] &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ltrim(x) [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;], [&lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt;] [index] &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; r &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;\ngo\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Usage:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; [dbo].[SplitStringToResultSet](&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; [index] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;   index\n&lt;span class=&quot;hljs-comment&quot;&gt;-------------&lt;/span&gt;\nJohn    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Almost all the other answers are replacing the string being split which wastes CPU cycles and performs unnecessary memory allocations.&lt;/p&gt;\n\n&lt;p&gt;I cover a much better way to do a string split here: &lt;a href=&quot;http://www.digitalruby.com/split-string-sql-server/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.digitalruby.com/split-string-sql-server/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here is the code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; NOCOUNT &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- You will want to change nvarchar(MAX) to nvarchar(50), varchar(50) or whatever matches exactly with the string column you will be searching against&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStringTable&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt; nvarchar(MAX) &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt; nvarchar(MAX) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;your|string|to|split|here&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt; nvarchar(MAX)\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitDelim&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;|&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@SplitDelim&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;)\n\nWHILE &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;, (&lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStringTable&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitEndPos&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@SplitDelim&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@StringToSplit&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStartPos&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2147483647&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@SplitStringTable&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;Value&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@SplitValue&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; NOCOUNT OFF\n\n&lt;span class=&quot;hljs-comment&quot;&gt;-- You can select or join with the values in @SplitStringTable at this point.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In Azure SQL Database (based on Microsoft SQL Server but not exactly the same thing) the signature of &lt;code&gt;STRING_SPLIT&lt;/code&gt; function looks like:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;STRING_SPLIT ( string , separator [ , enable_ordinal ] )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;When &lt;code&gt;enable_ordinal&lt;/code&gt; flag is set to 1 the result will include a column named &lt;code&gt;ordinal&lt;/code&gt; that consists of the 1based position of the substring within the input string:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; STRING_SPLIT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ordinal &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------|---------|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; hello &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; john  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; smith &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This allows us to do this:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; STRING_SPLIT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; ordinal &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; john  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;If &lt;code&gt;enable_ordinal&lt;/code&gt; is not available then there is a trick &lt;em&gt;&lt;strong&gt;which assumes that the substrings with the input string are unique&lt;/strong&gt;&lt;/em&gt;. In this scenario, &lt;code&gt;CHAR_INDEX&lt;/code&gt; could be used to find the position of the substring within the input string:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;, input_str)) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; ord_pos\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;\n    (&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;)\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; x(input_str)\n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY STRING_SPLIT(input_str, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ord_pos &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-------+---------|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; hello &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; john  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; smith &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;       &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Recursive CTE solution with server pain, &lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1&quot; rel=&quot;nofollow&quot;&gt;test it&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;MS SQL Server 2008 Schema Setup&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; Course( Courses &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) );\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; Course &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&apos;Hello John Smith&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Query 1&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; cte &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt;\n   ( &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt;( Courses, charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , Courses) ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_l,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;( &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;( Courses, \n                         charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , Courses) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , \n                         len(Courses ) ) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; \n              &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;) )  &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_r,\n        Courses &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a,\n        &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; Course t\n    &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt;(a_r, charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , a_r) ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_l,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;( a_r, charindex( &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; , a_r) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , len(a_R ) ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; a_r,\n        cte.a,\n        cte.n &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; Course t &lt;span class=&quot;hljs-keyword&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; cte \n         &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; t.Courses &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; cte.a &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; len( a_r ) &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n   )\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; a_l, n &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; cte\n&lt;span class=&quot;hljs-comment&quot;&gt;--where N = 1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1/0&quot; rel=&quot;nofollow&quot;&gt;Results&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;    A_L &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; N &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;hljs-comment&quot;&gt;--------|---|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Hello  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  John  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Smith  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;while similar to the xml based answer by josejuan, i found that processing the xml path only once, then pivoting was moderately more efficient:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvidingID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvider,\n    [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProvidingID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProviding,\n    [&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecievingID,\n    [&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecieving,\n    [&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; RowsPassed,\n    [&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecieving2\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;\n    (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; id,message,d.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; sysssislog &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; apply       ( \n          &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Item &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; y.i.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(./text())[1]&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(200)&apos;&lt;/span&gt;),\n              &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; y.i) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; rn\n          &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n          ( \n             &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; x &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;CONVERT&lt;/span&gt;(XML, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;i&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; REPLACE(Message, &lt;span class=&quot;hljs-string&quot;&gt;&apos;:&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/i&amp;gt;&amp;lt;i&amp;gt;&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/i&amp;gt;&apos;&lt;/span&gt;).query(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;)\n          ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; a &lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY x.nodes(&lt;span class=&quot;hljs-string&quot;&gt;&apos;i&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; y(i)\n       ) d\n       &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; event\n       &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; \n       &lt;span class=&quot;hljs-string&quot;&gt;&apos;OnPipelineRowsSent&apos;&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tokens \n    pivot \n    ( &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(item) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; [rn] &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; ([&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;],[&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;]) \n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; data\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ran in 8:30&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; id,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[3])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvidingID,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[4])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; PathProvider,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[5])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProvidingID,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[6])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ComponentProviding,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[7])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecievingID,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[8])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; InputRecieving,\ntokens.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;(/n[9])&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(100)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; RowsPassed\n &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;\n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; id, &lt;span class=&quot;hljs-keyword&quot;&gt;Convert&lt;/span&gt;(xml,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;Replace(message,&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&amp;lt;n&amp;gt;&apos;&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/n&amp;gt;&apos;&lt;/span&gt;) tokens\n         &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; sysssislog \n       &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; event\n       &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; \n       &lt;span class=&quot;hljs-string&quot;&gt;&apos;OnPipelineRowsSent&apos;&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; data\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ran in 9:20&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FUNCTION&lt;/span&gt; [dbo].[fnSplitString] \n( \n    &lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt; NVARCHAR(MAX), \n    &lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) \n) \n&lt;span class=&quot;hljs-keyword&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@output&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt;(splitdata NVARCHAR(MAX) \n) \n&lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;) \n    WHILE &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt; \n        IF &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  \n            &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; LEN(&lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@output&lt;/span&gt; (splitdata)  \n        &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt;)) \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; \n        &lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@end&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@delimiter&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@string&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@start&lt;/span&gt;)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;RETURN&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;AND USE IT&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; dbo.fnSplitString(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Querying SQL Server&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;if anyone wants to get only one part of the seperatured text can use this&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;select * from fromSplitStringSep(&apos;Word1 wordr2 word3&apos;,&apos; &apos;) &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; [dbo].[SplitStringSep] \n(\n    &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt; nvarchar(&lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt;), \n    &lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; tokens(p, a, b) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n        charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;all&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n            p &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n            b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, \n            charindex(&lt;span class=&quot;hljs-variable&quot;&gt;@separator&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, b &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n        &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n        )\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\n            p&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt; zeroBasedOccurance,\n            &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n                &lt;span class=&quot;hljs-variable&quot;&gt;@str&lt;/span&gt;, \n                a, \n                &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; b &lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; b&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;a &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4000&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;) \n            &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; s\n        &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tokens\n  )\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I devoloped this,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt; nvarchar(Max) &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;ali.veli.deli.&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; nvarchar(Max);\n&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@splitter&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;;\n\nwhile CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@splitter&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;begin&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;,CHARINDEX(&lt;span class=&quot;hljs-variable&quot;&gt;@splitter&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;))\n    &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;    &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;RIGHT&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;,len(&lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt;)&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;len(&lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt;) )\n     &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; item, &lt;span class=&quot;hljs-variable&quot;&gt;@x&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; x;\n&lt;span class=&quot;hljs-keyword&quot;&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;the only attention you should is dot &apos;.&apos; that end of the @x is always should be there.&lt;/p&gt;\n    ","\n&lt;p&gt;building on @NothingsImpossible solution, or, rather, comment on the most voted answer (just below the accepted one), i found the following &lt;strong&gt;quick-and-dirty&lt;/strong&gt; solution fulfill my own needs - it has a benefit of being solely within SQL domain.&lt;/p&gt;\n\n&lt;p&gt;given a string &quot;first;second;third;fourth;fifth&quot;, say, I want to get the third token. this works only if we know how many tokens the string is going to have - in this case it&apos;s 5. so my way of action is to chop the last two tokens away (inner query), and then to chop the first two tokens away (outer query)&lt;/p&gt;\n\n&lt;p&gt;i know that this is ugly and covers the specific conditions i was in, but am posting it just in case somebody finds it useful. cheers&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n    REVERSE(\n        &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(\n            reverse_substring, \n            &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, \n            CHARINDEX(&lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;, reverse_substring)\n        )\n    ) \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n        msg,\n        &lt;span class=&quot;hljs-built_in&quot;&gt;SUBSTRING&lt;/span&gt;(\n            REVERSE(msg), \n            CHARINDEX(\n                &lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;, \n                REVERSE(msg), \n                CHARINDEX(\n                    &lt;span class=&quot;hljs-string&quot;&gt;&apos;;&apos;&lt;/span&gt;,\n                    REVERSE(msg)\n                )&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n            )&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n            &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;\n        ) reverse_substring\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; \n    (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;first;second;third;fourth;fifth&apos;&lt;/span&gt; msg\n    ) a\n) b\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;hello john smith&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; (\n    &lt;span class=&quot;hljs-built_in&quot;&gt;substring&lt;/span&gt;(\n        &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;,\n        charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n        (\n          (charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;, charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n          &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; charindex(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;,&lt;span class=&quot;hljs-variable&quot;&gt;@strng&lt;/span&gt;)\n        )\n    ))\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":458,"title":"How do I split a delimited string so I can access individual items?","content":"\n                \n&lt;p&gt;Using SQL Server, how do I split a string so I can access item x?&lt;/p&gt;\n\n&lt;p&gt;Take a string &quot;Hello John Smith&quot;. How can I split the string by space and access the item at index 1 which should return &quot;John&quot;?&lt;/p&gt;\n    ","slug":"how-do-i-split-a-delimited-string-so-i-can-access-individual-items-1657388042385","postType":"QUESTION","createdAt":"2022-07-09T17:34:02.000Z","updatedAt":"2022-07-09T17:34:02.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How do I make a redirect in PHP?","slug":"how-do-i-make-a-redirect-in-php-1657387381903"},{"title":"How do I access previous promise results in a .then() chain?","slug":"how-do-i-access-previous-promise-results-in-a-.then()-chain-1657387705386"},{"title":"What is a raw type and why shouldn't we use it?","slug":"what-is-a-raw-type-and-why-shouldn't-we-use-it-1657384481079"},{"title":"String.equals versus == [duplicate]","slug":"string.equals-versus-duplicate-1657387599972"},{"title":"How can I read inputs as numbers?","slug":"how-can-i-read-inputs-as-numbers-1657384503324"},{"title":"What is the canonical way to check for errors using the CUDA runtime API?","slug":"what-is-the-canonical-way-to-check-for-errors-using-the-cuda-runtime-api-1657387302698"},{"title":"What is the difference between single-quoted and double-quoted strings in PHP?","slug":"what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php-1657384624345"},{"title":"How to extract and access data from JSON with PHP?","slug":"how-to-extract-and-access-data-from-json-with-php-1657384483259"},{"title":"What special characters must be escaped in regular expressions?","slug":"what-special-characters-must-be-escaped-in-regular-expressions-1657387465381"},{"title":"Can you provide some examples of why it is hard to parse XML and HTML with a regex? [closed]","slug":"can-you-provide-some-examples-of-why-it-is-hard-to-parse-xml-and-html-with-a-regex-closed-1657388410824"},{"title":"What is a NullPointerException, and how do I fix it?","slug":"what-is-a-nullpointerexception-and-how-do-i-fix-it-1657384201768"},{"title":"Why is setTimeout(fn, 0) sometimes useful?","slug":"why-is-settimeout(fn-0)-sometimes-useful-1657388379869"},{"title":"Why does printf not flush after the call unless a newline is in the format string?","slug":"why-does-printf-not-flush-after-the-call-unless-a-newline-is-in-the-format-string-1657387853407"},{"title":"What is the difference between a deep copy and a shallow copy?","slug":"what-is-the-difference-between-a-deep-copy-and-a-shallow-copy-1657388445063"},{"title":"When should I use a return statement in ES6 arrow functions","slug":"when-should-i-use-a-return-statement-in-es6-arrow-functions-1657388472113"},{"title":"How do I split a list into equally-sized chunks?","slug":"how-do-i-split-a-list-into-equally-sized-chunks-1657384580399"},{"title":"Dynamically access object property using variable","slug":"dynamically-access-object-property-using-variable-1657384439324"},{"title":"Command not found error in Bash variable assignment","slug":"command-not-found-error-in-bash-variable-assignment-1657388326347"},{"title":"Transitions on the CSS display property","slug":"transitions-on-the-css-display-property-1657387761601"},{"title":"How to get all possible combinations of a list’s elements?","slug":"how-to-get-all-possible-combinations-of-a-list's-elements-1657388271070"}]},"__N_SSG":true}