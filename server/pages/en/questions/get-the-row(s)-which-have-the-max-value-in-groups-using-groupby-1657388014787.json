{"pageProps":{"data":{"answer":["\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]: df\nOut[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]:\n    Sp  Mt Value  count\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1     a      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  MM1  S1     n      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  MM1  S3    cb      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S3    mk      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4    bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  MM2  S4   dgd      &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  MM4  S2    rd      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  MM4  S2    cb      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]: df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;], sort=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;)[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;()\nOut[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]:\nMt\nS1     &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\nS3     &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\nS4    &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\nS2     &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\nName: count\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To get the indices of the original DF you can do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;]: idx = df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;])[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;].transform(&lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;) == df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;]\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]: df[idx]\nOut[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]:\n    Sp  Mt Value  count\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1     a      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S3    mk      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4    bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that if you have multiple max values per group, all will be returned.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;On a hail mary chance that this is what the OP is requesting:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]: df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count_max&apos;&lt;/span&gt;] = df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;])[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;].transform(&lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;)\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]: df\nOut[&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;]:\n    Sp  Mt Value  count  count_max\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1     a      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  MM1  S1     n      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  MM1  S3    cb      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S3    mk      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4    bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;         &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  MM2  S4   dgd      &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;         &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  MM4  S2    rd      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  MM4  S2    cb      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;          &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can sort the dataFrame by count and then remove duplicates. I think it&apos;s easier:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.sort_values(&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;, ascending=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;).drop_duplicates([&lt;span class=&quot;hljs-string&quot;&gt;&apos;Sp&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Easy solution would be to apply the &lt;code&gt;idxmax()&lt;/code&gt; function to get indices of rows with max values.\nThis would filter out all the rows with max value in the group.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;365&lt;/span&gt;]: &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;366&lt;/span&gt;]: df = pd.DataFrame({\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mk&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bg&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dgb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;uyi&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]\n})\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;367&lt;/span&gt;]: df                                                                                                       \nOut[&lt;span class=&quot;hljs-number&quot;&gt;367&lt;/span&gt;]: \n   count  mt   sp  val\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  S1  MM1    a\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  S1  MM1    n\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  S3  MM1   cb\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  S3  MM2   mk\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;  S4  MM2   bg\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  S4  MM2  dgb\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  S2  MM4   rd\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  S2  MM4   cb\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  S2  MM4  uyi\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;### Apply idxmax() and use .loc() on dataframe to filter the rows with max values:&lt;/span&gt;\nIn [&lt;span class=&quot;hljs-number&quot;&gt;368&lt;/span&gt;]: df.loc[df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&quot;sp&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;mt&quot;&lt;/span&gt;])[&lt;span class=&quot;hljs-string&quot;&gt;&quot;count&quot;&lt;/span&gt;].idxmax()]                                                       \nOut[&lt;span class=&quot;hljs-number&quot;&gt;368&lt;/span&gt;]: \n   count  mt   sp  val\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  S1  MM1    a\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  S3  MM1   cb\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  S3  MM2   mk\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;  S4  MM2   bg\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  S2  MM4  uyi\n\n&lt;span class=&quot;hljs-comment&quot;&gt;### Just to show what values are returned by .idxmax() above:&lt;/span&gt;\nIn [&lt;span class=&quot;hljs-number&quot;&gt;369&lt;/span&gt;]: df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&quot;sp&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;mt&quot;&lt;/span&gt;])[&lt;span class=&quot;hljs-string&quot;&gt;&quot;count&quot;&lt;/span&gt;].idxmax().values                                                        \nOut[&lt;span class=&quot;hljs-number&quot;&gt;369&lt;/span&gt;]: array([&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You may not need to do with group by , using &lt;code&gt;sort_values&lt;/code&gt;+ &lt;code&gt;drop_duplicates&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.sort_values(&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;).drop_duplicates([&lt;span class=&quot;hljs-string&quot;&gt;&apos;Sp&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;],keep=&lt;span class=&quot;hljs-string&quot;&gt;&apos;last&apos;&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;190&lt;/span&gt;]: \n    Sp  Mt Value  count\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1     a      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  MM1  S3    cb      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S3    mk      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4    bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also almost same logic by using &lt;code&gt;tail&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df.sort_values(&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;).groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;Sp&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;]).tail(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;52&lt;/span&gt;]: \n    Sp  Mt Value  count\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1     a      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  MM1  S3    cb      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S3    mk      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4    bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Having tried the solution suggested by Zelazny on a relatively large DataFrame (~400k rows) I found it to be very slow.  Here is an alternative that I found to run orders of magnitude faster on my data set.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mk&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bg&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dgb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;uyi&apos;&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]\n    })\n\ndf_grouped = df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt;]).agg({&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;max&apos;&lt;/span&gt;})\n\ndf_grouped = df_grouped.reset_index()\n\ndf_grouped = df_grouped.rename(columns={&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;count_max&apos;&lt;/span&gt;})\n\ndf = pd.merge(df, df_grouped, how=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;, on=[&lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt;])\n\ndf = df[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;] == df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count_max&apos;&lt;/span&gt;]]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use &lt;code&gt;groupby&lt;/code&gt; and &lt;code&gt;idxmax&lt;/code&gt; methods:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;transfer col &lt;code&gt;date&lt;/code&gt; to &lt;code&gt;datetime&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;date&apos;&lt;/span&gt;]=pd.to_datetime(df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;date&apos;&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;get the index of &lt;code&gt;max&lt;/code&gt; of column &lt;code&gt;date&lt;/code&gt;, after &lt;code&gt;groupyby ad_id&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;idx=df.groupby(by=&lt;span class=&quot;hljs-string&quot;&gt;&apos;ad_id&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-string&quot;&gt;&apos;date&apos;&lt;/span&gt;].idxmax()\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;get the wanted data:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df_max=df.loc[idx,]\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Out[54]:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;ad_id  price       date\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-06-&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-06-&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-06-&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-06-&lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For me, the easiest solution would be keep value when count is equal to the maximum. Therefore, the following one line command is enough : &lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;] == df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;])[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;].transform(&lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;)]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Summarizing, there are many ways, but which one is faster?&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; np\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; time\n\ndf = pd.DataFrame(np.random.randint(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,size=(&lt;span class=&quot;hljs-number&quot;&gt;1000000&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)), columns=&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;AB&apos;&lt;/span&gt;))\n\nstart_time = time.time()\ndf1idx = df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;])[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].transform(&lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;) == df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;]\ndf1 = df[df1idx]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---1 ) %s seconds ---&quot;&lt;/span&gt; % (time.time() - start_time))\n\nstart_time = time.time()\ndf2 = df.sort_values(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;).groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;]).tail(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---2 ) %s seconds ---&quot;&lt;/span&gt; % (time.time() - start_time))\n\nstart_time = time.time()\ndf3 = df.sort_values(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;).drop_duplicates([&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;],keep=&lt;span class=&quot;hljs-string&quot;&gt;&apos;last&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---3 ) %s seconds ---&quot;&lt;/span&gt; % (time.time() - start_time))\n\nstart_time = time.time()\ndf3b = df.sort_values(&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;, ascending=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;).drop_duplicates([&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;])\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---3b) %s seconds ---&quot;&lt;/span&gt; % (time.time() - start_time))\n\nstart_time = time.time()\ndf4 = df[df[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;] == df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;])[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].transform(&lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;)]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---4 ) %s seconds ---&quot;&lt;/span&gt; % (time.time() - start_time))\n\nstart_time = time.time()\nd = df.groupby(&lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt;].nlargest(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\ndf5 = df.iloc[[i[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; d.index], :]\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;---5 ) %s seconds ---&quot;&lt;/span&gt; % (time.time() - start_time))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And the winner is...&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;--1 ) 0.03337574005126953 seconds ---&lt;/li&gt;\n&lt;li&gt;--2 ) 0.1346898078918457 seconds ---&lt;/li&gt;\n&lt;li&gt;--3 ) 0.10243558883666992 seconds ---&lt;/li&gt;\n&lt;li&gt;--3b) 0.1004343032836914 seconds ---&lt;/li&gt;\n&lt;li&gt;--4 ) 0.028397560119628906 seconds ---&lt;/li&gt;\n&lt;li&gt;--5 ) 0.07552886009216309 seconds ---&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Try using &quot;nlargest&quot; on the groupby object. The advantage of using nlargest is that it returns the index of the rows where &quot;the nlargest item(s)&quot; were fetched from.\nNote: we slice the second(1) element of our index since our index in this case consist of tuples(eg.(s1, 0)).&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mk&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bg&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dgb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;uyi&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]\n})\n\nd = df.groupby(&lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt;)[&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;].nlargest(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;# pass 1 since we want the max&lt;/span&gt;\n\ndf.iloc[[i[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; d.index], :] &lt;span class=&quot;hljs-comment&quot;&gt;# pass the index of d as list comprehension&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/F2h7N.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/F2h7N.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Realizing that &lt;strong&gt;&quot;applying&quot; &quot;nlargest&quot;&lt;/strong&gt; to &lt;strong&gt;groupby object&lt;/strong&gt; works just as fine:&lt;/p&gt;\n\n&lt;p&gt;Additional advantage - &lt;strong&gt;also can fetch&lt;/strong&gt; &lt;strong&gt;top n values&lt;/strong&gt; if required:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;In [&lt;span class=&quot;hljs-number&quot;&gt;85&lt;/span&gt;]: &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; pd\n\nIn [&lt;span class=&quot;hljs-number&quot;&gt;86&lt;/span&gt;]: df = pd.DataFrame({\n    ...: &lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;],\n    ...: &lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;],\n    ...: &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mk&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bg&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dgb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;uyi&apos;&lt;/span&gt;],\n    ...: &lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]\n    ...: })\n\n&lt;span class=&quot;hljs-comment&quot;&gt;## Apply nlargest(1) to find the max val df, and nlargest(n) gives top n values for df:&lt;/span&gt;\nIn [&lt;span class=&quot;hljs-number&quot;&gt;87&lt;/span&gt;]: df.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&quot;sp&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;mt&quot;&lt;/span&gt;]).apply(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; x: x.nlargest(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;count&quot;&lt;/span&gt;)).reset_index(drop=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\nOut[&lt;span class=&quot;hljs-number&quot;&gt;87&lt;/span&gt;]:\n   count  mt   sp  val\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  S1  MM1    a\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  S3  MM1   cb\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  S3  MM2   mk\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;  S4  MM2   bg\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  S2  MM4  uyi\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you sort your DataFrame that ordering will be preserved in the groupby.  You can then just grab the first or last element and reset the index.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mk&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bg&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dgb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;uyi&apos;&lt;/span&gt;],\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]\n})\n\ndf.sort_values(&lt;span class=&quot;hljs-string&quot;&gt;&quot;count&quot;&lt;/span&gt;, ascending=&lt;span class=&quot;hljs-literal&quot;&gt;False&lt;/span&gt;).groupby([&lt;span class=&quot;hljs-string&quot;&gt;&quot;sp&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;mt&quot;&lt;/span&gt;]).first().reset_index()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mk&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bg&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dgb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;uyi&apos;&lt;/span&gt;],\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]\n})\n\ndf.groupby([&lt;span class=&quot;hljs-string&quot;&gt;&apos;sp&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mt&apos;&lt;/span&gt;]).apply(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; grp: grp.nlargest(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;count&apos;&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I&apos;ve been using this functional style for many group operations:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;df = pd.DataFrame({\n   &lt;span class=&quot;hljs-string&quot;&gt;&apos;Sp&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;MM4&apos;&lt;/span&gt;],\n   &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;],\n   &lt;span class=&quot;hljs-string&quot;&gt;&apos;Val&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;mk&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;bg&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;dgb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;rd&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;cb&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;uyi&apos;&lt;/span&gt;],\n   &lt;span class=&quot;hljs-string&quot;&gt;&apos;Count&apos;&lt;/span&gt; : [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;]\n})\n\ndf.groupby(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mt&apos;&lt;/span&gt;)\\\n  .apply(&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt; group: group[group.Count == group.Count.&lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;()])\\\n  .reset_index(drop=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n\n    sp  mt  val  count\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1    a      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  MM4  S2  uyi      &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  MM2  S3   mk      &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S4   bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;.reset_index(drop=True)&lt;/code&gt; gets you back to the original index by dropping the group-index.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;df.loc[df.groupby(&apos;mt&apos;)[&apos;count&apos;].idxmax()]&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;if the &lt;code&gt;df&lt;/code&gt; index isn&apos;t unique you may need this step &lt;code&gt;df.reset_index(inplace=True)&lt;/code&gt; first.&lt;/p&gt;\n    "],"id":451,"title":"Get the row(s) which have the max value in groups using groupby","content":"\n                \n&lt;p&gt;How do I find all rows in a pandas DataFrame which have the max value for &lt;code&gt;count&lt;/code&gt; column, after grouping by &lt;code&gt;[&apos;Sp&apos;,&apos;Mt&apos;]&lt;/code&gt; columns?&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; the following DataFrame, which I group by &lt;code&gt;[&apos;Sp&apos;,&apos;Mt&apos;]&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   Sp   Mt Value   count\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1   a     **&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;**\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  MM1  S1   n       &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  MM1  S3   cb    **&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;**\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S3   mk    **&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;**\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4   bg    **&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;**\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  MM2  S4   dgd     &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  MM4  S2   rd      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  MM4  S2   cb      &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi   **&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;**\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Expected output: get the result rows whose count is max in each group, like:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;  MM1  S1   a      **&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;**\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  MM1  S3   cb     **&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;**\n&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  MM2  S3   mk     **&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;**\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4   bg     **&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;** \n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi    **&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;**\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; this DataFrame, which I group by &lt;code&gt;[&apos;Sp&apos;,&apos;Mt&apos;]&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;   Sp   Mt   Value  count\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  MM2  S4   bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;  MM2  S4   dgd    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;  MM4  S2   rd     &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;  MM4  S2   cb     &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;  MM4  S2   uyi    &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For the above example, I want to get &lt;strong&gt;all&lt;/strong&gt; the rows where &lt;code&gt;count&lt;/code&gt; equals max, in each group e.g:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;MM2  S4   bg     &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;\nMM4  S2   cb     &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\nMM4  S2   uyi    &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"get-the-row(s)-which-have-the-max-value-in-groups-using-groupby-1657388014787","postType":"QUESTION","createdAt":"2022-07-09T17:33:34.000Z","updatedAt":"2022-07-09T17:33:34.000Z","tags":[{"id":2326,"name":"max","slug":"max","createdAt":"2022-07-09T17:33:34.000Z","updatedAt":"2022-07-09T17:33:34.000Z","Questions_Tags":{"questionId":451,"tagId":2326}}],"relatedQuestions":[{"title":"Get the row(s) which have the max value in groups using groupby","slug":"get-the-row(s)-which-have-the-max-value-in-groups-using-groupby-1657388014787","tags":[{"name":"max","Questions_Tags":{"questionId":451,"tagId":2326}}]}]},"randomQuestions":[{"title":"How do I profile a Python script?","slug":"how-do-i-profile-a-python-script-1657388346692"},{"title":"Ways to circumvent the same-origin policy","slug":"ways-to-circumvent-the-same-origin-policy-1657384763316"},{"title":"How to use Regular Expressions (Regex) in Microsoft Excel both in-cell and loops","slug":"how-to-use-regular-expressions-(regex)-in-microsoft-excel-both-in-cell-and-loops-1657387487287"},{"title":"How do I correctly clone a JavaScript object?","slug":"how-do-i-correctly-clone-a-javascript-object-1657387325850"},{"title":"Sorting an array of objects by property values","slug":"sorting-an-array-of-objects-by-property-values-1657387447490"},{"title":"What is SQL injection? [duplicate]","slug":"what-is-sql-injection-duplicate-1657387944486"},{"title":"How can I prevent SQL injection in PHP?","slug":"how-can-i-prevent-sql-injection-in-php-1657384220094"},{"title":"What is a raw type and why shouldn't we use it?","slug":"what-is-a-raw-type-and-why-shouldn't-we-use-it-1657384481079"},{"title":"HTTP GET with request body","slug":"http-get-with-request-body-1657387379038"},{"title":"Int division: Why is the result of 1/3 == 0?","slug":"int-division:-why-is-the-result-of-13-0-1657387547814"},{"title":"What to do Regular expression pattern doesn't match anywhere in string?","slug":"what-to-do-regular-expression-pattern-doesn't-match-anywhere-in-string-1657388095896"},{"title":"Why should there be spaces around '[' and ']' in Bash?","slug":"why-should-there-be-spaces-around-''-and-''-in-bash-1657387984122"},{"title":"Change the maximum upload file size","slug":"change-the-maximum-upload-file-size-1657388495156"},{"title":"What is an efficient way to implement a singleton pattern in Java? [closed]","slug":"what-is-an-efficient-way-to-implement-a-singleton-pattern-in-java-closed-1657387970474"},{"title":"How do I select rows from a DataFrame based on column values?","slug":"how-do-i-select-rows-from-a-dataframe-based-on-column-values-1657384901065"},{"title":"Does Python have a ternary conditional operator?","slug":"does-python-have-a-ternary-conditional-operator-1657387555448"},{"title":"Why does this PDO statement silently fail?","slug":"why-does-this-pdo-statement-silently-fail-1657384892133"},{"title":"How do I write a correct micro-benchmark in Java?","slug":"how-do-i-write-a-correct-micro-benchmark-in-java-1657384488725"},{"title":"How to store objects in HTML5 localStorage","slug":"how-to-store-objects-in-html5-localstorage-1657387568907"},{"title":"Sort a Map<Key, Value> by values","slug":"sort-a-maplesskey-valuegreater-by-values-1657387443904"}]},"__N_SSG":true}