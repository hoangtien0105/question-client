{"pageProps":{"data":{"answer":["\n&lt;p&gt;In addition to violating &lt;a href=&quot;http://en.wikipedia.org/wiki/1NF&quot; rel=&quot;nofollow noreferrer&quot;&gt;First Normal Form&lt;/a&gt; because of the repeating group of values stored in a single column, comma-separated lists have a lot of other more practical problems:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Cant ensure that each value is the right data type: no way to prevent &lt;em&gt;1,2,3,banana,5&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;Cant use foreign key constraints to link values to a lookup table; no way to enforce referential integrity.&lt;/li&gt;\n&lt;li&gt;Cant enforce uniqueness: no way to prevent &lt;em&gt;1,2,3,3,3,5&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;Cant delete a value from the list without fetching the whole list.&lt;/li&gt;\n&lt;li&gt;Can&apos;t store a list longer than what fits in the string column.&lt;/li&gt;\n&lt;li&gt;Hard to search for all entities with a given value in the list; you have to use an inefficient table-scan. May have to resort to regular expressions, for example in MySQL:&lt;br&gt;\n&lt;code&gt;idlist REGEXP &apos;[[:&amp;lt;:]]2[[:&amp;gt;:]]&apos;&lt;/code&gt; or in MySQL 8.0: &lt;code&gt;idlist REGEXP &apos;\\\\b2\\\\b&apos;&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Hard to count elements in the list, or do other aggregate queries.&lt;/li&gt;\n&lt;li&gt;Hard to join the values to the lookup table they reference.&lt;/li&gt;\n&lt;li&gt;Hard to fetch the list in sorted order.&lt;/li&gt;\n&lt;li&gt;Hard to choose a separator that is guaranteed not to appear in the values&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;To solve these problems, you have to write tons of application code, reinventing functionality that the RDBMS &lt;em&gt;already provides much more efficiently&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;Comma-separated lists are wrong enough that I made this the first chapter in my book: &lt;a href=&quot;https://pragprog.com/titles/bksap1/&quot; rel=&quot;nofollow noreferrer&quot;&gt;SQL Antipatterns, Volume 1: Avoiding the Pitfalls of Database Programming&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;There are times when you need to employ denormalization, but as &lt;a href=&quot;https://stackoverflow.com/a/3653507/578288&quot;&gt;@OMG Ponies mentions&lt;/a&gt;, these are exception cases.  Any non-relational optimization benefits one type of query at the expense of other uses of the data, so be sure you know which of your queries need to be treated so specially that they deserve denormalization.&lt;/p&gt;\n    ","\n&lt;p&gt;&quot;One reason was laziness&quot;.&lt;/p&gt;\n\n&lt;p&gt;This rings alarm bells. The only reason you should do something like this is that you know how to do it &quot;the right way&quot; but you have come to the conclusion that there is a tangible reason not to do it that way.&lt;/p&gt;\n\n&lt;p&gt;Having said this: if the data you are choosing to store this way is data that you will never need to query by, then there may be a case for storing it in the way you have chosen.&lt;/p&gt;\n\n&lt;p&gt;(Some users would dispute the statement in my previous paragraph, saying that &quot;you can never know what requirements will be added in the future&quot;. These users are either misguided or stating a religious conviction. Sometimes it is advantageous to work to the requirements you have before you.)&lt;/p&gt;\n    ","\n&lt;p&gt;There are numerous questions on SO asking:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;how to get a count of specific values from the comma separated list&lt;/li&gt;\n&lt;li&gt;how to get records that have only the same 2/3/etc specific value from that comma separated list&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Another problem with the comma separated list is ensuring the values are consistent - storing text means the possibility of typos...&lt;/p&gt;\n\n&lt;p&gt;These are all symptoms of denormalized data, and highlight why you should always model for normalized data.  Denormalization &lt;em&gt;can&lt;/em&gt; be a query optimization, &lt;strong&gt;&lt;em&gt;to be applied when the need actually presents itself&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;In general anything can be defensible if it meets the requirements of your project.  This doesn&apos;t mean that people will agree with or want to defend your decision...&lt;/p&gt;\n\n&lt;p&gt;In general, storing data in this way is suboptimal (e.g. harder to do efficient queries) and may cause maintenance issues if you modify the items in your form.  Perhaps you could have found a middle ground and used an integer representing a set of bit flags instead?&lt;/p&gt;\n    ","\n&lt;p&gt;Yes, I would say that it really is that bad.  It&apos;s a defensible choice, but that doesn&apos;t make it correct or good.&lt;/p&gt;\n\n&lt;p&gt;It breaks first normal form.&lt;/p&gt;\n\n&lt;p&gt;A second criticism is that putting raw input results directly into a database, without any validation or binding at all, leaves you open to SQL injection attacks.&lt;/p&gt;\n\n&lt;p&gt;What you&apos;re calling laziness and lack of SQL knowledge is the stuff that neophytes are made of.  I&apos;d recommend taking the time to do it properly and view it as an opportunity to learn.&lt;/p&gt;\n\n&lt;p&gt;Or leave it as it is and learn the painful lesson of a SQL injection attack.&lt;/p&gt;\n    ","\n&lt;p&gt;I needed a multi-value column, it could be implemented as an xml field&lt;/p&gt;\n\n&lt;p&gt;It could be converted to a comma delimited as necessary&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6097849/querying-an-xml-list-in-sql-server-using-xquery&quot;&gt;querying an XML list in sql server using Xquery&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;By being an xml field, some of the concerns can be addressed.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Can&apos;t ensure that each value is the right data type: no way to prevent 1,2,3,banana,5&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; values in a tag can be forced to be the correct type&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Can&apos;t use foreign key constraints to link values to a lookup table; no way to enforce referential integrity.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; still an issue&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Can&apos;t enforce uniqueness: no way to prevent 1,2,3,3,3,5&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; still an issue&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Can&apos;t delete a value from the list without fetching the whole list.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; single items can be removed&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to search for all entities with a given value in the list; you have to use an inefficient table-scan.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; xml field can be indexed&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to count elements in the list, or do other aggregate queries.**&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; not particularly hard &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to join the values to the lookup table they reference.**&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; not particularly hard &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Hard to fetch the list in sorted order.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; not particularly hard &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Storing integers as strings takes about twice as much space as storing binary integers.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; storage is even worse than a csv &lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;With CSV:&lt;/strong&gt; Plus a lot of comma characters.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;With XML:&lt;/strong&gt; tags are used instead of commas&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;In short, using XML gets around some of the issues with delimited list AND can be converted to a delimited list as needed&lt;/p&gt;\n    ","\n&lt;p&gt;Yes, it &lt;em&gt;is&lt;/em&gt; that bad.  My view is that if you don&apos;t like using relational databases then look for an alternative that suits you better, there are lots of interesting &quot;NOSQL&quot; projects out there with some really advanced features.&lt;/p&gt;\n    ","\n&lt;p&gt;Well I&apos;ve been using a key/value pair tab separated list in a NTEXT column in SQL Server for more than 4 years now and it works. You do lose the flexibility of making queries but on the other hand, if you have a library that persists/derpersists the key value pair then it&apos;s not a that bad idea.&lt;/p&gt;\n    ","\n&lt;p&gt;I would probably take the middle ground: make each field in the CSV into a separate column in the database, but not worry much about normalization (at least for now). At some point, normalization &lt;em&gt;might&lt;/em&gt; become interesting, but with all the data shoved into a single column you&apos;re gaining virtually no benefit from using a database at all. You need to separate the data into logical fields/columns/whatever you want to call them before you can manipulate it meaningfully at all.&lt;/p&gt;\n    ","\n&lt;p&gt;If you have a fixed number of boolean fields, you could use a &lt;code&gt;INT(1) NOT NULL&lt;/code&gt; (or &lt;code&gt;BIT NOT NULL&lt;/code&gt; if it exists) or &lt;code&gt;CHAR (0)&lt;/code&gt; (nullable) for each. You could also use a &lt;code&gt;SET&lt;/code&gt; (I forget the exact syntax).&lt;/p&gt;\n    "],"id":68,"title":"Is storing a delimited list in a database column really that bad?","content":"\n                \n&lt;p&gt;Imagine a web form with a set of check boxes (any or all of them can be selected). I chose to save them in a comma separated list of values stored in one column of the database table.&lt;/p&gt;\n\n&lt;p&gt;Now, I know that the correct solution would be to create a second table and properly normalize the database. It was quicker to implement the easy solution, and I wanted to have a proof-of-concept of that application quickly and without having to spend too much time on it.&lt;/p&gt;\n\n&lt;p&gt;I thought the saved time and simpler code was worth it in my situation, is this a defensible design choice, or should I have normalized it from the start?&lt;/p&gt;\n\n&lt;p&gt;Some more context, this is a small internal application that essentially replaces an Excel file that was stored on a shared folder. I&apos;m also asking because I&apos;m thinking about cleaning up the program and make it more maintainable. There are some things in there I&apos;m not entirely happy with, one of them is the topic of this question.&lt;/p&gt;\n    ","slug":"is-storing-a-delimited-list-in-a-database-column-really-that-bad-1657384474773","postType":"QUESTION","createdAt":"2022-07-09T16:34:34.000Z","updatedAt":"2022-07-09T16:34:34.000Z","tags":[{"id":249,"name":"database","slug":"database","createdAt":"2022-07-09T16:34:34.000Z","updatedAt":"2022-07-09T16:34:34.000Z","Questions_Tags":{"questionId":68,"tagId":249}},{"id":250,"name":"database-design","slug":"database-design","createdAt":"2022-07-09T16:34:34.000Z","updatedAt":"2022-07-09T16:34:34.000Z","Questions_Tags":{"questionId":68,"tagId":250}},{"id":251,"name":"database-normalization","slug":"database-normalization","createdAt":"2022-07-09T16:34:34.000Z","updatedAt":"2022-07-09T16:34:34.000Z","Questions_Tags":{"questionId":68,"tagId":251}}],"relatedQuestions":[{"title":"Is storing a delimited list in a database column really that bad?","slug":"is-storing-a-delimited-list-in-a-database-column-really-that-bad-1657384474773","tags":[{"name":"database","Questions_Tags":{"questionId":68,"tagId":249}},{"name":"database-design","Questions_Tags":{"questionId":68,"tagId":250}},{"name":"database-normalization","Questions_Tags":{"questionId":68,"tagId":251}}]}]},"randomQuestions":[{"title":"Captured variable in a loop in C#","slug":"captured-variable-in-a-loop-in-c-1657387696779"},{"title":"How to add JTable in JPanel with null layout?","slug":"how-to-add-jtable-in-jpanel-with-null-layout-1657384590912"},{"title":"Reshaping data.frame from wide to long format","slug":"reshaping-data.frame-from-wide-to-long-format-1657384678522"},{"title":"How to create RecyclerView with multiple view types","slug":"how-to-create-recyclerview-with-multiple-view-types-1657388121512"},{"title":"When to use single quotes, double quotes, and backticks in MySQL","slug":"when-to-use-single-quotes-double-quotes-and-backticks-in-mysql-1657384337981"},{"title":"How do I give text or an image a transparent background using CSS?","slug":"how-do-i-give-text-or-an-image-a-transparent-background-using-css-1657388188508"},{"title":"jQuery Ajax POST example with PHP","slug":"jquery-ajax-post-example-with-php-1657387402634"},{"title":"Why is \"using namespace std;\" considered bad practice?","slug":"why-is-\"using-namespace-std\"-considered-bad-practice-1657384296377"},{"title":"Why Use Integer Instead of Long?","slug":"why-use-integer-instead-of-long-1657388012352"},{"title":"When should static_cast, dynamic_cast, const_cast, and reinterpret_cast be used?","slug":"when-should-static_cast-dynamic_cast-const_cast-and-reinterpret_cast-be-used-1657388406205"},{"title":"How to iterate over rows in a DataFrame in Pandas","slug":"how-to-iterate-over-rows-in-a-dataframe-in-pandas-1657387358115"},{"title":"How to return value from an asynchronous callback function? [duplicate]","slug":"how-to-return-value-from-an-asynchronous-callback-function-duplicate-1657387545611"},{"title":"Query based on multiple where clauses in Firebase","slug":"query-based-on-multiple-where-clauses-in-firebase-1657387494547"},{"title":"UTF-8 all the way through","slug":"utf-8-all-the-way-through-1657384323434"},{"title":"What does a \"Cannot find symbol\" or \"Cannot resolve symbol\" error mean?","slug":"what-does-a-\"cannot-find-symbol\"-or-\"cannot-resolve-symbol\"-error-mean-1657384492160"},{"title":"Use dynamic variable names in JavaScript","slug":"use-dynamic-variable-names-in-javascript-1657388468075"},{"title":"How do you remove duplicates from a list whilst preserving order?","slug":"how-do-you-remove-duplicates-from-a-list-whilst-preserving-order-1657387877978"},{"title":"How do I use reflection to call a generic method?","slug":"how-do-i-use-reflection-to-call-a-generic-method-1657387256751"},{"title":"Get the values from the \"GET\" parameters (JavaScript) [duplicate]","slug":"get-the-values-from-the-\"get\"-parameters-(javascript)-duplicate-1657387656693"},{"title":"How to find the 'sizeof' (a pointer pointing to an array)?","slug":"how-to-find-the-'sizeof'-(a-pointer-pointing-to-an-array)-1657387354284"}]},"__N_SSG":true}