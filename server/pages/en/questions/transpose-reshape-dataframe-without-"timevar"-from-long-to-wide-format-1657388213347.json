{"pageProps":{"data":{"answer":["\n&lt;p&gt;With the &lt;a href=&quot;/questions/tagged/data.table&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;data.table&apos;&quot; rel=&quot;tag&quot;&gt;data.table&lt;/a&gt; package, this could easily be solved with the new &lt;code&gt;rowid&lt;/code&gt; function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;data.table&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ndcast&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;setDT&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;d1&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; rowid&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; prefix &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;medication&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;MedName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which gives:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name    medication1     medication2       medication3\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; Name1  atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg    aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg  sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; Name2  atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg  enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg              &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Another method (commonly used before version 1.9.7):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;dcast&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;setDT&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;d1&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; rn &lt;span class=&quot;hljs-operator&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt;.N&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; by &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Name&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; paste0&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;medication&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;rn&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;MedName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;giving the same result.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;A similar approach, but now using the &lt;a href=&quot;/questions/tagged/dplyr&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;dplyr&apos;&quot; rel=&quot;tag&quot;&gt;dplyr&lt;/a&gt; and &lt;a href=&quot;/questions/tagged/tidyr&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;tidyr&apos;&quot; rel=&quot;tag&quot;&gt;tidyr&lt;/a&gt; packages:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nlibrary&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nd1 &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  group_by&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  mutate&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;rn &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; paste0&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;medication&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;row_number&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  spread&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;rn&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; MedName&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which gives:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;Source&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt; local data frame &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\nGroups&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt; Name &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n\n    Name   medication1    medication2      medication3\n  &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;fctr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;chr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;          &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;chr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;            &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;chr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  Name1 atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg   aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  Name2 atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg               &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;Assuming your data is in the object &lt;code&gt;dataset&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;plyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;## Add a medication index&lt;/span&gt;\ndata_with_index &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; ddply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; .&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; mutate&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n                         index &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; paste0&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;medication&apos;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;    \ndcast&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;data_with_index&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; index&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;MedName&apos;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;##    Name   medication1    medication2      medication3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;## 1 Name1 atenolol 25mg   aspirin 81mg sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;## 2 Name2 atenolol 50mg enalapril 20mg             &amp;lt;NA&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could always generate a unique &lt;code&gt;timevar&lt;/code&gt; before using &lt;code&gt;reshape&lt;/code&gt;. Here I use &lt;code&gt;ave&lt;/code&gt; to apply the function &lt;code&gt;seq_along&lt;/code&gt; &apos;along&apos; each &quot;Name&quot;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;test &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;\nName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\nMedName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 25mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;aspirin 81mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;sildenafil 100mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n          &lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 50mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;enalapril 20mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# generate the &apos;timevar&apos;&lt;/span&gt;\ntest&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;uniqid &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; with&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; ave&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;as.character&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; Name&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; FUN &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;seq_along&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# reshape!&lt;/span&gt;\nreshape&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; idvar &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; timevar &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;uniqid&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; direction &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;wide&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name     MedName.1      MedName.2        MedName.3\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; name1 atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg   aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; name2 atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg             &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This seems to actually be a fairly common problem, so I have included a function called &lt;code&gt;getanID&lt;/code&gt; in my &quot;splitstackshape&quot; package.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s what it does:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;splitstackshape&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ngetanID&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#     Name          MedName .id&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1: name1    atenolol 25mg   1&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2: name1     aspirin 81mg   2&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 3: name1 sildenafil 100mg   3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 4: name2    atenolol 50mg   1&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 5: name2   enalapril 20mg   2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Since &quot;data.table&quot; is loaded along with &quot;splitstackshape&quot;, you have access to &lt;code&gt;dcast.data.table&lt;/code&gt;, so you can proceed as with @mnel&apos;s example.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;dcast.data.table&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;getanID&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; .id&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;MedName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#     Name             1              2                3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1: name1 atenolol 25mg   aspirin 81mg sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2: name2 atenolol 50mg enalapril 20mg               NA&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;The function essentially implements a &lt;code&gt;sequence(.N)&lt;/code&gt; by the groups identified to create the &quot;time&quot; column.&lt;/p&gt;\n    ","\n&lt;p&gt;@thelatemail&apos;s solution is similar to this one.  When I generate the time variable, I use &lt;code&gt;rle&lt;/code&gt; in case I&apos;m not working interactively and the &lt;code&gt;Name&lt;/code&gt; variable needs to be dynamic.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# start with your example data&lt;/span&gt;\nx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; \n    data.frame&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;\n        Name&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        MedName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 25mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;aspirin 81mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;sildenafil 100mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 50mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;enalapril 20mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# pick the id variable&lt;/span&gt;\nid &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Name&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# sort the data.frame by that variable&lt;/span&gt;\nx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; x&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt; order&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; x&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; id &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# construct a `time` variable on the fly&lt;/span&gt;\nx&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;time &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; unlist&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; lapply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; rle&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;as.character&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; x&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; id &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;lengths &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;seq_len&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# `reshape` uses that new `time` column by default&lt;/span&gt;\ny &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; reshape&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; x &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; idvar &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; id &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; direction &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;wide&apos;&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# done&lt;/span&gt;\ny\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One clean solution involves the very useful &lt;code&gt;pivot_wider&lt;/code&gt; function from the &lt;code&gt;tidyr&lt;/code&gt; package version &lt;code&gt;1.1.0&lt;/code&gt;. With this you can also directly specify the column names by using the argument &lt;code&gt;names_glue&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nlibrary&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\ndataframe &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  group_by&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  mutate&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;row_n &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  pivot_wider&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;id_cols &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Name&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; names_from &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; row_n&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; values_from &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; MedName&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; names_glue &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;medication{row_n}&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Output&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# A tibble: 2 x 4&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# Groups:   Name [2]&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   Name  medication1   medication2    medication3     &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;           &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1 Name1 atenolol 25mg aspirin 81mg   sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2 Name2 atenolol 50mg enalapril 20mg NA  &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s a shorter way, taking advantage of the way &lt;code&gt;unlist&lt;/code&gt; deals with names:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ndf1 &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; do&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;as_tibble&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;t&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;unlist&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;.&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# # A tibble: 2 x 4&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# # Groups:   Name [2]&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#      Name      MedName1       MedName2         MedName3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#     &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   1 name1 atenolol 25mg   aspirin 81mg sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   2 name2 atenolol 50mg enalapril 20mg             &amp;lt;NA&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A &lt;code&gt;tidyr&lt;/code&gt; solution with &lt;code&gt;chop()&lt;/code&gt; and &lt;code&gt;unnest_wider()&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\ndf &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  chop&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  unnest_wider&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;MedName&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; names_sep &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# # A tibble: 2 x 4&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   Name  MedName1      MedName2       MedName3        &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;           &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1 Name1 atenolol 25mg aspirin 81mg   sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2 Name2 atenolol 50mg enalapril 20mg NA &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The argument &lt;code&gt;names_sep = &quot;&quot;&lt;/code&gt; is necessary; otherwise, the new column names will be &lt;code&gt;..1&lt;/code&gt;, &lt;code&gt;..2&lt;/code&gt;, and &lt;code&gt;..3&lt;/code&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;df &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; structure&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name2&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; MedName &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 25mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;aspirin 81mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;sildenafil 100mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 50mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;enalapril 20mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;data.frame&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; row.names &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5L&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":504,"title":"Transpose / reshape dataframe without \"timevar\" from long to wide format","content":"\n                \n&lt;p&gt;I have a data frame that follows the below long Pattern:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name          MedName\n  Name1    atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg\n  Name1     aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg\n  Name1 sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n  Name2    atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg\n  Name2   enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And would like to get below (I do not care if I can get the columns to be named this way, just want the data in this format): &lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name   medication1    medication2      medication3\n  Name1 atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg   aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n  Name2 atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg             &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Through this very site I have become familiarish with the reshape/reshape2 package, and have went through several attempts to try to get this to work but have thus far failed.&lt;/p&gt;\n\n&lt;p&gt;When I try &lt;code&gt;dcast(dataframe, Name ~ MedName, value.var=&apos;MedName&apos;)&lt;/code&gt; I just get a bunch of columns that are flags of the medication names (values that get transposed are 1 or 0) example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt; Name  atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg  aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg\nName1              &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nName2              &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I also tried a &lt;code&gt;dcast(dataset, Name ~ variable)&lt;/code&gt; after I melted the dataset, however this just spits out the following (just counts how many meds each person has):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt; Name  MedName\nName1        &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\nname2        &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Finally, I tried to melt the data and then reshape using &lt;code&gt;idvar=&quot;Name&quot;&lt;/code&gt; &lt;code&gt;timevar=&quot;variable&quot;&lt;/code&gt; (of which all just are Mednames), however this does not seem built for my issue since if there are multiple matches to the idvar, the reshape just takes the first MedName and ignores the rest.&lt;/p&gt;\n\n&lt;p&gt;Does anyone know how to do this using reshape or another R function? I realize that there probably is a way to do this in a more messy manner with some for loops and conditionals to basically split and re-paste the data, but I was hoping there was a more simple solution. Thank you so much!&lt;/p&gt;\n    ","slug":"transpose-reshape-dataframe-without-\"timevar\"-from-long-to-wide-format-1657388213347","postType":"QUESTION","createdAt":"2022-07-09T17:36:53.000Z","updatedAt":"2022-07-09T17:36:53.000Z","tags":[{"id":2509,"name":"transpose","slug":"transpose","createdAt":"2022-07-09T17:36:53.000Z","updatedAt":"2022-07-09T17:36:53.000Z","Questions_Tags":{"questionId":504,"tagId":2509}}],"relatedQuestions":[{"title":"Transpose / reshape dataframe without \"timevar\" from long to wide format","slug":"transpose-reshape-dataframe-without-\"timevar\"-from-long-to-wide-format-1657388213347","tags":[{"name":"transpose","Questions_Tags":{"questionId":504,"tagId":2509}}]}]},"randomQuestions":[{"title":"How to remove all duplicates from an array of objects?","slug":"how-to-remove-all-duplicates-from-an-array-of-objects-1657388256190"},{"title":"Does JavaScript guarantee object property order?","slug":"does-javascript-guarantee-object-property-order-1657384822587"},{"title":"What are copy elision and return value optimization?","slug":"what-are-copy-elision-and-return-value-optimization-1657385455976"},{"title":"What does if __name__ == \"__main__\": do?","slug":"what-does-if-__name__-\"__main__\":-do-1657384825815"},{"title":"How to sum a variable by group","slug":"how-to-sum-a-variable-by-group-1657384838148"},{"title":"Sending Email in Android using JavaMail API without using the default/built-in app","slug":"sending-email-in-android-using-javamail-api-without-using-the-defaultbuilt-in-app-1657387883400"},{"title":"The ViewData item that has the key 'XXX' is of type 'System.Int32' but must be of type 'IEnumerable<SelectListItem>'","slug":"the-viewdata-item-that-has-the-key-'xxx'-is-of-type-'system.int32'-but-must-be-of-type-'ienumerablelessselectlistitemgreater'-1657388454191"},{"title":"Correctly allocating multi-dimensional arrays","slug":"correctly-allocating-multi-dimensional-arrays-1657387733756"},{"title":"The Use of Multiple JFrames: Good or Bad Practice? [closed]","slug":"the-use-of-multiple-jframes:-good-or-bad-practice-closed-1657384478184"},{"title":"How can I remove a specific item from an array?","slug":"how-can-i-remove-a-specific-item-from-an-array-1657387552077"},{"title":"How to generate a self-signed SSL certificate using OpenSSL? [closed]","slug":"how-to-generate-a-self-signed-ssl-certificate-using-openssl-closed-1657388298626"},{"title":"How to center an element horizontally and vertically","slug":"how-to-center-an-element-horizontally-and-vertically-1657388132330"},{"title":"Using Auto Layout in UITableView for dynamic cell layouts & variable row heights","slug":"using-auto-layout-in-uitableview-for-dynamic-cell-layouts-and-variable-row-heights-1657387722263"},{"title":"What does it mean to \"program to an interface\"?","slug":"what-does-it-mean-to-\"program-to-an-interface\"-1657384671665"},{"title":"What is a plain English explanation of \"Big O\" notation?","slug":"what-is-a-plain-english-explanation-of-\"big-o\"-notation-1657387641953"},{"title":"Persist variables between page loads","slug":"persist-variables-between-page-loads-1657388558452"},{"title":"Captured variable in a loop in C#","slug":"captured-variable-in-a-loop-in-c-1657387696779"},{"title":"How to use SharedPreferences in Android to store, fetch and edit values [closed]","slug":"how-to-use-sharedpreferences-in-android-to-store-fetch-and-edit-values-closed-1657387683057"},{"title":"Split comma-separated strings in a column into separate rows","slug":"split-comma-separated-strings-in-a-column-into-separate-rows-1657387785823"},{"title":"What is DOM Event delegation?","slug":"what-is-dom-event-delegation-1657387625599"}]},"__N_SSG":true}