{"pageProps":{"data":{"answer":["\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is called string concatenation. Your example lacks a space though, so for that specifically, you would need:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;There are several ways to concatenate two strings together.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Use the concatenation operator &lt;code&gt;.&lt;/code&gt; (and &lt;code&gt;.=&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;In PHP &lt;code&gt;.&lt;/code&gt; is the concatenation operator&amp;nbsp;which returns the concatenation of its right and left arguments&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you want to append a string to another string you would use the &lt;code&gt;.=&lt;/code&gt; operator:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is &quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; .= &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Complex (curly) syntax / double quotes strings&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;In PHP variables contained in double quoted strings are interpolated (i.e. their values are &quot;swapped out&quot; for the variable). This means you can place the variables in place of the strings and just put a space in between them. The curly braces make it clear where the variables are.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;{$data1}&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;hljs-subst&quot;&gt;{$data2}&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note: this will also work without the braces in your case:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;$data1&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;$data2&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can also concatenate array values inside a string :&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$arr1&lt;/span&gt; = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;This is a&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable&quot;&gt;$arr2&lt;/span&gt; = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;val&apos;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;test&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-variable&quot;&gt;$variable&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;{$arr1[&apos;val&apos;]}&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;{$arr2[&apos;val&apos;]}&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Use &lt;code&gt;sprintf()&lt;/code&gt; or &lt;code&gt;printf()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://php.net/sprintf&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;sprintf()&lt;/code&gt;&lt;/a&gt; allows us to format strings using powerful formatting options. It is overkill for such simple concatenation but it handy when you have a complex string and/or want to do some formatting of the data as well.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&amp;nbsp;&lt;/span&gt;= &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sprintf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%s %s&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;code&gt;printf()&lt;/code&gt; does the same thing but will immediately display the output.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%s %s&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// same as&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&amp;nbsp;&lt;/span&gt;= &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sprintf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%s %s&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;http://php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot; rel=&quot;noreferrer&quot;&gt;Heredocs&lt;/a&gt; can also be used to combine variables into a string.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;&amp;lt;&amp;lt;EOT\n&lt;span class=&quot;hljs-subst&quot;&gt;$data1&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;$data2&lt;/span&gt;\nEOT&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Use a &lt;code&gt;,&lt;/code&gt; with &lt;code&gt;echo()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;This only works when echoing out content and not assigning to a variable. But you can use a comma to separate a list of expressions for PHP to echo out and use a string with one blank space as one of those expressions:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another possibility is the &lt;code&gt;.=&lt;/code&gt; operator. I&apos;m using it for huge SQL queries.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is &quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt; .= &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Gives: the color is red&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Concatenate them with the &lt;code&gt;.&lt;/code&gt; operator:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or use string interpolation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;$data1&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;$data2&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;implode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is more generic.&lt;/p&gt;\n    ","\n&lt;p&gt;Another form available is this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;{$data1}&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot;&gt;{$data2}&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do this using PHP:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$txt1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$txt2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot; red!&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$txt1&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$txt2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This will combine two strings and the output will be: &quot;the color is red!&quot;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can try the following line of code&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A period is used to concatenate strings. Simple example to turn two string variables into a single variable:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$full&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$part1&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$part2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In your example, you&apos;d want to do:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You&apos;ll notice I added a string of one space between the two variables. This is because your original &lt;code&gt;$data1&lt;/code&gt; did not end with a space. If you had combined them without it, your &lt;code&gt;$result&lt;/code&gt; variable would end up looking like &lt;code&gt;the color isred&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;This should work for you:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;` \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Reference: &lt;a href=&quot;http://php.net/manual/en/language.operators.string.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;PHP String Variables&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$s&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;my name is &quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$s&lt;/span&gt; .= &lt;span class=&quot;hljs-string&quot;&gt;&quot;keyur&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$s&lt;/span&gt;; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;result: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;my name is keyur\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I am not exactly clear with what your requirements are, but basically you could separately define the two variables and thereafter combine them together.&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;The colour is &quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt;=&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;By doing so you can even declare $data2 as a global level, so you could change its value during execution. For instance, it could obtain the answer &quot;red&quot; from a checkbox.&lt;/p&gt;\n    ","\n&lt;p&gt;Combine two strings together in PHP:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I believe the most performant way is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to implement localisation, you may do something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$translationText&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is %s&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$translationRed&lt;/span&gt;  = &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;sprintf&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$translationText&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$translationRed&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&apos;s a bit slower, but it does not assume grammar rules.&lt;/p&gt;\n    ","\n&lt;p&gt;The easiest way that already mentioned here:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In some cases you may need to use functions like &lt;a href=&quot;https://www.w3schools.com/php/func_string_join.asp&quot; rel=&quot;nofollow noreferrer&quot;&gt;join()&lt;/a&gt; or &lt;a href=&quot;https://www.w3schools.com/php/func_string_implode.asp&quot; rel=&quot;nofollow noreferrer&quot;&gt;implode()&lt;/a&gt;. Both the functions does the same thing that is it convert array items into string.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, [&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;implode&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, [&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Concatenate the string (space between each string)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Code Snippet:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$txt1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sachin&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable&quot;&gt;$txt2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Tendulkar&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$txt1&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$txt2&lt;/span&gt; ;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Output: SachinTendulkar&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Concatenate the string where space exists&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Code Snippet:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt; &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n     &lt;span class=&quot;hljs-variable&quot;&gt;$txt1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sachin&quot;&lt;/span&gt;;\n     &lt;span class=&quot;hljs-variable&quot;&gt;$txt2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Tendulkar&quot;&lt;/span&gt;;\n\n     &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-variable&quot;&gt;$txt1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$txt2&lt;/span&gt;;\n     &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot;\\n&quot;&lt;/span&gt;;\n &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Output: Sachin Tendulkar&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Concatenate the string using printf function.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Code Snippet:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt; &lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n     &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Sachin&quot;&lt;/span&gt;;\n     &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Tendulkar&quot;&lt;/span&gt;;\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%s%s\\n&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;);\n     &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%s %s\\n&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;);\n &lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Output:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt; SachinTendulkar\n Sachin Tendulkar\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Try this. We can append a string in PHP with the dot (.) symbol&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// The color isred&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; . &lt;span class=&quot;hljs-string&quot;&gt;&quot; &quot;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// The color is red (we have appended space)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":525,"title":"How can I combine two strings together in PHP?","content":"\n                \n&lt;p&gt;I don&apos;t actually know how to describe what I wanted, but I&apos;ll show you:&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$data1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$data2&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;red&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;What should I do (or process) so $result is the combination of &lt;code&gt;$data1&lt;/code&gt; and &lt;code&gt;$data2&lt;/code&gt;?&lt;/p&gt;\n&lt;p&gt;Desired result:&lt;/p&gt;\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$result&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;the color is red&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"how-can-i-combine-two-strings-together-in-php-1657388279401","postType":"QUESTION","createdAt":"2022-07-09T17:37:59.000Z","updatedAt":"2022-07-09T17:37:59.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Copy array by value","slug":"copy-array-by-value-1657387649531"},{"title":"How do I split a list into equally-sized chunks?","slug":"how-do-i-split-a-list-into-equally-sized-chunks-1657384580399"},{"title":"Why does my JavaScript code receive a \"No 'Access-Control-Allow-Origin' header is present on the requested resource\" error, while Postman does not?","slug":"why-does-my-javascript-code-receive-a-\"no-'access-control-allow-origin'-header-is-present-on-the-requested-resource\"-error-while-postman-does-not-1657384636363"},{"title":"How can I do a FULL OUTER JOIN in MySQL?","slug":"how-can-i-do-a-full-outer-join-in-mysql-1657388175444"},{"title":"Switch between two frames in tkinter?","slug":"switch-between-two-frames-in-tkinter-1657388528781"},{"title":"How to filter Pandas dataframe using 'in' and 'not in' like in SQL","slug":"how-to-filter-pandas-dataframe-using-'in'-and-'not-in'-like-in-sql-1657387371355"},{"title":"Daylight saving time and time zone best practices [closed]","slug":"daylight-saving-time-and-time-zone-best-practices-closed-1657387973687"},{"title":"Why can't an element with a z-index value cover its child?","slug":"why-can't-an-element-with-a-z-index-value-cover-its-child-1657387707187"},{"title":"CSS margin terror; Margin adds space outside parent element [duplicate]","slug":"css-margin-terror-margin-adds-space-outside-parent-element-duplicate-1657388142199"},{"title":"PHP - Failed to open stream : No such file or directory","slug":"php-failed-to-open-stream-:-no-such-file-or-directory-1657387872896"},{"title":"How does Access-Control-Allow-Origin header work?","slug":"how-does-access-control-allow-origin-header-work-1657384881723"},{"title":"What is __init__.py for?","slug":"what-is-__init__.py-for-1657388415243"},{"title":"getContactsFromFirebase() method return an empty list","slug":"getcontactsfromfirebase()-method-return-an-empty-list-1657388433928"},{"title":"How to evaluate a math expression given in string form?","slug":"how-to-evaluate-a-math-expression-given-in-string-form-1657387797852"},{"title":"Removing duplicates in lists","slug":"removing-duplicates-in-lists-1657388207448"},{"title":"What is move semantics?","slug":"what-is-move-semantics-1657387702625"},{"title":"Why is processing a sorted array faster than processing an unsorted array?","slug":"why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array-1657385497444"},{"title":"Useless use of cat?","slug":"useless-use-of-cat-1657388390794"},{"title":"What's the difference between INNER JOIN, LEFT JOIN, RIGHT JOIN and FULL JOIN? [duplicate]","slug":"what's-the-difference-between-inner-join-left-join-right-join-and-full-join-duplicate-1657388082887"},{"title":"Int division: Why is the result of 1/3 == 0?","slug":"int-division:-why-is-the-result-of-13-0-1657387547814"}]},"__N_SSG":true}