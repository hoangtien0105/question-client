{"pageProps":{"data":{"answer":["\n&lt;blockquote&gt;\n&lt;p&gt;Will result always be the floor of the division? What is the defined behavior?&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Not quite. It rounds toward 0, rather than flooring.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;6.5.5 Multiplicative operators&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;6&lt;/strong&gt; When integers are divided, the result of the / operator is the algebraic quotient with any\nfractional part discarded.&lt;sup&gt;88)&lt;/sup&gt; If the quotient a/b is representable, the expression\n(a/b)*b + a%b shall equal a.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;and the corresponding footnote:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;ol start=&quot;88&quot;&gt;\n&lt;li&gt;This is often called truncation toward zero.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Of course two points to note are:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt; The usual arithmetic conversions are performed on the operands.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;and:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;5&lt;/strong&gt; The result of the / operator is the\nquotient from the division of the\nfirst operand by the second; the\nresult of the % operator is the\nremainder. &lt;em&gt;In both operations, if the\nvalue of the second operand is zero,\nthe behavior is undefined.&lt;/em&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;[Note: Emphasis mine]&lt;/p&gt;\n    ","\n&lt;p&gt;Dirkgently gives &lt;a href=&quot;https://stackoverflow.com/questions/3602827/what-is-the-behavior-of-integer-division-in-c/3602857#3602857&quot;&gt;an excellent description&lt;/a&gt; of integer division in C99, but you should also know that in C89 integer division with a negative operand has an implementation-defined direction. &lt;/p&gt;\n\n&lt;p&gt;From the ANSI C draft (3.3.5):&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;If either operand is negative, whether the result of the / operator is the largest integer less than the algebraic quotient or the smallest integer greater than the algebraic quotient is implementation-defined, as is the sign of the result of the % operator.  If the quotient a/b is representable, the expression (a/b)*b + a%b shall equal a.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So watch out with negative numbers when you are stuck with a C89 compiler.&lt;/p&gt;\n\n&lt;p&gt;It&apos;s a fun fact that C99 chose truncation towards zero because that was how FORTRAN did it. See &lt;a href=&quot;http://groups.google.com/group/comp.std.c/msg/3888950ced7530ff&quot; rel=&quot;noreferrer&quot;&gt;this message&lt;/a&gt; on comp.std.c.&lt;/p&gt;\n    ","\n&lt;p&gt;Yes, the result is always truncated towards zero. It will round towards the smallest absolute value.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;-5&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;-2&lt;/span&gt;\n &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; / &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For unsigned and non-negative signed values, this is the same as floor (rounding towards -Infinity).&lt;/p&gt;\n    ","\n&lt;p&gt;Where the result is negative, C truncates towards 0 rather than flooring - I learnt this reading about why Python integer division always floors here: &lt;a href=&quot;http://python-history.blogspot.com/2010/08/why-pythons-integer-division-floors.html&quot; rel=&quot;noreferrer&quot;&gt;Why Python&apos;s Integer Division Floors&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;Will result always be the floor of the division?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No. The result varies, but variation happens only for negative values.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;What is the defined behavior?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;To make it clear floor rounds towards negative infinity,while integer division rounds towards zero (truncates)&lt;/p&gt;\n\n&lt;p&gt;For positive values they are the same&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; integerDivisionResultPositive= &lt;span class=&quot;hljs-number&quot;&gt;125&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;&lt;span class=&quot;hljs-comment&quot;&gt;//= 1&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; flooringResultPositive= &lt;span class=&quot;hljs-built_in&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;125.0&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;100.0&lt;/span&gt;);&lt;span class=&quot;hljs-comment&quot;&gt;//=1.0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For negative value this is different&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; integerDivisionResultNegative= &lt;span class=&quot;hljs-number&quot;&gt;-125&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;&lt;span class=&quot;hljs-comment&quot;&gt;//=-1&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;double&lt;/span&gt; flooringResultNegative= &lt;span class=&quot;hljs-built_in&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;-125.0&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;100.0&lt;/span&gt;);&lt;span class=&quot;hljs-comment&quot;&gt;//=-2.0&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know people have answered your question but in layman terms:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;5 / 2 = 2&lt;/code&gt; //since both 5 and 2 are integers and integers division always truncates decimals&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;5.0 / 2 or 5 / 2.0 or 5.0 /2.0 = 2.5&lt;/code&gt; //here either 5 or 2 or both has decimal hence the quotient you will get will be in decimal.&lt;/p&gt;\n    "],"id":507,"title":"What is the behavior of integer division?","content":"\n                \n&lt;p&gt;For example,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; result;\n\nresult = &lt;span class=&quot;hljs-number&quot;&gt;125&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;/p&gt;\n\n&lt;pre class=&quot;lang-c s-code-block&quot;&gt;&lt;code class=&quot;hljs language-c&quot;&gt;result = &lt;span class=&quot;hljs-number&quot;&gt;43&lt;/span&gt;/&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Will result always be the floor of the division? What is the defined behavior?&lt;/p&gt;\n    ","slug":"what-is-the-behavior-of-integer-division-1657388222571","postType":"QUESTION","createdAt":"2022-07-09T17:37:02.000Z","updatedAt":"2022-07-09T17:37:02.000Z","tags":[{"id":2523,"name":"c99","slug":"c99","createdAt":"2022-07-09T17:37:02.000Z","updatedAt":"2022-07-09T17:37:02.000Z","Questions_Tags":{"questionId":507,"tagId":2523}},{"id":2524,"name":"c89","slug":"c89","createdAt":"2022-07-09T17:37:02.000Z","updatedAt":"2022-07-09T17:37:02.000Z","Questions_Tags":{"questionId":507,"tagId":2524}}],"relatedQuestions":[{"title":"What is the behavior of integer division?","slug":"what-is-the-behavior-of-integer-division-1657388222571","tags":[{"name":"c99","Questions_Tags":{"questionId":507,"tagId":2523}},{"name":"c89","Questions_Tags":{"questionId":507,"tagId":2524}}]}]},"randomQuestions":[{"title":"Do DOM tree elements with IDs become global properties?","slug":"do-dom-tree-elements-with-ids-become-global-properties-1657387475110"},{"title":"How to create a generic array in Java?","slug":"how-to-create-a-generic-array-in-java-1657387532298"},{"title":"PHP code is not being executed, but the code shows in the browser source code","slug":"php-code-is-not-being-executed-but-the-code-shows-in-the-browser-source-code-1657384553581"},{"title":"Why does this UnboundLocalError occur (closure)? [duplicate]","slug":"why-does-this-unboundlocalerror-occur-(closure)-duplicate-1657388531538"},{"title":"How to count the number of set bits in a 32-bit integer?","slug":"how-to-count-the-number-of-set-bits-in-a-32-bit-integer-1657388437370"},{"title":"How can I iterate through two lists in parallel?","slug":"how-can-i-iterate-through-two-lists-in-parallel-1657387278930"},{"title":"What is object slicing?","slug":"what-is-object-slicing-1657384506425"},{"title":"How do I vertically center text with CSS? [duplicate]","slug":"how-do-i-vertically-center-text-with-css-duplicate-1657387645821"},{"title":"Syntax error due to using a reserved word as a table or column name in MySQL","slug":"syntax-error-due-to-using-a-reserved-word-as-a-table-or-column-name-in-mysql-1657384689274"},{"title":"Firebase query if child of child contains a value","slug":"firebase-query-if-child-of-child-contains-a-value-1657387841291"},{"title":"Can you provide some examples of why it is hard to parse XML and HTML with a regex? [closed]","slug":"can-you-provide-some-examples-of-why-it-is-hard-to-parse-xml-and-html-with-a-regex-closed-1657388410824"},{"title":"What is the `self` parameter in class methods?","slug":"what-is-the-self-parameter-in-class-methods-1657387518448"},{"title":"How do I pass data between Activities in Android application?","slug":"how-do-i-pass-data-between-activities-in-android-application-1657384739839"},{"title":"Error: could not find function ... in R","slug":"error:-could-not-find-function-...-in-r-1657388476492"},{"title":"How do I make a flat list out of a list of lists?","slug":"how-do-i-make-a-flat-list-out-of-a-list-of-lists-1657384500439"},{"title":"How can I do a FULL OUTER JOIN in MySQL?","slug":"how-can-i-do-a-full-outer-join-in-mysql-1657388175444"},{"title":"What happens if you use the 32-bit int 0x80 Linux ABI in 64-bit code?","slug":"what-happens-if-you-use-the-32-bit-int-0x80-linux-abi-in-64-bit-code-1657388560485"},{"title":"How do I get PHP errors to display?","slug":"how-do-i-get-php-errors-to-display-1657384570095"},{"title":"Ways to deal with #document under iframe","slug":"ways-to-deal-with-document-under-iframe-1657388403345"},{"title":"How to sum a variable by group","slug":"how-to-sum-a-variable-by-group-1657384838148"}]},"__N_SSG":true}