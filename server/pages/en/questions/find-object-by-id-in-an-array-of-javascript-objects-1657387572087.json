{"pageProps":{"data":{"answer":["\n&lt;p&gt;Use the &lt;code&gt;find()&lt;/code&gt; method:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;From &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot; rel=&quot;noreferrer&quot;&gt;MDN&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The &lt;code&gt;find()&lt;/code&gt; method returns the first value in the array, if an element in the array satisfies the provided testing function. Otherwise &lt;code&gt;undefined&lt;/code&gt; is returned.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;hr&gt;\n&lt;p&gt;If you want to find its &lt;em&gt;index&lt;/em&gt; instead, use &lt;code&gt;findIndex()&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;From &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex&quot; rel=&quot;noreferrer&quot;&gt;MDN&lt;/a&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;The &lt;code&gt;findIndex()&lt;/code&gt; method returns the index of the first element in the array that satisfies the provided testing function. Otherwise -1 is returned.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;hr&gt;\n&lt;p&gt;If you want to get an array of matching elements, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; method instead:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This will return an array of objects. If you want to get an array of &lt;code&gt;foo&lt;/code&gt; properties, you can do this with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Side note: methods like &lt;code&gt;find()&lt;/code&gt; or &lt;code&gt;filter()&lt;/code&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noreferrer&quot;&gt;arrow functions&lt;/a&gt; are not supported by older browsers (like IE), so if you want to support these browsers, you should transpile your code using &lt;a href=&quot;https://babeljs.io/&quot; rel=&quot;noreferrer&quot;&gt;Babel&lt;/a&gt; (with the &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot; rel=&quot;noreferrer&quot;&gt;polyfill&lt;/a&gt;).&lt;/p&gt;\n    ","\n&lt;p&gt;As you are already using jQuery, you can use the &lt;a href=&quot;http://api.jquery.com/jQuery.grep/&quot; rel=&quot;noreferrer&quot;&gt;grep&lt;/a&gt; function which is intended for searching an array:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = $.&lt;span class=&quot;hljs-title function_&quot;&gt;grep&lt;/span&gt;(myArray, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == id; });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The result is an array with the items found. If you know that the object is always there and that it only occurs once, you can just use &lt;code&gt;result[0].foo&lt;/code&gt; to get the value. Otherwise you should check the length of the resulting array. Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// no result found&lt;/span&gt;\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// property found, access the foo property using result[0].foo&lt;/span&gt;\n} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n  &lt;span class=&quot;hljs-comment&quot;&gt;// multiple items found&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Another solution is to create a lookup object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; lookup = {};\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len = array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; len; i++) {\n    lookup[array[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] = array[i];\n}\n\n... now you can use lookup[id]...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is especially interesting if you need to do many lookups.&lt;/p&gt;\n\n&lt;p&gt;This won&apos;t need much more memory since the IDs and objects will be shared.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;ECMAScript 2015&lt;/em&gt; (JavaScript ES6) provides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/a&gt;\nmethod on arrays:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArray = [\n {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;bob&quot;&lt;/span&gt;},\n {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;dan&quot;&lt;/span&gt;},\n {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;barb&quot;&lt;/span&gt;},\n]\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// grab the Array item which matchs the id &quot;2&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; item = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// print&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(item.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;It works without external libraries. But if you want &lt;a href=&quot;http://kangax.github.io/compat-table/es6/#Array.prototype_methods&quot; rel=&quot;noreferrer&quot;&gt;older browser support&lt;/a&gt; you might want to include &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find#Polyfill&quot; rel=&quot;noreferrer&quot;&gt;this polyfill&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;a href=&quot;http://underscorejs.org/#find&quot;&gt;Underscore.js&lt;/a&gt; has a nice method for that:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},etc.]\nobj = _.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(myArray, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt; })\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I think the easiest way would be the following, but it won&apos;t work on Internet&amp;nbsp;Explorer&amp;nbsp;8 (or earlier):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; v.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Filter out the appropriate one&lt;/span&gt;\n})[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Get result and access the foo property&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try the following&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;findById&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;source, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; source.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (source[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === id) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; source[i];\n    }\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Couldn&apos;t find object with id: &quot;&lt;/span&gt; + id;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == some_id_you_want })[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A generic and more flexible version of the findById function above:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// array = [{key:value},{key:value}]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;objectFindByKey&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, key, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (array[i][key] === value) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array[i];\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result_obj = &lt;span class=&quot;hljs-title function_&quot;&gt;objectFindByKey&lt;/span&gt;(array, &lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Performance&lt;/h1&gt;\n&lt;p&gt;Today 2020.06.20 I perform test on MacOs High Sierra on Chrome 81.0, Firefox 77.0 and Safari 13.1 for chosen solutions.&lt;/p&gt;\n&lt;h2&gt;Conclusions for solutions which use precalculations&lt;/h2&gt;\n&lt;p&gt;Solutions with precalculations (K,L)  are (much much) faster than other solutions and will not be compared with them - probably they are use some special build-in browser optimisations&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;surprisingly on Chrome and Safari solution based on &lt;code&gt;Map&lt;/code&gt; (K) are much faster than solution based on object &lt;code&gt;{}&lt;/code&gt; (L)&lt;/li&gt;\n&lt;li&gt;surprisingly on Safari for small arrays solution based on object &lt;code&gt;{}&lt;/code&gt; (L) is slower than traditional &lt;code&gt;for&lt;/code&gt; (E)&lt;/li&gt;\n&lt;li&gt;surprisingly on Firefox for small arrays solution based on &lt;code&gt;Map&lt;/code&gt; (K) is slower than traditional &lt;code&gt;for&lt;/code&gt; (E)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Conclusions when searched objects ALWAYS exists&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;solution which use traditional &lt;code&gt;for&lt;/code&gt; (E) is fastest for small arrays and fast for big arrays&lt;/li&gt;\n&lt;li&gt;solution using cache (J) is fastest for big arrays - surprisingly for small arrays is medium fast&lt;/li&gt;\n&lt;li&gt;solutions based on &lt;code&gt;find&lt;/code&gt; (A) and &lt;code&gt;findIndex&lt;/code&gt; (B) are fast for small arras and medium fast on big arrays&lt;/li&gt;\n&lt;li&gt;solution based on &lt;code&gt;$.map&lt;/code&gt; (H) is slowest on small arrays&lt;/li&gt;\n&lt;li&gt;solution based on &lt;code&gt;reduce&lt;/code&gt; (D) is slowest on big arrays&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/W3dYP.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/W3dYP.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h3&gt;Conclusions when searched objects NEVER exists&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;solution based on traditional &lt;code&gt;for&lt;/code&gt; (E) is fastest on small and big arrays (except Chrome-small arrays where it is second fast)&lt;/li&gt;\n&lt;li&gt;solution based on &lt;code&gt;reduce&lt;/code&gt; (D) is slowest on big arrays&lt;/li&gt;\n&lt;li&gt;solution which use cache (J) is medium fast but can be speed up if we save in cache also keys which have null values (which was not done here because we want to avoid unlimited memory consumption in cache in case when many not existing keys will be searched)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/nvXDF.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/nvXDF.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h2&gt;Details&lt;/h2&gt;\n&lt;p&gt;For solutions&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;without precalculations: &lt;a href=&quot;https://stackoverflow.com/a/35398031/860099&quot;&gt;A&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/35398031/860099&quot;&gt;B&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/7364203/860099&quot;&gt;C&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/30632924/860099&quot;&gt;D&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/7364184/860099&quot;&gt;E&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/15138786/860099&quot;&gt;F&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/7364307/860099&quot;&gt;G&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/7364205/860099&quot;&gt;H&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/13513161/860099&quot;&gt;I&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/62439978/860099&quot;&gt;J&lt;/a&gt; (the J solution use &apos;inner&apos; cache and it speed depend on how often searched elements will repeat)&lt;/li&gt;\n&lt;li&gt;with precalculations\n&lt;a href=&quot;https://stackoverflow.com/a/45572348/860099&quot;&gt;K&lt;/a&gt;\n&lt;a href=&quot;https://stackoverflow.com/a/7364247/860099&quot;&gt;L&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;I perform four tests. In tests I want to find 5 objects in 10 loop iterations (the objects ID not change during iterations) - so I call tested method 50 times but only first 5 times have unique id values:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;small array (10 elements) and searched object ALWAYS exists - you can perform it &lt;a href=&quot;https://jsbench.me/jqkbm6lgoq/1&quot; rel=&quot;noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;big array (10k elements) and searched object ALWAYS exist - you can perform it &lt;a href=&quot;https://jsbench.me/u9kbm7k8dl/1&quot; rel=&quot;noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;small array (10 elements) and searched object NEVER exists - you can perform it &lt;a href=&quot;https://jsbench.me/oukbmjb1e6/1&quot; rel=&quot;noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;big array (10k elements) and searched object NEVER exists - you can perform it &lt;a href=&quot;https://jsbench.me/47kbmj7c87/1&quot; rel=&quot;noreferrer&quot;&gt;HERE&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Tested codes are presented below&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;A&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;=&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;B&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; idx= arr.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;=&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr[idx];\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;C&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;=&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id)[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;D&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (a.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id &amp;amp;&amp;amp; a) || (b.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == id &amp;amp;&amp;amp; b));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;E&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (arr[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id) &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr[i];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;F&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; retObj ={};\n  $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(arr, &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;index, obj&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == id) { \n      retObj = obj;\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n    }\n  });\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; retObj;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;G&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $.&lt;span class=&quot;hljs-title function_&quot;&gt;grep&lt;/span&gt;(arr, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;=&amp;gt;&lt;/span&gt; e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == id )[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;H&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(myArray, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == id ? val : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  })[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;I&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; _.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(arr, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt; =&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; J = (&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; cache = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;J&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr,id,el=&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; cache.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(id) || (el=arr.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;=&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id), cache.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(id,el), el);\n  }\n})();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;K&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mapK.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(id)\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;L&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, id&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mapL[id];\n}\n\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// -------------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// TEST&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// -------------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Find id=5&apos;&lt;/span&gt;);\n\nmyArray = [...&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)].&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x,i&lt;/span&gt;)=&amp;gt;&lt;/span&gt; ({&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${i}&lt;/span&gt;`&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;`bar_&lt;span class=&quot;hljs-subst&quot;&gt;${i}&lt;/span&gt;`&lt;/span&gt;}));\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; mapK = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;( myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt; =&amp;gt;&lt;/span&gt; [el.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;, el]) );\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; mapL = {}; myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt; =&amp;gt;&lt;/span&gt; mapL[el.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;]=el);\n\n\n\n[A,B,C,D,E,F,G,H,I,J,K,L].&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;f&lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${f.name}&lt;/span&gt;: &lt;span class=&quot;hljs-subst&quot;&gt;${&lt;span class=&quot;hljs-built_in&quot;&gt;JSON&lt;/span&gt;.stringify(f(myArray, &lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;))}&lt;/span&gt;`&lt;/span&gt;));\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Whole array&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(myArray));&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.15/lodash.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\nThis snippet only presents tested codes&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Example tests results for Chrome for small array where searched objects always exists&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/36oqr.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/36oqr.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As others have pointed out, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt; is the way to go when looking for one object within your array. However, if your object cannot be found using this method, your program will crash:\n&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; myArray = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;100&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Uh oh!&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;/*\nError:\n&quot;Uncaught TypeError: Cannot read property &apos;foo&apos; of undefined&quot;\nor in newer chrome versions:\nUncaught TypeError: Cannot read properties of undefined (reading &apos;foo&apos;)\n*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;This can be fixed by checking whether the result of &lt;code&gt;.find()&lt;/code&gt; is defined before using &lt;code&gt;.foo&lt;/code&gt; on it. Modern JS allows us to do this easily with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining&quot; rel=&quot;noreferrer&quot;&gt;optional chaining&lt;/a&gt;, returning &lt;code&gt;undefined&lt;/code&gt; if the object cannot be found, rather than crashing your code:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; myArray = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;100&apos;&lt;/span&gt;)?.&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// No error!&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(res); &lt;span class=&quot;hljs-comment&quot;&gt;// undefined when the object cannot be found&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you do this multiple times, you may set up a Map (ES6):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; map = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;( myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt; =&amp;gt;&lt;/span&gt; [el.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;, el]) );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then you can simply do a O(1) lookup:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;map.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Using native &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.reduce&lt;/code&gt;&lt;/a&gt;&lt;/h1&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = [ {&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt; ,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;} , {&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt; ,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;} , ];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; id = &lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; found = array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, b&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (a.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id &amp;amp;&amp;amp; a) || (b.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == id &amp;amp;&amp;amp; b)\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;returns the object element if found, otherwise &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can get this easily using the &lt;a href=&quot;http://api.jquery.com/jQuery.map/&quot; rel=&quot;noreferrer&quot;&gt;map()&lt;/a&gt; function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; found = $.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(myArray, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt; ? val.&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt; : &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//found[0] == &quot;bar&quot;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Working example: &lt;a href=&quot;http://jsfiddle.net/hunter/Pxaua/&quot; rel=&quot;noreferrer&quot;&gt;http://jsfiddle.net/hunter/Pxaua/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can use filters,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getById&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;id, myArray&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == id) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj \n      }\n    })[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n  }\n\nget_my_obj = &lt;span class=&quot;hljs-title function_&quot;&gt;getById&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;73&lt;/span&gt;, myArray);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;While there are many correct answers here, many of them do not address the fact that this is an unnecessarily expensive operation if done more than once. In an extreme case this could be the cause of real performance problems.&lt;/p&gt;\n\n&lt;p&gt;In the real world, if you are processing a lot of items and performance is a concern it&apos;s much faster to initially build a lookup:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; items = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; lookup = items.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o,i&lt;/span&gt;)=&amp;gt;&lt;/span&gt;o[i.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;]=o,{});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;you can then get at items in fixed time like this : &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bar = o[id];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You might also consider using a Map instead of an object as the lookup: &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Recently, I have to face the same thing in which I need to search the string from a huge array.&lt;/p&gt;\n\n&lt;p&gt;After some search I found It&apos;ll be easy to handle with simple code:&lt;/p&gt;\n\n&lt;p&gt;Code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; items = mydata.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;word&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toLowerCase&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;startsWith&lt;/span&gt;( &lt;span class=&quot;hljs-string&quot;&gt;&apos;gk );\n})\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://jsfiddle.net/maheshwaghmare/cfx3p40v/4/&quot; rel=&quot;noreferrer&quot;&gt;https://jsfiddle.net/maheshwaghmare/cfx3p40v/4/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/v3s8k.gif&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/v3s8k.gif&quot; alt=&quot;Serach from 20k strings&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Iterate over any item in the array. For every item you visit, check that item&apos;s id. If it&apos;s a match, return it.&lt;/p&gt;\n\n&lt;p&gt;If you just want teh codez:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, id&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len = array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; len; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (array[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === id) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array[i];\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Nothing found&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And the same thing using ECMAScript 5&apos;s Array methods:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, id&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; obj = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;val&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; val.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === id;\n    });\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Filter returns an array, and we just want the matching item.&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You may try out Sugarjs from &lt;a href=&quot;http://sugarjs.com/&quot; rel=&quot;noreferrer&quot;&gt;http://sugarjs.com/&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;It has a very sweet method on Arrays, &lt;code&gt;.find&lt;/code&gt;. So you can find an element like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;array.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;( {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;75&lt;/span&gt;} );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You may also pass an object with more properties to it to add another &quot;where-clause&quot;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Note that Sugarjs extends native objects, and some people consider this very evil...&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;As long as the browser supports &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Versions&quot; rel=&quot;nofollow&quot;&gt;ECMA-262&lt;/a&gt;, 5th edition (December 2009), this should work, almost one-liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bFound = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;45&lt;/span&gt;;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s how I&apos;d go about it in pure JavaScript, in the most minimal manner I can think of that works in ECMAScript 3 or later. It returns as soon as a match is found.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getKeyValueById = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array, key, id&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; testArray = array.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(), test;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(test = testArray.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;()) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (test.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === id) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; test[key];\n        }\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// return undefined if no matching id is found in array&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArray = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}]\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;hljs-title function_&quot;&gt;getKeyValueById&lt;/span&gt;(myArray, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// result is &apos;bar&apos;, obtained from object with id of &apos;45&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;More generic and short&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;findFromArray&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array,key,value&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;element&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; element[key] == value;\n        }).&lt;span class=&quot;hljs-title function_&quot;&gt;shift&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;in your case Ex. &lt;code&gt;var element = findFromArray(myArray,&apos;id&apos;,45)&lt;/code&gt; that will give you the whole element.&lt;/p&gt;\n    ","\n&lt;p&gt;We can use Jquery methods &lt;code&gt;$.each()/$.grep()&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data= [];\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(array,&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt;){&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(n !== &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &amp;amp;&amp;amp; i &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;){data.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(item)}}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = $.&lt;span class=&quot;hljs-title function_&quot;&gt;grep&lt;/span&gt;(array, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; n, i &lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ( n !== &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &amp;amp;&amp;amp; i &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; );\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;use ES6 syntax: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;find&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;filter&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;forEach&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;map&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or use Lodash &lt;a href=&quot;https://lodash.com/docs/4.17.10#filter&quot; rel=&quot;noreferrer&quot;&gt;https://lodash.com/docs/4.17.10#filter&lt;/a&gt;, Underscore &lt;a href=&quot;https://underscorejs.org/#filter&quot; rel=&quot;noreferrer&quot;&gt;https://underscorejs.org/#filter&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Building on the accepted answer:&lt;/p&gt;\n\n&lt;p&gt;jQuery:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; foo = $.&lt;span class=&quot;hljs-title function_&quot;&gt;grep&lt;/span&gt;(myArray, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === foo_id})\nmyArray.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;(foo)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or CoffeeScript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;foo = $.grep myArray, (e) -&amp;gt; e.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; == foo_id\nmyArray.&lt;span class=&quot;hljs-property&quot;&gt;pop&lt;/span&gt; foo\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; function.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;DEMO&lt;/strong&gt;: &lt;a href=&quot;https://jsfiddle.net/sumitridhal/r0cz0w5o/4/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://jsfiddle.net/sumitridhal/r0cz0w5o/4/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonObj =[\n {\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Me&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;info&quot;&lt;/span&gt;: {\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt;,\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;favColor&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Green&quot;&lt;/span&gt;,\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;pets&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n  }\n },\n {\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Alex&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;info&quot;&lt;/span&gt;: {\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;16&quot;&lt;/span&gt;,\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;favColor&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;orange&quot;&lt;/span&gt;,\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;pets&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n  }\n },\n{\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Kyle&quot;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;info&quot;&lt;/span&gt;: {\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;15&quot;&lt;/span&gt;,\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;favColor&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Blue&quot;&lt;/span&gt;,\n   &lt;span class=&quot;hljs-string&quot;&gt;&quot;pets&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;\n  }\n }\n];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;FILTER&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; getPerson = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;name&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; jsonObj.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; obj.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; === name;\n    });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do this even in pure JavaScript by using the in built &quot;filter&quot; function for arrays:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;filterObjects&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x[key] === value; })\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So now simply pass &quot;id&quot; in place of &lt;code&gt;key&lt;/code&gt; and &quot;45&quot; in place of &lt;code&gt;value&lt;/code&gt;, and you will get the full object matching an id of 45. So that would be,&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArr.&lt;span class=&quot;hljs-title function_&quot;&gt;filterObjects&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;45&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I really liked the answer provided by Aaron Digulla but needed to keep my array of objects so I could iterate through it later.  So I modified it to &lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;\t&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; indexer = {};\n\t&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) {\n\t    indexer[array[i].&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] = &lt;span class=&quot;hljs-built_in&quot;&gt;parseInt&lt;/span&gt;(i);\n\t}\n\t\n\t&lt;span class=&quot;hljs-comment&quot;&gt;//Then you can access object properties in your array using &lt;/span&gt;\n\tarray[indexer[id]].&lt;span class=&quot;hljs-property&quot;&gt;property&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; retObj ={};\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;ArrayOfObjects&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;index, obj&lt;/span&gt;) {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === &lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// id.toString() if it is int&lt;/span&gt;\n\n            retObj = obj;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n        }\n    });\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; retObj;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It should return an object by id.&lt;/p&gt;\n    ","\n&lt;p&gt;This solution may helpful as well:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;grep&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; that = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;, ret = [];\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;elem, index&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (elem[key] === value) {\n            ret.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(that[index]);\n        }\n    });\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; ret.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; ? ret[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] : ret;\n};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; bar = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;grep&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;45&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I made it just like &lt;code&gt;$.grep&lt;/code&gt; and if one object is find out, &lt;em&gt;function&lt;/em&gt; will return the object, rather than an array.&lt;/p&gt;\n    ","\n&lt;h1&gt;Dynamic cached find&lt;/h1&gt;\n&lt;p&gt;In this solution, when we search for some object, we save it in cache. This is middle point between &quot;always search solutions&quot; and &quot;create hash-map for each object in precalculations&quot;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; cachedFind = (&lt;span class=&quot;hljs-function&quot;&gt;()=&amp;gt;&lt;/span&gt;{\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; cache = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr,id,el=&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; \n    cache.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(id) || (el=arr.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;=&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;==id), cache.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(id,el), el);\n})();\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// TEST&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// ---------&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; myArray = [...&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100000&lt;/span&gt;)].&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x,i&lt;/span&gt;)=&amp;gt;&lt;/span&gt; ({&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${i}&lt;/span&gt;`&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;`bar_&lt;span class=&quot;hljs-subst&quot;&gt;${i}&lt;/span&gt;`&lt;/span&gt;}));\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// example usage&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;cachedFind&lt;/span&gt;(myArray,&lt;span class=&quot;hljs-string&quot;&gt;&apos;1234&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt; );\n\n\n\n\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Benchmark&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;bench&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;id&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;time&lt;/span&gt;   (&lt;span class=&quot;hljs-string&quot;&gt;&apos;time for &apos;&lt;/span&gt;+id ); \n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;log&lt;/span&gt;    ( &lt;span class=&quot;hljs-title function_&quot;&gt;cachedFind&lt;/span&gt;(myArray,id).&lt;span class=&quot;hljs-property&quot;&gt;foo&lt;/span&gt; );  &lt;span class=&quot;hljs-comment&quot;&gt;// FIND&lt;/span&gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;timeEnd&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;time for &apos;&lt;/span&gt;+id );\n}\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;----- no cached -----&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;bench&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;50000&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;bench&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;79980&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;bench&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;99990&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;-----  cached   -----&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title function_&quot;&gt;bench&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;79980&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// cached&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;bench&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;99990&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// cached&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    "],"id":307,"title":"Find object by id in an array of JavaScript objects","content":"\n                \n&lt;p&gt;I&apos;ve got an array:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;myArray = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;73&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&apos;id&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;45&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;bar&apos;&lt;/span&gt;}, etc.]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&apos;m unable to change the structure of the array. I&apos;m being passed an id of &lt;code&gt;45&lt;/code&gt;, and I want to get &lt;code&gt;&apos;bar&apos;&lt;/code&gt; for that object in the array. &lt;/p&gt;\n\n&lt;p&gt;How do I do this in JavaScript or using jQuery?&lt;/p&gt;\n    ","slug":"find-object-by-id-in-an-array-of-javascript-objects-1657387572087","postType":"QUESTION","createdAt":"2022-07-09T17:26:12.000Z","updatedAt":"2022-07-09T17:26:12.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"Convert Rows to columns using 'Pivot' in SQL Server","slug":"convert-rows-to-columns-using-'pivot'-in-sql-server-1657388372528"},{"title":"What does the 'static' keyword do in a class?","slug":"what-does-the-'static'-keyword-do-in-a-class-1657388554238"},{"title":"Parsing a string to a date in JavaScript","slug":"parsing-a-string-to-a-date-in-javascript-1657387782497"},{"title":"Is it safe to expose Firebase apiKey to the public?","slug":"is-it-safe-to-expose-firebase-apikey-to-the-public-1657388268111"},{"title":"How do I compose a rotation matrix with human readable angles from scratch?","slug":"how-do-i-compose-a-rotation-matrix-with-human-readable-angles-from-scratch-1657387963457"},{"title":"How can I combine two strings together in PHP?","slug":"how-can-i-combine-two-strings-together-in-php-1657388279401"},{"title":"What is event bubbling and capturing?","slug":"what-is-event-bubbling-and-capturing-1657388059203"},{"title":"How do you convert a byte array to a hexadecimal string, and vice versa?","slug":"how-do-you-convert-a-byte-array-to-a-hexadecimal-string-and-vice-versa-1657388010428"},{"title":"SQL injection that gets around mysql_real_escape_string()","slug":"sql-injection-that-gets-around-mysql_real_escape_string()-1657384364747"},{"title":"console.log() async or sync?","slug":"console.log()-async-or-sync-1657388401087"},{"title":"What is The Rule of Three?","slug":"what-is-the-rule-of-three-1657384390295"},{"title":"What are metaclasses in Python?","slug":"what-are-metaclasses-in-python-1657387811608"},{"title":"The ViewData item that has the key 'XXX' is of type 'System.Int32' but must be of type 'IEnumerable<SelectListItem>'","slug":"the-viewdata-item-that-has-the-key-'xxx'-is-of-type-'system.int32'-but-must-be-of-type-'ienumerablelessselectlistitemgreater'-1657388454191"},{"title":".prop() vs .attr()","slug":".prop()-vs-.attr()-1657384898328"},{"title":"Convert one date format into another in PHP","slug":"convert-one-date-format-into-another-in-php-1657384566234"},{"title":"What is ViewModel in MVC?","slug":"what-is-viewmodel-in-mvc-1657387451244"},{"title":"How do you parse and process HTML/XML in PHP?","slug":"how-do-you-parse-and-process-htmlxml-in-php-1657384351267"},{"title":"How do I declare a 2d array in C++ using new?","slug":"how-do-i-declare-a-2d-array-in-c++-using-new-1657388441163"},{"title":"Templated check for the existence of a class member function?","slug":"templated-check-for-the-existence-of-a-class-member-function-1657388363414"},{"title":"How to convert a factor to integer\\numeric without loss of information?","slug":"how-to-convert-a-factor-to-integernumeric-without-loss-of-information-1657387880273"}]},"__N_SSG":true}