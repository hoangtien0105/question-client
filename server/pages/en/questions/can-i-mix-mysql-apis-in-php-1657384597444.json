{"pageProps":{"data":{"answer":["\n&lt;p&gt;No, you can&apos;t use &lt;code&gt;mysql&lt;/code&gt; and &lt;code&gt;mysqli&lt;/code&gt; together.  They are separate APIs and the resources they create are incompatible with one another.&lt;/p&gt;\n\n&lt;p&gt;There is a &lt;code&gt;mysqli_close&lt;/code&gt;, though.&lt;/p&gt;\n    ","\n&lt;p&gt;Just to give a general answer here about all three MYSQL API&apos;s with a reference:&lt;/p&gt;\n\n&lt;p&gt;You can&apos;t mix any of the three (&lt;a href=&quot;http://php.net/manual/en/book.mysql.php&quot;&gt;&lt;code&gt;mysql_*&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/book.mysqli.php&quot;&gt;&lt;code&gt;mysqli_*&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;&lt;code&gt;PDO&lt;/code&gt;&lt;/a&gt;) MYSQL API&apos;s from PHP together, it just doesn&apos;t work. It&apos;s even in the &lt;a href=&quot;http://php.net/manual/en/faq.databases.php#faq.databases.mysql.deprecated&quot;&gt;manual FAQ&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;It is &lt;strong&gt;not possible to mix the extensions&lt;/strong&gt;. So, for example, passing a mysqli connection to PDO_MySQL or ext/mysql &lt;strong&gt;will not work&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;You need to use the same MySQL API and its related functions, from connection to querying.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;http://php.net/manual/en/mysqlinfo.api.choosing.php&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Technically you can use as many separate connections as you want, while your problem is caused by a mere typo - you only cannot use resources from one extension with functions from another, which is quite obviously.&lt;/p&gt;\n\n&lt;p&gt;However, you &lt;strong&gt;should avoid multiple connections from the same script&lt;/strong&gt;, no matter from single API or different ones. As it will burden your database server and exhaust its resources. So, although technically you can, you shouldn&apos;t mix different extensions in your code, save for the short period of refactoring.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;MySQLi&lt;/code&gt; is a lot more secure than &lt;code&gt;MySQL&lt;/code&gt; which is anyway now deprecated. That&apos;s why you should stick with &lt;code&gt;MySQLi&lt;/code&gt; and also you can&apos;t mix them as they are both different.&lt;/p&gt;\n    "],"id":99,"title":"Can I mix MySQL APIs in PHP?","content":"\n                \n&lt;p&gt;I have searched the net and so far what I have seen is that you can use &lt;code&gt;mysql_&lt;/code&gt; and &lt;code&gt;mysqli_&lt;/code&gt; together meaning:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt;=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_connect&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;localhost&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;root&quot;&lt;/span&gt; ,&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; ,&lt;span class=&quot;hljs-string&quot;&gt;&quot;mysql&quot;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_connect_errno&lt;/span&gt;( &lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt; ) ) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;failed to connect&quot;&lt;/span&gt;;\n}&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;connected&quot;&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_close&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Done&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?php&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt;=&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysql_connect&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;localhost&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;root&quot;&lt;/span&gt; ,&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; ,&lt;span class=&quot;hljs-string&quot;&gt;&quot;mysql&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_connect_errno&lt;/span&gt;( &lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt; ) ) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;failed to connect&quot;&lt;/span&gt;;\n}&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;connected&quot;&lt;/span&gt;;\n}\n&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;mysqli_close&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;$con&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Done&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-meta&quot;&gt;?&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Are valid but when I use this code what I get is:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vhdl&quot;&gt;Connected\n&lt;span class=&quot;hljs-literal&quot;&gt;Warning&lt;/span&gt;: mysql_close() expects &lt;span class=&quot;hljs-keyword&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; be resource, object given &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; D:\\************.php &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;\nDone\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For the first and the same except with &lt;code&gt;mysqli_close()&lt;/code&gt;. For the second one.&lt;/p&gt;\n\n&lt;p&gt;What is the problem? Can&apos;t I use &lt;code&gt;mysql_&lt;/code&gt; and &lt;code&gt;mysqli&lt;/code&gt; together? Or is it normal? Is the way I can check if the connections are valid at all? (the &lt;code&gt;if(mysq...)&lt;/code&gt;)&lt;/p&gt;\n    ","slug":"can-i-mix-mysql-apis-in-php-1657384597444","postType":"QUESTION","createdAt":"2022-07-09T16:36:37.000Z","updatedAt":"2022-07-09T16:36:37.000Z","tags":[{"id":364,"name":"pdo","slug":"pdo","createdAt":"2022-07-09T16:36:37.000Z","updatedAt":"2022-07-09T16:36:37.000Z","Questions_Tags":{"questionId":99,"tagId":364}}],"relatedQuestions":[{"title":"Can I mix MySQL APIs in PHP?","slug":"can-i-mix-mysql-apis-in-php-1657384597444","tags":[{"name":"pdo","Questions_Tags":{"questionId":99,"tagId":364}}]}]},"randomQuestions":[{"title":"What does ** (double star/asterisk) and * (star/asterisk) do for parameters?","slug":"what-does-**-(double-starasterisk)-and-*-(starasterisk)-do-for-parameters-1657384800967"},{"title":"What is the scope of variables in JavaScript?","slug":"what-is-the-scope-of-variables-in-javascript-1657384464291"},{"title":".prop() vs .attr()","slug":".prop()-vs-.attr()-1657384898328"},{"title":"How do I detect a click outside an element?","slug":"how-do-i-detect-a-click-outside-an-element-1657387505351"},{"title":"Iterating over dictionaries using 'for' loops","slug":"iterating-over-dictionaries-using-'for'-loops-1657388334481"},{"title":"What is the difference between public, protected, package-private and private in Java?","slug":"what-is-the-difference-between-public-protected-package-private-and-private-in-java-1657387376262"},{"title":"Can a local variable's memory be accessed outside its scope?","slug":"can-a-local-variable's-memory-be-accessed-outside-its-scope-1657384460386"},{"title":"jQuery Ajax File Upload","slug":"jquery-ajax-file-upload-1657387368970"},{"title":"addEventListener vs onclick","slug":"addeventlistener-vs-onclick-1657388191429"},{"title":"How can I return pivot table output in MySQL?","slug":"how-can-i-return-pivot-table-output-in-mysql-1657384715043"},{"title":"How can I save an activity state using the save instance state?","slug":"how-can-i-save-an-activity-state-using-the-save-instance-state-1657387429981"},{"title":"How can I fix 'android.os.NetworkOnMainThreadException'?","slug":"how-can-i-fix-'android.os.networkonmainthreadexception'-1657384454963"},{"title":"What is an IndexOutOfRangeException / ArgumentOutOfRangeException and how do I fix it?","slug":"what-is-an-indexoutofrangeexception-argumentoutofrangeexception-and-how-do-i-fix-it-1657384697159"},{"title":"How do I undo the most recent local commits in Git?","slug":"how-do-i-undo-the-most-recent-local-commits-in-git-1657388262945"},{"title":"What are the rules for JavaScript's automatic semicolon insertion (ASI)?","slug":"what-are-the-rules-for-javascript's-automatic-semicolon-insertion-(asi)-1657387472789"},{"title":"Is there a difference between \"==\" and \"is\"?","slug":"is-there-a-difference-between-\"\"-and-\"is\"-1657387902231"},{"title":"How can I do a FULL OUTER JOIN in MySQL?","slug":"how-can-i-do-a-full-outer-join-in-mysql-1657388175444"},{"title":"What are the basic rules and idioms for operator overloading?","slug":"what-are-the-basic-rules-and-idioms-for-operator-overloading-1657384449752"},{"title":"Trouble with UTF-8 characters; what I see is not what I stored","slug":"trouble-with-utf-8-characters-what-i-see-is-not-what-i-stored-1657384817490"},{"title":"How do I use extern to share variables between source files?","slug":"how-do-i-use-extern-to-share-variables-between-source-files-1657387453605"}]},"__N_SSG":true}