{"pageProps":{"data":{"answer":["\n&lt;p&gt;Unfortunately MySQL does not have a &lt;code&gt;PIVOT&lt;/code&gt; function which is basically what you are trying to do. So you will need to use an aggregate function with a &lt;code&gt;CASE&lt;/code&gt; statement:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; pt.partner_name,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product A&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductA,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product B&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductB,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product C&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductC,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product D&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductD,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product E&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductE\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; partners pt\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; sales s\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; pt.part_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; s.partner_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; products pd\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; s.product_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; pd.prod_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; pt.partner_name\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://www.db-fiddle.com/f/8SLRh8FtxC1KPbZUazt7TH/0&quot; rel=&quot;noreferrer&quot;&gt;SQL Demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Since you do not know the Products you will probably want to perform this dynamically. This can be done using prepared statements. &lt;/p&gt;\n\n&lt;p&gt;With dynamic pivot tables (transform rows to columns) your code would look like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  GROUP_CONCAT(&lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt;\n    CONCAT(\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;count(case when Product_Name = &apos;&apos;&apos;&lt;/span&gt;,\n      Product_Name,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos; then 1 end) AS &apos;&lt;/span&gt;,\n      replace(Product_Name, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n    )\n  ) &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; products;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CONCAT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT pt.partner_name, &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; from partners pt\nleft join sales s\n  on pt.part_id = s.partner_id\nleft join products pd\n  on s.product_id = pd.prod_id\ngroup by pt.partner_name&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXECUTE&lt;/span&gt; stmt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DEALLOCATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://www.db-fiddle.com/f/nDe3oQ3VdtfS5QDokieHN4/0&quot; rel=&quot;noreferrer&quot;&gt;SQL Demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&apos;s probably worth noting that &lt;code&gt;GROUP_CONCAT&lt;/code&gt; is by default limited to 1024 bytes. You can work around this by setting it higher for the duration of your procedure, ie. &lt;code&gt;SET @@group_concat_max_len = 32000;&lt;/code&gt; &lt;/p&gt;\n    "],"id":438,"title":"MySQL pivot row into dynamic number of columns","content":"\n                \n&lt;p&gt;Lets say I have three different MySQL tables:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;products&lt;/code&gt;:&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name\n &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Product A\n &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Product B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;partners&lt;/code&gt;:&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name\n &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Partner A\n &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Partner B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;sales&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;partners_id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; products_id\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I would like to get a table with partners in the rows and products as columns. So far I was able to get an output like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;( &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; )\nPartner A   Product A          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product B          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product C          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product D          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product E          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\nPartner B   Product B          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product C          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product D          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product E          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using this query:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; partners.name, products.name, &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;( &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; ) \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; sales\n&lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; products &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; sales.products_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; products.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; partners &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; sales.partners_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; partners.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; sales.partners_id, sales.products_id\nLIMIT &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; , &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I would like to have instead something like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;partner_name &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product A &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product B &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product C &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product D &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product E\nPartner A              &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\nPartner B              &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem is that I cannot tell how many products I will have so the column number needs to change dynamically depending on the rows in the products table. &lt;/p&gt;\n\n&lt;p&gt;This very good answer does not seem to work with mysql: &lt;a href=&quot;https://stackoverflow.com/questions/2922797/t-sql-pivot-possibility-of-creating-table-columns-from-row-values&quot;&gt;T-SQL Pivot? Possibility of creating table columns from row values&lt;/a&gt;&lt;/p&gt;\n    ","slug":"mysql-pivot-row-into-dynamic-number-of-columns-1657387981930","postType":"QUESTION","createdAt":"2022-07-09T17:33:01.000Z","updatedAt":"2022-07-09T17:33:01.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"No 'Access-Control-Allow-Origin' header is present on the requested resource—when trying to get data from a REST API","slug":"no-'access-control-allow-origin'-header-is-present-on-the-requested-resourcewhen-trying-to-get-data-from-a-rest-api-1657387628467"},{"title":"What is a lambda expression in C++11?","slug":"what-is-a-lambda-expression-in-c++11-1657387999252"},{"title":"How can I merge properties of two JavaScript objects dynamically?","slug":"how-can-i-merge-properties-of-two-javascript-objects-dynamically-1657387492535"},{"title":"HTTP GET with request body","slug":"http-get-with-request-body-1657387379038"},{"title":"Is an array name a pointer?","slug":"is-an-array-name-a-pointer-1657387874827"},{"title":"addEventListener vs onclick","slug":"addeventlistener-vs-onclick-1657388191429"},{"title":"Why does printf not flush after the call unless a newline is in the format string?","slug":"why-does-printf-not-flush-after-the-call-unless-a-newline-is-in-the-format-string-1657387853407"},{"title":"Is there a JavaScript / jQuery DOM change listener?","slug":"is-there-a-javascript-jquery-dom-change-listener-1657387961200"},{"title":"What is the difference between #include <filename> and #include \"filename\"?","slug":"what-is-the-difference-between-include-lessfilenamegreater-and-include-\"filename\"-1657388489547"},{"title":"Iterating over dictionaries using 'for' loops","slug":"iterating-over-dictionaries-using-'for'-loops-1657388334481"},{"title":"How can I tell if a DOM element is visible in the current viewport?","slug":"how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport-1657388316510"},{"title":"What is the \"N+1 selects problem\" in ORM (Object-Relational Mapping)?","slug":"what-is-the-\"n+1-selects-problem\"-in-orm-(object-relational-mapping)-1657388055597"},{"title":"How do servlets work? Instantiation, sessions, shared variables and multithreading","slug":"how-do-servlets-work-instantiation-sessions-shared-variables-and-multithreading-1657387540375"},{"title":"How to format numbers as currency strings","slug":"how-to-format-numbers-as-currency-strings-1657388399166"},{"title":"What is a debugger and how can it help me diagnose problems?","slug":"what-is-a-debugger-and-how-can-it-help-me-diagnose-problems-1657384472469"},{"title":"PHP - Failed to open stream : No such file or directory","slug":"php-failed-to-open-stream-:-no-such-file-or-directory-1657387872896"},{"title":"Removing duplicates in lists","slug":"removing-duplicates-in-lists-1657388207448"},{"title":"getContactsFromFirebase() method return an empty list","slug":"getcontactsfromfirebase()-method-return-an-empty-list-1657388433928"},{"title":"Variables are not behaving as expected","slug":"variables-are-not-behaving-as-expected-1657384865672"},{"title":"Is there a RegExp.escape function in JavaScript?","slug":"is-there-a-regexp.escape-function-in-javascript-1657387606651"}]},"__N_SSG":true}