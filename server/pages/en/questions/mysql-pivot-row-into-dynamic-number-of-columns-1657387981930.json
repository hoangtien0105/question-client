{"pageProps":{"data":{"answer":["\n&lt;p&gt;Unfortunately MySQL does not have a &lt;code&gt;PIVOT&lt;/code&gt; function which is basically what you are trying to do. So you will need to use an aggregate function with a &lt;code&gt;CASE&lt;/code&gt; statement:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; pt.partner_name,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product A&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductA,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product B&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductB,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product C&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductC,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product D&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductD,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product E&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductE\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; partners pt\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; sales s\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; pt.part_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; s.partner_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; products pd\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; s.product_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; pd.prod_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; pt.partner_name\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://www.db-fiddle.com/f/8SLRh8FtxC1KPbZUazt7TH/0&quot; rel=&quot;noreferrer&quot;&gt;SQL Demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Since you do not know the Products you will probably want to perform this dynamically. This can be done using prepared statements. &lt;/p&gt;\n\n&lt;p&gt;With dynamic pivot tables (transform rows to columns) your code would look like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  GROUP_CONCAT(&lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt;\n    CONCAT(\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;count(case when Product_Name = &apos;&apos;&apos;&lt;/span&gt;,\n      Product_Name,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos; then 1 end) AS &apos;&lt;/span&gt;,\n      replace(Product_Name, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n    )\n  ) &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; products;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CONCAT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT pt.partner_name, &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; from partners pt\nleft join sales s\n  on pt.part_id = s.partner_id\nleft join products pd\n  on s.product_id = pd.prod_id\ngroup by pt.partner_name&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXECUTE&lt;/span&gt; stmt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DEALLOCATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://www.db-fiddle.com/f/nDe3oQ3VdtfS5QDokieHN4/0&quot; rel=&quot;noreferrer&quot;&gt;SQL Demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&apos;s probably worth noting that &lt;code&gt;GROUP_CONCAT&lt;/code&gt; is by default limited to 1024 bytes. You can work around this by setting it higher for the duration of your procedure, ie. &lt;code&gt;SET @@group_concat_max_len = 32000;&lt;/code&gt; &lt;/p&gt;\n    "],"id":438,"title":"MySQL pivot row into dynamic number of columns","content":"\n                \n&lt;p&gt;Lets say I have three different MySQL tables:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;products&lt;/code&gt;:&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name\n &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Product A\n &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Product B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;partners&lt;/code&gt;:&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name\n &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Partner A\n &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Partner B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;sales&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;partners_id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; products_id\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I would like to get a table with partners in the rows and products as columns. So far I was able to get an output like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;( &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; )\nPartner A   Product A          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product B          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product C          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product D          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product E          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\nPartner B   Product B          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product C          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product D          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product E          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using this query:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; partners.name, products.name, &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;( &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; ) \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; sales\n&lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; products &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; sales.products_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; products.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; partners &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; sales.partners_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; partners.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; sales.partners_id, sales.products_id\nLIMIT &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; , &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I would like to have instead something like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;partner_name &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product A &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product B &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product C &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product D &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product E\nPartner A              &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\nPartner B              &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem is that I cannot tell how many products I will have so the column number needs to change dynamically depending on the rows in the products table. &lt;/p&gt;\n\n&lt;p&gt;This very good answer does not seem to work with mysql: &lt;a href=&quot;https://stackoverflow.com/questions/2922797/t-sql-pivot-possibility-of-creating-table-columns-from-row-values&quot;&gt;T-SQL Pivot? Possibility of creating table columns from row values&lt;/a&gt;&lt;/p&gt;\n    ","slug":"mysql-pivot-row-into-dynamic-number-of-columns-1657387981930","postType":"QUESTION","createdAt":"2022-07-09T17:33:01.000Z","updatedAt":"2022-07-09T17:33:01.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How do I list all files of a directory?","slug":"how-do-i-list-all-files-of-a-directory-1657388340404"},{"title":"How to use PHP's password_hash to hash and verify passwords","slug":"how-to-use-php's-password_hash-to-hash-and-verify-passwords-1657387808784"},{"title":"What's the simplest way to print a Java array?","slug":"what's-the-simplest-way-to-print-a-java-array-1657384702397"},{"title":"Why do we always prefer using parameters in SQL statements?","slug":"why-do-we-always-prefer-using-parameters-in-sql-statements-1657388031476"},{"title":"How to deal with mysqli problems? mysqli_fetch_array(): Argument #1 must be of type mysqli_result","slug":"how-to-deal-with-mysqli-problems-mysqli_fetch_array():-argument-1-must-be-of-type-mysqli_result-1657384360922"},{"title":"How do I clone a list so that it doesn't change unexpectedly after assignment?","slug":"how-do-i-clone-a-list-so-that-it-doesn't-change-unexpectedly-after-assignment-1657384423195"},{"title":"When should I use a return statement in ES6 arrow functions","slug":"when-should-i-use-a-return-statement-in-es6-arrow-functions-1657388472113"},{"title":"How to lazy load images in ListView in Android","slug":"how-to-lazy-load-images-in-listview-in-android-1657387332835"},{"title":"How to get the difference between two arrays in JavaScript?","slug":"how-to-get-the-difference-between-two-arrays-in-javascript-1657388463384"},{"title":"Numbering rows within groups in a data frame","slug":"numbering-rows-within-groups-in-a-data-frame-1657388556436"},{"title":"Self-references in object literals / initializers","slug":"self-references-in-object-literals-initializers-1657384835356"},{"title":"How to determine equality for two JavaScript objects?","slug":"how-to-determine-equality-for-two-javascript-objects-1657387638650"},{"title":"Calculate distance between two latitude-longitude points? (Haversine formula)","slug":"calculate-distance-between-two-latitude-longitude-points-(haversine-formula)-1657388500103"},{"title":"Why is 24.0000 not equal to 24.0000 in MATLAB?","slug":"why-is-24.0000-not-equal-to-24.0000-in-matlab-1657388376753"},{"title":"How do you use a variable in a regular expression?","slug":"how-do-you-use-a-variable-in-a-regular-expression-1657387939007"},{"title":"My attempt at value initialization is interpreted as a function declaration, and why doesn't A a(()); solve it?","slug":"my-attempt-at-value-initialization-is-interpreted-as-a-function-declaration-and-why-doesn't-a-a(())-solve-it-1657388474057"},{"title":"Why does a RegExp with global flag give wrong results?","slug":"why-does-a-regexp-with-global-flag-give-wrong-results-1657387788550"},{"title":"How to add JTable in JPanel with null layout?","slug":"how-to-add-jtable-in-jpanel-with-null-layout-1657384590912"},{"title":"How do I revert a Git repository to a previous commit?","slug":"how-do-i-revert-a-git-repository-to-a-previous-commit-1657387714717"},{"title":"RegEx match open tags except XHTML self-contained tags","slug":"regex-match-open-tags-except-xhtml-self-contained-tags-1657384228245"}]},"__N_SSG":true}