{"pageProps":{"data":{"answer":["\n&lt;p&gt;Unfortunately MySQL does not have a &lt;code&gt;PIVOT&lt;/code&gt; function which is basically what you are trying to do. So you will need to use an aggregate function with a &lt;code&gt;CASE&lt;/code&gt; statement:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; pt.partner_name,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product A&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductA,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product B&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductB,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product C&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductC,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product D&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductD,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; pd.product_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Product E&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;) ProductE\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; partners pt\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; sales s\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; pt.part_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; s.partner_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; products pd\n  &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; s.product_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; pd.prod_id\n&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; pt.partner_name\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://www.db-fiddle.com/f/8SLRh8FtxC1KPbZUazt7TH/0&quot; rel=&quot;noreferrer&quot;&gt;SQL Demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Since you do not know the Products you will probably want to perform this dynamically. This can be done using prepared statements. &lt;/p&gt;\n\n&lt;p&gt;With dynamic pivot tables (transform rows to columns) your code would look like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  GROUP_CONCAT(&lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt;\n    CONCAT(\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;count(case when Product_Name = &apos;&apos;&apos;&lt;/span&gt;,\n      Product_Name,\n      &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos; then 1 end) AS &apos;&lt;/span&gt;,\n      replace(Product_Name, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n    )\n  ) &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; products;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CONCAT(&lt;span class=&quot;hljs-string&quot;&gt;&apos;SELECT pt.partner_name, &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; from partners pt\nleft join sales s\n  on pt.part_id = s.partner_id\nleft join products pd\n  on s.product_id = pd.prod_id\ngroup by pt.partner_name&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@sql&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;EXECUTE&lt;/span&gt; stmt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;DEALLOCATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PREPARE&lt;/span&gt; stmt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://www.db-fiddle.com/f/nDe3oQ3VdtfS5QDokieHN4/0&quot; rel=&quot;noreferrer&quot;&gt;SQL Demo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&apos;s probably worth noting that &lt;code&gt;GROUP_CONCAT&lt;/code&gt; is by default limited to 1024 bytes. You can work around this by setting it higher for the duration of your procedure, ie. &lt;code&gt;SET @@group_concat_max_len = 32000;&lt;/code&gt; &lt;/p&gt;\n    "],"id":438,"title":"MySQL pivot row into dynamic number of columns","content":"\n                \n&lt;p&gt;Lets say I have three different MySQL tables:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;products&lt;/code&gt;:&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name\n &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Product A\n &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Product B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;partners&lt;/code&gt;:&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name\n &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   Partner A\n &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   Partner B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Table &lt;code&gt;sales&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;partners_id &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; products_id\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I would like to get a table with partners in the rows and products as columns. So far I was able to get an output like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; name      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;( &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; )\nPartner A   Product A          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product B          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product C          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product D          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner A   Product E          &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\nPartner B   Product B          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product C          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product D          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nPartner B   Product E          &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using this query:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; partners.name, products.name, &lt;span class=&quot;hljs-built_in&quot;&gt;COUNT&lt;/span&gt;( &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; ) \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; sales\n&lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; products &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; sales.products_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; products.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; partners &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; sales.partners_id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; partners.id\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; sales.partners_id, sales.products_id\nLIMIT &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; , &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I would like to have instead something like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;partner_name &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product A &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product B &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product C &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product D &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Product E\nPartner A              &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\nPartner B              &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The problem is that I cannot tell how many products I will have so the column number needs to change dynamically depending on the rows in the products table. &lt;/p&gt;\n\n&lt;p&gt;This very good answer does not seem to work with mysql: &lt;a href=&quot;https://stackoverflow.com/questions/2922797/t-sql-pivot-possibility-of-creating-table-columns-from-row-values&quot;&gt;T-SQL Pivot? Possibility of creating table columns from row values&lt;/a&gt;&lt;/p&gt;\n    ","slug":"mysql-pivot-row-into-dynamic-number-of-columns-1657387981930","postType":"QUESTION","createdAt":"2022-07-09T17:33:01.000Z","updatedAt":"2022-07-09T17:33:01.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How do function pointers in C work?","slug":"how-do-function-pointers-in-c-work-1657388332074"},{"title":"What does ** (double star/asterisk) and * (star/asterisk) do for parameters?","slug":"what-does-**-(double-starasterisk)-and-*-(starasterisk)-do-for-parameters-1657384800967"},{"title":"What to do Regular expression pattern doesn't match anywhere in string?","slug":"what-to-do-regular-expression-pattern-doesn't-match-anywhere-in-string-1657388095896"},{"title":"Do I cast the result of malloc?","slug":"do-i-cast-the-result-of-malloc-1657384271583"},{"title":"Sort a Map<Key, Value> by values","slug":"sort-a-maplesskey-valuegreater-by-values-1657387443904"},{"title":"What are the rules about using an underscore in a C++ identifier?","slug":"what-are-the-rules-about-using-an-underscore-in-a-c++-identifier-1657384557197"},{"title":"What is a StackOverflowError?","slug":"what-is-a-stackoverflowerror-1657388319634"},{"title":"Pandas Merging 101","slug":"pandas-merging-101-1657384447080"},{"title":"input() error - NameError: name '...' is not defined","slug":"input()-error-nameerror:-name-'...'-is-not-defined-1657388497243"},{"title":"\"Notice: Undefined variable\", \"Notice: Undefined index\", \"Warning: Undefined array key\", and \"Notice: Undefined offset\" using PHP","slug":"\"notice:-undefined-variable\"-\"notice:-undefined-index\"-\"warning:-undefined-array-key\"-and-\"notice:-undefined-offset\"-using-php-1657384250748"},{"title":"How do I convert an existing callback API to promises?","slug":"how-do-i-convert-an-existing-callback-api-to-promises-1657384694006"},{"title":"Using Auto Layout in UITableView for dynamic cell layouts & variable row heights","slug":"using-auto-layout-in-uitableview-for-dynamic-cell-layouts-and-variable-row-heights-1657387722263"},{"title":"Dynamically select data frame columns using $ and a character value","slug":"dynamically-select-data-frame-columns-using-dollar-and-a-character-value-1657387836662"},{"title":"Use a content script to access the page context variables and functions","slug":"use-a-content-script-to-access-the-page-context-variables-and-functions-1657384842444"},{"title":"Servlet returns \"HTTP Status 404 The requested resource (/servlet) is not available\"","slug":"servlet-returns-\"http-status-404-the-requested-resource-(servlet)-is-not-available\"-1657384850661"},{"title":"What is the difference between __str__ and __repr__?","slug":"what-is-the-difference-between-__str__-and-__repr__-1657387738760"},{"title":"How does the Windows Command Interpreter (CMD.EXE) parse scripts?","slug":"how-does-the-windows-command-interpreter-(cmd.exe)-parse-scripts-1657387731560"},{"title":"How can I pivot a dataframe?","slug":"how-can-i-pivot-a-dataframe-1657384433802"},{"title":"Why does this PDO statement silently fail?","slug":"why-does-this-pdo-statement-silently-fail-1657384892133"},{"title":"What is a NullPointerException, and how do I fix it?","slug":"what-is-a-nullpointerexception-and-how-do-i-fix-it-1657384201768"}]},"__N_SSG":true}