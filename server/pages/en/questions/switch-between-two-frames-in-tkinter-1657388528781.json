{"pageProps":{"data":{"answer":["\n&lt;p&gt;One way is to stack the frames on top of each other, then you can simply raise one above the other in the stacking order. The one on top will be the one that is visible. This works best if all the frames are the same size, but with a little work you can get it to work with any sized frames.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: for this to work, all of the widgets for a page must have that page (ie: &lt;code&gt;self&lt;/code&gt;) or a descendant as a parent (or master, depending on the terminology you prefer).&lt;/p&gt;\n&lt;p&gt;Here&apos;s a bit of a contrived example to show you the general concept:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tk                &lt;span class=&quot;hljs-comment&quot;&gt;# python 3&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; font &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tkfont  &lt;span class=&quot;hljs-comment&quot;&gt;# python 3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;except&lt;/span&gt; ImportError:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; Tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tk     &lt;span class=&quot;hljs-comment&quot;&gt;# python 2&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; tkFont &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tkfont  &lt;span class=&quot;hljs-comment&quot;&gt;# python 2&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SampleApp&lt;/span&gt;(tk.Tk):\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, *args, **kwargs&lt;/span&gt;):\n        tk.Tk.__init__(self, *args, **kwargs)\n\n        self.title_font = tkfont.Font(family=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Helvetica&apos;&lt;/span&gt;, size=&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt;, weight=&lt;span class=&quot;hljs-string&quot;&gt;&quot;bold&quot;&lt;/span&gt;, slant=&lt;span class=&quot;hljs-string&quot;&gt;&quot;italic&quot;&lt;/span&gt;)\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;# the container is where we&apos;ll stack a bunch of frames&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# on top of each other, then the one we want visible&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;# will be raised above the others&lt;/span&gt;\n        container = tk.Frame(self)\n        container.pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;, fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;both&quot;&lt;/span&gt;, expand=&lt;span class=&quot;hljs-literal&quot;&gt;True&lt;/span&gt;)\n        container.grid_rowconfigure(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, weight=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n        container.grid_columnconfigure(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, weight=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n\n        self.frames = {}\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; F &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (StartPage, PageOne, PageTwo):\n            page_name = F.__name__\n            frame = F(parent=container, controller=self)\n            self.frames[page_name] = frame\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;# put all of the pages in the same location;&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;# the one on the top of the stacking order&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;# will be the one that is visible.&lt;/span&gt;\n            frame.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, sticky=&lt;span class=&quot;hljs-string&quot;&gt;&quot;nsew&quot;&lt;/span&gt;)\n\n        self.show_frame(&lt;span class=&quot;hljs-string&quot;&gt;&quot;StartPage&quot;&lt;/span&gt;)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;show_frame&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, page_name&lt;/span&gt;):\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&apos;Show a frame for the given page name&apos;&apos;&apos;&lt;/span&gt;\n        frame = self.frames[page_name]\n        frame.tkraise()\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StartPage&lt;/span&gt;(tk.Frame):\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, parent, controller&lt;/span&gt;):\n        tk.Frame.__init__(self, parent)\n        self.controller = controller\n        label = tk.Label(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is the start page&quot;&lt;/span&gt;, font=controller.title_font)\n        label.pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;, fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n\n        button1 = tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Go to Page One&quot;&lt;/span&gt;,\n                            command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: controller.show_frame(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PageOne&quot;&lt;/span&gt;))\n        button2 = tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Go to Page Two&quot;&lt;/span&gt;,\n                            command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: controller.show_frame(&lt;span class=&quot;hljs-string&quot;&gt;&quot;PageTwo&quot;&lt;/span&gt;))\n        button1.pack()\n        button2.pack()\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageOne&lt;/span&gt;(tk.Frame):\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, parent, controller&lt;/span&gt;):\n        tk.Frame.__init__(self, parent)\n        self.controller = controller\n        label = tk.Label(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is page 1&quot;&lt;/span&gt;, font=controller.title_font)\n        label.pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;, fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n        button = tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Go to the start page&quot;&lt;/span&gt;,\n                           command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: controller.show_frame(&lt;span class=&quot;hljs-string&quot;&gt;&quot;StartPage&quot;&lt;/span&gt;))\n        button.pack()\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageTwo&lt;/span&gt;(tk.Frame):\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, parent, controller&lt;/span&gt;):\n        tk.Frame.__init__(self, parent)\n        self.controller = controller\n        label = tk.Label(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is page 2&quot;&lt;/span&gt;, font=controller.title_font)\n        label.pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;, fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n        button = tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Go to the start page&quot;&lt;/span&gt;,\n                           command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: controller.show_frame(&lt;span class=&quot;hljs-string&quot;&gt;&quot;StartPage&quot;&lt;/span&gt;))\n        button.pack()\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;hljs-string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:\n    app = SampleApp()\n    app.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/w1sVH.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/w1sVH.png&quot; alt=&quot;start page&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://i.stack.imgur.com/xH5w5.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/xH5w5.png&quot; alt=&quot;page 1&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://i.stack.imgur.com/339hd.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/339hd.png&quot; alt=&quot;page 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;If you find the concept of creating instance in a class confusing, or if different pages need different arguments during construction, you can explicitly call each class separately. The loop serves mainly to illustrate the point that each class is identical.&lt;/p&gt;\n&lt;p&gt;For example, to create the classes individually you can remove the loop (&lt;code&gt;for F in (StartPage, ...)&lt;/code&gt; with this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;self.frames[&lt;span class=&quot;hljs-string&quot;&gt;&quot;StartPage&quot;&lt;/span&gt;] = StartPage(parent=container, controller=self)\nself.frames[&lt;span class=&quot;hljs-string&quot;&gt;&quot;PageOne&quot;&lt;/span&gt;] = PageOne(parent=container, controller=self)\nself.frames[&lt;span class=&quot;hljs-string&quot;&gt;&quot;PageTwo&quot;&lt;/span&gt;] = PageTwo(parent=container, controller=self)\n\nself.frames[&lt;span class=&quot;hljs-string&quot;&gt;&quot;StartPage&quot;&lt;/span&gt;].grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, sticky=&lt;span class=&quot;hljs-string&quot;&gt;&quot;nsew&quot;&lt;/span&gt;)\nself.frames[&lt;span class=&quot;hljs-string&quot;&gt;&quot;PageOne&quot;&lt;/span&gt;].grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, sticky=&lt;span class=&quot;hljs-string&quot;&gt;&quot;nsew&quot;&lt;/span&gt;)\nself.frames[&lt;span class=&quot;hljs-string&quot;&gt;&quot;PageTwo&quot;&lt;/span&gt;].grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, sticky=&lt;span class=&quot;hljs-string&quot;&gt;&quot;nsew&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Over time people have asked other questions using this code (or an online tutorial that copied this code) as a starting point. You might want to read the answers to these questions:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/32864610/7432&quot;&gt;Understanding parent and controller in Tkinter __init__&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/34301300/7432&quot;&gt;Tkinter! Understanding how to switch frames&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/32212408/7432&quot;&gt;How to get variable data from a class&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/48731097/7432&quot;&gt;Calling functions from a Tkinter Frame to another&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/33646605/7432&quot;&gt;How to access variables from different classes in tkinter?&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/35029188/7432&quot;&gt;How would I make a method which is run every time a frame is shown in tkinter&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/35991126/7432&quot;&gt;Tkinter Frame Resize&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/39530107/7432&quot;&gt;Tkinter have code for pages in separate files&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/q/45064732/7432&quot;&gt;Refresh a tkinter frame on button press&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Here is another simple answer, but without using classes.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; *\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;raise_frame&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;frame&lt;/span&gt;):\n    frame.tkraise()\n\nroot = Tk()\n\nf1 = Frame(root)\nf2 = Frame(root)\nf3 = Frame(root)\nf4 = Frame(root)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; frame &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; (f1, f2, f3, f4):\n    frame.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, sticky=&lt;span class=&quot;hljs-string&quot;&gt;&apos;news&apos;&lt;/span&gt;)\n\nButton(f1, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Go to frame 2&apos;&lt;/span&gt;, command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;:raise_frame(f2)).pack()\nLabel(f1, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;FRAME 1&apos;&lt;/span&gt;).pack()\n\nLabel(f2, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;FRAME 2&apos;&lt;/span&gt;).pack()\nButton(f2, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Go to frame 3&apos;&lt;/span&gt;, command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;:raise_frame(f3)).pack()\n\nLabel(f3, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;FRAME 3&apos;&lt;/span&gt;).pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\nButton(f3, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Go to frame 4&apos;&lt;/span&gt;, command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;:raise_frame(f4)).pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;)\n\nLabel(f4, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;FRAME 4&apos;&lt;/span&gt;).pack()\nButton(f4, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Goto to frame 1&apos;&lt;/span&gt;, command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;:raise_frame(f1)).pack()\n\nraise_frame(f1)\nroot.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;https://stackoverflow.com/questions/7546050/switch-between-two-frames-in-tkinter/49325719#comment103814940_49325719&quot;&gt;According to JDN96&lt;/a&gt;, the answer below may cause a &lt;a href=&quot;https://stackoverflow.com/questions/14408521/perl-tk-memory-leak-when-using-destroy-command&quot;&gt;memory leak&lt;/a&gt; by repeatedly destroying and recreating frames. However, I have not tested to verify this myself.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;One way to switch frames in &lt;code&gt;tkinter&lt;/code&gt; is to destroy the old frame then replace it with your new frame.&lt;/p&gt;\n&lt;p&gt;I have modified &lt;a href=&quot;https://stackoverflow.com/a/7557028/3357935&quot;&gt;Bryan Oakley&apos;s&lt;/a&gt; answer to destroy the old frame before replacing it. As an added bonus, this eliminates the need for a &lt;code&gt;container&lt;/code&gt; object and allows you to use any generic &lt;code&gt;Frame&lt;/code&gt; class.&lt;/p&gt;\n&lt;pre class=&quot;lang-python s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# Multi-frame tkinter application v2.3&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tk\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SampleApp&lt;/span&gt;(tk.Tk):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        tk.Tk.__init__(self)\n        self._frame = &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;\n        self.switch_frame(StartPage)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;switch_frame&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, frame_class&lt;/span&gt;):\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&quot;Destroys current frame and replaces it with a new one.&quot;&quot;&quot;&lt;/span&gt;\n        new_frame = frame_class(self)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; self._frame &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;:\n            self._frame.destroy()\n        self._frame = new_frame\n        self._frame.pack()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;StartPage&lt;/span&gt;(tk.Frame):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, master&lt;/span&gt;):\n        tk.Frame.__init__(self, master)\n        tk.Label(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is the start page&quot;&lt;/span&gt;).pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;, fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n        tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Open page one&quot;&lt;/span&gt;,\n                  command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: master.switch_frame(PageOne)).pack()\n        tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Open page two&quot;&lt;/span&gt;,\n                  command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: master.switch_frame(PageTwo)).pack()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageOne&lt;/span&gt;(tk.Frame):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, master&lt;/span&gt;):\n        tk.Frame.__init__(self, master)\n        tk.Label(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is page one&quot;&lt;/span&gt;).pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;, fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n        tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Return to start page&quot;&lt;/span&gt;,\n                  command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: master.switch_frame(StartPage)).pack()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PageTwo&lt;/span&gt;(tk.Frame):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, master&lt;/span&gt;):\n        tk.Frame.__init__(self, master)\n        tk.Label(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;This is page two&quot;&lt;/span&gt;).pack(side=&lt;span class=&quot;hljs-string&quot;&gt;&quot;top&quot;&lt;/span&gt;, fill=&lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, pady=&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)\n        tk.Button(self, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Return to start page&quot;&lt;/span&gt;,\n                  command=&lt;span class=&quot;hljs-keyword&quot;&gt;lambda&lt;/span&gt;: master.switch_frame(StartPage)).pack()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;hljs-string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:\n    app = SampleApp()\n    app.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/TTUxb.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/TTUxb.png&quot; alt=&quot;Start page&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://i.stack.imgur.com/jqkOn.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/jqkOn.png&quot; alt=&quot;Page one&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://i.stack.imgur.com/DKDqA.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/DKDqA.png&quot; alt=&quot;Page two&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;h3&gt;Explanation&lt;/h3&gt;\n&lt;p&gt;&lt;code&gt;switch_frame()&lt;/code&gt; works by accepting any Class object that implements &lt;a href=&quot;http://effbot.org/tkinterbook/frame.htm&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Frame&lt;/code&gt;&lt;/a&gt;. The function then creates a new frame to replace the old one.&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Deletes old &lt;code&gt;_frame&lt;/code&gt; if it exists, then replaces it with the new frame.&lt;/li&gt;\n&lt;li&gt;Other frames added with &lt;code&gt;.pack()&lt;/code&gt;, such as menubars, will be unaffected.&lt;/li&gt;\n&lt;li&gt;Can be used with any class that implements &lt;code&gt;tkinter.Frame&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Window automatically resizes to fit new content&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;Version History&lt;/h3&gt;\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;v2.3\n\n- Pack buttons and labels as they are initialized\n\nv2.2\n\n- Initialize `_frame` as `None`.\n- Check if `_frame` is `None` before calling `.destroy()`.\n\nv2.1.1\n\n- Remove type-hinting for backwards compatibility with Python 3.4.\n\nv2.1\n\n- Add type-hinting for `frame_class`.\n\nv2.0\n\n- Remove extraneous `container` frame.\n    - Application now works with any generic `tkinter.frame` instance.\n- Remove `controller` argument from frame classes.\n    - Frame switching is now done with `master.switch_frame()`.\n\nv1.6\n\n- Check if frame attribute exists before destroying it.\n- Use `switch_frame()` to set first frame.\n\nv1.5\n\n  - Revert &apos;Initialize new `_frame` after old `_frame` is destroyed&apos;.\n      - Initializing the frame before calling `.destroy()` results\n        in a smoother visual transition.\n\nv1.4\n\n- Pack frames in `switch_frame()`.\n- Initialize new `_frame` after old `_frame` is destroyed.\n    - Remove `new_frame` variable.\n\nv1.3\n\n- Rename `parent` to `master` for consistency with base `Frame` class.\n\nv1.2\n\n- Remove `main()` function.\n\nv1.1\n\n- Rename `frame` to `_frame`.\n    - Naming implies variable should be private.\n- Create new frame before destroying old frame.\n\nv1.0\n\n- Initial version.\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Perhaps a more intuitive solution would be to hide/unhide frames using the &lt;code&gt;pack_forget&lt;/code&gt; method if you are using the &lt;code&gt;pack&lt;/code&gt; geometry manager.&lt;/p&gt;\n&lt;p&gt;Here&apos;s a simple example.&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; tk\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;App&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, root=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n        self.root = root\n        self.frame = tk.Frame(self.root)\n        self.frame.pack()\n        tk.Label(self.frame, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Main page&apos;&lt;/span&gt;).pack()\n        tk.Button(self.frame, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Go to Page 1&apos;&lt;/span&gt;,\n                  command=self.make_page_1).pack()\n        self.page_1 = Page_1(master=self.root, app=self)\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main_page&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.frame.pack()\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;make_page_1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.frame.pack_forget()\n        self.page_1.start_page()\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Page_1&lt;/span&gt;:\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self, master=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;, app=&lt;span class=&quot;hljs-literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;):\n        self.master = master\n        self.app = app\n        self.frame = tk.Frame(self.master)\n        tk.Label(self.frame, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Page 1&apos;&lt;/span&gt;).pack()\n        tk.Button(self.frame, text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;Go back&apos;&lt;/span&gt;, command=self.go_back).pack()\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;start_page&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.frame.pack()\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;go_back&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;self&lt;/span&gt;):\n        self.frame.pack_forget()\n        self.app.main_page()\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;hljs-string&quot;&gt;&apos;__main__&apos;&lt;/span&gt;:\n    root = tk.Tk()\n    app = App(root)\n    root.mainloop()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/0nfnn.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/0nfnn.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/laRow.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/laRow.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    "],"id":597,"title":"Switch between two frames in tkinter?","content":"\n                \n&lt;p&gt;I have built my first few scripts with a nice little GUI on them, as the tutorials have shown me, but none of them address what to do for a more complex program. &lt;/p&gt;\n\n&lt;p&gt;If you have something with a &apos;start menu&apos;, for your opening screen, and upon user selection you move to a different section of the program and redraw the screen appropriately, what is the elegant way of doing this? &lt;/p&gt;\n\n&lt;p&gt;Does one just &lt;code&gt;.destroy()&lt;/code&gt; the &apos;start menu&apos; frame and then create a new one filled with the widgets for another part? And reverse this process when they press the back button?&lt;/p&gt;\n    ","slug":"switch-between-two-frames-in-tkinter-1657388528781","postType":"QUESTION","createdAt":"2022-07-09T17:42:08.000Z","updatedAt":"2022-07-09T17:42:08.000Z","tags":[{"id":2839,"name":"frame","slug":"frame","createdAt":"2022-07-09T17:42:08.000Z","updatedAt":"2022-07-09T17:42:08.000Z","Questions_Tags":{"questionId":597,"tagId":2839}}],"relatedQuestions":[{"title":"Switch between two frames in tkinter?","slug":"switch-between-two-frames-in-tkinter-1657388528781","tags":[{"name":"frame","Questions_Tags":{"questionId":597,"tagId":2839}}]}]},"randomQuestions":[{"title":"Difference between sh and Bash","slug":"difference-between-sh-and-bash-1657388197713"},{"title":"Is there a difference between \"==\" and \"is\"?","slug":"is-there-a-difference-between-\"\"-and-\"is\"-1657387902231"},{"title":"Use of 'prototype' vs. 'this' in JavaScript?","slug":"use-of-'prototype'-vs.-'this'-in-javascript-1657388117307"},{"title":"How do I properly clean up Excel interop objects?","slug":"how-do-i-properly-clean-up-excel-interop-objects-1657388329706"},{"title":"Why should there be spaces around '[' and ']' in Bash?","slug":"why-should-there-be-spaces-around-''-and-''-in-bash-1657387984122"},{"title":"Deserialize JSON into C# dynamic object?","slug":"deserialize-json-into-c-dynamic-object-1657388568720"},{"title":"Servlet returns \"HTTP Status 404 The requested resource (/servlet) is not available\"","slug":"servlet-returns-\"http-status-404-the-requested-resource-(servlet)-is-not-available\"-1657384850661"},{"title":"Returning data from async call in Swift function","slug":"returning-data-from-async-call-in-swift-function-1657387469218"},{"title":"Syntax error due to using a reserved word as a table or column name in MySQL","slug":"syntax-error-due-to-using-a-reserved-word-as-a-table-or-column-name-in-mysql-1657384689274"},{"title":"Sort a Map<Key, Value> by values","slug":"sort-a-maplesskey-valuegreater-by-values-1657387443904"},{"title":"Is there a RegExp.escape function in JavaScript?","slug":"is-there-a-regexp.escape-function-in-javascript-1657387606651"},{"title":"Can I bind an array to an IN() condition in a PDO query?","slug":"can-i-bind-an-array-to-an-in()-condition-in-a-pdo-query-1657388382858"},{"title":"How do we control web page caching, across all browsers?","slug":"how-do-we-control-web-page-caching-across-all-browsers-1657387529059"},{"title":"How can I make an AJAX call without jQuery?","slug":"how-can-i-make-an-ajax-call-without-jquery-1657388448955"},{"title":"Sorting an array of objects by property values","slug":"sorting-an-array-of-objects-by-property-values-1657387447490"},{"title":"How do you access the matched groups in a JavaScript regular expression?","slug":"how-do-you-access-the-matched-groups-in-a-javascript-regular-expression-1657388233817"},{"title":"Is there a \"previous sibling\" selector?","slug":"is-there-a-\"previous-sibling\"-selector-1657384771067"},{"title":"Flatten an irregular list of lists","slug":"flatten-an-irregular-list-of-lists-1657387315571"},{"title":"How to avoid using Select in Excel VBA","slug":"how-to-avoid-using-select-in-excel-vba-1657384286300"},{"title":"How can I read inputs as numbers?","slug":"how-can-i-read-inputs-as-numbers-1657384503324"}]},"__N_SSG":true}