{"pageProps":{"data":{"answer":["\n&lt;p&gt;The &lt;code&gt;grid&lt;/code&gt;, &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;place&lt;/code&gt; functions of the &lt;code&gt;Entry&lt;/code&gt; object and of all other widgets returns &lt;code&gt;None&lt;/code&gt;. In python when you do &lt;code&gt;a().b()&lt;/code&gt;, the result of the expression is whatever &lt;code&gt;b()&lt;/code&gt; returns, therefore &lt;code&gt;Entry(...).grid(...)&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;You should split that on to two lines like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;entryBox = Entry(root, width=&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;)\nentryBox.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, sticky=W)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That way you get your &lt;code&gt;Entry&lt;/code&gt; reference stored in &lt;code&gt;entryBox&lt;/code&gt; and it&apos;s laid out like you expect. This has a bonus side effect of making your layout easier to understand and maintain if you collect all of your &lt;code&gt;grid&lt;/code&gt; and/or &lt;code&gt;pack&lt;/code&gt; statements in blocks.&lt;/p&gt;\n    ","\n&lt;p&gt;Change this line:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;entryBox=Entry(root,width=&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;).grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,sticky=W)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;into these two lines:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;entryBox=Entry(root,width=&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;)\nentryBox.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,sticky=W)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Just as you already correctly do for &lt;code&gt;grabBtn&lt;/code&gt;!&lt;/p&gt;\n    ","\n&lt;p&gt;Alternative solution for &lt;code&gt;Python3.8+&lt;/code&gt; versions that allows to put all of this in one line using the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0572/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;walrus operator&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;(entryBox := Entry(root, width=&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;)).grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, sticky=W)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now &lt;code&gt;entryBox&lt;/code&gt; will refer to the &lt;code&gt;Entry&lt;/code&gt; widget and also get packed.&lt;/p&gt;\n&lt;p&gt;For characters per line management I can suggest something like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;(var := Button(\n    text=&lt;span class=&quot;hljs-string&quot;&gt;&apos;fine&apos;&lt;/span&gt;, command=some_func, width=&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;, height=&lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;, activebackground=&lt;span class=&quot;hljs-string&quot;&gt;&apos;grey&apos;&lt;/span&gt;\n)).grid(row=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, columnspan=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, rowspan=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, sticky=&lt;span class=&quot;hljs-string&quot;&gt;&apos;news&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But at that point might as well just do this &quot;normally&quot; (as suggested by other answers)&lt;/p&gt;\n&lt;p&gt;Sources:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0572/&quot; rel=&quot;nofollow noreferrer&quot;&gt;PEP 572 -- Assignment Expressions&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KN2TTiGpDvM&quot; rel=&quot;nofollow noreferrer&quot;&gt;IMO great video explanation about &lt;code&gt;walrus operator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;For &lt;code&gt;entryBox.get()&lt;/code&gt; to access &lt;code&gt;get()&lt;/code&gt; method you need &lt;strong&gt;Entry&lt;/strong&gt; object but &lt;code&gt;Entry(root, width=60).grid(row=2, column=1, sticky=W)&lt;/code&gt; returns None.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;entryBox = Entry(root, width=60)&lt;/code&gt; creates a new Entry Object.&lt;/p&gt;\n&lt;p&gt;Moreover, you won&apos;t need\n&lt;code&gt;entryBox = entryBox.grid(row=2, column=1, sticky=W)&lt;/code&gt; as it will rewrite &lt;code&gt;entryBox&lt;/code&gt; with None&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Just replace &lt;code&gt;entryBox = entryBox.grid(row=2, column=1, sticky=W)&lt;/code&gt;\nwith&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;entryBox = Entry(root, width=&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;)\nentryBox.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, sticky=W)\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":197,"title":"Tkinter: AttributeError: NoneType object has no attribute <attribute name>","content":"\n                \n&lt;p&gt;I&apos;ve created this simple GUI:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; tkinter &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; *\n\nroot = Tk()\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;grabText&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;):\n    &lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(entryBox.get())    \n\nentryBox = Entry(root, width=&lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;).grid(row=&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, sticky=W)\n\ngrabBtn = Button(root, text=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Grab&quot;&lt;/span&gt;)\ngrabBtn.grid(row=&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, column=&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\ngrabBtn.bind(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;Button-1&amp;gt;&apos;&lt;/span&gt;, grabText)\n\nroot.mainloop()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I get the UI up and running. When I click on the &lt;code&gt;Grab&lt;/code&gt; button, I get the following error on the console:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;C:\\Python&amp;gt; python.exe myFiles\\testBed.py\nException &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; Tkinter callback\nTraceback (most recent call last):\n  File &lt;span class=&quot;hljs-string&quot;&gt;&quot;C:\\Python\\lib\\lib-tk\\Tkinter.py&quot;&lt;/span&gt;, line &lt;span class=&quot;hljs-number&quot;&gt;1403&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; __call__\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; self.func(*args)\n  File &lt;span class=&quot;hljs-string&quot;&gt;&quot;myFiles\\testBed.py&quot;&lt;/span&gt;, line &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; grabText\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; entryBox.get().strip()==&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;:\nAttributeError: &lt;span class=&quot;hljs-string&quot;&gt;&apos;NoneType&apos;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;object&lt;/span&gt; has no attribute &lt;span class=&quot;hljs-string&quot;&gt;&apos;get&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Why is &lt;code&gt;entryBox&lt;/code&gt; set to &lt;code&gt;None&lt;/code&gt;?&lt;/p&gt;\n    ","slug":"tkinter:-attributeerror:-nonetype-object-has-no-attribute-lessattribute-namegreater-1657385472410","postType":"QUESTION","createdAt":"2022-07-09T16:51:12.000Z","updatedAt":"2022-07-09T16:51:12.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How can I return pivot table output in MySQL?","slug":"how-can-i-return-pivot-table-output-in-mysql-1657384715043"},{"title":"What are metaclasses in Python?","slug":"what-are-metaclasses-in-python-1657387811608"},{"title":"What is a debugger and how can it help me diagnose problems?","slug":"what-is-a-debugger-and-how-can-it-help-me-diagnose-problems-1657384472469"},{"title":"Creating multiline strings in JavaScript","slug":"creating-multiline-strings-in-javascript-1657388025414"},{"title":"What is dependency injection?","slug":"what-is-dependency-injection-1657387953056"},{"title":"What is an efficient way to implement a singleton pattern in Java? [closed]","slug":"what-is-an-efficient-way-to-implement-a-singleton-pattern-in-java-closed-1657387970474"},{"title":"Using global variables in a function","slug":"using-global-variables-in-a-function-1657384796002"},{"title":"How to access the correct `this` inside a callback","slug":"how-to-access-the-correct-this-inside-a-callback-1657384283261"},{"title":"Loop through an array in JavaScript","slug":"loop-through-an-array-in-javascript-1657387821551"},{"title":"How can I merge properties of two JavaScript objects dynamically?","slug":"how-can-i-merge-properties-of-two-javascript-objects-dynamically-1657387492535"},{"title":"How do I detect a click outside an element?","slug":"how-do-i-detect-a-click-outside-an-element-1657387505351"},{"title":"What is the best regular expression to check if a string is a valid URL?","slug":"what-is-the-best-regular-expression-to-check-if-a-string-is-a-valid-url-1657387618306"},{"title":"\"Thinking in AngularJS\" if I have a jQuery background? [closed]","slug":"\"thinking-in-angularjs\"-if-i-have-a-jquery-background-closed-1657384761159"},{"title":"Why is using the JavaScript eval function a bad idea?","slug":"why-is-using-the-javascript-eval-function-a-bad-idea-1657387485165"},{"title":"Web-scraping JavaScript page with Python","slug":"web-scraping-javascript-page-with-python-1657388240875"},{"title":"Which equals operator (== vs ===) should be used in JavaScript comparisons?","slug":"which-equals-operator-(-vs-)-should-be-used-in-javascript-comparisons-1657384663105"},{"title":"Actual meaning of 'shell=True' in subprocess","slug":"actual-meaning-of-'shelltrue'-in-subprocess-1657388470341"},{"title":"Why does my ArrayList contain N copies of the last item added to the list?","slug":"why-does-my-arraylist-contain-n-copies-of-the-last-item-added-to-the-list-1657387712003"},{"title":"How to filter object array based on attributes?","slug":"how-to-filter-object-array-based-on-attributes-1657388211247"},{"title":"How can I validate an email address in JavaScript?","slug":"how-can-i-validate-an-email-address-in-javascript-1657385475959"}]},"__N_SSG":true}