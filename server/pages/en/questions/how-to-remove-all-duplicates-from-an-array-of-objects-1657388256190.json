{"pageProps":{"data":{"answer":["\n&lt;p&gt;How about with some &lt;code&gt;es6&lt;/code&gt; magic?&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;obj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt; = obj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value, index, self&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n  index === self.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;t&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (\n    t.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt; === value.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt; &amp;amp;&amp;amp; t.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; === value.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;\n  ))\n)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex&quot; rel=&quot;noreferrer&quot;&gt;Reference URL&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;A more generic solution would be:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; uniqueArray = obj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; _value = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(value);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; index === obj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj) === _value;\n  });\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Using the above property strategy instead of &lt;code&gt;JSON.stringify&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isPropValuesEqual&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;subject, target, propNames&lt;/span&gt;) =&amp;gt;\n  propNames.&lt;span class=&quot;hljs-title function_&quot;&gt;every&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;propName&lt;/span&gt; =&amp;gt;&lt;/span&gt; subject[propName] === target[propName]);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueItemsByProperties&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;items, propNames&lt;/span&gt;) =&amp;gt; \n  items.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n    index === array.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;foundItem&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isPropValuesEqual&lt;/span&gt;(foundItem, item, propNames))\n  );\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can add a wrapper if you want the &lt;code&gt;propNames&lt;/code&gt; property to be either an array or a value:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueItemsByProperties&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;items, propNames&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; propNamesArray = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(propNames);\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; items.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item, index, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt;\n    index === array.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;foundItem&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isPropValuesEqual&lt;/span&gt;(foundItem, item, propNamesArray))\n  );\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;allowing both &lt;code&gt;getUniqueItemsByProperties(&apos;a&apos;)&lt;/code&gt; and &lt;code&gt;getUniqueItemsByProperties([&apos;a&apos;]);&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://stackblitz.com/edit/remove-duplicates-from-array-of-objects&quot; rel=&quot;noreferrer&quot;&gt;Stackblitz Example&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Explanation&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Start by understanding the two methods used:\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;noreferrer&quot;&gt;filter&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex&quot; rel=&quot;noreferrer&quot;&gt;findIndex&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;Next take your idea of what makes your two objects equal and keep that in mind.&lt;/li&gt;\n&lt;li&gt;We can detect something as a duplicate, if it satisfies the criterion that we have just thought of, but it&apos;s position is not at the first instance of an object with the criterion.&lt;/li&gt;\n&lt;li&gt;Therefore we can use the above criterion to determine if something is a duplicate.&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;One liners with filter ( Preserves order )&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Find unique &lt;code&gt;id&lt;/code&gt;&apos;s in an array.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v,i,a&lt;/span&gt;)=&amp;gt;&lt;/span&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v2&lt;/span&gt;=&amp;gt;&lt;/span&gt;(v2.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;===v.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;))===i)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If the order is not important, map solutions will be faster: &lt;a href=&quot;https://stackoverflow.com/a/70406623/1602301&quot;&gt;Solution with map&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Unique by multiple properties ( &lt;code&gt;place&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; )&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v,i,a&lt;/span&gt;)=&amp;gt;&lt;/span&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v2&lt;/span&gt;=&amp;gt;&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;place&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;every&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;k&lt;/span&gt;=&amp;gt;&lt;/span&gt;v2[k] ===v[k]))===i)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Unique by all properties (This will be slow for large arrays)&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v,i,a&lt;/span&gt;)=&amp;gt;&lt;/span&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v2&lt;/span&gt;=&amp;gt;&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(v2) === &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(v)))===i)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Keep the last occurrence&lt;/strong&gt; by replacing &lt;code&gt;findIndex&lt;/code&gt; with &lt;code&gt;findLastIndex&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v,i,a&lt;/span&gt;)=&amp;gt;&lt;/span&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;findLastIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v2&lt;/span&gt;=&amp;gt;&lt;/span&gt;(v2.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt; === v.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;))===i)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using &lt;strong&gt;ES6+&lt;/strong&gt; in a single line you can get a unique list of objects by key:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; unique = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item, key&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [item[key], item])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It can be put into a function:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueListBy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; [item[key], item])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()]\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here is a working example:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [\n    {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;other&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;other stuff1&quot;&lt;/span&gt; },\n    {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;other&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;other stuff2&quot;&lt;/span&gt; },\n    {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;y&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;other&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;other stuff4&quot;&lt;/span&gt; },\n    {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;z&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;other&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;other stuff5&quot;&lt;/span&gt; }\n]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueListBy&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, key&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; [item[key], item])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()]\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr1 = &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueListBy&lt;/span&gt;(arr, &lt;span class=&quot;hljs-string&quot;&gt;&apos;place&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Unique by place&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr1))\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;\\nUnique by name&quot;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr2 = &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueListBy&lt;/span&gt;(arr, &lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(arr2))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h3&gt;How does it work&lt;/h3&gt;\n&lt;p&gt;First the array is remapped in a way that it can be used as an input for a  &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot; rel=&quot;noreferrer&quot;&gt;Map.&lt;/a&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;arr.map(item =&amp;gt; [item[key], item]);&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;which means each item of the array will be transformed in another array with 2 elements; the &lt;strong&gt;selected key&lt;/strong&gt; as first element and &lt;strong&gt;the entire initial item&lt;/strong&gt; as second element, this is called an entry (ex. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries&quot; rel=&quot;noreferrer&quot;&gt;array entries&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries&quot; rel=&quot;noreferrer&quot;&gt;map entries&lt;/a&gt;). And &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Relation_with_Array_objects&quot; rel=&quot;noreferrer&quot;&gt;here is the official doc&lt;/a&gt; with an example showing how to add array entries in Map constructor.&lt;/p&gt;\n&lt;p&gt;Example when key is &lt;em&gt;place&lt;/em&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[[&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,  &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;x&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;other&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;other stuff1&quot;&lt;/span&gt; }], ...]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Secondly, we pass this modified array to the Map constructor and here is the magic happening. Map will eliminate the duplicate keys values, keeping only last inserted value of the same key.\n&lt;strong&gt;Note&lt;/strong&gt;: Map keeps the order of insertion. (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Objects_vs._Maps&quot; rel=&quot;noreferrer&quot;&gt;check difference between Map and object&lt;/a&gt;)&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;new Map(entry array just mapped above)&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Third we use the map values to retrieve the original items, but this time without duplicates.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;new Map(mappedArr).values()&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;And last one is to add those values into a fresh new array so that it can look as the initial structure and return that:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;return [...new Map(mappedArr).values()]&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;A primitive method would be:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; obj = {};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len = things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; len; i++) {\n  obj[things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;[i][&lt;span class=&quot;hljs-string&quot;&gt;&apos;place&apos;&lt;/span&gt;]] = things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;[i];\n}\n\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; key &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; obj) { \n   things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(obj[key]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Simple and performant solution with a better runtime&lt;/strong&gt; than the 70+ answers that already exist:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; ids = array.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt; =&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filtered = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;{id}, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt; !ids.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(id, index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;h3&gt;Example:&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;one&apos;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;two&apos;&lt;/span&gt;}, {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;one&apos;&lt;/span&gt;}]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; ids = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt; =&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filtered = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;{id}, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt; !ids.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(id, index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filtered)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h3&gt;How it works:&lt;/h3&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.filter()&lt;/code&gt;&lt;/a&gt; removes all duplicate objects by checking if the previously mapped id-array includes the current id (&lt;code&gt;{id}&lt;/code&gt; destructs the object into only its id). To only filter out actual duplicates, it is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Array.includes()&lt;/code&gt;&lt;/a&gt;&apos;s second parameter &lt;code&gt;fromIndex&lt;/code&gt; with &lt;code&gt;index + 1&lt;/code&gt; which will ignore the current object and all previous.&lt;/p&gt;\n&lt;p&gt;Since every iteration of the &lt;code&gt;filter&lt;/code&gt; callback method will only search the array beginning at the current index + 1, this also dramatically reduces the runtime because only objects not previously filtered get checked.&lt;/p&gt;\n&lt;p&gt;This obviously also works for any other key that is not called &lt;code&gt;id&lt;/code&gt;, multiple or even all keys.&lt;/p&gt;\n    ","\n&lt;p&gt;If you can use Javascript libraries such as &lt;em&gt;underscore&lt;/em&gt; or lodash, I recommend having a look at &lt;code&gt;_.uniq&lt;/code&gt; function in their libraries. From &lt;code&gt;lodash&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;_.&lt;span class=&quot;hljs-title function_&quot;&gt;uniq&lt;/span&gt;(array, [isSorted=&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;], [callback=_.&lt;span class=&quot;hljs-property&quot;&gt;identity&lt;/span&gt;], [thisArg])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Basically, you pass in the array that in here is an object literal and you pass in the attribute that you want to remove duplicates with in the original data array, like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = [{&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Amir&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Rahnama&apos;&lt;/span&gt;}, {&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Amir&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;surname&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Stevens&apos;&lt;/span&gt;}];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; non_duplidated_data = _.&lt;span class=&quot;hljs-title function_&quot;&gt;uniq&lt;/span&gt;(data, &lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;); \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Lodash now has introduced a &lt;code&gt;.uniqBy&lt;/code&gt; as well. &lt;/p&gt;\n    ","\n&lt;p&gt;I had this exact same requirement, to remove duplicate objects in a array, based on duplicates on a single field.  I found the code here: &lt;a href=&quot;http://www.tjcafferkey.me/remove-duplicates-from-array-of-objects/&quot; rel=&quot;noreferrer&quot;&gt;Javascript: Remove Duplicates from Array of Objects&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So in my example, I&apos;m removing any object from the array that has a duplicate licenseNum string value.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrayWithDuplicates = [\n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;12345&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;state&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;NV&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;A7846&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;state&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;CA&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;12345&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;state&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;OR&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;10849&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;state&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;CA&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;B7037&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;state&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;WA&quot;&lt;/span&gt;},\n    {&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;12345&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;state&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;NM&quot;&lt;/span&gt;}\n];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;originalArray, prop&lt;/span&gt;) {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newArray = [];\n     &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; lookupObject  = {};\n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; originalArray) {\n        lookupObject[originalArray[i][prop]] = originalArray[i];\n     }\n\n     &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; lookupObject) {\n         newArray.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(lookupObject[i]);\n     }\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; newArray;\n }\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uniqueArray = &lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(arrayWithDuplicates, &lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;uniqueArray is: &quot;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(uniqueArray));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The results:&lt;/p&gt;\n\n&lt;p&gt;uniqueArray is: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[{&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;10849&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;state&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;CA&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;12345&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;state&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;NM&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;A7846&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;state&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;CA&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-string&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;licenseNum&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;B7037&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;state&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;WA&quot;&lt;/span&gt;}]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One liner using Set&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; things = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;();\n\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;});\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;});\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// assign things.thing to myData for brevity&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myData = things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;;\n\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt; = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(myData.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;stringify&lt;/span&gt;))).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;parse&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Explanation:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;new Set(myData.map(JSON.stringify))&lt;/code&gt; creates a &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;noreferrer&quot;&gt;Set&lt;/a&gt; object using the stringified myData elements. &lt;/li&gt;\n&lt;li&gt;Set object will ensure that every element is unique. &lt;/li&gt;\n&lt;li&gt;Then I create an array based on the elements of the created set using Array.from. &lt;/li&gt;\n&lt;li&gt;Finally, I use JSON.parse to convert stringified element back to an object.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;ES6 one liner is here&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; arr = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;sravan ganji&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;pinky&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;mammu&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;avy&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;rashni&quot;&lt;/span&gt;},\n];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc,cur&lt;/span&gt;)=&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;assign&lt;/span&gt;(acc,{[cur.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;]:cur}),{})))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;To remove all duplicates from an array of objects, the simplest way is use &lt;code&gt;filter&lt;/code&gt;:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uniq = {};\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr  = [{&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;},{&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;}];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arrFiltered = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; !uniq[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] &amp;amp;&amp;amp; (uniq[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;arrFiltered&apos;&lt;/span&gt;, arrFiltered);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s another option to do it using Array iterating methods if you need comparison only by one field of an object:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniq&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, param&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item, pos, array&lt;/span&gt;){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;mapItem&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mapItem[param]; }).&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(item[param]) === pos;\n        })\n    }\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;uniq&lt;/span&gt;(things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;place&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is a generic way of doing this: you pass in a function that tests whether two elements of an array are considered equal. In this case, it compares the values of the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;place&lt;/code&gt; properties of the two objects being compared.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;ES5 answer&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, equals&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; originalArr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i, len, val;\n    arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len = originalArr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; len; ++i) {\n        val = originalArr[i];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!arr.&lt;span class=&quot;hljs-title function_&quot;&gt;some&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(item, val); })) {\n            arr.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(val);\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;thingsEqual&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;thing1, thing2&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; thing1.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt; === thing2.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;\n        &amp;amp;&amp;amp; thing1.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; === thing2.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; things = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;}\n];\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(things, thingsEqual);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(things);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Original ES3 answer&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arrayContains&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, val, equals&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (i--) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( &lt;span class=&quot;hljs-title function_&quot;&gt;equals&lt;/span&gt;(arr[i], val) ) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, equals&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; originalArr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i, len, j, val;\n    arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, len = originalArr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; len; ++i) {\n        val = originalArr[i];\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;hljs-title function_&quot;&gt;arrayContains&lt;/span&gt;(arr, val, equals)) {\n            arr.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(val);\n        }\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;thingsEqual&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;thing1, thing2&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; thing1.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt; === thing2.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;\n        &amp;amp;&amp;amp; thing1.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; === thing2.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;;\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;, thingsEqual);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you can wait to eliminate the duplicates until after all the additions, the typical approach is to first sort the array and then eliminate duplicates. The sorting avoids the N * N approach of scanning the array for each element as you walk through them.&lt;/p&gt;\n\n&lt;p&gt;The &quot;eliminate duplicates&quot; function is usually called &lt;strong&gt;unique&lt;/strong&gt; or &lt;strong&gt;uniq&lt;/strong&gt;. Some existing implementations may combine the two steps, e.g., &lt;a href=&quot;http://prototypejs.org/doc/latest/language/Array/prototype/uniq/&quot; rel=&quot;noreferrer&quot;&gt;prototype&apos;s uniq&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://www.martienus.com/code/javascript-remove-duplicates-from-array.html&quot; rel=&quot;noreferrer&quot;&gt;This post&lt;/a&gt; has few ideas to try (and some to avoid :-) ) &lt;em&gt;if your library doesn&apos;t already have one&lt;/em&gt;! Personally I find this one the most straight forward:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;){\n        a.&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;lt; a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(a[i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == a[i]){\n                a.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                i++;\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n    }  \n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Provide your own comparison&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a, compareFunc&lt;/span&gt;){\n        a.&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;( compareFunc );\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; i &amp;lt; a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; ){\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;compareFunc&lt;/span&gt;(a[i-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], a[i]) === &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){\n                a.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n                i++;\n            }\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I think the best approach is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&quot; rel=&quot;noreferrer&quot;&gt;reduce&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot; rel=&quot;noreferrer&quot;&gt;Map object&lt;/a&gt;. &lt;strong&gt;This is a single line solution.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;David&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Mark&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Lora&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tyler&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Donald&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Adrian&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Michael&apos;&lt;/span&gt;}\n]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; uniqueData = [...data.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;map, obj&lt;/span&gt;) =&amp;gt;&lt;/span&gt; map.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;, obj), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(uniqueData)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;/*\n  in `map.set(obj.id, obj)`\n  \n  &apos;obj.id&apos; is key. (don&apos;t worry. we&apos;ll get only values using the .values() method)\n  &apos;obj&apos; is whole object.\n*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;One liners with Map ( High performance, Does not preserve order )&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Find unique &lt;code&gt;id&lt;/code&gt;&apos;s in array &lt;code&gt;arr&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrUniq = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; [v.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;, v])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If the order is important check out the solution with filter: &lt;a href=&quot;https://stackoverflow.com/a/56757215/1602301&quot;&gt;Solution with filter&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;Unique by multiple properties ( &lt;code&gt;place&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; ) in array &lt;code&gt;arr&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrUniq = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; [&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;([v.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;,v.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;]), v])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Unique by all properties in array &lt;code&gt;arr&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrUniq = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; [&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(v), v])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Keep the first occurrence in array &lt;code&gt;arr&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arrUniq = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(arr.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;reverse&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; [v.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;, v])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()].&lt;span class=&quot;hljs-title function_&quot;&gt;reverse&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Dang, kids, let&apos;s crush this thing down, why don&apos;t we?&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; uniqIds = {}, source = [{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;c&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;},{&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&apos;d&apos;&lt;/span&gt;}];\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; filtered = source.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; !uniqIds[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] &amp;amp;&amp;amp; (uniqIds[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filtered);\n&lt;span class=&quot;hljs-comment&quot;&gt;// EXPECTED: [{id:&apos;a&apos;},{id:&apos;b&apos;},{id:&apos;c&apos;},{id:&apos;d&apos;}];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;To add one more to the list. Using ES6 and &lt;code&gt;Array.reduce&lt;/code&gt; with &lt;code&gt;Array.find&lt;/code&gt;.&lt;br&gt;\nIn this example filtering objects based on a &lt;code&gt;guid&lt;/code&gt; property.  &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; filtered = array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;accumulator, current&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (! accumulator.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;{guid}&lt;/span&gt;) =&amp;gt;&lt;/span&gt; guid === current.&lt;span class=&quot;hljs-property&quot;&gt;guid&lt;/span&gt;)) {\n    accumulator.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(current);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; accumulator;\n}, []);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Extending this one to allow selection of a property and compress it into a one liner:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniqify&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;array, key&lt;/span&gt;) =&amp;gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;prev, curr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; prev.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt; =&amp;gt;&lt;/span&gt; a[key] === curr[key]) ? prev : prev.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(curr) &amp;amp;&amp;amp; prev, []);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To use it pass an array of objects and the name of the key you wish to de-dupe on as a string value:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; result = &lt;span class=&quot;hljs-title function_&quot;&gt;uniqify&lt;/span&gt;(myArrayOfObjects, &lt;span class=&quot;hljs-string&quot;&gt;&apos;guid&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could also use a &lt;code&gt;Map&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; dedupThings = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m, t&lt;/span&gt;) =&amp;gt;&lt;/span&gt; m.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(t.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;, t), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full sample:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; things = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;();\n\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;});\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;});\nthings.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;});\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; dedupThings = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;m, t&lt;/span&gt;) =&amp;gt;&lt;/span&gt; m.&lt;span class=&quot;hljs-title function_&quot;&gt;set&lt;/span&gt;(t.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;, t), &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;()).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;());\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(dedupThings, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;place&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;\n    },\n    {\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;place&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;\n    }\n]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;A TypeScript solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This will remove duplicate objects and also preserve the types of the objects.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicateObjects&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array: any[]&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(array.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(s)))]\n    .&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;parse&lt;/span&gt;(s));\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Considering &lt;a href=&quot;https://lodash.com/docs/4.17.4#uniqWith&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;lodash.uniqWith&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; objects = [{ &lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; }, { &lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; }, { &lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; }];\n \n_.&lt;span class=&quot;hljs-title function_&quot;&gt;uniqWith&lt;/span&gt;(objects, _.&lt;span class=&quot;hljs-property&quot;&gt;isEqual&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// =&amp;gt; [{ &apos;x&apos;: 1, &apos;y&apos;: 2 }, { &apos;x&apos;: 2, &apos;y&apos;: 1 }]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; myData = [{&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;}, \n {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;},\n {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;}];\n\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; q = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(myData.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; [&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj), obj])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(q)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;One-liner using ES6 and &lt;code&gt;new Map()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// assign things.thing to myData&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; myData = things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;;\n\n[...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Map&lt;/span&gt;(myData.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; [&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(obj), obj])).&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;()];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Details:-&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Doing &lt;code&gt;.map()&lt;/code&gt; on the data list and converting each individual object into a &lt;code&gt;[key, value]&lt;/code&gt; pair array(length =2), the first element(key) would be the &lt;code&gt;stringified&lt;/code&gt; version of the object and second(value) would be an &lt;code&gt;object&lt;/code&gt; itself.&lt;/li&gt;\n&lt;li&gt;Adding above created array list to &lt;code&gt;new Map()&lt;/code&gt; would have the key as &lt;code&gt;stringified&lt;/code&gt; object and any same key addition would result in overriding the already existing key. &lt;/li&gt;\n&lt;li&gt;Using &lt;code&gt;.values()&lt;/code&gt; would give MapIterator with all values in a Map (&lt;code&gt;obj&lt;/code&gt; in our case)&lt;/li&gt;\n&lt;li&gt;Finally, &lt;code&gt;spread ...&lt;/code&gt; operator to give new Array with values from the above step.&lt;/li&gt;\n&lt;/ol&gt;\n    ","\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; things = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;}\n];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filteredArr = things.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;thing, current&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; x = thing.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt; === current.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!x) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; thing.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;([current]);\n  } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; thing;\n  }\n}, []);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filteredArr)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;Solution Via &lt;code&gt;Set&lt;/code&gt; Object | According to the data type&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; seen = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;();\n &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; things = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;}\n];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filteredArr = things.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;el&lt;/span&gt; =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; duplicate = seen.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(el.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;);\n  seen.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(el.&lt;span class=&quot;hljs-property&quot;&gt;place&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !duplicate;\n});\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filteredArr)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;Set&lt;/code&gt; Object Feature&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Each value in the Set Object has to be unique, the value equality will be checked&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;The Purpose of Set object  storing unique values according to the  Data type , whether primitive values or object references.it has very useful four Instance methods &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;clear&lt;/code&gt; , &lt;code&gt;has&lt;/code&gt; &amp;amp; &lt;code&gt;delete&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Unique &amp;amp; data Type feature:..&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;add&lt;/code&gt;method&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;it&apos;s  push unique data into collection by default also preserve data type .. that means it prevent to  push duplicate item into collection also it will check data type by default...&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;has&lt;/code&gt; method&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;sometime needs to check data item exist into the collection and . it&apos;s handy  method for the collection to cheek unique id or item and data type..&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;delete&lt;/code&gt;  method&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;it will remove specific item from the collection by identifying data type..&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;clear&lt;/code&gt;  method&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;it will remove all collection items from one specific variable and set as empty object&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;code&gt;Set&lt;/code&gt; object has also &lt;strong&gt;Iteration methods&lt;/strong&gt; &amp;amp; more feature..&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Better Read from Here :&lt;/strong&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;noreferrer&quot;&gt;&lt;em&gt;&lt;strong&gt;Set - JavaScript | MDN&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;removeDuplicates()&lt;/code&gt; takes in an array of objects and returns a new array without any duplicate objects (based on the id property).&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; allTests = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;}, \n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;}\n];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; uniq = {};\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; !uniq[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] &amp;amp;&amp;amp; (uniq[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;))\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(allTests);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Expected outcome:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;}, \n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Test2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;}\n];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;First, we set the value of variable uniq to an empty object.&lt;/p&gt;\n&lt;p&gt;Next, we filter through the array of objects. Filter creates a new array with all elements that pass the test implemented by the provided function.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; !uniq[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] &amp;amp;&amp;amp; (uniq[obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Above, we use the short-circuiting functionality of &amp;amp;&amp;amp;. If the left side of the &amp;amp;&amp;amp; evaluates to true, then it returns the value on the right of the &amp;amp;&amp;amp;. If the left side is false, it returns what is on the left side of the &amp;amp;&amp;amp;.&lt;/p&gt;\n&lt;p&gt;For each object(obj) we check uniq for a property named the value of obj.id (In this case, on the first iteration it would check for the property &apos;1&apos;.) We want the opposite of what it returns (either true or false) which is why we use the ! in &lt;code&gt;!uniq[obj.id]&lt;/code&gt;. If uniq has the id property already, it returns true which evaluates to false (!) telling the filter function NOT to add that obj. However, if it does not find the obj.id property, it returns false which then evaluates to true (!) and returns everything to the right of the &amp;amp;&amp;amp;, or (uniq[obj.id] = true). This is a truthy value, telling the filter method to add that obj to the returned array, and it also adds the property {1: true} to uniq. This ensures that any other obj instance with that same id will not be added again.&lt;/p&gt;\n    ","\n&lt;p&gt;This way works well for me:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arrayUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, uniqueKey&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; flagList = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;()\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!flagList.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(item[uniqueKey])) {\n      flagList.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(item[uniqueKey])\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n    }\n  })\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data = [\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Kyle&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;occupation&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Fashion Designer&apos;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Kyle&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;occupation&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Fashion Designer&apos;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Emily&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;occupation&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Web Designer&apos;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Melissa&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;occupation&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Fashion Designer&apos;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tom&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;occupation&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Web Developer&apos;&lt;/span&gt;\n  },\n  {\n    &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tom&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;occupation&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;Web Developer&apos;&lt;/span&gt;\n  }\n]\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;table&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;arrayUnique&lt;/span&gt;(data, &lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;))&lt;span class=&quot;hljs-comment&quot;&gt;// work well&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;printout&lt;/p&gt;\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;\n (index)    name         occupation     \n\n    0      &lt;span class=&quot;hljs-string&quot;&gt;&apos;Kyle&apos;&lt;/span&gt;    &lt;span class=&quot;hljs-string&quot;&gt;&apos;Fashion Designer&apos;&lt;/span&gt; \n    1      &lt;span class=&quot;hljs-string&quot;&gt;&apos;Emily&apos;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&apos;Web Designer&apos;&lt;/span&gt;   \n    2     &lt;span class=&quot;hljs-string&quot;&gt;&apos;Melissa&apos;&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&apos;Fashion Designer&apos;&lt;/span&gt; \n    3       &lt;span class=&quot;hljs-string&quot;&gt;&apos;Tom&apos;&lt;/span&gt;     &lt;span class=&quot;hljs-string&quot;&gt;&apos;Web Developer&apos;&lt;/span&gt;   \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;ES5:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arrayUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, uniqueKey&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; flagList = []\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (flagList.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(item[uniqueKey]) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n      flagList.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(item[uniqueKey])\n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;\n    }\n  })\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;These two ways are simpler and more understandable.&lt;/p&gt;\n    ","\n&lt;p&gt;Here is a solution for ES6 where you only want to keep the last item. This solution is functional and Airbnb style compliant.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; things = {\n  &lt;span class=&quot;hljs-attr&quot;&gt;thing&lt;/span&gt;: [\n    { &lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;here&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;stuff&apos;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;there&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;morestuff1&apos;&lt;/span&gt; },\n    { &lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;there&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;morestuff2&apos;&lt;/span&gt; }, \n  ],\n};\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;array, key&lt;/span&gt;) =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr, item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; removed = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;i&lt;/span&gt; =&amp;gt;&lt;/span&gt; i[key] !== item[key]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [...removed, item];\n  }, []);\n};\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;removeDuplicates&lt;/span&gt;(things.&lt;span class=&quot;hljs-property&quot;&gt;thing&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;place&apos;&lt;/span&gt;));\n&lt;span class=&quot;hljs-comment&quot;&gt;// &amp;gt; [{ place: &apos;here&apos;, name: &apos;stuff&apos; }, { place: &apos;there&apos;, name: &apos;morestuff2&apos; }]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Fast (less runtime) and type-safe answer for lazy &lt;strong&gt;Typescript&lt;/strong&gt; developers:&lt;/h1&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; uniqueBy = &amp;lt;T&amp;gt;( &lt;span class=&quot;hljs-attr&quot;&gt;uniqueKey&lt;/span&gt;: keyof T, &lt;span class=&quot;hljs-attr&quot;&gt;objects&lt;/span&gt;: T[]): T[] =&amp;gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; ids = objects.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;object&lt;/span&gt; =&amp;gt;&lt;/span&gt; object[uniqueKey]);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; objects.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;object, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt; !ids.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(object[uniqueKey], index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));\n} \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know there is a ton of answers in this question already, but bear with me...&lt;/p&gt;\n&lt;p&gt;Some of the objects in your array may have additional properties that you are not interested in, or you simply want to find the unique objects &lt;em&gt;considering only a subset of the properties&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;Consider the array below. Say you want to find the unique objects in this array considering only &lt;code&gt;propOne&lt;/code&gt; and &lt;code&gt;propTwo&lt;/code&gt;, and ignore any other properties that may be there.&lt;/p&gt;\n&lt;p&gt;The expected result should include only the first and last objects. So here goes the code:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;true&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; array = [{\n    &lt;span class=&quot;hljs-attr&quot;&gt;propOne&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;propTwo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;propThree&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;I have no part in this...&apos;&lt;/span&gt;\n},\n{\n    &lt;span class=&quot;hljs-attr&quot;&gt;propOne&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;propTwo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;someOtherProperty&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;no one cares about this...&apos;&lt;/span&gt;\n},\n{\n    &lt;span class=&quot;hljs-attr&quot;&gt;propOne&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;x&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;propTwo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;y&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;yetAnotherJunk&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;I am valueless really&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;noOneHasThis&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;I have something no one has&apos;&lt;/span&gt;\n}];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; uniques = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(\n    array.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;((&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({\n        &lt;span class=&quot;hljs-attr&quot;&gt;propOne&lt;/span&gt;: o.&lt;span class=&quot;hljs-property&quot;&gt;propOne&lt;/span&gt;,\n        &lt;span class=&quot;hljs-attr&quot;&gt;propTwo&lt;/span&gt;: o.&lt;span class=&quot;hljs-property&quot;&gt;propTwo&lt;/span&gt;\n    }))(x))))\n].&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;parse&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(uniques);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Another option would be to create a custom indexOf function, which compares the values of your chosen property for each object and wrap this in a reduce function.   &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uniq = redundant_array.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a,b&lt;/span&gt;){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;indexOfProperty&lt;/span&gt; (a, b){\n          &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;i++){\n              &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(a[i].&lt;span class=&quot;hljs-property&quot;&gt;property&lt;/span&gt; == b.&lt;span class=&quot;hljs-property&quot;&gt;property&lt;/span&gt;){\n                   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; i;\n               }\n          }\n         &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n      }\n\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-title function_&quot;&gt;indexOfProperty&lt;/span&gt;(a,b) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ) a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(b);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n    },[]);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here I found a simple solution for removing duplicates from an array of objects using reduce method. I am filtering elements based on the position key of an object&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; med = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;name1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;name2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;right&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;name3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;name4&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;right&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;name5&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;left&apos;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;name6&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;left1&apos;&lt;/span&gt;}\n]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; arr = [];\nmed.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, curr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(acc.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(curr.&lt;span class=&quot;hljs-property&quot;&gt;position&lt;/span&gt;) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n    acc.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(curr.&lt;span class=&quot;hljs-property&quot;&gt;position&lt;/span&gt;);\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(curr);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; acc;\n}, [])\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(arr)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Continuing exploring ES6 ways of removing duplicates from array of objects: setting &lt;code&gt;thisArg&lt;/code&gt; argument of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Array.prototype.filter&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;new Set&lt;/code&gt; provides a decent alternative:&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; things = [\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;},\n  {&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;}\n];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filtered = things.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;{place, name}&lt;/span&gt;) {\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; key =&lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${place}&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;${name}&lt;/span&gt;`&lt;/span&gt;;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; !&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;has&lt;/span&gt;(key) &amp;amp;&amp;amp; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(key);\n\n}, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(filtered);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;However, it will not work with arrow functions &lt;code&gt;() =&amp;gt;&lt;/code&gt;, as &lt;code&gt;this&lt;/code&gt; is bound to their lexical scope.&lt;/p&gt;\n    "],"id":517,"title":"How to remove all duplicates from an array of objects?","content":"\n                \n&lt;p&gt;I have an object that contains an array of objects.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;obj = {};\n\nobj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;();\n\nobj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;});\nobj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;});\nobj.&lt;span class=&quot;hljs-property&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I&apos;m wondering what is the best method to remove duplicate objects from an array.  So for example, &lt;code&gt;obj.arr&lt;/code&gt; would become...&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;here&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;stuff&quot;&lt;/span&gt;},\n{&lt;span class=&quot;hljs-attr&quot;&gt;place&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;there&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&quot;morestuff&quot;&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"how-to-remove-all-duplicates-from-an-array-of-objects-1657388256190","postType":"QUESTION","createdAt":"2022-07-09T17:37:36.000Z","updatedAt":"2022-07-09T17:37:36.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"What is the difference between public, protected, package-private and private in Java?","slug":"what-is-the-difference-between-public-protected-package-private-and-private-in-java-1657387376262"},{"title":"Why JSF calls getters multiple times","slug":"why-jsf-calls-getters-multiple-times-1657388244489"},{"title":"Returning data from async call in Swift function","slug":"returning-data-from-async-call-in-swift-function-1657387469218"},{"title":"How can I vertically center a div element for all browsers using CSS?","slug":"how-can-i-vertically-center-a-div-element-for-all-browsers-using-css-1657385488425"},{"title":"How to use PHP's password_hash to hash and verify passwords","slug":"how-to-use-php's-password_hash-to-hash-and-verify-passwords-1657387808784"},{"title":"Split array into chunks","slug":"split-array-into-chunks-1657387896420"},{"title":"How do I install pip on Windows?","slug":"how-do-i-install-pip-on-windows-1657388147761"},{"title":"What does the 'static' keyword do in a class?","slug":"what-does-the-'static'-keyword-do-in-a-class-1657388554238"},{"title":"\"Notice: Undefined variable\", \"Notice: Undefined index\", \"Warning: Undefined array key\", and \"Notice: Undefined offset\" using PHP","slug":"\"notice:-undefined-variable\"-\"notice:-undefined-index\"-\"warning:-undefined-array-key\"-and-\"notice:-undefined-offset\"-using-php-1657384250748"},{"title":"UnboundLocalError on local variable when reassigned after first use","slug":"unboundlocalerror-on-local-variable-when-reassigned-after-first-use-1657387685248"},{"title":"The model item passed into the dictionary is of type .. but this dictionary requires a model item of type","slug":"the-model-item-passed-into-the-dictionary-is-of-type-..-but-this-dictionary-requires-a-model-item-of-type-1657388480874"},{"title":"How do you parse and process HTML/XML in PHP?","slug":"how-do-you-parse-and-process-htmlxml-in-php-1657384351267"},{"title":"How does the SQL injection from the \"Bobby Tables\" XKCD comic work?","slug":"how-does-the-sql-injection-from-the-\"bobby-tables\"-xkcd-comic-work-1657384621653"},{"title":"Why don't flex items shrink past content size?","slug":"why-don't-flex-items-shrink-past-content-size-1657384687282"},{"title":"How do you use bcrypt for hashing passwords in PHP? [duplicate]","slug":"how-do-you-use-bcrypt-for-hashing-passwords-in-php-duplicate-1657387318517"},{"title":"Why does std::getline() skip input after a formatted extraction?","slug":"why-does-std::getline()-skip-input-after-a-formatted-extraction-1657384756118"},{"title":"How to avoid using Select in Excel VBA","slug":"how-to-avoid-using-select-in-excel-vba-1657384286300"},{"title":"How do I return the response from an Observable/http/async call in angular?","slug":"how-do-i-return-the-response-from-an-observablehttpasync-call-in-angular-1657387335024"},{"title":"Selecting and manipulating CSS pseudo-elements such as ::before and ::after using javascript (or jQuery)","slug":"selecting-and-manipulating-css-pseudo-elements-such-as-::before-and-::after-using-javascript-(or-jquery)-1657387406132"},{"title":"How do I convert an existing callback API to promises?","slug":"how-do-i-convert-an-existing-callback-api-to-promises-1657384694006"}]},"__N_SSG":true}