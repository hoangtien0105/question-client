{"pageProps":{"data":{"answer":["\n&lt;p&gt;Python doesn&apos;t have variable declarations, so it has to figure out the &lt;a href=&quot;http://docs.python.org/3.3/tutorial/classes.html#python-scopes-and-namespaces&quot;&gt;scope&lt;/a&gt; of variables itself.  It does so by a simple rule:  If there is an assignment to a variable inside a function, that variable is considered local.&lt;sup&gt;&lt;a href=&quot;http://docs.python.org/3.3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;  Thus, the line&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;counter += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;implicitly makes &lt;code&gt;counter&lt;/code&gt; local to &lt;code&gt;increment()&lt;/code&gt;.  Trying to execute this line, though, will try to read the value of the local variable &lt;code&gt;counter&lt;/code&gt; before it is assigned, resulting in an &lt;a href=&quot;http://docs.python.org/3.3/library/exceptions.html#UnboundLocalError&quot;&gt;&lt;code&gt;UnboundLocalError&lt;/code&gt;&lt;/a&gt;.&lt;sup&gt;&lt;a href=&quot;http://docs.python.org/3.3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;\n\n&lt;p&gt;If &lt;code&gt;counter&lt;/code&gt; is a global variable, the &lt;a href=&quot;http://docs.python.org/3.3/reference/simple_stmts.html#the-global-statement&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; keyword will help.  If &lt;code&gt;increment()&lt;/code&gt; is a local function and &lt;code&gt;counter&lt;/code&gt; a local variable, you can use &lt;a href=&quot;http://docs.python.org/3.3/reference/simple_stmts.html#the-nonlocal-statement&quot;&gt;&lt;code&gt;nonlocal&lt;/code&gt;&lt;/a&gt; in Python 3.x.&lt;/p&gt;\n    ","\n&lt;p&gt;You need to use the &lt;a href=&quot;http://docs.python.org/py3k/reference/simple_stmts.html#the-global-statement&quot;&gt;global statement&lt;/a&gt; so that you are modifying the global variable counter, instead of a local variable:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;counter = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;increment&lt;/span&gt;():\n  &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; counter\n  counter += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\nincrement()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If the enclosing scope that &lt;code&gt;counter&lt;/code&gt; is defined in is not the global scope, on Python 3.x you could use the &lt;a href=&quot;http://docs.python.org/py3k/reference/simple_stmts.html#the-nonlocal-statement&quot;&gt;nonlocal statement&lt;/a&gt;.  In the same situation on Python 2.x you would have no way to reassign to the nonlocal name &lt;code&gt;counter&lt;/code&gt;, so you would need to make &lt;code&gt;counter&lt;/code&gt; mutable and modify it:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;counter = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;increment&lt;/span&gt;():\n  counter[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\nincrement()\n&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt; counter[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]  &lt;span class=&quot;hljs-comment&quot;&gt;# prints &apos;1&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To answer the question in your subject line,* yes, there are closures in Python, except they only apply inside a function, and also (in Python 2.x) they are read-only; you can&apos;t re-bind the name to a different object (though if the object is mutable, you can modify its contents). In Python 3.x, you can use the &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html?highlight=nonlocal#nonlocal&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;nonlocal&lt;/code&gt;&lt;/a&gt; keyword to modify a closure variable.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;incrementer&lt;/span&gt;():\n    counter = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;increment&lt;/span&gt;():\n        &lt;span class=&quot;hljs-keyword&quot;&gt;nonlocal&lt;/span&gt; counter\n        counter += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; counter\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; increment\n\nincrement = incrementer()\n\nincrement()   &lt;span class=&quot;hljs-comment&quot;&gt;# 1&lt;/span&gt;\nincrement()   &lt;span class=&quot;hljs-comment&quot;&gt;# 2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;* The question origially asked about closures in Python.&lt;/p&gt;\n    ","\n&lt;p&gt;The reason why your code throws an &lt;code&gt;UnboundLocalError&lt;/code&gt; is already well explained in other answers.&lt;/p&gt;\n&lt;p&gt;But it seems to me that you&apos;re trying to build something that works like &lt;a href=&quot;http://docs.python.org/library/itertools.html#itertools.count&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;itertools.count()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;So try it out, and see if it suits your case:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; count\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;counter = count(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;counter\ncount(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;(counter)\n&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;counter\ncount(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;next&lt;/span&gt;(counter)\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;counter\ncount(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Python has lexical scoping by default, which means that although an enclosed scope can access values in its enclosing scope, it cannot modify them (unless they&apos;re declared global with the &lt;a href=&quot;http://docs.python.org/3.3/reference/simple_stmts.html#the-global-statement&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;global&lt;/code&gt;&lt;/a&gt; keyword).&lt;/p&gt;\n\n&lt;p&gt;A closure binds values in the &lt;em&gt;enclosing&lt;/em&gt; environment to names in the &lt;em&gt;local&lt;/em&gt; environment. The local environment can then use the bound value, and even reassign that name to something else, but it can&apos;t modify the binding in the enclosing environment.&lt;/p&gt;\n\n&lt;p&gt;In your case you are trying to treat &lt;code&gt;counter&lt;/code&gt; as a local variable rather than a bound value. Note that this code, which binds the value of &lt;code&gt;x&lt;/code&gt; assigned in the enclosing environment, works fine:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;f&lt;/span&gt;():\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; x\n\n&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;f()\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;To modify a global variable inside a function, you must use the global keyword.&lt;/p&gt;\n\n&lt;p&gt;When you try to do this without the line&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; counter\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;inside of the definition of increment, a local variable named counter is created so as to keep you from mucking up the counter variable that the whole program may depend on.&lt;/p&gt;\n\n&lt;p&gt;Note that you only need to use global when you are modifying the variable; you could read counter from within increment without the need for the global statement.&lt;/p&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;counter = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;increment&lt;/span&gt;():\n  &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; counter\n  counter += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\nincrement()\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Python is not purely lexically scoped.&lt;/p&gt;\n&lt;p&gt;See &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/423379/using-global-variables-in-a-function-other-than-the-one-that-created-them/&quot;&gt;Using global variables in a function&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;And &lt;em&gt;&lt;a href=&quot;https://www.saltycrane.com/blog/2008/01/python-variable-scope-notes/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Notes on Python variable scope&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    "],"id":598,"title":"Why does this UnboundLocalError occur (closure)? [duplicate]","content":"\n                    &lt;div&gt;\n            &lt;aside class=&quot;s-notice s-notice__info post-notice js-post-notice mb16&quot; role=&quot;status&quot;&gt;\n        &lt;div class=&quot;d-flex fd-column fw-nowrap&quot;&gt;\n            &lt;div class=&quot;d-flex fw-nowrap&quot;&gt;\n                &lt;div class=&quot;flex--item wmn0 fl1 lh-lg&quot;&gt;\n                    &lt;div class=&quot;flex--item fl1 lh-lg&quot;&gt;\n                        &lt;b&gt;This question already has answers here&lt;/b&gt;:\n                        \n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n                    &lt;div class=&quot;flex--item mb0 mt4&quot;&gt;\n                        &lt;a href=&quot;/questions/41369408/how-can-i-change-a-global-variable-from-within-a-function&quot; dir=&quot;ltr&quot;&gt;How can I change a global variable from within a function?&lt;/a&gt;\n                            &lt;span class=&quot;question-originals-answer-count&quot;&gt;\n                                (8 answers)\n                            &lt;/span&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;flex--item mb0 mt4&quot;&gt;\n                        &lt;a href=&quot;/questions/423379/using-global-variables-in-a-function&quot; dir=&quot;ltr&quot;&gt;Using global variables in a function&lt;/a&gt;\n                            &lt;span class=&quot;question-originals-answer-count&quot;&gt;\n                                (24 answers)\n                            &lt;/span&gt;\n                    &lt;/div&gt;\n                &lt;div class=&quot;flex--item mb0 mt8&quot;&gt;Closed &lt;span title=&quot;2016-12-29 06:42:07Z&quot; class=&quot;relativetime&quot;&gt;5 years ago&lt;/span&gt;.&lt;/div&gt;\n        &lt;/div&gt;\n&lt;/aside&gt;\n\n    &lt;/div&gt;\n\n&lt;p&gt;What am I doing wrong here?&lt;/p&gt;\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;counter = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;increment&lt;/span&gt;():\n  counter += &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n\nincrement()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The above code throws an &lt;code&gt;UnboundLocalError&lt;/code&gt;.&lt;/p&gt;\n    ","slug":"why-does-this-unboundlocalerror-occur-(closure)-duplicate-1657388531538","postType":"QUESTION","createdAt":"2022-07-09T17:42:11.000Z","updatedAt":"2022-07-09T17:42:11.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How to randomize (shuffle) a JavaScript array?","slug":"how-to-randomize-(shuffle)-a-javascript-array-1657384790171"},{"title":"How does the Windows Command Interpreter (CMD.EXE) parse scripts?","slug":"how-does-the-windows-command-interpreter-(cmd.exe)-parse-scripts-1657387731560"},{"title":"What's the difference between INNER JOIN, LEFT JOIN, RIGHT JOIN and FULL JOIN? [duplicate]","slug":"what's-the-difference-between-inner-join-left-join-right-join-and-full-join-duplicate-1657388082887"},{"title":"How to make a great R reproducible example","slug":"how-to-make-a-great-r-reproducible-example-1657384198173"},{"title":"What is the purpose of the var keyword and when should I use it (or omit it)?","slug":"what-is-the-purpose-of-the-var-keyword-and-when-should-i-use-it-(or-omit-it)-1657387525538"},{"title":"Post an HTML Table to ADO.NET DataTable","slug":"post-an-html-table-to-ado.net-datatable-1657387462723"},{"title":"Accessing an array out of bounds gives no error, why?","slug":"accessing-an-array-out-of-bounds-gives-no-error-why-1657387979932"},{"title":"What is array to pointer decay?","slug":"what-is-array-to-pointer-decay-1657384709608"},{"title":"Are 'Arrow Functions' and 'Functions' equivalent / interchangeable?","slug":"are-'arrow-functions'-and-'functions'-equivalent-interchangeable-1657384527873"},{"title":"What are the rules about using an underscore in a C++ identifier?","slug":"what-are-the-rules-about-using-an-underscore-in-a-c++-identifier-1657384557197"},{"title":"What is a debugger and how can it help me diagnose problems?","slug":"what-is-a-debugger-and-how-can-it-help-me-diagnose-problems-1657384472469"},{"title":"How can I do a FULL OUTER JOIN in MySQL?","slug":"how-can-i-do-a-full-outer-join-in-mysql-1657388175444"},{"title":"Syntax error due to using a reserved word as a table or column name in MySQL","slug":"syntax-error-due-to-using-a-reserved-word-as-a-table-or-column-name-in-mysql-1657384689274"},{"title":"How do I profile C++ code running on Linux?","slug":"how-do-i-profile-c++-code-running-on-linux-1657384754272"},{"title":"Using fflush(stdin)","slug":"using-fflush(stdin)-1657387602771"},{"title":"What is the difference between single-quoted and double-quoted strings in PHP?","slug":"what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php-1657384624345"},{"title":"\"Thinking in AngularJS\" if I have a jQuery background? [closed]","slug":"\"thinking-in-angularjs\"-if-i-have-a-jquery-background-closed-1657384761159"},{"title":"Parameterize an SQL IN clause","slug":"parameterize-an-sql-in-clause-1657387536064"},{"title":"Reference - What does this error mean in PHP?","slug":"reference-what-does-this-error-mean-in-php-1657384301782"},{"title":"How do I set a variable to the output of a command in Bash?","slug":"how-do-i-set-a-variable-to-the-output-of-a-command-in-bash-1657387250909"}]},"__N_SSG":true}