{"pageProps":{"data":{"answer":["\n&lt;p&gt;I am adding a new answer to reflect changes in later jQuery releases. The .live() method is deprecated as of jQuery 1.7. &lt;/p&gt;\n\n&lt;p&gt;From &lt;a href=&quot;http://api.jquery.com/live/&quot;&gt;http://api.jquery.com/live/&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;As of jQuery 1.7, the .live() method is deprecated. Use .on() to attach event handlers. Users of older versions of jQuery should use .delegate() in preference to .live(). &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;For jQuery 1.7+ you can attach an event handler to a parent element using .on(), and pass the a selector combined with &apos;myclass&apos; as an argument.&lt;/p&gt;\n\n&lt;p&gt;See &lt;a href=&quot;http://api.jquery.com/on/&quot;&gt;http://api.jquery.com/on/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So instead of...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.myclass&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can write...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;body&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a.myclass&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will work for all a tags with &apos;myclass&apos; in the body, whether already present or dynamically added later.&lt;/p&gt;\n\n&lt;p&gt;The body tag is used here as the example had no closer static surrounding tag, but any parent tag that exists when the .on method call occurs will work. For instance a ul tag for a list which will have dynamic elements added would look like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ul&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;li&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;() );\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As long as the ul tag exists this will work (no li elements need exist yet).&lt;/p&gt;\n    ","\n&lt;p&gt;Sometimes doing this &lt;strong&gt;(the top-voted answer)&lt;/strong&gt; is not always enough:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;body&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a.myclass&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This can be an issue because of the order event handlers are fired. If you find yourself doing this, but it is causing issues because of the order in which it is handled.. You can always wrap that into a function, that when called &quot;refreshes&quot; the listener.&lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;RefreshSomeEventListener&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Remove handler from existing elements&lt;/span&gt;\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#wrapper .specific-selector&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;off&lt;/span&gt;(); \n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Re-add event handler for all matching elements&lt;/span&gt;\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#wrapper .specific-selector&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Handle event.&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Because it is a function, whenever I set up my listener this way, I typically call it on document ready:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Other ready commands / code&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Call our function to setup initial listening&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;RefreshSomeEventListener&lt;/span&gt;();\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, whenever you add some dynamically added element, call that method again:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;SomeMethodThatAddsElement&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Some code / AJAX / whatever.. Adding element dynamically&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Refresh our listener, so the new element is taken into account&lt;/span&gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;RefreshSomeEventListener&lt;/span&gt;();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hopefully this helps!&lt;/p&gt;\n\n&lt;p&gt;Regards,&lt;/p&gt;\n    ","\n&lt;p&gt;After jQuery 1.7 the preferred methods are &lt;a href=&quot;http://api.jquery.com/on/&quot; rel=&quot;nofollow noreferrer&quot;&gt;.on()&lt;/a&gt; and &lt;a href=&quot;http://api.jquery.com/off/&quot; rel=&quot;nofollow noreferrer&quot;&gt;.off()&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/9331127/24970&quot;&gt;Sean&apos;s answer&lt;/a&gt; shows an example.&lt;/p&gt;\n\n&lt;h2&gt;Now Deprecated:&lt;/h2&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Use the jQuery functions &lt;a href=&quot;http://docs.jquery.com/Events/live&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;.live()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://docs.jquery.com/Events/die&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;.die()&lt;/code&gt;&lt;/a&gt;.  Available in\n  jQuery 1.3.x&lt;/p&gt;\n  \n  &lt;p&gt;From the docs:&lt;/p&gt;\n  \n  &lt;blockquote&gt;\n    &lt;p&gt;To display each paragraph&apos;s text in an\n    alert box whenever it is clicked:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;p&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;live&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;( $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;() );\n});\n&lt;/code&gt;&lt;/pre&gt;\n  &lt;/blockquote&gt;\n  \n  &lt;p&gt;Also, the &lt;a href=&quot;http://docs.jquery.com/Plugins/livequery/livequery&quot; rel=&quot;nofollow noreferrer&quot;&gt;livequery&lt;/a&gt; plugin does this and has support for more events.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;If you&apos;re adding a pile of anchors to the DOM, look into event delegation instead. &lt;/p&gt;\n\n&lt;p&gt;Here&apos;s a simple example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#somecontainer&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {   \n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $target = $(e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;);   \n  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ($target.&lt;span class=&quot;hljs-title function_&quot;&gt;hasClass&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;myclass&quot;&lt;/span&gt;)) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n  }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can bind a single click event to a page for all elements, no matter if they are already on that page or if they will arrive at some future time, like that:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;click&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; target = $(e.&lt;span class=&quot;hljs-property&quot;&gt;target&lt;/span&gt;);\n   &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (target.&lt;span class=&quot;hljs-title function_&quot;&gt;is&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.myclass&apos;&lt;/span&gt;)) {\n      e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// if you want to cancel the event flow&lt;/span&gt;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n   } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (target.&lt;span class=&quot;hljs-title function_&quot;&gt;is&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.myotherclass&apos;&lt;/span&gt;)) {\n      e.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;();\n      &lt;span class=&quot;hljs-comment&quot;&gt;// do something else&lt;/span&gt;\n   }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Been using it for a while. Works like a charm.&lt;/p&gt;\n\n&lt;p&gt;In jQuery 1.7 and later, it is recommended to use &lt;code&gt;.on()&lt;/code&gt; in place of bind or any other event delegation method, but &lt;code&gt;.bind()&lt;/code&gt; still works.&lt;/p&gt;\n    ","\n&lt;p&gt;Binds a handler to an event (like click) for all current - and future - matched element. Can also bind custom events.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://docs.jquery.com/Events/live&quot; rel=&quot;nofollow noreferrer&quot;&gt;link text&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.myclass&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;live&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If your on jQuery 1.3+ then use .&lt;a href=&quot;http://docs.jquery.com/Events/live&quot; rel=&quot;nofollow noreferrer&quot;&gt;live()&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Binds a handler to an event (like\n  click) for all current - and future -\n  matched element. Can also bind custom\n  events.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;You want to use the &lt;code&gt;live()&lt;/code&gt; function. See &lt;a href=&quot;http://docs.jquery.com/Events/live&quot; rel=&quot;nofollow noreferrer&quot;&gt;the docs&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#anchor1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;live&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#anchor1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;a class=&quot;myclass&quot; href=&quot;#&quot;&amp;gt;test4&amp;lt;/a&amp;gt;&apos;&lt;/span&gt;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":442,"title":"How do I attach events to dynamic HTML elements with jQuery? [duplicate]","content":"\n                    &lt;div&gt;\n            &lt;aside class=&quot;s-notice s-notice__info post-notice js-post-notice mb16&quot; role=&quot;status&quot;&gt;\n        &lt;div class=&quot;d-flex fd-column fw-nowrap&quot;&gt;\n            &lt;div class=&quot;d-flex fw-nowrap&quot;&gt;\n                &lt;div class=&quot;flex--item wmn0 fl1 lh-lg&quot;&gt;\n                    &lt;div class=&quot;flex--item fl1 lh-lg&quot;&gt;\n                        &lt;b&gt;This question already has answers here&lt;/b&gt;:\n                        \n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n                    &lt;div class=&quot;flex--item mb0 mt4&quot;&gt;\n                        &lt;a href=&quot;/questions/203198/event-binding-on-dynamically-created-elements&quot; dir=&quot;ltr&quot;&gt;Event binding on dynamically created elements?&lt;/a&gt;\n                            &lt;span class=&quot;question-originals-answer-count&quot;&gt;\n                                (23 answers)\n                            &lt;/span&gt;\n                    &lt;/div&gt;\n                &lt;div class=&quot;flex--item mb0 mt8&quot;&gt;Closed &lt;span title=&quot;2014-09-08 13:58:17Z&quot; class=&quot;relativetime&quot;&gt;7 years ago&lt;/span&gt;.&lt;/div&gt;\n        &lt;/div&gt;\n&lt;/aside&gt;\n\n    &lt;/div&gt;\n\n&lt;p&gt;Suppose I have some jQuery code that attaches an event handler to all elements with class &lt;code&gt;.myclass&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.myclass&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// do something&lt;/span&gt;\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And my HTML might be as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;a &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myclass&quot;&lt;/span&gt; href=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;&amp;gt;test1&amp;lt;/a&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myclass&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;test2&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;myclass&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;test3&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That works with no problem.\nHowever, consider if the &lt;code&gt;.myclass&lt;/code&gt; elements were written to the page at some future time.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;a id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;anchor1&quot;&lt;/span&gt; href=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#&quot;&lt;/span&gt;&amp;gt;create link dynamically&amp;lt;/a&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n$(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#anchor1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#anchor1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;a class=&quot;myclass&quot; href=&quot;#&quot;&amp;gt;test4&amp;lt;/a&amp;gt;&apos;&lt;/span&gt;);\n    });\n});\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In this case, the &lt;code&gt;test4&lt;/code&gt; link is created when a user clicks on &lt;code&gt;a#anchor1&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;test4&lt;/code&gt; link does not have the &lt;code&gt;click()&lt;/code&gt; handler associated with it, even though it has &lt;code&gt;class=&quot;myclass&quot;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Basically, I would like to write the &lt;code&gt;click()&lt;/code&gt; handler once and have it apply to both content present at page load, and content brought in later via &lt;strong&gt;AJAX / DHTML&lt;/strong&gt;. Any idea how I can fix this? &lt;/p&gt;\n    ","slug":"how-do-i-attach-events-to-dynamic-html-elements-with-jquery-duplicate-1657387992964","postType":"QUESTION","createdAt":"2022-07-09T17:33:12.000Z","updatedAt":"2022-07-09T17:33:12.000Z","tags":[{"id":2297,"name":"dhtml","slug":"dhtml","createdAt":"2022-07-09T17:33:13.000Z","updatedAt":"2022-07-09T17:33:13.000Z","Questions_Tags":{"questionId":442,"tagId":2297}}],"relatedQuestions":[{"title":"How do I attach events to dynamic HTML elements with jQuery? [duplicate]","slug":"how-do-i-attach-events-to-dynamic-html-elements-with-jquery-duplicate-1657387992964","tags":[{"name":"dhtml","Questions_Tags":{"questionId":442,"tagId":2297}}]}]},"randomQuestions":[{"title":"The difference between bracket [ ] and double bracket [[ ]] for accessing the elements of a list or dataframe","slug":"the-difference-between-bracket-and-double-bracket-for-accessing-the-elements-of-a-list-or-dataframe-1657388451711"},{"title":"How to determine equality for two JavaScript objects?","slug":"how-to-determine-equality-for-two-javascript-objects-1657387638650"},{"title":"What is a lambda expression in C++11?","slug":"what-is-a-lambda-expression-in-c++11-1657387999252"},{"title":"Get the cartesian product of a series of lists?","slug":"get-the-cartesian-product-of-a-series-of-lists-1657387709890"},{"title":"Reshaping multiple sets of measurement columns (wide format) into single columns (long format)","slug":"reshaping-multiple-sets-of-measurement-columns-(wide-format)-into-single-columns-(long-format)-1657388016983"},{"title":"How do I revert a Git repository to a previous commit?","slug":"how-do-i-revert-a-git-repository-to-a-previous-commit-1657387714717"},{"title":"Selenium - wait until element is present, visible and interactable","slug":"selenium-wait-until-element-is-present-visible-and-interactable-1657384820071"},{"title":"Download a file by jQuery.Ajax","slug":"download-a-file-by-jquery.ajax-1657388220611"},{"title":"Learning Regular Expressions [closed]","slug":"learning-regular-expressions-closed-1657384719460"},{"title":"How to randomize (shuffle) a JavaScript array?","slug":"how-to-randomize-(shuffle)-a-javascript-array-1657384790171"},{"title":"Big O, how do you calculate/approximate it?","slug":"big-o-how-do-you-calculateapproximate-it-1657387856392"},{"title":"What is the scope of variables in JavaScript?","slug":"what-is-the-scope-of-variables-in-javascript-1657384464291"},{"title":"Object comparison in JavaScript [duplicate]","slug":"object-comparison-in-javascript-duplicate-1657387675463"},{"title":"C++ Singleton design pattern","slug":"c++-singleton-design-pattern-1657387830040"},{"title":"Disable same origin policy in Chrome","slug":"disable-same-origin-policy-in-chrome-1657387743804"},{"title":"Default constructor with empty brackets","slug":"default-constructor-with-empty-brackets-1657388246967"},{"title":"How can I transition height: 0; to height: auto; using CSS?","slug":"how-can-i-transition-height:-0-to-height:-auto-using-css-1657388022100"},{"title":"Persist variables between page loads","slug":"persist-variables-between-page-loads-1657388558452"},{"title":"Calling a function of a module by using its name (a string)","slug":"calling-a-function-of-a-module-by-using-its-name-(a-string)-1657388565656"},{"title":"How do servlets work? Instantiation, sessions, shared variables and multithreading","slug":"how-do-servlets-work-instantiation-sessions-shared-variables-and-multithreading-1657387540375"}]},"__N_SSG":true}