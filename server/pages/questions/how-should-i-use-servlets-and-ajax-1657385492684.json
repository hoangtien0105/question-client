{"pageProps":{"data":{"answer":["\n&lt;p&gt;Indeed, the keyword is &quot;Ajax&quot;: &lt;em&gt;Asynchronous JavaScript and XML&lt;/em&gt;. However, last years it&apos;s more than often &lt;em&gt;Asynchronous JavaScript and JSON&lt;/em&gt;. Basically, you let JavaScript execute an asynchronous HTTP request and update the HTML DOM tree based on the response data.&lt;/p&gt;\n&lt;p&gt;Since it&apos;s pretty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/AJAX/Getting_Started&quot; rel=&quot;nofollow noreferrer&quot;&gt;tedious work to make it to work&lt;/a&gt; across all browsers (especially Internet Explorer versus others), there are plenty of JavaScript libraries out which simplifies this in single functions and covers as many as possible browser-specific bugs/quirks under the hoods, such as &lt;a href=&quot;https://jquery.com&quot; rel=&quot;nofollow noreferrer&quot;&gt;jQuery&lt;/a&gt;, &lt;a href=&quot;http://www.prototypejs.org&quot; rel=&quot;nofollow noreferrer&quot;&gt;Prototype&lt;/a&gt;, &lt;a href=&quot;https://mootools.net/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Mootools&lt;/a&gt;. Since jQuery is most popular these days, I&apos;ll use it in the below examples.&lt;/p&gt;\n&lt;h1&gt;Kickoff example returning &lt;code&gt;String&lt;/code&gt; as plain text&lt;/h1&gt;\n&lt;p&gt;Create a &lt;code&gt;/some.jsp&lt;/code&gt; like below (note: the code snippets in this answer doesn&apos;t expect the JSP file being placed in a subfolder, if you do so, alter servlet URL accordingly from &lt;code&gt;&quot;someservlet&quot;&lt;/code&gt; to &lt;code&gt;&quot;${pageContext.request.contextPath}/someservlet&quot;&lt;/code&gt;; it&apos;s merely omitted from the code snippets for brevity):&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;hljs-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;SO question 4112686&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://code.jquery.com/jquery-latest.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n            $(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;#somebutton&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// When HTML DOM &quot;click&quot; event is invoked on element with ID &quot;somebutton&quot;, execute the following function...&lt;/span&gt;\n                $.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;responseText&lt;/span&gt;) {   &lt;span class=&quot;hljs-comment&quot;&gt;// Execute Ajax GET request on URL of &quot;someservlet&quot; and execute the following function with Ajax response text...&lt;/span&gt;\n                    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#somediv&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(responseText);           &lt;span class=&quot;hljs-comment&quot;&gt;// Locate HTML DOM element with ID &quot;somediv&quot; and set its text content with the response text.&lt;/span&gt;\n                });\n            });\n        &lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;somebutton&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;press here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;somediv&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Create a servlet with a &lt;code&gt;doGet()&lt;/code&gt; method which look like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;some text&quot;&lt;/span&gt;;\n\n    response.setContentType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// Set content type of the response so that jQuery knows what it can expect.&lt;/span&gt;\n    response.setCharacterEncoding(&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// You want world domination, huh?&lt;/span&gt;\n    response.getWriter().write(text);       &lt;span class=&quot;hljs-comment&quot;&gt;// Write response body.&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Map this servlet on an URL pattern of &lt;code&gt;/someservlet&lt;/code&gt; or &lt;code&gt;/someservlet/*&lt;/code&gt; as below (obviously, the URL pattern is free to your choice, but you&apos;d need to alter the &lt;code&gt;someservlet&lt;/code&gt; URL in JS code examples over all place accordingly):&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.example;\n\n&lt;span class=&quot;hljs-meta&quot;&gt;@WebServlet(&quot;/someservlet/*&quot;)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SomeServlet&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HttpServlet&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or, when you&apos;re not on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Jakarta_Servlet&quot; rel=&quot;nofollow noreferrer&quot;&gt;Servlet&lt;/a&gt; 3.0 compatible container yet (&lt;a href=&quot;https://en.wikipedia.org/wiki/Apache_Tomcat&quot; rel=&quot;nofollow noreferrer&quot;&gt;Tomcat&lt;/a&gt; 7, &lt;a href=&quot;https://en.wikipedia.org/wiki/GlassFish&quot; rel=&quot;nofollow noreferrer&quot;&gt;GlassFish&lt;/a&gt; 3, &lt;a href=&quot;https://en.wikipedia.org/wiki/JBoss&quot; rel=&quot;nofollow noreferrer&quot;&gt;JBoss&lt;/a&gt; AS 6, etc. or newer), then map it in &lt;code&gt;web.xml&lt;/code&gt; the old fashioned way (see also &lt;a href=&quot;https://stackoverflow.com/tags/servlets/info&quot;&gt;our Servlets wiki page&lt;/a&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;someservlet&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;com.example.SomeServlet&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;someservlet&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/someservlet/*&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now open the http://localhost:8080/context/test.jsp in the browser and press the button. You&apos;ll see that the content of the div get updated with the servlet response.&lt;/p&gt;\n&lt;h1&gt;Returning &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; as JSON&lt;/h1&gt;\n&lt;p&gt;With &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON&quot; rel=&quot;nofollow noreferrer&quot;&gt;JSON&lt;/a&gt; instead of plaintext as response format you can even get some steps further. It allows for more dynamics. First, you&apos;d like to have a tool to convert between Java objects and JSON strings. There are plenty of them as well (see the bottom of &lt;a href=&quot;https://json.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;this page&lt;/a&gt; for an overview). My personal favourite is &lt;a href=&quot;https://github.com/google/gson&quot; rel=&quot;nofollow noreferrer&quot;&gt;Google Gson&lt;/a&gt;. Download and put its JAR file in &lt;code&gt;/WEB-INF/lib&lt;/code&gt; folder of your web application.&lt;/p&gt;\n&lt;p&gt;Here&apos;s an example which displays &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; as &lt;code&gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&lt;/code&gt;. The servlet:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n    List&amp;lt;String&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n    list.add(&lt;span class=&quot;hljs-string&quot;&gt;&quot;item1&quot;&lt;/span&gt;);\n    list.add(&lt;span class=&quot;hljs-string&quot;&gt;&quot;item2&quot;&lt;/span&gt;);\n    list.add(&lt;span class=&quot;hljs-string&quot;&gt;&quot;item3&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;().toJson(list);\n\n    response.setContentType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;);\n    response.setCharacterEncoding(&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);\n    response.getWriter().write(json);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The JavaScript code:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;#somebutton&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {  &lt;span class=&quot;hljs-comment&quot;&gt;// When HTML DOM &quot;click&quot; event is invoked on element with ID &quot;somebutton&quot;, execute the following function...&lt;/span&gt;\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;responseJson&lt;/span&gt;) {    &lt;span class=&quot;hljs-comment&quot;&gt;// Execute Ajax GET request on URL of &quot;someservlet&quot; and execute the following function with Ajax response JSON...&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $ul = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;ul&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#somediv&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;ul&amp;gt; element and append it to HTML DOM element with ID &quot;somediv&quot;.&lt;/span&gt;\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(responseJson, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;index, item&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;// Iterate over the JSON array.&lt;/span&gt;\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;li&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(item).&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;($ul);      &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;li&amp;gt; element, set its text content with currently iterated item and append it to the &amp;lt;ul&amp;gt;.&lt;/span&gt;\n        });\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Do note that jQuery automatically parses the response as JSON and gives you directly a JSON object (&lt;code&gt;responseJson&lt;/code&gt;) as function argument when you set the response content type to &lt;code&gt;application/json&lt;/code&gt;. If you forget to set it or rely on a default of &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;text/html&lt;/code&gt;, then the &lt;code&gt;responseJson&lt;/code&gt; argument wouldn&apos;t give you a JSON object, but a plain vanilla string and you&apos;d need to manually fiddle around with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt; afterwards, which is thus totally unnecessary if you set the content type right in first place.&lt;/p&gt;\n&lt;h1&gt;Returning &lt;code&gt;Map&amp;lt;String, String&amp;gt;&lt;/code&gt; as JSON&lt;/h1&gt;\n&lt;p&gt;Here&apos;s another example which displays &lt;code&gt;Map&amp;lt;String, String&amp;gt;&lt;/code&gt; as &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n    Map&amp;lt;String, String&amp;gt; options = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LinkedHashMap&lt;/span&gt;&amp;lt;&amp;gt;();\n    options.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;label1&quot;&lt;/span&gt;);\n    options.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;label2&quot;&lt;/span&gt;);\n    options.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;value3&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;label3&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;().toJson(options);\n\n    response.setContentType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;);\n    response.setCharacterEncoding(&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);\n    response.getWriter().write(json);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And the JSP:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;#somebutton&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {               &lt;span class=&quot;hljs-comment&quot;&gt;// When HTML DOM &quot;click&quot; event is invoked on element with ID &quot;somebutton&quot;, execute the following function...&lt;/span&gt;\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;responseJson&lt;/span&gt;) {                 &lt;span class=&quot;hljs-comment&quot;&gt;// Execute Ajax GET request on URL of &quot;someservlet&quot; and execute the following function with Ajax response JSON...&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $select = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#someselect&quot;&lt;/span&gt;);                           &lt;span class=&quot;hljs-comment&quot;&gt;// Locate HTML DOM element with ID &quot;someselect&quot;.&lt;/span&gt;\n        $select.&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;option&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;remove&lt;/span&gt;();                          &lt;span class=&quot;hljs-comment&quot;&gt;// Find all child elements with tag name &quot;option&quot; and remove them (just to prevent duplicate options when button is pressed again).&lt;/span&gt;\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(responseJson, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;key, value&lt;/span&gt;) {               &lt;span class=&quot;hljs-comment&quot;&gt;// Iterate over the JSON object.&lt;/span&gt;\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;option&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;(key).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(value).&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;($select); &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;option&amp;gt; element, set its value with currently iterated key and its text content with currently iterated item and finally append it to the &amp;lt;select&amp;gt;.&lt;/span&gt;\n        });\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;with&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;someselect&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Returning &lt;code&gt;List&amp;lt;Entity&amp;gt;&lt;/code&gt; as JSON&lt;/h1&gt;\n&lt;p&gt;Here&apos;s an example which displays &lt;code&gt;List&amp;lt;Product&amp;gt;&lt;/code&gt; in a &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; where the &lt;code&gt;Product&lt;/code&gt; class has the properties &lt;code&gt;Long id&lt;/code&gt;, &lt;code&gt;String name&lt;/code&gt; and &lt;code&gt;BigDecimal price&lt;/code&gt;. The servlet:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n    List&amp;lt;Product&amp;gt; products = someProductService.list();\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;().toJson(products);\n\n    response.setContentType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;);\n    response.setCharacterEncoding(&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);\n    response.getWriter().write(json);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The JS code:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;#somebutton&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {        &lt;span class=&quot;hljs-comment&quot;&gt;// When HTML DOM &quot;click&quot; event is invoked on element with ID &quot;somebutton&quot;, execute the following function...&lt;/span&gt;\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;responseJson&lt;/span&gt;) {          &lt;span class=&quot;hljs-comment&quot;&gt;// Execute Ajax GET request on URL of &quot;someservlet&quot; and execute the following function with Ajax response JSON...&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $table = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;table&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#somediv&quot;&lt;/span&gt;)); &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;table&amp;gt; element and append it to HTML DOM element with ID &quot;somediv&quot;.&lt;/span&gt;\n        $.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(responseJson, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;index, product&lt;/span&gt;) {    &lt;span class=&quot;hljs-comment&quot;&gt;// Iterate over the JSON array.&lt;/span&gt;\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;tr&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;appendTo&lt;/span&gt;($table)                     &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;tr&amp;gt; element, set its text content with currently iterated item and append it to the &amp;lt;table&amp;gt;.&lt;/span&gt;\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;td&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(product.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;))        &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;td&amp;gt; element, set its text content with id of currently iterated product and append it to the &amp;lt;tr&amp;gt;.&lt;/span&gt;\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;td&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(product.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;))      &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;td&amp;gt; element, set its text content with name of currently iterated product and append it to the &amp;lt;tr&amp;gt;.&lt;/span&gt;\n                .&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;td&amp;gt;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;text&lt;/span&gt;(product.&lt;span class=&quot;hljs-property&quot;&gt;price&lt;/span&gt;));    &lt;span class=&quot;hljs-comment&quot;&gt;// Create HTML &amp;lt;td&amp;gt; element, set its text content with price of currently iterated product and append it to the &amp;lt;tr&amp;gt;.&lt;/span&gt;\n        });\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Returning &lt;code&gt;List&amp;lt;Entity&amp;gt;&lt;/code&gt; as XML&lt;/h1&gt;\n&lt;p&gt;Here&apos;s an example which does effectively the same as previous example, but then with XML instead of JSON. When using JSP as XML output generator you&apos;ll see that it&apos;s less tedious to code the table and all. JSTL is this way much more helpful as you can actually use it to iterate over the results and perform server side data formatting. The servlet:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n    List&amp;lt;Product&amp;gt; products = someProductService.list();\n\n    request.setAttribute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;products&quot;&lt;/span&gt;, products);\n    request.getRequestDispatcher(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/WEB-INF/xml/products.jsp&quot;&lt;/span&gt;).forward(request, response);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The JSP code (note: if you put the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; in a &lt;code&gt;&amp;lt;jsp:include&amp;gt;&lt;/code&gt;, it may be reusable elsewhere in a non-Ajax response):&lt;/p&gt;\n&lt;pre class=&quot;lang-xml s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;\n&amp;lt;%@page contentType=&quot;application/xml&quot; pageEncoding=&quot;UTF-8&quot;%&amp;gt;\n&amp;lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&amp;gt;\n&amp;lt;%@taglib prefix=&quot;fmt&quot; uri=&quot;http://java.sun.com/jsp/jstl/fmt&quot; %&amp;gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:forEach&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;items&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${products}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;product&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;${product.id}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:out&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${product.name}&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;fmt:formatNumber&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${product.price}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;currency&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;currencyCode&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;USD&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;c:forEach&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The JavaScript code:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;#somebutton&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {             &lt;span class=&quot;hljs-comment&quot;&gt;// When HTML DOM &quot;click&quot; event is invoked on element with ID &quot;somebutton&quot;, execute the following function...&lt;/span&gt;\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;responseXml&lt;/span&gt;) {                &lt;span class=&quot;hljs-comment&quot;&gt;// Execute Ajax GET request on URL of &quot;someservlet&quot; and execute the following function with Ajax response XML...&lt;/span&gt;\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#somediv&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;($(responseXml).&lt;span class=&quot;hljs-title function_&quot;&gt;find&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;()); &lt;span class=&quot;hljs-comment&quot;&gt;// Parse XML, find &amp;lt;data&amp;gt; element and append its HTML to HTML DOM element with ID &quot;somediv&quot;.&lt;/span&gt;\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You&apos;ll by now probably realize why XML is so much more powerful than JSON for the particular purpose of updating a HTML document using Ajax. JSON is funny, but after all generally only useful for so-called &quot;public web services&quot;. MVC frameworks like &lt;a href=&quot;https://stackoverflow.com/tags/jsf/info&quot;&gt;JSF&lt;/a&gt; use XML under the covers for their ajax magic.&lt;/p&gt;\n&lt;h1&gt;Ajaxifying an existing form&lt;/h1&gt;\n&lt;p&gt;You can use jQuery &lt;a href=&quot;https://api.jquery.com/serialize/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;$.serialize()&lt;/code&gt;&lt;/a&gt; to easily ajaxify existing POST forms without fiddling around with collecting and passing the individual form input parameters. Assuming an existing form which works perfectly fine without JavaScript/jQuery (and thus degrades gracefully when the end user has JavaScript disabled):&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;someform&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;baz&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Submit&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can progressively enhance it with Ajax as below:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;#someform&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;event&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; $form = $(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n\n    $.&lt;span class=&quot;hljs-title function_&quot;&gt;post&lt;/span&gt;($form.&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;action&quot;&lt;/span&gt;), $form.&lt;span class=&quot;hljs-title function_&quot;&gt;serialize&lt;/span&gt;(), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n    });\n\n    event.&lt;span class=&quot;hljs-title function_&quot;&gt;preventDefault&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Important! Prevents submitting the form.&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can in the servlet distinguish between normal requests and Ajax requests as below:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;baz&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;baz&quot;&lt;/span&gt;);\n\n    &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ajax&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;XMLHttpRequest&quot;&lt;/span&gt;.equals(request.getHeader(&lt;span class=&quot;hljs-string&quot;&gt;&quot;X-Requested-With&quot;&lt;/span&gt;));\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (ajax) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Handle Ajax (JSON or XML) response.&lt;/span&gt;\n    } &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Handle regular (JSP) response.&lt;/span&gt;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;a href=&quot;https://malsup.com/jquery/form/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jQuery Form plugin&lt;/a&gt; does less or more the same as above jQuery example, but it has additional transparent support for &lt;code&gt;multipart/form-data&lt;/code&gt; forms as required by file uploads.&lt;/p&gt;\n&lt;h1&gt;Manually sending request parameters to servlet&lt;/h1&gt;\n&lt;p&gt;If you don&apos;t have a form at all, but just wanted to interact with the servlet &quot;in the background&quot; whereby you&apos;d like to POST some data, then you can use jQuery &lt;a href=&quot;https://api.jquery.com/jquery.param/&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;$.param()&lt;/code&gt;&lt;/a&gt; to easily convert a JSON object to an URL-encoded query string.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; params = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;fooValue&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;bar&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;barValue&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;baz&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;bazValue&quot;&lt;/span&gt;\n};\n\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;post&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt;, $.&lt;span class=&quot;hljs-title function_&quot;&gt;param&lt;/span&gt;(params), &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The same &lt;code&gt;doPost()&lt;/code&gt; method as shown here above can be reused. Do note that above syntax also works with &lt;code&gt;$.get()&lt;/code&gt; in jQuery and &lt;code&gt;doGet()&lt;/code&gt; in servlet.&lt;/p&gt;\n&lt;h1&gt;Manually sending JSON object to servlet&lt;/h1&gt;\n&lt;p&gt;If you however intend to send the JSON object as a whole instead of as individual request parameters for some reason, then you&apos;d need to serialize it to a string using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; (not part of jQuery) and instruct jQuery to set request content type to &lt;code&gt;application/json&lt;/code&gt; instead of (default) &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. This can&apos;t be done via &lt;code&gt;$.post()&lt;/code&gt; convenience function, but needs to be done via &lt;code&gt;$.ajax()&lt;/code&gt; as below.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; data = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;foo&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;fooValue&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;bar&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;barValue&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;baz&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;bazValue&quot;&lt;/span&gt;\n};\n\n$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n    &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;someservlet&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;// NOT dataType!&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(data),\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Do note that a lot of starters mix &lt;code&gt;contentType&lt;/code&gt; with &lt;code&gt;dataType&lt;/code&gt;. The &lt;code&gt;contentType&lt;/code&gt; represents the type of the &lt;strong&gt;request&lt;/strong&gt; body. The &lt;code&gt;dataType&lt;/code&gt; represents the (expected) type of the &lt;strong&gt;response&lt;/strong&gt; body, which is usually unnecessary as jQuery already autodetects it based on response&apos;s &lt;code&gt;Content-Type&lt;/code&gt; header.&lt;/p&gt;\n&lt;p&gt;Then, in order to process the JSON object in the servlet which isn&apos;t being sent as individual request parameters but as a whole JSON string the above way, you only need to manually parse the request body using a JSON tool instead of using &lt;code&gt;getParameter()&lt;/code&gt; the usual way. Namely, servlets don&apos;t support &lt;code&gt;application/json&lt;/code&gt; formatted requests, but only &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; or &lt;code&gt;multipart/form-data&lt;/code&gt; formatted requests. Gson also supports parsing a JSON string into a JSON object.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;JsonObject&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;().fromJson(request.getReader(), JsonObject.class);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;).getAsString();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bar&quot;&lt;/span&gt;).getAsString();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;baz&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;baz&quot;&lt;/span&gt;).getAsString();\n&lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Do note that this all is more clumsy than just using &lt;code&gt;$.param()&lt;/code&gt;. Normally, you want to use &lt;code&gt;JSON.stringify()&lt;/code&gt; only if the target service is e.g. a JAX-RS (RESTful) service which is for some reason only capable of consuming JSON strings and not regular request parameters.&lt;/p&gt;\n&lt;h1&gt;Sending a redirect from servlet&lt;/h1&gt;\n&lt;p&gt;Important to realize and understand is that any &lt;code&gt;sendRedirect()&lt;/code&gt; and &lt;code&gt;forward()&lt;/code&gt; call by the servlet on an ajax request would only forward or redirect &lt;em&gt;the Ajax request itself&lt;/em&gt; and not the main document/window where the Ajax request originated. JavaScript/jQuery would in such case only retrieve the redirected/forwarded response as &lt;code&gt;responseText&lt;/code&gt; variable in the callback function. If it represents a whole HTML page and not an Ajax-specific XML or JSON response, then all you could do is to replace the current document with it.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;document.open();\ndocument.write(responseText);\ndocument.close();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note that this doesn&apos;t change the URL as end user sees in browser&apos;s address bar. So there are issues with bookmarkability. Therefore, it&apos;s much better to just return an &quot;instruction&quot; for JavaScript/jQuery to perform a redirect instead of returning the whole content of the redirected page. E.g., by returning a boolean, or a URL.&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;redirectURL&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://example.com&quot;&lt;/span&gt;;\n\nMap&amp;lt;String, String&amp;gt; data = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();\ndata.put(&lt;span class=&quot;hljs-string&quot;&gt;&quot;redirect&quot;&lt;/span&gt;, redirectURL);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;().toJson(data);\n\nresponse.setContentType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;);\nresponse.setCharacterEncoding(&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);\nresponse.getWriter().write(json);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;function(responseJson) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (responseJson.redirect) {\n        window.location = responseJson.redirect;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;See also:&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2132242/need-to-call-servlet-from-javascript-along-with-parameters&quot;&gt;Call Servlet and invoke Java code from JavaScript along with parameters&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3832792/access-java-servlet-jsp-jstl-el-variables-in-javascript&quot;&gt;Access Java / Servlet / JSP / JSTL / EL variables in JavaScript&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2600582/how-to-switch-easily-between-ajax-based-website-and-basic-html-website/&quot;&gt;How can I switch easily between an Ajax-based website and a basic HTML website?&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6914152/how-to-upload-files-to-server-using-jsp-servlet-and-ajax&quot;&gt;How can I upload files to a server using JSP/Servlet and Ajax?&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;The right way to update the page currently displayed in the user&apos;s browser (without reloading it) is to have some code executing in the browser update the page&apos;s DOM.&lt;/p&gt;\n&lt;p&gt;That code is typically JavaScript that is embedded in or linked from the HTML page, hence the Ajax suggestion.  (In fact, if we assume that the updated text comes from the server via an HTTP request, this is classic Ajax.)&lt;/p&gt;\n&lt;p&gt;It is also possible to implement this kind of thing using some browser plugin or add-on, though it may be tricky for a plugin to reach into the browser&apos;s data structures to update the DOM.  (Native code plugins normally write to some graphics frame that is embedded in the page.)&lt;/p&gt;\n    ","\n&lt;p&gt;I will show you a whole example of a servlet and how do an Ajax call.&lt;/p&gt;\n&lt;p&gt;Here, we are going to create the simple example to create the login form using a servlet.&lt;/p&gt;\n&lt;h3&gt;File &lt;em&gt;index.html&lt;/em&gt;&lt;/h3&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n   Name:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n   Password:&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;userpass&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n   &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;login&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;An Ajax sample&lt;/h3&gt;\n&lt;pre class=&quot;lang-javascript s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.ajax\n({\n    &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;LoginServlet=&apos;&lt;/span&gt; + name + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;name=&apos;&lt;/span&gt; + type + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;pass=&apos;&lt;/span&gt; + password,\n    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: url,\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;:&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;content&lt;/span&gt;)\n    {\n        $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#center&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(content);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;LoginServlet servlet code:&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; abc.servlet;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.File;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AuthenticationServlet&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HttpServlet&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1L&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException\n    {\n        doPost(request, response);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doPost&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request,\n                          HttpServletResponse response)&lt;/span&gt;\n                          &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n            &lt;span class=&quot;hljs-type&quot;&gt;HttpSession&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getSession();\n            &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pass&quot;&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;/// Your Code&lt;/span&gt;\n            out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sucess / failer&quot;&lt;/span&gt;)\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception ex) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// System.err.println(&quot;Initial SessionFactory creation failed.&quot;);&lt;/span&gt;\n            ex.printStackTrace();\n            System.exit(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-javascript s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n    &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;URL to hit on servelet&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(json),\n    &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;json&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;response&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// We have the response&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(response.&lt;span class=&quot;hljs-property&quot;&gt;status&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&quot;SUCCESS&quot;&lt;/span&gt;){\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#info&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Info  has been added to the list successfully.&amp;lt;br&amp;gt;&quot;&lt;/span&gt; +\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;The details are as follws: &amp;lt;br&amp;gt; Name: &quot;&lt;/span&gt;);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n            $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#info&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Sorry, there is some thing wrong with the data provided.&quot;&lt;/span&gt;);\n        }\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;){\n        &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Error: &apos;&lt;/span&gt; + e);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Ajax (also AJAX), an acronym for Asynchronous JavaScript and XML, is a group of interrelated web development techniques used on the client-side to create asynchronous web applications. With Ajax, web applications can send data to, and retrieve data from, a server asynchronously.&lt;/p&gt;\n&lt;p&gt;Below is the example code:&lt;/p&gt;\n&lt;p&gt;A JSP page JavaScript function to submit data to a servlet with two variables, firstName and lastName:&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;function &lt;span class=&quot;hljs-title function_&quot;&gt;onChangeSubmitCallWebServiceAJAX&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;\n{\n    createXmlHttpRequest();\n    &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; document.getElementById(&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;).value;\n    &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lastName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; document.getElementById(&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastName&quot;&lt;/span&gt;).value;\n    xmlHttp.open(&lt;span class=&quot;hljs-string&quot;&gt;&quot;GET&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;/AJAXServletCallSample/AjaxServlet?firstName=&quot;&lt;/span&gt;\n    + firstName + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;amp;lastName=&quot;&lt;/span&gt; + lastName, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)\n    xmlHttp.onreadystatechange = handleStateChange;\n    xmlHttp.send(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Servlet to read data send back to JSP in XML format (you could use text as well. You just need to change the response content to text and render data on JavaScript function.)&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/**\n * &lt;span class=&quot;hljs-doctag&quot;&gt;@see&lt;/span&gt; HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)\n */&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException {\n\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lastName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastName&quot;&lt;/span&gt;);\n\n    response.setContentType(&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/xml&quot;&lt;/span&gt;);\n    response.setHeader(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Cache-Control&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;);\n    response.getWriter().write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;details&amp;gt;&quot;&lt;/span&gt;);\n    response.getWriter().write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;firstName&amp;gt;&quot;&lt;/span&gt; + firstName + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/firstName&amp;gt;&quot;&lt;/span&gt;);\n    response.getWriter().write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;lastName&amp;gt;&quot;&lt;/span&gt; + lastName + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/lastName&amp;gt;&quot;&lt;/span&gt;);\n    response.getWriter().write(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;/details&amp;gt;&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Normally you cant update a page from a servlet. The client (browser) has to request an update. Either the  client loads a whole new page or it requests an update to a part of an existing page. This technique is called Ajax.&lt;/p&gt;\n    ","\n&lt;p&gt;Using &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrap_%28front-end_framework%29&quot; rel=&quot;nofollow noreferrer&quot;&gt;Bootstrap&lt;/a&gt; multi select:&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Ajax&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;function() { $.ajax({\n    type: &lt;span class=&quot;hljs-string&quot;&gt;&quot;get&quot;&lt;/span&gt;,\n    url: &lt;span class=&quot;hljs-string&quot;&gt;&quot;OperatorController&quot;&lt;/span&gt;,\n    data: &lt;span class=&quot;hljs-string&quot;&gt;&quot;input=&quot;&lt;/span&gt; + $(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#province&apos;&lt;/span&gt;).val(),\n    success: function(msg) {\n    &lt;span class=&quot;hljs-type&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;arrayOfObjects&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; eval(msg);\n    $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#operators&quot;&lt;/span&gt;).multiselect(&lt;span class=&quot;hljs-string&quot;&gt;&apos;dataprovider&apos;&lt;/span&gt;,\n    arrayOfObjects);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// $(&apos;#output&apos;).append(obj);&lt;/span&gt;\n    },\n    dataType: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;\n    });}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;In Servlet&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-java s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;input&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    "],"id":204,"title":"How should I use servlets and Ajax?","content":"\n                \n&lt;p&gt;Whenever I print something inside the servlet and call it by the webbrowser, it returns a new page containing that text. Is there a way to print the text in the current page using Ajax?&lt;/p&gt;\n&lt;p&gt;&lt;sub&gt;I&apos;m very new to web applications and servlets.&lt;/sub&gt;&lt;/p&gt;\n    ","slug":"how-should-i-use-servlets-and-ajax-1657385492684","postType":"QUESTION","createdAt":"2022-07-09T16:51:32.000Z","updatedAt":"2022-07-09T16:51:32.000Z","tags":[],"relatedQuestions":[]},"randomQuestions":[{"title":"How do I import a module given the full path?","slug":"how-do-i-import-a-module-given-the-full-path-1657388139965"},{"title":"Why JSF calls getters multiple times","slug":"why-jsf-calls-getters-multiple-times-1657388244489"},{"title":"Is there a difference between \"==\" and \"is\"?","slug":"is-there-a-difference-between-\"\"-and-\"is\"-1657387902231"},{"title":"Where can I find documentation on formatting a date in JavaScript?","slug":"where-can-i-find-documentation-on-formatting-a-date-in-javascript-1657384878157"},{"title":"Is floating point math broken?","slug":"is-floating-point-math-broken-1657384238910"},{"title":"Open a URL in a new tab (and not a new window)","slug":"open-a-url-in-a-new-tab-(and-not-a-new-window)-1657387699598"},{"title":"Get the data received in a Flask request","slug":"get-the-data-received-in-a-flask-request-1657387804432"},{"title":"Short description of the scoping rules?","slug":"short-description-of-the-scoping-rules-1657384853121"},{"title":"Can I bind an array to an IN() condition in a PDO query?","slug":"can-i-bind-an-array-to-an-in()-condition-in-a-pdo-query-1657388382858"},{"title":"Are global variables thread-safe in Flask? How do I share data between requests?","slug":"are-global-variables-thread-safe-in-flask-how-do-i-share-data-between-requests-1657387949951"},{"title":"How does the Windows Command Interpreter (CMD.EXE) parse scripts?","slug":"how-does-the-windows-command-interpreter-(cmd.exe)-parse-scripts-1657387731560"},{"title":"ggplot with 2 y axes on each side and different scales","slug":"ggplot-with-2-y-axes-on-each-side-and-different-scales-1657388519163"},{"title":"Is it possible for flex items to align tightly to the items above them?","slug":"is-it-possible-for-flex-items-to-align-tightly-to-the-items-above-them-1657388511179"},{"title":"How to make good reproducible pandas examples","slug":"how-to-make-good-reproducible-pandas-examples-1657384310402"},{"title":"Scroll to an element with jQuery","slug":"scroll-to-an-element-with-jquery-1657388523178"},{"title":"How to calculate the difference between two dates using PHP?","slug":"how-to-calculate-the-difference-between-two-dates-using-php-1657387409560"},{"title":"Why does this PDO statement silently fail?","slug":"why-does-this-pdo-statement-silently-fail-1657384892133"},{"title":"What is the difference between \"px\", \"dip\", \"dp\" and \"sp\"?","slug":"what-is-the-difference-between-\"px\"-\"dip\"-\"dp\"-and-\"sp\"-1657388093250"},{"title":"Does Python have a ternary conditional operator?","slug":"does-python-have-a-ternary-conditional-operator-1657387555448"},{"title":"How to Sort a Multi-dimensional Array by Value","slug":"how-to-sort-a-multi-dimensional-array-by-value-1657387746110"}]},"__N_SSG":true}