{"pageProps":{"data":{"answer":["\n&lt;h3&gt;Update:&lt;/h3&gt;\n\n&lt;p&gt;ECMAScript 6 (ES6) introduces a new type of literal, namely &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;template literals&lt;/strong&gt;&lt;/a&gt;. They have many features, variable interpolation among others, but most importantly for this question, they can be multiline.&lt;/p&gt;\n\n&lt;p&gt;A template literal is delimited by &lt;em&gt;backticks&lt;/em&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; html = &lt;span class=&quot;hljs-string&quot;&gt;`\n  &amp;lt;div&amp;gt;\n    &amp;lt;span&amp;gt;Some HTML here&amp;lt;/span&amp;gt;\n  &amp;lt;/div&amp;gt;\n`&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(Note: I&apos;m not advocating to use HTML in strings)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/#test-template_literals&quot; rel=&quot;noreferrer&quot;&gt;Browser support is OK&lt;/a&gt;, but you can use &lt;a href=&quot;https://babeljs.io/&quot; rel=&quot;noreferrer&quot;&gt;transpilers&lt;/a&gt; to be more compatible.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;h3&gt;Original ES5 answer:&lt;/h3&gt;\n\n&lt;p&gt;Javascript doesn&apos;t have a here-document syntax. You can escape the literal newline, however, which comes close:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo \\\nbar&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;ES6 Update:&lt;/h2&gt;\n\n&lt;p&gt;As the first answer mentions, with ES6/Babel, you can now create multi-line strings simply by using backticks:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; htmlString = &lt;span class=&quot;hljs-string&quot;&gt;`Say hello to \nmulti-line\nstrings!`&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Interpolating variables is a popular new feature that comes with back-tick delimited strings:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; htmlString = &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${user.name}&lt;/span&gt; liked your post about strings`&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This just transpiles down to concatenation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;user.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&apos; liked your post about strings&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Original ES5 answer:&lt;/h2&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;https://google.github.io/styleguide/javascriptguide.xml?showone=Multiline_string_literals#Multiline_string_literals&quot; rel=&quot;noreferrer&quot;&gt;Google&apos;s JavaScript style guide&lt;/a&gt; recommends to use string concatenation instead of escaping newlines:&lt;/p&gt;\n  \n  &lt;p&gt;&lt;strong&gt;Do not do this:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myString = &lt;span class=&quot;hljs-string&quot;&gt;&apos;A rather long string of English text, an error message \\\n                actually that just keeps going and going -- an error \\\n                message to make the Energizer bunny blush (right through \\\n                those Schwarzenegger shades)! Where was I? Oh yes, \\\n                you\\&apos;ve got an error and all the extraneous whitespace is \\\n                just gravy.  Have a nice day.&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;The whitespace at the beginning of each line can&apos;t be safely stripped at compile time; whitespace after the slash will result in tricky errors; and while most script engines support this, it is not part of ECMAScript.&lt;/p&gt;\n  \n  &lt;p&gt;&lt;strong&gt;Use string concatenation instead:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myString = &lt;span class=&quot;hljs-string&quot;&gt;&apos;A rather long string of English text, an error message &apos;&lt;/span&gt; +\n               &lt;span class=&quot;hljs-string&quot;&gt;&apos;actually that just keeps going and going -- an error &apos;&lt;/span&gt; +\n               &lt;span class=&quot;hljs-string&quot;&gt;&apos;message to make the Energizer bunny blush (right through &apos;&lt;/span&gt; +\n               &lt;span class=&quot;hljs-string&quot;&gt;&apos;those Schwarzenegger shades)! Where was I? Oh yes, &apos;&lt;/span&gt; +\n               &lt;span class=&quot;hljs-string&quot;&gt;&apos;you\\&apos;ve got an error and all the extraneous whitespace is &apos;&lt;/span&gt; +\n               &lt;span class=&quot;hljs-string&quot;&gt;&apos;just gravy.  Have a nice day.&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;the pattern &lt;code&gt;text = &amp;lt;&amp;lt;&quot;HERE&quot; This Is A Multiline String HERE&lt;/code&gt; is not available in js (I remember using it much in my good old Perl days).&lt;/p&gt;\n\n&lt;p&gt;To keep oversight with complex or long multiline strings I sometimes use an array pattern:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myString = \n   [&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;div id=&quot;someId&quot;&amp;gt;&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;some content&amp;lt;br /&amp;gt;&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;a href=&quot;#someRef&quot;&amp;gt;someRefTxt&amp;lt;/a&amp;gt;&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/div&amp;gt;&apos;&lt;/span&gt;\n   ].&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or the pattern anonymous already showed (escape newline), which can be an ugly block in your code:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myString = \n       &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;div id=&quot;someId&quot;&amp;gt; \\\nsome content&amp;lt;br /&amp;gt; \\\n&amp;lt;a href=&quot;#someRef&quot;&amp;gt;someRefTxt&amp;lt;/a&amp;gt; \\\n&amp;lt;/div&amp;gt;&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&apos;s another weird but working &apos;trick&apos;&lt;sup&gt;&lt;b&gt;1&lt;/b&gt;&lt;/sup&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myString = (&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {&lt;span class=&quot;hljs-comment&quot;&gt;/*\n   &amp;lt;div id=&quot;someId&quot;&amp;gt;\n     some content&amp;lt;br /&amp;gt;\n     &amp;lt;a href=&quot;#someRef&quot;&amp;gt;someRefTxt&amp;lt;/a&amp;gt;\n    &amp;lt;/div&amp;gt;        \n*/&lt;/span&gt;}).&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/[^]*\\/\\*([^]*)\\*\\/\\}$/&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;external edit: &lt;a href=&quot;http://jsfiddle.net/orwellophile/hna15vLw/2/&quot; rel=&quot;noreferrer&quot;&gt;jsfiddle&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;ES20xx&lt;/strong&gt; supports spanning strings over multiple lines using &lt;a href=&quot;http://www.2ality.com/2011/09/quasi-literals.html&quot; rel=&quot;noreferrer&quot;&gt;template strings&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;hljs-string&quot;&gt;`This is a text\n    with multiple lines.\n    Escapes are interpreted,\n    \\n is a newline.`&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;`This is a text\n    with multiple lines.\n    Escapes are not interpreted,\n    \\n is not a newline.`&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;sup&gt;&lt;b&gt;1&lt;/b&gt;&lt;/sup&gt; Note: this will be lost after minifying/obfuscating your code&lt;/p&gt;\n    ","\n&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; have multiline strings in pure JavaScript.&lt;/p&gt;\n&lt;p&gt;This method is based on the serialization of functions, which is &lt;a href=&quot;http://es5.github.io/#x15.3.4.2&quot; rel=&quot;noreferrer&quot;&gt;defined to be implementation-dependent&lt;/a&gt;. It does work in the most browsers (see below), but there&apos;s no guarantee that it will still work in the future, so do not rely on it.&lt;/p&gt;\n&lt;p&gt;Using the following function:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;hereDoc&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;f&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; f.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;().\n      &lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/^[^\\/]+\\/\\*!?/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;).\n      &lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\*\\/[^\\/]+$/&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can have here-documents like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tennysonQuote = &lt;span class=&quot;hljs-title function_&quot;&gt;hereDoc&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {&lt;span class=&quot;hljs-comment&quot;&gt;/*!\n  Theirs not to make reply,\n  Theirs not to reason why,\n  Theirs but to do and die\n*/&lt;/span&gt;});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The method has successfully been tested in the following browsers (not mentioned = not tested):&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;IE 4 - 10&lt;/li&gt;\n&lt;li&gt;Opera 9.50 - 12 (not in 9-)&lt;/li&gt;\n&lt;li&gt;Safari 4 - 6 (not in 3-)&lt;/li&gt;\n&lt;li&gt;Chrome 1 - 45&lt;/li&gt;\n&lt;li&gt;Firefox 17 - 21 (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString#Notes&quot; rel=&quot;noreferrer&quot;&gt;not in 16-&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;Rekonq 0.7.0 - 0.8.0&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;Not supported in Konqueror 4.7.4&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Be careful with your minifier, though. It tends to remove comments. For the &lt;a href=&quot;http://www.julienlecomte.net/yuicompressor/README&quot; rel=&quot;noreferrer&quot;&gt;YUI compressor&lt;/a&gt;, a comment starting with &lt;code&gt;/*!&lt;/code&gt; (like the one I used) will be preserved.&lt;/p&gt;\n&lt;p&gt;I think a &lt;em&gt;real&lt;/em&gt; solution would be to use &lt;a href=&quot;http://coffeescript.org/#strings&quot; rel=&quot;noreferrer&quot;&gt;CoffeeScript&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;ES6 UPDATE: You could use backtick instead of creating a function with a comment and running toString on the comment. The regex would need to be updated to only strip spaces. You could also have a string prototype method for doing this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; foo = &lt;span class=&quot;hljs-string&quot;&gt;`\n  bar loves cake\n  baz loves beer\n  beer loves people\n`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;removeIndentation&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Someone should write this .removeIndentation string method... ;)&lt;/p&gt;\n    ","\n&lt;p&gt;You can do this...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; string = &lt;span class=&quot;hljs-string&quot;&gt;&apos;This is\\n&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;a multiline\\n&apos;&lt;/span&gt; + \n&lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I came up with this very jimmy rigged method of a multi lined string. Since converting a function into a string also returns any comments inside the function you can use the comments as your string using a multilined comment /**/. You just have to trim off the ends and you have your string.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myString = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){&lt;span class=&quot;hljs-comment&quot;&gt;/*\n    This is some\n    awesome multi-lined\n    string using a comment \n    inside a function \n    returned as a string.\n    Enjoy the jimmy rigged code.\n*/&lt;/span&gt;}.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(myString)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I&apos;m surprised I didn&apos;t see this, because it works everywhere I&apos;ve tested it and is very useful for e.g. templates:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;bogus&quot;&lt;/span&gt; id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multi&quot;&lt;/span&gt;&amp;gt;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;My&lt;/span&gt;\n    multiline\n    string\n&amp;lt;/script&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#multi&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;());\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Does anybody know of an environment where there is HTML but it doesn&apos;t work?&lt;/p&gt;\n    ","\n&lt;p&gt;I solved this by outputting a div, making it hidden, and calling the div id by jQuery when I needed it.&lt;/p&gt;\n\n&lt;p&gt;e.g.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;div id=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UniqueID&quot;&lt;/span&gt; style=&lt;span class=&quot;hljs-string&quot;&gt;&quot;display:none;&quot;&lt;/span&gt;&amp;gt;\n     &lt;span class=&quot;hljs-title class_&quot;&gt;Strings&lt;/span&gt;\n     &lt;span class=&quot;hljs-title class_&quot;&gt;On&lt;/span&gt;\n     &lt;span class=&quot;hljs-title class_&quot;&gt;Multiple&lt;/span&gt;\n     &lt;span class=&quot;hljs-title class_&quot;&gt;Lines&lt;/span&gt;\n     &lt;span class=&quot;hljs-title class_&quot;&gt;Here&lt;/span&gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then when I need to get the string, I just use the following jQuery:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#UniqueID&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which returns my text on multiple lines. If I call &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#UniqueID&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I get:&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/vIVFc.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There are multiple ways to achieve this&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1. Slash concatenation&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MultiLine&lt;/span&gt;=  &lt;span class=&quot;hljs-string&quot;&gt;&apos;1\\\n    2\\\n    3\\\n    4\\\n    5\\\n    6\\\n    7\\\n    8\\\n    9&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;2. regular concatenation&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MultiLine&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;\n+&lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;\n+&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;\n+&lt;span class=&quot;hljs-string&quot;&gt;&apos;4&apos;&lt;/span&gt;\n+&lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;3. Array Join concatenation&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MultiLine&lt;/span&gt; = [\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;,\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;2&apos;&lt;/span&gt;,\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;3&apos;&lt;/span&gt;,\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;4&apos;&lt;/span&gt;,\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;5&apos;&lt;/span&gt;\n].&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Performance wise, &lt;strong&gt;Slash concatenation&lt;/strong&gt; (first one) is the fastest.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Refer&lt;/strong&gt; &lt;a href=&quot;http://jsperf.com/zp-string-concatenation/6&quot;&gt;this test case&lt;/a&gt; for more details regarding the performance &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;With the &lt;strong&gt;ES2015&lt;/strong&gt;, we can take advantage of its Template strings feature. With it, we just need to use back-ticks for creating multi line strings&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-string&quot;&gt;`&amp;lt;h1&amp;gt;{{title}}&amp;lt;/h1&amp;gt;\n  &amp;lt;h2&amp;gt;{{hero.name}} details!&amp;lt;/h2&amp;gt;\n  &amp;lt;div&amp;gt;&amp;lt;label&amp;gt;id: &amp;lt;/label&amp;gt;{{hero.id}}&amp;lt;/div&amp;gt;\n  &amp;lt;div&amp;gt;&amp;lt;label&amp;gt;name: &amp;lt;/label&amp;gt;{{hero.name}}&amp;lt;/div&amp;gt;\n  `&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Using script tags:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;add a &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; block containing your multiline text into &lt;code&gt;head&lt;/code&gt; tag;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;get your multiline text as is... (watch out for text encoding: UTF-8, ASCII)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script&amp;gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// pure javascript&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mySoapMessage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt; ;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// using JQuery&apos;s document ready for safety&lt;/span&gt;\n    $(&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; text = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#mySoapMessage&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;html&lt;/span&gt;(); \n\n    });\n\n&amp;lt;/script&amp;gt;\n\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;mySoapMessage&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-xml&quot;&gt;\n\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;soapenv:Envelope&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns:soapenv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns:typ&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n       &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;soapenv:Header&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n       &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;soapenv:Body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;typ:getConvocadosElement&lt;/span&gt;&amp;gt;&lt;/span&gt;\n             ...\n          &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;typ:getConvocadosElement&lt;/span&gt;&amp;gt;&lt;/span&gt;\n       &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;soapenv:Body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;soapenv:Envelope&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;&amp;lt;!-- this comment will be present on your string --&amp;gt;&lt;/span&gt;\n    //uh-oh, javascript comments...  SOAP request will fail \n\n\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I like this syntax and indendation:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;string = &lt;span class=&quot;hljs-string&quot;&gt;&apos;my long string...\\n&apos;&lt;/span&gt;\n       + &lt;span class=&quot;hljs-string&quot;&gt;&apos;continue here\\n&apos;&lt;/span&gt;\n       + &lt;span class=&quot;hljs-string&quot;&gt;&apos;and here.&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(but actually can&apos;t be considered as multiline string)&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Downvoters&lt;/strong&gt;: This code is supplied for information only. &lt;/p&gt;\n\n&lt;p&gt;This has been tested in Fx 19 and Chrome 24 on Mac  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/mplungjan/pMSc8/&quot; rel=&quot;nofollow noreferrer&quot;&gt;DEMO&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; new_comment; &lt;span class=&quot;hljs-comment&quot;&gt;/*&amp;lt;&amp;lt;&amp;lt;EOF \n    &amp;lt;li class=&quot;photobooth-comment&quot;&amp;gt;\n       &amp;lt;span class=&quot;username&quot;&amp;gt;\n          &amp;lt;a href=&quot;#&quot;&amp;gt;You&amp;lt;/a&amp;gt;:\n       &amp;lt;/span&amp;gt;\n       &amp;lt;span class=&quot;comment-text&quot;&amp;gt;\n          $text\n       &amp;lt;/span&amp;gt; \n       @&amp;lt;span class=&quot;comment-time&quot;&amp;gt;\n          2d\n       &amp;lt;/span&amp;gt; ago\n    &amp;lt;/li&amp;gt;\nEOF*/&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// note the script tag here is hardcoded as the FIRST tag &lt;/span&gt;\nnew_comment=&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;currentScript&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EOF&quot;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]; \n&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ul&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;=new_comment.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;$text&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;This is a dynamically created text&apos;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;There&apos;s this library that makes it beautiful:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/multiline&quot;&gt;https://github.com/sindresorhus/multiline&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;Before&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;!doctype html&amp;gt;&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;html&amp;gt;&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;   &amp;lt;body&amp;gt;&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;       &amp;lt;h1&amp;gt; unicorns&amp;lt;/h1&amp;gt;&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;   &amp;lt;/body&amp;gt;&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/html&amp;gt;&apos;&lt;/span&gt; +\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;After&lt;/h3&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-title function_&quot;&gt;multiline&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){&lt;span class=&quot;hljs-comment&quot;&gt;/*\n&amp;lt;!doctype html&amp;gt;\n&amp;lt;html&amp;gt;\n    &amp;lt;body&amp;gt;\n        &amp;lt;h1&amp;gt; unicorns&amp;lt;/h1&amp;gt;\n    &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n*/&lt;/span&gt;});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Found a lot of over engineered answers here.\nThe two best answers in my opinion were:&lt;/p&gt;\n&lt;p&gt;1:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;hljs-string&quot;&gt;`Multiline string.\n            foo.\n            bar.`&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;which eventually logs:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Multiline&lt;/span&gt; string.\n           foo.\n           bar.  \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;hljs-string&quot;&gt;`Multiline string.\nfoo.\nbar.`&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;That logs it correctly but it&apos;s ugly in the script file if str is nested inside functions / objects etc...:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Multiline&lt;/span&gt; string.\nfoo.\nbar.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;My really simple answer with regex which logs the str correctly:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;hljs-string&quot;&gt;`Multiline string.\n           foo.\n           bar.`&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\n +/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Please note that it is not the perfect solution but it works if you are sure that after the new line (\\n) at least one space will come (+ means at least one occurrence). It also will work with * (zero or more).&lt;/p&gt;\n&lt;p&gt;You can be more explicit and use {n,} which means at least n occurrences.&lt;/p&gt;\n    ","\n&lt;p&gt;The equivalent in javascript is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;hljs-string&quot;&gt;`\nThis\nIs\nA\nMultiline\nString\n`&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&apos;s the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components&quot;&gt;specification&lt;/a&gt;. See browser support at the bottom of this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings&quot;&gt;page&lt;/a&gt;. Here are some &lt;a href=&quot;https://developers.google.com/web/updates/2015/01/ES6-Template-Strings?hl=en#multiline-strings&quot;&gt;examples&lt;/a&gt; too.&lt;/p&gt;\n    ","\n&lt;p&gt;This works in IE, Safari, Chrome and Firefox:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;script type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;crazy_idea&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;thorn_in_my_side&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;table  border=&quot;0&quot;&amp;gt;\n                        &amp;lt;tr&amp;gt;\n                            &amp;lt;td &amp;gt;&amp;lt;span class=&quot;mlayouttablecellsdynamic&quot;&amp;gt;PACKAGE price $65.00&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;\n                        &amp;lt;/tr&amp;gt;\n                    &amp;lt;/table&amp;gt;&apos;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;($(&lt;span class=&quot;hljs-string&quot;&gt;&quot;.crazy_idea&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;attr&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;thorn_in_my_side&quot;&lt;/span&gt;));\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;to sum up, I have tried 2 approaches listed here in user javascript programming (Opera 11.01):&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;this one didn&apos;t work: &lt;a href=&quot;https://stackoverflow.com/questions/805107/multiline-strings-in-javascript/805111#805111&quot;&gt;Creating multiline strings in JavaScript&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;this worked fairly well, I have also figured out how to make it look good in Notepad++ source view: &lt;a href=&quot;https://stackoverflow.com/questions/805107/multiline-strings-in-javascript/5571069#5571069&quot;&gt;Creating multiline strings in JavaScript&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;So I recommend the working approach for Opera user JS users. Unlike what the author was saying: &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;It doesn&apos;t work on firefox or opera; only on IE, chrome and safari. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It DOES work in Opera 11. At least in user JS scripts. Too bad I can&apos;t comment on individual answers or upvote the answer, I&apos;d do it immediately. If possible, someone with higher privileges please do it for me.&lt;/p&gt;\n    ","\n&lt;p&gt;My extension to &lt;a href=&quot;https://stackoverflow.com/a/15558082/80404&quot;&gt;https://stackoverflow.com/a/15558082/80404&lt;/a&gt;.\nIt expects comment in a form &lt;code&gt;/*! any multiline comment */&lt;/code&gt; where symbol ! is used to prevent removing by minification (at least for YUI compressor)&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Function&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;extractComment&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; startComment = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/*!&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; endComment = &lt;span class=&quot;hljs-string&quot;&gt;&quot;*/&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = str.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(startComment);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; end = str.&lt;span class=&quot;hljs-title function_&quot;&gt;lastIndexOf&lt;/span&gt;(endComment);\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; str.&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(start + startComment.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;, -(str.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - end));\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; tmpl = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-comment&quot;&gt;/*!\n &amp;lt;div class=&quot;navbar-collapse collapse&quot;&amp;gt;\n    &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;\n    &amp;lt;/ul&amp;gt;\n &amp;lt;/div&amp;gt;\n*/&lt;/span&gt;}.&lt;span class=&quot;hljs-title function_&quot;&gt;extractComment&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Updated for 2015&lt;/strong&gt;: it&apos;s six years later now:  most people use a module loader, and the main module systems each have ways of loading templates. It&apos;s not inline, but the most common type of multiline string are templates, and &lt;strong&gt;templates should generally be kept out of JS anyway&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;h2&gt;require.js: &apos;require text&apos;.&lt;/h2&gt;\n\n&lt;p&gt;Using &lt;a href=&quot;https://github.com/requirejs/text&quot; rel=&quot;noreferrer&quot;&gt;require.js &apos;text&apos; plugin&lt;/a&gt;, with a multiline template in &lt;strong&gt;template.html&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; template = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;text!template.html&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;NPM/browserify: the &apos;brfs&apos; module&lt;/h2&gt;\n\n&lt;p&gt;Browserify &lt;a href=&quot;https://www.npmjs.com/package/brfs&quot; rel=&quot;noreferrer&quot;&gt;uses a &apos;brfs&apos; module&lt;/a&gt; to load text files. This will actually build your template into your bundled HTML.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fs = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;fs&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; template = fs.&lt;span class=&quot;hljs-title function_&quot;&gt;readFileSync&lt;/span&gt;(template.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;, &apos;&lt;/span&gt;utf8&lt;span class=&quot;hljs-string&quot;&gt;&apos;);\n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Easy. &lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re willing to use the escaped newlines, they can be used &lt;em&gt;nicely&lt;/em&gt;.  &lt;strong&gt;It looks like a document with a page border&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/e51kg.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;\n    ","\n&lt;h1&gt;Exact&lt;/h1&gt;\n&lt;p&gt;Ruby &lt;a href=&quot;https://onlinegdb.com/SkmXI6R38&quot; rel=&quot;noreferrer&quot;&gt;produce&lt;/a&gt;: &lt;code&gt;&quot;This\\nIs\\nA\\nMultiline\\nString\\n&quot;&lt;/code&gt; - below JS produce exact same string&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;text = &lt;span class=&quot;hljs-string&quot;&gt;`This\nIs\nA\nMultiline\nString\n`&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// TEST&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(text));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(text);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;This is improvement to &lt;a href=&quot;https://stackoverflow.com/a/33523770/860099&quot;&gt;Lonnie Best answer&lt;/a&gt; because new-line characters in his answer are not exactly the same positions as in ruby output&lt;/p&gt;\n    ","\n&lt;p&gt;The ES6 way of doing it would be by using template literals:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; str = &lt;span class=&quot;hljs-string&quot;&gt;`This \n\nis \n\na\n\nmultiline text`&lt;/span&gt;; \n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(str);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;More reference &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;A simple way to print multiline strings in JavaScript is by using template literals(template strings) denoted by backticks (` `). you can also use variables inside a template string-like (` &lt;code&gt;name is ${value}&lt;/code&gt; `)&lt;/p&gt;\n&lt;p&gt;You can also&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; value = &lt;span class=&quot;hljs-string&quot;&gt;`multiline`&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; text = &lt;span class=&quot;hljs-string&quot;&gt;`This is a\n&lt;span class=&quot;hljs-subst&quot;&gt;${value}&lt;/span&gt;\nstring in js`&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(text);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can use &lt;a href=&quot;http://www.typescriptlang.org/Playground&quot; rel=&quot;noreferrer&quot;&gt;TypeScript&lt;/a&gt; (JavaScript SuperSet), it supports multiline strings, and transpiles back down to pure JavaScript without overhead:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; templates = {\n    &lt;span class=&quot;hljs-attr&quot;&gt;myString&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;`this is\na multiline\nstring`&lt;/span&gt; \n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(templates.&lt;span class=&quot;hljs-property&quot;&gt;myString&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you&apos;d want to accomplish the same with plain JavaScript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; templates = \n{\n &lt;span class=&quot;hljs-attr&quot;&gt;myString&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){&lt;span class=&quot;hljs-comment&quot;&gt;/*\n    This is some\n    awesome multi-lined\n    string using a comment \n    inside a function \n    returned as a string.\n    Enjoy the jimmy rigged code.\n*/&lt;/span&gt;}.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)\n\n}\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(templates.&lt;span class=&quot;hljs-property&quot;&gt;myString&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note that the iPad/Safari does not support &lt;code&gt;&apos;functionName.toString()&apos;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;If you have a lot of legacy code, you can also use the plain JavaScript variant in TypeScript (for cleanup purposes):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;interface externTemplates\n{\n    &lt;span class=&quot;hljs-attr&quot;&gt;myString&lt;/span&gt;:string;\n}\n\ndeclare &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;templates&lt;/span&gt;:externTemplates;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(templates.&lt;span class=&quot;hljs-property&quot;&gt;myString&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and you can use the multiline-string object from the plain JavaScript variant, where you put the templates into another file (which you can merge in the bundle).&lt;/p&gt;\n\n&lt;p&gt;You can try TypeScript at&lt;br&gt;\n&lt;a href=&quot;http://www.typescriptlang.org/Playground&quot; rel=&quot;noreferrer&quot;&gt;http://www.typescriptlang.org/Playground&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Easiest way to make multiline strings in Javascrips is with the use of backticks ( `` ). This allows you to create multiline strings in which you can insert variables with &lt;code&gt;${variableName}&lt;/code&gt;.&lt;/p&gt;\n\n&lt;h2&gt;Example:&lt;/h2&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; name = &lt;span class=&quot;hljs-string&quot;&gt;&apos;Willem&apos;&lt;/span&gt;; \n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; age = &lt;span class=&quot;hljs-number&quot;&gt;26&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; multilineString = &lt;span class=&quot;hljs-string&quot;&gt;`\nmy name is: &lt;span class=&quot;hljs-subst&quot;&gt;${name}&lt;/span&gt;\n\nmy age is: &lt;span class=&quot;hljs-subst&quot;&gt;${age}&lt;/span&gt;\n`&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(multilineString);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;h2&gt;compatibility :&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It was introduces in &lt;code&gt;ES6&lt;/code&gt;//&lt;code&gt;es2015&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;It is now natively supported by all major browser vendors (except internet explorer)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Template_literals&quot; rel=&quot;nofollow noreferrer&quot;&gt;Check exact compatibility in Mozilla docs here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;ES6 allows you to use a backtick to specify a string on multiple lines.  It&apos;s called a Template Literal.  Like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; multilineString = &lt;span class=&quot;hljs-string&quot;&gt;`One line of text\n    second line of text\n    third line of text\n    fourth line of text`&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Using the backtick works in NodeJS, and it&apos;s supported by Chrome, Firefox, Edge, Safari, and Opera.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot; rel=&quot;noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Also do note that, when extending string over multiple lines using forward backslash at end of each line, any extra characters (mostly spaces, tabs and comments added by mistake) after forward backslash will cause unexpected character error, which i took an hour to find out&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; string = &lt;span class=&quot;hljs-string&quot;&gt;&quot;line1\\  // comment, space or tabs here raise error\nline2&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Please for the love of the internet use string concatenation and opt not to use ES6 solutions for this. ES6 is NOT supported all across the board, much like CSS3 and certain browsers being slow to adapt to the CSS3 movement. Use plain ol&apos; JavaScript, your end users will thank you.&lt;/p&gt;\n\n&lt;p&gt;Example:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var str = &quot;This world is neither flat nor round. &quot;+\n           &quot;Once was lost will be found&quot;;&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;You can use tagged templates to make sure you get the desired output.&lt;/p&gt;\n&lt;p&gt;For example:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Merging multiple whitespaces and trimming the output&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;t&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;strings&lt;/span&gt;) =&amp;gt; { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; strings.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;) =&amp;gt;&lt;/span&gt; s.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\s+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;() }\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(t&lt;span class=&quot;hljs-string&quot;&gt;`\n  This\n  Is\n  A\n  Multiline\n  String\n`&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// Output: &apos;This Is A Multiline String&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Similar but keeping whitespaces:&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;tW&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;strings&lt;/span&gt;) =&amp;gt; { &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; strings.&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt;) =&amp;gt;&lt;/span&gt; s.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/\\s+/g&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;)).&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;trim&lt;/span&gt;() }\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(tW&lt;span class=&quot;hljs-string&quot;&gt;`\n  This\n  Is\n  A\n  Multiline\n  String\n`&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// Output: &apos;This\\nIs\\nA\\nMultiline\\nString&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;My version of array-based join for string concat:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; c = []; &lt;span class=&quot;hljs-comment&quot;&gt;//c stands for content&lt;/span&gt;\nc.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;div id=&apos;thisDiv&apos; style=&apos;left:10px&apos;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;);\nc.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;div onclick=&apos;showDo(\\&apos;something\\&apos;);&apos;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;);\n$(body).&lt;span class=&quot;hljs-title function_&quot;&gt;append&lt;/span&gt;(c.&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This has worked well for me, especially as I often insert values into the html constructed this way. But it has lots of limitations. Indentation would be nice. Not having to deal with nested quotation marks would be really nice, and just the bulkyness of it bothers me.&lt;/p&gt;\n\n&lt;p&gt;Is the .push() to add to the array taking up a lot of time? See this related answer:&lt;/p&gt;\n\n&lt;p&gt;(&lt;a href=&quot;https://stackoverflow.com/questions/15649899/is-there-a-reason-javascript-developers-dont-use-array-push&quot;&gt;Is there a reason JavaScript developers don&apos;t use Array.push()?&lt;/a&gt;) &lt;/p&gt;\n\n&lt;p&gt;After looking at these (opposing) test runs, it looks like .push() is fine for string arrays which will not likely grow over 100 items - I will avoid it in favor of indexed adds for larger arrays.&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Be warned: some browsers will insert newlines at the continuance, some will not.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/28832/staticsan&quot; title=&quot;29,259 reputation&quot; class=&quot;comment-user&quot;&gt;staticsan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment615268_805113&quot;&gt;&lt;span title=&quot;2009-04-30 02:22:58Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Apr 30, 2009 at 2:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Visual Studio 2010 seems to be confused by this syntax as well.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/30946/jcollum&quot; title=&quot;40,450 reputation&quot; class=&quot;comment-user&quot;&gt;jcollum&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment6508676_805113&quot;&gt;&lt;span title=&quot;2011-04-17 21:58:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 17, 2011 at 21:58&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Nate It is specified in &lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf&quot; rel=&quot;nofollow noreferrer&quot;&gt;ECMA-262 5th Edition&lt;/a&gt; section 7.8.4 and called &lt;i&gt;LineContinuation&lt;/i&gt; : &quot;A line terminator character cannot appear in a string literal, except as part of a &lt;i&gt;LineContinuation&lt;/i&gt; to produce the empty character sequence. The correct way to cause a line terminator character to be part of the String value of a string literal is to use an escape sequence such as \\n or \\u000A.&quot;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/36866/some&quot; title=&quot;46,357 reputation&quot; class=&quot;comment-user&quot;&gt;some&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment16943153_805113&quot;&gt;&lt;span title=&quot;2012-09-25 02:28:46Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 25, 2012 at 2:28&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I don&apos;t see why you&apos;d do this when browsers treat it inconsistently. &quot;line1\\n&quot; + &quot;line2&quot; across multiple lines is readable enough and you&apos;re guaranteed consistent behavior.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/372926/samstephens&quot; title=&quot;5,622 reputation&quot; class=&quot;comment-user&quot;&gt;SamStephens&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment22005984_805113&quot;&gt;&lt;span title=&quot;2013-03-20 20:14:00Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 20, 2013 at 20:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&quot;Browser support is OK&quot;... not supported by IE11 - not OK&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/356052/tom-andraszek&quot; title=&quot;1,606 reputation&quot; class=&quot;comment-user&quot;&gt;Tom Andraszek&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment75360884_805113&quot;&gt;&lt;span title=&quot;2017-05-25 05:18:38Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 25, 2017 at 5:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I don&apos;t understand Google&apos;s recommendation. All browsers except extremely old ones support the backslash followed by newline approach, and will continue to do so in the future for backward compatibility. The only time you&apos;d need to avoid it is if you needed to be sure that one and only one newline (or no newline) was added at the end of each line (see also my comment on the accepted answer).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/560114/matt-browne&quot; title=&quot;11,703 reputation&quot; class=&quot;comment-user&quot;&gt;Matt Browne&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment21237373_6247331&quot;&gt;&lt;span title=&quot;2013-02-26 18:40:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 26, 2013 at 18:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Note that template strings aren&apos;t supported in IE11, Firefox 31, Chrome 35, or Safari 7.  See &lt;a href=&quot;http://kangax.github.io/compat-table/es6/&quot; rel=&quot;nofollow noreferrer&quot;&gt;kangax.github.io/compat-table/es6&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/187523/ericp&quot; title=&quot;3,312 reputation&quot; class=&quot;comment-user&quot;&gt;EricP&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment36686226_6247331&quot;&gt;&lt;span title=&quot;2014-05-24 02:41:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 24, 2014 at 2:41&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@MattBrowne Google&apos;s recommendation is already documented by them, in order of importance of reasons: (1) The whitespace at the beginning of each line [in the example, you don&apos;t want that whitespace in your string but it looks nicer in the code] (2) whitespace after the slash will result in tricky errors [if you end a line with &lt;code&gt;\\ &lt;/code&gt; instead of `\\` it&apos;s hard to notice] and (3) while most script engines support this, it is not part of ECMAScript [i.e. why use nonstandard features?] Remember it&apos;s a style guide, which is about making code easy to read+maintain+debug: not just &quot;it works&quot; correct.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4958/shreevatsar&quot; title=&quot;37,233 reputation&quot; class=&quot;comment-user&quot;&gt;ShreevatsaR&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64755624_6247331&quot;&gt;&lt;span title=&quot;2016-07-31 20:29:02Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 31, 2016 at 20:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;amazing that after all these years string concatenation is still the best/safest/most compliant way to go with this. template literals (above answer) don&apos;t work in IE and escaping lines is just a mess that you&apos;re soon going to regret&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1160457/tiago-duarte&quot; title=&quot;3,114 reputation&quot; class=&quot;comment-user&quot;&gt;Tiago Duarte&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment68334447_6247331&quot;&gt;&lt;span title=&quot;2016-11-11 12:31:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 11, 2016 at 12:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Found out the hard way that older versions of Android do not support the backticks so if you have an Android app using the webView your backticks cause your app to not run!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1671996/michael-fever&quot; title=&quot;767 reputation&quot; class=&quot;comment-user&quot;&gt;Michael Fever&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment100115118_6247331&quot;&gt;&lt;span title=&quot;2019-06-26 19:45:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 26, 2019 at 19:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Please don&apos;t use the array pattern.  It will be slower than plain-old string concatenation in most cases.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/360539/bminer&quot; title=&quot;15,850 reputation&quot; class=&quot;comment-user&quot;&gt;BMiner&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment7963575_805755&quot;&gt;&lt;span title=&quot;2011-07-17 12:39:12Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 17, 2011 at 12:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The array pattern is more readable and the performance loss for an application is often negligible. As that perf test shows, even IE7 can do tens of thousands of operations per second.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3461/benjamin-atkin&quot; title=&quot;13,327 reputation&quot; class=&quot;comment-user&quot;&gt;Benjamin Atkin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8547462_805755&quot;&gt;&lt;span title=&quot;2011-08-20 08:16:35Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 20, 2011 at 8:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;+1 for an elegant alternative that not only works the same way in all browsers, but is also future-proof.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/193134/pavel&quot; title=&quot;5,012 reputation&quot; class=&quot;comment-user&quot;&gt;Pavel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment13859534_805755&quot;&gt;&lt;span title=&quot;2012-05-21 06:06:14Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 21, 2012 at 6:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@KooiInc Your tests start with the array already created, that skews the results. If you add the initialization of the array, straight concatenation is faster &lt;a href=&quot;http://jsperf.com/string-concat-without-sringbuilder/7&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsperf.com/string-concat-without-sringbuilder/7&lt;/a&gt; See &lt;a href=&quot;http://stackoverflow.com/questions/51185/are-javascript-strings-immutable-do-i-need-a-string-builder-in-javascript/4717855#4717855&quot; title=&quot;are javascript strings immutable do i need a string builder in javascript&quot;&gt;stackoverflow.com/questions/51185/&lt;/a&gt; As a trick for newlines, it may be OK, but it&apos;s definitely doing more work than it should&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/227299/juan-mendes&quot; title=&quot;86,239 reputation&quot; class=&quot;comment-user&quot;&gt;Juan Mendes&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26392803_805755&quot;&gt;&lt;span title=&quot;2013-08-04 08:02:25Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 4, 2013 at 8:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@BMiner: 1) &quot;Premature optimization is the root of all evil&quot; - Donald Knuth, and 2) &apos;readability&apos; is in the eye of the beholder&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;span class=&quot;comment-user&quot;&gt;user2418182&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment34478689_805755&quot;&gt;&lt;span title=&quot;2014-03-25 15:27:21Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 25, 2014 at 15:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;What!? creating and decompiling a Function to hack a multiline comment into being a multiline string? Now &lt;i&gt;that&apos;s&lt;/i&gt; ugly.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/60381/fforw&quot; title=&quot;5,213 reputation&quot; class=&quot;comment-user&quot;&gt;fforw&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment7485618_5571069&quot;&gt;&lt;span title=&quot;2011-06-17 15:49:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 17, 2011 at 15:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;a href=&quot;http://jsfiddle.net/fqpwf/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfiddle.net/fqpwf&lt;/a&gt; works in Chrome 13 and IE8/9, but not FF6.  I hate to say it, but I like it, and if it could be an intentional feature of each browser (so that it wouldn&apos;t disappear), I&apos;d use it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/162273/jason-kleban&quot; title=&quot;19,221 reputation&quot; class=&quot;comment-user&quot;&gt;Jason Kleban&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8892113_5571069&quot;&gt;&lt;span title=&quot;2011-09-09 21:36:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 9, 2011 at 21:36&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@uosɐſ: for it to be intentional, it&apos;d have to be in the spec; or so widespread used, that browser makers wouldn&apos;t want to remove this &quot;accidental&quot; feature. Thanks for the experiments though... Try some coffeescript.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/31158/jord%c3%a3o&quot; title=&quot;53,617 reputation&quot; class=&quot;comment-user&quot;&gt;Jordão&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8894381_5571069&quot;&gt;&lt;span title=&quot;2011-09-10 02:37:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 10, 2011 at 2:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;a.toString().substring(15, a.toString().length-4) also works, and doesn&apos;t need to scan the entire string (although it most likely will and the counting makes it another scan anyway. Oh wel.)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/638258/lodewijk&quot; title=&quot;3,381 reputation&quot; class=&quot;comment-user&quot;&gt;Lodewijk&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment10952253_5571069&quot;&gt;&lt;span title=&quot;2012-01-08 23:53:25Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 8, 2012 at 23:53&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Extremely handy. I&apos;m using it for (Jasmine) unit tests, but avoiding it for production code.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/358224/jason&quot; title=&quot;8,068 reputation&quot; class=&quot;comment-user&quot;&gt;Jason&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment15134557_5571069&quot;&gt;&lt;span title=&quot;2012-07-13 05:23:13Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 13, 2012 at 5:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;First example is great and simple. Much better than the \\ approach as I&apos;m not sure how browser&apos;s would handle the backslash as an escape character and as a multi-line character.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/798634/matt-k&quot; title=&quot;6,513 reputation&quot; class=&quot;comment-user&quot;&gt;Matt K&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment9788066_805111&quot;&gt;&lt;span title=&quot;2011-11-03 19:13:15Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 3, 2011 at 19:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The CDATA code (E4X) is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/E4X&quot; rel=&quot;nofollow noreferrer&quot;&gt;obsolete and will soon stop working even in Firefox&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/331508/brock-adams&quot; title=&quot;87,239 reputation&quot; class=&quot;comment-user&quot;&gt;Brock Adams&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment18496125_805111&quot;&gt;&lt;span title=&quot;2012-11-22 12:16:01Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2012 at 12:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;a href=&quot;https://github.com/eligrey/e4x.js/blob/master/e4x.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;e4x.js&lt;/a&gt; would be the good future-proof solution&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1113772/paul-sweatte&quot; title=&quot;23,579 reputation&quot; class=&quot;comment-user&quot;&gt;Paul Sweatte&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment20054440_805111&quot;&gt;&lt;span title=&quot;2013-01-19 02:54:47Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 19, 2013 at 2:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is absolutely terrifying.  I love it (although you may need to do a regex match because I&apos;m not sure how precise the whitespace for &lt;code&gt;toString()&lt;/code&gt; is.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1166181/kevin-cox&quot; title=&quot;2,854 reputation&quot; class=&quot;comment-user&quot;&gt;Kevin Cox&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment22587892_15558082&quot;&gt;&lt;span title=&quot;2013-04-07 21:53:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 7, 2013 at 21:53&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This solution does not seem to work in firefox, maybe it&apos;s a security feature for the browser?  EDIT:  Nevermind, it only does not work for Firefox Version 16.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/468384/bill-software-engineer&quot; title=&quot;6,758 reputation&quot; class=&quot;comment-user&quot;&gt;Bill Software Engineer&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24511131_15558082&quot;&gt;&lt;span title=&quot;2013-06-06 19:18:10Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 6, 2013 at 19:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Also beware of minifiers that strip comments... :D&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/555384/jondavidjohn&quot; title=&quot;60,991 reputation&quot; class=&quot;comment-user&quot;&gt;jondavidjohn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment28968670_15558082&quot;&gt;&lt;span title=&quot;2013-10-22 19:07:13Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 22, 2013 at 19:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is why we can&apos;t have nice things.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2497518/danilo-m-oliveira&quot; title=&quot;679 reputation&quot; class=&quot;comment-user&quot;&gt;Danilo M. Oliveira&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment92562774_15558082&quot;&gt;&lt;span title=&quot;2018-10-15 18:39:53Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 15, 2018 at 18:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You can do some weird stuff in javascript land. Though in all honesty, you should never use this.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1507460/luke&quot; title=&quot;1,924 reputation&quot; class=&quot;comment-user&quot;&gt;Luke&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment92903438_15558082&quot;&gt;&lt;span title=&quot;2018-10-25 23:25:42Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 25, 2018 at 23:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Anywhere you don&apos;t want to put your strings into seperate and distant script elements.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/638258/lodewijk&quot; title=&quot;3,381 reputation&quot; class=&quot;comment-user&quot;&gt;Lodewijk&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment10953035_8717821&quot;&gt;&lt;span title=&quot;2012-01-09 01:12:38Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 9, 2012 at 1:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;A valid objection! It isn&apos;t perfect. But for templates, that separation is not only ok, but perhaps even encouraged.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/345716/peter-v-m%c3%b8rch&quot; title=&quot;11,751 reputation&quot; class=&quot;comment-user&quot;&gt;Peter V. Mørch&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment11468488_8717821&quot;&gt;&lt;span title=&quot;2012-02-03 09:03:31Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 3, 2012 at 9:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I prefer splitting everything over 80/120 characters into multiline, I&apos;m afraid that&apos;s more than just templates. I now prefer &apos;line1 &apos; + &apos;line2&apos; syntax. It&apos;s also the fastest (although this might rival it for really large texts). It&apos;s a nice trick though.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/638258/lodewijk&quot; title=&quot;3,381 reputation&quot; class=&quot;comment-user&quot;&gt;Lodewijk&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment11484246_8717821&quot;&gt;&lt;span title=&quot;2012-02-03 22:51:18Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 3, 2012 at 22:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;actually, this is HTML not Javascript :-/&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/196732/cpill&quot; title=&quot;5,395 reputation&quot; class=&quot;comment-user&quot;&gt;CpILL&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment13889020_8717821&quot;&gt;&lt;span title=&quot;2012-05-22 08:54:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 22, 2012 at 8:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;however, the task of obtaining a multiline string in javascript can be done this way&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/348500/davi-fiamenghi&quot; title=&quot;1,209 reputation&quot; class=&quot;comment-user&quot;&gt;Davi Fiamenghi&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26246840_8717821&quot;&gt;&lt;span title=&quot;2013-07-30 21:41:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 30, 2013 at 21:41&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks for this! It&apos;s the only answer I&apos;ve found that solves my problem, which involves unknown strings that may contain any combination of single and double quotes being directly inserted into the code with no opportunity for pre-encoding. (it&apos;s coming from a templating language that creates the JS -- still from a trusted source and not a form submission, so it&apos;s not TOTALLY demented).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1146835/octern&quot; title=&quot;4,715 reputation&quot; class=&quot;comment-user&quot;&gt;octern&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment25022439_12007670&quot;&gt;&lt;span title=&quot;2013-06-23 17:19:21Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 23, 2013 at 17:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This was the only method that actually worked for me to create a multi-line javascript string variable from a Java String.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/972647/beginner&quot; title=&quot;6,810 reputation&quot; class=&quot;comment-user&quot;&gt;beginner_&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26460346_12007670&quot;&gt;&lt;span title=&quot;2013-08-06 12:06:53Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 6, 2013 at 12:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;What if the string is HTML?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1269037/dan-dascalescu&quot; title=&quot;128,657 reputation&quot; class=&quot;comment-user&quot;&gt;Dan Dascalescu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment32150169_12007670&quot;&gt;&lt;span title=&quot;2014-01-24 08:39:37Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 24, 2014 at 8:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;$(&apos;#UniqueID&apos;).content()&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/295783/mplungjan&quot; title=&quot;156,123 reputation&quot; class=&quot;comment-user&quot;&gt;mplungjan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment32151797_12007670&quot;&gt;&lt;span title=&quot;2014-01-24 09:28:12Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 24, 2014 at 9:28&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Pacerier Everything I&apos;ve read, from Google as well as other sites, says that nowadays Google does index &lt;code&gt;display:none&lt;/code&gt; content, most likely due to the popularity of JavaScript-styled front-ends. (For example, an FAQ page with hide/show functionality.) You need to be careful though, because Google says they can punish you if the hidden content appears to be designed to artificially inflate your SEO rankings.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2211053/gavin&quot; title=&quot;6,779 reputation&quot; class=&quot;comment-user&quot;&gt;Gavin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment78097842_12007670&quot;&gt;&lt;span title=&quot;2017-08-08 13:12:47Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 8, 2017 at 13:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I think it&apos;s that you&apos;ve just regurgitated what has already on the page for five years, but in a cleaner way.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/187769/randominsano&quot; title=&quot;1,114 reputation&quot; class=&quot;comment-user&quot;&gt;RandomInsano&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment39054878_23867090&quot;&gt;&lt;span title=&quot;2014-08-02 18:22:33Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 2, 2014 at 18:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;won&apos;t slash concatenation also include the whitespace in beginning of lines?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/356083/f-khantsis&quot; title=&quot;2,986 reputation&quot; class=&quot;comment-user&quot;&gt;f.khantsis&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment74797767_23867090&quot;&gt;&lt;span title=&quot;2017-05-09 23:39:33Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 9, 2017 at 23:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I think this strategy is clean &amp;amp; far underused.  jsrender uses this.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/356887/xdhmoore&quot; title=&quot;7,790 reputation&quot; class=&quot;comment-user&quot;&gt;xdhmoore&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment44131034_12097933&quot;&gt;&lt;span title=&quot;2015-01-09 15:57:07Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 9, 2015 at 15:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I&apos;m using this with innerText iso innerHTML, But how do I make sure that the whitespaces are preserved ?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1450778/david-nouls&quot; title=&quot;1,885 reputation&quot; class=&quot;comment-user&quot;&gt;David Nouls&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment50867018_12097933&quot;&gt;&lt;span title=&quot;2015-07-16 08:53:07Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 16, 2015 at 8:53&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Also ajax queries in case you are using them.  You can try to change your headers &lt;code&gt;xhttp.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);&lt;/code&gt; I don&apos;t remember having other problems than mistyping comments in JS. Spaces where no problems.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1416458/jpfreire&quot; title=&quot;1,258 reputation&quot; class=&quot;comment-user&quot;&gt;jpfreire&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment54560588_12097933&quot;&gt;&lt;span title=&quot;2015-10-28 05:40:04Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 28, 2015 at 5:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I use this, except I put the &apos;+&apos; at the end of the preceding line, to make it clear the statement is continued on the next line. Your way does line up the indents more evenly though.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1175459/sean&quot; title=&quot;14,864 reputation&quot; class=&quot;comment-user&quot;&gt;Sean&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment17183434_8495489&quot;&gt;&lt;span title=&quot;2012-10-04 08:54:22Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 4, 2012 at 8:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Sean i use this too, and i still prefer put the &apos;+&apos; at the beginning of each new line added, and the final &apos;;&apos; on a new line, cuz i found it more &apos;correct&apos;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/209797/agelessessence&quot; title=&quot;5,935 reputation&quot; class=&quot;comment-user&quot;&gt;AgelessEssence&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29726906_8495489&quot;&gt;&lt;span title=&quot;2013-11-14 05:06:06Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 14, 2013 at 5:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;putting the + at the beginning allows one to comment out that line without having to edit other lines when its the first/last line of the sequence.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/440268/moliad&quot; title=&quot;1,493 reputation&quot; class=&quot;comment-user&quot;&gt;moliad&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment30726700_8495489&quot;&gt;&lt;span title=&quot;2013-12-12 15:38:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 12, 2013 at 15:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I prefer the + at the front too as visually I do not need to scan to the end of the line to know the next one is a continuation.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/913223/daniel-sokolowski&quot; title=&quot;11,319 reputation&quot; class=&quot;comment-user&quot;&gt;Daniel Sokolowski&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment36080421_8495489&quot;&gt;&lt;span title=&quot;2014-05-07 15:40:49Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 7, 2014 at 15:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;That&apos;s horrific. +1.  And you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/currentScript&quot; rel=&quot;nofollow noreferrer&quot;&gt;document.currentScript&lt;/a&gt; instead of getElement...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/912236/orwellophile&quot; title=&quot;12,361 reputation&quot; class=&quot;comment-user&quot;&gt;Orwellophile&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49037257_14919898&quot;&gt;&lt;span title=&quot;2015-05-27 10:00:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 27, 2015 at 10:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Undefined &quot;you&quot; in chrome for osx&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/295783/mplungjan&quot; title=&quot;156,123 reputation&quot; class=&quot;comment-user&quot;&gt;mplungjan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49055243_14919898&quot;&gt;&lt;span title=&quot;2015-05-27 16:46:35Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 27, 2015 at 16:46&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;a href=&quot;http://jsfiddle.net/orwellophile/hjmv3jrz/5/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfiddle-fixed&lt;/a&gt; - I must have had &quot;you&quot; defined globally in my console. Works now (chrome/osx). The nice thing about adding the comment to a var is that you&apos;re not in a function context, &lt;a href=&quot;http://jsfiddle.net/orwellophile/hna15vLw/2/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfiddle-function-heredoc&lt;/a&gt; although the function thing would be cool for class methods. might be better to pass it a replace { this: that } object anyways. fun to push something crazy to the limit anyway :)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/912236/orwellophile&quot; title=&quot;12,361 reputation&quot; class=&quot;comment-user&quot;&gt;Orwellophile&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49227719_14919898&quot;&gt;&lt;span title=&quot;2015-06-01 16:44:55Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 1, 2015 at 16:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Forget the haters. This is the only correct answer bar ES6. All the other answers require concatenation, computation of some sort, or escaping. This is actually pretty cool and I&apos;m going to use it as a way to add documentation to a game I&apos;m working on as a hobby. As long as this trick isn&apos;t used for anything that could invoke a bug (I can see how someone would go &quot;Semicolon, derp. Lets put the comment on the next line.&quot; and then it breaks your code.) But, is that really a big deal in my hobby game? No, and I can use the cool trick for something useful. Great answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/615740/thomas-dignan&quot; title=&quot;6,976 reputation&quot; class=&quot;comment-user&quot;&gt;Thomas Dignan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment51271277_14919898&quot;&gt;&lt;span title=&quot;2015-07-27 21:10:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2015 at 21:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I&apos;ve never been brave enough to use this technique in production code, but where I DO use it a lot is in unit testing, where often it&apos;s easiest to dump the value of some structure as a (quite long) string and compare it to what it &apos;should&apos; be.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/208465/ben-mcintyre&quot; title=&quot;1,884 reputation&quot; class=&quot;comment-user&quot;&gt;Ben McIntyre&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment58050620_14919898&quot;&gt;&lt;span title=&quot;2016-02-03 00:00:47Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 3, 2016 at 0:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This support in &lt;code&gt;nodejs&lt;/code&gt;, using in browser must becareful.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1748884/huei-tan&quot; title=&quot;2,197 reputation&quot; class=&quot;comment-user&quot;&gt;Huei Tan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment35979777_23291912&quot;&gt;&lt;span title=&quot;2014-05-05 08:52:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 5, 2014 at 8:52&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@HueiTan Docs state it also works in the browser. Which makes sense - it&apos;s just &lt;code&gt;Function.prototype.String()&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/123671/mikemaccana&quot; title=&quot;95,966 reputation&quot; class=&quot;comment-user&quot;&gt;mikemaccana&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment38353920_23291912&quot;&gt;&lt;span title=&quot;2014-07-13 19:14:32Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 13, 2014 at 19:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;ya but it said &quot;While it does work fine in the browser, it&apos;s mainly intended for use in Node.js. Use at your own risk.While it does work fine in the browser, it&apos;s mainly intended for use in Node.js. Use at your own risk.&quot; (Just becareful XD)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1748884/huei-tan&quot; title=&quot;2,197 reputation&quot; class=&quot;comment-user&quot;&gt;Huei Tan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment38367752_23291912&quot;&gt;&lt;span title=&quot;2014-07-14 09:37:07Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 14, 2014 at 9:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@HueiTanYep I read that part. But Function.prototype.toString() is pretty stable and well known.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/123671/mikemaccana&quot; title=&quot;95,966 reputation&quot; class=&quot;comment-user&quot;&gt;mikemaccana&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment38370233_23291912&quot;&gt;&lt;span title=&quot;2014-07-14 10:52:16Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 14, 2014 at 10:52&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Best answer for me because it at least achieves multiline without all the rubbish in the middle(The rubbish at the beginning and ends I can deal with).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1764521/damien-golding&quot; title=&quot;847 reputation&quot; class=&quot;comment-user&quot;&gt;Damien Golding&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment39840752_23291912&quot;&gt;&lt;span title=&quot;2014-08-27 06:25:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 27, 2014 at 6:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Why wouldn&apos;t you just &lt;code&gt;[ &quot;line&quot;, &quot;line2&quot;, &quot;line3&quot; ].join(&quot;\\n&quot;)&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1250772/kaz&quot; title=&quot;52,154 reputation&quot; class=&quot;comment-user&quot;&gt;Kaz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125175020_69857311&quot;&gt;&lt;span title=&quot;2022-01-21 19:18:05Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 21 at 19:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Just think about it. Do you think it&apos;s valid? Don&apos;t you think it can cause display problems?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/517705/sk8erpeter&quot; title=&quot;6,673 reputation&quot; class=&quot;comment-user&quot;&gt;Sk8erPeter&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment11914617_4258535&quot;&gt;&lt;span title=&quot;2012-02-24 01:55:04Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 24, 2012 at 1:55&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Why the downvotes? This is a creative answer, if not very practical!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/343302/dotancohen&quot; title=&quot;27,972 reputation&quot; class=&quot;comment-user&quot;&gt;dotancohen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment12017893_4258535&quot;&gt;&lt;span title=&quot;2012-02-29 02:32:43Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 29, 2012 at 2:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;no, it&apos;s not. One should rather use templates: $.tmpl() (&lt;a href=&quot;http://api.jquery.com/tmpl/&quot; rel=&quot;nofollow noreferrer&quot;&gt;api.jquery.com/tmpl&lt;/a&gt;), or EJS (&lt;a href=&quot;http://embeddedjs.com/getting_started.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;embeddedjs.com/getting_started.html&lt;/a&gt;), etc. One reason for downvotes is that it&apos;s really far from a valid code and using this can cause huge display problems.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/517705/sk8erpeter&quot; title=&quot;6,673 reputation&quot; class=&quot;comment-user&quot;&gt;Sk8erPeter&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment12551862_4258535&quot;&gt;&lt;span title=&quot;2012-03-24 00:07:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 24, 2012 at 0:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I hope no one ever uses this answer in practice, but it&apos;s a neat idea&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2449863/dcshannon&quot; title=&quot;2,215 reputation&quot; class=&quot;comment-user&quot;&gt;DCShannon&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment46327317_4258535&quot;&gt;&lt;span title=&quot;2015-03-13 23:48:44Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 13, 2015 at 23:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Edge case when you have &lt;code&gt;&apos;&lt;/code&gt; within the html. in that case you may have to use html entities &lt;code&gt;&amp;amp;#39;&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4472048/borracciablu&quot; title=&quot;3,871 reputation&quot; class=&quot;comment-user&quot;&gt;borracciaBlu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115536284_4258535&quot;&gt;&lt;span title=&quot;2020-12-18 04:25:58Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 18, 2020 at 4:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is my first actual comment. I have gained the upvote privilege 2 days ago so so I immediately upvoted the one answer I mentioned above. Thank you to anyone who did upvote my feeble attempt to help.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/539300/tyler&quot; title=&quot;352 reputation&quot; class=&quot;comment-user&quot;&gt;Tyler&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8082641_6072388&quot;&gt;&lt;span title=&quot;2011-07-24 12:34:35Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 24, 2011 at 12:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks to everyone who actually upvoted this answer: I have now enough privileges to post normal comments! So thanks again.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/539300/tyler&quot; title=&quot;352 reputation&quot; class=&quot;comment-user&quot;&gt;Tyler&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment16352131_6072388&quot;&gt;&lt;span title=&quot;2012-08-31 02:41:46Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 31, 2012 at 2:41&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Wouldn&apos;t this add extraneous blank spaces?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1324588/tombyrer&quot; title=&quot;1,067 reputation&quot; class=&quot;comment-user&quot;&gt;tomByrer&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment55983761_29927210&quot;&gt;&lt;span title=&quot;2015-12-06 12:29:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 6, 2015 at 12:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@tomByrer Yes, good observation.  It&apos;s only good for strings which you don&apos;t care about white space, e.g. HTML.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2446285/seo&quot; title=&quot;1,911 reputation&quot; class=&quot;comment-user&quot;&gt;seo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment55996514_29927210&quot;&gt;&lt;span title=&quot;2015-12-06 23:02:50Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 6, 2015 at 23:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;text is string why json.stringify?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1262168/flatlander&quot; title=&quot;1,637 reputation&quot; class=&quot;comment-user&quot;&gt;FlatLander&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111160245_62312803&quot;&gt;&lt;span title=&quot;2020-07-12 11:20:59Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 12, 2020 at 11:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@FlatLander this is only for test - to see where are exactly new-line characters &lt;code&gt;\\n&lt;/code&gt; (to compare with ruby output (working example linked in answer) ) - this is improvement of Lonnie answer because new-line characters in his answer are not exactly the same positions as in ruby output&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/860099/kamil-kie%c5%82czewski&quot; title=&quot;72,493 reputation&quot; class=&quot;comment-user&quot;&gt;Kamil Kiełczewski&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111170787_62312803&quot;&gt;&lt;span title=&quot;2020-07-12 20:51:54Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 12, 2020 at 20:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 6 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This answer is not only small, incomplete and bad formatted, but also doesn&apos;t add absolutely anything to the previous answers. Flagging it and hopping to be deleted.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1240001/victor-schr%c3%b6der&quot; title=&quot;5,844 reputation&quot; class=&quot;comment-user&quot;&gt;Victor Schröder&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95342082_51330123&quot;&gt;&lt;span title=&quot;2019-01-18 17:43:51Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 18, 2019 at 17:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Any documentation on the iPad/Safari limitation? MDN seems to think it&apos;s all good - &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString&quot; rel=&quot;nofollow noreferrer&quot;&gt;developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/235704/campbeln&quot; title=&quot;2,750 reputation&quot; class=&quot;comment-user&quot;&gt;Campbeln&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment78010161_32698927&quot;&gt;&lt;span title=&quot;2017-08-05 18:15:50Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 5, 2017 at 18:15&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Campbeln: CoWorker told me this (he used the code). Haven&apos;t tested it myselfs. Might also depend on the iPad/Safari version - so probably depends.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/155077/stefan-steiger&quot; title=&quot;73,955 reputation&quot; class=&quot;comment-user&quot;&gt;Stefan Steiger&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment78027878_32698927&quot;&gt;&lt;span title=&quot;2017-08-06 16:07:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 6, 2017 at 16:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Is this now compatible with all recent browsers? Or are there some browsers which still do not support this syntax?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1515708/cmpreshn&quot; title=&quot;162 reputation&quot; class=&quot;comment-user&quot;&gt;cmpreshn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment92035143_52243819&quot;&gt;&lt;span title=&quot;2018-09-28 03:37:49Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 28, 2018 at 3:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Sorry for my extreme late comment, edited the answer added compatibility info ;)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8059459/willem-van-der-veen&quot; title=&quot;27,967 reputation&quot; class=&quot;comment-user&quot;&gt;Willem van der Veen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment92132920_52243819&quot;&gt;&lt;span title=&quot;2018-10-01 21:28:33Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 1, 2018 at 21:28&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;while i agree with your point, i wouldn&apos;t call javascript &quot;good&quot; ol&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1916182/user151496&quot; title=&quot;1,689 reputation&quot; class=&quot;comment-user&quot;&gt;user151496&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment85208989_46699047&quot;&gt;&lt;span title=&quot;2018-03-05 00:18:20Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 5, 2018 at 0:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How does this admonition stand up in 2022?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1418533/ken-ingram&quot; title=&quot;1,452 reputation&quot; class=&quot;comment-user&quot;&gt;Ken Ingram&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment126335675_46699047&quot;&gt;&lt;span title=&quot;2022-03-15 05:12:14Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 15 at 5:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":454,"title":"Creating multiline strings in JavaScript","content":"\n                \n&lt;p&gt;I have the following code in Ruby. I want to convert this code into JavaScript. What is the equivalent code in JS?&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;text = &amp;lt;&amp;lt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;HERE&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;This&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Is&lt;/span&gt;\nA\n&lt;span class=&quot;hljs-title class_&quot;&gt;Multiline&lt;/span&gt;\n&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;\n&lt;span class=&quot;hljs-variable constant_&quot;&gt;HERE&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"creating-multiline-strings-in-javascript-1657388025414","postType":"QUESTION","createdAt":"2022-07-09T17:33:45.000Z","updatedAt":"2022-07-09T17:33:45.000Z","tags":[{"id":2338,"name":"heredoc","slug":"heredoc","createdAt":"2022-07-09T17:33:45.000Z","updatedAt":"2022-07-09T17:33:45.000Z","Questions_Tags":{"questionId":454,"tagId":2338}}]}},"__N_SSG":true}