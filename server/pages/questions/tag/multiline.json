{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;Try this:  &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;((.|\\n)*)&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;FooBar&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It basically says &quot;any character or a newline&quot; repeated zero or more times.&lt;/p&gt;\n    ","\n&lt;p&gt;It depends on the language, but there should be a modifier that you can add to the regex pattern. In PHP it is:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/(.*)&amp;lt;FooBar&amp;gt;/s\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;strong&gt;s&lt;/strong&gt; at the end causes the dot to match &lt;em&gt;all&lt;/em&gt; characters including newlines.&lt;/p&gt;\n    ","\n&lt;p&gt;The question is, can the &lt;code&gt;.&lt;/code&gt; pattern match &lt;em&gt;any&lt;/em&gt; character? The answer varies from engine to engine. The main difference is whether the pattern is used by a POSIX or non-POSIX regex library.&lt;/p&gt;\n&lt;p&gt;A special note about &lt;a href=&quot;/questions/tagged/lua-patterns&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;lua-patterns&apos;&quot; rel=&quot;tag&quot;&gt;lua-patterns&lt;/a&gt;: they are not considered regular expressions, but &lt;code&gt;.&lt;/code&gt; matches any character there, the same as POSIX-based engines.&lt;/p&gt;\n&lt;p&gt;Another note on &lt;a href=&quot;/questions/tagged/matlab&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;matlab&apos;&quot; rel=&quot;tag&quot;&gt;matlab&lt;/a&gt; and &lt;a href=&quot;/questions/tagged/octave&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;octave&apos;&quot; rel=&quot;tag&quot;&gt;octave&lt;/a&gt;: the &lt;code&gt;.&lt;/code&gt; matches any character by default (&lt;a href=&quot;https://ideone.com/OkH7Mh&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;str = &quot;abcde\\n        fghij&amp;lt;Foobar&amp;gt;&quot;; expression = &apos;(.*)&amp;lt;Foobar&amp;gt;*&apos;; [tokens,matches] = regexp(str,expression,&apos;tokens&apos;,&apos;match&apos;);&lt;/code&gt; (&lt;code&gt;tokens&lt;/code&gt; contain a &lt;code&gt;abcde\\n        fghij&lt;/code&gt; item).&lt;/p&gt;\n&lt;p&gt;Also, in all of &lt;a href=&quot;/questions/tagged/boost&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;boost&apos;&quot; rel=&quot;tag&quot;&gt;boost&lt;/a&gt;&apos;s regex grammars the dot matches line breaks by default. Boost&apos;s ECMAScript grammar allows you to turn this off with &lt;code&gt;regex_constants::no_mod_m&lt;/code&gt; (&lt;a href=&quot;http://www.regular-expressions.info/dot.html&quot; rel=&quot;noreferrer&quot;&gt;source&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;As for &lt;a href=&quot;/questions/tagged/oracle&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;oracle&apos;&quot; rel=&quot;tag&quot;&gt;oracle&lt;/a&gt; (it is POSIX based), use &lt;a href=&quot;https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions130.htm&quot; rel=&quot;noreferrer&quot;&gt;the &lt;code&gt;n&lt;/code&gt; option&lt;/a&gt; (&lt;a href=&quot;http://rextester.com/WEQF2051&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;select regexp_substr(&apos;abcde&apos; || chr(10) ||&apos;     fghij&amp;lt;Foobar&amp;gt;&apos;, &apos;(.*)&amp;lt;Foobar&amp;gt;&apos;, 1, 1, &apos;n&apos;, 1) as results from dual&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;POSIX-based engines&lt;/strong&gt;:&lt;/p&gt;\n&lt;p&gt;A mere &lt;code&gt;.&lt;/code&gt; already matches line breaks, so there isn&apos;t a need to use any modifiers, see &lt;a href=&quot;/questions/tagged/bash&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;bash&apos;&quot; rel=&quot;tag&quot;&gt;bash&lt;/a&gt; (&lt;a href=&quot;https://ideone.com/d1XTpR&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;).&lt;/p&gt;\n&lt;p&gt;The &lt;a href=&quot;/questions/tagged/tcl&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;tcl&apos;&quot; rel=&quot;tag&quot;&gt;tcl&lt;/a&gt; (&lt;a href=&quot;https://ideone.com/ORmscd&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;), &lt;a href=&quot;/questions/tagged/postgresql&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;postgresql&apos;&quot; rel=&quot;tag&quot;&gt;postgresql&lt;/a&gt; (&lt;a href=&quot;http://rextester.com/FWXM76553&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;), &lt;a href=&quot;/questions/tagged/r&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;r&apos;&quot; rel=&quot;tag&quot;&gt;r&lt;/a&gt; (TRE, base R default engine with no &lt;code&gt;perl=TRUE&lt;/code&gt;, for base R with &lt;code&gt;perl=TRUE&lt;/code&gt; or for &lt;em&gt;stringr&lt;/em&gt;/&lt;em&gt;stringi&lt;/em&gt; patterns, use the &lt;code&gt;(?s)&lt;/code&gt; inline modifier) (&lt;a href=&quot;https://ideone.com/A1kIU4&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;) also treat &lt;code&gt;.&lt;/code&gt; the same way.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, most POSIX-based tools process input line by line. Hence, &lt;code&gt;.&lt;/code&gt; does not match the line breaks just because they are not in scope. Here are some examples how to override this:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;/questions/tagged/sed&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;sed&apos;&quot; rel=&quot;tag&quot;&gt;sed&lt;/a&gt; - There are multiple workarounds. The most precise, but not very safe, is &lt;code&gt;sed &apos;H;1h;$!d;x; s/\\(.*\\)&amp;gt;&amp;lt;Foobar&amp;gt;/\\1/&apos;&lt;/code&gt; (&lt;code&gt;H;1h;$!d;x;&lt;/code&gt; slurps the file into memory). If whole lines must be included, &lt;code&gt;sed &apos;/start_pattern/,/end_pattern/d&apos; file&lt;/code&gt; (removing from start will end with matched lines included) or &lt;code&gt;sed &apos;/start_pattern/,/end_pattern/{{//!d;};}&apos; file&lt;/code&gt; (with matching lines excluded) can be considered.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;/questions/tagged/perl&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;perl&apos;&quot; rel=&quot;tag&quot;&gt;perl&lt;/a&gt; - &lt;code&gt;perl -0pe &apos;s/(.*)&amp;lt;FooBar&amp;gt;/$1/gs&apos; &amp;lt;&amp;lt;&amp;lt; &quot;$str&quot;&lt;/code&gt; (&lt;code&gt;-0&lt;/code&gt; slurps the whole file into memory, &lt;code&gt;-p&lt;/code&gt; prints the file after applying the script given by &lt;code&gt;-e&lt;/code&gt;). Note that using &lt;code&gt;-000pe&lt;/code&gt; will slurp the file and activate &apos;paragraph mode&apos; where Perl uses consecutive newlines (&lt;code&gt;\\n\\n&lt;/code&gt;) as the record separator.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;/questions/tagged/gnu-grep&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;gnu-grep&apos;&quot; rel=&quot;tag&quot;&gt;gnu-grep&lt;/a&gt; - &lt;code&gt;grep -Poz &apos;(?si)abc\\K.*?(?=&amp;lt;Foobar&amp;gt;)&apos; file&lt;/code&gt;. Here, &lt;code&gt;z&lt;/code&gt; enables file slurping, &lt;code&gt;(?s)&lt;/code&gt; enables the DOTALL mode for the &lt;code&gt;.&lt;/code&gt; pattern, &lt;code&gt;(?i)&lt;/code&gt; enables case insensitive mode, &lt;code&gt;\\K&lt;/code&gt; omits the text matched so far, &lt;code&gt;*?&lt;/code&gt; is a lazy quantifier, &lt;code&gt;(?=&amp;lt;Foobar&amp;gt;)&lt;/code&gt; matches the location before &lt;code&gt;&amp;lt;Foobar&amp;gt;&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;/questions/tagged/pcregrep&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;pcregrep&apos;&quot; rel=&quot;tag&quot;&gt;pcregrep&lt;/a&gt; - &lt;code&gt;pcregrep -Mi &quot;(?si)abc\\K.*?(?=&amp;lt;Foobar&amp;gt;)&quot; file&lt;/code&gt; (&lt;code&gt;M&lt;/code&gt; enables file slurping here). Note &lt;code&gt;pcregrep&lt;/code&gt; is a good solution for macOS &lt;code&gt;grep&lt;/code&gt; users.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;a href=&quot;https://ideone.com/J7n00M&quot; rel=&quot;noreferrer&quot;&gt;See demos&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Non-POSIX-based engines&lt;/strong&gt;:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/php&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;php&apos;&quot; rel=&quot;tag&quot;&gt;php&lt;/a&gt; - Use the &lt;code&gt;s&lt;/code&gt; modifier &lt;a href=&quot;http://php.net/manual/en/reference.pcre.pattern.modifiers.php&quot; rel=&quot;noreferrer&quot;&gt;PCRE_DOTALL modifier&lt;/a&gt;: &lt;code&gt;preg_match(&apos;~(.*)&amp;lt;Foobar&amp;gt;~s&apos;, $s, $m)&lt;/code&gt; (&lt;a href=&quot;https://ideone.com/QyLjnm&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/c%23&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;c#&apos;&quot; rel=&quot;tag&quot;&gt;c#&lt;/a&gt; - Use &lt;code&gt;RegexOptions.Singleline&lt;/code&gt; flag (&lt;a href=&quot;https://ideone.com/agPd94&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;br&gt; - &lt;code&gt;var result = Regex.Match(s, @&quot;(.*)&amp;lt;Foobar&amp;gt;&quot;, RegexOptions.Singleline).Groups[1].Value;&lt;/code&gt;&lt;br&gt;- &lt;code&gt;var result = Regex.Match(s, @&quot;(?s)(.*)&amp;lt;Foobar&amp;gt;&quot;).Groups[1].Value;&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/powershell&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;powershell&apos;&quot; rel=&quot;tag&quot;&gt;powershell&lt;/a&gt; - Use the &lt;code&gt;(?s)&lt;/code&gt; inline option: &lt;code&gt;$s = &quot;abcde`nfghij&amp;lt;FooBar&amp;gt;&quot;; $s -match &quot;(?s)(.*)&amp;lt;Foobar&amp;gt;&quot;; $matches[1]&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/perl&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;perl&apos;&quot; rel=&quot;tag&quot;&gt;perl&lt;/a&gt; - Use the &lt;code&gt;s&lt;/code&gt; modifier (or &lt;code&gt;(?s)&lt;/code&gt; inline version at the start) (&lt;a href=&quot;https://ideone.com/nsYpjE&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;/(.*)&amp;lt;FooBar&amp;gt;/s&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/python&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;python&apos;&quot; rel=&quot;tag&quot;&gt;python&lt;/a&gt; - Use the &lt;code&gt;re.DOTALL&lt;/code&gt; (or &lt;code&gt;re.S&lt;/code&gt;) flags or &lt;code&gt;(?s)&lt;/code&gt; inline modifier (&lt;a href=&quot;https://ideone.com/A21CXy&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;m = re.search(r&quot;(.*)&amp;lt;FooBar&amp;gt;&quot;, s, flags=re.S)&lt;/code&gt; (and then &lt;code&gt;if m:&lt;/code&gt;, &lt;code&gt;print(m.group(1))&lt;/code&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/java&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;java&apos;&quot; rel=&quot;tag&quot;&gt;java&lt;/a&gt; - Use &lt;code&gt;Pattern.DOTALL&lt;/code&gt; modifier (or inline &lt;code&gt;(?s)&lt;/code&gt; flag) (&lt;a href=&quot;https://ideone.com/Oq1j8Z&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;Pattern.compile(&quot;(.*)&amp;lt;FooBar&amp;gt;&quot;, Pattern.DOTALL)&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/kotlin&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;kotlin&apos;&quot; rel=&quot;tag&quot;&gt;kotlin&lt;/a&gt; - Use &lt;code&gt;RegexOption.DOT_MATCHES_ALL&lt;/code&gt; : &lt;code&gt;&quot;(.*)&amp;lt;FooBar&amp;gt;&quot;.toRegex(RegexOption.DOT_MATCHES_ALL)&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/groovy&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;groovy&apos;&quot; rel=&quot;tag&quot;&gt;groovy&lt;/a&gt; - Use &lt;code&gt;(?s)&lt;/code&gt; in-pattern modifier (&lt;a href=&quot;https://ideone.com/2wmACW&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;regex = /(?s)(.*)&amp;lt;FooBar&amp;gt;/&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/scala&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;scala&apos;&quot; rel=&quot;tag&quot;&gt;scala&lt;/a&gt; - Use &lt;code&gt;(?s)&lt;/code&gt; modifier (&lt;a href=&quot;https://ideone.com/faL4xJ&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;&quot;(?s)(.*)&amp;lt;Foobar&amp;gt;&quot;.r.findAllIn(&quot;abcde\\n    fghij&amp;lt;Foobar&amp;gt;&quot;).matchData foreach { m =&amp;gt; println(m.group(1)) }&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/javascript&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;javascript&apos;&quot; rel=&quot;tag&quot;&gt;javascript&lt;/a&gt; - Use &lt;code&gt;[^]&lt;/code&gt; or workarounds &lt;code&gt;[\\d\\D]&lt;/code&gt; / &lt;code&gt;[\\w\\W]&lt;/code&gt; / &lt;code&gt;[\\s\\S]&lt;/code&gt; (&lt;a href=&quot;https://jsfiddle.net/36c6rt7o/3/&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;s.match(/([\\s\\S]*)&amp;lt;FooBar&amp;gt;/)[1]&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/c%2b%2b&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;c++&apos;&quot; rel=&quot;tag&quot;&gt;c++&lt;/a&gt; (&lt;code&gt;std::regex&lt;/code&gt;) Use &lt;code&gt;[\\s\\S]&lt;/code&gt; or the JavaScript workarounds (&lt;a href=&quot;https://ideone.com/2xC4ih&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;regex rex(R&quot;(([\\s\\S]*)&amp;lt;FooBar&amp;gt;)&quot;);&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/vba&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;vba&apos;&quot; rel=&quot;tag&quot;&gt;vba&lt;/a&gt; &lt;a href=&quot;/questions/tagged/vbscript&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;vbscript&apos;&quot; rel=&quot;tag&quot;&gt;vbscript&lt;/a&gt; - Use the same approach as in JavaScript, &lt;code&gt;([\\s\\S]*)&amp;lt;Foobar&amp;gt;&lt;/code&gt;.  (&lt;strong&gt;NOTE&lt;/strong&gt;: The &lt;code&gt;MultiLine&lt;/code&gt; property of the &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions//yab2dx62%28v%3Dvs.85%29&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object is sometimes erroneously thought to be the option to allow &lt;code&gt;.&lt;/code&gt; match across line breaks, while, in fact, it only changes the &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; behavior to match start/end of &lt;em&gt;lines&lt;/em&gt; rather than &lt;em&gt;strings&lt;/em&gt;, the same as in JavaScript regex)\nbehavior.)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/ruby&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;ruby&apos;&quot; rel=&quot;tag&quot;&gt;ruby&lt;/a&gt; - Use the &lt;a href=&quot;https://ruby-doc.org/core-2.4.0/Regexp.html#class-Regexp-label-Options&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;/m&lt;/code&gt; &lt;em&gt;MULTILINE&lt;/em&gt; modifier&lt;/a&gt; (&lt;a href=&quot;https://ideone.com/hSj5M2&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;s[/(.*)&amp;lt;Foobar&amp;gt;/m, 1]&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/r&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;r&apos;&quot; rel=&quot;tag&quot;&gt;r&lt;/a&gt;&lt;a href=&quot;/questions/tagged/tre&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;tre&apos;&quot; rel=&quot;tag&quot;&gt;tre&lt;/a&gt;&lt;a href=&quot;/questions/tagged/base-r&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;base-r&apos;&quot; rel=&quot;tag&quot;&gt;base-r&lt;/a&gt; - Base R PCRE regexps - use &lt;code&gt;(?s)&lt;/code&gt;: &lt;code&gt;regmatches(x, regexec(&quot;(?s)(.*)&amp;lt;FooBar&amp;gt;&quot;,x, perl=TRUE))[[1]][2]&lt;/code&gt; (&lt;a href=&quot;https://ideone.com/mCKN8U&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/r&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;r&apos;&quot; rel=&quot;tag&quot;&gt;r&lt;/a&gt;&lt;a href=&quot;/questions/tagged/icu&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;icu&apos;&quot; rel=&quot;tag&quot;&gt;icu&lt;/a&gt;&lt;a href=&quot;/questions/tagged/stringr&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;stringr&apos;&quot; rel=&quot;tag&quot;&gt;stringr&lt;/a&gt;&lt;a href=&quot;/questions/tagged/stringi&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;stringi&apos;&quot; rel=&quot;tag&quot;&gt;stringi&lt;/a&gt; - in &lt;code&gt;stringr&lt;/code&gt;/&lt;code&gt;stringi&lt;/code&gt; regex funtions that are powered with the ICU regex engine. Also use &lt;code&gt;(?s)&lt;/code&gt;: &lt;code&gt;stringr::str_match(x, &quot;(?s)(.*)&amp;lt;FooBar&amp;gt;&quot;)[,2]&lt;/code&gt; (&lt;a href=&quot;https://rextester.com/MBJG33973&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/go&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;go&apos;&quot; rel=&quot;tag&quot;&gt;go&lt;/a&gt; - Use the inline modifier &lt;code&gt;(?s)&lt;/code&gt; at the start (&lt;a href=&quot;https://play.golang.org/p/Xqproig3jZ&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;re: = regexp.MustCompile(`(?s)(.*)&amp;lt;FooBar&amp;gt;`)&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/swift&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;swift&apos;&quot; rel=&quot;tag&quot;&gt;swift&lt;/a&gt; - Use &lt;a href=&quot;https://developer.apple.com/documentation/foundation/nsregularexpression.options/1412529-dotmatcheslineseparators&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;dotMatchesLineSeparators&lt;/code&gt;&lt;/a&gt; or (easier) pass the &lt;code&gt;(?s)&lt;/code&gt; inline modifier to the pattern: &lt;code&gt;let rx = &quot;(?s)(.*)&amp;lt;Foobar&amp;gt;&quot;&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/objective-c&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;objective-c&apos;&quot; rel=&quot;tag&quot;&gt;objective-c&lt;/a&gt; - The same as Swift. &lt;code&gt;(?s)&lt;/code&gt; works the easiest, but here is how the &lt;a href=&quot;https://ideone.com/C6RP37&quot; rel=&quot;noreferrer&quot;&gt;option can be used&lt;/a&gt;: &lt;code&gt;NSRegularExpression* regex = [NSRegularExpression regularExpressionWithPattern:pattern options:NSRegularExpressionDotMatchesLineSeparators error:&amp;amp;regexError];&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/questions/tagged/re2&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;re2&apos;&quot; rel=&quot;tag&quot;&gt;re2&lt;/a&gt;, &lt;a href=&quot;/questions/tagged/google-apps-script&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;google-apps-script&apos;&quot; rel=&quot;tag&quot;&gt;google-apps-script&lt;/a&gt; - Use the &lt;code&gt;(?s)&lt;/code&gt; modifier (&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1kn6Bb4TTjXT27Yfqwi3Z9K6YQVQxqHIBYoAAa1B4NsA/edit#gid=0&quot; rel=&quot;noreferrer&quot;&gt;demo&lt;/a&gt;): &lt;code&gt;&quot;(?s)(.*)&amp;lt;Foobar&amp;gt;&quot;&lt;/code&gt; (in Google Spreadsheets, &lt;code&gt;=REGEXEXTRACT(A2,&quot;(?s)(.*)&amp;lt;Foobar&amp;gt;&quot;)&lt;/code&gt;)&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;NOTES ON &lt;code&gt;(?s)&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n&lt;p&gt;In most non-POSIX engines, the &lt;code&gt;(?s)&lt;/code&gt; inline modifier (or embedded flag option) can be used to enforce &lt;code&gt;.&lt;/code&gt; to match line breaks.&lt;/p&gt;\n&lt;p&gt;If placed at the start of the pattern, &lt;code&gt;(?s)&lt;/code&gt; changes the bahavior of all &lt;code&gt;.&lt;/code&gt; in the pattern. If the &lt;code&gt;(?s)&lt;/code&gt; is placed somewhere after the beginning, only those &lt;code&gt;.&lt;/code&gt;s will be affected that are located to the right of it &lt;em&gt;unless&lt;/em&gt; this is a pattern passed to Python&apos;s &lt;code&gt;re&lt;/code&gt;. In Python &lt;code&gt;re&lt;/code&gt;, regardless of the &lt;code&gt;(?s)&lt;/code&gt; location, the whole pattern &lt;code&gt;.&lt;/code&gt; is affected. The &lt;code&gt;(?s)&lt;/code&gt; effect is stopped using &lt;code&gt;(?-s)&lt;/code&gt;. A modified group can be used to only affect a specified range of a regex pattern (e.g., &lt;code&gt;Delim1(?s:.*?)\\nDelim2.*&lt;/code&gt; will make the first &lt;code&gt;.*?&lt;/code&gt; match across newlines and the second &lt;code&gt;.*&lt;/code&gt; will only match the rest of the line).&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;POSIX note&lt;/strong&gt;:&lt;/p&gt;\n&lt;p&gt;In non-POSIX regex engines, to match any character, &lt;code&gt;[\\s\\S]&lt;/code&gt; / &lt;code&gt;[\\d\\D]&lt;/code&gt; / &lt;code&gt;[\\w\\W]&lt;/code&gt; constructs can be used.&lt;/p&gt;\n&lt;p&gt;In POSIX, &lt;code&gt;[\\s\\S]&lt;/code&gt; is not matching any character (as in JavaScript or any non-POSIX engine), because regex escape sequences are not supported inside bracket expressions. &lt;code&gt;[\\s\\S]&lt;/code&gt; is parsed as bracket expressions that match a single character, &lt;code&gt;\\&lt;/code&gt; or &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;S&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re using Eclipse search, you can enable the &quot;DOTALL&quot; option to make &apos;.&apos; match any character including line delimiters: just add &quot;(?s)&quot; at the beginning of your search string. Example: &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;(?s).*&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;FooBar&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In many regex dialects, &lt;code&gt;/[\\S\\s]*&amp;lt;Foobar&amp;gt;/&lt;/code&gt; will do just what you want. &lt;a href=&quot;http://www.regular-expressions.info/dot.html&quot; rel=&quot;noreferrer&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;([\\s\\S]*)&amp;lt;FooBar&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;The dot matches all except newlines (\\r\\n). So use \\s\\S, which will match ALL characters. &lt;/p&gt;\n    ","\n&lt;p&gt;In &lt;a href=&quot;https://stackoverflow.com/questions/tagged/ruby&quot;&gt;Ruby&lt;/a&gt; you can use the &apos;&lt;code&gt;m&lt;/code&gt;&apos; option (multiline):&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/YOUR_REGEXP/m\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;See &lt;a href=&quot;http://www.ruby-doc.org/core-1.9.3/Regexp.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;the Regexp documentation&lt;/a&gt; on &lt;em&gt;ruby-doc.org&lt;/em&gt; for more information.&lt;/p&gt;\n    ","\n&lt;p&gt;We can also use&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-markdown&quot;&gt;(.&lt;span class=&quot;hljs-emphasis&quot;&gt;*?\\n)*&lt;/span&gt;?\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;to match everything including newline without being greedy.&lt;/p&gt;\n&lt;p&gt;This will make the new line optional&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-markdown&quot;&gt;(.&lt;span class=&quot;hljs-emphasis&quot;&gt;*?|\\n)*&lt;/span&gt;?\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;code&gt;&quot;.&quot;&lt;/code&gt; normally doesn&apos;t match line-breaks. Most regex engines allows you to add the &lt;code&gt;S&lt;/code&gt;-flag (also called &lt;code&gt;DOTALL&lt;/code&gt; and &lt;code&gt;SINGLELINE&lt;/code&gt;) to make &lt;code&gt;&quot;.&quot;&lt;/code&gt; also match newlines.\nIf that fails, you could do something like &lt;code&gt;[\\S\\s]&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;For Eclipse, the following expression worked:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Foo&lt;/p&gt;\n&lt;p&gt;jadajada Bar&quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Regular expression:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-css&quot;&gt;Foo&lt;span class=&quot;hljs-selector-attr&quot;&gt;[\\S\\s]&lt;/span&gt;{&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;}.*Bar*\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Note that &lt;code&gt;(.|\\n)*&lt;/code&gt; can be less efficient than (for example) &lt;code&gt;[\\s\\S]*&lt;/code&gt; (if your language&apos;s regexes support such escapes) and than finding how to specify the modifier that makes . also match newlines.  Or you can go with POSIXy alternatives like &lt;code&gt;[[:space:][:^space:]]*&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/(.*)&amp;lt;FooBar&amp;gt;/s\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;s&lt;/code&gt; causes dot (.) to match carriage returns.&lt;/p&gt;\n    ","\n&lt;p&gt;Use RegexOptions.Singleline. It changes the meaning of &lt;code&gt;.&lt;/code&gt; to include newlines.&lt;/p&gt;\n&lt;pre class=&quot;lang-none s-code-block&quot;&gt;&lt;code&gt;Regex.Replace(content, searchText, replaceText, RegexOptions.Singleline);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In a Java-based regular expression, you can use &lt;code&gt;[\\s\\S]&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Generally, &lt;code&gt;.&lt;/code&gt; doesn&apos;t match newlines, so try &lt;code&gt;((.|\\n)*)&amp;lt;foobar&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;In JavaScript you can use [^]* to search for zero to infinite characters, including line breaks.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#find_and_replace&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;click&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; text = $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#textarea&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n  search_term = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;[^]*&amp;lt;Foobar&amp;gt;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;gi&quot;&lt;/span&gt;);;\n  replace_term = &lt;span class=&quot;hljs-string&quot;&gt;&quot;Replacement term&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; new_text = text.&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(search_term, replace_term);\n  $(&lt;span class=&quot;hljs-string&quot;&gt;&quot;#textarea&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;(new_text);\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;find_and_replace&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Find and replace&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;textarea&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;ID&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;textarea&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;abcde\nfghij&lt;span class=&quot;hljs-symbol&quot;&gt;&amp;amp;lt;&lt;/span&gt;Foobar&lt;span class=&quot;hljs-symbol&quot;&gt;&amp;amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;textarea&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;Solution:&lt;/h2&gt;\n&lt;p&gt;Use pattern modifier &lt;code&gt;sU&lt;/code&gt; will get the desired matching in PHP.&lt;/p&gt;\n&lt;h2&gt;Example:&lt;/h2&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;preg_match(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/(.*)/sU&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$content&lt;/span&gt;, &lt;span class=&quot;hljs-variable&quot;&gt;$match&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Sources:&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;&lt;a href=&quot;http://php.net/manual/en/reference.pcre.pattern.modifiers.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;Pattern Modifiers&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;In notepad++ you can use this&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lua&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;table&lt;/span&gt; (.|\\r\\n)*&amp;lt;/&lt;span class=&quot;hljs-built_in&quot;&gt;table&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It will match the entire table starting from&lt;/p&gt;\n\n rows and columns\n\n&lt;p&gt;You can make it greedy, using the following, that way it will match the first, second and so forth tables and not all at once&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lua&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;table&lt;/span&gt; (.|\\r\\n)*?&amp;lt;/&lt;span class=&quot;hljs-built_in&quot;&gt;table&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In the context of use within languages, regular expressions act on strings, not lines. So you should be able to use the regex normally, assuming that the input string has multiple lines.&lt;/p&gt;\n\n&lt;p&gt;In this case, the given regex will match the entire string, since &quot;&amp;lt;FooBar&amp;gt;&quot; is present. Depending on the specifics of the regex implementation, the $1 value (obtained from the &quot;(.*)&quot;) will either be &quot;fghij&quot; or &quot;abcde\\nfghij&quot;. As others have said, some implementations allow you to control whether the &quot;.&quot; will match the newline, giving you the choice.&lt;/p&gt;\n\n&lt;p&gt;Line-based regular expression use is usually for command line things like egrep.&lt;/p&gt;\n    ","\n&lt;p&gt;Try: &lt;code&gt;.*\\n*.*&amp;lt;FooBar&amp;gt;&lt;/code&gt; assuming you are also allowing blank newlines. As you are allowing any character including nothing before &lt;code&gt;&amp;lt;FooBar&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I had the same problem and solved it in probably not the best way but it works.  I replaced all line breaks before I did my real match:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;mystring &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Regex&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;Replace&lt;/span&gt;(mystring, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;\\r&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;\\n&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I am manipulating HTML so line breaks don&apos;t really matter to me in this case.&lt;/p&gt;\n&lt;p&gt;I tried all of the suggestions above with no luck. I am using .NET 3.5 FYI.&lt;/p&gt;\n    ","\n&lt;p&gt;I wanted to match a particular &lt;em&gt;if&lt;/em&gt; block in Java:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;   ...\n   ...\n   &lt;span class=&quot;hljs-built_in&quot;&gt;if&lt;/span&gt;(isTrue){\n       &lt;span class=&quot;hljs-built_in&quot;&gt;doAction&lt;/span&gt;();\n\n   }\n...\n...\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If I use the regExp&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;if \\(isTrue(.|\\n)*}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;it included the closing brace for the method block, so I used&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;if \\(!isTrue([^}.]|\\n)*}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;to exclude the closing brace from the wildcard match.&lt;/p&gt;\n    ","\n&lt;p&gt;Often we have to modify a substring with a few keywords spread across lines preceding the substring. Consider an XML element:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TASK&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;UID&lt;/span&gt;&amp;gt;&lt;/span&gt;21&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;UID&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;Name&lt;/span&gt;&amp;gt;&lt;/span&gt;Architectural design&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;Name&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;PercentComplete&lt;/span&gt;&amp;gt;&lt;/span&gt;81&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;PercentComplete&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TASK&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Suppose we want to modify the 81, to some other value, say 40.  First identify &lt;code&gt;.UID.21..UID.&lt;/code&gt;, then skip all characters including &lt;code&gt;\\n&lt;/code&gt; till &lt;code&gt;.PercentCompleted.&lt;/code&gt;. The regular expression pattern and the replace specification are:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; hw = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;TASK&amp;gt;\\n  &amp;lt;UID&amp;gt;21&amp;lt;/UID&amp;gt;\\n  &amp;lt;Name&amp;gt;Architectural design&amp;lt;/Name&amp;gt;\\n  &amp;lt;PercentComplete&amp;gt;81&amp;lt;/PercentComplete&amp;gt;\\n&amp;lt;/TASK&amp;gt;&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; pattern = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&amp;lt;UID&amp;gt;21&amp;lt;/UID&amp;gt;)((.|\\n)*?)(&amp;lt;PercentComplete&amp;gt;)(\\\\d+)(&amp;lt;/PercentComplete&amp;gt;)&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; replaceSpec = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;&quot;$1$2$440$6&quot;&lt;/span&gt;);\n&lt;span class=&quot;hljs-comment&quot;&gt;// Note that the group (&amp;lt;PercentComplete&amp;gt;) is $4 and the group ((.|\\n)*?) is $2.&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; iw = hw.&lt;span class=&quot;hljs-title function_&quot;&gt;replaceFirst&lt;/span&gt;(pattern, replaceSpec);\n&lt;span class=&quot;hljs-title class_&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;println&lt;/span&gt;(iw);\n\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TASK&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;UID&lt;/span&gt;&amp;gt;&lt;/span&gt;21&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;UID&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;Name&lt;/span&gt;&amp;gt;&lt;/span&gt;Architectural design&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;Name&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;PercentComplete&lt;/span&gt;&amp;gt;&lt;/span&gt;40&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;PercentComplete&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;TASK&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The subgroup &lt;code&gt;(.|\\n)&lt;/code&gt; is probably the missing group &lt;code&gt;$3&lt;/code&gt;. If we make it non-capturing by &lt;code&gt;(?:.|\\n)&lt;/code&gt; then the &lt;code&gt;$3&lt;/code&gt; is  &lt;code&gt;(&amp;lt;PercentComplete&amp;gt;)&lt;/code&gt;. So the pattern and &lt;code&gt;replaceSpec&lt;/code&gt; can also  be:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;pattern = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;(&amp;lt;UID&amp;gt;21&amp;lt;/UID&amp;gt;)((?:.|\\n)*?)(&amp;lt;PercentComplete&amp;gt;)(\\\\d+)(&amp;lt;/PercentComplete&amp;gt;)&quot;&lt;/span&gt;);\nreplaceSpec = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;span class=&quot;hljs-subst&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;$340&lt;/span&gt;&lt;span class=&quot;hljs-subst&quot;&gt;$5&lt;/span&gt;&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;and the replacement works correctly as before.&lt;/p&gt;\n    ","\n&lt;p&gt;Typically searching for three consecutive lines in PowerShell, it would look like:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$file&lt;/span&gt; = Get-Content file.txt -raw\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$pattern&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;lineone\\r\\nlinetwo\\r\\nlinethree\\r\\n&apos;&lt;/span&gt;     &lt;span class=&quot;hljs-comment&quot;&gt;# &quot;Windows&quot; text&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$pattern&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;lineone\\nlinetwo\\nlinethree\\n&apos;&lt;/span&gt;           &lt;span class=&quot;hljs-comment&quot;&gt;# &quot;Unix&quot; text&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$pattern&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;lineone\\r?\\nlinetwo\\r?\\nlinethree\\r?\\n&apos;&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# Both&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable&quot;&gt;$file&lt;/span&gt; -match &lt;span class=&quot;hljs-variable&quot;&gt;$pattern&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# output&lt;/span&gt;\nTrue\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Bizarrely, this would be Unix text at the prompt, but Windows text in a file:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$pattern&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;lineone\nlinetwo\nlinethree\n&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Here&apos;s a way to print out the line endings:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;lineone\nlinetwo\nlinethree\n&apos;&lt;/span&gt; -replace &lt;span class=&quot;hljs-string&quot;&gt;&quot;`r&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\r&apos;&lt;/span&gt; -replace &lt;span class=&quot;hljs-string&quot;&gt;&quot;`n&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;\\n&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# Output&lt;/span&gt;\nlineone\\nlinetwo\\nlinethree\\n\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;Option 1&lt;/h3&gt;\n\n&lt;p&gt;One way would be to use the &lt;code&gt;s&lt;/code&gt; flag (just like the accepted answer):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/(.*)&amp;lt;FooBar&amp;gt;/s\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;&lt;a href=&quot;https://regex101.com/r/U9Ryj9/1/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Demo 1&lt;/a&gt;&lt;/h3&gt;\n\n&lt;h3&gt;Option 2&lt;/h3&gt;\n\n&lt;p&gt;A second way would be to use the &lt;code&gt;m&lt;/code&gt; (multiline) flag and any of the following patterns:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/([\\s\\S]*)&amp;lt;FooBar&amp;gt;/m\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/([\\d\\D]*)&amp;lt;FooBar&amp;gt;/m\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;/([\\w\\W]*)&amp;lt;FooBar&amp;gt;/m\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;&lt;a href=&quot;https://regex101.com/r/nUjqW8/1/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Demo 2&lt;/a&gt;&lt;/h3&gt;\n\n&lt;h3&gt;RegEx Circuit&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://jex.im/regulex/#!flags=&amp;amp;re=%5E(a%7Cb)*%3F%24&quot; rel=&quot;nofollow noreferrer&quot;&gt;jex.im&lt;/a&gt; visualizes regular expressions: &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/ZmEYX.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/ZmEYX.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;To clarify; I was originally using Eclipse to do a find and replace in multiple files. What I have discovered by the answers below is that my problem was the tool and not regex pattern.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2108/andyuk&quot; title=&quot;36,630 reputation&quot; class=&quot;comment-user owner&quot;&gt;andyuk&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment51677_159118&quot;&gt;&lt;span title=&quot;2008-10-02 15:45:52Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Oct 2, 2008 at 15:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is dependent on the language and/or tool you are using.  Please let us know what you are using, eg Perl, PHP, CF, C#, sed, awk, etc.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/12267/ben-doom&quot; title=&quot;7,847 reputation&quot; class=&quot;comment-user&quot;&gt;Ben Doom&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49110_159140&quot;&gt;&lt;span title=&quot;2008-10-01 18:57:49Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Oct 1, 2008 at 18:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Depending on your line endings you might need &lt;code&gt;((.|\\n|\\r)*)&amp;lt;FooBar&amp;gt;&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/153049/potherca&quot; title=&quot;12,010 reputation&quot; class=&quot;comment-user&quot;&gt;Potherca&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment12235207_159140&quot;&gt;&lt;span title=&quot;2012-03-09 17:27:53Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 9, 2012 at 17:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;He said he is using Eclipse. This is correct solution in my opinion. I have same problem and this solved it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/531954/danubian-sailor&quot; title=&quot;22,097 reputation&quot; class=&quot;comment-user&quot;&gt;Danubian Sailor&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment13105282_159140&quot;&gt;&lt;span title=&quot;2012-04-18 08:14:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 18, 2012 at 8:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Right - the question is about eclipse and so are the tags. But the accepted solution is a PHP solution. Yours should be the accepted solution...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/156481/acme&quot; title=&quot;14,243 reputation&quot; class=&quot;comment-user&quot;&gt;acme&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment14396341_159140&quot;&gt;&lt;span title=&quot;2012-06-13 12:04:41Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 13, 2012 at 12:04&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is the worst regex for matching multiple line input. Please never use it unless you are using ElasticSearch. Use &lt;code&gt;[\\s\\S]*&lt;/code&gt; or &lt;code&gt;(?s).*&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3832970/wiktor-stribi%c5%bcew&quot; title=&quot;567,443 reputation&quot; class=&quot;comment-user&quot;&gt;Wiktor Stribiżew&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64275588_159140&quot;&gt;&lt;span title=&quot;2016-07-18 11:05:55Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 18, 2016 at 11:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;and what if i wanted &lt;i&gt;just&lt;/i&gt; a new line and not all characters ?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/536124/grace&quot; title=&quot;1,247 reputation&quot; class=&quot;comment-user&quot;&gt;Grace&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment6403966_159139&quot;&gt;&lt;span title=&quot;2011-04-11 12:02:23Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 11, 2011 at 12:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Grace: use \\n to match a newline&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/813/paige-ruten&quot; title=&quot;166,199 reputation&quot; class=&quot;comment-user&quot;&gt;Paige Ruten&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment6412876_159139&quot;&gt;&lt;span title=&quot;2011-04-11 21:05:54Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 11, 2011 at 21:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The s flag is (now?) invalid, at least in Chrome/V8. Instead use /([\\s\\S]*)&amp;lt;FooBar&amp;gt;/ character class (match space and non-space] instead of the period matcher. See other answers for more info.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/836823/allen&quot; title=&quot;708 reputation&quot; class=&quot;comment-user&quot;&gt;Allen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment23622804_159139&quot;&gt;&lt;span title=&quot;2013-05-09 15:37:53Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 9, 2013 at 15:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Allen - JavaScript doesn&apos;t support the &lt;code&gt;s&lt;/code&gt; modifier. Instead, do &lt;code&gt;[^]*&lt;/code&gt; for the same effect.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/283863/derek-%e6%9c%95%e6%9c%83%e5%8a%9f%e5%a4%ab&quot; title=&quot;88,914 reputation&quot; class=&quot;comment-user&quot;&gt;Derek &lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment50725395_159139&quot;&gt;&lt;span title=&quot;2015-07-12 22:26:26Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 12, 2015 at 22:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;In Ruby, use the &lt;code&gt;m&lt;/code&gt; modifier&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1357354/ryan-buckley&quot; title=&quot;106 reputation&quot; class=&quot;comment-user&quot;&gt;Ryan Buckley&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment50854278_159139&quot;&gt;&lt;span title=&quot;2015-07-15 22:57:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 15, 2015 at 22:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You should link to this excellent overview from your profile page or something (+1).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1231450/jan&quot; title=&quot;41,017 reputation&quot; class=&quot;comment-user&quot;&gt;Jan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment80464517_45981809&quot;&gt;&lt;span title=&quot;2017-10-15 20:15:24Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 15, 2017 at 20:15&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You may want to add this to the &lt;i&gt;boost&lt;/i&gt; item:  In the regex_constants namespace, flag_type_&apos;s :  perl = ECMAScript = JavaScript = JScript = ::boost::regbase::normal = 0 which defaults to Perl. Programmers will set a base flag definition &lt;code&gt;#define MOD regex_constants::perl | boost::regex::no_mod_s | boost::regex::no_mod_m&lt;/code&gt; for thier regex flags to reflect that. And the arbitor is &lt;i&gt;always&lt;/i&gt; the inline modifiers. Where &lt;code&gt;(?-sm)(?s).*&lt;/code&gt; resets.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;span class=&quot;comment-user&quot;&gt;user557597&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment87120693_45981809&quot;&gt;&lt;span title=&quot;2018-04-26 21:30:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 26, 2018 at 21:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Can you also add for bash please?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2104638/pasupathi-rajamanickam&quot; title=&quot;1,897 reputation&quot; class=&quot;comment-user&quot;&gt;Pasupathi Rajamanickam&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment94535311_45981809&quot;&gt;&lt;span title=&quot;2018-12-19 02:12:47Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 19, 2018 at 2:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@PasupathiRajamanickam Bash uses a POSIX regex engine, the &lt;code&gt;.&lt;/code&gt; matches any char there (including line breaks). See &lt;a href=&quot;https://ideone.com/d1XTpR&quot; rel=&quot;nofollow noreferrer&quot;&gt;this online Bash demo&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3832970/wiktor-stribi%c5%bcew&quot; title=&quot;567,443 reputation&quot; class=&quot;comment-user&quot;&gt;Wiktor Stribiżew&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment94540581_45981809&quot;&gt;&lt;span title=&quot;2018-12-19 07:33:26Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 19, 2018 at 7:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;you are a legend&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3432608/sebasti%c3%a1n-espinosa&quot; title=&quot;2,030 reputation&quot; class=&quot;comment-user&quot;&gt;Sebastián Espinosa&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment108707266_45981809&quot;&gt;&lt;span title=&quot;2020-04-27 06:13:52Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 27, 2020 at 6:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Not anywhere, only in regex flavors supporting inline modifiers, and certainly not in Ruby where &lt;code&gt;(?s)&lt;/code&gt; =&amp;gt; &lt;code&gt;(?m)&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3832970/wiktor-stribi%c5%bcew&quot; title=&quot;567,443 reputation&quot; class=&quot;comment-user&quot;&gt;Wiktor Stribiżew&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64275616_8269712&quot;&gt;&lt;span title=&quot;2016-07-18 11:06:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 18, 2016 at 11:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Anything for bash?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2104638/pasupathi-rajamanickam&quot; title=&quot;1,897 reputation&quot; class=&quot;comment-user&quot;&gt;Pasupathi Rajamanickam&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment94535307_8269712&quot;&gt;&lt;span title=&quot;2018-12-19 02:12:05Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 19, 2018 at 2:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;What is the underlying regular expression engine for Eclipse? Something in Java/JDK?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123790701_8269712&quot;&gt;&lt;span title=&quot;2021-11-18 23:22:50Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 18, 2021 at 23:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;From that link: &quot;JavaScript and VBScript do not have an option to make the dot match line break characters. In those languages, you can use a character class such as [\\s\\S] to match any character.&quot;  Instead of the . use [\\s\\S] (match spaces and non-spaces) instead.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/836823/allen&quot; title=&quot;708 reputation&quot; class=&quot;comment-user&quot;&gt;Allen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment23622712_6883270&quot;&gt;&lt;span title=&quot;2013-05-09 15:34:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 9, 2013 at 15:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This solve the problem if you are using the Objective-C &lt;code&gt;[text rangeOfString:regEx options:NSRegularExpressionSearch]&lt;/code&gt;. Thanks!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/505578/j-costa&quot; title=&quot;7,283 reputation&quot; class=&quot;comment-user&quot;&gt;J. Costa&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment16201304_11566656&quot;&gt;&lt;span title=&quot;2012-08-24 22:29:41Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 24, 2012 at 22:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This works in intelliJ&apos;s find&amp;amp;replace regex, thanks.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/187423/barclay&quot; title=&quot;4,174 reputation&quot; class=&quot;comment-user&quot;&gt;barclay&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment53089799_11566656&quot;&gt;&lt;span title=&quot;2015-09-16 22:14:46Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 16, 2015 at 22:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This works. But it needs to be the first occurrence of &lt;code&gt;&amp;lt;FooBar&amp;gt;&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1410501/ozkan&quot; title=&quot;3,764 reputation&quot; class=&quot;comment-user&quot;&gt;Ozkan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment79814920_11566656&quot;&gt;&lt;span title=&quot;2017-09-26 14:16:23Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 26, 2017 at 14:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Are you sure it shouldn&apos;t be &lt;code&gt;s&lt;/code&gt; instead of &lt;code&gt;m&lt;/code&gt;?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123790841_11791527&quot;&gt;&lt;span title=&quot;2021-11-18 23:34:21Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 18, 2021 at 23:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Never use &lt;code&gt;(.*?|\\n)*?&lt;/code&gt; unless you want to end up with a catastrophic backtracking.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3832970/wiktor-stribi%c5%bcew&quot; title=&quot;567,443 reputation&quot; class=&quot;comment-user&quot;&gt;Wiktor Stribiżew&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111061179_51702858&quot;&gt;&lt;span title=&quot;2020-07-08 20:39:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 8, 2020 at 20:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Seems like this is invalid (Chrome): text.match(/a/s)    SyntaxError: Invalid flags supplied to RegExp constructor &apos;s&apos;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/836823/allen&quot; title=&quot;708 reputation&quot; class=&quot;comment-user&quot;&gt;Allen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment23622586_159146&quot;&gt;&lt;span title=&quot;2013-05-09 15:31:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 9, 2013 at 15:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Because it is unsupported in JavaScript RegEx engines. The &lt;code&gt;s&lt;/code&gt; flags exists in PCRE, the most complete engine (available in Perl and PHP). PCRE has 10 flags (and a lot of other features) while JavaScript has only 3 flags (&lt;code&gt;gmi&lt;/code&gt;).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1724914/morgan-touverey-quilling&quot; title=&quot;4,031 reputation&quot; class=&quot;comment-user&quot;&gt;Morgan Touverey Quilling&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment61085512_159146&quot;&gt;&lt;span title=&quot;2016-04-20 18:51:07Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 20, 2016 at 18:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is specific to a particular platform. What programming language and platform is it? C# / .NET?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123790660_2626317&quot;&gt;&lt;span title=&quot;2021-11-18 23:19:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 18, 2021 at 23:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Shouldn&apos;t those be backslashes?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1212596/paul-draper&quot; title=&quot;72,383 reputation&quot; class=&quot;comment-user&quot;&gt;Paul Draper&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment28862532_16890999&quot;&gt;&lt;span title=&quot;2013-10-19 06:48:54Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 19, 2013 at 6:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;They go at the end of the Regular Expression, not within in.  Example: /blah/s&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/187769/randominsano&quot; title=&quot;1,114 reputation&quot; class=&quot;comment-user&quot;&gt;RandomInsano&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment31045568_16890999&quot;&gt;&lt;span title=&quot;2013-12-21 20:12:24Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 21, 2013 at 20:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I guess you mean JavaScript, not Java? Since you can just add the &lt;code&gt;s&lt;/code&gt; flag to the pattern in Java and JavaScript doesn&apos;t have the &lt;code&gt;s&lt;/code&gt; flag.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3982562/3limin4t0r&quot; title=&quot;16,883 reputation&quot; class=&quot;comment-user&quot;&gt;3limin4t0r&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment91948605_16890999&quot;&gt;&lt;span title=&quot;2018-09-25 17:47:28Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 25, 2018 at 17:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;No, don&apos;t do that. If you need to match anything including line separators, use the DOTALL (a.k.a. /s or SingleLine) modifier.  Not only does the (.|\\n) hack make the regex less efficient, it&apos;s not even correct. At the very least, it should match \\r (carriage return) as well as \\n (linefeed).  There are other line separator characters, too, albeit rarely used.  But if you use the DOTALL flag, you don&apos;t have to worry about them.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/20938/alan-moore&quot; title=&quot;71,569 reputation&quot; class=&quot;comment-user&quot;&gt;Alan Moore&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment600536_159142&quot;&gt;&lt;span title=&quot;2009-04-26 03:17:04Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Apr 26, 2009 at 3:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;\\R is the platform-independent match for newlines in Eclipse.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/51280/opyate&quot; title=&quot;5,285 reputation&quot; class=&quot;comment-user&quot;&gt;opyate&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment1709200_159142&quot;&gt;&lt;span title=&quot;2009-11-30 11:13:50Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Nov 30, 2009 at 11:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@opyate You should post this as an answer as this little gem is incredibly useful.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/327085/jeckhart&quot; title=&quot;571 reputation&quot; class=&quot;comment-user&quot;&gt;jeckhart&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment17479973_159142&quot;&gt;&lt;span title=&quot;2012-10-15 21:29:05Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 15, 2012 at 21:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You could try this instead. It won&apos;t match the inner brackets and also consider the optional&lt;code&gt;\\r&lt;/code&gt;.: &lt;code&gt;((?:.|\\r?\\n)*)&amp;lt;foobar&amp;gt;&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3233827/ssc-hrep3&quot; title=&quot;13,374 reputation&quot; class=&quot;comment-user&quot;&gt;ssc-hrep3&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment68940807_159142&quot;&gt;&lt;span title=&quot;2016-11-29 09:52:21Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 29, 2016 at 9:52&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The first link somehow redirects to &lt;code&gt;www.facebook.com&lt;/code&gt; (which I have blocked in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Hosts_(file)&quot; rel=&quot;nofollow noreferrer&quot;&gt;hosts file&lt;/a&gt;). Is that link broken or not?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123790748_10009766&quot;&gt;&lt;span title=&quot;2021-11-18 23:26:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 18, 2021 at 23:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I guess the owner decided to redirect it to the facebook page. I will remove it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1259696/sian-lerk-lau&quot; title=&quot;172 reputation&quot; class=&quot;comment-user&quot;&gt;Sian Lerk Lau&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124036044_10009766&quot;&gt;&lt;span title=&quot;2021-11-30 09:29:21Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 30, 2021 at 9:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;(\\r\\n)*&lt;/code&gt; - super answer. thanks&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2036464/just-me&quot; title=&quot;609 reputation&quot; class=&quot;comment-user&quot;&gt;Just Me&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment126769668_70901941&quot;&gt;&lt;span title=&quot;2022-04-04 06:47:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 4 at 6:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It doesn&apos;t look right. Why two times &quot;&lt;code&gt;.*&lt;/code&gt;&quot;? This may work for the sample input in the question, but what if &quot;&amp;lt;FooBar&amp;gt;&quot;  is on line 42?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123791397_63637587&quot;&gt;&lt;span title=&quot;2021-11-19 00:27:08Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 19, 2021 at 0:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I am using .NET too and &lt;code&gt;(\\s|\\S)&lt;/code&gt; seems to do the trick for me!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4333690/vamshi-krishna&quot; title=&quot;119 reputation&quot; class=&quot;comment-user&quot;&gt;Vamshi Krishna&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment87827113_686146&quot;&gt;&lt;span title=&quot;2018-05-18 07:26:25Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 18, 2018 at 7:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@VamshiKrishna In .NET, use &lt;code&gt;(?s)&lt;/code&gt; to make &lt;code&gt;.&lt;/code&gt; match any chars. Do not use &lt;code&gt;(\\s|\\S)&lt;/code&gt; that will slow down performance.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3832970/wiktor-stribi%c5%bcew&quot; title=&quot;567,443 reputation&quot; class=&quot;comment-user&quot;&gt;Wiktor Stribiżew&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment91625060_686146&quot;&gt;&lt;span title=&quot;2018-09-14 20:35:54Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 14, 2018 at 20:35&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;There is a &lt;a href=&quot;https://stackoverflow.com/questions/9532340/how-do-i-remove-trailing-whitespace-using-a-regular-expression/30559093#30559093&quot;&gt;multi-line mode for .NET regular expressions&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123790587_686146&quot;&gt;&lt;span title=&quot;2021-11-18 23:14:41Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 18, 2021 at 23:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;What programming language? Java?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123790792_10262550&quot;&gt;&lt;span title=&quot;2021-11-18 23:29:53Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 18, 2021 at 23:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":392,"title":"How do I match any character across multiple lines in a regular expression?","content":"\n                \n&lt;p&gt;For example, this regex&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;(.*)&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;FooBar&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will match:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;abcde&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;FooBar&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But how do I get it to match across multiple lines?&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;abcde\nfghij&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;FooBar&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"how-do-i-match-any-character-across-multiple-lines-in-a-regular-expression-1657387839720","postType":"QUESTION","createdAt":"2022-07-09T17:30:39.000Z","updatedAt":"2022-07-09T17:30:39.000Z","tags":[{"id":2120,"name":"multiline","slug":"multiline","createdAt":"2022-07-09T17:30:39.000Z","updatedAt":"2022-07-09T17:30:39.000Z","Questions_Tags":{"questionId":392,"tagId":2120}}]}]}},"__N_SSG":true}