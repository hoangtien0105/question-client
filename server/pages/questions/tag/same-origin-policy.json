{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;If I understood it right you are doing an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot; rel=&quot;noreferrer&quot;&gt;XMLHttpRequest&lt;/a&gt; to a different domain than your page is on. So the browser is blocking it as it usually allows a request in the same origin for security reasons. You need to do something different when you want to do a cross-domain request. A tutorial about how to achieve that is &lt;em&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot; rel=&quot;noreferrer&quot;&gt;Using CORS&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;When you are using Postman they are not restricted by this policy. Quoted from &lt;em&gt;&lt;a href=&quot;https://developer.chrome.com/docs/extensions/mv2/xhr/&quot; rel=&quot;noreferrer&quot;&gt;Cross-Origin XMLHttpRequest&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Regular web pages can use the XMLHttpRequest object to send and receive data from remote servers, but they&apos;re limited by the same origin policy. Extensions aren&apos;t so limited. An extension can talk to remote servers outside of its origin, as long as it first requests cross-origin permissions.&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Using &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; can make your API/website vulnerable to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot; rel=&quot;noreferrer&quot;&gt;cross-site request forgery&lt;/a&gt; (CSRF) attacks. Make certain you &lt;a href=&quot;https://stackoverflow.com/questions/43154170/is-it-safe-to-enable-cors-to-for-a-public-and-readonly-webservice&quot;&gt;understand the risks&lt;/a&gt; before using this code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&apos;s very simple to solve if you are using &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot; rel=&quot;noreferrer&quot;&gt;PHP&lt;/a&gt;. Just add the following script in the beginning of your PHP page which handles the request:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;?php &lt;span class=&quot;hljs-title function_&quot;&gt;header&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Access-Control-Allow-Origin: *&apos;&lt;/span&gt;); ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Node-RED&quot; rel=&quot;noreferrer&quot;&gt;Node-red&lt;/a&gt; you have to allow &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot; rel=&quot;noreferrer&quot;&gt;CORS&lt;/a&gt; in the &lt;code&gt;node-red/settings.js&lt;/code&gt; file by un-commenting the following lines:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// The following property can be used to configure cross-origin resource sharing&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// in the HTTP nodes.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// See https://github.com/troygoode/node-cors#configuration-options for&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// details on its contents. The following is a basic permissive set of options:&lt;/span&gt;\n&lt;span class=&quot;hljs-attr&quot;&gt;httpNodeCors&lt;/span&gt;: {\n &lt;span class=&quot;hljs-attr&quot;&gt;origin&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt;,\n &lt;span class=&quot;hljs-attr&quot;&gt;methods&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;GET,PUT,POST,DELETE&quot;&lt;/span&gt;\n},\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you are using &lt;a href=&quot;http://flask.pocoo.org/&quot; rel=&quot;noreferrer&quot;&gt;Flask&lt;/a&gt; same as the question; you have first to install &lt;code&gt;flask-cors&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$ pip install -U flask-cors\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then include the Flask cors in your application.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_cors &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;CORS&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A simple application will look like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Flask&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_cors &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;CORS&lt;/span&gt;\n\napp = &lt;span class=&quot;hljs-title class_&quot;&gt;Flask&lt;/span&gt;(__name__)\n&lt;span class=&quot;hljs-title function_&quot;&gt;CORS&lt;/span&gt;(app)\n\n@app.&lt;span class=&quot;hljs-title function_&quot;&gt;route&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;)\ndef &lt;span class=&quot;hljs-title function_&quot;&gt;helloWorld&lt;/span&gt;():\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, cross-origin-world!&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For more details, you can check the &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot; rel=&quot;noreferrer&quot;&gt;Flask documentation&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;Because &lt;br&gt;\n&lt;strong&gt;$.ajax({type: &quot;POST&quot;&lt;/strong&gt; - calls &lt;strong&gt;OPTIONS&lt;/strong&gt; &lt;br&gt;\n&lt;strong&gt;$.post(&lt;/strong&gt; - Calls &lt;strong&gt;POST&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;\n&lt;p&gt;Both are different. Postman calls &quot;POST&quot; properly, but when we call it, it will be &quot;OPTIONS&quot;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;For C# web services - &lt;a href=&quot;https://en.wikipedia.org/wiki/ASP.NET_MVC_Framework#Apache_License_2.0_release&quot; rel=&quot;noreferrer&quot;&gt;Web API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Please add the following code in your &lt;em&gt;web.config&lt;/em&gt; file under &amp;lt;system.webServer&amp;gt; tag. This will work:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;httpProtocol&amp;gt;\n    &lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;customHeaders&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;*&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;customHeaders&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/httpProtocol&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Please make sure you are not doing any mistake in the Ajax call&lt;/p&gt;\n&lt;h3&gt;jQuery&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n    &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://mysite.microsoft.sample.xyz.com/api/mycall&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: {\n        &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/x-www-form-urlencoded&apos;&lt;/span&gt;\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;/* or type:&quot;GET&quot; or type:&quot;PUT&quot; */&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;json&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;: {\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(result);\n    },\n    &lt;span class=&quot;hljs-attr&quot;&gt;error&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;error&quot;&lt;/span&gt;);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are looking for downloading content &lt;strong&gt;from a third-party website&lt;/strong&gt; then &lt;strong&gt;this will not help you&lt;/strong&gt;.  You can try the following code, but not JavaScript.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;WebClient&lt;/span&gt; wc = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Net&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;WebClient&lt;/span&gt;();\nstring str = wc.&lt;span class=&quot;hljs-title class_&quot;&gt;DownloadString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://mysite.microsoft.sample.xyz.com/api/mycall&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Deep&lt;/h1&gt;\n&lt;p&gt;In the below investigation as API, I use &lt;a href=&quot;http://example.com&quot; rel=&quot;noreferrer&quot;&gt;http://example.com&lt;/a&gt; instead of http://myApiUrl/login from your question, because this first one working. I assume that your page is on &lt;a href=&quot;http://my-site.local:8088&quot; rel=&quot;noreferrer&quot;&gt;http://my-site.local:8088&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The API and your page have different domains!&lt;/p&gt;\n&lt;p&gt;The reason why you see different results is that Postman:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;set header &lt;code&gt;Host=example.com&lt;/code&gt; (your API)&lt;/li&gt;\n&lt;li&gt;NOT set header &lt;code&gt;Origin&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Postman actually not use your website url at all (you only type your API address into Postman) - he only send request to API, so he assume that website has same address as API (browser not assume this)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;This is similar to browsers&apos; way of sending requests when the site and API has the same domain (browsers also set the header item &lt;code&gt;Referer=http://my-site.local:8088&lt;/code&gt;, however I don&apos;t see it in Postman). &lt;strong&gt;When &lt;code&gt;Origin&lt;/code&gt; header is &lt;em&gt;not&lt;/em&gt; set, usually servers allow such requests by default.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/XLrRg.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/XLrRg.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;This is the standard way how Postman sends requests. But a browser sends requests differently when &lt;strong&gt;your site and API have different domains&lt;/strong&gt;, and then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot; rel=&quot;noreferrer&quot;&gt;CORS&lt;/a&gt; occurs and the browser automatically:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;sets header &lt;code&gt;Host=example.com&lt;/code&gt; (yours as API)&lt;/li&gt;\n&lt;li&gt;sets header &lt;code&gt;Origin=http://my-site.local:8088&lt;/code&gt; (your site)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;(The header &lt;code&gt;Referer&lt;/code&gt; has the same value as &lt;code&gt;Origin&lt;/code&gt;). And now in Chrome&apos;s &lt;em&gt;Console &amp;amp; Networks&lt;/em&gt; tab you will see:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/oZkcL.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/oZkcL.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/8ITev.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/8ITev.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;When you have &lt;strong&gt;&lt;code&gt;Host != Origin&lt;/code&gt;&lt;/strong&gt; this is CORS, and when the server detects such a request, it usually &lt;strong&gt;blocks it by default&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;Origin=null&lt;/code&gt; is set when you open HTML content from a local directory, and it sends a request. The same situation is when you send a request inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, like in the below snippet (but here the &lt;code&gt;Host&lt;/code&gt; header is not set at all) - in general, everywhere the HTML specification says opaque origin, you can translate that to &lt;code&gt;Origin=null&lt;/code&gt;. More information about this you can find &lt;a href=&quot;https://stackoverflow.com/questions/42239643/when-do-browsers-send-the-origin-header-when-do-browsers-set-the-origin-to-null/42242802#42242802&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/api&apos;&lt;/span&gt;, {&lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;Look on chrome-console &amp;gt; network tab&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;If you do not use a simple CORS request, usually the browser automatically also sends an OPTIONS request before sending the main request - more information is &lt;a href=&quot;https://stackoverflow.com/questions/10093053/access-control-request-headers-is-added-to-header-in-ajax-request-with-jquery/55584963#55584963&quot;&gt;here&lt;/a&gt;. The snippet below shows it:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;http://example.com/api&apos;&lt;/span&gt;, {\n  &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;headers&lt;/span&gt;: { &lt;span class=&quot;hljs-string&quot;&gt;&apos;Content-Type&apos;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;application/json&apos;&lt;/span&gt;}\n});&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;Look in chrome-console -&amp;gt; network tab to &apos;api&apos; request.\nThis is the OPTIONS request (the server does not allow sending a POST request)&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;You can change the configuration of your server to allow CORS requests.&lt;/p&gt;\n&lt;p&gt;Here is an example configuration which turns on &lt;strong&gt;CORS on nginx&lt;/strong&gt; (nginx.conf file) - be very careful with setting &lt;code&gt;always/&quot;$http_origin&quot;&lt;/code&gt; for nginx and &lt;code&gt;&quot;*&quot;&lt;/code&gt; for Apache - this will unblock CORS from any domain (in production instead of stars use your concrete page adres which consume your api)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;location ~ ^/index\\.php(/|$) {\n   ...\n    add_header &apos;Access-Control-Allow-Origin&apos; &quot;$http_origin&quot; always;\n    add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos; always;\n    if ($request_method = OPTIONS) {\n        add_header &apos;Access-Control-Allow-Origin&apos; &quot;$http_origin&quot;; # DO NOT remove THIS LINES (doubled with outside &apos;if&apos; above)\n        add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;;\n        add_header &apos;Access-Control-Max-Age&apos; 1728000; # cache preflight value for 20 days\n        add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET, POST, OPTIONS&apos;;\n        add_header &apos;Access-Control-Allow-Headers&apos; &apos;My-First-Header,My-Second-Header,Authorization,Content-Type,Accept,Origin&apos;;\n        add_header &apos;Content-Length&apos; 0;\n        add_header &apos;Content-Type&apos; &apos;text/plain charset=UTF-8&apos;;\n        return 204;\n    }\n}&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Here is an example configuration which turns on &lt;strong&gt;CORS on Apache&lt;/strong&gt; (.htaccess file)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;# ------------------------------------------------------------------------------\n# | Cross-domain Ajax requests                                                 |\n# ------------------------------------------------------------------------------\n\n# Enable cross-origin Ajax requests.\n# http://code.google.com/p/html5security/wiki/CrossOriginRequestSecurity\n# http://enable-cors.org/\n\n# &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;IfModule&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;mod_headers.c&lt;/span&gt;&amp;gt;&lt;/span&gt;\n#    Header set Access-Control-Allow-Origin &quot;*&quot;\n# &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;IfModule&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n# Header set Header set Access-Control-Allow-Origin &quot;*&quot;\n# Header always set Access-Control-Allow-Credentials &quot;true&quot;\n\nAccess-Control-Allow-Origin &quot;http://your-page.com:80&quot;\nHeader always set Access-Control-Allow-Methods &quot;POST, GET, OPTIONS, DELETE, PUT&quot;\nHeader always set Access-Control-Allow-Headers &quot;My-First-Header,My-Second-Header,Authorization, content-type, csrf-token&quot;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Applying a CORS restriction is a security feature defined by a server and implemented by a &lt;strong&gt;browser&lt;/strong&gt;. &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The browser looks at the CORS policy of the server and respects it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;However, the Postman tool does not bother about the CORS policy of the server.&lt;/p&gt;\n\n&lt;p&gt;That is why the CORS error appears in the browser, but not in Postman.&lt;/p&gt;\n    ","\n&lt;p&gt;The error you get is due to the CORS standard, which sets some restrictions on how JavaScript can perform ajax requests.&lt;/p&gt;\n&lt;p&gt;The CORS standard is a client-side standard, implemented in the browser. So it is the browser which prevent the call from completing and generates the error message - not the server.&lt;/p&gt;\n&lt;p&gt;Postman does not implement the CORS restrictions, which is why you don&apos;t see the same error when making the same call from Postman.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Why&lt;/em&gt; doesn&apos;t Postman implement CORS? CORS defines the restrictions relative to the origin (URL domain) of the page which initiates the request. But in Postman the requests doesn&apos;t originate from a page with an URL so CORS does not apply.&lt;/p&gt;\n    ","\n&lt;h2&gt;Solution &amp;amp; Issue Origins&lt;/h2&gt;\n&lt;p&gt;You are making a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot; rel=&quot;noreferrer&quot;&gt;XMLHttpRequest&lt;/a&gt; to different domains, example:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Domain one: &lt;code&gt;some-domain.com&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Domain Two: &lt;code&gt;some-different-domain.com&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;This difference in domain names triggers &lt;strong&gt;CORS&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot; rel=&quot;noreferrer&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt;) policy called &lt;strong&gt;SOP&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot; rel=&quot;noreferrer&quot;&gt;Same-Origin Policy&lt;/a&gt;) that enforces the use of same domains (hence &lt;em&gt;Origin&lt;/em&gt;) in &lt;a href=&quot;https://api.jquery.com/jquery.ajax&quot; rel=&quot;noreferrer&quot;&gt;Ajax&lt;/a&gt;, XMLHttpRequest and other HTTP requests.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Why did it work when I made the request via the Chrome extension\nPostman?&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;A client (most &lt;strong&gt;Browsers&lt;/strong&gt; and &lt;strong&gt;Development Tools&lt;/strong&gt;) has a choice to enforce the Same-Origin Policy.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;Most browsers enforce the policy of Same-Origin Policy to prevent issues related to &lt;strong&gt;CSRF&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot; rel=&quot;noreferrer&quot;&gt;Cross-Site Request Forgery&lt;/a&gt;) attack.&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Postman&lt;/strong&gt; as a development tool chooses not to enforce SOP while some browsers enforce, this is why you can send requests via Postman that you cannot send with XMLHttpRequest via JS using the browser.&lt;/p&gt;\n    ","\n&lt;p&gt;For browser testing purposes:\nWindows - Run:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;chrome.&lt;span class=&quot;hljs-property&quot;&gt;exe&lt;/span&gt; --user-data-dir=&lt;span class=&quot;hljs-string&quot;&gt;&quot;C://Chrome dev session&quot;&lt;/span&gt; --disable-web-security\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You might also get this error if your gateway timeout is too short and the resource you are accessing takes longer to process than the timeout. This may be the case for complex database queries etc. Thus, the above error code can be disguishing this problem. Just check if the error code is 504 instead of 404 as in Kamils answer above or something else. If it is 504, then increasing the gateway timeout might fix the problem.&lt;/p&gt;\n&lt;p&gt;In my case the CORS error could be removed by disabling the same origin policy (CORS) in the IE browser, see &lt;a href=&quot;https://stackoverflow.com/questions/20947359/how-to-disable-same-origin-policy-internet-explorer&quot;&gt;How to disable same origin policy Internet Explorer&lt;/a&gt;. After doing this it was a pure 504 error in the log.&lt;/p&gt;\n    ","\n&lt;p&gt;To resolve this issue write this line of code in your &lt;code&gt;doGet()&lt;/code&gt; or &lt;code&gt;doPost()&lt;/code&gt; function whichever you are using in backend.\n&lt;code&gt;response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Your IP is not whitelisted so you are getting this error.\nAsk the backend staff to whitelist your ip for the service you are accessing\n&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;&quot;The quickest fix you can make is to install the &lt;em&gt;&lt;strong&gt;moesif CORS&lt;/strong&gt;&lt;/em&gt; extension:\n&lt;a href=&quot;https://chrome.google.com/webstore/detail/moesif-origin-cors-change/digfbfaphojjndkpccljibejjbppifbc/related?hl=en-US&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://chrome.google.com/webstore/detail/moesif-origin-cors-change/digfbfaphojjndkpccljibejjbppifbc/related?hl=en-US&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Once installed, click it in your browser to activate the extension. Make sure the icons label goes from off to on:&lt;/p&gt;\n&lt;p&gt;Then &lt;strong&gt;refresh&lt;/strong&gt; your application, and your API requests should now work!&quot;&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Are you doing the request from localhost or direcly executing HTML?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1426743/md-sahib-bin-mahboob&quot; title=&quot;19,480 reputation&quot; class=&quot;comment-user&quot;&gt;MD. Sahib Bin Mahboob&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29837562_20035101&quot;&gt;&lt;span title=&quot;2013-11-17 19:31:41Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 17, 2013 at 19:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@MD.SahibBinMahboob If I understand your question I do request from localhost - I have page on my computer and just run it.   When I deploy site on hosting it&apos;s gave same result.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2140160/mr-jedi&quot; title=&quot;31,557 reputation&quot; class=&quot;comment-user owner&quot;&gt;Mr Jedi&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29837752_20035101&quot;&gt;&lt;span title=&quot;2013-11-17 19:43:54Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 17, 2013 at 19:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;For anyone looking for more reading, MDN has a good article all about ajax and cross origin requests: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot; rel=&quot;nofollow noreferrer&quot;&gt;developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4152310/sam-eaton&quot; title=&quot;1,700 reputation&quot; class=&quot;comment-user&quot;&gt;Sam Eaton&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49876123_20035101&quot;&gt;&lt;span title=&quot;2015-06-18 15:22:03Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 18, 2015 at 15:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;An answer to this question (now deleted and only visible to 10K&apos;ers) is the subject of meta question &lt;i&gt;&lt;a href=&quot;https://meta.stackoverflow.com/questions/411895/&quot;&gt;Why was this upvoted answer deleted once, and deleted again when reposted?&lt;/a&gt;&lt;/i&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122724739_20035101&quot;&gt;&lt;span title=&quot;2021-10-04 09:50:41Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 4, 2021 at 9:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;A related CORS deep dive into this same error but to do with cache and headers from S3 / Cloudfront triggering it is also here:  &lt;a href=&quot;https://stackoverflow.com/questions/44800431/caching-effect-on-cors-no-access-control-allow-origin-header-is-present-on-th&quot; title=&quot;caching effect on cors no access control allow origin header is present on th&quot;&gt;stackoverflow.com/questions/44800431/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/220325/og-sean&quot; title=&quot;816 reputation&quot; class=&quot;comment-user&quot;&gt;OG Sean&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128453831_20035101&quot;&gt;&lt;span title=&quot;2022-06-22 23:11:07Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 22 at 23:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The browser is not blocking the request.  The only browsers that outright block cross-origin ajax requests is IE7 or older.  All browsers, other than IE7 and older, implement the CORS spec (IE8 &amp;amp; IE9 partially).  All you need to do is opt-in to CORS requests on your API server by returning the proper headers based on the request.    You should read up on CORS concepts at &lt;a href=&quot;http://mzl.la/VOFrSz&quot; rel=&quot;nofollow noreferrer&quot;&gt;mzl.la/VOFrSz&lt;/a&gt;.  Postman sends requests via XHR as well.  If you are not seeing the same problem when using postman, this means that you are unknowingly not sending the same request via postman.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/486979/ray-nicholus&quot; title=&quot;19,108 reputation&quot; class=&quot;comment-user&quot;&gt;Ray Nicholus&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29838038_20035319&quot;&gt;&lt;span title=&quot;2013-11-17 20:01:25Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 17, 2013 at 20:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@MD.SahibBinMahboob Postman is NOT sending a request &quot;from your java/python&quot; code.  It is sending the request directly from the browser.  &lt;a href=&quot;https://developer.chrome.com/extensions/xhr.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;XHR in Chrome extensions does work a bit differently, especially when cross-origin requests are involved&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/486979/ray-nicholus&quot; title=&quot;19,108 reputation&quot; class=&quot;comment-user&quot;&gt;Ray Nicholus&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29838175_20035319&quot;&gt;&lt;span title=&quot;2013-11-17 20:08:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 17, 2013 at 20:08&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You shouldn&apos;t &lt;i&gt;turn off&lt;/i&gt; CORS because you don&apos;t know what its for. This leaves your users in a fundamentally unsafe state.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/229044/user229044&quot; title=&quot;223,248 reputation&quot; class=&quot;comment-user&quot;&gt;user229044&lt;/a&gt;\n&lt;span class=&quot;mod-flair &quot; title=&quot;Moderator&quot;&gt;&lt;/span&gt;                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment43813746_27280939&quot;&gt;&lt;span title=&quot;2014-12-30 06:12:55Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 30, 2014 at 6:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Even though it might not be secure, the question was not about security, but how to accomplish the task. This is one of the options that a developer has to choose from when dealing with cross-domain AJAX requests. It helped me resolve the issue, and for my application, I don&apos;t care where the data came from. I sanitize all the input with PHP on the destination domain, so, if someone wants to post some junk to it, let them try. The main point here is, cross-domain AJAX can be allowed from the destination domain. +1 for the answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1016530/zurabweb&quot; title=&quot;1,101 reputation&quot; class=&quot;comment-user&quot;&gt;ZurabWeb&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment45777809_27280939&quot;&gt;&lt;span title=&quot;2015-02-26 16:37:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 26, 2015 at 16:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@meagar Agreeing with you that we shouldn&apos;t turn of CORS but at times we need to test the application while developing it and for that, the easiest way is to turn of CORS and check if everything works fine. Many times frontend devs don&apos;t have access to the backend system where they can change things or they need to write a proxy for the same. The best way to add a chrome extension that turns off CORS for development purposes, as written in the answer which is deleted.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2963297/shruti&quot; title=&quot;5,963 reputation&quot; class=&quot;comment-user&quot;&gt;shruti&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122626796_27280939&quot;&gt;&lt;span title=&quot;2021-09-29 15:05:10Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 29, 2021 at 15:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It should be much helpful if the answer (or the edit with the WARNING on top) would explain to whom is risky if using that header() script in php. The question here is about a foreign site where we have no control, and that only allows us to navigate and see it from a browser, while if we need to access the resources from our server instead it launches the CORS protection (to not let us make too much inquiries per second). Therefore, my question still stands, what dangers do we visitors have if using in OUR server that header() script ?? Did the editor confused the visitor (us) with the host?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/13842738/eve&quot; title=&quot;167 reputation&quot; class=&quot;comment-user&quot;&gt;Eve&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124053443_27280939&quot;&gt;&lt;span title=&quot;2021-11-30 21:37:20Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 30, 2021 at 21:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Eve CORS protection isn&apos;t about the number of inquiries per second! It rejects any other website to use your resource service or page. The warning already contains two links to explain what risks are&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/348589/shady-mohamed-sherif&quot; title=&quot;13,714 reputation&quot; class=&quot;comment-user&quot;&gt;Shady Mohamed Sherif&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124120558_27280939&quot;&gt;&lt;span title=&quot;2021-12-03 12:37:07Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 3, 2021 at 12:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Great great explained and easy to catch up! Thank u!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/248616/nam-g-vu&quot; title=&quot;31,008 reputation&quot; class=&quot;comment-user&quot;&gt;Nam G VU&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125819526_59353387&quot;&gt;&lt;span title=&quot;2022-02-18 18:54:46Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 18 at 18:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@MrJedi: The accepted answer does not explain why the request succeeds in Postman, which was the original question.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7488/jacquesb&quot; title=&quot;41,075 reputation&quot; class=&quot;comment-user&quot;&gt;JacquesB&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116098749_65647854&quot;&gt;&lt;span title=&quot;2021-01-11 10:24:43Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 11, 2021 at 10:24&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The servers originally were meant to send streams to clients (browser software programs) not to various desktop or server applications instead that could behave in twisted ways. A browser establishes a handshake protocol with the server, receives the confirmation in regard to the connection then the data stream resumes. There were (DDOS) situations where bot farms servers sent millions of  inquiries and the host committed many resources (opened processes) to each of these stalled connections that eventually never occurred - thus blocking its ability to answer to other legit requests&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/13842738/eve&quot; title=&quot;167 reputation&quot; class=&quot;comment-user&quot;&gt;Eve&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124053979_65647854&quot;&gt;&lt;span title=&quot;2021-11-30 22:09:03Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 30, 2021 at 22:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Could you please explain it ?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/18961814/zebracoder&quot; title=&quot;222 reputation&quot; class=&quot;comment-user&quot;&gt;ZebraCoder&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128417046_70652404&quot;&gt;&lt;span title=&quot;2022-06-21 13:04:06Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 21 at 13:04&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@ZebraCoder The command above will disable chrome web security.  So for example if you work on a local project and encounter CORS policy issue when trying to make a request, you can skip this type of error with the above command. Basically it will open a new chrome session.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3086170/daniel-iftimie&quot; title=&quot;115 reputation&quot; class=&quot;comment-user&quot;&gt;Daniel Iftimie&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128462852_70652404&quot;&gt;&lt;span title=&quot;2022-06-23 10:22:18Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 23 at 10:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;If you gettimeout you doesn&apos;t get CORS error&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2140160/mr-jedi&quot; title=&quot;31,557 reputation&quot; class=&quot;comment-user owner&quot;&gt;Mr Jedi&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124263659_70290034&quot;&gt;&lt;span title=&quot;2021-12-09 19:45:55Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 9, 2021 at 19:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Well, I did in trouble shooting a system and the CORS error threw me off, that it was just the timeout that was too short, which resulted in a closed connection. After increasing the timeout, the system performed perfectly. So yes the timeout caused a No &apos;Access-Control-Allow-Origin&apos; error which got me into this thread in the first place. So this might be helpful to others having this thrown along with a 504.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6585198/ndm&quot; title=&quot;399 reputation&quot; class=&quot;comment-user&quot;&gt;NDM&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124315182_70290034&quot;&gt;&lt;span title=&quot;2021-12-12 16:49:00Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 12, 2021 at 16:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It rather mean something wrong iscwith your app config. You shouldn&apos;t get this error on timeout&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2140160/mr-jedi&quot; title=&quot;31,557 reputation&quot; class=&quot;comment-user owner&quot;&gt;Mr Jedi&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124367222_70290034&quot;&gt;&lt;span title=&quot;2021-12-14 20:49:50Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 14, 2021 at 20:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This one works but this is not the permanent solution Permanent solution can only be done by backend&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/18961814/zebracoder&quot; title=&quot;222 reputation&quot; class=&quot;comment-user&quot;&gt;ZebraCoder&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128370267_72625825&quot;&gt;&lt;span title=&quot;2022-06-19 02:03:10Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 19 at 2:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":108,"title":"Why does my JavaScript code receive a \"No 'Access-Control-Allow-Origin' header is present on the requested resource\" error, while Postman does not?","content":"\n                \n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Mod note&lt;/strong&gt;: This question is about why &lt;code&gt;XMLHttpRequest&lt;/code&gt;/&lt;code&gt;fetch&lt;/code&gt;/etc. on the browser are subject to the Same Access Policy restrictions (you get errors mentioning CORB or CORS) while Postman is not. This question is &lt;strong&gt;not&lt;/strong&gt; about how to fix a &quot;No &apos;Access-Control-Allow-Origin&apos;...&quot; error. It&apos;s about why they happen.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;Please stop posting&lt;/strong&gt;:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;CORS configurations for every language/framework under the sun. Instead &lt;a href=&quot;https://stackoverflow.com/search?q=how+to+enable+CORS+is%3Aquestion&amp;amp;mixed=1&quot;&gt;find your relevant language/framework&apos;s question&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;3rd party services that allow a request to circumvent CORS&lt;/li&gt;\n&lt;li&gt;Command line options for turning off CORS for various browsers&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/blockquote&gt;\n&lt;hr&gt;\n&lt;p&gt;I am trying to do authorization using &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaScript&quot; rel=&quot;noreferrer&quot;&gt;JavaScript&lt;/a&gt; by connecting to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot; rel=&quot;noreferrer&quot;&gt;RESTful&lt;/a&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Application_programming_interface&quot; rel=&quot;noreferrer&quot;&gt;API&lt;/a&gt; built-in &lt;a href=&quot;https://en.wikipedia.org/wiki/Flask_%28web_framework%29&quot; rel=&quot;noreferrer&quot;&gt;Flask&lt;/a&gt;. However, when I make the request, I get the following error:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;XMLHttpRequest cannot load http://myApiUrl/login. No &apos;Access-Control-Allow-Origin&apos; header is present on the requested resource. Origin &apos;null&apos; is therefore not allowed access.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;I know that the API or remote resource must set the header, but why did it work when I made the request via the Chrome extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&quot; rel=&quot;noreferrer&quot;&gt;Postman&lt;/a&gt;?&lt;/p&gt;\n&lt;p&gt;This is the request code:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;ajax&lt;/span&gt;({\n  &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;POST&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;dataType&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;text&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;: api,\n  &lt;span class=&quot;hljs-attr&quot;&gt;username&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;user&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;password&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;pass&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;crossDomain&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;xhrFields&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-attr&quot;&gt;withCredentials&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\n  },\n})\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;done&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;done&apos;&lt;/span&gt;);\n  })\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;fail&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;xhr, textStatus, errorThrown&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(xhr.&lt;span class=&quot;hljs-property&quot;&gt;responseText&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(textStatus);\n  });\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"why-does-my-javascript-code-receive-a-\"no-'access-control-allow-origin'-header-is-present-on-the-requested-resource\"-error-while-postman-does-not-1657384636363","postType":"QUESTION","createdAt":"2022-07-09T16:37:16.000Z","updatedAt":"2022-07-09T16:37:16.000Z","tags":[{"id":395,"name":"same-origin-policy","slug":"same-origin-policy","createdAt":"2022-07-09T16:37:16.000Z","updatedAt":"2022-07-09T16:37:16.000Z","Questions_Tags":{"questionId":108,"tagId":395}}]}]}},"__N_SSG":true}