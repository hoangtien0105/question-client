{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; cte &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n(\n   &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;,\n         &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rn\n   &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs\n)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; cte\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; rn &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you expect 2 entries per day, then this will arbitrarily pick one. To get both entries for a day, use DENSE_RANK instead&lt;/p&gt;\n\n&lt;p&gt;As for normalised or not, it depends if you want to:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;maintain status in 2 places&lt;/li&gt;\n&lt;li&gt;preserve status history&lt;/li&gt;\n&lt;li&gt;...&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;As it stands, you preserve status history. If you want latest status in the parent table too (which is denormalisation) you&apos;d need a trigger to maintain &quot;status&quot; in the parent. or drop this status history table.&lt;/p&gt;\n    ","\n&lt;p&gt;I just learned how to use &lt;code&gt;cross apply&lt;/code&gt;. Here&apos;s how to use it in this scenario:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; d.DocumentID, ds.Status, ds.DateCreated \n &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; Documents &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; d \n &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; apply \n     (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; top &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; Status, DateCreated\n      &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; DocumentStatusLogs \n      &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; d.DocumentId\n      &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;desc&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; ds\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I know this is an old thread but the &lt;code&gt;TOP 1 WITH TIES&lt;/code&gt; solutions is quite nice and might be helpful to some reading through the solutions.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; top &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; ties\n   DocumentID\n  ,Status\n  ,DateCreated\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; DocumentStatusLogs\n&lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;row_number&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;partition&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;desc&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;select top 1 with ties&lt;/code&gt; clause tells SQL Server that you want to return the first row per group. But how does SQL Server know how to group up the data? This is where the &lt;code&gt;order by row_number() over (partition by DocumentID order by DateCreated desc&lt;/code&gt; comes in. The column/columns after &lt;code&gt;partition by&lt;/code&gt; defines how SQL Server groups up the data. Within each group, the rows will be sorted based on the &lt;code&gt;order by&lt;/code&gt; columns. Once sorted, the top row in each group will be returned in the query.&lt;/p&gt;\n&lt;p&gt;More about the TOP clause can be found &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/queries/top-transact-sql&quot; rel=&quot;noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve done some timings over the various recommendations here, and the results really depend on the size of the table involved, but the most consistent solution is using the CROSS APPLY  These tests were run against SQL Server 2008-R2, using a table with 6,500 records, and another (identical schema) with 137 million records.  The columns being queried are part of the primary key on the table, and the table width is very small (about 30 bytes).  The times are reported by SQL Server from the actual execution plan.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;Query                                  &lt;span class=&quot;hljs-type&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6500&lt;/span&gt; (ms)    &lt;span class=&quot;hljs-type&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;137&lt;/span&gt;M(ms)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY                                    &lt;span class=&quot;hljs-number&quot;&gt;17.9&lt;/span&gt;                &lt;span class=&quot;hljs-number&quot;&gt;17.9&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; col &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(COL))           &lt;span class=&quot;hljs-number&quot;&gt;6.6&lt;/span&gt;               &lt;span class=&quot;hljs-number&quot;&gt;854.4&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;DENSE_RANK&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt;                     &lt;span class=&quot;hljs-number&quot;&gt;6.6&lt;/span&gt;               &lt;span class=&quot;hljs-number&quot;&gt;907.1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I think the really amazing thing was how consistent the time was for the CROSS APPLY regardless of the number of rows involved.&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re worried about performance, you can also do this with MAX():&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs D\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(DateCreated) &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; ID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; D.ID)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;ROW_NUMBER() requires a sort of all the rows in your SELECT statement, whereas MAX does not. Should drastically speed up your query.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\nDocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; DocumentID, &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(DateCreated) DateCreated\n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs\n  &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID\n  ) max_date &lt;span class=&quot;hljs-keyword&quot;&gt;USING&lt;/span&gt; (DocumentID, DateCreated)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What database server? This code doesn&apos;t work on all of them.&lt;/p&gt;\n\n&lt;p&gt;Regarding the second half of your question, it seems reasonable to me to include the status as a column. You can leave &lt;code&gt;DocumentStatusLogs&lt;/code&gt; as a log, but still store the latest info in the main table.&lt;/p&gt;\n\n&lt;p&gt;BTW, if you already have the &lt;code&gt;DateCreated&lt;/code&gt; column in the Documents table you can just join &lt;code&gt;DocumentStatusLogs&lt;/code&gt; using that (as long as &lt;code&gt;DateCreated&lt;/code&gt; is unique in &lt;code&gt;DocumentStatusLogs&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;Edit: MsSQL does not support USING, so change it to:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; DocumentStatusLogs.DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; max_date.DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; DocumentStatusLogs.DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; max_date.DateCreated\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is one of the most easily found question on the topic, so I wanted to give a modern answer to the it (both for my reference and to help others out). By using &lt;code&gt;first_value&lt;/code&gt; and &lt;code&gt;over&lt;/code&gt; you can make short work of the above query:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;distinct&lt;/span&gt; DocumentID\n  , &lt;span class=&quot;hljs-built_in&quot;&gt;first_value&lt;/span&gt;(status) &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;partition&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;Desc&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; Status\n  , &lt;span class=&quot;hljs-built_in&quot;&gt;first_value&lt;/span&gt;(DateCreated) &lt;span class=&quot;hljs-keyword&quot;&gt;over&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;partition&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;Desc&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; DateCreated\n&lt;span class=&quot;hljs-keyword&quot;&gt;From&lt;/span&gt; DocumentStatusLogs\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This should work in Sql Server 2008 and up. &lt;code&gt;First_value&lt;/code&gt; can be thought of as a way to accomplish &lt;code&gt;Select Top 1&lt;/code&gt; when using an &lt;code&gt;over&lt;/code&gt; clause. &lt;code&gt;Over&lt;/code&gt; allows grouping in the select list so instead of writing nested subqueries (like many of the existing answers do), this does it in a more readable fashion. Hope this helps.&lt;/p&gt;\n    ","\n&lt;p&gt;Here are 3 separate approaches to the problem in hand along with the best choices of indexing for each of those queries (please try out the indexes yourselves and see the logical read, elapsed time, execution plan. I have provided the suggestions from my experience on such queries without executing for this specific problem).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Approach 1&lt;/strong&gt;: Using ROW_NUMBER(). If rowstore index is not being able to enhance the performance, you can try out nonclustered/clustered columnstore index as for queries with aggregation and grouping and for tables which are ordered by in different columns all the times, columnstore index usually is the best choice.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; CTE &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt;\n    (\n       &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;,\n                RN &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;)\n       &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;     DocumentStatusLogs\n    )\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  ID      \n        ,DocumentID \n        ,Status     \n        ,DateCreated\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;    CTE\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;   RN &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Approach 2&lt;/strong&gt;: Using FIRST_VALUE. If rowstore index is not being able to enhance the performance, you can try out nonclustered/clustered columnstore index as for queries with aggregation and grouping and for tables which are ordered by in different columns all the times, columnstore index usually is the best choice.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt;\n    ID      &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;FIRST_VALUE&lt;/span&gt;(ID) &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;)\n    ,DocumentID\n    ,Status     &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;FIRST_VALUE&lt;/span&gt;(Status) &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;)\n    ,DateCreated    &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;FIRST_VALUE&lt;/span&gt;(DateCreated) &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;    DocumentStatusLogs;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Approach 3&lt;/strong&gt;: Using CROSS APPLY. Creating rowstore index on DocumentStatusLogs table covering the columns used in the query should be enough to cover the query without need of a columnstore index.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt;\n    ID      &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CA.ID\n    ,DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; D.DocumentID\n    ,Status     &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CA.Status \n    ,DateCreated    &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; CA.DateCreated\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;    DocumentStatusLogs D\n    &lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY (\n            &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  TOP &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; I.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;    DocumentStatusLogs I\n            &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;   I.DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; D.DocumentID\n            &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; I.DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n            ) CA;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This is quite an old thread, but I thought I&apos;d throw my two cents in just the same as the accepted answer didn&apos;t work particularly well for me.  I tried gbn&apos;s solution on a large dataset and found it to be terribly slow (&amp;gt;45 seconds on 5 million plus records in SQL Server 2012).  Looking at the execution plan it&apos;s obvious that the issue is that it requires a SORT operation which slows things down significantly.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s an alternative that I lifted from the entity framework that needs no SORT operation and does a NON-Clustered Index search.  This reduces the execution time down to &amp;lt; 2 seconds on the aforementioned record set.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n[Limit1].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID], \n[Limit1].[Status] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Status], \n[Limit1].[DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DateCreated]\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; [Extent1].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; [dbo].[DocumentStatusLogs] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Extent1]) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Distinct1]\n&lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; APPLY  (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; TOP (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) [Project2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [ID], [Project2].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID], [Project2].[Status] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Status], [Project2].[DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DateCreated]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n        [Extent2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [ID], \n        [Extent2].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID], \n        [Extent2].[Status] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Status], \n        [Extent2].[DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DateCreated]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; [dbo].[DocumentStatusLogs] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Extent2]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; ([Distinct1].[DocumentID] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; [Extent2].[DocumentID])\n    )  &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Project2]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; [Project2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Limit1]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now I&apos;m assuming something that isn&apos;t entirely specified in the original question, but if your table design is such that your ID column is an auto-increment ID, and the DateCreated is set to the current date with each insert, then even without running with my query above you could actually get a sizable performance boost to gbn&apos;s solution (about half the execution time) just from &lt;strong&gt;ordering on ID instead of ordering on DateCreated&lt;/strong&gt; as this will provide an identical sort order and it&apos;s a faster sort.&lt;/p&gt;\n    ","\n&lt;p&gt;My code to select top 1 from each group&lt;/p&gt;\n\n&lt;pre&gt;select a.* from #DocumentStatusLogs a where \n datecreated in( select top 1 datecreated from #DocumentStatusLogs b\nwhere \na.documentid = b.documentid\norder by datecreated desc\n)\n&lt;/pre&gt;\n    ","\n&lt;p&gt;This solution can be used to get the TOP N most recent rows for each partition (in the example, N is 1 in the WHERE statement and partition is doc_id):&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; T.doc_id, T.status, T.date_created &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; a.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; doc_id &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; date_created &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rnk &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; doc a\n) T\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; T.rnk &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;code&gt;CROSS APPLY&lt;/code&gt; was the method I used for my solution, as it worked for me, and for my clients needs. And from what I&apos;ve read, should provide the best overall performance should their database grow substantially.&lt;/p&gt;\n    ","\n&lt;p&gt;Verifying Clint&apos;s awesome and correct answer from above:&lt;/p&gt;\n&lt;p&gt;The performance between the two queries below is interesting. 52% being the top one. And 48% being the second one. A 4% improvement in performance using DISTINCT instead of ORDER BY. But ORDER BY has the advantage to sort by multiple columns.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;IF (OBJECT_ID(&lt;span class=&quot;hljs-string&quot;&gt;&apos;tempdb..#DocumentStatusLogs&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; #DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; #DocumentStatusLogs (\n    [ID] &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n    [DocumentID] &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;,\n    [Status] &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;),\n    [DateCreated] datetime\n)\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; #DocumentStatusLogs([ID], [DocumentID], [Status], [DateCreated]) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;7/29/2011 1:00:00&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; #DocumentStatusLogs([ID], [DocumentID], [Status], [DateCreated]) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;7/30/2011 2:00:00&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; #DocumentStatusLogs([ID], [DocumentID], [Status], [DateCreated]) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;8/02/2011 3:00:00&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; #DocumentStatusLogs([ID], [DocumentID], [Status], [DateCreated]) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;7/28/2011 4:00:00&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; #DocumentStatusLogs([ID], [DocumentID], [Status], [DateCreated]) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S2&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;7/30/2011 5:00:00&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; #DocumentStatusLogs([ID], [DocumentID], [Status], [DateCreated]) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S3&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;8/01/2011 6:00:00&apos;&lt;/span&gt;)\n&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; #DocumentStatusLogs([ID], [DocumentID], [Status], [DateCreated]) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;S1&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;8/02/2011 7:00:00&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Option 1:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n    [Extent1].[ID], \n    [Extent1].[DocumentID],\n    [Extent1].[Status], \n    [Extent1].[DateCreated]\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; #DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Extent1]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; APPLY (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; TOP &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n            [Extent2].[ID], \n            [Extent2].[DocumentID],\n            [Extent2].[Status], \n            [Extent2].[DateCreated]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; #DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Extent2]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; [Extent1].[DocumentID] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; [Extent2].[DocumentID]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; [Extent2].[DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;, [Extent2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Project2]\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; ([Project2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;OR&lt;/span&gt; [Project2].[ID] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; [Extent1].[ID])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Option 2:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    [Limit1].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [ID], \n    [Limit1].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID], \n    [Limit1].[Status] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Status], \n    [Limit1].[DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DateCreated]\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; [Extent1].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; #DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Extent1]\n) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Distinct1]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;OUTER&lt;/span&gt; APPLY  (\n        &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; TOP (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) [Project2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [ID], [Project2].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID], [Project2].[Status] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Status], [Project2].[DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DateCreated]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n            &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n                [Extent2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [ID], \n                [Extent2].[DocumentID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DocumentID], \n                [Extent2].[Status] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Status], \n                [Extent2].[DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DateCreated]\n            &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; #DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Extent2]\n            &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; [Distinct1].[DocumentID] &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; [Extent2].[DocumentID]\n        )  &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Project2]\n        &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; [Project2].[ID] &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Limit1]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In Microsoft SQL Server Management Studio: after highlighting and running the first block, highlight both Option 1 and Option 2, right click -&amp;gt; [Display Estimated Execution Plan]. Then run the entire thing to see the results.&lt;/p&gt;\n&lt;p&gt;Option 1 Results:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;ID  DocumentID  Status  DateCreated\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   S1  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   S3  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   S1  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Option 2 Results:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;ID  DocumentID  Status  DateCreated\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;   S1  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   S3  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;   S1  &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;I tend to use APPLY when I want a join to be 1-to-(1 of many).&lt;/p&gt;\n&lt;p&gt;I use a JOIN if I want the join to be 1-to-many, or many-to-many.&lt;/p&gt;\n&lt;p&gt;I avoid CTE with ROW_NUMBER() unless I need to do something advanced and am ok with the windowing performance penalty.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;I also avoid EXISTS / IN subqueries in the WHERE or ON clause, as I have experienced this causing some terrible execution plans. But mileage varies. Review the execution plan and profile performance where and when needed!&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; o.&lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; `DocumentStatusLogs` o                   \n  &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt; `DocumentStatusLogs` b                   \n  &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; o.DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; b.DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; o.DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; b.DateCreated\n &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; b.DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; ;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you want to return only recent document order by DateCreated, it will return only top 1 document by DocumentID&lt;/p&gt;\n    ","\n&lt;p&gt;I believe this can be done just like this. This might need some tweaking but you can just select the max from the group.&lt;/p&gt;\n&lt;p&gt;These answers are overkill..&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  d.DocumentID,\n  &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(d.Status),\n  &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(d1.DateCreated)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs d, DocumentStatusLogs d1\n&lt;span class=&quot;hljs-keyword&quot;&gt;USING&lt;/span&gt; DocumentID\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In scenarios where you want to avoid using row_count(), you can also use a left join:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ds.DocumentID, ds.Status, ds.DateCreated \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; DocumentStatusLogs ds\n&lt;span class=&quot;hljs-keyword&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;filter&lt;/span&gt; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; ds.DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; filter.DocumentID\n    &lt;span class=&quot;hljs-comment&quot;&gt;-- Match any row that has another row that was created after it.&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; ds.DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; filter.DateCreated\n&lt;span class=&quot;hljs-comment&quot;&gt;-- then filter out any rows that matched &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; filter.DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For the example schema, you could also use a &quot;not in subquery&quot;, which generally compiles to the same output as the left join: &lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ds.DocumentID, ds.Status, ds.DateCreated \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; DocumentStatusLogs ds\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; ds.ID &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IN&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; filter.ID \n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs &lt;span class=&quot;hljs-keyword&quot;&gt;filter&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; ds.DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; filter.DocumentID\n        &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; ds.DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt; filter.DateCreated)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note, the subquery pattern wouldn&apos;t work if the table didn&apos;t have at least one single-column unique key/constraint/index, in this case the primary key &quot;Id&quot;.&lt;/p&gt;\n\n&lt;p&gt;Both of these queries tend to be more &quot;expensive&quot; than the row_count() query (as measured by Query Analyzer).  However, you might encounter scenarios where they return results faster or enable other optimizations.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; documentid, \n       status, \n       datecreated \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   documentstatuslogs dlogs \n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;  status &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; status \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   documentstatuslogs \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;  documentid &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; dlogs.documentid \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; datecreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt; \n                 LIMIT  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Try this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; [DocumentID]\n    ,[tmpRez].&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[2]&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;varchar(20)&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [Status]\n    ,[tmpRez].&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;/x[3]&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;datetime&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [DateCreated]\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; (\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; [DocumentID]\n        ,&lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;([ID] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; [Status] &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&amp;lt;x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;cast&lt;/span&gt;([DateCreated] &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;))) &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;lt;/x&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; XML) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [tmpRez]\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs\n    &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID\n    ) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [tmpQry]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Some database engines* are starting to support the &lt;code&gt;QUALIFY&lt;/code&gt; clause that allows to filter the result of window functions (which the accepted answer uses).&lt;/p&gt;\n&lt;p&gt;So the accepted answer can become&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; rn\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs\nQUALIFY rn &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;See this article for an in depth explanation: &lt;a href=&quot;https://jrandrews.net/the-joy-of-qualify&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://jrandrews.net/the-joy-of-qualify&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;You can use this tool to see  which database support this clause: &lt;a href=&quot;https://www.jooq.org/translate/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://www.jooq.org/translate/&lt;/a&gt;\nThere is an option to transform the qualify clause when the target dialect does not support it.&lt;/p&gt;\n&lt;p&gt;*Teradata, BigQuery, H2, Snowflake...&lt;/p&gt;\n    ","\n&lt;p&gt;This is the most vanilla TSQL I can come up with&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs D1 &lt;span class=&quot;hljs-keyword&quot;&gt;JOIN&lt;/span&gt;\n    (\n      &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n        DocumentID,&lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(DateCreated) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; MaxDate\n      &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;\n        DocumentStatusLogs\n      &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt;\n        DocumentID\n    ) D2\n    &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt;\n      D2.DocumentID&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;D1.DocumentID\n    &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt;\n      D2.MaxDate&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;D1.DateCreated\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;My SQL Server Version: 15.x (2019)&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  TOP &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; TIES\n        DocumentID,\n        GetOnlyTheTop(Status),\n        GetOnlyTheTop(DateCreated)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;ROW_NUMBER&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;OVER&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;hopefully this will work.. just change the columns as per your db.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt;\nr2.id,\nr2.name,\nr2.e_date,\nr2.roomcode,\nr2.roomname,\nr2.bedn\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; \n(   \n &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; \n    id,\n    &lt;span class=&quot;hljs-built_in&quot;&gt;max&lt;/span&gt;(e_date) e_date\n    &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; rooms\n    &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; id\n) r1\n&lt;span class=&quot;hljs-keyword&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;join&lt;/span&gt; rooms r2 &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; r2.id &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; r1.id &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; r2.e_date &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; r1.e_date;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It is checked in SQLite that you can use the following simple query with &lt;em&gt;GROUP BY&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;MAX&lt;/span&gt;(DateCreated), &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here &lt;em&gt;MAX&lt;/em&gt; help to get the maximum &lt;em&gt;DateCreated&lt;/em&gt; FROM each group.&lt;/p&gt;\n\n&lt;p&gt;But it seems that MYSQL doesn&apos;t associate *-columns with the value of max DateCreated :(&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;For a more detailed discussion and comparison of possible solutions I recommend to read the similar question on dba.se: &lt;a href=&quot;http://dba.stackexchange.com/q/86415/57105&quot;&gt;Retrieving n rows per group&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4116017/vladimir-baranov&quot; title=&quot;30,322 reputation&quot; class=&quot;comment-user&quot;&gt;Vladimir Baranov&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment68142383_6841605&quot;&gt;&lt;span title=&quot;2016-11-06 10:33:23Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 6, 2016 at 10:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I looked at the post and tried it. Using &lt;i&gt;group by StoreID&lt;/i&gt; generated an error.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/384091/ultraj&quot; title=&quot;447 reputation&quot; class=&quot;comment-user&quot;&gt;UltraJ&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment91374255_6841605&quot;&gt;&lt;span title=&quot;2018-09-06 21:32:31Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 6, 2018 at 21:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Related: &lt;a href=&quot;https://stackoverflow.com/questions/3800551/select-first-row-in-each-group-by-group&quot;&gt;Select first row in each GROUP BY group?&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/603516/vadzim&quot; title=&quot;23,195 reputation&quot; class=&quot;comment-user&quot;&gt;Vadzim&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment110308789_6841605&quot;&gt;&lt;span title=&quot;2020-06-14 10:35:12Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 14, 2020 at 10:35&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This question is for MS SQL Server, question &lt;a href=&quot;https://stackoverflow.com/questions/3800551/select-first-row-in-each-group-by-group&quot;&gt;Select first row in each GROUP BY group&lt;/a&gt; is for Postgres. The language constructs can be different.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/52277/michael-freidgeim&quot; title=&quot;24,227 reputation&quot; class=&quot;comment-user&quot;&gt;Michael Freidgeim&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127688624_6841605&quot;&gt;&lt;span title=&quot;2022-05-17 13:26:30Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 17 at 13:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;And... What is &lt;code&gt;Partition By&lt;/code&gt;? &lt;code&gt;With&lt;/code&gt; is new to me also :( I&apos;m using mssql 2005 anyway.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/724689/dpp&quot; title=&quot;27,366 reputation&quot; class=&quot;comment-user owner&quot;&gt;dpp&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8132565_6841644&quot;&gt;&lt;span title=&quot;2011-07-27 08:48:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2011 at 8:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@domanokz: Partition By resets the count. So in this case, it says to count per DocumentID&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/27535/gbn&quot; title=&quot;409,798 reputation&quot; class=&quot;comment-user&quot;&gt;gbn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8132599_6841644&quot;&gt;&lt;span title=&quot;2011-07-27 08:50:29Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2011 at 8:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Hm, I worry about the performance, I&apos;ll be querying millions of rows. Is SELECT * FROM (SELECT ...) affects the performance? Also, is &lt;code&gt;ROW_NUMBER&lt;/code&gt; some kind of a subquery for each row?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/724689/dpp&quot; title=&quot;27,366 reputation&quot; class=&quot;comment-user owner&quot;&gt;dpp&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8133047_6841644&quot;&gt;&lt;span title=&quot;2011-07-27 09:21:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2011 at 9:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@domanokz: no, it&apos;s not a subquery. If you have correct indexes then millions shouldn&apos;t be a problem. There are only 2 set based ways anyway: this and the aggregate (Ariel&apos;s solution). So try them both...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/27535/gbn&quot; title=&quot;409,798 reputation&quot; class=&quot;comment-user&quot;&gt;gbn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8133181_6841644&quot;&gt;&lt;span title=&quot;2011-07-27 09:30:19Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2011 at 9:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@domanokz: Just change ORDER BY DateCreated DESC to ORDER BY ID DESC&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/27535/gbn&quot; title=&quot;409,798 reputation&quot; class=&quot;comment-user&quot;&gt;gbn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8133547_6841644&quot;&gt;&lt;span title=&quot;2011-07-27 09:52:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2011 at 9:52&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;That actually makes no difference since the issue is still addressed.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/724689/dpp&quot; title=&quot;27,366 reputation&quot; class=&quot;comment-user owner&quot;&gt;dpp&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment16461896_12190849&quot;&gt;&lt;span title=&quot;2012-09-05 05:57:03Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 5, 2012 at 5:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I just posted the results of my timing tests against all of the proposed solutions and yours came out on top.  Giving you an up vote :-)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/500010/john-fairbanks&quot; title=&quot;1,282 reputation&quot; class=&quot;comment-user&quot;&gt;John Fairbanks&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment46090349_12190849&quot;&gt;&lt;span title=&quot;2015-03-07 15:00:18Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 7, 2015 at 15:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;+1 for huge speed improvement. This is much faster than a windowing function such as ROW_NUMBER(). It would be nice if SQL recognized ROW_NUMBER() = 1 like queries and optimized them into Applies.  Note:  I used OUTER APPLY as I needed results, even if they didn&apos;t exist in the apply.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/458321/tamusjroyce&quot; title=&quot;736 reputation&quot; class=&quot;comment-user&quot;&gt;TamusJRoyce&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment54237558_12190849&quot;&gt;&lt;span title=&quot;2015-10-19 14:17:21Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 19, 2015 at 14:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@TamusJRoyce  you can&apos;t extrapolate that just because it was faster once this is always the case. It depends. As described here &lt;a href=&quot;http://sqlmag.com/database-development/optimizing-top-n-group-queries&quot; rel=&quot;nofollow noreferrer&quot;&gt;sqlmag.com/database-development/optimizing-top-n-group-queries&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/73226/martin-smith&quot; title=&quot;420,795 reputation&quot; class=&quot;comment-user&quot;&gt;Martin Smith&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment62729835_12190849&quot;&gt;&lt;span title=&quot;2016-06-03 21:26:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 3, 2016 at 21:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This works well when you already have a separate &lt;code&gt;Documents&lt;/code&gt; table that gives one row per group, as desired in the output. But if you&apos;re only working with the one table (&lt;code&gt;DocumentStatusLogs&lt;/code&gt; in this case), you&apos;d first have to do some sort of &lt;code&gt;DISTINCT&lt;/code&gt; operation on &lt;code&gt;DocumentID&lt;/code&gt; (or &lt;code&gt;ROW_NUMBER()&lt;/code&gt;, &lt;code&gt;MAX(ID)&lt;/code&gt;, etc.), losing all that gained performance.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6680521/extragorey&quot; title=&quot;1,565 reputation&quot; class=&quot;comment-user&quot;&gt;Extragorey&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111798382_12190849&quot;&gt;&lt;span title=&quot;2020-08-03 04:25:26Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 3, 2020 at 4:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is the most elegant solution imo&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5825963/george-menoutis&quot; title=&quot;6,183 reputation&quot; class=&quot;comment-user&quot;&gt;George Menoutis&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment92588983_48412942&quot;&gt;&lt;span title=&quot;2018-10-16 13:20:57Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 16, 2018 at 13:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;agreed - this best replicates what is very easy to do in other versions of SQL and other languages imo&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5728493/chris-umphlett&quot; title=&quot;360 reputation&quot; class=&quot;comment-user&quot;&gt;Chris Umphlett&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment103930623_48412942&quot;&gt;&lt;span title=&quot;2019-11-12 21:38:33Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 12, 2019 at 21:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Wish I could upvote more than once. I have returned to this answer about 7.000 times already. There might come a day, when I take the time to understand this, so I wouldn&apos;t have to come back. But it is not this day.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8244920/mpn275&quot; title=&quot;113 reputation&quot; class=&quot;comment-user&quot;&gt;mpn275&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment112834847_48412942&quot;&gt;&lt;span title=&quot;2020-09-09 09:56:19Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 9, 2020 at 9:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Hmm, &apos;With Ties&apos; might cause more rows to be returned than the value specified in expression (TOP 1). If the OP wants only 1, then you need to remove this phrase, right?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4736069/tk-bruin&quot; title=&quot;423 reputation&quot; class=&quot;comment-user&quot;&gt;TK Bruin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment114155613_48412942&quot;&gt;&lt;span title=&quot;2020-10-27 17:26:06Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 27, 2020 at 17:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@TKBruin that is why the order by row_number() is required. This allows the top record per partition to be retrieved.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3827849/josh-gilfillan&quot; title=&quot;3,698 reputation&quot; class=&quot;comment-user&quot;&gt;Josh Gilfillan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment114176271_48412942&quot;&gt;&lt;span title=&quot;2020-10-28 11:48:33Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 28, 2020 at 11:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It all depends on the data distribution and available indexes. It was discussed at great lengths on &lt;a href=&quot;http://dba.stackexchange.com/questions/86415/retrieving-n-rows-per-group&quot;&gt;dba.se&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4116017/vladimir-baranov&quot; title=&quot;30,322 reputation&quot; class=&quot;comment-user&quot;&gt;Vladimir Baranov&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment68142291_28916168&quot;&gt;&lt;span title=&quot;2016-11-06 10:27:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 6, 2016 at 10:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Cannot performance issues with ROW_NUMBER() be addressed with proper indexing? (I feel that should be done anyhow)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/26746/kristoffer-l&quot; title=&quot;718 reputation&quot; class=&quot;comment-user&quot;&gt;Kristoffer L&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment28943732_14346780&quot;&gt;&lt;span title=&quot;2013-10-22 07:17:26Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 22, 2013 at 7:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;With datetime, you cannot guarantee two entries won&apos;t be added on the same date and time. Precision isn&apos;t high enough.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/458321/tamusjroyce&quot; title=&quot;736 reputation&quot; class=&quot;comment-user&quot;&gt;TamusJRoyce&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment54237725_14346780&quot;&gt;&lt;span title=&quot;2015-10-19 14:20:43Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 19, 2015 at 14:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;+1 for simplicity. @TamusJRoyce is right. What about? &apos;select * from DocumentStatusLog D where ID = (select ID from DocumentsStatusLog where D.DocumentID = DocumentID order by DateCreated DESC limit 1);&apos;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/286335/cibercitizen1&quot; title=&quot;20,154 reputation&quot; class=&quot;comment-user&quot;&gt;cibercitizen1&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment75946401_14346780&quot;&gt;&lt;span title=&quot;2017-06-10 16:22:33Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 10, 2017 at 16:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;SELECT * FROM EventScheduleTbl D WHERE DatesPicked = (SELECT top 1 min(DatesPicked) \t\t\t\t\t\tFROM EventScheduleTbl  \t\t\t\t\t\t\tWHERE EventIDf = D.EventIDf and DatesPicked&amp;gt;= convert(date,getdate()) )&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5237614/arun-prasad-e-s&quot; title=&quot;8,579 reputation&quot; class=&quot;comment-user&quot;&gt;Arun Prasad E S&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment84111423_14346780&quot;&gt;&lt;span title=&quot;2018-02-01 07:58:54Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 1, 2018 at 7:58&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;In my case, this approach was SLOWER than using ROW_NUMBER(), due to the introduction of a subquery.  You should test different approaches to see what performs best for your data.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1410606/scott&quot; title=&quot;4,307 reputation&quot; class=&quot;comment-user&quot;&gt;Scott&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment102910983_14346780&quot;&gt;&lt;span title=&quot;2019-10-07 14:53:46Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 7, 2019 at 14:53&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The clue was in the title: MSSQL. SQL Server does not have USING but the idea is OK.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/27535/gbn&quot; title=&quot;409,798 reputation&quot; class=&quot;comment-user&quot;&gt;gbn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8132602_6841650&quot;&gt;&lt;span title=&quot;2011-07-27 08:50:49Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2011 at 8:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@gbn The stupid moderators usually delete important keywords from titles, as they have done here. Making it very difficult to find the correct answers in search results or Google.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/229587/nickg&quot; title=&quot;8,895 reputation&quot; class=&quot;comment-user&quot;&gt;NickG&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment53353296_6841650&quot;&gt;&lt;span title=&quot;2015-09-24 08:41:41Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 24, 2015 at 8:41&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Jus to point out that this &quot;solution&quot; can still give you multiple records if you have a tie on the &lt;code&gt;max(DateCreated)&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2582116/moonknight&quot; title=&quot;136 reputation&quot; class=&quot;comment-user&quot;&gt;MoonKnight&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81631343_6841650&quot;&gt;&lt;span title=&quot;2017-11-16 21:40:47Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 16, 2017 at 21:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Remove the Using (in MS SQL ) and complete the Join code , then it would work .&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1793811/faheem-khan&quot; title=&quot;462 reputation&quot; class=&quot;comment-user&quot;&gt;faheem khan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115719843_6841650&quot;&gt;&lt;span title=&quot;2020-12-26 06:50:45Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 26, 2020 at 6:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This doesn&apos;t work in SQL Server 2008 R2. I think first_value was introduced in 2012!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1555323/ufo&quot; title=&quot;662 reputation&quot; class=&quot;comment-user&quot;&gt;ufo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment83868177_48312304&quot;&gt;&lt;span title=&quot;2018-01-25 08:33:06Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 25, 2018 at 8:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Very fast! I was using the Cross Apply solution offered by @dpp, but this one is waaaay faster.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/68722/mattslay&quot; title=&quot;8,185 reputation&quot; class=&quot;comment-user&quot;&gt;MattSlay&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment101919960_48312304&quot;&gt;&lt;span title=&quot;2019-08-31 18:03:31Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 31, 2019 at 18:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;For large numbers of columns (Status, DateCreated, etc.), does this do a separate partition/sort for each column, or does it get optimised into one?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6680521/extragorey&quot; title=&quot;1,565 reputation&quot; class=&quot;comment-user&quot;&gt;Extragorey&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111798650_48312304&quot;&gt;&lt;span title=&quot;2020-08-03 04:47:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 3, 2020 at 4:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks for the different solutions proposed. I went through the second one and saved me today man!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1792086/mario-ruiz&quot; title=&quot;745 reputation&quot; class=&quot;comment-user&quot;&gt;mario ruiz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment113339203_56625095&quot;&gt;&lt;span title=&quot;2020-09-27 22:36:59Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 27, 2020 at 22:36&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I have a 100M rows table where I nedded to get both the 1st and the last record for each group. The first two approaches took several minutes to execute. Approach 3 took less than a second.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4755941/pedro-ludovico-bozzini&quot; title=&quot;362 reputation&quot; class=&quot;comment-user&quot;&gt;Pedro Ludovico Bozzini&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment117932397_56625095&quot;&gt;&lt;span title=&quot;2021-03-19 19:31:04Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 19, 2021 at 19:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thank you for this really comprehensive answer! Deserves many more votes, although it hasn&apos;t been around for as long as the others.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/303101/reversed-engineer&quot; title=&quot;1,048 reputation&quot; class=&quot;comment-user&quot;&gt;Reversed Engineer&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment126213667_56625095&quot;&gt;&lt;span title=&quot;2022-03-09 07:53:37Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 9 at 7:53&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is just going to return everything in the table.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6680521/extragorey&quot; title=&quot;1,565 reputation&quot; class=&quot;comment-user&quot;&gt;Extragorey&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111799051_41225613&quot;&gt;&lt;span title=&quot;2020-08-03 05:19:35Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 3, 2020 at 5:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Is this t-sql? &lt;code&gt;Using&lt;/code&gt; isn&apos;t supported like that...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/304461/pedroc88&quot; title=&quot;3,568 reputation&quot; class=&quot;comment-user&quot;&gt;PedroC88&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment118808439_60849589&quot;&gt;&lt;span title=&quot;2021-04-22 14:49:47Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 22, 2021 at 14:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;mysql 8 should support @PedroC88&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2573069/union-find&quot; title=&quot;7,154 reputation&quot; class=&quot;comment-user&quot;&gt;Union find&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment118810128_60849589&quot;&gt;&lt;span title=&quot;2021-04-22 15:43:11Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 22, 2021 at 15:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Yeah I mention it because the OP specified sql-server&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/304461/pedroc88&quot; title=&quot;3,568 reputation&quot; class=&quot;comment-user&quot;&gt;PedroC88&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment118840361_60849589&quot;&gt;&lt;span title=&quot;2021-04-23 16:14:58Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 23, 2021 at 16:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@PedroC88 the question seems to have been changed so that it doesn&apos;t reference sql-server anymore. so this is an OK answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2573069/union-find&quot; title=&quot;7,154 reputation&quot; class=&quot;comment-user&quot;&gt;Union find&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment118840686_60849589&quot;&gt;&lt;span title=&quot;2021-04-23 16:29:49Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 23, 2021 at 16:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Its on the tags&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/304461/pedroc88&quot; title=&quot;3,568 reputation&quot; class=&quot;comment-user&quot;&gt;PedroC88&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment118860918_60849589&quot;&gt;&lt;span title=&quot;2021-04-24 17:17:53Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 24, 2021 at 17:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You should always describe your SQL statement how it will work and solve the OP&apos;s query.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10532500/suraj-kumar&quot; title=&quot;5,399 reputation&quot; class=&quot;comment-user&quot;&gt;Suraj Kumar&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment105429876_40437976&quot;&gt;&lt;span title=&quot;2020-01-07 18:10:32Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 7, 2020 at 18:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Unfortunately MaxDate is not unique. It is possible to have two dates entered at the same exact time. So this can result in duplicates per group. You can, however, use an identity column or GUID. Identity Column would get you the latest one that&apos;s been entered (default identity calc being used, 1...x step 1).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/458321/tamusjroyce&quot; title=&quot;736 reputation&quot; class=&quot;comment-user&quot;&gt;TamusJRoyce&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment54593149_31723745&quot;&gt;&lt;span title=&quot;2015-10-28 20:26:24Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 28, 2015 at 20:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Well I kind of agree, but the author asked for the latest entry - which unless you include an auto-increment identity column means two items added at exactly the same time are equally &apos;the latest&apos;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3752072/rich-s&quot; title=&quot;29 reputation&quot; class=&quot;comment-user&quot;&gt;rich s&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment73354795_31723745&quot;&gt;&lt;span title=&quot;2017-03-31 10:56:59Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 31, 2017 at 10:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Latest record will be one record. So yes. You need to consider the auto-increment identity column.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/458321/tamusjroyce&quot; title=&quot;736 reputation&quot; class=&quot;comment-user&quot;&gt;TamusJRoyce&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81996359_31723745&quot;&gt;&lt;span title=&quot;2017-11-27 21:20:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 27, 2017 at 21:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How is this different from @JoshGilfillan &apos;s answer &lt;a href=&quot;https://stackoverflow.com/a/48412942/14868997&quot;&gt;stackoverflow.com/a/48412942/14868997&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/14868997/charlieface&quot; title=&quot;31,783 reputation&quot; class=&quot;comment-user&quot;&gt;Charlieface&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125769495_71098002&quot;&gt;&lt;span title=&quot;2022-02-16 21:01:21Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 16 at 21:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The OP tagged MS-SQL not My SQL&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5784276/marcos-j-d-junior&quot; title=&quot;138 reputation&quot; class=&quot;comment-user&quot;&gt;Marcos J.D Junior&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment126757430_71098002&quot;&gt;&lt;span title=&quot;2022-04-03 12:35:51Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 3 at 12:35&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;There are &lt;b&gt;22 existing answers&lt;/b&gt; to this question, including a top-voted, accepted answer with over &lt;b&gt;eight hundred votes&lt;/b&gt;. Are you &lt;i&gt;certain&lt;/i&gt; your solution hasn&apos;t already been given? If not, why do you believe your approach improves upon the existing proposals, which have been validated by the community? Offering an explanation is &lt;i&gt;always&lt;/i&gt; useful on Stack Overflow, but it&apos;s &lt;i&gt;especially&lt;/i&gt; important where the question has been resolved to the satisfaction of both the OP and the community. Please help readers out by explaining what your answer does different and when it might be preferred.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3025856/jeremy-caney&quot; title=&quot;6,266 reputation&quot; class=&quot;comment-user&quot;&gt;Jeremy Caney&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128501170_72744453&quot;&gt;&lt;span title=&quot;2022-06-25 02:11:00Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 25 at 2:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":259,"title":"Get top 1 row of each group","content":"\n                \n&lt;p&gt;I have a table which I want to get the latest entry for each group. Here&apos;s the table:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;DocumentStatusLogs&lt;/code&gt; Table&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;ID&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Status &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S1     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S2     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S1     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S1     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S2     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S3     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S1     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The table will be grouped by &lt;code&gt;DocumentID&lt;/code&gt; and sorted by &lt;code&gt;DateCreated&lt;/code&gt; in descending order. For each &lt;code&gt;DocumentID&lt;/code&gt;, I want to get the latest status. &lt;/p&gt;\n\n&lt;p&gt;My preferred output:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Status &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S1     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S3     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; S1     &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2011&lt;/span&gt;   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Is there any aggregate function to get only the top from each group? See pseudo-code &lt;code&gt;GetOnlyTheTop&lt;/code&gt; below:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n  DocumentID,\n  GetOnlyTheTop(Status),\n  GetOnlyTheTop(DateCreated)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; DocumentStatusLogs\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DocumentID\n&lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-keyword&quot;&gt;DESC&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;If such function doesn&apos;t exist, is there any way I can achieve the output I want?&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;Or at the first place, could this be caused by unnormalized database? I&apos;m thinking, since what I&apos;m looking for is just one row, should that &lt;code&gt;status&lt;/code&gt; also be located in the parent table?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Please see the parent table for more information:&lt;/p&gt;\n\n&lt;p&gt;Current &lt;code&gt;Documents&lt;/code&gt; Table&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Title  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Content  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TitleA &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TitleB &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TitleC &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Should the parent table be like this so that I can easily access its status?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DocumentID &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Title  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; Content  &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; DateCreated &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; CurrentStatus &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TitleA &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; s1            &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TitleB &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; s3            &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;          &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; TitleC &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...      &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; ...         &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt; s1            &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;\nI just learned how to use &quot;apply&quot; which makes it easier to address such problems.&lt;/p&gt;\n    ","slug":"get-top-1-row-of-each-group-1657387438304","postType":"QUESTION","createdAt":"2022-07-09T17:23:58.000Z","updatedAt":"2022-07-09T17:23:58.000Z","tags":[{"id":1658,"name":"tsql","slug":"tsql","createdAt":"2022-07-09T17:23:58.000Z","updatedAt":"2022-07-09T17:23:58.000Z","Questions_Tags":{"questionId":259,"tagId":1658}}]}]}},"__N_SSG":true}