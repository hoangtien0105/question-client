{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;With the &lt;a href=&quot;/questions/tagged/data.table&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;data.table&apos;&quot; rel=&quot;tag&quot;&gt;data.table&lt;/a&gt; package, this could easily be solved with the new &lt;code&gt;rowid&lt;/code&gt; function:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;data.table&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ndcast&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;setDT&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;d1&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; rowid&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; prefix &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;medication&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;MedName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which gives:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name    medication1     medication2       medication3\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; Name1  atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg    aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg  sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; Name2  atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg  enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg              &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Another method (commonly used before version 1.9.7):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;dcast&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;setDT&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;d1&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; rn &lt;span class=&quot;hljs-operator&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt;.N&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; by &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Name&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; paste0&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;medication&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;rn&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n      value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;MedName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;giving the same result.&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;A similar approach, but now using the &lt;a href=&quot;/questions/tagged/dplyr&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;dplyr&apos;&quot; rel=&quot;tag&quot;&gt;dplyr&lt;/a&gt; and &lt;a href=&quot;/questions/tagged/tidyr&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &apos;tidyr&apos;&quot; rel=&quot;tag&quot;&gt;tidyr&lt;/a&gt; packages:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nlibrary&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nd1 &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  group_by&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  mutate&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;rn &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; paste0&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;medication&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;row_number&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  spread&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;rn&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; MedName&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which gives:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;Source&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt; local data frame &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; x &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\nGroups&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt; Name &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n\n    Name   medication1    medication2      medication3\n  &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;fctr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;chr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;          &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;chr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;            &lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;chr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;  Name1 atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg   aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;  Name2 atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg               &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;Assuming your data is in the object &lt;code&gt;dataset&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;plyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;## Add a medication index&lt;/span&gt;\ndata_with_index &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; ddply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; .&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; mutate&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n                         index &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; paste0&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;medication&apos;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;    \ndcast&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;data_with_index&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; index&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;MedName&apos;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;##    Name   medication1    medication2      medication3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;## 1 Name1 atenolol 25mg   aspirin 81mg sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;## 2 Name2 atenolol 50mg enalapril 20mg             &amp;lt;NA&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You could always generate a unique &lt;code&gt;timevar&lt;/code&gt; before using &lt;code&gt;reshape&lt;/code&gt;. Here I use &lt;code&gt;ave&lt;/code&gt; to apply the function &lt;code&gt;seq_along&lt;/code&gt; &apos;along&apos; each &quot;Name&quot;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;test &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;\nName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\nMedName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 25mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;aspirin 81mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;sildenafil 100mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n          &lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 50mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;enalapril 20mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# generate the &apos;timevar&apos;&lt;/span&gt;\ntest&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;uniqid &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; with&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; ave&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;as.character&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; Name&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; FUN &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;seq_along&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# reshape!&lt;/span&gt;\nreshape&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; idvar &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; timevar &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;uniqid&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; direction &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;wide&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name     MedName.1      MedName.2        MedName.3\n&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; name1 atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg   aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; name2 atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg             &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This seems to actually be a fairly common problem, so I have included a function called &lt;code&gt;getanID&lt;/code&gt; in my &quot;splitstackshape&quot; package.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s what it does:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;splitstackshape&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ngetanID&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#     Name          MedName .id&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1: name1    atenolol 25mg   1&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2: name1     aspirin 81mg   2&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 3: name1 sildenafil 100mg   3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 4: name2    atenolol 50mg   1&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 5: name2   enalapril 20mg   2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Since &quot;data.table&quot; is loaded along with &quot;splitstackshape&quot;, you have access to &lt;code&gt;dcast.data.table&lt;/code&gt;, so you can proceed as with @mnel&apos;s example.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;dcast.data.table&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;getanID&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; Name &lt;span class=&quot;hljs-operator&quot;&gt;~&lt;/span&gt; .id&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;MedName&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#     Name             1              2                3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1: name1 atenolol 25mg   aspirin 81mg sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2: name2 atenolol 50mg enalapril 20mg               NA&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;The function essentially implements a &lt;code&gt;sequence(.N)&lt;/code&gt; by the groups identified to create the &quot;time&quot; column.&lt;/p&gt;\n    ","\n&lt;p&gt;@thelatemail&apos;s solution is similar to this one.  When I generate the time variable, I use &lt;code&gt;rle&lt;/code&gt; in case I&apos;m not working interactively and the &lt;code&gt;Name&lt;/code&gt; variable needs to be dynamic.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# start with your example data&lt;/span&gt;\nx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; \n    data.frame&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;\n        Name&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;name2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        MedName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 25mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;aspirin 81mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;sildenafil 100mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n            &lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 50mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;enalapril 20mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# pick the id variable&lt;/span&gt;\nid &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Name&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# sort the data.frame by that variable&lt;/span&gt;\nx &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; x&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt; order&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; x&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; id &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# construct a `time` variable on the fly&lt;/span&gt;\nx&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;time &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; unlist&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; lapply&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; rle&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;as.character&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; x&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; id &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;$&lt;/span&gt;lengths &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;seq_len&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# `reshape` uses that new `time` column by default&lt;/span&gt;\ny &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; reshape&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt; x &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; idvar &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; id &lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; direction &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;wide&apos;&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# done&lt;/span&gt;\ny\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;One clean solution involves the very useful &lt;code&gt;pivot_wider&lt;/code&gt; function from the &lt;code&gt;tidyr&lt;/code&gt; package version &lt;code&gt;1.1.0&lt;/code&gt;. With this you can also directly specify the column names by using the argument &lt;code&gt;names_glue&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\nlibrary&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\ndataframe &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  group_by&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  mutate&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;row_n &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; \n  pivot_wider&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;id_cols &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Name&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; names_from &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; row_n&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; values_from &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; MedName&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; names_glue &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;medication{row_n}&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Output&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# A tibble: 2 x 4&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# Groups:   Name [2]&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   Name  medication1   medication2    medication3     &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;           &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1 Name1 atenolol 25mg aspirin 81mg   sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2 Name2 atenolol 50mg enalapril 20mg NA  &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here&apos;s a shorter way, taking advantage of the way &lt;code&gt;unlist&lt;/code&gt; deals with names:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\ndf1 &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt; do&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;as_tibble&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;t&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;unlist&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;.&lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# # A tibble: 2 x 4&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# # Groups:   Name [2]&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#      Name      MedName1       MedName2         MedName3&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#     &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   1 name1 atenolol 25mg   aspirin 81mg sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   2 name2 atenolol 50mg enalapril 20mg             &amp;lt;NA&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A &lt;code&gt;tidyr&lt;/code&gt; solution with &lt;code&gt;chop()&lt;/code&gt; and &lt;code&gt;unnest_wider()&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;library&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\ndf &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  chop&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;Name&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;%&amp;gt;%&lt;/span&gt;\n  unnest_wider&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;MedName&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; names_sep &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;# # A tibble: 2 x 4&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   Name  MedName1      MedName2       MedName3        &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;#   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;           &lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 1 Name1 atenolol 25mg aspirin 81mg   sildenafil 100mg&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;# 2 Name2 atenolol 50mg enalapril 20mg NA &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The argument &lt;code&gt;names_sep = &quot;&quot;&lt;/code&gt; is necessary; otherwise, the new column names will be &lt;code&gt;..1&lt;/code&gt;, &lt;code&gt;..2&lt;/code&gt;, and &lt;code&gt;..3&lt;/code&gt;.&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;df &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;-&lt;/span&gt; structure&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;Name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Name2&quot;&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; MedName &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 25mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;aspirin 81mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;sildenafil 100mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; \n&lt;span class=&quot;hljs-string&quot;&gt;&quot;atenolol 50mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;enalapril 20mg&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;data.frame&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; row.names &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;5L&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;this solution has small issue. when number of column exceeds 10, it sorted in ther strage way. for example starts&lt;code&gt;medication1,medication10,medication11,medication12,...,medication2&lt;/code&gt;. how to solve sorting problem?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3659286/cina&quot; title=&quot;8,747 reputation&quot; class=&quot;comment-user&quot;&gt;Cina&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment97115827_11322959&quot;&gt;&lt;span title=&quot;2019-03-15 18:37:36Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 15, 2019 at 18:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks for the help, this worked. My one worry about the columns, is that in my actual dataset I have an ever changing number and names of medications, so declaring the MedName=c(All the names) would probably be a bit much, but I appreciate the help, and will probably use this method on other problems.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1500512/hotamd6&quot; title=&quot;275 reputation&quot; class=&quot;comment-user owner&quot;&gt;Hotamd6&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment14917879_11323251&quot;&gt;&lt;span title=&quot;2012-07-04 14:44:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 4, 2012 at 14:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Hotamd6 - no need to manually specify all the names - you could just do a find and replace on the dataset names like &lt;code&gt;gsub(&quot;MedName.&quot;,&quot;medication&quot;,names(reshapedtestdata),fixed=TRUE)&lt;/code&gt; to get the same result as @mnel above.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/496803/thelatemail&quot; title=&quot;86,277 reputation&quot; class=&quot;comment-user&quot;&gt;thelatemail&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment14926439_11323251&quot;&gt;&lt;span title=&quot;2012-07-04 23:32:41Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 4, 2012 at 23:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I&apos;m not sure I understand your comment about using &lt;code&gt;rle&lt;/code&gt; when the &quot;Name&quot; variable needs to be dynamic. Wouldn&apos;t @thelatemail&apos;s solution also allow such flexibility (and without having to sort the data first)?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1270695/a5c1d2h2i1m1n2o1r2t1&quot; title=&quot;185,006 reputation&quot; class=&quot;comment-user&quot;&gt;A5C1D2H2I1M1N2O1R2T1&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment43395634_25279895&quot;&gt;&lt;span title=&quot;2014-12-15 10:01:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 15, 2014 at 10:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@AnandaMahto maybe you&apos;re right..i suppose you could use &lt;code&gt;id &amp;lt;- &apos;Name&apos;&lt;/code&gt; and then later &lt;code&gt;as.character(get(id))&lt;/code&gt; in that second line and then the rest is dynamic.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1759499/anthony-damico&quot; title=&quot;5,309 reputation&quot; class=&quot;comment-user&quot;&gt;Anthony Damico&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment43425929_25279895&quot;&gt;&lt;span title=&quot;2014-12-16 03:55:54Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 16, 2014 at 3:55&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":504,"title":"Transpose / reshape dataframe without \"timevar\" from long to wide format","content":"\n                \n&lt;p&gt;I have a data frame that follows the below long Pattern:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name          MedName\n  Name1    atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg\n  Name1     aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg\n  Name1 sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n  Name2    atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg\n  Name2   enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And would like to get below (I do not care if I can get the columns to be named this way, just want the data in this format): &lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt;   Name   medication1    medication2      medication3\n  Name1 atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg   aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg sildenafil &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;mg\n  Name2 atenolol &lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;mg enalapril &lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;mg             &lt;span class=&quot;hljs-literal&quot;&gt;NA&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Through this very site I have become familiarish with the reshape/reshape2 package, and have went through several attempts to try to get this to work but have thus far failed.&lt;/p&gt;\n\n&lt;p&gt;When I try &lt;code&gt;dcast(dataframe, Name ~ MedName, value.var=&apos;MedName&apos;)&lt;/code&gt; I just get a bunch of columns that are flags of the medication names (values that get transposed are 1 or 0) example:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt; Name  atenolol &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;mg  aspirin &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;mg\nName1              &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\nName2              &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;             &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I also tried a &lt;code&gt;dcast(dataset, Name ~ variable)&lt;/code&gt; after I melted the dataset, however this just spits out the following (just counts how many meds each person has):&lt;/p&gt;\n\n&lt;pre class=&quot;lang-r s-code-block&quot;&gt;&lt;code class=&quot;hljs language-r&quot;&gt; Name  MedName\nName1        &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\nname2        &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Finally, I tried to melt the data and then reshape using &lt;code&gt;idvar=&quot;Name&quot;&lt;/code&gt; &lt;code&gt;timevar=&quot;variable&quot;&lt;/code&gt; (of which all just are Mednames), however this does not seem built for my issue since if there are multiple matches to the idvar, the reshape just takes the first MedName and ignores the rest.&lt;/p&gt;\n\n&lt;p&gt;Does anyone know how to do this using reshape or another R function? I realize that there probably is a way to do this in a more messy manner with some for loops and conditionals to basically split and re-paste the data, but I was hoping there was a more simple solution. Thank you so much!&lt;/p&gt;\n    ","slug":"transpose-reshape-dataframe-without-\"timevar\"-from-long-to-wide-format-1657388213347","postType":"QUESTION","createdAt":"2022-07-09T17:36:53.000Z","updatedAt":"2022-07-09T17:36:53.000Z","tags":[{"id":2509,"name":"transpose","slug":"transpose","createdAt":"2022-07-09T17:36:53.000Z","updatedAt":"2022-07-09T17:36:53.000Z","Questions_Tags":{"questionId":504,"tagId":2509}}]}]}},"__N_SSG":true}