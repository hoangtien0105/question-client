{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;In your current Activity, create a new &lt;code&gt;Intent&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;;\nIntent i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(CurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, NewActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);    \ni.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;,value);\nstartActivity(i);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then in the new Activity, retrieve those values:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;extras&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (extras != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; extras.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-comment&quot;&gt;//The key argument here must match that used in the other activity&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use this technique to pass variables from one Activity to the other.&lt;/p&gt;\n    ","\n&lt;p&gt;The easiest way to do this would be to pass the session id to the signout activity in the &lt;code&gt;Intent&lt;/code&gt; you&apos;re using to start the activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getBaseContext(), SignoutActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXTRA_SESSION_ID&quot;&lt;/span&gt;, sessionId);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Access that intent on next activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; sessionId = getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXTRA_SESSION_ID&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://developer.android.com/guide/topics/intents/intents-filters.html&quot; rel=&quot;noreferrer&quot;&gt;docs&lt;/a&gt; for Intents has more information (look at the section titled &quot;Extras&quot;).&lt;/p&gt;\n    ","\n&lt;p&gt;Passing &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot; rel=&quot;noreferrer&quot;&gt;Intent&lt;/a&gt; extras is a good approach as Erich noted. &lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=&quot;http://developer.android.com/reference/android/app/Application.html&quot; rel=&quot;noreferrer&quot;&gt;Application&lt;/a&gt; object is another way though, and it is sometimes easier when dealing with the same state across multiple activities (as opposed to having to get/put it everywhere), or objects more complex than primitives and Strings. &lt;/p&gt;\n\n&lt;p&gt;You can extend Application, and then set/get whatever you want there and access it from any Activity (in the same application) with &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#getApplication%28%29&quot; rel=&quot;noreferrer&quot;&gt;getApplication()&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Also keep in mind that other approaches you might see, like statics, can be problematic because they &lt;a href=&quot;http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html&quot; rel=&quot;noreferrer&quot;&gt;can lead to memory leaks&lt;/a&gt;. Application helps solve this too.&lt;/p&gt;\n    ","\n&lt;p&gt;Source class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent myIntent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, NewActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nmyIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your First Name Here&quot;&lt;/span&gt;);\nmyIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastName&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Your Last Name Here&quot;&lt;/span&gt;);\nstartActivity(myIntent)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Destination Class (NewActivity class):&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n    setContentView(R.layout.view);\n\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;lName&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;lastName&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You just have to send extras while calling your intent.&lt;/p&gt;\n\n&lt;p&gt;Like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getApplicationContext(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Value you want to pass&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now on the &lt;code&gt;OnCreate&lt;/code&gt; method of your &lt;code&gt;SecondActivity&lt;/code&gt; you can fetch the extras like this.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;If the value you sent was in &lt;code&gt;long&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt; = getIntent().getLongExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;, defaultValue(you can give it anything));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;If the value you sent was a &lt;code&gt;String&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value = getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;If the value you sent was a &lt;code&gt;Boolean&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;Boolean&lt;/span&gt; value = getIntent().getBooleanExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;, defaultValue);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It helps me to see things in context. Here are two examples.&lt;/p&gt;\n\n&lt;h1&gt;Passing Data Forward&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/1bUb2.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/1bUb2.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;Main Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Put the data you want to send in an Intent with a key-value pair. See &lt;a href=&quot;https://stackoverflow.com/a/40569184/3681880&quot;&gt;this answer&lt;/a&gt; for naming conventions for the key.&lt;/li&gt;\n&lt;li&gt;Start the Second Activity with &lt;code&gt;startActivity&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;MainActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_main);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Go to Second Activity&quot; button click&lt;/span&gt;\n    public void onButtonClick(&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; view) {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// get the text to pass&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt; editText = (&lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.editText);\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; textToPass = editText.getText().toString();\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// start the SecondActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-type&quot;&gt;SecondActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;EXTRA_TEXT&lt;/span&gt;, textToPass);\n        startActivity(intent);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Second Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You use &lt;code&gt;getIntent()&lt;/code&gt; to get the &lt;code&gt;Intent&lt;/code&gt; that started the second activity. Then you can extract the data with &lt;code&gt;getExtras()&lt;/code&gt; and the key you defined in the first activity. Since our data is a String we will just use &lt;code&gt;getStringExtra&lt;/code&gt; here.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;SecondActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SecondActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_second);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// get the text from MainActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = getIntent();\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; text = intent.getStringExtra(&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;EXTRA_TEXT&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// use the text in a TextView&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; textView = (&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.textView);\n        textView.setText(text);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Passing Data Back&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/sMric.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/sMric.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;Main Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Start the Second Activity with &lt;code&gt;startActivityForResult&lt;/code&gt;, providing it an arbitrary result code.&lt;/li&gt;\n&lt;li&gt;Override &lt;code&gt;onActivityResult&lt;/code&gt;. This is called when the Second Activity finishes. You can make sure that it is actually the Second Activity by checking the result code. (This is useful when you are starting multiple different activities from the same main activity.)&lt;/li&gt;\n&lt;li&gt;Extract the data you got from the return &lt;code&gt;Intent&lt;/code&gt;. The data is extracted using a key-value pair. I could use any string for the key but I&apos;ll use the predefined &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; since I&apos;m sending text.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;MainActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AppCompatActivity&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;SECOND_ACTIVITY_REQUEST_CODE&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Go to Second Activity&quot; button click&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onButtonClick&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(View view)&lt;/span&gt; {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Start the SecondActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SecondActivity.class);\n        startActivityForResult(intent, SECOND_ACTIVITY_REQUEST_CODE);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// This method is called when the second activity finishes&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onActivityResult(requestCode, resultCode, data);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// check that it is the SecondActivity with an OK result&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (requestCode == SECOND_ACTIVITY_REQUEST_CODE) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (resultCode == RESULT_OK) {\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// get String data from Intent&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;returnString&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; data.getStringExtra(Intent.EXTRA_TEXT);\n\n                &lt;span class=&quot;hljs-comment&quot;&gt;// set text view with string&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;textView&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TextView) findViewById(R.id.textView);\n                textView.setText(returnString);\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;Second Activity&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Put the data that you want to send back to the previous activity into an &lt;code&gt;Intent&lt;/code&gt;. The data is stored in the &lt;code&gt;Intent&lt;/code&gt; using a key-value pair. I chose to use &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; for my key.&lt;/li&gt;\n&lt;li&gt;Set the result to &lt;code&gt;RESULT_OK&lt;/code&gt; and add the intent holding your data.&lt;/li&gt;\n&lt;li&gt;Call &lt;code&gt;finish()&lt;/code&gt; to close the Second Activity.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;em&gt;SecondActivity.java&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;SecondActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_second);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// &quot;Send text back&quot; button click&lt;/span&gt;\n    public void onButtonClick(&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; view) {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// get the text from the EditText&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt; editText = (&lt;span class=&quot;hljs-type&quot;&gt;EditText&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.editText);\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; stringToPassBack = editText.getText().toString();\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// put the String to pass back into an Intent and close this activity&lt;/span&gt;\n        &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;();\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;EXTRA_TEXT&lt;/span&gt;, stringToPassBack);\n        setResult(&lt;span class=&quot;hljs-type&quot;&gt;RESULT_OK&lt;/span&gt;, intent);\n        finish();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Updated&lt;/strong&gt; Note that I had mentioned the use of &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot; rel=&quot;noreferrer&quot;&gt;SharedPreference&lt;/a&gt;. It has a simple API and is accessible across an application&apos;s activities. But this is a clumsy solution, and is a security risk if you pass around sensitive data. It&apos;s best to use intents. It has an extensive list of overloaded methods that can be used to better transfer many different data types between activities. Have a look at &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double[])&quot; rel=&quot;noreferrer&quot;&gt;intent.putExtra&lt;/a&gt;. This &lt;a href=&quot;https://www.raywenderlich.com/160019/android-intents-tutorial-2&quot; rel=&quot;noreferrer&quot;&gt;link&lt;/a&gt; presents the use of putExtra quite well.&lt;/p&gt;\n\n&lt;p&gt;In passing data between activities, my preferred approach is to create a static method for the relevant activity that includes the required parameters launch the intent. Which then provides easily setup and retrieve parameters. So it can look like this&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;{\n    public static &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ARG_PARAM1&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;arg_param1&quot;&lt;/span&gt;;\n...\npublic static getIntent(&lt;span class=&quot;hljs-type&quot;&gt;Activity&lt;/span&gt; from, &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; param1, &lt;span class=&quot;hljs-type&quot;&gt;Long&lt;/span&gt; param2...) {\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt;(from, &lt;span class=&quot;hljs-type&quot;&gt;MyActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;ARG_PARAM1&lt;/span&gt;, param1);\n        intent.putExtra(&lt;span class=&quot;hljs-type&quot;&gt;ARG_PARAM2&lt;/span&gt;, param2);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; intent;\n}\n\n....\n&lt;span class=&quot;hljs-comment&quot;&gt;// Use it like this.&lt;/span&gt;\nstartActivity(&lt;span class=&quot;hljs-type&quot;&gt;MyActvitiy&lt;/span&gt;.getIntent(&lt;span class=&quot;hljs-type&quot;&gt;FromActivity&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, varA, varB, ...));\n...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can create an intent for the intended activity and ensure you have all the parameters. You can adapt for fragments to. A simple example above, but you get the idea.&lt;/p&gt;\n    ","\n&lt;p&gt;Try to do the following:&lt;/p&gt;\n\n&lt;p&gt;Create a simple &quot;helper&quot; class (factory for your Intents), like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Intent;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;IntentHelper&lt;/span&gt; {\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; Intent &lt;span class=&quot;hljs-title&quot;&gt;createYourSpecialIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Intent src)&lt;/span&gt; &lt;/span&gt;{\n          &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;YourSpecialIntent&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-built_in&quot;&gt;addCategory&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;YourSpecialCategory&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-built_in&quot;&gt;putExtras&lt;/span&gt;(src);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will be the factory for all your Intents. Everytime you need a new Intent, create a static factory method in IntentHelper. To create a new Intent you should just say it like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;IntentHelper&lt;span class=&quot;hljs-selector-class&quot;&gt;.createYourSpecialIntent&lt;/span&gt;(getIntent());\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In your activity. When you want to &quot;save&quot; some data in a &quot;session&quot; just use the following:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;IntentHelper&lt;span class=&quot;hljs-selector-class&quot;&gt;.createYourSpecialIntent&lt;/span&gt;(getIntent())&lt;span class=&quot;hljs-selector-class&quot;&gt;.putExtra&lt;/span&gt;(&quot;YOUR_FIELD_NAME&quot;, fieldValueToSave);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And send this Intent. In the target Activity your field will be available as:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;getIntent&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.getStringExtra&lt;/span&gt;(&quot;YOUR_FIELD_NAME&quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So now we can use Intent like same old session (like in servlets or &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot; rel=&quot;noreferrer&quot;&gt;JSP&lt;/a&gt;).&lt;/p&gt;\n    ","\n&lt;p&gt;You can also pass custom class objects by making a &lt;strong&gt;parcelable&lt;/strong&gt; class. Best way to make it parcelable is to write your class and then simply paste it to a site like &lt;a href=&quot;http://www.parcelabler.com/&quot; rel=&quot;noreferrer&quot;&gt;http://www.parcelabler.com/&lt;/a&gt;. Click on build and you will get new code. Copy all of this and replace the original class contents. \nThen-&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(getBaseContext(), NextActivity.class);\n&lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Foo&lt;/span&gt;();\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;, foo);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and get the result in NextActivity like-&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras().getParcelable(&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can simply use the &lt;strong&gt;foo&lt;/strong&gt; object like you would have used.&lt;/p&gt;\n    ","\n&lt;p&gt;Another way is to use a public static field in which you store data, i.e.:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;{\n\n  public static &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;SharedString&lt;/span&gt;;\n  public static &lt;span class=&quot;hljs-type&quot;&gt;SomeObject&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;SharedObject&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;//...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The most convenient way to pass data between activities is by passing intents. In the first activity from where you want to send data, you should add code,&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;My Data&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;//Data you want to send&lt;/span&gt;\n&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(FirstActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SecondActivity.class);\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;,str); &lt;span class=&quot;hljs-comment&quot;&gt;//Here you will add the data into intent to pass bw activites&lt;/span&gt;\nv.getContext().startActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You should also import&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-cpp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.content.Intent;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then in the next Acitvity(SecondActivity), you should retrieve the data from the intent using the following code.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;.getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;SharedPreferences&lt;/code&gt;...&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Logging. Time store session id in &lt;code&gt;SharedPreferences&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session&quot;&lt;/span&gt;,getApplicationContext().MODE_PRIVATE);\n&lt;span class=&quot;hljs-type&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.edit();\neditor.putString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sessionId&quot;&lt;/span&gt;, sessionId);\neditor.commit();\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Signout. Time fetch session id in sharedpreferences&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;preferences&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session&quot;&lt;/span&gt;, getApplicationContext().MODE_PRIVATE);\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sessionId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; preferences.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sessionId&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;If you don&apos;t have the required session id, then remove sharedpreferences:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-vhdl&quot;&gt;SharedPreferences settings = &lt;span class=&quot;hljs-keyword&quot;&gt;context&lt;/span&gt;.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;session&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;Context&lt;/span&gt;.MODE_PRIVATE);\nsettings.edit().clear().commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That is very useful, because one time you save the value and then retrieve anywhere of activity.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;From Activity&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; n= &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;\n &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(From_Activity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;,To_Activity.class);\n &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;b1&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\n b1.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;integerNumber&quot;&lt;/span&gt;,n);\n in.putExtras(b1);\n startActivity(in);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;To Activity&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt; &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;b2&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(b2 != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n  {\n     m = b2.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;integerNumber&quot;&lt;/span&gt;);\n  }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The standard approach. &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, ActivityTwo.class);\n&lt;span class=&quot;hljs-type&quot;&gt;AutoCompleteTextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;textView&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (AutoCompleteTextView) findViewById(R.id.autocomplete);\nString getrec=textView.getText().toString();\n&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\nbundle.putString(stuff, getrec);\ni.putExtras(bundle);\nstartActivity(i);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now in your second activity retrieve your data from the bundle:&lt;/p&gt;\n\n&lt;p&gt;Get the bundle&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Extract the data&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; stuff = bundle.getString(stuff); \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Kotlin&lt;/h2&gt;\n&lt;p&gt;&lt;strong&gt;Pass from First Activity&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; intent = Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SecondActivity::&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.java)\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;value&quot;&lt;/span&gt;)\nstartActivity(intent)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Get in Second Activity&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Suggestion&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Always put keys in constant file for more managed way.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;companion&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; KEY = &lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can send data between activities using intent object.\nConsider you have two activities namely &lt;code&gt;FirstActivity&lt;/code&gt; and &lt;code&gt;SecondActivity&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Inside FirstActivity:&lt;/p&gt;\n\n&lt;p&gt;Using Intent:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(FirstActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;,SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\ni.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\nstartActivity(i)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Inside SecondActivity&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-undefined&quot;&gt;Bundle bundle= getIntent().getExtras();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now you can use different bundle class methods to get values passed from FirstActivity  by Key.&lt;/p&gt;\n\n&lt;p&gt;E.g.\n&lt;code&gt;bundle.getString(&quot;key&quot;)&lt;/code&gt;,&lt;code&gt;bundle.getDouble(&quot;key&quot;)&lt;/code&gt; ,&lt;code&gt;bundle.getInt(&quot;key&quot;)&lt;/code&gt; etc.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you want to tranfer bitmap between Activites/Fragments&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Activity&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;To pass a bitmap between Activites&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, Activity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;, bitmap);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;And in the Activity class&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bitmap&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getParcelableExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Fragment&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;To pass a bitmap between Fragments&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SecondFragment&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;fragment&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SecondFragment&lt;/span&gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\nbundle.putParcelable(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;, bitmap);\nfragment.setArguments(bundle);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;To receive inside the SecondFragment&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bitmap&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getArguments().getParcelable(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmap&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;strong&gt;Transfering Large Bitmaps&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;If you are getting failed binder transaction, this means you are exceeding the binder transaction buffer by transferring large element from one activity to another activity.&lt;/em&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;So in that case you have to compress the bitmap as an byte&apos;s array and then uncompress it in another activity&lt;/strong&gt;, like this&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;In the FirstActivity&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, SecondActivity.class);\n\n&lt;span class=&quot;hljs-type&quot;&gt;ByteArrayOutputStream&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ByteArrayOutputStream&lt;/span&gt;();\nbitmap.compress(Bitmap.CompressFormat.JPG, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;, stream);\n&lt;span class=&quot;hljs-type&quot;&gt;byte&lt;/span&gt;[] bytes = stream.toByteArray(); \nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmapbytes&quot;&lt;/span&gt;,bytes);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;And in the SecondActivity&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;byte[] &lt;span class=&quot;hljs-built_in&quot;&gt;bytes&lt;/span&gt; = getIntent().getByteArrayExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bitmapbytes&quot;&lt;/span&gt;);\nBitmap bmp = BitmapFactory.decodeByteArray(&lt;span class=&quot;hljs-built_in&quot;&gt;bytes&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;bytes&lt;/span&gt;.length);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(YourCurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, YourActivityName.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;NAme&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Id&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can retrieve it in another activity. Two ways:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; id = getIntent.getIntExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot;&gt;/* defaltvalue */&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The second way is:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; i.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;Supplemental Answer: Naming Conventions for the Key String&lt;/h1&gt;\n&lt;p&gt;The actual process of passing data has already been answered, however most of the answers use hard coded strings for the key name in the Intent. This is usually fine when used only within your app. However, the &lt;a href=&quot;https://developer.android.com/guide/components/intents-filters.html#Building&quot; rel=&quot;noreferrer&quot;&gt;documentation recommends&lt;/a&gt; using the &lt;code&gt;EXTRA_*&lt;/code&gt; constants for standardized data types.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Example 1: Using &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; keys&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;First activity&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getActivity(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(Intent.EXTRA_TEXT, &lt;span class=&quot;hljs-string&quot;&gt;&quot;my text&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Second activity:&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getExtras().getString(Intent.EXTRA_TEXT);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Example 2: Defining your own &lt;code&gt;static final&lt;/code&gt; key&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;If one of the &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; Strings does not suit your needs, you can define your own at the beginning of the first activity.&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;EXTRA_STUFF&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;com.myPackageName.EXTRA_STUFF&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Including the package name is just a convention if you are only using the key in your own app. But it is a necessity to avoid naming conflicts if you are creating some sort of service that other apps can call with an Intent.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;First activity:&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getActivity(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(EXTRA_STUFF, &lt;span class=&quot;hljs-string&quot;&gt;&quot;my text&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Second activity:&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getExtras().getString(FirstActivity.EXTRA_STUFF);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Example 3: Using a String resource key&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Although not mentioned in the documentation, &lt;a href=&quot;https://stackoverflow.com/a/4433843/3681880&quot;&gt;this answer&lt;/a&gt; recommends using a String resource to avoid dependencies between activities.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;strings.xml&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt; &amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;EXTRA_STUFF&quot;&lt;/span&gt;&amp;gt;com.myPackageName.MY_NAME&amp;lt;/&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;First activity&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getActivity(), SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(getString(R.&lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt;.EXTRA_STUFF), &lt;span class=&quot;hljs-string&quot;&gt;&quot;my text&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Second activity&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myText&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getExtras().getString(getString(R.string.EXTRA_STUFF));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Here is my best practice and it helps a lot when the project is huge and complex. &lt;/p&gt;\n\n&lt;p&gt;Suppose that I have 2 activities, &lt;code&gt;LoginActivity&lt;/code&gt; and &lt;code&gt;HomeActivity&lt;/code&gt;.\nI want to pass 2 parameters (username &amp;amp; password) from &lt;code&gt;LoginActivity&lt;/code&gt; to &lt;code&gt;HomeActivity&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;First, I create my &lt;code&gt;HomeIntent&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HomeIntent&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ACTION_LOGIN&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;action_login&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ACTION_LOGOUT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;action_logout&quot;&lt;/span&gt;;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ARG_USERNAME&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;arg_username&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;ARG_PASSWORD&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;arg_password&quot;&lt;/span&gt;;\n\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HomeIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx, &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; isLogIn)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;(ctx);\n        &lt;span class=&quot;hljs-comment&quot;&gt;//set action type&lt;/span&gt;\n        setAction(isLogIn ? ACTION_LOGIN : ACTION_LOGOUT);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HomeIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Context ctx)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(ctx, HomeActivity.class);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//This will be needed for receiving data&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;HomeIntent&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Intent intent)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;(intent);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String userName, String password)&lt;/span&gt; {\n        putExtra(ARG_USERNAME, userName);\n        putExtra(ARG_PASSWORD, password);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getUsername&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getStringExtra(ARG_USERNAME);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title function_&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getStringExtra(ARG_PASSWORD);\n    }\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;//To separate the params is for which action, we should create action&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isActionLogIn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getAction().equals(ACTION_LOGIN);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;isActionLogOut&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; getAction().equals(ACTION_LOGOUT);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here is how I pass the data in my LoginActivity&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LoginActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-meta&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_login);\n\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; username = &lt;span class=&quot;hljs-string&quot;&gt;&quot;phearum&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; password = &lt;span class=&quot;hljs-string&quot;&gt;&quot;pwd1133&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; boolean isActionLogin = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Passing data to HomeActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt; homeIntent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, isActionLogin);\n        homeIntent.setData(username, password);\n        startActivity(homeIntent);\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Final step, here is how I receive the data in &lt;code&gt;HomeActivity&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HomeActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_home);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;//This is how we receive the data from LoginActivity&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;//Make sure you pass getIntent() to the HomeIntent constructor&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt; homeIntent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;HomeIntent&lt;/span&gt;(getIntent());\n        &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HomeActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Is action login?  &quot;&lt;/span&gt; + homeIntent.isActionLogIn());\n        &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HomeActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;username: &quot;&lt;/span&gt; + homeIntent.getUsername());\n        &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;HomeActivity&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;password: &quot;&lt;/span&gt; + homeIntent.getPassword());\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Done! Cool :) I just want to share my experience. If you working on small project this shouldn&apos;t be the big problem. But when your working on big project, it really pain when you want to do refactoring or fixing bugs.&lt;/p&gt;\n    ","\n&lt;p&gt;The passing of data between activities is mainly by means of an intent object.&lt;/p&gt;\n\n&lt;p&gt;First you have to attach the data to the intent object with the use of the &lt;code&gt;Bundle&lt;/code&gt; class. Then call the activity using either &lt;code&gt;startActivity()&lt;/code&gt; or &lt;code&gt;startActivityForResult()&lt;/code&gt; methods.&lt;/p&gt;\n\n&lt;p&gt;You can find more information about it, with an example from the blog post &lt;em&gt;&lt;a href=&quot;http://codeglympse.blogspot.in/2012/10/passing-data-to-activity.html&quot; rel=&quot;noreferrer&quot;&gt;Passing data to an Activity&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can try Shared Preference, it may be a good alternative for sharing data between the activities    &lt;/p&gt;\n\n&lt;p&gt;To save session id -&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;SharedPreferences pref = myContexy.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session \nData&quot;&lt;/span&gt;,MODE_PRIVATE);\nSharedPreferences.Editor edit = pref.edit();\nedit.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session ID&quot;&lt;/span&gt;, session_id);\nedit.commit();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To get them -&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;pref&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; myContexy.getSharedPreferences(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session Data&quot;&lt;/span&gt;, MODE_PRIVATE);\nsession_id = pref.getInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session ID&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can use &lt;code&gt;Intent&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;Intent mIntent = new Intent(FirstActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SecondActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nmIntent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;data&lt;/span&gt;);\nstartActivity(mIntent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another way could be using &lt;em&gt;singleton pattern&lt;/em&gt; also:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt; {\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt; dataHolder;\n &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Model&lt;/span&gt;&amp;gt; dataList;\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;setDataList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;List&amp;lt;Model&amp;gt;dataList&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;dataList&lt;/span&gt; = dataList;\n }\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Model&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getDataList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dataList;\n }\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; synchronized &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getInstance&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (dataHolder == &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n       dataHolder = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DataHolder&lt;/span&gt;();\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; dataHolder;\n }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;From your FirstActivity &lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Model&lt;/span&gt;&amp;gt; dataList &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; new &lt;span class=&quot;hljs-type&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;();\n&lt;span class=&quot;hljs-type&quot;&gt;DataHolder&lt;/span&gt;.getInstance().setDataList(dataList);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;On SecondActivity&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-swift&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;Model&lt;/span&gt;&amp;gt; dataList &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;DataHolder&lt;/span&gt;.getInstance().getDataList();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;1st way: In your current Activity, when you create object of intent to open new screen:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-dart&quot;&gt;  &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;xyz&quot;&lt;/span&gt;;\n  Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(CurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, NextActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);    \n  intent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, value);\n  startActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then in the nextActivity in onCreate method, retrieve those values which you pass from previous activity:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (getIntent().getExtras() != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-comment&quot;&gt;//The key argument must always match that used send and retrive value from one activity to another.&lt;/span&gt;\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2nd way: You can create bundle object and put values in bundle and then put bundle object in intent from your current activity -&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  String value=&lt;span class=&quot;hljs-string&quot;&gt;&quot;xyz&quot;&lt;/span&gt;;\n  &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(CurrentActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, NextActivity.class);  \n  &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Bundle&lt;/span&gt;();\n  bundle.putInt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, value);  \n  intent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bundle_key&quot;&lt;/span&gt;, bundle);\n  startActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then in the nextActivity in onCreate method, retrieve those values which you pass from previous activity:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (getIntent().getExtras() != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n      &lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;bundle_key&quot;&lt;/span&gt;);    \n      &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; bundle.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;);\n      &lt;span class=&quot;hljs-comment&quot;&gt;//The key argument must always match that used send and retrive value from one activity to another.&lt;/span&gt;\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can also use bean class to pass data between classes using serialization.&lt;/p&gt;\n    ","\n&lt;p&gt;Start another activity from this activity pass parameters via Bundle Object&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getBaseContext(), YourActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;USER_NAME&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;xyz@gmail.com&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Retrieve on another activity (YourActivity)&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-coffeescript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; s = getIntent().getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;USER_NAME&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is ok for simple kind data type.\nBut if u want to pass complex data in between activity u need to serialize it first.&lt;/p&gt;\n\n&lt;p&gt;Here we have Employee Model&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Employee&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String empId;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; age;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;print&lt;/span&gt; Double salary;\n\n    getters...\n    setters...\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can use Gson lib provided by google to serialize the complex data \nlike this&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;strEmp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;().toJson(emp);\n&lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;(getBaseContext(), YourActivity.class);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EMP&quot;&lt;/span&gt;, strEmp);\nstartActivity(intent);\n\n&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent().getExtras();\n&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;empStr&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; bundle.getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;EMP&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-type&quot;&gt;Gson&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;gson&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Gson&lt;/span&gt;();\n            &lt;span class=&quot;hljs-type&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TypeToken&lt;/span&gt;&amp;lt;Employee&amp;gt;() {\n            }.getType();\n            &lt;span class=&quot;hljs-type&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;selectedEmp&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; gson.fromJson(empStr, type);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/*\n * If you are from transferring data from one class that doesn&apos;t\n * extend Activity, then you need to do something like this.\n */&lt;/span&gt; \n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;abc&lt;/span&gt; {\n    Context context;\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;abc&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Context context&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.context = context;\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;something&lt;/span&gt;()&lt;/span&gt; {\n        context.startactivity(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(context, anyone.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;).putextra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;));\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I recently released &lt;a href=&quot;https://github.com/HodeCode/Vapor-API&quot; rel=&quot;nofollow noreferrer&quot;&gt;Vapor API&lt;/a&gt;, a jQuery flavored Android framework that makes all sorts of tasks like this simpler. As mentioned, &lt;code&gt;SharedPreferences&lt;/code&gt; is one way you could do this.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporSharedPreferences.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;VaporSharedPreferences&lt;/code&gt;&lt;/a&gt; is implemented as Singleton so that is one option, and in Vapor API it has a heavily overloaded &lt;code&gt;.put(...)&lt;/code&gt; method so you don&apos;t have to explicitly worry about the datatype you are committing - providing it is supported. It is also fluent, so you can chain calls:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title function_&quot;&gt;prefs&lt;/span&gt;(...).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;val1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;123&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;val2&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;something&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3.34&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It also optionally autosaves changes, and unifies the reading and writing process under-the-hood so you don&apos;t need to explicitly retrieve an Editor like you do in standard Android.&lt;/p&gt;\n\n&lt;p&gt;Alternatively you could use an &lt;code&gt;Intent&lt;/code&gt;. In Vapor API you can also use the chainable overloaded &lt;code&gt;.put(...)&lt;/code&gt; method on a &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporIntent.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;VaporIntent&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$.&lt;span class=&quot;hljs-title class_&quot;&gt;Intent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;data&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;myData&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;more&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;568&lt;/span&gt;)...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And pass it as an extra, as mentioned in the other answers. You can retrieve extras from your &lt;code&gt;Activity&lt;/code&gt;, and furthermore if you are using &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/app/VaporActivity.java&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;VaporActivity&lt;/code&gt;&lt;/a&gt; this is done for you automatically so you can use:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-kotlin&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.extras()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To retrieve them at the other end in the &lt;code&gt;Activity&lt;/code&gt; you switch to.&lt;/p&gt;\n\n&lt;p&gt;Hope that is of interest to some :)&lt;/p&gt;\n    ","\n&lt;p&gt;First Activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent intent = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(getApplicationContext(), ClassName.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\nintent.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Value you want to pass&quot;&lt;/span&gt;);\nstartActivity(intent);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Second Activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-rust&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;str&lt;/span&gt;= &lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getIntent&lt;/span&gt;().&lt;span class=&quot;hljs-title function_ invoke__&quot;&gt;getStringExtra&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Variable name which you sent as an extra&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Write following code in &lt;strong&gt;CurrentActivity.java&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;Intent i = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Intent(CurrentActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;, SignOutActivity.&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;);\ni.putExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SESSION_ID&quot;&lt;/span&gt;,sessionId);\nstartActivity(i);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Access SessionId in &lt;strong&gt;SignOutActivity.java&lt;/strong&gt; is following way&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt;{\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_sign_out);\n    &lt;span class=&quot;hljs-type&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; getIntent();\n    \n    &lt;span class=&quot;hljs-comment&quot;&gt;// check intent is null or not&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(intent != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;){\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;sessionId&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intent.getStringExtra(&lt;span class=&quot;hljs-string&quot;&gt;&quot;SESSION_ID&quot;&lt;/span&gt;);\n        Log.d(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Session_id : &quot;&lt;/span&gt; + sessionId);\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;{\n        Toast.makeText(SignOutActivity.&lt;span class=&quot;hljs-built_in&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Intent is null&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use a global class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;GlobalClass&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Application&lt;/span&gt;&lt;/span&gt;\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; float vitamin_a;\n\n\n    public float getVitaminA() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; vitamin_a;\n    }\n\n    public void setVitaminA(float vitamin_a) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.vitamin_a = vitamin_a;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can call the setters and the getters of this class from all other classes.\nDo do that, you need to make a GlobalClass-Object in every Actitity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-lisp&quot;&gt;GlobalClass gc = (&lt;span class=&quot;hljs-name&quot;&gt;GlobalClass&lt;/span&gt;) getApplication()&lt;span class=&quot;hljs-comment&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then you can call for example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;gc&lt;span class=&quot;hljs-selector-class&quot;&gt;.getVitaminA&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;i used sharedpreference its useful also to keep login data on remeber password feature&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/944593/shareef&quot; title=&quot;8,664 reputation&quot; class=&quot;comment-user&quot;&gt;shareef&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment18767700_2091465&quot;&gt;&lt;span title=&quot;2012-12-02 19:33:55Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 2, 2012 at 19:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This works for me.    &lt;a href=&quot;http://stackoverflow.com/a/7325248/2125322&quot;&gt;stackoverflow.com/a/7325248/2125322&lt;/a&gt;  Thanks Darshan Computing&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2125322/matasoy&quot; title=&quot;659 reputation&quot; class=&quot;comment-user&quot;&gt;matasoy&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment27310522_2091465&quot;&gt;&lt;span title=&quot;2013-09-01 20:59:20Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 1, 2013 at 20:59&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/a/37774966/6456129&quot;&gt;stackoverflow.com/a/37774966/6456129&lt;/a&gt; may be helpful&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6456129/yessy&quot; title=&quot;958 reputation&quot; class=&quot;comment-user&quot;&gt;Yessy&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64489574_2091465&quot;&gt;&lt;span title=&quot;2016-07-24 05:48:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 24, 2016 at 5:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;for such cases try making commomUtils class with sharedprefereces Method... this will keep the code clean and related data at a place . And you will easily be able to Clear specific set of data with just  one method of clearing that specific prefrencesFile,without clearing any of default app data...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8237188/muahmmad-tayyib&quot; title=&quot;605 reputation&quot; class=&quot;comment-user&quot;&gt;Muahmmad Tayyib&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95016379_2091465&quot;&gt;&lt;span title=&quot;2019-01-08 12:52:34Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 8, 2019 at 12:52&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Just an info for those who are so blind like me: if you put an integer in your current activity, you have to get it in the new one via &lt;code&gt;extras.getInt(&quot;new_variable_name&quot;)&lt;/code&gt;. If you try to get it via &lt;code&gt;getString()&lt;/code&gt; android see&apos;s that a int was given and returns null!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2154300/bish&quot; title=&quot;3,241 reputation&quot; class=&quot;comment-user&quot;&gt;bish&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26811002_7325248&quot;&gt;&lt;span title=&quot;2013-08-16 16:13:16Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 16, 2013 at 16:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;what if the activity is already running, is there need to do &lt;code&gt;startActivity(i);&lt;/code&gt; ? I mean, can I make &lt;i&gt;activity A&lt;/i&gt; call &lt;i&gt;activity B&lt;/i&gt;, and that returns data to &lt;i&gt;activity A&lt;/i&gt; ? am I confused ?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2615737/francisco-corrales-morales&quot; title=&quot;3,528 reputation&quot; class=&quot;comment-user&quot;&gt;Francisco Corrales Morales&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment36140728_7325248&quot;&gt;&lt;span title=&quot;2014-05-08 23:25:40Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 8, 2014 at 23:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Here&apos;s a &lt;a href=&quot;http://www.codota.com/android/scenarios/52fcbcffda0ace249b7bce8e/android.content.Intent?tag=dragonfly&quot; rel=&quot;nofollow noreferrer&quot;&gt;nice example that sets and retrieves intent extras&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1824928/drorw&quot; title=&quot;657 reputation&quot; class=&quot;comment-user&quot;&gt;drorw&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment38959830_7325248&quot;&gt;&lt;span title=&quot;2014-07-30 21:31:03Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 30, 2014 at 21:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I prefer string variable.  You can always convert a string to integer or float later.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/914425/user914425&quot; title=&quot;15,903 reputation&quot; class=&quot;comment-user&quot;&gt;user914425&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment47861006_7325248&quot;&gt;&lt;span title=&quot;2015-04-25 16:54:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 25, 2015 at 16:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@FranciscoCorralesMorales did you find anything?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9921564/chagai-friedlander&quot; title=&quot;226 reputation&quot; class=&quot;comment-user&quot;&gt;Chagai Friedlander&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123455179_7325248&quot;&gt;&lt;span title=&quot;2021-11-04 14:39:50Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 4, 2021 at 14:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;ok if i pass session id to signout acitivity on successful login and  will it work on any activity page to signout or manually i will have to assign it value on each activity??? using above procedure??&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/249991/umar-mobitsolutions&quot; title=&quot;75,528 reputation&quot; class=&quot;comment-user owner&quot;&gt;UMAR-MOBITSOLUTIONS&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment2024535_2091482&quot;&gt;&lt;span title=&quot;2010-01-19 06:57:10Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jan 19, 2010 at 6:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Yes, you&apos;d have to make the session ID available to every activity where you want to allow the user to signout.  Alternatively, you could store it in the Application object, but then you&apos;d have to manage the state of the session (check if it&apos;s valid before using, etc).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/210719/erich-douglass&quot; title=&quot;51,064 reputation&quot; class=&quot;comment-user&quot;&gt;Erich Douglass&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment2027425_2091482&quot;&gt;&lt;span title=&quot;2010-01-19 15:16:30Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jan 19, 2010 at 15:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Please be aware that the documentation points the following: Add extended data to the intent. The name must include a package prefix, for example the app com.android.contacts would use names like &quot;com.android.contacts.ShowAll&quot;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1260028/serguei-fedorov&quot; title=&quot;7,355 reputation&quot; class=&quot;comment-user&quot;&gt;Serguei Fedorov&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29707089_2091482&quot;&gt;&lt;span title=&quot;2013-11-13 16:25:27Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 13, 2013 at 16:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;And to read data from other Activity use &lt;code&gt;Long session_ids=getIntent().getExtras().getLong(&quot;EXTRA_SESSION_IDS&quot;);&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5636313/farid&quot; title=&quot;2,219 reputation&quot; class=&quot;comment-user&quot;&gt;Farid&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment60647190_2091482&quot;&gt;&lt;span title=&quot;2016-04-09 18:39:43Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 9, 2016 at 18:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How can we pass data using &lt;code&gt;setData&lt;/code&gt; and what is difference between theses two approaches? Which one is better?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5332629/hosein-aqajani&quot; title=&quot;1,483 reputation&quot; class=&quot;comment-user&quot;&gt;Hosein Aqajani&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64280456_2091482&quot;&gt;&lt;span title=&quot;2016-07-18 13:04:10Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 18, 2016 at 13:04&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;+1 for the statics problem. probably the clean up can be resolved by combining a singleton with onCreate/onTerminate method Application class.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/342729/syd&quot; title=&quot;1,466 reputation&quot; class=&quot;comment-user&quot;&gt;Syd&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment4553124_2098936&quot;&gt;&lt;span title=&quot;2010-11-17 22:33:46Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Nov 17, 2010 at 22:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Hey, I know this thread was quite a while back, but the link provided is now a dead end. Is there anywhere I can find the example?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1435712/juice&quot; title=&quot;4,034 reputation&quot; class=&quot;comment-user&quot;&gt;JuiCe&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment14459596_2098936&quot;&gt;&lt;span title=&quot;2012-06-15 14:38:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 15, 2012 at 14:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@JuiCe The Android Developers blog post on memory leaks is no longer invalid.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6782707/edric&quot; title=&quot;21,740 reputation&quot; class=&quot;comment-user&quot;&gt;Edric&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment107773950_2098936&quot;&gt;&lt;span title=&quot;2020-03-29 15:56:12Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 29, 2020 at 15:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Can the intent ever be null? Should we check that it is not null?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3075340/micro&quot; title=&quot;9,823 reputation&quot; class=&quot;comment-user&quot;&gt;Micro&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment59331030_21602897&quot;&gt;&lt;span title=&quot;2016-03-06 20:24:50Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 6, 2016 at 20:24&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is a duplicate of the 3 years older &lt;a href=&quot;https://stackoverflow.com/a/7325248/1885518&quot;&gt;top most voted answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/12137344/1885518&quot;&gt;Sahil Mahajan Mj&apos;s answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/16733899/1885518&quot;&gt;Mayank Saini&apos;s answer&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81804521_21602897&quot;&gt;&lt;span title=&quot;2017-11-22 00:11:43Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 0:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Please be aware that the documentation points the following: Add extended data to the intent. The name must include a package prefix, for example the app com.android.contacts would use names like &quot;com.android.contacts.ShowAll&quot;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1260028/serguei-fedorov&quot; title=&quot;7,355 reputation&quot; class=&quot;comment-user&quot;&gt;Serguei Fedorov&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29707018_16733899&quot;&gt;&lt;span title=&quot;2013-11-13 16:23:36Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 13, 2013 at 16:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is a duplicate of the top most voted answer which has been there for  2 years before this answer and of &lt;a href=&quot;https://stackoverflow.com/a/12137344/1885518&quot;&gt;Sahil Mahajan Mj&apos;s answer&lt;/a&gt; which is 1 year older. Only difference: examples for &lt;code&gt;boolean&lt;/code&gt; and &lt;code&gt;long&lt;/code&gt; getters which is worth a comment IMO, not an answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81804169_16733899&quot;&gt;&lt;span title=&quot;2017-11-21 23:50:43Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 21, 2017 at 23:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Wow, thank you! This was quite what I was looking for. It is quite clear when using camera or  other externals that I expect results back, but I didn&apos;t think to use it internally. You&apos;re the first to put it quite so openly.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3195231/user3195231&quot; title=&quot;101 reputation&quot; class=&quot;comment-user&quot;&gt;user3195231&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment89552232_45979367&quot;&gt;&lt;span title=&quot;2018-07-11 13:55:53Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 11, 2018 at 13:55&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I like your answer best... Passing it via the intent means that almost everywhere I start an activity you will have to remember to include the sessionId. By putting it in the SharedPreferences you can get it anytime from any activity. :0)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/86452/bytebender&quot; title=&quot;7,261 reputation&quot; class=&quot;comment-user&quot;&gt;bytebender&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment11990652_5024667&quot;&gt;&lt;span title=&quot;2012-02-28 01:06:14Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 28, 2012 at 1:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@bytebender I know this is a bit late for the response, I appreciate that you like my original answer for its simlpicity, but I would be careful to storing session ID in shared preferences. If you must store it on hard storage then use encryption. If you can use an authentication frameworks that employs JWT, it will include refreshTokens which are safer for long term storage, and then keep the current session token as a public property of a custom Application object to easily access authentication tokens, and reduce overhead on activity intent signatures.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/193467/angryitguy&quot; title=&quot;9,055 reputation&quot; class=&quot;comment-user&quot;&gt;angryITguy&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment99245705_5024667&quot;&gt;&lt;span title=&quot;2019-05-27 00:57:58Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 27, 2019 at 0:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I really wonder why your suggestion did&apos;t get votes, it&apos;s simpler and more practical.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1644529/porizm&quot; title=&quot;521 reputation&quot; class=&quot;comment-user&quot;&gt;Porizm&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment18313121_13078360&quot;&gt;&lt;span title=&quot;2012-11-15 18:58:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 15, 2012 at 18:58&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;um... doesn&apos;t this violates OO principles?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1238957/christian-vielma&quot; title=&quot;13,983 reputation&quot; class=&quot;comment-user&quot;&gt;Christian Vielma&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26481608_13078360&quot;&gt;&lt;span title=&quot;2013-08-06 22:05:59Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 6, 2013 at 22:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@ChristianVielma well, it&apos;s more like a gray area... you can do it many ways, to me it seems like a clean &quot;get away&quot;, so... it&apos;s up to you(the developer) to make the decision if it works good for you or not, I like this way because it&apos;s easier to follow, but it can get very dirty very fast...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;span class=&quot;comment-user&quot;&gt;user497849&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26493000_13078360&quot;&gt;&lt;span title=&quot;2013-08-07 08:37:28Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 7, 2013 at 8:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;why do you say this gets dirty? Doesn&apos;t iOS do this to pass data between viewcontrollers by setting &quot;properties&quot; which is similar to this? This is so much easier than using intents&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3593537/terry-bu&quot; title=&quot;889 reputation&quot; class=&quot;comment-user&quot;&gt;Terry Bu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment41981580_13078360&quot;&gt;&lt;span title=&quot;2014-11-01 20:40:55Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 1, 2014 at 20:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Yes, you pass data between view controllers, but not with &lt;i&gt;static&lt;/i&gt; properties. The problem is it&apos;s not a property on the desired activity instance. The way Android launches activities via startActivity(), it doesn&apos;t instantly instantiate the object and allow the developer to set an instance variable. It&apos;s pretty annoying...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/174507/shawn&quot; title=&quot;386 reputation&quot; class=&quot;comment-user&quot;&gt;Shawn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment60583070_13078360&quot;&gt;&lt;span title=&quot;2016-04-07 20:49:28Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 7, 2016 at 20:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is a duplicate of the &lt;a href=&quot;https://stackoverflow.com/a/7325248/1885518&quot;&gt;top most voted answer&lt;/a&gt; which has been there for even 1 year more.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81803632_12137344&quot;&gt;&lt;span title=&quot;2017-11-21 23:23:07Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 21, 2017 at 23:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Duplicate as already proposed by &lt;a href=&quot;https://stackoverflow.com/a/13100481/1885518&quot;&gt;PRABEESH R K&lt;/a&gt; in 2012. And could be reduced to the &lt;code&gt;i.putExtras()&lt;/code&gt;/&lt;code&gt;getIntent().getString()&lt;/code&gt; which is proposed by 6 other answers...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81804873_28192658&quot;&gt;&lt;span title=&quot;2017-11-22 00:32:12Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 0:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;val value = intent.getStringExtra(&quot;key&quot;)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5390254/j-a-s-k-i-e-r&quot; title=&quot;1,648 reputation&quot; class=&quot;comment-user&quot;&gt;J A S K I E R&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116260522_52736557&quot;&gt;&lt;span title=&quot;2021-01-17 00:02:06Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 17, 2021 at 0:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Duplicate: The &lt;code&gt;Bundle&lt;/code&gt; based approach was already proposed by &lt;a href=&quot;https://stackoverflow.com/a/13100481/1885518&quot;&gt;PRABEESH R K&lt;/a&gt; in 2012 and &lt;a href=&quot;https://stackoverflow.com/a/28192658/1885518&quot;&gt;Ajay Venugopal&lt;/a&gt;. And could be reduced to the &lt;code&gt;i.putExtras()&lt;/code&gt;/&lt;code&gt;getIntent().getString()&lt;/code&gt; which is proposed by 7 other answers...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81805080_34355290&quot;&gt;&lt;span title=&quot;2017-11-22 00:43:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 0:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is a duplicate of the 3 years older &lt;a href=&quot;https://stackoverflow.com/a/7325248/1885518&quot;&gt;top most voted answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/12137344/1885518&quot;&gt;Sahil Mahajan Mj&apos;s answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/16733899/1885518&quot;&gt;Mayank Saini&apos;s answer&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/21602897/1885518&quot;&gt;Md. Rahman&apos;s answer&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81804555_24285468&quot;&gt;&lt;span title=&quot;2017-11-22 00:14:01Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 0:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is &lt;a href=&quot;https://stackoverflow.com/questions/15243798/advantages-of-using-bundle-instead-of-direct-intent-putextra-in-android&quot;&gt;more or less the same&lt;/a&gt; as using the &lt;a href=&quot;https://stackoverflow.com/a/2091482/1885518&quot;&gt;Intent provided methods directly&lt;/a&gt; (&lt;code&gt;Intent#putExtra()&lt;/code&gt;). But adds another &lt;code&gt;Bundle&lt;/code&gt; and makes things more complicated.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81803926_13100481&quot;&gt;&lt;span title=&quot;2017-11-21 23:37:24Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 21, 2017 at 23:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Duplicate: This approach was already propsed by &lt;a href=&quot;https://stackoverflow.com/a/26484522/1885518&quot;&gt;Ravi Parsania&lt;/a&gt; in 2014&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81805458_43782100&quot;&gt;&lt;span title=&quot;2017-11-22 01:06:07Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 1:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Duplicate: The intent approach is already proposed by the &lt;a href=&quot;https://stackoverflow.com/a/7325248/1885518&quot;&gt;top most voted answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/12137344/1885518&quot;&gt;Sahil Mahajan Mj&apos;s answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/16733899/1885518&quot;&gt;Mayank Saini&apos;s answer&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/21602897/1885518&quot;&gt;Md. Rahman&apos;s answer&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/24285468/1885518&quot;&gt;Dilavar M&apos;s answer&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/25364957/1885518&quot;&gt;android developer&apos;s answer&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/31066019/1885518&quot;&gt;sahulab&lt;/a&gt;. Singleton: Rodion Altshuler answer&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81805378_40838427&quot;&gt;&lt;span title=&quot;2017-11-22 01:01:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 1:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@BaneeIshaqueK yep sorry, haven&apos;t maintained this for a while. Have updated link to point directly to the Github for the project in case it helps. ps. Not sure what I was thinking for that license... apologies&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/300037/darius&quot; title=&quot;5,099 reputation&quot; class=&quot;comment-user&quot;&gt;Darius&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment86223899_15088375&quot;&gt;&lt;span title=&quot;2018-04-02 09:30:52Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 2, 2018 at 9:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is a duplicate of the 3 years older &lt;a href=&quot;https://stackoverflow.com/a/7325248/1885518&quot;&gt;top most voted answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/12137344/1885518&quot;&gt;Sahil Mahajan Mj&apos;s answer&lt;/a&gt; and of &lt;a href=&quot;https://stackoverflow.com/a/16733899/1885518&quot;&gt;Mayank Saini&apos;s answer&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/21602897/1885518&quot;&gt;Md. Rahman&apos;s answer&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/24285468/1885518&quot;&gt;Dilavar M&apos;s answer&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/25364957/1885518&quot;&gt;android developer&apos;s answer&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/31066019/1885518&quot;&gt;sahulab&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81805539_43885158&quot;&gt;&lt;span title=&quot;2017-11-22 01:11:35Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 1:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Murmel, I feel this is simple and doesn&apos;t contain some unnecessary code like the others&apos;. Also, it&apos;s not an exact, copy-pasted one. Maybe he couldn&apos;t check all the possibly 53 answers? This came first for me when I searched the page for &quot;putex&quot;- using &lt;code&gt;Ctrl+F&lt;/code&gt;. I was relieved after seeing this same kind of code; it&apos;s not bloated either.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/16136190/the-amateur-coder&quot; title=&quot;690 reputation&quot; class=&quot;comment-user&quot;&gt;The Amateur Coder&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127449895_43885158&quot;&gt;&lt;span title=&quot;2022-05-05 18:41:43Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 5 at 18:41&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Overriding application - this is duplicate of &lt;a href=&quot;https://stackoverflow.com/a/20584974/1885518&quot;&gt;Whome&apos;s answer&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1885518/murmel&quot; title=&quot;4,885 reputation&quot; class=&quot;comment-user&quot;&gt;Murmel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81804746_27969048&quot;&gt;&lt;span title=&quot;2017-11-22 00:25:06Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 22, 2017 at 0:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":139,"title":"How do I pass data between Activities in Android application?","content":"\n                \n&lt;p&gt;I have a scenario where, after logging in through a login page, there will be a sign-out &lt;code&gt;button&lt;/code&gt; on each &lt;code&gt;activity&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;On clicking &lt;code&gt;sign-out&lt;/code&gt;, I will be passing the &lt;code&gt;session id&lt;/code&gt; of the signed in user to sign-out. Can anyone guide me on how to keep &lt;code&gt;session id&lt;/code&gt; available to all &lt;code&gt;activities&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;Any alternative to this case &lt;/p&gt;\n    ","slug":"how-do-i-pass-data-between-activities-in-android-application-1657384739839","postType":"QUESTION","createdAt":"2022-07-09T16:38:59.000Z","updatedAt":"2022-07-09T16:38:59.000Z","tags":[{"id":506,"name":"android-intent","slug":"android-intent","createdAt":"2022-07-09T16:38:59.000Z","updatedAt":"2022-07-09T16:38:59.000Z","Questions_Tags":{"questionId":139,"tagId":506}}]}]}},"__N_SSG":true}