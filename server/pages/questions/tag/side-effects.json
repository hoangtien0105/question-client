{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;This has nothing to do with Python; global variables are bad in any programming language.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;However, global constants&lt;/strong&gt; are not conceptually the same as &lt;strong&gt;global variables&lt;/strong&gt;; global constants are perfectly harmless. In Python the distinction between the two is purely by convention: &lt;code&gt;CONSTANTS_ARE_CAPITALIZED&lt;/code&gt; and &lt;code&gt;globals_are_not&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;The reason global variables are bad is that they enable functions to have hidden (non-obvious, surprising, hard to detect, hard to diagnose) side effects, leading to an increase in complexity, potentially leading to &lt;a href=&quot;https://en.wikipedia.org/wiki/Spaghetti_code&quot; rel=&quot;noreferrer&quot;&gt;Spaghetti code&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;However, sane use of global state is acceptable (as is local state and mutability) even in functional programming, either for algorithm optimization, reduced complexity, caching and memoization, or the practicality of porting structures originating in a predominantly imperative codebase.&lt;/p&gt;\n\n&lt;p&gt;All in all, your question can be answered in many ways, so your best bet is to just google &quot;why are global variables bad&quot;. Some examples:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?GlobalVariablesAreBad&quot; rel=&quot;noreferrer&quot;&gt;Global Variables Are Bad - Wiki Wiki Web&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/148108/why-is-global-state-so-evil&quot;&gt;Why is Global State so Evil? - Software Engineering Stack Exchange&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/484635/are-global-variables-bad&quot;&gt;Are global variables bad?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you want to go deeper and find out why side effects are all about, and many other enlightening things, you should learn Functional Programming:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Side_effect_(computer_science)&quot; rel=&quot;noreferrer&quot;&gt;Side effect (computer science) - Wikipedia&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/15269/why-are-side-effects-considered-evil-in-functional-programming&quot;&gt;Why are side-effects considered evil in functional programming? - Software Engineering Stack Exchange&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Functional_programming&quot; rel=&quot;noreferrer&quot;&gt;Functional programming - Wikipedia&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;Yes, &lt;em&gt;in theory&lt;/em&gt;, globals (and &quot;state&quot; in general) are evil. In practice, if you look into your python&apos;s packages directory you&apos;ll find that most modules there start with a bunch of global declarations. Obviously, people have no problem with them.&lt;/p&gt;\n\n&lt;p&gt;Specifically to python, globals&apos; visibility is limited to a module, therefore there are no &quot;true&quot; globals that affect the whole program - that makes them a way less harmful. Another point: there are no &lt;code&gt;const&lt;/code&gt;, so when you need a constant you have to use a global.&lt;/p&gt;\n\n&lt;p&gt;In my practice, if I happen to modify a global in a function, I always declare it with &lt;code&gt;global&lt;/code&gt;, even if there technically no need for that, as in:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-py s-code-block&quot;&gt;&lt;code class=&quot;hljs language-python&quot;&gt;cache = {}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;args&lt;/span&gt;):\n    &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; cache\n\n    cache[args] = ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This makes globals&apos; manipulations easier to track down.&lt;/p&gt;\n    ","\n&lt;p&gt;A personal opinion on the topic is that having global variables being used in a function logic means that some other code can alter the logic and the expected output of that function which will make debugging very hard (especially in big projects) and will make testing harder as well.&lt;/p&gt;\n\n&lt;p&gt;Furthermore, if you consider other people reading your code (open-source community, colleagues etc) they will have a hard time trying to understand where the global variable is being set, where has been changed and what to expect from this global variable as opposed to an isolated function that its functionality can be determined by reading the function definition itself.&lt;/p&gt;\n\n&lt;h2&gt;(Probably) Violating Pure Function definition&lt;/h2&gt;\n\n&lt;p&gt;I believe that a clean and (nearly) bug-free code should have functions that are as pure as possible (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_function&quot; rel=&quot;noreferrer&quot;&gt;pure functions&lt;/a&gt;). A pure function is the one that has the following conditions:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;The function &lt;strong&gt;always evaluates the same result value given the same argument value(s)&lt;/strong&gt;. The function result value cannot depend on any hidden information or state that may change while program execution proceeds or between different executions of the program, nor can it depend on any external input from I/O devices (usuallysee below).&lt;/li&gt;\n&lt;li&gt;Evaluation of the result &lt;strong&gt;does not cause any semantically observable side effect or output&lt;/strong&gt;, such as mutation of mutable objects or output to I/O devices.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Having global variables is violating at least one of the above if not both as an external code can probably cause unexpected results.&lt;/p&gt;\n\n&lt;p&gt;Another clear definition of pure functions: &quot;Pure function is a function that takes &lt;strong&gt;all of its inputs as explicit arguments&lt;/strong&gt; and produces &lt;strong&gt;all of its outputs as explicit results&lt;/strong&gt;.&quot; &lt;a href=&quot;http://www.cs.nott.ac.uk/~pszgmh/pih.html&quot; rel=&quot;noreferrer&quot;&gt;[1]&lt;/a&gt;. Having global variables violates the idea of pure functions since an input and maybe one of the outputs (the global variable) is not explicitly being given or returned.&lt;/p&gt;\n\n&lt;h2&gt;(Probably) Violating Unit testing F.I.R.S.T principle&lt;/h2&gt;\n\n&lt;p&gt;Further on that, if you consider unit-testing and the F.I.R.S.T principle (&lt;strong&gt;F&lt;/strong&gt;ast tests, &lt;strong&gt;I&lt;/strong&gt;ndependent tests, &lt;strong&gt;R&lt;/strong&gt;epeatable, &lt;strong&gt;S&lt;/strong&gt;elf-Validating and &lt;strong&gt;T&lt;/strong&gt;imely) will probably violate the Independent tests principle (which means that tests don&apos;t depend on each other). &lt;/p&gt;\n\n&lt;p&gt;Having a global variable (not always) but in most of the cases (at least of what I have seen so far) is to prepare and pass results to other functions. This violates this principle as well. If the global variable has been used in that way (i.e the global variable used in function X has to be set in a function Y first) it means that to unit test function X you have to run test/run function Y first.&lt;/p&gt;\n\n&lt;h2&gt;Globals as constants&lt;/h2&gt;\n\n&lt;p&gt;On the other hand and as other people have already mentioned, if the global variable is used as a &quot;constant&quot; variable can be slightly better since the language does not support constants. However, I always prefer working with classes and having the &quot;constants&quot; as a class member and not use a global variable at all. If you have a code that two different classes require to share a global variable then you probably need to refactor your solution and make your classes independent.  &lt;/p&gt;\n\n&lt;p&gt;I don&apos;t believe that globals shouldn&apos;t be used. But if they are used the authors should consider some principles (the ones mentioned above perhaps and other software engineering principles and good practices) for a cleaner and nearly bug-free code.&lt;/p&gt;\n    ","\n&lt;p&gt;They are essential, the screen being a good example. However, in a multithreaded environment or with many developers involved, in practice often the question arises: who did (erraneously) set or clear it? Depending on the architecture, analysis can be costly and be required often. While reading the global var can be ok, writing to it must be controlled, for example by a single thread or threadsafe class. Hence, global vars arise the fear of high development costs possible by the consequences for which themselves are considered evil. Therefore in general, it&apos;s good practice to keep the number of global vars low.&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;in many ways, a module in python is similar to a singleton class, and module globals are similar to class properties.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/349948/corley-brigman&quot; title=&quot;10,433 reputation&quot; class=&quot;comment-user&quot;&gt;Corley Brigman&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment28342064_19158896&quot;&gt;&lt;span title=&quot;2013-10-03 13:06:49Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 3, 2013 at 13:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@CorleyBrigman: singleton classes actually often suffer from the same problems typically attributed to globals :)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/247623/erik-kaplun&quot; title=&quot;35,267 reputation&quot; class=&quot;comment-user&quot;&gt;Erik Kaplun&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment28343273_19158896&quot;&gt;&lt;span title=&quot;2013-10-03 13:40:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 3, 2013 at 13:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;visibility of python modules is not limited to a module. They&apos;re available in the entire interpreter, and (here is the important thing) changes there affect the entire interpreter. It is not like a string that you create instances... is like modifying all the string instances. Monkey patching smell.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/15987/graffic&quot; title=&quot;1,204 reputation&quot; class=&quot;comment-user&quot;&gt;graffic&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment34322679_19158896&quot;&gt;&lt;span title=&quot;2014-03-21 06:18:03Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 21, 2014 at 6:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Most modules don&apos;t start with defining globals &lt;i&gt;except&lt;/i&gt; constants. Globals are bad means &lt;i&gt;variables&lt;/i&gt; / &lt;i&gt;global state&lt;/i&gt; not constants.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3815611/blackjack&quot; title=&quot;4,234 reputation&quot; class=&quot;comment-user&quot;&gt;BlackJack&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment77762437_19158896&quot;&gt;&lt;span title=&quot;2017-07-30 14:40:15Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 30, 2017 at 14:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Using globals is a horrible idea, one reason might be the inability to properly test functions that update some arbitrary dictionary that exists &quot;somewhere&quot;. A codebase with globals cannot be actually proved functional.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2098651/tomasz-sosi%c5%84ski&quot; title=&quot;819 reputation&quot; class=&quot;comment-user&quot;&gt;Tomasz Sosiński&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81867385_19158896&quot;&gt;&lt;span title=&quot;2017-11-23 13:20:52Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 23, 2017 at 13:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I like the &quot;globals as constants is a problem&quot; ... because if you&apos;re doing OO design ... it really is.   Why does anybody but the IdCreator class need to know the ID_LEN ?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/627042/erik-aronesty&quot; title=&quot;10,395 reputation&quot; class=&quot;comment-user&quot;&gt;Erik Aronesty&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment85368946_49088850&quot;&gt;&lt;span title=&quot;2018-03-08 20:13:32Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 8, 2018 at 20:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":519,"title":"Why are global variables evil? [closed]","content":"\n                    &lt;div&gt;\n            &lt;aside class=&quot;s-notice s-notice__info post-notice js-post-notice mb16&quot; role=&quot;status&quot;&gt;\n        &lt;div class=&quot;d-flex fd-column fw-nowrap&quot;&gt;\n            &lt;div class=&quot;d-flex fw-nowrap&quot;&gt;\n                &lt;div class=&quot;flex--item wmn0 fl1 lh-lg&quot;&gt;\n                    &lt;div class=&quot;flex--item fl1 lh-lg&quot;&gt;\n                        &lt;b&gt;Closed.&lt;/b&gt; This question does not meet &lt;a href=&quot;/help/closed-questions&quot;&gt;Stack Overflow guidelines&lt;/a&gt;. It is not currently accepting answers.\n                        \n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n            &lt;hr class=&quot;my12 outline-none baw0 bb bc-powder-400&quot;&gt;\n        &lt;div class=&quot;fw-nowrap fc-black-600&quot;&gt;\n            &lt;div class=&quot;d-flex fd-column lh-md&quot;&gt;\n                &lt;div class=&quot;mb0 d-flex&quot;&gt;\n                        &lt;div class=&quot;flex--item mr8&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;svg-icon iconLightbulb&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 18 18&quot;&gt;&lt;path d=&quot;M15 6.38A6.48 6.48 0 0 0 7.78.04h-.02A6.49 6.49 0 0 0 2.05 5.6a6.31 6.31 0 0 0 2.39 5.75c.49.39.76.93.76 1.5v.24c0 1.07.89 1.9 1.92 1.9h2.75c1.04 0 1.92-.83 1.92-1.9v-.2c0-.6.26-1.15.7-1.48A6.32 6.32 0 0 0 15 6.37ZM4.03 5.85A4.49 4.49 0 0 1 8 2.02a4.48 4.48 0 0 1 5 4.36 4.3 4.3 0 0 1-1.72 3.44c-.98.74-1.5 1.9-1.5 3.08v.1H7.2v-.14c0-1.23-.6-2.34-1.53-3.07a4.32 4.32 0 0 1-1.64-3.94ZM10 18a1 1 0 0 0 0-2H7a1 1 0 1 0 0 2h3Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/div&gt;\n                    &lt;p&gt; We don’t allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.&lt;/p&gt;\n                &lt;/div&gt;\n                    &lt;div class=&quot;mb0 mt6 d-flex&quot;&gt;\n                        &lt;p class=&quot;ml24 pl2&quot;&gt;Closed &lt;span title=&quot;2020-02-03 14:00:08Z&quot; class=&quot;relativetime&quot;&gt;2 years ago&lt;/span&gt;.&lt;/p&gt;\n                    &lt;/div&gt;\n                &lt;div class=&quot;ml24 pl2&quot;&gt;\n\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n            &lt;div class=&quot;mt24 d-flex gsx gs8&quot;&gt;\n                    &lt;a class=&quot;s-btn s-btn__outlined flex--item js-post-notice-edit-post&quot; href=&quot;/posts/19158339/edit&quot;&gt;\n                        Improve this question\n                    &lt;/a&gt;\n            &lt;/div&gt;\n&lt;/aside&gt;\n\n    &lt;/div&gt;\n\n&lt;p&gt;I&apos;m trying to find out why the use of &lt;code&gt;global&lt;/code&gt; is considered to be bad practice in python (and in programming in general). Can somebody explain? Links with more info would also be appreciated.&lt;/p&gt;\n    ","slug":"why-are-global-variables-evil-closed-1657388260006","postType":"QUESTION","createdAt":"2022-07-09T17:37:40.000Z","updatedAt":"2022-07-09T17:37:40.000Z","tags":[{"id":2566,"name":"side-effects","slug":"side-effects","createdAt":"2022-07-09T17:37:40.000Z","updatedAt":"2022-07-09T17:37:40.000Z","Questions_Tags":{"questionId":519,"tagId":2566}}]}]}},"__N_SSG":true}