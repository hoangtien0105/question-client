{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;No REAL easy way to do this. Lots of ideas out there, though.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://blog.shlomoid.com/2008/11/emulating-mysqls-groupconcat-function.html&quot; rel=&quot;noreferrer&quot;&gt;Best one I&apos;ve found&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; table_name, &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt;(column_names , LEN(column_names )&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; column_names\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; information_schema.columns &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; extern\n&lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY\n(\n    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; column_name &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; information_schema.columns &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; intern\n    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; extern.table_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intern.table_name\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n) pre_trimmed (column_names)\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; table_name, column_names;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or a version that works correctly if the data might contain characters such as &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;WITH&lt;/span&gt; extern\n     &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DISTINCT&lt;/span&gt; table_name\n         &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   INFORMATION_SCHEMA.COLUMNS)\n&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; table_name,\n       &lt;span class=&quot;hljs-keyword&quot;&gt;LEFT&lt;/span&gt;(y.column_names, LEN(y.column_names) &lt;span class=&quot;hljs-operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; column_names\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   extern\n       &lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; column_name &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;   INFORMATION_SCHEMA.COLUMNS &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; intern\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;  extern.table_name &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; intern.table_name\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;), TYPE) x (column_names)\n       &lt;span class=&quot;hljs-keyword&quot;&gt;CROSS&lt;/span&gt; APPLY (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; x.column_names.value(&lt;span class=&quot;hljs-string&quot;&gt;&apos;.&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;NVARCHAR(MAX)&apos;&lt;/span&gt;)) y(column_names) \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I may be a bit late to the party but this method works for me and is easier than the COALESCE method.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; STUFF(\n             (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; Column_Name \n              &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Table_Name\n              &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH (&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;))\n             , &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;SQL Server 2017&lt;/strong&gt; does introduce a new aggregate function&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/mt790580.aspx&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;STRING_AGG ( expression, separator)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Concatenates the values of string expressions and places separator\n  values between them. The separator is not added at the end of string.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The concatenated elements can be ordered by appending &lt;code&gt;WITHIN GROUP (ORDER BY some_expression)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;For versions 2005-2016&lt;/strong&gt; I typically use the XML method in the accepted answer.&lt;/p&gt;\n\n&lt;p&gt;This can fail in some circumstances however. e.g. if the data to be concatenated contains &lt;code&gt;CHAR(29)&lt;/code&gt; you see&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;FOR XML could not serialize the data ... because it\n  contains a character (0x001D) which is not allowed in XML.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;A more robust method that can deal with all characters would be to use a CLR aggregate. However applying an ordering to the concatenated elements is more difficult with this approach.&lt;/p&gt;\n\n&lt;p&gt;The method of assigning to a variable is &lt;a href=&quot;https://stackoverflow.com/questions/15138593/nvarchar-concatenation-index-nvarcharmax-inexplicable-behavior/15163136#15163136&quot;&gt;not guaranteed&lt;/a&gt; and should be avoided in production code.&lt;/p&gt;\n    ","\n&lt;p&gt;Possibly too late to be of benefit now, but is this not the easiest way to do things?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;     empName, projIDs &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; replace\n                          ((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; Surname &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [data()]\n                              &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; project_members\n                              &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;  empName &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; a.empName\n                              &lt;span class=&quot;hljs-keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; empName &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; xml path(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)), &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, REQUIRED SEPERATOR)\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;         project_members a\n&lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt;     empName &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; empName\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Have a look at the &lt;a href=&quot;https://github.com/orlando-colamatteo/ms-sql-server-group-concat-sqlclr&quot; rel=&quot;noreferrer&quot;&gt;GROUP_CONCAT&lt;/a&gt; project on Github, I think I does exactly what you are searching for:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;This project contains a set of SQLCLR User-defined Aggregate functions (SQLCLR UDAs) that collectively offer similar functionality to the MySQL GROUP_CONCAT function. There are multiple functions to ensure the best performance based on the functionality required...&lt;/p&gt;\n&lt;/blockquote&gt;\n    ","\n&lt;p&gt;To concatenate all the project manager names from projects that have multiple project managers write:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; a.project_id,a.project_name,Stuff((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; N&lt;span class=&quot;hljs-string&quot;&gt;&apos;/ &apos;&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; first_name &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;, &apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt;last_name &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; projects_v \n&lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; a.project_id&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;project_id\n &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt;\n XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;),TYPE).&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;text()[1]&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;nvarchar(max)&apos;&lt;/span&gt;),&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,N&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;\n) mgr_names\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; projects_v a\n&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; a.project_id,a.project_name\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;With the below code you have to set PermissionLevel=External on your project properties before you deploy, and change the database to trust external code (be sure to read elsewhere about security risks and alternatives [like certificates]) by running &quot;ALTER DATABASE database_name SET TRUSTWORTHY ON&quot;.&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;System&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Collections.Generic;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Data.SqlTypes;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.IO;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Runtime.Serialization;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; System.Runtime.Serialization.Formatters.Binary;\n&lt;span class=&quot;hljs-keyword&quot;&gt;using&lt;/span&gt; Microsoft.SqlServer.Server;\n\n[Serializable]\n[SqlUserDefinedAggregate(Format.UserDefined,\nMaxByteSize&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;,\nIsInvariantToDuplicates&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\nIsInvariantToNulls&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\nIsInvariantToOrder&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,\nIsNullIfEmpty&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;)]\n    public struct CommaDelimit : IBinarySerialize\n{\n\n\n[Serializable]\n private class StringList : List&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;string&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;\n { }\n\n private StringList List;\n\n public void Init()\n {\n  this.List &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; StringList();\n }\n\n public void Accumulate(SqlString &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)\n {\n  if (&lt;span class=&quot;hljs-operator&quot;&gt;!&lt;/span&gt;value.IsNull)\n   this.Add(value.Value);\n }\n\n private void &lt;span class=&quot;hljs-keyword&quot;&gt;Add&lt;/span&gt;(string &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;)\n {\n  if (&lt;span class=&quot;hljs-operator&quot;&gt;!&lt;/span&gt;this.List.Contains(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;))\n   this.List.Add(&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;);\n }\n\n public void &lt;span class=&quot;hljs-keyword&quot;&gt;Merge&lt;/span&gt;(CommaDelimit &lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt;)\n {\n  foreach (string s &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; group.List)\n  {\n   this.Add(s);\n  }\n }\n\n void IBinarySerialize.Read(BinaryReader reader)\n {\n    IFormatter formatter &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BinaryFormatter();\n    this.List &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (StringList)formatter.Deserialize(reader.BaseStream);\n }\n\n public SqlString Terminate()\n {\n  if (this.List.Count &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)\n   &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; SqlString.Null;\n\n  const string Separator &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &quot;, &quot;;\n\n  this.List.Sort();\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SqlString(String.Join(Separator, this.List.ToArray()));\n }\n\n void IBinarySerialize.Write(BinaryWriter writer)\n {\n  IFormatter formatter &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; BinaryFormatter();\n  formatter.Serialize(writer.BaseStream, this.List);\n }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&apos;ve tested this using a query that looks like:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n dbo.CommaDelimit(X.value) [delimited] \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n (\n  &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;D&apos;&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;] \n  &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;] \n  &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;B&apos;&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;] &lt;span class=&quot;hljs-comment&quot;&gt;-- intentional duplicate&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;A&apos;&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;] \n  &lt;span class=&quot;hljs-keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;C&apos;&lt;/span&gt; [&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;] \n ) X \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And yields: A, B, C, D&lt;/p&gt;\n    ","\n&lt;p&gt;Tried these but for my purposes in MS SQL Server 2005 the following was most useful, which I found at &lt;a href=&quot;http://www.xaprb.com/blog/2005/09/28/simulating-the-group-concat-function/&quot; rel=&quot;noreferrer&quot;&gt;xaprb&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@result&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;8000&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@result&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; name &lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; master.dbo.systypes;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; rtrim(&lt;span class=&quot;hljs-variable&quot;&gt;@result&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;@Mark as you mentioned it was the space character that caused issues for me.&lt;/p&gt;\n    ","\n&lt;p&gt;About J Hardiman&apos;s answer, how about:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; empName, projIDs&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;\n  REPLACE(\n    REPLACE(\n      (&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; REPLACE(projID, &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;-somebody-puts-microsoft-out-of-his-misery-please-&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; [data()] &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; project_members &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; empName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;a.empName &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)), \n      &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;, \n      &lt;span class=&quot;hljs-string&quot;&gt;&apos; / &apos;&lt;/span&gt;), \n    &lt;span class=&quot;hljs-string&quot;&gt;&apos;-somebody-puts-microsoft-out-of-his-misery-please-&apos;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&apos; &apos;&lt;/span&gt;) \n  &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; project_members a &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; empName &lt;span class=&quot;hljs-keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; empName\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;By the way, is the use of &quot;Surname&quot; a typo or am i not understanding a concept here?&lt;/p&gt;\n\n&lt;p&gt;Anyway, thanks a lot guys cuz it saved me quite some time :)&lt;/p&gt;\n    ","\n&lt;h3&gt;2021&lt;/h3&gt;\n&lt;p&gt;@AbdusSalamAzad&apos;s answer is the correct one.&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; STRING_AGG(my_col, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; my_result &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; my_tbl;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If the result is too big, you may get error &quot;&lt;strong&gt;STRING_AGG aggregation result exceeded the limit of 8000 bytes. Use LOB types to avoid result truncation.&lt;/strong&gt;&quot; , which can be fixed by changing the query to this:&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; STRING_AGG(&lt;span class=&quot;hljs-keyword&quot;&gt;convert&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(max), my_col), &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; my_result &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; my_tbl;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;UPDATE 2020: &lt;strong&gt;SQL Server 2016+&lt;/strong&gt; &lt;strong&gt;JSON&lt;/strong&gt; Serialization and De-serialization Examples&lt;/p&gt;\n&lt;p&gt;The data provided by the OP inserted into a temporary table called #project_members&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; if &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; #project_members;\n&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; #project_members(\n  empName        &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,\n  projID         &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;);\ngo\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; #project_members(empName, projID) &lt;span class=&quot;hljs-keyword&quot;&gt;values&lt;/span&gt;\n(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ANDY&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;A100&apos;&lt;/span&gt;),\n(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ANDY&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;B391&apos;&lt;/span&gt;),\n(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ANDY&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;X010&apos;&lt;/span&gt;),\n(&lt;span class=&quot;hljs-string&quot;&gt;&apos;TOM&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;A100&apos;&lt;/span&gt;),\n(&lt;span class=&quot;hljs-string&quot;&gt;&apos;TOM&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;A510&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;How to serialize this data into a single JSON string with a nested array containing projID&apos;s&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; empName, (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; pm_json.projID \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; #project_members pm_json \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; pm.empName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;pm_json.empName \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; json path, root(&lt;span class=&quot;hljs-string&quot;&gt;&apos;projList&apos;&lt;/span&gt;)) projJSON\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; #project_members pm\n&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; empName\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; json path;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Result&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&apos;[\n  {\n    &quot;empName&quot;: &quot;ANDY&quot;,\n    &quot;projJSON&quot;: {\n      &quot;projList&quot;: [\n        { &quot;projID&quot;: &quot;A100&quot; },\n        { &quot;projID&quot;: &quot;B391&quot; },\n        { &quot;projID&quot;: &quot;X010&quot; }\n      ]\n    }\n  },\n  {\n    &quot;empName&quot;: &quot;TOM&quot;,\n    &quot;projJSON&quot;: {\n      &quot;projList&quot;: [\n        { &quot;projID&quot;: &quot;A100&quot; },\n        { &quot;projID&quot;: &quot;A510&quot; }\n      ]\n    }\n  }\n]&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;How to de-serialize this data from a single JSON string back to it&apos;s original rows and columns&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;@json&lt;/span&gt;           nvarchar(max)&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;N&lt;span class=&quot;hljs-string&quot;&gt;&apos;[{&quot;empName&quot;:&quot;ANDY&quot;,&quot;projJSON&quot;:{&quot;projList&quot;:[{&quot;projID&quot;:&quot;A100&quot;},\n                                         {&quot;projID&quot;:&quot;B391&quot;},{&quot;projID&quot;:&quot;X010&quot;}]}},{&quot;empName&quot;:&quot;TOM&quot;,&quot;projJSON&quot;:\n                                         {&quot;projList&quot;:[{&quot;projID&quot;:&quot;A100&quot;},{&quot;projID&quot;:&quot;A510&quot;}]}}]&apos;&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; oj.empName, noj.projID \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; openjson(&lt;span class=&quot;hljs-variable&quot;&gt;@json&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; (empName        &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;),\n                           projJSON       nvarchar(max) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; json) oj\n     &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; apply openjson(oj.projJSON, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$.projList&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; (projID    &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)) noj;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Results&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;empName projID\nANDY    A100\nANDY    B391\nANDY    X010\nTOM     A100\nTOM     A510\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;How to persist the unique empName to a table and store the projID&apos;s in a nested JSON array&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; if &lt;span class=&quot;hljs-keyword&quot;&gt;exists&lt;/span&gt; #project_members_with_json;\n&lt;span class=&quot;hljs-keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; #project_members_with_json(\n  empName        &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,\n  projJSON       nvarchar(max) &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;);\ngo\n&lt;span class=&quot;hljs-keyword&quot;&gt;insert&lt;/span&gt; #project_members_with_json(empName, projJSON) \n&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; empName, (&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; pm_json.projID \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; #project_members pm_json \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;where&lt;/span&gt; pm.empName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;pm_json.empName \n                 &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; json path, root(&lt;span class=&quot;hljs-string&quot;&gt;&apos;projList&apos;&lt;/span&gt;)) \n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; #project_members pm\n&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; empName;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Results&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;empName projJSON\nANDY    {&quot;projList&quot;:[{&quot;projID&quot;:&quot;A100&quot;},{&quot;projID&quot;:&quot;B391&quot;},{&quot;projID&quot;:&quot;X010&quot;}]}\nTOM     {&quot;projList&quot;:[{&quot;projID&quot;:&quot;A100&quot;},{&quot;projID&quot;:&quot;A510&quot;}]}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;How to de-serialize from a table with unique empName and nested JSON array column containing projID&apos;s&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; wj.empName, oj.projID\n&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt;\n  #project_members_with_json wj\n &lt;span class=&quot;hljs-keyword&quot;&gt;cross&lt;/span&gt; apply\n  openjson(wj.projJSON, &lt;span class=&quot;hljs-string&quot;&gt;&apos;$.projList&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; (projID    &lt;span class=&quot;hljs-type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)) oj;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Results&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;empName projID\nANDY    A100\nANDY    B391\nANDY    X010\nTOM     A100\nTOM     A510\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For SQL Server 2017+, use  STRING_AGG() function&lt;/p&gt;\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; STRING_AGG(Genre, &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;Result&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; Genres;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Sample result:&lt;/p&gt;\n&lt;h2 id=&quot;result&quot;&gt;Result&lt;/h2&gt;\n&lt;p&gt;Rock,Jazz,Country,Pop,Blues,Hip Hop,Rap,Punk&lt;/p&gt;\n    ","\n&lt;p&gt;For my fellow Googlers out there, here&apos;s a very simple plug-and-play solution that worked for me after struggling with the more complex solutions for a while:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;distinct&lt;/span&gt; empName,\nNewColumnName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;STUFF((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;CONVERT&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;), projID ) \n                     &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; \n                     &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; empName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;t.empName &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)) , &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; )\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; t\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Notice that I had to convert the ID into a VARCHAR in order to concatenate it as a string. If you don&apos;t have to do that, here&apos;s an even simpler version:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;distinct&lt;/span&gt; empName,\nNewColumnName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;STUFF((&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;,&apos;&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot;&gt;+&lt;/span&gt; projID\n                     &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; \n                     &lt;span class=&quot;hljs-keyword&quot;&gt;WHERE&lt;/span&gt; empName&lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt;t.empName &lt;span class=&quot;hljs-keyword&quot;&gt;FOR&lt;/span&gt; XML PATH(&lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)) , &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; , &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt; )\n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n&lt;span class=&quot;hljs-keyword&quot;&gt;returns&lt;/span&gt; t\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All credit for this goes to here:\n&lt;a href=&quot;https://social.msdn.microsoft.com/Forums/sqlserver/en-US/9508abc2-46e7-4186-b57f-7f368374e084/replicating-groupconcat-function-of-mysql-in-sql-server?forum=transactsql&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://social.msdn.microsoft.com/Forums/sqlserver/en-US/9508abc2-46e7-4186-b57f-7f368374e084/replicating-groupconcat-function-of-mysql-in-sql-server?forum=transactsql&lt;/a&gt;&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;A couple of handy links: &lt;a href=&quot;http://www.postgresonline.com/journal/archives/191-stringagg.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;postgresonline.com/journal/archives/191-stringagg.html&lt;/a&gt; and &lt;a href=&quot;http://consultingblogs.emc.com/jamiethomson/archive/2009/07/16/string-aggregation-in-t-sql-amp-pl-sql.aspx&quot; rel=&quot;nofollow noreferrer&quot;&gt;consultingblogs.emc.com/jamiethomson/archive/2009/07/16/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/137471/bernhof&quot; title=&quot;6,110 reputation&quot; class=&quot;comment-user&quot;&gt;bernhof&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8783619_451415&quot;&gt;&lt;span title=&quot;2011-09-03 08:53:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 3, 2011 at 8:53&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is an old question, but I like &lt;a href=&quot;http://stackoverflow.com/a/9779711/498609&quot;&gt;the CLR solution given here&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/498609/diego&quot; title=&quot;17,499 reputation&quot; class=&quot;comment-user&quot;&gt;Diego&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment42386499_451415&quot;&gt;&lt;span title=&quot;2012-03-20 01:54:26Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 20, 2012 at 1:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;possible duplicate of &lt;a href=&quot;http://stackoverflow.com/questions/1817985/how-do-i-create-a-comma-separated-list-using-a-sql-query&quot;&gt;How do I Create a Comma-Separated List using a SQL Query?&lt;/a&gt; - that post is broader so I would choose that one as canonical&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/684229/tomas&quot; title=&quot;55,121 reputation&quot; class=&quot;comment-user&quot;&gt;Tomas&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26373363_451415&quot;&gt;&lt;span title=&quot;2013-08-03 06:43:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 3, 2013 at 6:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;possible duplicate of &lt;a href=&quot;http://stackoverflow.com/questions/8868604/sql-group-concat-function-in-sql-server&quot;&gt;SQL group_concat function in SQL Server&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1215724/trikaldarshiii&quot; title=&quot;11,044 reputation&quot; class=&quot;comment-user&quot;&gt;Trikaldarshiii&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26744109_451415&quot;&gt;&lt;span title=&quot;2013-08-14 19:23:21Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 14, 2013 at 19:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How do you know which order the list by should be built, e.g. you show A100 / B391 / X010 but given there is no implicit ordering in a relational database it could just as easily be X010 / A100 / B391 or any other combination.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1750324/steve-ford&quot; title=&quot;7,173 reputation&quot; class=&quot;comment-user&quot;&gt;Steve Ford&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment34300119_451415&quot;&gt;&lt;span title=&quot;2014-03-20 16:09:44Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 20, 2014 at 16:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This example worked for me, but I tried doing another aggregation and it didn&apos;t work, gave me an error: &quot;the correlation name &apos;pre_trimmed&apos; is specified multiple times in a FROM clause.&quot;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/14392/philchuang&quot; title=&quot;2,506 reputation&quot; class=&quot;comment-user&quot;&gt;PhilChuang&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment2056814_451441&quot;&gt;&lt;span title=&quot;2010-01-22 19:24:46Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jan 22, 2010 at 19:24&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&apos;pre_trimmed&apos; is just an alias for the subquery. Aliases are required for subqueries and have to be unique, so for another subquery change it to something unique...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/192961/koen&quot; title=&quot;3,580 reputation&quot; class=&quot;comment-user&quot;&gt;Koen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment12284819_451441&quot;&gt;&lt;span title=&quot;2012-03-12 16:57:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 12, 2012 at 16:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;can you show an example without table_name as a column name it&apos;s confusing.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2193409/s-mason&quot; title=&quot;3,229 reputation&quot; class=&quot;comment-user&quot;&gt;S.Mason&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment81672355_451441&quot;&gt;&lt;span title=&quot;2017-11-17 21:47:18Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 17, 2017 at 21:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This only shows how to concat values - group_concat concats them by group, which is more challenging (and what the OP appears to require). See the accepted answer to SO 15154644 for how to do this - the WHERE clause is the critical addition&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1280840/djdave&quot; title=&quot;847 reputation&quot; class=&quot;comment-user&quot;&gt;DJDave&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment83397194_5981860&quot;&gt;&lt;span title=&quot;2018-01-11 13:26:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 11, 2018 at 13:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@DJDave was referring to &lt;a href=&quot;https://stackoverflow.com/a/15154723/1518546&quot;&gt;this answer&lt;/a&gt;. See also &lt;a href=&quot;https://stackoverflow.com/a/17591536/1518546&quot;&gt;the accepted answer to a similar question&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1518546/john-cummings&quot; title=&quot;1,642 reputation&quot; class=&quot;comment-user&quot;&gt;John Cummings&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment96593997_5981860&quot;&gt;&lt;span title=&quot;2019-02-27 20:19:21Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 27, 2019 at 20:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is also available now in Azure SQL : &lt;a href=&quot;https://azure.microsoft.com/en-us/roadmap/new-t-sql-string-functions-in-azure-sql-database/&quot; rel=&quot;nofollow noreferrer&quot;&gt;azure.microsoft.com/en-us/roadmap/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/16940/simon-weaver&quot; title=&quot;131,456 reputation&quot; class=&quot;comment-user&quot;&gt;Simon_Weaver&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment79383657_40692104&quot;&gt;&lt;span title=&quot;2017-09-14 04:01:27Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 14, 2017 at 4:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Interesting.  I&apos;ve already finished the project at hand, but I&apos;ll give this method a try.  Thanks!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/47450/danm&quot; title=&quot;6,867 reputation&quot; class=&quot;comment-user owner&quot;&gt;DanM&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment2306663_2324093&quot;&gt;&lt;span title=&quot;2010-02-25 16:59:00Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Feb 25, 2010 at 16:59&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Nice trick -- only problem is for surnames with spaces it will replace the space with the separator.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/21441/mark-elliot&quot; title=&quot;72,434 reputation&quot; class=&quot;comment-user&quot;&gt;Mark Elliot&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3356141_2324093&quot;&gt;&lt;span title=&quot;2010-07-14 16:16:51Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jul 14, 2010 at 16:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I have encountered such a problem myself, Mark. Unfortunately, until MSSQL gets with the times and introduces GROUP_CONCAT, this is the least of the overhead-intensive methods I have been able to come up with for what is needed here.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/280090/j-hardiman&quot; title=&quot;519 reputation&quot; class=&quot;comment-user&quot;&gt;J Hardiman&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3456026_2324093&quot;&gt;&lt;span title=&quot;2010-07-26 01:40:58Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jul 26, 2010 at 1:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks for this! Here&apos;s a SQL Fiddle showing it working: &lt;a href=&quot;http://sqlfiddle.com/#!6/c5d56/3&quot; rel=&quot;nofollow noreferrer&quot;&gt;sqlfiddle.com/#!6/c5d56/3&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2648723/fleed&quot; title=&quot;611 reputation&quot; class=&quot;comment-user&quot;&gt;fleed&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment53398616_2324093&quot;&gt;&lt;span title=&quot;2015-09-25 10:30:43Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 25, 2015 at 10:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@MaxiWheat: a lot of guys don&apos;t read question or answer carefully before clicking down vote. It affects to owner post directly due to their mistake.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3558663/steve-lam&quot; title=&quot;917 reputation&quot; class=&quot;comment-user&quot;&gt;Steve Lam&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment54651045_13995658&quot;&gt;&lt;span title=&quot;2015-10-30 08:17:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 30, 2015 at 8:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Works great. The only feature I am missing is the ability to sort on a column which MySQL group_concat() can like: &lt;code&gt;GROUP_CONCAT(klascode,&apos;(&apos;,name,&apos;)&apos; ORDER BY klascode ASC SEPARATOR &apos;, &apos;)&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2386040/jan&quot; title=&quot;2,028 reputation&quot; class=&quot;comment-user&quot;&gt;Jan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment93044743_13995658&quot;&gt;&lt;span title=&quot;2018-10-30 21:33:08Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 30, 2018 at 21:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I think that the engine does not really guarantee any order with this method, because the variables are computed as data flows depending on the exec plan.  It seems to work most of the time so far though.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/369665/phil-w&quot; title=&quot;1,164 reputation&quot; class=&quot;comment-user&quot;&gt;phil_w&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment97454259_3884368&quot;&gt;&lt;span title=&quot;2019-03-26 19:58:06Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 26, 2019 at 19:58&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Rather unfriendly answer if you ask me and not at all helpful as an answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/90764/tim-meers&quot; title=&quot;908 reputation&quot; class=&quot;comment-user&quot;&gt;Tim Meers&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment12449454_3497435&quot;&gt;&lt;span title=&quot;2012-03-20 02:04:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 20, 2012 at 2:04&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;only seeing that now... I didn&apos;t mean it in a mean way, at the time I was very frustrated with sql server (still am). answers from this post really were helpful actually; EDIT: why wasn&apos;t it helpful btw? it did the trick for me&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/422190/user422190&quot; title=&quot;107 reputation&quot; class=&quot;comment-user&quot;&gt;user422190&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24427502_3497435&quot;&gt;&lt;span title=&quot;2013-06-04 15:43:32Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 4, 2013 at 15:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;With this many answers already posted, I think it would be better if you incorporated your perfectly valid note about the 8000-byte limit problem, as well as the solution to it, into the &lt;a href=&quot;https://stackoverflow.com/a/40692104&quot;&gt;answer that first suggested &lt;code&gt;STRING_AGG&lt;/code&gt;&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/297408/andriy-m&quot; title=&quot;73,982 reputation&quot; class=&quot;comment-user&quot;&gt;Andriy M&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122873730_69389890&quot;&gt;&lt;span title=&quot;2021-10-10 16:49:23Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 10, 2021 at 16:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Don&apos;t see how this is relevant for the question asked, to be honest. The OP asked very specifically about simulating MySQL&apos;s &lt;code&gt;GROUP_CONCAT&lt;/code&gt; behaviour. The string that &lt;code&gt;GROUP_CONCAT&lt;/code&gt; produces is just a list of values separated by a delimiter. A JSON-formatted string is much more than that.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/297408/andriy-m&quot; title=&quot;73,982 reputation&quot; class=&quot;comment-user&quot;&gt;Andriy M&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment112718704_63674567&quot;&gt;&lt;span title=&quot;2020-09-04 14:27:13Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 4, 2020 at 14:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Valid solution but it &lt;a href=&quot;https://stackoverflow.com/a/40692104&quot;&gt;has already been suggested&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/297408/andriy-m&quot; title=&quot;73,982 reputation&quot; class=&quot;comment-user&quot;&gt;Andriy M&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment121139720_68495106&quot;&gt;&lt;span title=&quot;2021-07-27 13:14:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2021 at 13:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":164,"title":"Simulating group_concat MySQL function in Microsoft SQL Server 2005?","content":"\n                \n&lt;p&gt;I&apos;m trying to migrate a MySQL-based app over to Microsoft SQL Server 2005 (not by choice, but that&apos;s life).&lt;/p&gt;\n\n&lt;p&gt;In the original app, we used &lt;em&gt;almost&lt;/em&gt; entirely ANSI-SQL compliant statements, with one significant exception -- we used MySQL&apos;s &lt;code&gt;group_concat&lt;/code&gt; function fairly frequently.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;group_concat&lt;/code&gt;, by the way, does this: given a table of, say, employee names and projects...&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; empName, projID &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; project_members;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;returns:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;ANDY   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  A100\nANDY   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  B391\nANDY   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  X010\nTOM    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  A100\nTOM    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  A510\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;... and here&apos;s what you get with group_concat:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; \n    empName, group_concat(projID SEPARATOR &lt;span class=&quot;hljs-string&quot;&gt;&apos; / &apos;&lt;/span&gt;) \n&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; \n    project_members \n&lt;span class=&quot;hljs-keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; \n    empName;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;returns:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sql s-code-block&quot;&gt;&lt;code class=&quot;hljs language-sql&quot;&gt;ANDY   &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  A100 &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; B391 &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; X010\nTOM    &lt;span class=&quot;hljs-operator&quot;&gt;|&lt;/span&gt;  A100 &lt;span class=&quot;hljs-operator&quot;&gt;/&lt;/span&gt; A510\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So what I&apos;d like to know is: Is it possible to write, say, a user-defined function in SQL Server which emulates the functionality of &lt;code&gt;group_concat&lt;/code&gt;? &lt;/p&gt;\n\n&lt;p&gt;I have almost no experience using UDFs, stored procedures, or anything like that, just straight-up SQL, so please err on the side of too much explanation :)&lt;/p&gt;\n    ","slug":"simulating-group_concat-mysql-function-in-microsoft-sql-server-2005-1657384832169","postType":"QUESTION","createdAt":"2022-07-09T16:40:32.000Z","updatedAt":"2022-07-09T16:40:32.000Z","tags":[{"id":604,"name":"string-aggregation","slug":"string-aggregation","createdAt":"2022-07-09T16:40:32.000Z","updatedAt":"2022-07-09T16:40:32.000Z","Questions_Tags":{"questionId":164,"tagId":604}}]}]}},"__N_SSG":true}