{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;Use the &lt;a href=&quot;https://rtyley.github.io/bfg-repo-cleaner/&quot; rel=&quot;noreferrer&quot;&gt;BFG Repo-Cleaner&lt;/a&gt;, a simpler, faster alternative to &lt;code&gt;git-filter-branch&lt;/code&gt; specifically designed for removing unwanted files from Git history.&lt;/p&gt;\n\n&lt;p&gt;Carefully follow the &lt;a href=&quot;https://rtyley.github.io/bfg-repo-cleaner/#usage&quot; rel=&quot;noreferrer&quot;&gt;usage instructions&lt;/a&gt;, the core part is just this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ java -jar bfg.jar --strip-blobs-bigger-than 100M my-repo.git\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any files over 100MB in size (that aren&apos;t in your &lt;em&gt;latest&lt;/em&gt; commit) will be removed from your Git repository&apos;s history. You can then use &lt;code&gt;git gc&lt;/code&gt; to clean away the dead data:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ git gc --prune=now --aggressive\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The BFG is typically at least &lt;a href=&quot;https://docs.google.com/spreadsheet/ccc?key=0AsR1d5Zpes8HdER3VGU1a3dOcmVHMmtzT2dsS2xNenc#gid=0&quot; rel=&quot;noreferrer&quot;&gt;10-50x&lt;/a&gt; faster than running &lt;code&gt;git-filter-branch&lt;/code&gt;, and generally easier to use.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Full disclosure: I&apos;m the author of the BFG Repo-Cleaner.&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;What you want to do is highly disruptive if you have published history to other developers. See &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-rebase.html#_recovering_from_upstream_rebase&quot; rel=&quot;noreferrer&quot;&gt;Recovering From Upstream Rebase in the &lt;code&gt;git rebase&lt;/code&gt; documentation&lt;/a&gt; for the necessary steps after repairing your history.&lt;/p&gt;\n&lt;p&gt;You have at least two options: &lt;a href=&quot;https://git-scm.com/docs/git-filter-branch&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;git filter-branch&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;https://git-scm.com/docs/git-rebase#Documentation/git-rebase.txt---interactive&quot; rel=&quot;noreferrer&quot;&gt;interactive rebase&lt;/a&gt;, both explained below.&lt;/p&gt;\n&lt;h2&gt;Using &lt;code&gt;git filter-branch&lt;/code&gt;&lt;/h2&gt;\n&lt;p&gt;I had a similar problem with bulky binary test data from a Subversion import and wrote about &lt;a href=&quot;http://blog.gbacon.com/2009/08/git-shrinking-subversion-import.html&quot; rel=&quot;noreferrer&quot;&gt;removing data from a git repository&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Say your git history is:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ git lola --name-status\n* f772d66 (HEAD, master) Login page\n| A     login.html\n* cb14efd Remove DVD-rip\n| D     oops.iso\n* ce36c98 Careless\n| A     oops.iso\n| A     other.html\n* 5af4522 Admin page\n| A     admin.html\n* e738b63 Index\n  A     index.html\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note that &lt;a href=&quot;http://blog.kfish.org/2010/04/git-lola.html&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;git lola&lt;/code&gt;&lt;/a&gt; is a non-standard but highly useful alias. With the &lt;code&gt;--name-status&lt;/code&gt; switch, we can see tree modifications associated with each commit.&lt;/p&gt;\n&lt;p&gt;In the Careless commit (whose SHA1 object name is ce36c98) the file &lt;code&gt;oops.iso&lt;/code&gt; is the DVD-rip added by accident and removed in the next commit, cb14efd. Using the technique described in the aforementioned blog post, the command to execute is:&lt;/p&gt;\n&lt;pre class=&quot;lang-bash s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;git filter-branch --prune-empty -d /dev/shm/scratch \\\n  --index-filter &lt;span class=&quot;hljs-string&quot;&gt;&quot;git rm --cached -f --ignore-unmatch oops.iso&quot;&lt;/span&gt; \\\n  --tag-name-filter &lt;span class=&quot;hljs-built_in&quot;&gt;cat&lt;/span&gt; -- --all\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Options:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;--prune-empty&lt;/code&gt; removes commits that become empty (&lt;em&gt;i.e.&lt;/em&gt;, do not change the tree) as a result of the filter operation. In the typical case, this option produces a cleaner history.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; names a temporary directory that does not yet exist to use for building the filtered history. If you are running on a modern Linux distribution, specifying a &lt;a href=&quot;https://superuser.com/q/45342/20872&quot;&gt;tree in &lt;code&gt;/dev/shm&lt;/code&gt; will result in faster execution&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--index-filter&lt;/code&gt; is the main event and runs against the index at each step in the history. You want to remove &lt;code&gt;oops.iso&lt;/code&gt; wherever it is found, but it isnt present in all commits. The command &lt;code&gt;git rm --cached -f --ignore-unmatch oops.iso&lt;/code&gt; deletes the DVD-rip when it is present and does not fail otherwise.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--tag-name-filter&lt;/code&gt; describes how to rewrite tag names. A filter of &lt;code&gt;cat&lt;/code&gt; is the identity operation. Your repository, like the sample above, may not have any tags, but I included this option for full generality.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--&lt;/code&gt; specifies the end of options to &lt;code&gt;git filter-branch&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;--all&lt;/code&gt; following &lt;code&gt;--&lt;/code&gt; is shorthand for all refs. Your repository, like the sample above, may have only one ref (master), but I included this option for full generality.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;After some churning, the history is now:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ git lola --name-status\n* 8e0a11c (HEAD, master) Login page\n| A     login.html\n* e45ac59 Careless\n| A     other.html\n|\n| * f772d66 (refs/original/refs/heads/master) Login page\n| | A   login.html\n| * cb14efd Remove DVD-rip\n| | D   oops.iso\n| * ce36c98 Careless\n|/  A   oops.iso\n|   A   other.html\n|\n* 5af4522 Admin page\n| A     admin.html\n* e738b63 Index\n  A     index.html\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Notice that the new Careless commit adds only &lt;code&gt;other.html&lt;/code&gt; and that the Remove DVD-rip commit is no longer on the master branch. The branch labeled &lt;code&gt;refs/original/refs/heads/master&lt;/code&gt; contains your original commits in case you made a mistake. To remove it, follow the steps in &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-filter-branch.html#_checklist_for_shrinking_a_repository&quot; rel=&quot;noreferrer&quot;&gt;Checklist for Shrinking a Repository.&lt;/a&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ git update-ref -d refs/original/refs/heads/master\n$ git reflog expire --expire=now --all\n$ git gc --prune=now\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;For a simpler alternative, clone the repository to discard the unwanted bits.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ cd ~/src\n$ mv repo repo.old\n$ git clone file:///home/user/src/repo.old repo\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Using a &lt;code&gt;file:///...&lt;/code&gt; clone URL copies objects rather than creating hardlinks only.&lt;/p&gt;\n&lt;p&gt;Now your history is:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ git lola --name-status\n* 8e0a11c (HEAD, master) Login page\n| A     login.html\n* e45ac59 Careless\n| A     other.html\n* 5af4522 Admin page\n| A     admin.html\n* e738b63 Index\n  A     index.html\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The SHA1 object names for the first two commits (Index and Admin page) stayed the same because the filter operation did not modify those commits. Careless lost &lt;code&gt;oops.iso&lt;/code&gt; and Login page got a new parent, so their SHA1s &lt;em&gt;did&lt;/em&gt; change.&lt;/p&gt;\n&lt;h2&gt;Interactive rebase&lt;/h2&gt;\n&lt;p&gt;With a history of:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ git lola --name-status\n* f772d66 (HEAD, master) Login page\n| A     login.html\n* cb14efd Remove DVD-rip\n| D     oops.iso\n* ce36c98 Careless\n| A     oops.iso\n| A     other.html\n* 5af4522 Admin page\n| A     admin.html\n* e738b63 Index\n  A     index.html\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;you want to remove &lt;code&gt;oops.iso&lt;/code&gt; from Careless as though you never added it, and then Remove DVD-rip is useless to you. Thus, our plan going into an interactive rebase is to keep Admin page, edit Careless, and discard Remove DVD-rip.&lt;/p&gt;\n&lt;p&gt;Running &lt;code&gt;$ git rebase -i 5af4522&lt;/code&gt; starts an editor with the following contents.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;pick ce36c98 Careless\npick cb14efd Remove DVD-rip\npick f772d66 Login page\n\n# Rebase 5af4522..f772d66 onto 5af4522\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like &quot;squash&quot;, but discard this commit&apos;s log message\n#  x, exec = run command (the rest of the line) using shell\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n# However, if you remove everything, the rebase will be aborted.\n#\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Executing our plan, we modify it to&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;edit ce36c98 Careless\npick f772d66 Login page\n\n# Rebase 5af4522..f772d66 onto 5af4522\n# ...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;That is, we delete the line with Remove DVD-rip and change the operation on Careless to be &lt;code&gt;edit&lt;/code&gt; rather than &lt;code&gt;pick&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;Save-quitting the editor drops us at a command prompt with the following message.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Stopped at ce36c98... Careless\nYou can amend the commit now, with\n\n        git commit --amend\n\nOnce you are satisfied with your changes, run\n\n        git rebase --continue\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As the message tells us, we are on the Careless commit we want to edit, so we run two commands.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ git rm --cached oops.iso\n$ git commit --amend -C HEAD\n$ git rebase --continue\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The first removes the offending file from the index. The second modifies or amends Careless to be the updated index and &lt;code&gt;-C HEAD&lt;/code&gt; instructs git to reuse the old commit message. Finally, &lt;code&gt;git rebase --continue&lt;/code&gt; goes ahead with the rest of the rebase operation.&lt;/p&gt;\n&lt;p&gt;This gives a history of:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ git lola --name-status\n* 93174be (HEAD, master) Login page\n| A     login.html\n* a570198 Careless\n| A     other.html\n* 5af4522 Admin page\n| A     admin.html\n* e738b63 Index\n  A     index.html\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;which is what you want.&lt;/p&gt;\n    ","\n&lt;p&gt;Why not use this simple but powerful command?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;git filter-branch --tree-filter &apos;rm -f DVD-rip&apos; HEAD\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The &lt;code&gt;--tree-filter&lt;/code&gt; option runs the specified command after each checkout of the project and then recommits the results. In this case, you remove a file called DVD-rip from every snapshot, whether it exists or not. &lt;/p&gt;\n\n&lt;p&gt;If you know which commit introduced the huge file (say 35dsa2), you can replace HEAD with 35dsa2..HEAD to avoid rewriting too much history, thus avoiding diverging commits if you haven&apos;t pushed yet. This comment courtesy of @alpha_989 seems too important to leave out here.&lt;/p&gt;\n\n&lt;p&gt;See &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#The-Nuclear-Option:-filter-branch&quot; rel=&quot;noreferrer&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;(The best answer I&apos;ve seen to this problem is: &lt;a href=&quot;https://stackoverflow.com/a/42544963/714112&quot;&gt;https://stackoverflow.com/a/42544963/714112&lt;/a&gt; , copied here since this thread appears high in Google search rankings but that other one doesn&apos;t)&lt;/p&gt;\n\n&lt;h1&gt; A blazingly fast shell one-liner &lt;/h1&gt;\n\n&lt;p&gt;This shell script displays all blob objects in the repository, sorted from smallest to largest.&lt;/p&gt;\n\n&lt;p&gt;For my sample repo, it ran about &lt;strong&gt;100 times faster&lt;/strong&gt; than the other ones found here.&lt;br&gt;\nOn my trusty Athlon II X4 system, it handles the &lt;em&gt;Linux Kernel repository&lt;/em&gt; with its 5,622,155 objects in &lt;em&gt;just over a minute&lt;/em&gt;.&lt;/p&gt;\n\n&lt;h2&gt;The Base Script&lt;/h2&gt;\n\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;git rev-list --objects --all \\\n| git cat-file --batch-check=&lt;span class=&quot;hljs-string&quot;&gt;&apos;%(objecttype) %(objectname) %(objectsize) %(rest)&apos;&lt;/span&gt; \\\n| awk &lt;span class=&quot;hljs-string&quot;&gt;&apos;/^blob/ {print substr($0,6)}&apos;&lt;/span&gt; \\\n| &lt;span class=&quot;hljs-built_in&quot;&gt;sort&lt;/span&gt; --numeric-sort --key=2 \\\n| &lt;span class=&quot;hljs-built_in&quot;&gt;cut&lt;/span&gt; --complement --characters=13-40 \\\n| &lt;span class=&quot;hljs-built_in&quot;&gt;numfmt&lt;/span&gt; --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;When you run above code, you will get nice &lt;strong&gt;human-readable output&lt;/strong&gt; like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;...\n0d99bb931299  530KiB path/to/some-image.jpg\n2ba44098e28f   12MiB path/to/hires-image.png\nbd1741ddce0d   63MiB path/to/some-video-1080p.mp4\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt; Fast File Removal &lt;/h2&gt;\n\n&lt;p&gt;Suppose you then want to remove the files &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; from every commit reachable from &lt;code&gt;HEAD&lt;/code&gt;, you can use this command:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;git filter-branch --index-filter &lt;span class=&quot;hljs-string&quot;&gt;&apos;git rm --cached --ignore-unmatch a b&apos;&lt;/span&gt; HEAD\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;After trying virtually every answer in SO, I finally found this gem that quickly removed and deleted the large files in my repository and allowed me to sync again: &lt;a href=&quot;http://www.zyxware.com/articles/4027/how-to-delete-files-permanently-from-your-local-and-remote-git-repositories&quot; rel=&quot;noreferrer&quot;&gt;http://www.zyxware.com/articles/4027/how-to-delete-files-permanently-from-your-local-and-remote-git-repositories&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;CD to your local working folder and run the following command:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;git filter-branch -f --index-filter &quot;git rm -rf --cached --ignore-unmatch FOLDERNAME&quot; -- --all\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;replace FOLDERNAME with the file or folder you wish to remove from the given git repository.&lt;/p&gt;\n\n&lt;p&gt;Once this is done run the following commands to clean up the local repository:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;rm -rf .git/refs/original/\ngit reflog expire --expire=now --all\ngit gc --prune=now\ngit gc --aggressive --prune=now\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now push all the changes to the remote repository:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;git push --all --force\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will clean up the remote repository.&lt;/p&gt;\n    ","\n&lt;h1&gt;100 times faster than git filter-branch and simpler&lt;/h1&gt;\n&lt;p&gt;There are very good answers in this thread, but meanwhile many of them are outdated. Using &lt;code&gt;git-filter-branch&lt;/code&gt; is no longer recommended, because it is difficult to use and awfully slow on big repositories.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;git-filter-repo&lt;/code&gt; is much faster and simpler to use.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;git-filter-repo&lt;/code&gt; is a Python script, available at github: &lt;a href=&quot;https://github.com/newren/git-filter-repo&quot; rel=&quot;noreferrer&quot;&gt;https://github.com/newren/git-filter-repo&lt;/a&gt; . When installed it looks like a regular git command and can be called by &lt;code&gt;git filter-repo&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;You need only one file: the Python3 script git-filter-repo. Copy it to a path that is included in the PATH variable. On Windows you may have to change the first line of the script (refer INSTALL.md). You need Python3 installed installed on your system, but this is not a big deal.&lt;/p&gt;\n&lt;p&gt;First you can run&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;git filter-repo --analyze\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This helps you to determine what to do next.&lt;/p&gt;\n&lt;p&gt;You can delete your DVD-rip file everywhere:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;git filter-repo --invert-paths --path-match DVD-rip\n \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Filter-repo is really fast. A task that took around 9 hours on my computer by filter-branch, was completed in 4 minutes by filter-repo. You can do many more nice things with filter-repo. Refer to the documentation for that.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Do this on a copy of your repository. Many actions of filter-repo cannot be undone. filter-repo will change the commit hashes of all modified commits (of course) and all their descendants down to the last commits!&lt;/p&gt;\n    ","\n&lt;p&gt;These commands worked in my case:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;git filter-branch --force --index-filter &apos;git rm --cached -r --ignore-unmatch oops.iso&apos; --prune-empty --tag-name-filter cat -- --all\nrm -rf .git/refs/original/\ngit reflog expire --expire=now --all\ngit gc --prune=now\ngit gc --aggressive --prune=now\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It is little different from the above versions.&lt;/p&gt;\n\n&lt;p&gt;For those who need to push this to github/bitbucket (I only tested this with bitbucket):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# WARNING!!!\n# this will rewrite completely your bitbucket refs\n# will delete all branches that you didn&apos;t have in your local\n\ngit push --all --prune --force\n\n# Once you pushed, all your teammates need to clone repository again\n# git pull will not work\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;According to GitHub &lt;a href=&quot;https://docs.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository#using-filter-branch&quot; rel=&quot;noreferrer&quot;&gt;Documentation&lt;/a&gt;, just follow these steps:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Get rid of the large file&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;&lt;em&gt;Option 1: You don&apos;t want to keep the large file:&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;rm&lt;/span&gt; path/to/your/large/file        &lt;span class=&quot;hljs-comment&quot;&gt;# delete the large file&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;em&gt;Option 2: You want to keep the large file into an untracked directory&lt;/em&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;mkdir&lt;/span&gt; large_files                       &lt;span class=&quot;hljs-comment&quot;&gt;# create directory large_files&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;touch&lt;/span&gt; .gitignore                        &lt;span class=&quot;hljs-comment&quot;&gt;# create .gitignore file if needed&lt;/span&gt;\n&lt;span class=&quot;hljs-string&quot;&gt;&apos;/large_files/&apos;&lt;/span&gt; &amp;gt;&amp;gt; .gitignore           &lt;span class=&quot;hljs-comment&quot;&gt;# untrack directory large_files&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;mv&lt;/span&gt; path/to/your/large/file large_files/ &lt;span class=&quot;hljs-comment&quot;&gt;# move the large file into the untracked directory&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol start=&quot;2&quot;&gt;\n&lt;li&gt;Save your changes&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;git add path/to/your/large/file   &lt;span class=&quot;hljs-comment&quot;&gt;# add the deletion to the index&lt;/span&gt;\ngit commit -m &lt;span class=&quot;hljs-string&quot;&gt;&apos;delete large file&apos;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;# commit the deletion&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ol start=&quot;3&quot;&gt;\n&lt;li&gt;Remove the large file from all commits&lt;/li&gt;\n&lt;/ol&gt;\n&lt;pre class=&quot;lang-sh s-code-block&quot;&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;git filter-branch --force --index-filter \\\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;git rm --cached --ignore-unmatch path/to/your/large/file&quot;&lt;/span&gt; \\\n  --prune-empty --tag-name-filter &lt;span class=&quot;hljs-built_in&quot;&gt;cat&lt;/span&gt; -- --all\ngit push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I ran into this with a bitbucket account, where I had accidentally stored ginormous *.jpa backups of my site. &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;git filter-branch --prune-empty --index-filter &apos;git rm -rf --cached --ignore-unmatch MY-BIG-DIRECTORY-OR-FILE&apos; --tag-name-filter cat -- --all&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Relpace &lt;code&gt;MY-BIG-DIRECTORY&lt;/code&gt; with the folder in question to completely rewrite your history (&lt;em&gt;including tags&lt;/em&gt;). &lt;/p&gt;\n\n&lt;p&gt;source: &lt;a href=&quot;https://web.archive.org/web/20170727144429/http://naleid.com:80/blog/2012/01/17/finding-and-purging-big-files-from-git-history/&quot; rel=&quot;noreferrer&quot;&gt;https://web.archive.org/web/20170727144429/http://naleid.com:80/blog/2012/01/17/finding-and-purging-big-files-from-git-history/&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Just note that this commands can be very destructive. If more people are working on the repo they&apos;ll all have to pull the new tree. The three middle commands are not necessary if your goal is NOT to reduce the size. Because the filter branch creates a backup of the removed file and it can stay there for a long time. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ git filter-branch --index-filter &quot;git rm -rf --cached --ignore-unmatch YOURFILENAME&quot; HEAD\n$ rm -rf .git/refs/original/ \n$ git reflog expire --all \n$ git gc --aggressive --prune\n$ git push origin master --force\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;code&gt;git filter-branch --tree-filter &apos;rm -f path/to/file&apos; HEAD&lt;/code&gt; \nworked pretty well for me, although I ran into the same problem as described &lt;a href=&quot;https://stackoverflow.com/q/6403601/97443&quot;&gt;here&lt;/a&gt;, which I solved by following &lt;a href=&quot;https://stackoverflow.com/a/6404368/97443&quot;&gt;this suggestion&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The pro-git book has an entire chapter on &lt;a href=&quot;http://git-scm.com/book/en/Git-Tools-Rewriting-History&quot; rel=&quot;nofollow noreferrer&quot;&gt;rewriting history&lt;/a&gt; - have a look at the &lt;a href=&quot;http://git-scm.com/book/en/Git-Tools-Rewriting-History#The-Nuclear-Option:-filter-branch&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;filter-branch&lt;/code&gt;/Removing a File from Every Commit&lt;/a&gt; section.&lt;/p&gt;\n    ","\n&lt;p&gt;If you know your commit was recent instead of going through the entire tree do the following:\n&lt;code&gt;\ngit filter-branch --tree-filter &apos;rm LARGE_FILE.zip&apos; HEAD~10..HEAD\n&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;This will remove it from your history&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;git filter-branch --force --index-filter &apos;git rm -r --cached --ignore-unmatch bigfile.txt&apos; --prune-empty --tag-name-filter cat -- --all\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use &lt;a href=&quot;http://gitextensions.github.io/&quot; rel=&quot;noreferrer&quot;&gt;Git Extensions&lt;/a&gt;, it&apos;s a UI tool. It has a plugin named &quot;Find large files&quot; which finds lage files in repositories and allow removing them permenently.&lt;/p&gt;\n\n&lt;p&gt;Don&apos;t use &apos;git filter-branch&apos; before using this tool, since it won&apos;t be able to find files removed by &apos;filter-branch&apos; (Altough &apos;filter-branch&apos; does not remove files completely from the repository pack files).&lt;/p&gt;\n    ","\n&lt;p&gt;I basically did what was on this answer:\n&lt;a href=&quot;https://stackoverflow.com/a/11032521/1286423&quot;&gt;https://stackoverflow.com/a/11032521/1286423&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(for history, I&apos;ll copy-paste it here)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ git filter-branch --index-filter &quot;git rm -rf --cached --ignore-unmatch YOURFILENAME&quot; HEAD\n$ rm -rf .git/refs/original/ \n$ git reflog expire --all \n$ git gc --aggressive --prune\n$ git push origin master --force\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It didn&apos;t work, because I like to rename and move things a lot. So some big file were in folders that have been renamed, and I think the gc couldn&apos;t delete the reference to those files because of reference in &lt;code&gt;tree&lt;/code&gt; objects pointing to those file.\nMy ultimate solution to really kill it was to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# First, apply what&apos;s in the answer linked in the front\n# and before doing the gc --prune --aggressive, do:\n\n# Go back at the origin of the repository\ngit checkout -b newinit &amp;lt;sha1 of first commit&amp;gt;\n# Create a parallel initial commit\ngit commit --amend\n# go back on the master branch that has big file\n# still referenced in history, even though \n# we thought we removed them.\ngit checkout master\n# rebase on the newinit created earlier. By reapply patches,\n# it will really forget about the references to hidden big files.\ngit rebase newinit\n\n# Do the previous part (checkout + rebase) for each branch\n# still connected to the original initial commit, \n# so we remove all the references.\n\n# Remove the .git/logs folder, also containing references\n# to commits that could make git gc not remove them.\nrm -rf .git/logs/\n\n# Then you can do a garbage collection,\n# and the hidden files really will get gc&apos;ed\ngit gc --prune --aggressive\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My repo (the &lt;code&gt;.git&lt;/code&gt;) changed from 32MB to 388KB, that even filter-branch couldn&apos;t clean.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;code&gt;git filter-branch&lt;/code&gt; is a powerful command which you can use it to delete a huge file from the commits history. The file will stay for a while and Git will remove it in the next garbage collection.\nBelow is the full process from &lt;a href=&quot;https://www.gloomycorner.com/deleting-files-from-git-commit-history/&quot; rel=&quot;nofollow noreferrer&quot;&gt;deleteing files from commit history&lt;/a&gt;. For safety, below process runs the commands on a new branch first. If the result is what you needed, then reset it back to the branch you actually want to change.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Do it in a new testing branch\n$ git checkout -b test\n\n# Remove file-name from every commit on the new branch\n# --index-filter, rewrite index without checking out\n# --cached, remove it from index but not include working tree\n# --ignore-unmatch, ignore if files to be removed are absent in a commit\n# HEAD, execute the specified command for each commit reached from HEAD by parent link\n$ git filter-branch --index-filter &apos;git rm --cached --ignore-unmatch file-name&apos; HEAD\n\n# The output is OK, reset it to the prior branch master\n$ git checkout master\n$ git reset --soft test\n\n# Remove test branch\n$ git branch -d test\n\n# Push it with force\n$ git push --force origin master\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You can do this using the &lt;code&gt;branch filter&lt;/code&gt; command:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;git filter-branch --tree-filter &apos;rm -rf path/to/your/file&apos; HEAD&lt;/code&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;When you run into this problem, &lt;code&gt;git rm&lt;/code&gt; will not suffice, as git remembers that the file existed once in our history, and thus will keep a reference to it.&lt;/p&gt;\n\n&lt;p&gt;To make things worse, rebasing is not easy either, because any references to the blob will prevent git garbage collector from cleaning up the space. This includes remote references and reflog references.&lt;/p&gt;\n\n&lt;p&gt;I put together &lt;code&gt;git forget-blob&lt;/code&gt;, a little script that tries removing all these references, and then uses git filter-branch to rewrite every commit in the branch.&lt;/p&gt;\n\n&lt;p&gt;Once your blob is completely unreferenced, &lt;code&gt;git gc&lt;/code&gt; will get rid of it&lt;/p&gt;\n\n&lt;p&gt;The usage is pretty simple &lt;code&gt;git forget-blob file-to-forget&lt;/code&gt;. You can get more info here&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://ownyourbits.com/2017/01/18/completely-remove-a-file-from-a-git-repository-with-git-forget-blob/&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://ownyourbits.com/2017/01/18/completely-remove-a-file-from-a-git-repository-with-git-forget-blob/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I put this together thanks to the answers from Stack Overflow and some blog entries. Credits to them!&lt;/p&gt;\n    ","\n&lt;p&gt;Other than &lt;code&gt;git filter-branch&lt;/code&gt; (slow but pure git solution) and &lt;a href=&quot;https://rtyley.github.io/bfg-repo-cleaner/&quot; rel=&quot;nofollow noreferrer&quot;&gt;BFG&lt;/a&gt; (easier and very performant), there is also another tool to filter with good performance:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/xoofx/git-rocket-filter&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/xoofx/git-rocket-filter&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;From its description:&lt;/p&gt;\n\n&lt;p&gt;The purpose of git-rocket-filter is similar to the command &lt;code&gt;git-filter-branch&lt;/code&gt; while providing the following unique features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Fast rewriting of commits and trees (by an order of x10 to x100).&lt;/li&gt;\n&lt;li&gt;Built-in support for both white-listing with --keep (keeps files or directories) and black-listing with --remove options.&lt;/li&gt;\n&lt;li&gt;Use of .gitignore like pattern for tree-filtering&lt;/li&gt;\n&lt;li&gt;Fast and easy C# Scripting for both commit filtering and tree filtering&lt;/li&gt;\n&lt;li&gt;Support for scripting in tree-filtering per file/directory pattern&lt;/li&gt;\n&lt;li&gt;Automatically prune empty/unchanged commit, including merge commits&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;This works perfectly for me : in git extensions :&lt;/p&gt;\n&lt;p&gt;right click on the selected commit :&lt;/p&gt;\n&lt;p&gt;reset current branch to here :&lt;/p&gt;\n&lt;p&gt;hard reset ;&lt;/p&gt;\n&lt;p&gt;It&apos;s surprising nobody else is able to give this simple answer.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/atZ6T.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/atZ6T.png&quot; alt=&quot;reset current branch to here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/tDqKF.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/tDqKF.png&quot; alt=&quot;hard reset&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;pre&gt;&lt;code&gt;git reset --soft HEAD~1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It will keep the changes but remove the commit then you can re-commit those changes.&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This article should help you &lt;a href=&quot;http://help.github.com/removing-sensitive-data/&quot; rel=&quot;nofollow noreferrer&quot;&gt;help.github.com/removing-sensitive-data&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/219217/mbo&quot; title=&quot;29,259 reputation&quot; class=&quot;comment-user&quot;&gt;MBO&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment18728403_2100907&quot;&gt;&lt;span title=&quot;2010-01-20 11:23:07Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jan 20, 2010 at 11:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Related: &lt;a href=&quot;http://stackoverflow.com/questions/307828/completely-remove-unwanted-file-from-git-repository-history&quot;&gt;Completely remove file from all Git repository commit history&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;span class=&quot;comment-user&quot;&gt;user456814&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment34860561_2100907&quot;&gt;&lt;span title=&quot;2014-04-04 00:34:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 4, 2014 at 0:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Note that if your large file is in a subdir you&apos;ll need to specify the full relative path.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/650492/johan&quot; title=&quot;73,200 reputation&quot; class=&quot;comment-user&quot;&gt;Johan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment51132831_2100907&quot;&gt;&lt;span title=&quot;2015-07-23 14:36:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 23, 2015 at 14:36&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Also related &lt;a href=&quot;https://help.github.com/en/articles/removing-files-from-a-repositorys-history&quot; rel=&quot;nofollow noreferrer&quot;&gt;help.github.com/en/articles/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9205413/frederj&quot; title=&quot;1,323 reputation&quot; class=&quot;comment-user&quot;&gt;frederj&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment99270113_2100907&quot;&gt;&lt;span title=&quot;2019-05-27 19:43:44Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 27, 2019 at 19:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Please have also a look at my answer which uses &lt;code&gt;git filter-repo&lt;/code&gt;. You should not longer use &lt;code&gt;git filter-branch&lt;/code&gt; as it is very slow and often difficult to use. &lt;code&gt;git filter-repo&lt;/code&gt; is around 100 times faster.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10533011/donat&quot; title=&quot;3,309 reputation&quot; class=&quot;comment-user&quot;&gt;Donat&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment109901206_2100907&quot;&gt;&lt;span title=&quot;2020-06-01 19:50:18Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 1, 2020 at 19:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@tony It&apos;s worth repeating the entire cloning &amp;amp; clearing procedure to see if the message asking you to pull re-occurs, but it&apos;s almost certainly because your remote server is configured to reject non-fast-forward updates (ie, it&apos;s configured to stop you from losing history - which is exactly what you want to do). You need to get that setting changed on the remote, or failing that, push the updated repo history to a brand new blank repo.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/438886/roberto-tyley&quot; title=&quot;23,295 reputation&quot; class=&quot;comment-user&quot;&gt;Roberto Tyley&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment33300826_17890278&quot;&gt;&lt;span title=&quot;2014-02-23 23:09:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 23, 2014 at 23:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@RobertoTyley Thanks. I have tried it 3 different times and all resulted with the same message. So I&apos;m also thinking that you&apos;re right about the remote server being configured to reject the non-fast-forward updates. I&apos;ll consider just pushing the updated repo to a brand new repo. Thank you!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/671837/tony&quot; title=&quot;923 reputation&quot; class=&quot;comment-user&quot;&gt;Tony&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment33301230_17890278&quot;&gt;&lt;span title=&quot;2014-02-23 23:30:39Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 23, 2014 at 23:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@RobertoTyley Perfect, you save my time, thanks very much. By the way, maybe should do &lt;code&gt;git push --force&lt;/code&gt; after your steps, otherwise the remote repo still not changed.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2722270/li2&quot; title=&quot;1,722 reputation&quot; class=&quot;comment-user&quot;&gt;li2&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment51092390_17890278&quot;&gt;&lt;span title=&quot;2015-07-22 16:16:04Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 22, 2015 at 16:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;+1 to adding &lt;code&gt;git push  --force&lt;/code&gt;.  Also worth noting:  force pushes may not be allowed by the remote (gitlab.com doesn&apos;t, by default.  Had to &quot;unprotect&quot; the branch).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1054322/matrixmanatyrservice&quot; title=&quot;6,703 reputation&quot; class=&quot;comment-user&quot;&gt;MatrixManAtYrService&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment52871995_17890278&quot;&gt;&lt;span title=&quot;2015-09-10 15:51:50Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 10, 2015 at 15:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Instead of &lt;code&gt;--strip-blobs-bigger-than 100M&lt;/code&gt; you can also use &lt;code&gt;-b 100M&lt;/code&gt; according to help.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/614241/kon-psych&quot; title=&quot;596 reputation&quot; class=&quot;comment-user&quot;&gt;kon psych&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment59136554_17890278&quot;&gt;&lt;span title=&quot;2016-03-01 18:47:02Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 1, 2016 at 18:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Why i can&apos;t push when using git filter-branch, failed to push some refs to &apos;git@bitbucket.org:product/myproject.git&apos; To prevent you from losing history, non-fast-forward updates were rejected Merge the remote changes before pushing again.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/707187/agung-prasetyo&quot; title=&quot;4,208 reputation&quot; class=&quot;comment-user&quot;&gt;Agung Prasetyo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment20531675_2158271&quot;&gt;&lt;span title=&quot;2013-02-04 10:49:36Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 4, 2013 at 10:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Add the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--force&lt;/code&gt;) option to your &lt;code&gt;git push&lt;/code&gt; command: Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it. This flag disables the check. This can cause the remote repository to lose commits; use it with care.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/123109/greg-bacon&quot; title=&quot;128,585 reputation&quot; class=&quot;comment-user&quot;&gt;Greg Bacon&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment20553879_2158271&quot;&gt;&lt;span title=&quot;2013-02-04 23:47:04Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 4, 2013 at 23:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is a wonderfully thorough answer explaining the use of git-filter-branch to remove unwanted large files from history, but it&apos;s worth noting that since Greg wrote his answer, The BFG Repo-Cleaner has been released, which is often faster and easier to use - see my answer for details.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/438886/roberto-tyley&quot; title=&quot;23,295 reputation&quot; class=&quot;comment-user&quot;&gt;Roberto Tyley&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment31816052_2158271&quot;&gt;&lt;span title=&quot;2014-01-15 15:09:46Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 15, 2014 at 15:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;After I do either of the procedures above, the remote repository (on GitHub) does NOT delete the large file. Only the local does. I force push and nada.  What am I missing?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1286760/4z4t4r&quot; title=&quot;2,192 reputation&quot; class=&quot;comment-user&quot;&gt;4Z4T4R&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment36306301_2158271&quot;&gt;&lt;span title=&quot;2014-05-13 21:11:47Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 13, 2014 at 21:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;this also works on dirs. &lt;code&gt;... &quot;git rm --cached -rf --ignore-unmatch path/to/dir&quot;...&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/563420/rynop&quot; title=&quot;45,948 reputation&quot; class=&quot;comment-user&quot;&gt;rynop&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment39634896_2158271&quot;&gt;&lt;span title=&quot;2014-08-20 16:08:36Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 20, 2014 at 16:08&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Much better than bfg. I was unable to clean file from a git with bfg, but this command helped&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3027445/podarok&quot; title=&quot;517 reputation&quot; class=&quot;comment-user&quot;&gt;podarok&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment63719168_30274113&quot;&gt;&lt;span title=&quot;2016-07-01 11:56:40Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 1, 2016 at 11:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is great. Just a note for others that you&apos;ll have to do this per branch if the large file is in multiple branches.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1240134/james&quot; title=&quot;1,930 reputation&quot; class=&quot;comment-user&quot;&gt;James&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment65410192_30274113&quot;&gt;&lt;span title=&quot;2016-08-19 01:38:24Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 19, 2016 at 1:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This worked for me on a local commit that I couldn&apos;t upload to GitHub. And it seemed simpler than the other solutions.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1493699/richard-g&quot; title=&quot;4,609 reputation&quot; class=&quot;comment-user&quot;&gt;Richard G&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment71232003_30274113&quot;&gt;&lt;span title=&quot;2017-02-03 16:32:49Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 3, 2017 at 16:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;If you know the &lt;code&gt;commit&lt;/code&gt; where you put the file in (say &lt;code&gt;35dsa2&lt;/code&gt;), you can replace &lt;code&gt;HEAD&lt;/code&gt; with &lt;code&gt;35dsa2..HEAD&lt;/code&gt;. &lt;code&gt;tree-filter&lt;/code&gt; is much slower than &lt;code&gt;index-filter&lt;/code&gt; that way it wont try to checkout all the commits and rewrite them. if you use HEAD, it will try to do that.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4752883/alpha-989&quot; title=&quot;4,491 reputation&quot; class=&quot;comment-user&quot;&gt;alpha_989&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment83729246_30274113&quot;&gt;&lt;span title=&quot;2018-01-21 20:10:59Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 21, 2018 at 20:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;After running the above command, you then have to run &lt;code&gt;git push --all --force&lt;/code&gt; to get remote&apos;s history to match the amended version you have now created locally (@stevec)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/115237/noel-evans&quot; title=&quot;7,547 reputation&quot; class=&quot;comment-user&quot;&gt;Noel Evans&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment110387570_30274113&quot;&gt;&lt;span title=&quot;2020-06-16 19:05:54Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 16, 2020 at 19:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;If your repo has any tags, you likely also want to add the flag &lt;code&gt;--tag-name-filter cat&lt;/code&gt; to re-tag the new corresponding commits as they are rewritten, i.e., &lt;code&gt;git filter-branch --index-filter &apos;git rm --cached --ignore-unmatch a b&apos; --tag-name-filter cat HEAD&lt;/code&gt; (see &lt;a href=&quot;https://stackoverflow.com/a/5574694/345236&quot;&gt;this related answer&lt;/a&gt;)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/345236/naitsirhc&quot; title=&quot;4,534 reputation&quot; class=&quot;comment-user&quot;&gt;naitsirhc&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment84352244_46615578&quot;&gt;&lt;span title=&quot;2018-02-08 03:25:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 8, 2018 at 3:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Mac instructions and some other info appear in the original linked post&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/395180/nruth&quot; title=&quot;1,115 reputation&quot; class=&quot;comment-user&quot;&gt;nruth&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment85240339_46615578&quot;&gt;&lt;span title=&quot;2018-03-05 18:55:44Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 5, 2018 at 18:55&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;git filter-branch --index-filter &apos;git rm --cached --ignore-unmatch &amp;lt;filename&amp;gt;&apos; HEAD&lt;/code&gt; workorder right of the bat&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3767229/eleijonmarck&quot; title=&quot;4,132 reputation&quot; class=&quot;comment-user&quot;&gt;eleijonmarck&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment86339999_46615578&quot;&gt;&lt;span title=&quot;2018-04-05 06:00:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 5, 2018 at 6:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;my favourite answer. a slight tweak to use on mac os (using gnu commands) &lt;code&gt;git rev-list --objects --all \\ | git cat-file --batch-check=&apos;%(objecttype) %(objectname) %(objectsize) %(rest)&apos; \\ | awk &apos;/^blob/ {print substr($0,6)}&apos; \\ | sort --numeric-sort --key=2 \\ | gnumfmt --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1168848/florian-oswald&quot; title=&quot;4,904 reputation&quot; class=&quot;comment-user&quot;&gt;Florian Oswald&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment98101039_46615578&quot;&gt;&lt;span title=&quot;2019-04-16 14:08:21Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 16, 2019 at 14:08&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thank you,  however for Mac OSX + zsh it did not work,  and I modified it to a simpler version :    &amp;lt;code&amp;gt; git rev-list --objects --all git cat-file --batch-check=&apos;%(objecttype) %(objectname) %(objectsize) %(rest)&apos; awk &apos;/^blob/ {print substr($0,6)}&apos; sort --numeric-sort --key=2&amp;lt;/code&amp;gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/470307/vasili-pascal&quot; title=&quot;2,776 reputation&quot; class=&quot;comment-user&quot;&gt;Vasili Pascal&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment103456379_46615578&quot;&gt;&lt;span title=&quot;2019-10-26 09:21:08Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 26, 2019 at 9:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 5 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Worked like a charm for me.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4816590/ramon-vasconcelos&quot; title=&quot;1,468 reputation&quot; class=&quot;comment-user&quot;&gt;Ramon Vasconcelos&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment86717597_43640996&quot;&gt;&lt;span title=&quot;2018-04-16 07:17:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 16, 2018 at 7:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This worked for me as well. Gets rid of a specific folder (in my case, one that contained files too large or a Github repo) on the repository, but keeps it on the local file system in case it exists.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2455710/skizzo&quot; title=&quot;373 reputation&quot; class=&quot;comment-user&quot;&gt;skizzo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment89442833_43640996&quot;&gt;&lt;span title=&quot;2018-07-08 12:13:14Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 8, 2018 at 12:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Worked for me! no history is left which is potentially confusing (if someone where to clone right now), make sure you have a plan to update any broken links, dependencies, etc&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3844056/ruoho-ruotsi&quot; title=&quot;1,215 reputation&quot; class=&quot;comment-user&quot;&gt;ruoho ruotsi&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment99889899_43640996&quot;&gt;&lt;span title=&quot;2019-06-19 05:11:25Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 19, 2019 at 5:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I tried the &lt;code&gt;filter-branch&lt;/code&gt; methods described in the other answers, but they didn&apos;t work. After filtering, I still got file size too big error when pushing to GitHub. This solution worked, most likely because it removed the big file from ALL occurrences in ALL branches.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9723036/fanchen-bao&quot; title=&quot;1,973 reputation&quot; class=&quot;comment-user&quot;&gt;Fanchen Bao&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111727154_43640996&quot;&gt;&lt;span title=&quot;2020-07-30 22:43:09Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 30, 2020 at 22:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I guess it&apos;s only me that didn&apos;t realize this command will also nuke the file from the project itself, not just the git repo. Certainly worked though!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/863264/karl&quot; title=&quot;1,702 reputation&quot; class=&quot;comment-user&quot;&gt;Karl&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123710438_43640996&quot;&gt;&lt;span title=&quot;2021-11-16 02:38:46Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 16, 2021 at 2:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How do I submit the applied changes (on my local repository) to a remote repository? Or this is not possible, and I should clone the amended repo to a new one?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/336558/diman82&quot; title=&quot;582 reputation&quot; class=&quot;comment-user&quot;&gt;diman82&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116682861_61602985&quot;&gt;&lt;span title=&quot;2021-02-01 15:15:57Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 1, 2021 at 15:15&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@diman82: Best would be to make a new empty repository, set the remote repository from your cloned repo to that and push. This is common to all these answers here: You will get many new commit hashes. This is unavoidable because the commit hashes guarantee for the content and the history of a repo. The alternative way is dangerous, you could make a force push and then run gc to get rid of the files. But do not do this unless you have tested very well and you are aware of all the consequences !&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10533011/donat&quot; title=&quot;3,309 reputation&quot; class=&quot;comment-user&quot;&gt;Donat&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116689479_61602985&quot;&gt;&lt;span title=&quot;2021-02-01 19:17:15Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 1, 2021 at 19:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I&apos;ve already pushed (with --force option), worked well (to a cloned repository, as a precaution).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/336558/diman82&quot; title=&quot;582 reputation&quot; class=&quot;comment-user&quot;&gt;diman82&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116739511_61602985&quot;&gt;&lt;span title=&quot;2021-02-03 12:19:35Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 3, 2021 at 12:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;git filter-repo --strip-blobs-bigger-than 10M&lt;/code&gt; worked much better on my end&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1120210/lucas&quot; title=&quot;116 reputation&quot; class=&quot;comment-user&quot;&gt;Lucas&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120810493_61602985&quot;&gt;&lt;span title=&quot;2021-07-13 06:19:29Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 13, 2021 at 6:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This worked well for me. filter-repo has good documentation for more advanced cases but in mine, I just needed to get rid of big file I accidentally committed. In my case, it worked fine to duplicate the project dir, run the command in the new version, re-add the remote and push (no strictly fresh clone).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3234482/alex-l&quot; title=&quot;430 reputation&quot; class=&quot;comment-user&quot;&gt;Alex L&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127850302_61602985&quot;&gt;&lt;span title=&quot;2022-05-24 22:25:07Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 24 at 22:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How is it different from above, why is it better?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1240268/andy-hayden&quot; title=&quot;331,675 reputation&quot; class=&quot;comment-user&quot;&gt;Andy Hayden&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24745635_17100265&quot;&gt;&lt;span title=&quot;2013-06-14 09:08:44Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 14, 2013 at 9:08&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;For some reason mkljun version is not reduced git space in my case, I already had removed the files from index by using &lt;code&gt;git rm --cached files&lt;/code&gt;. The Greg Bacon&apos;s proposition is more complete, and quite the same to this mine, but he missed the --force index for cases when you are using filter-branch for multiple times, and he wrote so much info, that my version is like resume of it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2215679/kostanos&quot; title=&quot;8,634 reputation&quot; class=&quot;comment-user&quot;&gt;Kostanos&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24755253_17100265&quot;&gt;&lt;span title=&quot;2013-06-14 14:09:31Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 14, 2013 at 14:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This really helped but I needed to use the &lt;code&gt;-f&lt;/code&gt; option not just &lt;code&gt;-rf&lt;/code&gt; here &lt;code&gt;git rm --cached -rf --ignore-unmatch oops.iso&lt;/code&gt; instead of &lt;code&gt;git rm --cached -r --ignore-unmatch oops.iso&lt;/code&gt; as per @lfender6445 below&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/992999/drstevok&quot; title=&quot;705 reputation&quot; class=&quot;comment-user&quot;&gt;drstevok&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment67607217_17100265&quot;&gt;&lt;span title=&quot;2016-10-21 06:18:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 21, 2016 at 6:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;can you elaborate on how the &quot;remove the large file from all commits&quot; step worked, that was amazing!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/315523/clayg&quot; title=&quot;327 reputation&quot; class=&quot;comment-user&quot;&gt;clayg&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115121078_63830907&quot;&gt;&lt;span title=&quot;2020-12-02 21:51:11Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 2, 2020 at 21:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks @clayg. I don&apos;t understand deeply the &lt;code&gt;git filter-branch&lt;/code&gt; command, as I wrote, I just followed the GitHub documentation. What I know is that this command browses through your &lt;code&gt;.git&lt;/code&gt; folder and find all tracks of the given file and removes it from the history.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4845941/kevin-r&quot; title=&quot;1,275 reputation&quot; class=&quot;comment-user&quot;&gt;Kevin R.&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115758610_63830907&quot;&gt;&lt;span title=&quot;2020-12-28 10:10:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 28, 2020 at 10:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@KevinR. you have to force push, isnt it?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2195440/exploring&quot; title=&quot;3,255 reputation&quot; class=&quot;comment-user&quot;&gt;Exploring&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127312410_63830907&quot;&gt;&lt;span title=&quot;2022-04-29 01:54:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 29 at 1:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This response helped me, except the script in the answer has a slight issue and it doesn&apos;t search in all branches form me. But the command in the link did it perfectly.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/16073/ali-b&quot; title=&quot;546 reputation&quot; class=&quot;comment-user&quot;&gt;Ali B&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment52700990_25595545&quot;&gt;&lt;span title=&quot;2015-09-05 20:20:13Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 5, 2015 at 20:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Add &lt;code&gt;-f&lt;/code&gt; after &lt;code&gt;git filter-branch&lt;/code&gt;, if need to overwrite previous backup&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5772735/sheldon&quot; title=&quot;449 reputation&quot; class=&quot;comment-user&quot;&gt;Sheldon&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128003589_25595545&quot;&gt;&lt;span title=&quot;2022-06-01 09:32:38Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 1 at 9:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Do NOT run these commands unless you want to create immense pain for yourself. It deleted a lot of my original source code files. I assumed it would purge some large files from my commit history in GIT (as per the original question), however, I think this command is designed to permanently purge files from your original source code tree (big difference!). My system: Windows, VS2012, Git Source Control Provider.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/107409/contango&quot; title=&quot;71,497 reputation&quot; class=&quot;comment-user&quot;&gt;Contango&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment17654365_11032521&quot;&gt;&lt;span title=&quot;2012-10-22 11:16:29Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 22, 2012 at 11:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I used this command: &lt;code&gt;git filter-branch --force --index-filter &apos;git rm --cached -r --ignore-unmatch oops.iso&apos; --prune-empty --tag-name-filter cat -- --all&lt;/code&gt; instead of first one from your code&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2215679/kostanos&quot; title=&quot;8,634 reputation&quot; class=&quot;comment-user&quot;&gt;Kostanos&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24737822_11032521&quot;&gt;&lt;span title=&quot;2013-06-14 02:31:59Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 14, 2013 at 2:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@mkljun, please at least remove &quot;git push origin master --force&quot;! First of all it is not related to the original question - author didn&apos;t ask how to edit commits and push changes to some repository. And second - this is dangerous, you really can delete a lot of files and push changes to remote repository without first check what was deleted is not a good idea.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/589119/ezh&quot; title=&quot;475 reputation&quot; class=&quot;comment-user&quot;&gt;Ezh&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment121716912_11032521&quot;&gt;&lt;span title=&quot;2021-08-21 10:27:51Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 21, 2021 at 10:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This works in my case. I run this on your master branch.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5835121/smplyjr&quot; title=&quot;704 reputation&quot; class=&quot;comment-user&quot;&gt;SMPLYJR&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment106685935_59736349&quot;&gt;&lt;span title=&quot;2020-02-20 01:14:31Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 20, 2020 at 1:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This method is waaay too slow for large repositories.  It took over an hour to list the large files.  Then when I go to delete files, after an hour it is only 1/3 of the way through processing the first file I want to delete.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/192221/kristianp&quot; title=&quot;5,099 reputation&quot; class=&quot;comment-user&quot;&gt;kristianp&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment80067742_41408667&quot;&gt;&lt;span title=&quot;2017-10-04 04:19:42Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 4, 2017 at 4:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Yes, its slow, but does the work... Do you know anything quicker?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2546759/nir&quot; title=&quot;1,638 reputation&quot; class=&quot;comment-user&quot;&gt;Nir&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment80179900_41408667&quot;&gt;&lt;span title=&quot;2017-10-06 21:03:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 6, 2017 at 21:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Haven&apos;t used it, but BFG Repo-Cleaner, as per another answer on this page.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/192221/kristianp&quot; title=&quot;5,099 reputation&quot; class=&quot;comment-user&quot;&gt;kristianp&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment80226940_41408667&quot;&gt;&lt;span title=&quot;2017-10-09 04:42:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 9, 2017 at 4:42&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;you should get this in homebrew&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/988565/cameron-e&quot; title=&quot;1,800 reputation&quot; class=&quot;comment-user&quot;&gt;Cameron E&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment74953681_41806272&quot;&gt;&lt;span title=&quot;2017-05-14 07:54:33Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 14, 2017 at 7:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Worked for me but me mindful this deletes everything after that point&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/11277108/jossy&quot; title=&quot;292 reputation&quot; class=&quot;comment-user&quot;&gt;Jossy&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment111377300_62592234&quot;&gt;&lt;span title=&quot;2020-07-19 16:22:30Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 19, 2020 at 16:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;No-one gave this answer because it does not answer the question. He wants a specific file removed from the history. Your answer nukes everything in the repo after a certain point.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/36790/jason-kelley&quot; title=&quot;575 reputation&quot; class=&quot;comment-user&quot;&gt;Jason Kelley&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment118664265_62592234&quot;&gt;&lt;span title=&quot;2021-04-16 22:51:52Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 16, 2021 at 22:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;this is a joke right?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3091630/williem&quot; title=&quot;1,111 reputation&quot; class=&quot;comment-user&quot;&gt;Williem&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128782130_62592234&quot;&gt;&lt;span title=&quot;2022-07-08 14:11:33Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;yesterday&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":310,"title":"How to remove/delete a large file from commit history in the Git repository?","content":"\n                \n&lt;p&gt;I accidentally dropped a DVD-rip into a website project, then carelessly &lt;code&gt;git commit -a -m ...&lt;/code&gt;, and, zap, the repo was bloated by 2.2 gigs. Next time I made some edits, deleted the video file, and committed everything, but the compressed file is still there in the repository, in history.&lt;/p&gt;\n&lt;p&gt;I know I can start branches from those commits and rebase one branch onto another. But what should I do to merge the 2 commits so that the big file doesn&apos;t show in the history and is cleaned in the garbage collection procedure?&lt;/p&gt;\n    ","slug":"how-to-removedelete-a-large-file-from-commit-history-in-the-git-repository-1657387589093","postType":"QUESTION","createdAt":"2022-07-09T17:26:29.000Z","updatedAt":"2022-07-09T17:26:29.000Z","tags":[{"id":1835,"name":"git-rewrite-history","slug":"git-rewrite-history","createdAt":"2022-07-09T17:26:29.000Z","updatedAt":"2022-07-09T17:26:29.000Z","Questions_Tags":{"questionId":310,"tagId":1835}}]}]}},"__N_SSG":true}