{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;My full answer is &lt;a href=&quot;https://stackoverflow.com/questions/25647881/android-asynctask-example-and-explanation/25647882#25647882&quot;&gt;here&lt;/a&gt;, but here is an explanatory image to supplement the other answers on this page. For me, understanding where all the variables were going was the most confusing part in the beginning.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/ytin1.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/ytin1.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Ok, you are trying to access the GUI via another thread. This, in the main, is not good practice.&lt;/p&gt;\n\n&lt;p&gt;The AsyncTask executes everything in &lt;code&gt;doInBackground()&lt;/code&gt; inside of another thread, which does not have access to the GUI where your views are.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;preExecute()&lt;/code&gt; and &lt;code&gt;postExecute()&lt;/code&gt; offer you access to the GUI before and after the heavy lifting occurs in this new thread, and you can even pass the result of the long operation to &lt;code&gt;postExecute()&lt;/code&gt; to then show any results of processing.&lt;/p&gt;\n\n&lt;p&gt;See these lines where you are later updating your TextView:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; findViewById(R.id.output);\ntxt.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Put them in &lt;code&gt;onPostExecute()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You will then see your TextView text updated after the &lt;code&gt;doInBackground&lt;/code&gt; completes.&lt;/p&gt;\n\n&lt;p&gt;I noticed that your onClick listener does not check to see which View has been selected. I find the easiest way to do this is via switch statements. I have a complete class edited below with all suggestions to save confusion.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.app.&lt;span class=&quot;hljs-type&quot;&gt;Activity&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.&lt;span class=&quot;hljs-type&quot;&gt;AsyncTask&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.os.&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.provider.&lt;span class=&quot;hljs-type&quot;&gt;Settings&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;System&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.view.&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.&lt;span class=&quot;hljs-type&quot;&gt;Button&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.widget.&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.view.&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;OnClickListener&lt;/span&gt;;\n\npublic &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTaskActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;OnClickListener&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-type&quot;&gt;Button&lt;/span&gt; btn;\n    &lt;span class=&quot;hljs-type&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;?, ?, ?&amp;gt; runningTask;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n        setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.main);\n        btn = findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.button1);\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Because we implement OnClickListener, we only&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// have to pass &quot;this&quot; (much easier)&lt;/span&gt;\n        btn.setOnClickListener(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    public void onClick(&lt;span class=&quot;hljs-type&quot;&gt;View&lt;/span&gt; view) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Detect the view that was &quot;clicked&quot;&lt;/span&gt;\n        switch (view.getId()) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.button1:\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (runningTask != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n                runningTask.cancel(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n            runningTask = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;LongOperation&lt;/span&gt;();\n            runningTask.execute();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onDestroy() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onDestroy();\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Cancel running task(s) to avoid memory leaks&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (runningTask != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            runningTask.cancel(&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;String&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt;... params) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-type&quot;&gt;Thread&lt;/span&gt;.sleep(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InterruptedException&lt;/span&gt; e) {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// We were cancelled; stop sleeping!&lt;/span&gt;\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result) {\n            &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.output);\n            txt.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// txt.setText(result);&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// You might want to change &quot;executed&quot; for the returned string&lt;/span&gt;\n            &lt;span class=&quot;hljs-comment&quot;&gt;// passed into onPostExecute(), but that is up to you&lt;/span&gt;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I&apos;m sure it is executing properly, but you&apos;re trying to change the UI elements in the background thread and that won&apos;t do.&lt;/p&gt;\n\n&lt;p&gt;Revise your call and AsyncTask as follows:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Calling Class&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I personally suggest using &lt;code&gt;onPostExecute()&lt;/code&gt; wherever you execute your AsyncTask thread and not in the class that extends AsyncTask itself. I think it makes the code easier to read especially if you need the AsyncTask in multiple places handling the results slightly different.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongThread&lt;/span&gt;() {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n        txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(result);\n    }\n}.&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;LongThread class (extends AsyncTask):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... params&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;InterruptedException&lt;/span&gt; e) {\n            e.&lt;span class=&quot;hljs-title function_&quot;&gt;printStackTrace&lt;/span&gt;();\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;;\n}      \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;a href=&quot;http://code2concept.blogspot.in/2015/01/asynctask-android-example.html&quot; rel=&quot;noreferrer&quot;&gt;Concept and code here&lt;/a&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I have created a simple example for using AsyncTask of Android. It starts with &lt;code&gt;onPreExecute(), doInBackground(), publishProgress()&lt;/code&gt; and finally &lt;code&gt;onProgressUpdate()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;In this, doInBackground() works as a background thread, while other works in the UI Thread. You can&apos;t access an UI element in doInBackground(). The sequence is the same as I have mentioned.&lt;/p&gt;\n\n&lt;p&gt;However, if you need to update any widget from &lt;code&gt;doInBackground&lt;/code&gt;, you can &lt;code&gt;publishProgress&lt;/code&gt; from &lt;code&gt;doInBackground&lt;/code&gt; which will call &lt;code&gt;onProgressUpdate&lt;/code&gt; to update your UI widget.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;TestAsync&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; {\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; = &lt;span class=&quot;hljs-title function_&quot;&gt;getClass&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getSimpleName&lt;/span&gt;();\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; PreExceute&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;On pre Exceute......&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void...arg0&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; DoINBackGround&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;On doInBackground...&quot;&lt;/span&gt;);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++){\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;(i);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;publishProgress&lt;/span&gt;(i);\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;You are at PostExecute&quot;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer...a&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(a);\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; onProgressUpdate&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;You are in progress update ... &quot;&lt;/span&gt; + a[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;TAG&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&quot; onPostExecute&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; + result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Call it like this in your activity:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;TestAsync&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/os/AsyncTask.html&quot; rel=&quot;noreferrer&quot;&gt;Developer Reference Here&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Move these two lines:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (TextView) findViewById(R.id.output);\ntxt.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;out of your AsyncTask&apos;s &lt;code&gt;doInBackground&lt;/code&gt; method and put them in the &lt;code&gt;onPostExecute&lt;/code&gt; method. Your &lt;code&gt;AsyncTask&lt;/code&gt; should look something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;String&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;... params) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;Thread&lt;/span&gt;.sleep(&lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// no need for a loop&lt;/span&gt;\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InterruptedException&lt;/span&gt; e) {\n            &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;LongOperation&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Interrupted&quot;&lt;/span&gt;, e);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Interrupted&quot;&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;;\n    }      \n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result) {               \n        &lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-type&quot;&gt;TextView&lt;/span&gt;) findViewById(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.id.output);\n        txt.setText(result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;How to memorize the parameters used in AsyncTask?&lt;/h1&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Don&apos;t&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If you are new to AsyncTask then it is very common to get confused while writing an AsyncTask. The main culprits are the parameters used in the AsyncTask, i.e., &lt;code&gt;AsyncTask&amp;lt;A, B, C&amp;gt;&lt;/code&gt;. Based on the &lt;strong&gt;A, B, C (arguments)&lt;/strong&gt; signature of the methods differs which makes things even more confusing.&lt;/p&gt;\n\n&lt;h1&gt;Keep it simple!&lt;/h1&gt;\n\n&lt;p&gt;The key is &lt;strong&gt;don&apos;t memorize&lt;/strong&gt;. If you can visualize what your task really needs to do then writing the AsyncTask with the correct signature at the first attempt would be a piece of cake. Just figure out what your &lt;code&gt;Input&lt;/code&gt;, &lt;code&gt;Progress&lt;/code&gt;, and &lt;code&gt;Output&lt;/code&gt; are, and you will be good to go.&lt;/p&gt;\n\n&lt;h2&gt;So what is an AsyncTask?&lt;/h2&gt;\n\n&lt;p&gt;AsyncTask is a background task that runs in the background thread. It takes an &lt;code&gt;Input&lt;/code&gt;, performs &lt;code&gt;Progress&lt;/code&gt; and gives an &lt;code&gt;Output&lt;/code&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;strong&gt;I.e.&lt;/strong&gt;, &lt;code&gt;AsyncTask&amp;lt;Input, Progress, Output&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/uaRqY.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/uaRqY.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;h3&gt;What is the relationship with methods?&lt;/h3&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Between &lt;code&gt;AsyncTask&lt;/code&gt; and &lt;code&gt;doInBackground()&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/IE6tI.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/IE6tI.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;&lt;code&gt;doInBackground()&lt;/code&gt; and &lt;code&gt;onPostExecute(),&lt;/code&gt;onProgressUpdate()` are also\n  related&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/4VITv.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/4VITv.png&quot; alt=&quot;Enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;How to write that in the code?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;DownloadTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;{\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Always same signature&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n    {}\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInbackGround&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... parameters&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Download code&lt;/span&gt;\n        int downloadPerc = &lt;span class=&quot;hljs-comment&quot;&gt;// Calculate that&lt;/span&gt;\n        &lt;span class=&quot;hljs-title function_&quot;&gt;publish&lt;/span&gt;(downloadPerc);\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Download Success&quot;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... parameters&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Show in spinner, and access UI elements&lt;/span&gt;\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;How will you run this Task?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;DownLoadTask&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(&quot;Paradise.mp3&quot;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h2&gt;Background / Theory&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;AsyncTask&lt;/strong&gt; allows you to run a task on a background thread, while publishing results to the UI thread.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The user should always able to interact with the app so it is &lt;strong&gt;important&lt;/strong&gt;\n  &lt;strong&gt;to avoid blocking the main (UI) thread&lt;/strong&gt; with tasks such as\n  downloading content from the web.&lt;/p&gt;\n  \n  &lt;p&gt;This is why we use an &lt;strong&gt;&lt;code&gt;AsyncTask&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;\n  \n  &lt;p&gt;It offers a straightforward interface by &lt;em&gt;wrapping the UI thread message queue and handler that allow you to send and process runnable objects and messages from other threads&lt;/em&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;h2&gt;Implementation&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;AsyncTask&lt;/strong&gt; is a generic class.  (It takes &lt;strong&gt;parameterized types&lt;/strong&gt; in its constructor.)&lt;/p&gt;\n\n&lt;p&gt;It uses these &lt;strong&gt;three generic types:&lt;/strong&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;Params&lt;/code&gt;&lt;/strong&gt; - the type of the parameters sent to the task upon execution.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;Progress&lt;/code&gt;&lt;/strong&gt; - the type of the progress units published during the background computation.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/strong&gt; - the type of the result of the background computation.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Not all types are always used by an asynchronous task. To mark a type as unused, simply use the type Void:&lt;/p&gt;\n  \n  &lt;p&gt;&lt;code&gt;private class MyTask extends AsyncTask&amp;lt;Void, Void, Void&amp;gt; { ... }&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;These three parameters &lt;strong&gt;correspond to three primary functions&lt;/strong&gt; you can override in &lt;strong&gt;&lt;code&gt;AsyncTask&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;doInBackground(Params...)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;onProgressUpdate(Progress...)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;onPostExecute(Result)&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;To execute AsyncTask&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Call &lt;strong&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/strong&gt; with parameters to be sent to the background task.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;What Happens&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;On &lt;strong&gt;main/UI thread&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;onPreExecute()&lt;/code&gt;&lt;/strong&gt; is called.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;To initialize something in this thread. (E.g. show a progress bar on the user interface.)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;On a &lt;strong&gt;background thread&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;doInBackground(Params...)&lt;/code&gt;&lt;/strong&gt; is called.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;(&lt;code&gt;Params&lt;/code&gt; were passed via &lt;code&gt;execute&lt;/code&gt;.)&lt;/li&gt;\n&lt;li&gt;Where the long-running task should happen.&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Must override at least &lt;code&gt;doInBackground()&lt;/code&gt; to use AsyncTask.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Call &lt;strong&gt;&lt;code&gt;publishProgress(Progress...)&lt;/code&gt;&lt;/strong&gt; to update the user interface with a display of progress (e.g. UI animation or log text printed) while the background computation is still executing.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Causes &lt;strong&gt;&lt;code&gt;onProgressUpdate()&lt;/code&gt;&lt;/strong&gt; to be called.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;On the &lt;strong&gt;background thread&lt;/strong&gt; a result is returned from &lt;code&gt;doInBackground()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;(This triggers the next step.)&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;On &lt;strong&gt;main/UI thread&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;onPostExecute()&lt;/code&gt;&lt;/strong&gt; is called with the returned result.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Examples&lt;/h2&gt;\n\n&lt;p&gt;In both examples the &quot;blocking task&quot; is a download from the web.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Example A&lt;/strong&gt; downloads &lt;strong&gt;an image&lt;/strong&gt; and displays it in an ImageView, while&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Example B&lt;/strong&gt; downloads &lt;strong&gt;some files&lt;/strong&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Example A&lt;/h2&gt;\n\n&lt;p&gt;The &lt;code&gt;doInBackground()&lt;/code&gt; method downloads the image and stores it in an object of type BitMap.  The &lt;code&gt;onPostExecute()&lt;/code&gt; method takes the bitmap and places it in the ImageView.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DownloadImageTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Bitmap&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-type&quot;&gt;ImageView&lt;/span&gt; bitImage;\n\n    public &lt;span class=&quot;hljs-type&quot;&gt;DownloadImageTask&lt;/span&gt;(&lt;span class=&quot;hljs-type&quot;&gt;ImageView&lt;/span&gt; bitImage) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.bitImage = bitImage;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;... urls) {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; urldisplay = urls[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];\n        &lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; mBmp = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            &lt;span class=&quot;hljs-type&quot;&gt;InputStream&lt;/span&gt; in = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; java.net.&lt;span class=&quot;hljs-type&quot;&gt;URL&lt;/span&gt;(urldisplay).openStream();\n            mBmp = &lt;span class=&quot;hljs-type&quot;&gt;BitmapFactory&lt;/span&gt;.decodeStream(in);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;Exception&lt;/span&gt; e) {\n            &lt;span class=&quot;hljs-type&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Error&quot;&lt;/span&gt;, e.getMessage());\n            e.printStackTrace();\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mBmp;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;Bitmap&lt;/span&gt; result) {\n        bitImage.setImageBitmap(result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Example B&lt;/h2&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DownloadFilesTask&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;URL&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Long&lt;/span&gt;&amp;gt; {\n     &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Long &lt;span class=&quot;hljs-title&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;URL... urls&lt;/span&gt;)&lt;/span&gt; {\n         &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; count = urls.length;\n         &lt;span class=&quot;hljs-built_in&quot;&gt;long&lt;/span&gt; totalSize = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n         &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) {\n             totalSize += Downloader.downloadFile(urls[i]);\n             publishProgress((&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) ((i / (&lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;) count) * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;));\n             &lt;span class=&quot;hljs-comment&quot;&gt;// Escape early if cancel() is called&lt;/span&gt;\n             &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isCancelled()) &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n         }\n         &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; totalSize;\n     }\n\n     &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... progress&lt;/span&gt;)&lt;/span&gt; {\n         setProgressPercent(progress[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n     }\n\n     &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Long result&lt;/span&gt;)&lt;/span&gt; {\n         showDialog(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Downloaded &quot;&lt;/span&gt; + result + &lt;span class=&quot;hljs-string&quot;&gt;&quot; bytes&quot;&lt;/span&gt;);\n     }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Example B execution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;DownloadFilesTask&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(url1, url2, url3);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;When an asynchronous task is executed, the task goes through four steps:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;onPreExecute()&lt;/li&gt;\n&lt;li&gt;doInBackground(Params...)&lt;/li&gt;\n&lt;li&gt;onProgressUpdate(Progress...)&lt;/li&gt;\n&lt;li&gt;onPostExecute(Result)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Below is a demo example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-csharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;DownloadFilesTask&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;URL&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Long&lt;/span&gt;&amp;gt; {\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Long &lt;span class=&quot;hljs-title&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;URL... urls&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; count = urls.length;\n        &lt;span class=&quot;hljs-built_in&quot;&gt;long&lt;/span&gt; totalSize = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) {\n            totalSize += Downloader.downloadFile(urls[i]);\n            publishProgress((&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) ((i / (&lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;) count) * &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;));\n\n            &lt;span class=&quot;hljs-comment&quot;&gt;// Escape early if cancel() is called&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (isCancelled())\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; totalSize;\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... progress&lt;/span&gt;)&lt;/span&gt; {\n        setProgressPercent(progress[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n    }\n\n    &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Long result&lt;/span&gt;)&lt;/span&gt; {\n        showDialog(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Downloaded &quot;&lt;/span&gt; + result + &lt;span class=&quot;hljs-string&quot;&gt;&quot; bytes&quot;&lt;/span&gt;);\n    }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And once you created, a task is executed very simply:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;new &lt;span class=&quot;hljs-built_in&quot;&gt;DownloadFilesTask&lt;/span&gt;()&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;(url1, url2, url3);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Shortest example for just doing something asynchronously:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;android&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;Object&lt;/span&gt;[] objects) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do something asynchronously&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To run it:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;(new MyAsyncTask())&lt;span class=&quot;hljs-selector-class&quot;&gt;.execute&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;When you are in the worker thread, you can not directly manipulate UI elements on Android.&lt;/p&gt;\n\n&lt;p&gt;When you are using AsyncTask please understand the callback methods.&lt;/p&gt;\n\n&lt;p&gt;For example:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyAyncTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;&amp;gt;{\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Here you can show progress bar or something on the similar lines.&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Since you are in a UI thread here.&lt;/span&gt;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void aVoid&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(aVoid);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// After completing execution of given task, control will return here.&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Hence if you want to populate UI elements with fetched data, do it here.&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... values&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(values);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// You can track you progress update here&lt;/span&gt;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... params&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Here you are in the worker thread and you are not allowed to access UI thread from here.&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Here you can perform network operations or any heavy operations you want.&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;FYI:\nTo access the UI thread from a worker thread, you either use runOnUiThread() method or post method on your view.&lt;/p&gt;\n\n&lt;p&gt;For instance:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scss&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;runOnUiThread&lt;/span&gt;(new Runnable() {\n    textView&lt;span class=&quot;hljs-selector-class&quot;&gt;.setText&lt;/span&gt;(&quot;something.&quot;);\n});\n\nor\n    yourview&lt;span class=&quot;hljs-selector-class&quot;&gt;.post&lt;/span&gt;(new Runnable() {\n    yourview&lt;span class=&quot;hljs-selector-class&quot;&gt;.setText&lt;/span&gt;(&quot;something&quot;);\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will help you know the things better. Hence in you case, you need to set your textview in the onPostExecute() method.&lt;/p&gt;\n    ","\n&lt;p&gt;I would recommend making your life easier by using this library for background works:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://github.com/Arasthel/AsyncJobLibrary&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/Arasthel/AsyncJobLibrary&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&apos;s this simple...&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;AsyncJob&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncJob&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;OnBackgroundJob&lt;/span&gt;() {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doOnBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-title function_&quot;&gt;startRecording&lt;/span&gt;();\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Sample Async Task with POST request:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;NameValuePair&lt;/span&gt;&amp;gt; params = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;NameValuePair&lt;/span&gt;&amp;gt;();\nparams.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BasicNameValuePair&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;value1&quot;&lt;/span&gt;));\nparams.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;BasicNameValuePair&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;key1&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;value2&quot;&lt;/span&gt;));\n&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;WEBSERVICEREQUESTOR&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;, params).&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;();\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;WEBSERVICEREQUESTOR&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;\n{\n    &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;NameValuePair&lt;/span&gt;&amp;gt; parameters;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt; pDialog;\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;WEBSERVICEREQUESTOR&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; url, List&amp;lt;NameValuePair&amp;gt; params&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;URL&lt;/span&gt; = url;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;parameters&lt;/span&gt; = params;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n    {\n        pDialog = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;LoginActivity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;this&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setMessage&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Processing Request...&quot;&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setIndeterminate&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setCancelable&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... params&lt;/span&gt;)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n        {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;DefaultHttpClient&lt;/span&gt; httpClient = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DefaultHttpClient&lt;/span&gt;();\n            &lt;span class=&quot;hljs-title class_&quot;&gt;HttpEntity&lt;/span&gt; httpEntity = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n            &lt;span class=&quot;hljs-title class_&quot;&gt;HttpResponse&lt;/span&gt; httpResponse = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n\n            &lt;span class=&quot;hljs-title class_&quot;&gt;HttpPost&lt;/span&gt; httpPost = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HttpPost&lt;/span&gt;(&lt;span class=&quot;hljs-variable constant_&quot;&gt;URL&lt;/span&gt;);\n\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (parameters != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;)\n            {\n                httpPost.&lt;span class=&quot;hljs-title function_&quot;&gt;setEntity&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;UrlEncodedFormEntity&lt;/span&gt;(parameters));\n            }\n            httpResponse = httpClient.&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;(httpPost);\n\n            httpEntity = httpResponse.&lt;span class=&quot;hljs-title function_&quot;&gt;getEntity&lt;/span&gt;();\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;EntityUtils&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;(httpEntity);\n\n        }  &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Exception&lt;/span&gt; e)\n        {\n\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;)\n    {\n        pDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;dismiss&lt;/span&gt;();\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n        {\n\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;Exception&lt;/span&gt; e)\n        {\n\n        }\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Update: March 2020&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;According to Android developer &lt;a href=&quot;https://developer.android.com/reference/android/os/AsyncTask&quot; rel=&quot;nofollow noreferrer&quot;&gt;official documentation&lt;/a&gt;, AsyncTask is now deprecated. &lt;/p&gt;\n\n&lt;p&gt;It&apos;s recommended to use &lt;a href=&quot;https://developer.android.com/topic/libraries/architecture/coroutines&quot; rel=&quot;nofollow noreferrer&quot;&gt;kotlin corourines&lt;/a&gt; instead. Simply, it allows you to write asynchronous tasks in a sequential style. &lt;/p&gt;\n    ","\n&lt;p&gt;Simply:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;MyTask&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt;();\nMyTask.execute();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;You need to declare the button onclicklistener. Once clicked, it calls AsyncTask class DownloadJson.&lt;/p&gt;\n\n&lt;p&gt;The process will be shown below:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Bundle savedInstanceState&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);\n        &lt;span class=&quot;hljs-title function_&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;main&lt;/span&gt;);\n\n        btn = (&lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;button1&lt;/span&gt;);\n\n        btn.&lt;span class=&quot;hljs-title function_&quot;&gt;setOnClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-title class_&quot;&gt;OnClickListener&lt;/span&gt;() {\n            &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;View v&lt;/span&gt;) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DownloadJson&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;();\n            }\n        });\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// DownloadJSON AsyncTask&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;DownloadJson&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;&amp;gt; {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... params&lt;/span&gt;) {\n            newlist = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;&amp;gt;();\n            json = jsonParser.&lt;span class=&quot;hljs-title function_&quot;&gt;makeHttpRequest&lt;/span&gt;(json, &lt;span class=&quot;hljs-string&quot;&gt;&quot;POST&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                newarray = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;Array&lt;/span&gt;(json);\n                    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; countdisplay; i++) {\n                        &lt;span class=&quot;hljs-title class_&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; eachnew = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt;();\n                        newobject = newarray.&lt;span class=&quot;hljs-title function_&quot;&gt;getJSONObject&lt;/span&gt;(i);\n                        eachnew.&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;, newobject.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ID&quot;&lt;/span&gt;));\n                        eachnew.&lt;span class=&quot;hljs-title function_&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;, newobject.&lt;span class=&quot;hljs-title function_&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Name&quot;&lt;/span&gt;));\n                        newlist.&lt;span class=&quot;hljs-title function_&quot;&gt;add&lt;/span&gt;(eachnew);\n                    }\n                }\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;Exception e) {\n                &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;e&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Error&quot;&lt;/span&gt;, e.&lt;span class=&quot;hljs-title function_&quot;&gt;getMessage&lt;/span&gt;());\n                e.&lt;span class=&quot;hljs-title function_&quot;&gt;printStackTrace&lt;/span&gt;();\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void args&lt;/span&gt;) {\n            newlisttemp.&lt;span class=&quot;hljs-title function_&quot;&gt;addAll&lt;/span&gt;(newlist);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;NewAdapterpager&lt;/span&gt; newadapterpager = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;NewAdapterpager&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;ProcesssActivitypager&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;this&lt;/span&gt;, newlisttemp);\n            newpager.&lt;span class=&quot;hljs-title function_&quot;&gt;setAdapter&lt;/span&gt;(newadapterpager);\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTaskDemo&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;&amp;gt; {\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;();\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Showing progress dialog&lt;/span&gt;\n        progressDialog = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressDialog&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setMessage&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Loading...&quot;&lt;/span&gt;);\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;setCancelable&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... arg0&lt;/span&gt;) {\n\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Do code here&lt;/span&gt;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void result&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(result);\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Dismiss the progress dialog&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;isShowing&lt;/span&gt;()) {\n            progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;dismiss&lt;/span&gt;();\n        }\n    }\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCancelled&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCancelled&lt;/span&gt;();\n        progressDialog.&lt;span class=&quot;hljs-title function_&quot;&gt;dismiss&lt;/span&gt;();\n        &lt;span class=&quot;hljs-title class_&quot;&gt;Toast&lt;/span&gt; toast = &lt;span class=&quot;hljs-title class_&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;makeText&lt;/span&gt;(\n                          &lt;span class=&quot;hljs-title function_&quot;&gt;getActivity&lt;/span&gt;(),\n                          &lt;span class=&quot;hljs-string&quot;&gt;&quot;An error is occurred due to some problem&quot;&lt;/span&gt;,\n                          &lt;span class=&quot;hljs-title class_&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;LENGTH_LONG&lt;/span&gt;);\n        toast.&lt;span class=&quot;hljs-title function_&quot;&gt;setGravity&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Gravity&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;TOP&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;400&lt;/span&gt;);\n        toast.&lt;span class=&quot;hljs-title function_&quot;&gt;show&lt;/span&gt;();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;While working with AsyncTask, it is necessary to create a class-successor and in it to register the implementation of methods necessary for us. In this lesson we will look at three methods:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;doInBackground&lt;/strong&gt; - will be executed in a new thread, and here we solve all our difficult tasks. Because a non-primary thread does not have access to the UI.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;onPreExecute&lt;/strong&gt; - executed before doInBackground and has access to the UI&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;onPostExecute&lt;/strong&gt; - executed after doInBackground (does not work if AsyncTask was canceled - about this in the next lessons) and has access to the UI.&lt;/p&gt;\n\n&lt;p&gt;This is the MyAsyncTask class:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot;&gt;Void&amp;gt;&lt;/span&gt; &lt;/span&gt;{\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPreExecute() {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onPreExecute();\n    tvInfo.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Start&quot;&lt;/span&gt;);\n  }\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt;... params) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Your background method&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n  }\n\n  &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;hljs-type&quot;&gt;Void&lt;/span&gt; result) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onPostExecute(result);\n    tvInfo.setText(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Finish&quot;&lt;/span&gt;);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And this is how to call in your Activity or Fragment:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;MyAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;myAsyncTask&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MyAsyncTask&lt;/span&gt;();\nmyAsyncTask.execute();\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;AsyncTask:&lt;/p&gt;\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-scala&quot;&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;/span&gt;{\n\n &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;ApiUrl&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;your_api&quot;&lt;/span&gt;;\n\n   &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n   &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;hljs-type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {\n     &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n     setContentView(&lt;span class=&quot;hljs-type&quot;&gt;R&lt;/span&gt;.layout.activity_main);\n     &lt;span class=&quot;hljs-type&quot;&gt;MyTask&lt;/span&gt; myTask=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;MyTask&lt;/span&gt;();\n     &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n         &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result=myTask.execute(&lt;span class=&quot;hljs-type&quot;&gt;ApiUrl&lt;/span&gt;).get();\n         &lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.makeText(getApplicationContext(),result,&lt;span class=&quot;hljs-type&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;LENGTH_SHORT&lt;/span&gt;).show();\n     } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;ExecutionException&lt;/span&gt; e) {\n         e.printStackTrace();\n     } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;InterruptedException&lt;/span&gt; e) {\n        e.printStackTrace();\n     }\n\n  }\n\n\n   public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MyTask&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AsyncTask&amp;lt;String&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;Void&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;String&amp;gt;&lt;/span&gt;&lt;/span&gt;{\n\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; doInBackground(&lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt;... strings) {\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        &lt;span class=&quot;hljs-type&quot;&gt;HttpURLConnection&lt;/span&gt; httpURLConnection=&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        &lt;span class=&quot;hljs-type&quot;&gt;URL&lt;/span&gt; url;\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n            url=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;URL&lt;/span&gt;(strings[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            httpURLConnection=(&lt;span class=&quot;hljs-type&quot;&gt;HttpURLConnection&lt;/span&gt;) url.openConnection();\n            &lt;span class=&quot;hljs-type&quot;&gt;InputStream&lt;/span&gt; inputStream=httpURLConnection.getInputStream();\n            &lt;span class=&quot;hljs-type&quot;&gt;InputStreamReader&lt;/span&gt; reader=&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;InputStreamReader&lt;/span&gt;(inputStream);\n            result=getData(reader);\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;MalformedURLException&lt;/span&gt; e) {\n            e.printStackTrace();\n        } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-type&quot;&gt;IOException&lt;/span&gt; e) {\n            e.printStackTrace();\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }\n\n    public &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; getData(&lt;span class=&quot;hljs-type&quot;&gt;InputStreamReader&lt;/span&gt; reader) &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;IOException&lt;/span&gt;{\n        &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; result=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;;\n        int data=reader.read();\n        &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (data!=&lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;){\n            char now=(char) data;\n            result+=data;\n            data=reader.read();\n        }\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Sample AsyncTask example with progress&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ObjectAnimator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;AsyncTask&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;support&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;v7&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;app&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;AppCompatActivity&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Bundle&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;util&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Log&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;View&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;AccelerateDecelerateInterpolator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;DecelerateInterpolator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;animation&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;LinearInterpolator&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;widget&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Button&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;widget&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;ProgressBar&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; android.&lt;span class=&quot;hljs-property&quot;&gt;widget&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;TextView&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTaskActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;OnClickListener&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt; btn;\n    &lt;span class=&quot;hljs-title class_&quot;&gt;ProgressBar&lt;/span&gt; progressBar;\n\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Bundle savedInstanceState&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);\n        &lt;span class=&quot;hljs-title function_&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;activity_main&lt;/span&gt;);\n        btn = (&lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;button1&lt;/span&gt;);\n        btn.&lt;span class=&quot;hljs-title function_&quot;&gt;setOnClickListener&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n        progressBar = (&lt;span class=&quot;hljs-title class_&quot;&gt;ProgressBar&lt;/span&gt;)&lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;pbar&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;View view&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt; (view.&lt;span class=&quot;hljs-title function_&quot;&gt;getId&lt;/span&gt;()) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;button1&lt;/span&gt;:\n                &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n                &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; {\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... params&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;doInBackground&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;task &quot;&lt;/span&gt;+(i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;));\n                    &lt;span class=&quot;hljs-title function_&quot;&gt;publishProgress&lt;/span&gt;(i + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;InterruptedException&lt;/span&gt; e) {\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;interrupted&lt;/span&gt;();\n                }\n            }\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Completed&quot;&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;onPostExecute&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(result);\n            progressBar.&lt;span class=&quot;hljs-title function_&quot;&gt;setProgress&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;onPreExecute&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;onPreExecute&quot;&lt;/span&gt;);\n            progressBar.&lt;span class=&quot;hljs-title function_&quot;&gt;setMax&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;);\n            progressBar.&lt;span class=&quot;hljs-title function_&quot;&gt;setProgress&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Integer... values&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;Log&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;AsyncTask&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;onProgressUpdate &quot;&lt;/span&gt;+values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;onProgressUpdate &quot;&lt;/span&gt;+values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n\n            &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectAnimator&lt;/span&gt; animation = &lt;span class=&quot;hljs-title class_&quot;&gt;ObjectAnimator&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;ofInt&lt;/span&gt;(progressBar, &lt;span class=&quot;hljs-string&quot;&gt;&quot;progress&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; * values[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]);\n            animation.&lt;span class=&quot;hljs-title function_&quot;&gt;setDuration&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n            animation.&lt;span class=&quot;hljs-title function_&quot;&gt;setInterpolator&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LinearInterpolator&lt;/span&gt;());\n            animation.&lt;span class=&quot;hljs-title function_&quot;&gt;start&lt;/span&gt;();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;if you open AsyncTask class you can see below code.&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;Params&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Progress&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Result&lt;/span&gt;&amp;gt; {\n    &lt;span class=&quot;hljs-meta&quot;&gt;@WorkerThread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Params&lt;/span&gt;... params);\n    &lt;span class=&quot;hljs-meta&quot;&gt;@MainThread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    }\n    &lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings&lt;/span&gt;({&lt;span class=&quot;hljs-string&quot;&gt;&quot;UnusedDeclaration&quot;&lt;/span&gt;})\n    &lt;span class=&quot;hljs-meta&quot;&gt;@MainThread&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Result result&lt;/span&gt;) {\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;AsyncTask features&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;AsyncTask is abstract class&lt;/li&gt;\n&lt;li&gt;AsyncTask is have 3 generic params.&lt;/li&gt;\n&lt;li&gt;AsyncTask has abstract method of doInBackground, onPreExecute, onPostExecute&lt;/li&gt;\n&lt;li&gt;doInBackground is WorkerThread (you can&apos;t update UI)&lt;/li&gt;\n&lt;li&gt;onPreExecute is MainThread&lt;/li&gt;\n&lt;li&gt;onPostExecute is MainThread (you can update UI)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_login);\n    mEmailView = (AutoCompleteTextView) findViewById(R.id.email);\n\n    AsyncTask&amp;lt;Void, Void, Post&amp;gt; asyncTask = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;Void, Void, Post&amp;gt;() {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; Post &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Void... params)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                &lt;span class=&quot;hljs-type&quot;&gt;ApiClient&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;defaultClient&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; Configuration.getDefaultApiClient();\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;authorization&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE1ODIxMzM4MTB9.bA3Byc_SuB6jzqUGAY4Pyt4oBNg0VfDRctZ8-PcPlYg&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// String | JWT token for Authorization&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;ApiKeyAuth&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;Bearer&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; (ApiKeyAuth) defaultClient.getAuthentication(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Bearer&quot;&lt;/span&gt;);\n                Bearer.setApiKey(authorization);\n                &lt;span class=&quot;hljs-type&quot;&gt;PostApi&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;apiInstance&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;PostApi&lt;/span&gt;();\n                &lt;span class=&quot;hljs-type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// String | id&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;commentPage&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Integer | Page number for Comment&lt;/span&gt;\n                &lt;span class=&quot;hljs-type&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;commentPer&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// Integer | Per page number For Comment&lt;/span&gt;\n                Post result;\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    result = apiInstance.apiV1PostsIdGet(id, authorization, commentPage, commentPer);\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (ApiException e) {\n                    e.printStackTrace();\n                    result = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt;();\n                }\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {\n                e.printStackTrace();\n                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Post&lt;/span&gt;();\n            }\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Post post)&lt;/span&gt; {\n            &lt;span class=&quot;hljs-built_in&quot;&gt;super&lt;/span&gt;.onPostExecute(post);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (post != &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;) {\n                mEmailView.setText(post.getBody());\n                System.out.print(post);\n            }\n        }\n    };\n    asyncTask.execute();\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Change your code as given below:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n\n    &lt;span class=&quot;hljs-title function_&quot;&gt;runOnUiThread&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Runnable&lt;/span&gt;() {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;);\n        }\n    });\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;also you can show the progress by calling publishprogress() from the doInBackground() method.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/339141/osum&quot; title=&quot;755 reputation&quot; class=&quot;comment-user&quot;&gt;osum&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment16568960_9671546&quot;&gt;&lt;span title=&quot;2012-09-09 18:21:12Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 9, 2012 at 18:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;here is asynctask example &lt;a href=&quot;http://samir-mangroliya.blogspot.in/p/android-asynctask-example.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;AsyncTask Example&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/776244/samir-mangroliya&quot; title=&quot;39,307 reputation&quot; class=&quot;comment-user&quot;&gt;Samir Mangroliya&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment21300187_9671546&quot;&gt;&lt;span title=&quot;2013-02-28 10:25:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 28, 2013 at 10:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;here is an asynctask example of downloading image too : &lt;a href=&quot;http://www.android-ios-tutorials.com/182/show-progressbar-while-downloading-image-using-asynctask-in-android/&quot; rel=&quot;nofollow noreferrer&quot;&gt;android-ios-tutorials.com/182/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/704513/houcine&quot; title=&quot;23,553 reputation&quot; class=&quot;comment-user&quot;&gt;Houcine&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment34296136_9671546&quot;&gt;&lt;span title=&quot;2014-03-20 14:49:14Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 20, 2014 at 14:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;AsyncTask - Design Pattern : &lt;a href=&quot;http://stackoverflow.com/questions/5058661/asynctask-android-design-pattern-and-return-values/28451165#28451165&quot; title=&quot;asynctask android design pattern and return values&quot;&gt;stackoverflow.com/questions/5058661/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1986576/henrychuang&quot; title=&quot;1,429 reputation&quot; class=&quot;comment-user&quot;&gt;HenryChuang&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment45667731_9671546&quot;&gt;&lt;span title=&quot;2015-02-24 03:33:23Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 24, 2015 at 3:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;for those trying to implement concurrency post API 30...&lt;code&gt;AsyncTask&lt;/code&gt; is depreciated. See documentation: &lt;a href=&quot;https://developer.android.com/reference/android/os/AsyncTask&quot; rel=&quot;nofollow noreferrer&quot;&gt;public abstract class AsyncTask&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4233144/toxicabe&quot; title=&quot;143 reputation&quot; class=&quot;comment-user&quot;&gt;ToxicAbe&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115499258_9671546&quot;&gt;&lt;span title=&quot;2020-12-16 21:17:39Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 16, 2020 at 21:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;params&lt;/code&gt; is an array. (In the example above, it was a &lt;code&gt;String&lt;/code&gt; array.) This allows you to pass in multiple parameters of the same type. Then you can access those parameters with &lt;code&gt;params[0]&lt;/code&gt;, &lt;code&gt;params[1]&lt;/code&gt;, &lt;code&gt;params[2]&lt;/code&gt;, etc. In the example, there was only a single &lt;code&gt;String&lt;/code&gt; in the &lt;code&gt;params&lt;/code&gt; array.  If you need to pass in multiple parameters of different types (for example, a &lt;code&gt;String&lt;/code&gt; and an &lt;code&gt;int&lt;/code&gt;), see &lt;a href=&quot;http://stackoverflow.com/questions/12069669/how-can-you-pass-multiple-primitive-parameters-to-asynctask&quot;&gt;this question&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3681880/suragch&quot; title=&quot;433,024 reputation&quot; class=&quot;comment-user&quot;&gt;Suragch&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment58007189_29559386&quot;&gt;&lt;span title=&quot;2016-02-02 01:29:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 2, 2016 at 1:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 6 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I am unable to do this  &amp;lt;code&amp;gt; btn.setOnClickListener(this);  &amp;lt;/code&amp;gt;  Eclipse gives an error     -----   &quot;The method setOnClickListener(View.OnClickListener) in the type View is not applicable for the arguments (AsyncTaskActivity)&quot;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1205914/fox&quot; title=&quot;9,264 reputation&quot; class=&quot;comment-user owner&quot;&gt;Fox&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment12285646_9671602&quot;&gt;&lt;span title=&quot;2012-03-12 17:33:22Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 12, 2012 at 17:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I would advise changing the setting of the text to not be static but take the argument from the &lt;code&gt;onPostExecute(String result)&lt;/code&gt; method. It would make it clearer for future readers that the argument is populated by the return value of &lt;code&gt;doInBackground(String... params)&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/170781/eric-tobias&quot; title=&quot;3,143 reputation&quot; class=&quot;comment-user&quot;&gt;Eric Tobias&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment19446689_9671602&quot;&gt;&lt;span title=&quot;2012-12-28 10:37:16Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 28, 2012 at 10:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Eric Tobias - That exact things done in the commented section already. I was following and answering the users question in my full example.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/649979/graham-smith&quot; title=&quot;25,327 reputation&quot; class=&quot;comment-user&quot;&gt;Graham Smith&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment19496090_9671602&quot;&gt;&lt;span title=&quot;2012-12-30 21:13:34Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 30, 2012 at 21:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;As an addendum and google seeder (and coming from someone currently learning this stuff which is how I came across this) : the majority of UI updates you&apos;ll do  for something where you need progress reported back to the user is in the call back onProgressUpdate which is executed in the main UI thread.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/37370/richiehh&quot; title=&quot;2,038 reputation&quot; class=&quot;comment-user&quot;&gt;RichieHH&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment32045701_9671602&quot;&gt;&lt;span title=&quot;2014-01-21 20:45:37Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 21, 2014 at 20:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This will surely mess up if your activity is rotated or destroyed for any reason...&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1137254/sam&quot; title=&quot;3,323 reputation&quot; class=&quot;comment-user&quot;&gt;Sam&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment40254367_9671602&quot;&gt;&lt;span title=&quot;2014-09-09 12:43:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 9, 2014 at 12:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks for providing an example that decouples the AsyncTask from the Activity&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2138200/sthomps&quot; title=&quot;3,818 reputation&quot; class=&quot;comment-user&quot;&gt;sthomps&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment39226293_9671643&quot;&gt;&lt;span title=&quot;2014-08-07 19:11:10Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 7, 2014 at 19:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;yes, finally someone decouples the task and the activity. thank you.And overriding the &lt;code&gt;onPostExecute&lt;/code&gt; in the activity is brilliant.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1544044/mcy&quot; title=&quot;1,104 reputation&quot; class=&quot;comment-user&quot;&gt;mcy&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment75367312_9671643&quot;&gt;&lt;span title=&quot;2017-05-25 08:56:57Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 25, 2017 at 8:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;classes starts with generally capital letters in Java , that&apos;s a notation usually followed&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1395129/vamsi-pavan-mahesh&quot; title=&quot;205 reputation&quot; class=&quot;comment-user&quot;&gt;Vamsi Pavan Mahesh&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment34027331_18827536&quot;&gt;&lt;span title=&quot;2014-03-13 15:35:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 13, 2014 at 15:35&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Hey what i am running async task on service i want to return some value to main ui thread.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1903723/dipen&quot; title=&quot;996 reputation&quot; class=&quot;comment-user&quot;&gt;Dipen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment44523728_9671669&quot;&gt;&lt;span title=&quot;2015-01-21 16:31:37Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 21, 2015 at 16:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Dipen - Check out &lt;a href=&quot;http://stackoverflow.com/questions/3841043/how-does-a-service-return-result-to-an-activity&quot;&gt;this discussion&lt;/a&gt;. There are two issues: reporting results from an &lt;code&gt;AsyncTask&lt;/code&gt;, which my answer addresses; and sending a value from a service to the ui thread, which the other discussion addresses. These issues are independent.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/535871/ted-hopp&quot; title=&quot;227,907 reputation&quot; class=&quot;comment-user&quot;&gt;Ted Hopp&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment44531388_9671669&quot;&gt;&lt;span title=&quot;2015-01-21 20:25:05Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 21, 2015 at 20:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Very nice.. But I keep getting error about return type clashing - attempting to use incompatible return type.  I have tried all sorts of return types, same error.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/396483/john-ktejik&quot; title=&quot;5,619 reputation&quot; class=&quot;comment-user&quot;&gt;john ktejik&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment92352601_46266239&quot;&gt;&lt;span title=&quot;2018-10-09 04:44:01Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 9, 2018 at 4:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Hi @johnktejik, you may want to search for that specific problem.  Maybe this is what is happening to you: &lt;a href=&quot;https://stackoverflow.com/questions/24637755/the-return-type-is-incompatible-with-asynctask&quot;&gt;the-return-type-is-incompatible-with-asynctask&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3066295/tt&quot; title=&quot;2,680 reputation&quot; class=&quot;comment-user&quot;&gt;TT--&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment100620455_46266239&quot;&gt;&lt;span title=&quot;2019-07-15 20:07:17Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 15, 2019 at 20:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Excellent! Consider going &lt;a href=&quot;https://stackoverflow.com/users?tab=Editors&amp;amp;filter=all&quot;&gt;into&lt;/a&gt; &lt;a href=&quot;http://pmortensen.eu/world/EditOverflow1.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;editing&lt;/a&gt;?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104303910_46266239&quot;&gt;&lt;span title=&quot;2019-11-25 10:42:39Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 25, 2019 at 10:42&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;execute expects a paremeter as Runnable. It doesn&apos;t accept string. What is the type of your url? string or not&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;span class=&quot;comment-user&quot;&gt;user2362956&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment77130571_21306666&quot;&gt;&lt;span title=&quot;2017-07-13 11:23:06Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 13, 2017 at 11:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;MF!!!!!!!! FGoogle!!!!!!!!!!!!! FAndroid!!!!!!!!!! All My App Use AsynTask :(&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/9232557/chego&quot; title=&quot;137 reputation&quot; class=&quot;comment-user&quot;&gt;Chego&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment112825825_60895051&quot;&gt;&lt;span title=&quot;2020-09-09 02:18:44Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 9, 2020 at 2:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 4 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Re &lt;i&gt;&quot;about this in the next lessons&quot;&lt;/i&gt;: What does that refer to? E.g., where is this taken from?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104304590_56804996&quot;&gt;&lt;span title=&quot;2019-11-25 11:03:54Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 25, 2019 at 11:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Why is class &lt;code&gt;MyTask&lt;/code&gt; inside of class &lt;code&gt;MainActivity&lt;/code&gt;? Is that customary?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104304355_54648210&quot;&gt;&lt;span title=&quot;2019-11-25 10:56:24Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 25, 2019 at 10:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You shouldn&apos;t need to use runOnUiThread as onPostExecute always runs on thread 1 (does it not?)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/580257/justdan0227&quot; title=&quot;1,216 reputation&quot; class=&quot;comment-user&quot;&gt;justdan0227&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64234532_37235806&quot;&gt;&lt;span title=&quot;2016-07-16 16:49:42Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 16, 2016 at 16:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":478,"title":"AsyncTask Android example","content":"\n                \n&lt;p&gt;I was reading about &lt;code&gt;AsyncTask&lt;/code&gt;, and I tried the simple program below. But it does not seem to work. How can I make it work?&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-typescript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;AsyncTaskActivity&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;Activity&lt;/span&gt; {\n\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt; btn;\n\n    &lt;span class=&quot;hljs-comment&quot;&gt;/** Called when the activity is first created. */&lt;/span&gt;\n    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Bundle savedInstanceState&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);\n        &lt;span class=&quot;hljs-title function_&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;main&lt;/span&gt;);\n\n        btn = (&lt;span class=&quot;hljs-title class_&quot;&gt;Button&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;button1&lt;/span&gt;);\n        btn.&lt;span class=&quot;hljs-title function_&quot;&gt;setOnClickListener&lt;/span&gt;((&lt;span class=&quot;hljs-title class_&quot;&gt;OnClickListener&lt;/span&gt;) &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;View view&lt;/span&gt;){\n        &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;execute&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt;);\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;LongOperation&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title class_ inherited__&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;Void&lt;/span&gt;, &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt;&amp;gt; {\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doInBackground&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;... params&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(int i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;i++) {\n                &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {\n                    &lt;span class=&quot;hljs-title class_&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n                } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;hljs-title class_&quot;&gt;InterruptedException&lt;/span&gt; e) {\n                    &lt;span class=&quot;hljs-comment&quot;&gt;// TODO Auto-generated catch block&lt;/span&gt;\n                    e.&lt;span class=&quot;hljs-title function_&quot;&gt;printStackTrace&lt;/span&gt;();\n                }\n            }\n            &lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt; txt = (&lt;span class=&quot;hljs-title class_&quot;&gt;TextView&lt;/span&gt;) &lt;span class=&quot;hljs-title function_&quot;&gt;findViewById&lt;/span&gt;(R.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;output&lt;/span&gt;);\n            txt.&lt;span class=&quot;hljs-title function_&quot;&gt;setText&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Executed&quot;&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPostExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; result&lt;/span&gt;) {\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onPreExecute&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        }\n\n        &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onProgressUpdate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Void... values&lt;/span&gt;) {\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I am just trying to change the label after 5 seconds in the background process.&lt;/p&gt;\n\n&lt;p&gt;This is my &lt;strong&gt;main.xml&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;default s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;hljs-string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt;\n              &lt;span class=&quot;hljs-attr&quot;&gt;android:orientation&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;vertical&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;ProgressBar&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/progressBar&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;?android:attr/progressBarStyleHorizontal&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:indeterminate&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;false&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:max&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:padding&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;10dip&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;ProgressBar&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;Button&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/button1&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Start Progress&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;Button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;@+id/output&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;\n        &lt;span class=&quot;hljs-attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Replace&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;LinearLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","slug":"asynctask-android-example-1657388127898","postType":"QUESTION","createdAt":"2022-07-09T17:35:27.000Z","updatedAt":"2022-07-09T17:35:27.000Z","tags":[{"id":2418,"name":"android-asynctask","slug":"android-asynctask","createdAt":"2022-07-09T17:35:28.000Z","updatedAt":"2022-07-09T17:35:28.000Z","Questions_Tags":{"questionId":478,"tagId":2418}}]}]}},"__N_SSG":true}