{"pageProps":{"data":{"count":1,"rows":[{"answer":["\n&lt;p&gt;Using &lt;a href=&quot;https://www.firebase.com/docs/beta/queries/web.html&quot; rel=&quot;noreferrer&quot;&gt;Firebase&apos;s Query API&lt;/a&gt;, you might be tempted to try this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// !!! THIS WILL NOT WORK !!!&lt;/span&gt;\nref\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;orderBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;genre&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;startAt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;comedy&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;endAt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;comedy&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;orderBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;lead&apos;&lt;/span&gt;)                  &lt;span class=&quot;hljs-comment&quot;&gt;// !!! THIS LINE WILL RAISE AN ERROR !!!&lt;/span&gt;\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;startAt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Jack Nicholson&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;endAt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Jack Nicholson&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;snapshot&lt;/span&gt;) { \n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(snapshot.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;()); \n  });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;But as @RobDiMarco from Firebase says in the comments:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;multiple &lt;code&gt;orderBy()&lt;/code&gt; calls will throw an error&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;So &lt;strong&gt;my code above will not work&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;I know of three approaches that will work.&lt;/p&gt;\n&lt;h3&gt;1. filter most on the server, do the rest on the client&lt;/h3&gt;\n&lt;p&gt;What you &lt;em&gt;can&lt;/em&gt; do is execute one &lt;code&gt;orderBy().startAt()./endAt()&lt;/code&gt; on the server, pull down the remaining data and filter that in JavaScript code on your client.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;ref\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;orderBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;genre&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;equalTo&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;comedy&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;child_added&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;snapshot&lt;/span&gt;) { \n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; movie = snapshot.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n      &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (movie.&lt;span class=&quot;hljs-property&quot;&gt;lead&lt;/span&gt; == &lt;span class=&quot;hljs-string&quot;&gt;&apos;Jack Nicholson&apos;&lt;/span&gt;) {\n          &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(movie);\n      }\n  });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;2. add a property that combines the values that you want to filter on&lt;/h3&gt;\n&lt;p&gt;If that isn&apos;t good enough, you should consider modifying/expanding your data to allow your use-case. For example: you could stuff genre+lead into a single property that you just use for this filter.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;movie1&quot;&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;genre&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;As good as it gets&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;lead&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jack Nicholson&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;genre_lead&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy_Jack Nicholson&quot;&lt;/span&gt;\n}, &lt;span class=&quot;hljs-comment&quot;&gt;//...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You&apos;re essentially building your own multi-column index that way and can query it with:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;ref\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;orderBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;genre_lead&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;equalTo&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;comedy_Jack Nicholson&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;child_added&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;snapshot&lt;/span&gt;) { \n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; movie = snapshot.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(movie);\n  });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;David East has written a &lt;a href=&quot;https://github.com/davideast/Querybase&quot; rel=&quot;noreferrer&quot;&gt;library called QueryBase that helps with generating such properties&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;You could even do relative/range queries, let&apos;s say that you want to allow querying movies by category and year. You&apos;d use this data structure:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;movie1&quot;&lt;/span&gt;: {\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;genre&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;As good as it gets&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;lead&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jack Nicholson&quot;&lt;/span&gt;,\n    &lt;span class=&quot;hljs-string&quot;&gt;&quot;genre_year&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy_1997&quot;&lt;/span&gt;\n}, &lt;span class=&quot;hljs-comment&quot;&gt;//...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And then query for comedies of the 90s with:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;ref\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;orderBy&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;genre_year&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;startAt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;comedy_1990&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;endAt&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;comedy_2000&apos;&lt;/span&gt;)\n  .&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;child_added&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;snapshot&lt;/span&gt;) { \n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; movie = snapshot.&lt;span class=&quot;hljs-title function_&quot;&gt;val&lt;/span&gt;();\n      &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(movie);\n  });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;If you need to filter on more than just the year, make sure to add the other date parts in descending order, e.g. &lt;code&gt;&quot;comedy_1997-12-25&quot;&lt;/code&gt;. This way the lexicographical ordering that Firebase does on string values will be the same as the chronological ordering.&lt;/p&gt;\n&lt;p&gt;This combining of values in a property can work with more than two values, but you can only do a range filter on the last value in the composite property.&lt;/p&gt;\n&lt;p&gt;A very special variant of this is implemented by the &lt;a href=&quot;https://github.com/firebase/geofire-js&quot; rel=&quot;noreferrer&quot;&gt;GeoFire library for Firebase&lt;/a&gt;. This library combines the latitude and longitude of a location into a so-called &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot; rel=&quot;noreferrer&quot;&gt;Geohash&lt;/a&gt;, which can then be used to do realtime range queries on Firebase.&lt;/p&gt;\n&lt;h3&gt;3. create a custom index programmatically&lt;/h3&gt;\n&lt;p&gt;Yet another alternative is to do what we&apos;ve all done before this new Query API was added: create an index in a different node:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;movies&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-comment&quot;&gt;// the same structure you have today&lt;/span&gt;\n  &lt;span class=&quot;hljs-string&quot;&gt;&quot;by_genre&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy&quot;&lt;/span&gt;\n          &lt;span class=&quot;hljs-string&quot;&gt;&quot;by_lead&quot;&lt;/span&gt;\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jack Nicholson&quot;&lt;/span&gt;\n                  &lt;span class=&quot;hljs-string&quot;&gt;&quot;movie1&quot;&lt;/span&gt;\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jim Carrey&quot;&lt;/span&gt;\n                  &lt;span class=&quot;hljs-string&quot;&gt;&quot;movie3&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-string&quot;&gt;&quot;Horror&quot;&lt;/span&gt;\n          &lt;span class=&quot;hljs-string&quot;&gt;&quot;by_lead&quot;&lt;/span&gt;\n              &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jack Nicholson&quot;&lt;/span&gt;\n                  &lt;span class=&quot;hljs-string&quot;&gt;&quot;movie2&quot;&lt;/span&gt;\n      \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;There are probably more approaches. For example, this answer highlights an alternative tree-shaped custom index: &lt;a href=&quot;https://stackoverflow.com/a/34105063&quot;&gt;https://stackoverflow.com/a/34105063&lt;/a&gt;&lt;/p&gt;\n&lt;hr&gt;\n&lt;p&gt;If none of these options work for you, but you still want to store your data in Firebase, you can also consider using its &lt;a href=&quot;https://firebase.google.com/docs/firestore&quot; rel=&quot;noreferrer&quot;&gt;Cloud Firestore database&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Cloud Firestore can handle multiple equality filters in a single query, but only one range filter. Under the hood it essentially uses the same query model, but it&apos;s like it auto-generates the composite properties for you. See Firestore&apos;s documentation on &lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#compound_queries&quot; rel=&quot;noreferrer&quot;&gt;compound queries&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve written a personal library that allows you to order by multiple values, with all the ordering done on the server.&lt;/p&gt;\n&lt;h3&gt;&lt;a href=&quot;https://github.com/davideast/Querybase&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;strong&gt;Meet Querybase!&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;\n&lt;p&gt;Querybase takes in a Firebase Database Reference and an array of fields you wish to index on. When you create new records it will automatically handle the generation of keys that allow for multiple querying. The caveat is that it only supports straight equivalence (no less than or greater than).&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; databaseRef = firebase.&lt;span class=&quot;hljs-title function_&quot;&gt;database&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;ref&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;child&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;people&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; querybaseRef = querybase.&lt;span class=&quot;hljs-title function_&quot;&gt;ref&lt;/span&gt;(databaseRef, [&lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;age&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;location&apos;&lt;/span&gt;]);\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Automatically handles composite keys&lt;/span&gt;\nquerybaseRef.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;({ \n  &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;David&apos;&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;,\n  &lt;span class=&quot;hljs-attr&quot;&gt;location&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;SF&apos;&lt;/span&gt;\n});\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Find records by multiple fields&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// returns a Firebase Database ref&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; queriedDbRef = querybaseRef\n .&lt;span class=&quot;hljs-title function_&quot;&gt;where&lt;/span&gt;({\n   &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;David&apos;&lt;/span&gt;,\n   &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;27&lt;/span&gt;\n });\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Listen for realtime updates&lt;/span&gt;\nqueriedDbRef.&lt;span class=&quot;hljs-title function_&quot;&gt;on&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;value&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;snap&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(snap));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre&gt;&lt;code&gt;var ref = new Firebase(&apos;https://your.firebaseio.com/&apos;);\n\nQuery query = ref.orderByChild(&apos;genre&apos;).equalTo(&apos;comedy&apos;);\nquery.addValueEventListener(new ValueEventListener() {\n    @Override\n    public void onDataChange(DataSnapshot dataSnapshot) {\n        for (DataSnapshot movieSnapshot : dataSnapshot.getChildren()) {\n            Movie movie = dataSnapshot.getValue(Movie.class);\n            if (movie.getLead().equals(&apos;Jack Nicholson&apos;)) {\n                console.log(movieSnapshot.getKey());\n            }\n        }\n    }\n\n    @Override\n    public void onCancelled(FirebaseError firebaseError) {\n\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Frank&apos;s answer is good but Firestore introduced &lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#array_membership&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;array-contains&lt;/code&gt;&lt;/a&gt; recently that makes it easier to do AND queries.&lt;/p&gt;\n&lt;p&gt;You can create a &lt;code&gt;filters&lt;/code&gt; field to add you filters. You can add as many values as you need. For example to filter by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;Jack Nicholson&lt;/em&gt; you can add the value &lt;code&gt;comedy_Jack Nicholson&lt;/code&gt; but if you also you want to by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;2014&lt;/em&gt; you can add the value &lt;code&gt;comedy_2014&lt;/code&gt; without creating more fields.&lt;/p&gt;\n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;movies&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;movie1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;genre&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;As good as it gets&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;lead&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jack Nicholson&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;filters&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy_Jack Nicholson&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n        &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy_2014&quot;&lt;/span&gt;\n      &lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n  &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Firebase doesn&apos;t allow querying with multiple conditions. \nHowever, I did find a way around for this:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;We need to download the initial filtered data from the database and store it in an array list.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;                Query query = databaseReference.orderByChild(&quot;genre&quot;).equalTo(&quot;comedy&quot;);\n                databaseReference.addValueEventListener(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n\n                        ArrayList&amp;lt;Movie&amp;gt; movies = new ArrayList&amp;lt;&amp;gt;();\n                        for (DataSnapshot dataSnapshot1 : dataSnapshot.getChildren()) {\n                            String lead = dataSnapshot1.child(&quot;lead&quot;).getValue(String.class);\n                            String genre = dataSnapshot1.child(&quot;genre&quot;).getValue(String.class);\n\n                            movie = new Movie(lead, genre);\n\n                            movies.add(movie);\n\n                        }\n\n                        filterResults(movies, &quot;Jack Nicholson&quot;);\n\n                        }\n\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\n\n                    }\n                });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Once we obtain the initial filtered data from the database, we need to do further filter in our backend.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public void filterResults(final List&amp;lt;Movie&amp;gt; list,  final String genre) {\n        List&amp;lt;Movie&amp;gt; movies = new ArrayList&amp;lt;&amp;gt;();\n        movies = list.stream().filter(o -&amp;gt; o.getLead().equals(genre)).collect(Collectors.toList());\n        System.out.println(movies);\n\n        employees.forEach(movie -&amp;gt; System.out.println(movie.getFirstName()));\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For Cloud Firestore&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#compound_queries&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://firebase.google.com/docs/firestore/query-data/queries#compound_queries&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Compound queries\nYou can chain multiple equality operators (== or array-contains) methods to create more specific queries (logical AND). However, you must create a composite index to combine equality operators with the inequality operators, &amp;lt;, &amp;lt;=, &amp;gt;, and !=.&lt;/p&gt;\n&lt;p&gt;citiesRef.where(&apos;state&apos;, &apos;==&apos;, &apos;CO&apos;).where(&apos;name&apos;, &apos;==&apos;, &apos;Denver&apos;);\ncitiesRef.where(&apos;state&apos;, &apos;==&apos;, &apos;CA&apos;).where(&apos;population&apos;, &apos;&amp;lt;&apos;, 1000000);\nYou can perform range (&amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=) or not equals (!=) comparisons only on a single field, and you can include at most one array-contains or array-contains-any clause in a compound query:&lt;/p&gt;\n    ","\n&lt;p&gt;The data from firebase realtime database is as _InternalLinkedHashMap&amp;lt;dynamic, dynamic&amp;gt;.\nYou can also just convert this it to your map and query very easily.&lt;/p&gt;\n&lt;p&gt;For example, I have a chat app and I use realtime database to store the uid of the user and the bool value whether the user is online or not. As the picture below.&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/3WK64.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/3WK64.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Now, I have a class RealtimeDatabase and a static method getAllUsersOnineStatus().&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;static getOnilineUsersUID() {\nvar dbRef = FirebaseDatabase.instance;\nDatabaseReference reference = dbRef.reference().child(&quot;Online&quot;);\nreference.once().then((value) {\n  Map&amp;lt;String, bool&amp;gt; map = Map&amp;lt;String, bool&amp;gt;.from(value.value);\n  List users = [];\n  map.forEach((key, value) {\n    if (value) {\n      users.add(key);\n    }\n  });\n  print(users);\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;\n&lt;p&gt;It will print [NOraDTGaQSZbIEszidCujw1AEym2]&lt;/p&gt;\n&lt;p&gt;I am new to flutter If you know more please update the answer.&lt;/p&gt;\n    ","\n&lt;pre&gt;&lt;code&gt;ref.orderByChild(&quot;lead&quot;).startAt(&quot;Jack Nicholson&quot;).endAt(&quot;Jack Nicholson&quot;).listner....\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will work.&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Is this still relevant in 2016 with Firebase V3? Aren&apos;t there better ways to do this?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/816478/pier&quot; title=&quot;9,422 reputation&quot; class=&quot;comment-user&quot;&gt;Pier&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment62724715_26701282&quot;&gt;&lt;span title=&quot;2016-06-03 18:21:27Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 3, 2016 at 18:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I&apos;ve written a personal library to help wrap the #2 solution into an easy to use API. The library is called Querybase and it&apos;s available for JS users: &lt;a href=&quot;https://github.com/davideast/Querybasehttps://github.com/davideast/Querybase&quot; rel=&quot;nofollow noreferrer&quot;&gt;github.com/davideast/Querybasehttps://github.com/davideast/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1373162/david-east&quot; title=&quot;29,917 reputation&quot; class=&quot;comment-user&quot;&gt;David East&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment62796265_26701282&quot;&gt;&lt;span title=&quot;2016-06-06 13:33:28Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 6, 2016 at 13:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Why we can&apos;t use &lt;code&gt;.equalTo(&apos;comedy&apos;)&lt;/code&gt; instead of &lt;code&gt;.startAt(&apos;comedy&apos;).endAt(&apos;comedy&apos;)&lt;/code&gt;?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3692788/jcarlosr&quot; title=&quot;1,499 reputation&quot; class=&quot;comment-user&quot;&gt;JCarlosR&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment67977392_26701282&quot;&gt;&lt;span title=&quot;2016-11-01 14:33:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 1, 2016 at 14:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It is 2018, is there no simple solution for this? This is like query 101 in relational database. And given all the comments on David&apos;s video talking about SQL #8, I would&apos;ve expected Google to fix it by now. Did I miss some update?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1217820/snake&quot; title=&quot;13,816 reputation&quot; class=&quot;comment-user&quot;&gt;Snake&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment84941459_26701282&quot;&gt;&lt;span title=&quot;2018-02-24 21:47:53Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 24, 2018 at 21:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Snake Feb 2019 and the problem still isn&apos;t fixed.... Google are too slow.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1598906/supertecnoboff&quot; title=&quot;6,186 reputation&quot; class=&quot;comment-user&quot;&gt;Supertecnoboff&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment96163916_26701282&quot;&gt;&lt;span title=&quot;2019-02-14 10:17:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 14, 2019 at 10:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Any TypeScript definitions available for your library?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2535344/levi-fuller&quot; title=&quot;12,130 reputation&quot; class=&quot;comment-user&quot;&gt;Levi Fuller&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment63274949_37658995&quot;&gt;&lt;span title=&quot;2016-06-19 20:29:05Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 19, 2016 at 20:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It&apos;s written in TS! So just import :)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1373162/david-east&quot; title=&quot;29,917 reputation&quot; class=&quot;comment-user&quot;&gt;David East&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment63274967_37658995&quot;&gt;&lt;span title=&quot;2016-06-19 20:30:29Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 19, 2016 at 20:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;do you know why they made the database so restrictive ?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4299560/ced&quot; title=&quot;14,316 reputation&quot; class=&quot;comment-user&quot;&gt;Ced&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment78569659_37658995&quot;&gt;&lt;span title=&quot;2017-08-21 21:38:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 21, 2017 at 21:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Any option to do an IOS Swift/Android version&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4297337/mding5692&quot; title=&quot;776 reputation&quot; class=&quot;comment-user&quot;&gt;mding5692&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment79331285_37658995&quot;&gt;&lt;span title=&quot;2017-09-12 19:46:07Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 12, 2017 at 19:46&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;David, any android/Java equivalence to it?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1217820/snake&quot; title=&quot;13,816 reputation&quot; class=&quot;comment-user&quot;&gt;Snake&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment84941474_37658995&quot;&gt;&lt;span title=&quot;2018-02-24 21:48:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 24, 2018 at 21:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;There is no getLead() method on DataSnapshot object.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4581287/parag-kadam&quot; title=&quot;3,098 reputation&quot; class=&quot;comment-user&quot;&gt;Parag Kadam&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64748622_34902598&quot;&gt;&lt;span title=&quot;2016-07-31 13:59:20Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 31, 2016 at 13:59&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;He converted it to Movie object and assuming there is a getLead() metho.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7278055/kim-g-pham&quot; title=&quot;145 reputation&quot; class=&quot;comment-user&quot;&gt;Kim G Pham&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment82608645_34902598&quot;&gt;&lt;span title=&quot;2017-12-14 22:20:03Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 14, 2017 at 22:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thankz a lot. It&apos;s working such as more where clauses&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8403554/nuwan-withanage&quot; title=&quot;373 reputation&quot; class=&quot;comment-user&quot;&gt;Nuwan Withanage&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment89760744_34902598&quot;&gt;&lt;span title=&quot;2018-07-18 06:16:22Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 18, 2018 at 6:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I am using firestore. How can we use where conditions in this situation - fetch all the chat conversations where &quot;(senderid == loggedinuserid and receiverid == 10) or (senderid == 10 and receiverid == loggedinuserid)&quot;? kindly suggest. Thanks.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10329023/kamlesh&quot; title=&quot;3,934 reputation&quot; class=&quot;comment-user&quot;&gt;Kamlesh&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120176673_34902598&quot;&gt;&lt;span title=&quot;2021-06-15 20:01:51Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 15, 2021 at 20:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is correct, although it would be better to put code in codeblocks.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/14888095/john-miller&quot; title=&quot;407 reputation&quot; class=&quot;comment-user&quot;&gt;John Miller&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment126537637_69467736&quot;&gt;&lt;span title=&quot;2022-03-24 01:22:39Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 24 at 1:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":280,"title":"Query based on multiple where clauses in Firebase","content":"\n                \n&lt;pre class=&quot;lang-json s-code-block&quot;&gt;&lt;code class=&quot;hljs language-json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;hljs-attr&quot;&gt;&quot;movies&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;movie1&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;genre&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;As good as it gets&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;lead&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jack Nicholson&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;movie2&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;genre&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Horror&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;The Shining&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;lead&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jack Nicholson&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n    &lt;span class=&quot;hljs-attr&quot;&gt;&quot;movie3&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;genre&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;comedy&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;The Mask&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;\n      &lt;span class=&quot;hljs-attr&quot;&gt;&quot;lead&quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Jim Carrey&quot;&lt;/span&gt;\n    &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n  &lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;hljs-punctuation&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I am a Firebase newbie. How can I retrieve a result from the data above &lt;strong&gt;where &lt;code&gt;genre = &apos;comedy&apos;&lt;/code&gt; AND &lt;code&gt;lead = &apos;Jack Nicholson&apos;&lt;/code&gt;&lt;/strong&gt;?&lt;/p&gt;\n&lt;p&gt;What options do I have?&lt;/p&gt;\n    ","slug":"query-based-on-multiple-where-clauses-in-firebase-1657387494547","postType":"QUESTION","createdAt":"2022-07-09T17:24:54.000Z","updatedAt":"2022-07-09T17:24:54.000Z","tags":[{"id":1724,"name":"firebase","slug":"firebase","createdAt":"2022-07-09T17:24:54.000Z","updatedAt":"2022-07-09T17:24:54.000Z","Questions_Tags":{"questionId":280,"tagId":1724}}]}]}},"__N_SSG":true}