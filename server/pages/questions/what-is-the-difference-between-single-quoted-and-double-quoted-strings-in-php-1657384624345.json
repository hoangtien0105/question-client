{"pageProps":{"data":{"answer":["\n&lt;p&gt;&lt;a href=&quot;https://php.net/manual/en/language.types.string.php&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;PHP strings&lt;/strong&gt;&lt;/a&gt; can be specified not just in &lt;em&gt;two&lt;/em&gt; ways, but in &lt;strong&gt;four&lt;/strong&gt; ways.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Single quoted strings&lt;/strong&gt;&lt;/a&gt; will display things almost completely &quot;as is.&quot; Variables and most escape sequences will not be interpreted. The exception is that to display a literal single quote, you can escape it with a back slash &lt;code&gt;\\&apos;&lt;/code&gt;, and to display a back slash, you can escape it with another backslash &lt;code&gt;\\\\&lt;/code&gt; (&lt;strong&gt;So yes, even single quoted strings are parsed&lt;/strong&gt;).&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Double quote strings&lt;/strong&gt;&lt;/a&gt; will display a host of escaped characters (including some regexes), and variables in the strings will be evaluated. An important point here is that &lt;strong&gt;you can use curly braces to isolate the name of the variable you want evaluated&lt;/strong&gt;. For example let&apos;s say you have the variable &lt;code&gt;$type&lt;/code&gt; and you want to &lt;code&gt;echo &quot;The $types are&quot;&lt;/code&gt;. That will look for the variable &lt;code&gt;$types&lt;/code&gt;. To get around this use &lt;code&gt;echo &quot;The {$type}s are&quot;&lt;/code&gt; You can put the left brace before or after the dollar sign. Take a look at &lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.parsing&quot; rel=&quot;noreferrer&quot;&gt;string parsing&lt;/a&gt; to see how to use array variables and such.&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/a&gt; string syntax works like double quoted strings. It starts with &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;. After this operator, an identifier is provided, then a newline. The string itself follows, and then the same identifier again to close the quotation. You don&apos;t need to escape quotes in this syntax. &lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; (since PHP 5.3.0) string syntax works essentially like single quoted strings. The difference is that not even single quotes or backslashes have to be escaped. A nowdoc is identified with the same &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; sequence used for heredocs, but the identifier which follows is enclosed in single quotes, e.g. &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&apos;EOT&apos;&lt;/code&gt;. &lt;strong&gt;No parsing is done in nowdoc.&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;\nSingle quotes inside of single quotes and double quotes inside of double quotes must be escaped:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;He said &quot;What\\&apos;s up?&quot;&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$string&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;He said \\&quot;What&apos;s up?\\&quot;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Speed:&lt;/strong&gt;&lt;br&gt;\nI would not put too much weight on single quotes being faster than double quotes. They probably are faster in certain situations. Here&apos;s an article &lt;a href=&quot;https://web.archive.org/web/20170703004051/https://www.phplens.com/lens/php-book/optimizing-debugging-php.php&quot; rel=&quot;noreferrer&quot;&gt;explaining one manner in which single and double quotes are essentially equally fast since PHP 4.3&lt;/a&gt; (&lt;code&gt;Useless Optimizations&lt;/code&gt; toward the bottom, section &lt;code&gt;C&lt;/code&gt;). Also, this &lt;a href=&quot;https://www.phpbench.com/&quot; rel=&quot;noreferrer&quot;&gt;&lt;strong&gt;benchmarks page&lt;/strong&gt;&lt;/a&gt; has a single vs double quote comparison. Most of the comparisons are the same. There is one comparison where double quotes are slower than single quotes.&lt;/p&gt;\n    ","\n&lt;p&gt;Things get evaluated in double quotes but not in single:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$s&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;dollars&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;This costs a lot of $s.&apos;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// This costs a lot of $s.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;This costs a lot of &lt;span class=&quot;hljs-subst&quot;&gt;$s&lt;/span&gt;.&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-comment&quot;&gt;// This costs a lot of dollars.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;&lt;code&gt;&apos;&lt;/code&gt; Single quoted&lt;/h1&gt;\n\n&lt;p&gt;The simplest way to specify a string is to enclose it in single quotes. Single quote is generally faster, and everything quoted inside treated as plain string.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;Start with a simple string&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;String\\&apos;s apostrophe&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;String with a php variable&apos;&lt;/span&gt;.&lt;span class=&quot;hljs-variable&quot;&gt;$name&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h1&gt;&lt;code&gt;&quot;&lt;/code&gt; Double quoted&lt;/h1&gt;\n\n&lt;p&gt;Use double quotes in PHP to avoid having to use the period to separate code (Note: Use curly braces &lt;code&gt;{}&lt;/code&gt; to include variables if you do not want to use concatenation (&lt;code&gt;.&lt;/code&gt;) operator) in string.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Start with a simple string&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;String&apos;s apostrophe&quot;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;String with a php variable &lt;span class=&quot;hljs-subst&quot;&gt;{$name}&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Is there a performance benefit single quote vs double quote in PHP?&lt;/h2&gt;\n\n&lt;p&gt;Yes. It is slightly faster to use single quotes.&lt;/p&gt;\n\n&lt;p&gt;PHP won&apos;t use additional processing to interpret what is inside the single quote. when you use double quotes PHP has to parse to check if there are any variables within the string.&lt;/p&gt;\n    ","\n&lt;p&gt;A single-quoted string does not have variables within it interpreted.  A double-quoted string does.&lt;/p&gt;\n\n&lt;p&gt;Also, a double-quoted string can contain apostrophes without backslashes, while a single-quoted string can contain unescaped quotation marks.&lt;/p&gt;\n\n&lt;p&gt;The single-quoted strings are faster at runtime because they do not need to be parsed.&lt;/p&gt;\n    ","\n&lt;p&gt;In PHP, both &lt;code&gt;&apos;my name&apos;&lt;/code&gt; and &lt;code&gt;&quot;my name&quot;&lt;/code&gt; are string. You can read more about it &lt;a href=&quot;http://www.php.net/manual/en/book.strings.php&quot; rel=&quot;noreferrer&quot;&gt;at the PHP manual&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Thing you should know are&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;name&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-variable&quot;&gt;$b&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;my &lt;span class=&quot;hljs-subst&quot;&gt;$a&lt;/span&gt;&quot;&lt;/span&gt;; == &lt;span class=&quot;hljs-string&quot;&gt;&apos;my name&apos;&lt;/span&gt;\n&lt;span class=&quot;hljs-variable&quot;&gt;$c&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&apos;my $a&apos;&lt;/span&gt;; != &lt;span class=&quot;hljs-string&quot;&gt;&apos;my name&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In PHP, people use single quote to define a constant string, like &lt;code&gt;&apos;a&apos;&lt;/code&gt;, &lt;code&gt;&apos;my name&apos;&lt;/code&gt;, &lt;code&gt;&apos;abc xyz&apos;&lt;/code&gt;, while using double quote to define a string contain identifier like &lt;code&gt;&quot;a $b $c $d&quot;&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;And other thing is, &lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;my name&apos;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is faster than&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;my name&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;my &apos;&lt;/span&gt; . &lt;span class=&quot;hljs-variable&quot;&gt;$a&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is slower than&lt;/p&gt;\n\n&lt;pre class=&quot;lang-php s-code-block&quot;&gt;&lt;code class=&quot;hljs language-php&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;my &lt;span class=&quot;hljs-subst&quot;&gt;$a&lt;/span&gt;&quot;&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is true for other used of string.&lt;/p&gt;\n    ","\n&lt;p&gt;Both kinds of enclosed characters are strings.  One type of quote is conveniently used to enclose the other type of quote.  &lt;code&gt;&quot;&apos;&quot;&lt;/code&gt;  and &lt;code&gt;&apos;&quot;&apos;&lt;/code&gt;.   The biggest difference between the types of quotes is that enclosed identifier references are substituted for inside double quotes, but not inside single quotes.&lt;/p&gt;\n    ","\n&lt;p&gt;Some might say that I&apos;m a little off-topic, but here it is anyway:&lt;/p&gt;\n&lt;p&gt;You don&apos;t necessarily have to choose because of your string&apos;s content between:&lt;br&gt;\n&lt;code&gt;echo &quot;It&apos;s \\&quot;game\\&quot; time.&quot;;&lt;/code&gt; or &lt;code&gt;echo &apos;It\\&apos;s &quot;game&quot; time.&apos;;&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;If you&apos;re familiar with the use of the english quotation marks, and the correct character for the apostrophe, you can use either double or single quotes, because it won&apos;t matter anymore:&lt;br&gt;\n&lt;code&gt;echo &quot;Its game time.&quot;;&lt;/code&gt; and &lt;code&gt;echo &apos;Its game time.&apos;;&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;Of course you can also add variables if needed. Just don&apos;t forget that they get evaluated only when in double quotes!&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;+1 for the curly brace trick. Wasn&apos;t aware of that. Too bad it doesn&apos;t follow the same conventions as shell scripts, i.e. &lt;code&gt;${variablename}&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/238948/devios1&quot; title=&quot;35,563 reputation&quot; class=&quot;comment-user&quot;&gt;devios1&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26053385_3446286&quot;&gt;&lt;span title=&quot;2013-07-25 00:26:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 25, 2013 at 0:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I only use double quotes, when i need it for &lt;code&gt;\\n&lt;/code&gt;, anything else in my &lt;code&gt;PHP&lt;/code&gt; code is in single quotes.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1286942/jo-smo&quot; title=&quot;6,475 reputation&quot; class=&quot;comment-user&quot;&gt;Jo Smo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment38067771_3446286&quot;&gt;&lt;span title=&quot;2014-07-04 13:26:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 4, 2014 at 13:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;seems &apos;heredoc&apos; is ported to PHP from bash or is it not? Anyways great answer, so a +1 Thanks.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1620779/sjsam&quot; title=&quot;20,794 reputation&quot; class=&quot;comment-user&quot;&gt;sjsam&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment44073487_3446286&quot;&gt;&lt;span title=&quot;2015-01-08 06:20:30Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 8, 2015 at 6:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Interesting note in PHP documentation comments: &lt;a href=&quot;http://php.net/manual/en/language.types.string.php#120160&quot; rel=&quot;nofollow noreferrer&quot;&gt;php.net/manual/en/language.types.string.php#120160&lt;/a&gt; - &quot;The double-quoted strings &quot;which look so $slow since they have to parse everything for \\n backslashes and $dollar signs to do variable expansion&quot;, turned out to be the FASTEST string concatenation method in PHP - PERIOD! Single-quotes are only faster if your string is completely literal (with nothing to parse in it and nothing to concatenate), but the margin is very tiny and doesn&apos;t matter.&quot;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1045774/dregad&quot; title=&quot;993 reputation&quot; class=&quot;comment-user&quot;&gt;dregad&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment78178667_3446286&quot;&gt;&lt;span title=&quot;2017-08-10 09:45:31Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 10, 2017 at 9:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Note: slowness of &lt;code&gt;&quot;&lt;/code&gt; double quotes is all but a thing of the past.  Updates have increased processing of double quotes to be as fast, in all but extreme cases, these days.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5411817/sherylhohman&quot; title=&quot;14,640 reputation&quot; class=&quot;comment-user&quot;&gt;SherylHohman&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95365285_3446286&quot;&gt;&lt;span title=&quot;2019-01-19 20:45:19Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 19, 2019 at 20:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Escaped single quotes and escaped backslashes are expanded even in single quoted strings.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/186636/peter-ajtai&quot; title=&quot;55,889 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Ajtai&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3591934_3446245&quot;&gt;&lt;span title=&quot;2010-08-10 05:34:26Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Aug 10, 2010 at 5:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;A mistake that many developers new to PHP are running in:  &lt;code&gt;$mailbody = &apos;I want a line break:\\nDone.&apos;;&lt;/code&gt; is keeping the &lt;code&gt;\\n&lt;/code&gt; alive. Whereas: &lt;code&gt;$mailbody = &quot;I want a line break:\\nDone.&quot;;&lt;/code&gt; will parse the line break.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1066234/avatar&quot; title=&quot;12,997 reputation&quot; class=&quot;comment-user&quot;&gt;Avatar&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment35408611_3446245&quot;&gt;&lt;span title=&quot;2014-04-18 14:25:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 18, 2014 at 14:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;My two cents is needed only for interviews or for malware development.   Just compare var_dump() from two expressions:  &lt;code&gt;$testWithAsciiAndUtf8Characters = &quot;\\x48\\x41\\x4c\\114\\117 \\u{0147}\\u{012B}\\u{0144}\\u{014D}!&quot;;&lt;/code&gt;  &lt;code&gt;$simpleTest = &apos;\\x48\\x41\\x4c\\114\\117 \\u{0147}\\u{012B}\\u{0144}\\u{014D}!&apos;;&lt;/code&gt;  Character sequences in &lt;code&gt;$testWithAsciiAndUtf8Characters&lt;/code&gt; were transformed to string with real letters.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2053862/rostyslav-pylypenko&quot; title=&quot;266 reputation&quot; class=&quot;comment-user&quot;&gt;Rostyslav Pylypenko&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment93659225_3446245&quot;&gt;&lt;span title=&quot;2018-11-20 11:26:52Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 20, 2018 at 11:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The &lt;i&gt;one&lt;/i&gt; exception to single quotes NOT parsing anything within the string, is what you can use &lt;code&gt;\\&apos;&lt;/code&gt; to escape a single apostrophe for use within the string (or &lt;code&gt;\\\\&apos;&lt;/code&gt; to display the backslash).  Note that traditional escape sequences, such as &lt;code&gt;\\n&lt;/code&gt; will NOT get parsed to the newline character. &lt;a href=&quot;http://php.net/manual/en/language.types.string.php&quot; rel=&quot;nofollow noreferrer&quot;&gt;PHP docs on strings&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5411817/sherylhohman&quot; title=&quot;14,640 reputation&quot; class=&quot;comment-user&quot;&gt;SherylHohman&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95365340_23025917&quot;&gt;&lt;span title=&quot;2019-01-19 20:48:53Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 19, 2019 at 20:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I see on all of the answers that: you can use the variable&apos;s name inside a double quote to print out the variable&apos;s value, but you&apos;re saying, the variable name should also be enclosed within curly braces to avoid the need for using a concatenating period. So if both &quot;$my_var&quot; and &quot;{$my_var}&quot; output $my_var&apos;s value, what are the braces for? Thanks!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3784481/bahman-a&quot; title=&quot;936 reputation&quot; class=&quot;comment-user&quot;&gt;Bahman.A&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104758214_23025917&quot;&gt;&lt;span title=&quot;2019-12-10 21:27:53Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 10, 2019 at 21:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Bahman.A I know it&apos;s been years and you probably already know the answer by this point but in case others are looking in future for the same thing: The curly branches are added when vars are used in double quotes primarily for readability of the code. Highly useful when quickly scanning to grok it is a var and not a string literal.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2375493/william-patton&quot; title=&quot;710 reputation&quot; class=&quot;comment-user&quot;&gt;William Patton&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment121486941_23025917&quot;&gt;&lt;span title=&quot;2021-08-11 12:43:10Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 11, 2021 at 12:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Bahman.A I believe that the reason why you would use &lt;code&gt;&quot;{$one}&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;$one&quot;&lt;/code&gt; isn&apos;t readability but instead for exact variable lookup. &lt;code&gt;{ }&lt;/code&gt; also allows for array and object lookups. The dot operator, used for concatination of strings, would still be required for a function lookup&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8353912/justin-l&quot; title=&quot;111 reputation&quot; class=&quot;comment-user&quot;&gt;Justin L&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125566017_23025917&quot;&gt;&lt;span title=&quot;2022-02-08 08:57:41Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 8 at 8:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Single quoted strings also use less memory.  The fastest way to handle strings in PHP is with single quotes and using the . operator to concatenate strings and variables.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/72924/ribaldeddie&quot; title=&quot;5,106 reputation&quot; class=&quot;comment-user&quot;&gt;RibaldEddie&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3591859_3446228&quot;&gt;&lt;span title=&quot;2010-08-10 05:16:21Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Aug 10, 2010 at 5:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;hmmm, correct me if I&apos;m wrong but the base language for PHP is C right? Then why string quotes differ in PHP and C?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/379800/rob-waminal&quot; title=&quot;17,549 reputation&quot; class=&quot;comment-user owner&quot;&gt;rob waminal&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3591872_3446228&quot;&gt;&lt;span title=&quot;2010-08-10 05:19:36Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Aug 10, 2010 at 5:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@rob waminal: PHP may be implemented in C, but it is a different language.  The PHP language specifies these semantics.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/383402/borealid&quot; title=&quot;91,479 reputation&quot; class=&quot;comment-user&quot;&gt;Borealid&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3591876_3446228&quot;&gt;&lt;span title=&quot;2010-08-10 05:21:33Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Aug 10, 2010 at 5:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Ribald - Wouldn&apos;t nowdoc syntax be faster? Single quoted strings are parsed for escaped single quotes and backslashes.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/186636/peter-ajtai&quot; title=&quot;55,889 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Ajtai&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3591928_3446228&quot;&gt;&lt;span title=&quot;2010-08-10 05:33:35Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Aug 10, 2010 at 5:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Peter, you may be correct,  I&apos;ve never bothered to really dig in to it. The PHP documentation makes the speed claim, I decided to believe the docs on faith. :)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/72924/ribaldeddie&quot; title=&quot;5,106 reputation&quot; class=&quot;comment-user&quot;&gt;RibaldEddie&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3592036_3446228&quot;&gt;&lt;span title=&quot;2010-08-10 05:57:02Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Aug 10, 2010 at 5:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":105,"title":"What is the difference between single-quoted and double-quoted strings in PHP?","content":"\n                \n&lt;p&gt;I&apos;m a little confused why I see some code in PHP with string placed in single quotes and sometimes in double quotes.&lt;/p&gt;\n\n&lt;p&gt;I just know in .NET, or the C language, if it is in a single quote, that means it is a character, not a string.&lt;/p&gt;\n    ","slug":"what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php-1657384624345","postType":"QUESTION","createdAt":"2022-07-09T16:37:04.000Z","updatedAt":"2022-07-09T16:37:04.000Z","tags":[{"id":385,"name":"syntax","slug":"syntax","createdAt":"2022-07-09T16:37:04.000Z","updatedAt":"2022-07-09T16:37:04.000Z","Questions_Tags":{"questionId":105,"tagId":385}}]}},"__N_SSG":true}