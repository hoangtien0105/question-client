{"pageProps":{"data":{"answer":["\n&lt;h2&gt;2017  2021 update&lt;/h2&gt;\n&lt;p&gt;Since 2009 when this question was asked, JavaScript has evolved significantly. All other answers are now obsolete or overly complicated. Here is the current best practice:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, ms));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or as a one-liner:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;r&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(r, &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Or&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt; = ms =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;r&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(r, ms));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Use it as:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&amp;lt;duration&amp;gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Demo:&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, ms));\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;demo&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`Waiting &lt;span class=&quot;hljs-subst&quot;&gt;${i}&lt;/span&gt; seconds...`&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(i * &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n    }\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;Done&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;demo&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Note that,&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;&lt;code&gt;await&lt;/code&gt; can only be executed in functions prefixed with the &lt;code&gt;async&lt;/code&gt; keyword, or at the top level of your script in &lt;a href=&quot;https://stackoverflow.com/questions/46515764/how-can-i-use-async-await-at-the-top-level/56590390#56590390&quot;&gt;an increasing number of environments&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;await&lt;/code&gt; only pauses the current &lt;code&gt;async&lt;/code&gt; function. This means it does not block the execution of the rest of the script, which is what you want in the vast majority of the cases. If you do want a blocking construct, see &lt;a href=&quot;https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep/56406126#56406126&quot;&gt;this answer&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Atomics&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.wait&lt;/code&gt;, but note that most browsers will not allow it on the browser&apos;s main thread.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Two new JavaScript features (as of 2017) helped write this &quot;sleep&quot; function:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot; rel=&quot;noreferrer&quot;&gt;Promises, a native feature of ES2015&lt;/a&gt; (aka ES6). We also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; rel=&quot;noreferrer&quot;&gt;arrow functions&lt;/a&gt; in the definition of the sleep function.&lt;/li&gt;\n&lt;li&gt;The &lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;async/await&lt;/code&gt;&lt;/a&gt; feature lets the code explicitly wait for a promise to settle (resolve or reject).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2&gt;Compatibility&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;promises are supported &lt;a href=&quot;http://node.green/#Promise&quot; rel=&quot;noreferrer&quot;&gt;in Node v0.12+&lt;/a&gt; and &lt;a href=&quot;http://caniuse.com/#feat=promises&quot; rel=&quot;noreferrer&quot;&gt;widely supported in browsers&lt;/a&gt;, except IE&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; landed in V8 and has been &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/async-functions&quot; rel=&quot;noreferrer&quot;&gt;enabled by default since Chrome 55&lt;/a&gt; (released in Dec 2016)\n&lt;ul&gt;\n&lt;li&gt;it landed &lt;a href=&quot;https://blog.risingstack.com/async-await-node-js-7-nightly/&quot; rel=&quot;noreferrer&quot;&gt;in Node 7 in October 2016&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;and also landed &lt;a href=&quot;https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&quot; rel=&quot;noreferrer&quot;&gt;in Firefox Nightly in November 2016&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;If for some reason you&apos;re using Node older than 7 (which reached &lt;a href=&quot;https://github.com/nodejs/Release#end-of-life-releases&quot; rel=&quot;noreferrer&quot;&gt;end of life in 2017&lt;/a&gt;), or are targeting old browsers, &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; can still be used via &lt;a href=&quot;https://babeljs.io/&quot; rel=&quot;noreferrer&quot;&gt;Babel&lt;/a&gt; (a tool that will &lt;a href=&quot;https://www.stevefenton.co.uk/2012/11/compiling-vs-transpiling/&quot; rel=&quot;noreferrer&quot;&gt;transpile&lt;/a&gt; JavaScript + new features into plain old JavaScript), with the &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;transform-async-to-generator&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt;\n    ","\n&lt;p&gt;(See the &lt;a href=&quot;https://stackoverflow.com/a/39914235/11236&quot;&gt;updated answer for 2016&lt;/a&gt;)&lt;/p&gt;\n&lt;p&gt;I think it&apos;s perfectly reasonable to want to perform an action, wait, and then perform another action. If you are used to writing in multi-threaded languages, you probably have the idea of yielding execution for a set amount of time until your thread wakes up.&lt;/p&gt;\n&lt;p&gt;The issue here is that JavaScript is a single-thread event-based model. While in a specific case, it might be nice to have the whole engine wait for a few seconds, in general it is bad practice. Suppose I wanted to make use of your functions while writing my own? When I called your method, my methods would all freeze up. If JavaScript could somehow preserve your function&apos;s execution context, store it somewhere, then bring it back and continue later, then sleep could happen, but that would basically be threading.&lt;/p&gt;\n&lt;p&gt;So you are pretty much stuck with what others have suggested -- you&apos;ll need to break your code up into multiple functions.&lt;/p&gt;\n&lt;p&gt;Your question is a bit of a false choice, then. There is no way to sleep in the way you want, nor should you pursue the solution you suggest.&lt;/p&gt;\n    ","\n&lt;p&gt;In JavaScript, I rewrite every function so that it can end as soon as possible. You want the browser back in control so it can make your DOM changes.&lt;/p&gt;\n\n&lt;p&gt;Every time I&apos;ve wanted a sleep in the middle of my function, I refactored to use a &lt;code&gt;setTimeout()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;h2&gt;Edit&lt;/h2&gt;\n\n&lt;p&gt;The infamous sleep, or delay, function within any language is much debated.  Some will say that there should always be a signal or callback to fire a given functionality, others will argue that sometimes an arbitrary moment of delay is useful.  I say that to each their own and one rule can never dictate anything in this industry.&lt;/p&gt;\n\n&lt;p&gt;Writing a sleep function is simple and made even more usable with JavaScript Promises:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// sleep time expects milliseconds&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt; (time) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, time));\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage!&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Do something after the sleep!&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;In &lt;a href=&quot;https://en.wikipedia.org/wiki/Firebug_%28software%29&quot; rel=&quot;noreferrer&quot;&gt;Firebug&lt;/a&gt; (and probably other JavaScript consoles), nothing happen after hitting enter, only after the sleep duration specified (...)&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepFor&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;sleepDuration&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; now = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;() &amp;lt; now + sleepDuration){ &lt;span class=&quot;hljs-comment&quot;&gt;/* Do nothing */&lt;/span&gt; }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Example of use:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepFor&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;sleepDuration&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; now = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;() &amp;lt; now + sleepDuration){ \n        &lt;span class=&quot;hljs-comment&quot;&gt;/* Do nothing */&lt;/span&gt; \n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepThenAct&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-title function_&quot;&gt;sleepFor&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, JavaScript sleep!&quot;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;sleepThenAct&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Note: &lt;strong&gt;Only for debugging and development&lt;/strong&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I agree with the other posters. A busy sleep is just a bad idea.&lt;/p&gt;\n&lt;p&gt;However, setTimeout does not hold up execution. It executes the next line of the function immediately after the timeout is SET, not after the timeout expires, so that does not accomplish the same task that a sleep would accomplish.&lt;/p&gt;\n&lt;p&gt;The way to do it is to breakdown your function into before and after parts.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;doStuff&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n  &lt;span class=&quot;hljs-comment&quot;&gt;// Do some things&lt;/span&gt;\n  &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(continueExecution, &lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot;&gt;// Wait ten seconds before continuing&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;continueExecution&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;)\n{\n   &lt;span class=&quot;hljs-comment&quot;&gt;// Finish doing things after the pause&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Make sure your function names still accurately describe what each piece is doing (i.e., GatherInputThenWait and CheckInput, rather than funcPart1 and funcPart2)&lt;/p&gt;\n&lt;p&gt;This method achieves the purpose of not executing the lines of code you decide until &lt;em&gt;after&lt;/em&gt; your timeout, while still returning control back to the client PC to execute whatever else it has queued up.&lt;/p&gt;\n&lt;p&gt;As pointed out in the comments this will absolutely &lt;em&gt;not work&lt;/em&gt; in a loop. You could do some fancy (ugly) hacking to make it work in a loop, but in general that will just make for disastrous spaghetti code.&lt;/p&gt;\n    ","\n&lt;p&gt;For the love of $DEITY please do not make a busy-wait sleep function.  &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; do everything you need.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; showHide = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;showHide&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n    showHide.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;visibility&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;initial&quot;&lt;/span&gt;;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;() =&amp;gt;&lt;/span&gt; {\n        showHide.&lt;span class=&quot;hljs-property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;visibility&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&quot;hidden&quot;&lt;/span&gt;\n    }, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n    ;\n}, &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;);   &lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showHide&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello! Goodbye!&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Every two second interval hide text for one second. This shows how to use setInterval and setTimeout to show and hide text each second. &lt;/p&gt;\n    ","\n&lt;p&gt;If (like me) you&apos;re using JavaScript with &lt;a href=&quot;https://en.wikipedia.org/wiki/Rhino_%28JavaScript_engine%29&quot; rel=&quot;nofollow noreferrer&quot;&gt;Rhino&lt;/a&gt;, you can use...&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;\n{\n  java.&lt;span class=&quot;hljs-property&quot;&gt;lang&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(timeInMilliseconds);\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (e)\n{\n  &lt;span class=&quot;hljs-comment&quot;&gt;/*\n   * This will happen if the sleep is woken up - you might want to check\n   * if enough time has passed and sleep again if not - depending on how\n   * important the sleep time is to you.\n   */&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you&apos;re using jQuery, someone actually created a &quot;delay&quot; plugin that&apos;s nothing more than a wrapper for setTimeout:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Delay Plugin for jQuery&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// - http://www.evanbot.com&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// - © 2008 Evan Byrne&lt;/span&gt;\n\njQuery.&lt;span class=&quot;hljs-property&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;delay&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;time,func&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(func,time);\n    });\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can then just use it in a row of function calls as expected:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;$(&lt;span class=&quot;hljs-string&quot;&gt;&apos;#warning&apos;&lt;/span&gt;)\n.&lt;span class=&quot;hljs-title function_&quot;&gt;addClass&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;highlight&apos;&lt;/span&gt;)\n.&lt;span class=&quot;hljs-title function_&quot;&gt;delay&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)\n.&lt;span class=&quot;hljs-title function_&quot;&gt;removeClass&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;highlight&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Use:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, &lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Make sure your calling function is async. This is verified and is working fine.&lt;/p&gt;\n    ","\n&lt;p&gt;I&apos;ve searched for a sleep solution too (not for production code, only for development and tests) and found this article:&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://narayanraman.blogspot.com/2005/12/javascript-sleep-or-wait.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaScript sleep() or wait()&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;...and here&apos;s another article with client-side solutions: &lt;em&gt;&lt;a href=&quot;http://www.devcheater.com/&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaScript sleep&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;Also, when you are calling &lt;code&gt;alert()&lt;/code&gt;, your code will be paused too, while the alert is shown -- you need to find a way to not display alert, but get the same effect. :)&lt;/p&gt;\n    ","\n&lt;p&gt;Here you go.  As the code says, don&apos;t be a bad developer and use this on websites.  It&apos;s a development utility function.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Basic sleep function based on ms.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// DO NOT USE ON PUBLIC FACING WEBSITES.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; unixtime_ms = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;() &amp;lt; unixtime_ms + ms) {}\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Since April 2021 (&lt;strong&gt;&lt;a href=&quot;https://nodejs.medium.com/node-js-16-available-now-7f5099a97e70&quot; rel=&quot;noreferrer&quot;&gt;Node.js 16+&lt;/a&gt;&lt;/strong&gt;), a new promisified version of &lt;code&gt;setTimeout()&lt;/code&gt; is available:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; { &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt; } &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;timers/promises&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; res = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;result&apos;&lt;/span&gt;)\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(res);  &lt;span class=&quot;hljs-comment&quot;&gt;// Prints &apos;result&apos;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;hr&gt;\n&lt;p&gt;Thank &lt;a href=&quot;https://stackoverflow.com/users/3232170/kigiri&quot;&gt;@kigiri&lt;/a&gt;. See the official documentation:\n&lt;a href=&quot;https://nodejs.org/api/timers.html#timerspromisessettimeoutdelay-value-options&quot; rel=&quot;noreferrer&quot;&gt;https://nodejs.org/api/timers.html#timerspromisessettimeoutdelay-value-options&lt;/a&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Here&apos;s a simple solution using a synchronous XMLHttpRequest:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; request = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;XMLHttpRequest&lt;/span&gt;();\n  request.&lt;span class=&quot;hljs-title function_&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;GET&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/sleep.php?n=&apos;&lt;/span&gt; + n, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// `false` makes the request synchronous&lt;/span&gt;\n  request.&lt;span class=&quot;hljs-title function_&quot;&gt;send&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Contents of file &lt;em&gt;sleep.php&lt;/em&gt;:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;?php &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;($_GET[&lt;span class=&quot;hljs-string&quot;&gt;&apos;n&apos;&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now call it with:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Using an existing server implementation&lt;/h3&gt;\n&lt;p&gt;If you don&apos;t have your own application server (for the above PHP script), you could use some online service instead. For instance:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;n&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; request = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;XMLHttpRequest&lt;/span&gt;();\n    request.&lt;span class=&quot;hljs-title function_&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;GET&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;http://httpstat.us/200?sleep=&apos;&lt;/span&gt; + n, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n    request.&lt;span class=&quot;hljs-title function_&quot;&gt;send&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;);\n};\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;one second delay completed.&quot;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h2&gt;Support&lt;/h2&gt;\n&lt;p&gt;About passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;asynchronous&lt;/code&gt; parameter, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open#parameters&quot; rel=&quot;nofollow noreferrer&quot;&gt;mdn&lt;/a&gt; notes:&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Synchronous requests on the main thread can be easily disruptive to the user experience and should be avoided; in fact, many browsers have deprecated synchronous XHR support on the main thread entirely. Synchronous requests are permitted in Workers.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;h2&gt;The actual delay&lt;/h2&gt;\n&lt;p&gt;The number of milliseconds that is passed as argument will be the time that the server waits between receiving the request and sending the response. The delay incurred by transmission and server load will be &lt;em&gt;added&lt;/em&gt; to that.&lt;/p&gt;\n    ","\n&lt;p&gt;An inliner:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;)))();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;500 here is the time in milliseconds for which VM will wait before moving to the next line of code.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Bit of tldr;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;Basically, when you create a promise, it returns an observable while at creation giving a reference of resolve in a callback meant for handing over data/response once it&apos;s available. Here, resolve is called via &lt;code&gt;setTimeOut&lt;/code&gt; after 500ms, and till resolve is not executed the outside scope is waiting to proceed further, hence, creating a fake blocking. It&apos;s totally different than the non-blocking(or call non-thread-reserving sleep available in other languages), as the thread and most probably the UI and any other ongoing tasks of webpage/node-application will be blocked and the main thread will be exclusively used for awaiting the promise resolution.&lt;/p&gt;\n    ","\n&lt;p&gt;First:&lt;/p&gt;\n&lt;p&gt;Define a function you want to execute like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;alertWorld&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then schedule its execution with the &lt;em&gt;setTimeout&lt;/em&gt; method:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(alertWorld, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note two things&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;the second argument is time in milliseconds&lt;/li&gt;\n&lt;li&gt;as a first argument, you have to pass just the name (reference) of the function, without the parentheses&lt;/li&gt;\n&lt;/ul&gt;\n    ","\n&lt;p&gt;I personally like the simple:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;seconds&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; waitUntil = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;() + seconds*&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;() &amp;lt; waitUntil) \n        &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;then:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Sleeps for 2 seconds&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;I&apos;m using it all the time to create fake load times while creating scripts in &lt;a href=&quot;https://en.wikipedia.org/wiki/Processing_(programming_language)#p5.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;p5.js&lt;/a&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;2019 Update using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot; rel=&quot;noreferrer&quot;&gt;Atomics.wait&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;It should work in &lt;a href=&quot;https://en.wikipedia.org/wiki/Node.js&quot; rel=&quot;noreferrer&quot;&gt;Node.js&lt;/a&gt; 9.3 or higher.&lt;/p&gt;\n&lt;p&gt;I needed a pretty accurate timer in Node.js and it works great for that.&lt;/p&gt;\n&lt;p&gt;However, it seems like there is extremely limited support in browsers.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; ms = &lt;span class=&quot;hljs-number&quot;&gt;10000&lt;/span&gt;;\n&lt;span class=&quot;hljs-title class_&quot;&gt;Atomics&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;wait&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Int32Array&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedArrayBuffer&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)), &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, ms);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Ran a few 10 second timer benchmarks.&lt;/p&gt;\n&lt;p&gt;With setTimeout I get a error of up to 7000 microseconds (7&amp;nbsp;ms).&lt;/p&gt;\n&lt;p&gt;With Atomics, my error seems to stay under 600 microseconds (0.6&amp;nbsp;ms)&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;2020 Update: In Summary&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;millis&lt;/span&gt;){ &lt;span class=&quot;hljs-comment&quot;&gt;// Need help of a server-side page&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; netMillis = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;max&lt;/span&gt;(millis-&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Assuming 5 ms overhead&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; xhr = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;XMLHttpRequest&lt;/span&gt;();\n  xhr.&lt;span class=&quot;hljs-title function_&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;GET&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;/sleep.jsp?millis=&apos;&lt;/span&gt; + netMillis + &lt;span class=&quot;hljs-string&quot;&gt;&apos;&amp;amp;rand=&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;(), &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n    xhr.&lt;span class=&quot;hljs-title function_&quot;&gt;send&lt;/span&gt;();\n  }&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(e){\n  }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepAsync&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;millis&lt;/span&gt;){ &lt;span class=&quot;hljs-comment&quot;&gt;// Use only in async function&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; netMillis = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;max&lt;/span&gt;(millis-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// Assuming 1 ms overhead&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, netMillis);\n  });\n}\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepSync&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;millis&lt;/span&gt;){ &lt;span class=&quot;hljs-comment&quot;&gt;// Use only in worker thread, currently Chrome-only&lt;/span&gt;\n  &lt;span class=&quot;hljs-title class_&quot;&gt;Atomics&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;wait&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Int32Array&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;SharedArrayBuffer&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;)), &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, millis);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepTest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;time&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;sleep&apos;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;timeEnd&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;sleep&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepAsyncTest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;time&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;sleepAsync&apos;&lt;/span&gt;);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepAsync&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;timeEnd&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;sleepAsync&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleepSyncTest&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; source = &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${sleepSync.toString()}&lt;/span&gt;\n    console.time(&apos;sleepSync&apos;);\n    sleepSync(1000);\n    console.timeEnd(&apos;sleepSync&apos;);`&lt;/span&gt;;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; src = &lt;span class=&quot;hljs-string&quot;&gt;&apos;data:text/javascript,&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(source);\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(src);\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; worker = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Worker&lt;/span&gt;(src);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;of which the server-side page, e.g. &lt;code&gt;sleep.jsp&lt;/code&gt;, looks like:&lt;/p&gt;\n&lt;pre class=&quot;lang-jsp s-code-block&quot;&gt;&lt;code class=&quot;hljs language-java&quot;&gt;&amp;lt;%\n&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt;{\n  Thread.sleep(Long.parseLong(request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;millis&quot;&lt;/span&gt;)));\n}&lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt;(InterruptedException e){}\n%&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;A better solution to make things look like what most people want is to use an anonymous function:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;start&apos;&lt;/span&gt;);\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-string&quot;&gt;&apos;foo&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-comment&quot;&gt;// Lots of code&lt;/span&gt;\n&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){  &lt;span class=&quot;hljs-comment&quot;&gt;// Beginning of code that should run AFTER the timeout&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;alert&lt;/span&gt;(a);\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Lots more code&lt;/span&gt;\n}, &lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;);  &lt;span class=&quot;hljs-comment&quot;&gt;// Put the timeout here&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is probably the closest you&apos;ll get to something that simply does what you want.&lt;/p&gt;\n&lt;p&gt;Note, if you need multiple sleeps this can get ugly in a hurry and you might actually need to rethink your design.&lt;/p&gt;\n    ","\n&lt;p&gt;The shortest solution without any dependencies:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, &lt;span class=&quot;hljs-number&quot;&gt;5000&lt;/span&gt;));\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h3&gt;&lt;em&gt;One-liner&lt;/em&gt; using &lt;strong&gt;Promises&lt;/strong&gt;&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt; = t =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(s, t));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt; = t =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;s&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(s, t));\n&lt;span class=&quot;hljs-comment&quot;&gt;// Usage&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;demo&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Count down&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (i--) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(i);\n    }\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Sum of numbers 0 to 5 using by delay of 1 second&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; sum = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; [...&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;()].&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; (a, b) =&amp;gt; {\n        a = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; a;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; result = a + b;\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${a}&lt;/span&gt; + &lt;span class=&quot;hljs-subst&quot;&gt;${b}&lt;/span&gt; = &lt;span class=&quot;hljs-subst&quot;&gt;${result}&lt;/span&gt;`&lt;/span&gt;);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }, &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;));\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;sum&quot;&lt;/span&gt;, sum);\n}\n&lt;span class=&quot;hljs-title function_&quot;&gt;demo&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;For browsers, I agree that setTimeout and setInterval are the way to go.&lt;/p&gt;\n&lt;p&gt;But for server-side code, it may require a blocking function (for example, so you can effectively have thread synchronization).&lt;/p&gt;\n&lt;p&gt;If you&apos;re using &lt;a href=&quot;https://en.wikipedia.org/wiki/Node.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;Node.js&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Meteor_%28web_framework%29&quot; rel=&quot;nofollow noreferrer&quot;&gt;Meteor&lt;/a&gt;, you may have run into the limitations of using setTimeout in a fiber. Here is the code for server-side sleep.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Fiber&lt;/span&gt; = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;fibers&apos;&lt;/span&gt;);\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fiber = &lt;span class=&quot;hljs-title class_&quot;&gt;Fiber&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;current&lt;/span&gt;;\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n        fiber.&lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;();\n    }, ms);\n    &lt;span class=&quot;hljs-title class_&quot;&gt;Fiber&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;yield&lt;/span&gt;();\n}\n\n&lt;span class=&quot;hljs-title class_&quot;&gt;Fiber&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;wait... &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;ok... &apos;&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;);\n}).&lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;back in main&apos;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;See: &lt;em&gt;&lt;a href=&quot;https://github.com/laverdet/node-fibers#sleep&quot; rel=&quot;nofollow noreferrer&quot;&gt;Node.js Fibers, Sleep&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;Most of the answers here are misguided or at the very least outdated. There is no reason JavaScript has to be single threaded, and indeed it isn&apos;t. Today all the mainstream browsers support workers. Before this was the case, other JavaScript runtimes like &lt;a href=&quot;https://en.wikipedia.org/wiki/Rhino_%28JavaScript_engine%29&quot; rel=&quot;nofollow noreferrer&quot;&gt;Rhino&lt;/a&gt; and Node.js supported multithreading.&lt;/p&gt;\n&lt;p&gt;&apos;JavaScript is single threaded&apos; is not a valid answer. For example, running a sleep function within a worker would not block any of the code running in the UI thread.&lt;/p&gt;\n&lt;p&gt;In newer runtimes supporting generators and yield, one could bring similar functionality to the sleep function in a singlethreaded environment:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// This is based on the latest ES6 drafts.&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// JavaScript 1.7+ (SpiderMonkey/Firefox 2+) syntax is slightly different&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Run code you want to sleep here (omit star if using JavaScript 1.7)&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;* &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; i++) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// To sleep for 10 milliseconds 10 times in a row&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;\n    }\n\n    &lt;span class=&quot;hljs-keyword&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;I just slept 5 milliseconds!&apos;&lt;/span&gt;);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Resume the given generator after ms milliseconds&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;resume&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms, generator&lt;/span&gt;){\n    &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Omit .value if using JavaScript 1.7&lt;/span&gt;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; nextSleep = generator.&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n        &lt;span class=&quot;hljs-title function_&quot;&gt;resume&lt;/span&gt;(nextSleep, generator);\n    }, ms);\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Initialize a generator and get first sleep for the recursive function&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;\n    generator = &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;(),\n    firstSleep = generator.&lt;span class=&quot;hljs-title function_&quot;&gt;next&lt;/span&gt;().&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Initialize recursive resume function&lt;/span&gt;\n&lt;span class=&quot;hljs-title function_&quot;&gt;resume&lt;/span&gt;(firstSleep, generator);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This imitation of sleep is different from a true sleep function as it does not block the thread. It is simply sugar on top of JavaScript&apos;s current &lt;em&gt;setTimeout&lt;/em&gt; function. This functionality type has been implemented in &lt;a href=&quot;http://taskjs.org/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Task.js&lt;/a&gt; and should work today in Firefox.&lt;/p&gt;\n    ","\n&lt;p&gt;I would encapsulate setTimeOut in a Promise for code consistency with other asynchronous tasks: Demo in &lt;a href=&quot;http://jsfiddle.net/a4gjhpgd/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Fiddle&lt;/a&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;resolve, reject&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) { &lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(); }, ms);\n    }));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It is used like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n   &lt;span class=&quot;hljs-comment&quot;&gt;// Do something&lt;/span&gt;\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It is easy to remember the syntax if you are used to using Promises.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;em&gt;Since &lt;a href=&quot;https://en.wikipedia.org/wiki/Node.js&quot; rel=&quot;nofollow noreferrer&quot;&gt;Node.js&lt;/a&gt; 7.6&lt;/em&gt;, you can combine the &lt;code&gt;promisify&lt;/code&gt; function from the &lt;em&gt;utils&lt;/em&gt; module with &lt;code&gt;setTimeout&lt;/code&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; sleep = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;util&apos;&lt;/span&gt;).&lt;span class=&quot;hljs-title function_&quot;&gt;promisify&lt;/span&gt;(&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;General Usage&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;time&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Slept for&quot;&lt;/span&gt;)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;timeEnd&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Slept for&quot;&lt;/span&gt;)\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Question Usage&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;asyncGenerator&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (goOn) {\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; fileList = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;listFiles&lt;/span&gt;(nextPageToken);\n      &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;)\n      &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; parents = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;requestParents&lt;/span&gt;(fileList);\n    }\n  }\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I have searched/googled quite a few webpages on JavaScript sleep/wait... and there is &lt;em&gt;no&lt;/em&gt; answer if you want JavaScript to &quot;RUN, DELAY, RUN&quot;... what most people got was either, &quot;RUN, RUN(useless stuff), RUN&quot; or &quot;RUN, RUN + delayed RUN&quot;...&lt;/p&gt;\n&lt;p&gt;I thought:\nhere is a solution that works... but you have to chop up your running codes...:\nYes, I know, this is just an easier to read refactoring... still...&lt;/p&gt;\n&lt;h3&gt;Example 1:&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;DISPLAY&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// JavaScript sleep by &quot;therealdealsince1982&quot;; copyrighted 2009&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// setInterval&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Pieces of codes to run&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;all code segment finished running&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-built_in&quot;&gt;clearInterval&lt;/span&gt;(t); } &lt;span class=&quot;hljs-comment&quot;&gt;// End interval, stops run&lt;/span&gt;\n    i++; &lt;span class=&quot;hljs-comment&quot;&gt;// Segment of code finished running, next...&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;();\nt = &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;run()&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/html&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Example 2:&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;DISPLAY&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// JavaScript sleep by &quot;therealdealsince1982&quot;; copyrighted 2009&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// setTimeout&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Pieces of codes to run, can use switch statement&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);}\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;);}\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);}\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + i + &lt;span class=&quot;hljs-string&quot;&gt;&quot; ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;;} &lt;span class=&quot;hljs-comment&quot;&gt;//stops automatically&lt;/span&gt;\n    i++;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;dur&lt;/span&gt;) {t=&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;run()&quot;&lt;/span&gt;, dur);} &lt;span class=&quot;hljs-comment&quot;&gt;// Starts flow control again after &apos;dur&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Starts&lt;/span&gt;\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/html&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Example 3:&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;DISPLAY&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// JavaScript sleep by &quot;therealdealsince1982&quot;; copyrighted 2009&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// setTimeout&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flow&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(i);\n    i++; &lt;span class=&quot;hljs-comment&quot;&gt;// Code segment finished running, increment i; can put elsewhere&lt;/span&gt;\n    &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;) {&lt;span class=&quot;hljs-built_in&quot;&gt;clearTimeout&lt;/span&gt;(t);} &lt;span class=&quot;hljs-comment&quot;&gt;// Stops flow, must be after sleep()&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;segment&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Pieces of codes to run, can use switch statement&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + segment + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + segment + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + segment + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment &amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt;+ segment +&lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;dur&lt;/span&gt;) {t=&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;flow()&quot;&lt;/span&gt;, dur);} &lt;span class=&quot;hljs-comment&quot;&gt;// Starts flow control again after &apos;dur&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;flow&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Starts flow&lt;/span&gt;\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/html&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;Example 4:&lt;/h3&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&amp;lt;html&amp;gt;\n&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;DISPLAY&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// JavaScript sleep by &quot;therealdealsince1982&quot;; copyrighted 2009&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// setTimeout, switch&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;flow&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;switch&lt;/span&gt;(i)\n    {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;:\n            &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(i);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;:\n            &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(i);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2000&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;:\n            &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(i);\n            &lt;span class=&quot;hljs-built_in&quot;&gt;clearTimeout&lt;/span&gt;(t); &lt;span class=&quot;hljs-comment&quot;&gt;// Stops flow&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n        &lt;span class=&quot;hljs-attr&quot;&gt;default&lt;/span&gt;:\n            &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(i);\n            &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3000&lt;/span&gt;);\n            &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n    }\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;segment&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// Pieces of codes to run, can use switch statement&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + segment + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + segment + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + segment + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (segment &amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;){&lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;id1&quot;&lt;/span&gt;).&lt;span class=&quot;hljs-property&quot;&gt;innerHTML&lt;/span&gt;= &lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;p&amp;gt;code segment &quot;&lt;/span&gt; + segment + &lt;span class=&quot;hljs-string&quot;&gt;&quot; is ran&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;; }\n    i++; &lt;span class=&quot;hljs-comment&quot;&gt;// Current segment of code finished running, next...&lt;/span&gt;\n}\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;dur&lt;/span&gt;) {t=&lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;flow()&quot;&lt;/span&gt;, dur);} &lt;span class=&quot;hljs-comment&quot;&gt;// Starts flow control again after &apos;dur&apos;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-title function_&quot;&gt;flow&lt;/span&gt;(); &lt;span class=&quot;hljs-comment&quot;&gt;// Starts flow control for first time...&lt;/span&gt;\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&amp;lt;/html&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I can understand the purpose of a sleep function if you have to deal with synchronous execution. The setInterval and setTimeout functions create a parallel execution thread which returns the execution sequence back to the main program, which is ineffective if you have to wait for a given result. Of course one may use events and handlers, but in some cases is not what is intended.&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;milliseconds&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;();\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1e7&lt;/span&gt;; i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;getTime&lt;/span&gt;() - start) &amp;gt; milliseconds){\n      &lt;span class=&quot;hljs-keyword&quot;&gt;break&lt;/span&gt;;\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;If you want less clunky functions than &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt;, you can wrap them in functions that just reverse the order of the arguments and give them nice names:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;after&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms, fn&lt;/span&gt;){ &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt;(fn, ms); }\n&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;every&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;ms, fn&lt;/span&gt;){ &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt;(fn, ms); }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/CoffeeScript&quot; rel=&quot;nofollow noreferrer&quot;&gt;CoffeeScript&lt;/a&gt; versions:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;after = (ms, fn)-&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setTimeout&lt;/span&gt; fn, ms\nevery = (ms, fn)-&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;setInterval&lt;/span&gt; fn, ms\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;You can then use them nicely with anonymous functions:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title function_&quot;&gt;after&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;it&apos;s been a second&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-title function_&quot;&gt;after&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n        &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;it&apos;s been another second&quot;&lt;/span&gt;);\n    });\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Now it reads easily as &quot;after N milliseconds, ...&quot; (or &quot;every N milliseconds, ...&quot;)&lt;/p&gt;\n    ","\n&lt;p&gt;You can&apos;t do a sleep like that in JavaScript, or, rather, you shouldn&apos;t. Running a sleep or a while loop will cause the user&apos;s browser to hang until the loop is done.&lt;/p&gt;\n\n&lt;p&gt;Use a timer, as specified in the link you referenced. &lt;/p&gt;\n    ","\n&lt;p&gt;It can be done using Java&apos;s sleep method. I&apos;ve tested it in Firefox and Internet&amp;nbsp;Explorer and it doesn&apos;t lock the computer, chew up resources, or cause endless server hits. It seems like a clean solution to me.&lt;/p&gt;\n&lt;p&gt;First you have to get Java loaded up on the page and make its methods available. To do that, I did this:&lt;/p&gt;\n&lt;pre class=&quot;lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;language-javascript&quot;&gt;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;load&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; appletRef = &lt;span class=&quot;hljs-variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;app&quot;&lt;/span&gt;);\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;java&lt;/span&gt; = appletRef.&lt;span class=&quot;hljs-property&quot;&gt;Packages&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;java&lt;/span&gt;;\n  } &lt;span class=&quot;hljs-comment&quot;&gt;// endfunction&lt;/span&gt;\n\n&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onLoad&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;load()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;embed&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;app&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;code&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;java.applet.Applet&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;application/x-java-applet&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;MAYSCRIPT&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Then, all you have to do when you want a painless pause in your JavaScript code is:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;java.&lt;span class=&quot;hljs-property&quot;&gt;lang&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(xxx)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Where xxx is time in milliseconds. In my case (by way of justification), this was part of back-end order fulfilment at a very small company and I needed to print an invoice that had to be loaded from the server. I did it by loading the invoice (as a webpage) into an iFrame and then printing the iFrame.&lt;/p&gt;\n&lt;p&gt;Of course, I had to wait until the page was fully loaded before I could print, so the JavaScript code had to pause. I accomplished this by having the invoice page (in the iFrame) change a hidden form field on the parent page with the onLoad event.  And the code on the parent page to print the invoice looked like this (irrelevant parts cut for clarity):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; isReady = &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;document.batchForm.ready&apos;&lt;/span&gt;);\nisReady.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n\nframes[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rpc_frame&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-property&quot;&gt;location&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;href&lt;/span&gt; = url;\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt; (isReady.&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n  java.&lt;span class=&quot;hljs-property&quot;&gt;lang&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;Thread&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;);\n} &lt;span class=&quot;hljs-comment&quot;&gt;// endwhile&lt;/span&gt;\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;frames&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rpc_frame&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;focus&lt;/span&gt;();\n&lt;span class=&quot;hljs-variable language_&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;frames&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&apos;rpc_frame&apos;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;print&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So the user pushes the button, the script loads the invoice page, waits, checking every quarter second to see if the invoice page is finished loading, and pops up the print dialog for the user to send it to the printer. QED.&lt;/p&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is a horrible solution - you&apos;re going to be chewing up processing cycles while doing nothing.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2284/17-of-26&quot; title=&quot;26,712 reputation&quot; class=&quot;comment-user&quot;&gt;17 of 26&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment759143_951021&quot;&gt;&lt;span title=&quot;2009-06-04 14:47:02Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jun 4, 2009 at 14:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The only purpose for a sleep is polling or waiting for a callback - setInterval and setTimeout do both better than this.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/13018/annakata&quot; title=&quot;72,782 reputation&quot; class=&quot;comment-user&quot;&gt;annakata&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment759176_951021&quot;&gt;&lt;span title=&quot;2009-06-04 14:50:30Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jun 4, 2009 at 14:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Probably you can do what you want with continuation passing style in JavaScript. Take a look at &lt;a href=&quot;http://matt.might.net/articles/by-example-continuation-passing-style/&quot; rel=&quot;nofollow noreferrer&quot;&gt;this article.&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1042934/ognyan-dimitrov&quot; title=&quot;5,728 reputation&quot; class=&quot;comment-user&quot;&gt;Ognyan Dimitrov&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment48608973_951021&quot;&gt;&lt;span title=&quot;2015-05-15 08:02:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 15, 2015 at 8:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It is amazing to see people saying no without understanding what the OP wants. There are cases that you want a &lt;b&gt;real sleep&lt;/b&gt;. I am now needing a &lt;b&gt;real sleep&lt;/b&gt; to test the browsers behaviour of posting and receiving message between the top window and the iframe. Keeping it busy with while seems the only way.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/529187/devs-love-zenuml&quot; title=&quot;10,525 reputation&quot; class=&quot;comment-user&quot;&gt;Devs love ZenUML&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment110054385_951021&quot;&gt;&lt;span title=&quot;2020-06-06 04:18:31Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 6, 2020 at 4:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@DevsloveZenUML and designers and developers of browser environment decided for the sake of users that you shall NOT have your wish because giving someone explicit ability to block entire page in async application is insane.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/936986/oleg-v-volkov&quot; title=&quot;20,961 reputation&quot; class=&quot;comment-user&quot;&gt;Oleg V. Volkov&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment124978794_951021&quot;&gt;&lt;span title=&quot;2022-01-13 12:30:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 13 at 12:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Great stuff here.   I wonder, how does this affects or relates with the modern browsers &quot;active&quot; / &quot;inactive&quot; states after JS calls the &quot;sleep&quot; mode?  Can the browser block the sleep as expected for general JS, to recall later when becomes &quot;active&quot;, or does it have a different behavior?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4605422/andre-canilho&quot; title=&quot;578 reputation&quot; class=&quot;comment-user&quot;&gt;Andre Canilho&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment67257547_39914235&quot;&gt;&lt;span title=&quot;2016-10-12 02:16:36Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 12, 2016 at 2:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;What is the current browser support for this? I wouldn&apos;t consider the previous solutions to be &quot;obsolete&quot; until this solution is supported by the vast majority of browsers, or at least all of the common ones. On the contrary, I would consider this solution interesting but unusable/impractical until it has widespread support.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1655398/alvin-thompson&quot; title=&quot;5,320 reputation&quot; class=&quot;comment-user&quot;&gt;Alvin Thompson&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment69901424_39914235&quot;&gt;&lt;span title=&quot;2016-12-27 17:56:41Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 27, 2016 at 17:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@AlvinThompson: the majority of modern web development uses transpilers, so native browser support matters less than cleaner and more future-proof code. Anyway, see &lt;a href=&quot;http://caniuse.com/#feat=async-functions&quot; rel=&quot;nofollow noreferrer&quot;&gt;caniuse&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1269037/dan-dascalescu&quot; title=&quot;128,657 reputation&quot; class=&quot;comment-user&quot;&gt;Dan Dascalescu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment70268626_39914235&quot;&gt;&lt;span title=&quot;2017-01-08 10:31:05Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 8, 2017 at 10:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@jacroe - the transpiler handles arrow functions as well as async/await (which would cause IE to vomit blood anyway)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5053002/jaromanda-x&quot; title=&quot;49,913 reputation&quot; class=&quot;comment-user&quot;&gt;Jaromanda X&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment75522831_39914235&quot;&gt;&lt;span title=&quot;2017-05-30 08:39:21Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 30, 2017 at 8:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;oneliner &lt;code&gt;await new Promise(r =&amp;gt; setTimeout(() =&amp;gt; r(), 2000));&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3779853/phil294&quot; title=&quot;9,333 reputation&quot; class=&quot;comment-user&quot;&gt;phil294&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment83601539_39914235&quot;&gt;&lt;span title=&quot;2018-01-17 18:54:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 17, 2018 at 18:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is not a correct answer at all. If Javascript does not have a sleep function, it is only because ECMAScript does not require it. It is a design choice by the body responsible for the design of Javascript. It could have been made that the Javascript run time waits a given amount of time before running the next line of code, but it was chosen not to.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/172272/didier-a&quot; title=&quot;4,331 reputation&quot; class=&quot;comment-user&quot;&gt;Didier A.&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment26816476_5992511&quot;&gt;&lt;span title=&quot;2013-08-16 19:20:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 16, 2013 at 19:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;A sleep can be perfectly implemented in JavaScript allbeit not with real-time precision. After all it is an event based  system. If async calls are completed an event is triggered. I see no reason why the same can&apos;t be possible when a sleep() is issued after which control is returned to the browser until the sleeping is over, returning control to the calling function. And yes, I also agree that sometimes sleeping is handy especially when developers BEFORE you screwed up the design so badly that YOU have no other way out besides completely refactoring for which you have no time&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1435079/lawrence&quot; title=&quot;1,007 reputation&quot; class=&quot;comment-user&quot;&gt;Lawrence&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment29739688_5992511&quot;&gt;&lt;span title=&quot;2013-11-14 12:40:52Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 14, 2013 at 12:40&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Try Hypnotic, which follows this idea: &lt;a href=&quot;http://coolwanglu.github.io/hypnotic/web/demo.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;coolwanglu.github.io/hypnotic/web/demo.html&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2153189/tezcat&quot; title=&quot;346 reputation&quot; class=&quot;comment-user&quot;&gt;Tezcat&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment30458748_5992511&quot;&gt;&lt;span title=&quot;2013-12-05 10:34:18Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 5, 2013 at 10:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;There is one situation where timeouts simply don&apos;t solve the problem, no matter how much you refactor: if you&apos;re running server-side, the client is waiting for the data, and you don&apos;t have direct access to the connection to pass it to the timeout callback. For instance, in meteor, you could be running in a method. In that case, you should consider using a future, as described here: &lt;a href=&quot;http://stackoverflow.com/questions/12569712/meteor-calling-an-asynchronous-function-inside-a-meteor-method-and-returning-th&quot; title=&quot;meteor calling an asynchronous function inside a meteor method and returning th&quot;&gt;stackoverflow.com/questions/12569712/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/508642/jameson-quinn&quot; title=&quot;1,040 reputation&quot; class=&quot;comment-user&quot;&gt;Jameson Quinn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment39281787_5992511&quot;&gt;&lt;span title=&quot;2014-08-09 15:12:54Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 9, 2014 at 15:12&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I agree why &lt;code&gt;sleep()&lt;/code&gt; isn&apos;t possible in JS, and that most of the time there are better ways to do things. But I&apos;d still consider the way the engine ties all things up to be a design flaw; there&apos;s no reason the language couldn&apos;t have a &lt;code&gt;sleep()&lt;/code&gt; function limited to a specific script, page, or function without the engine clobbering the CPU and freezing the app like a maniac. It&apos;s 2015 and you shouldn&apos;t be able to crash an entire web browser with &lt;code&gt;while(1)&lt;/code&gt;. We have Flash for things like that.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3672465/beejor&quot; title=&quot;7,512 reputation&quot; class=&quot;comment-user&quot;&gt;Beejor&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment52928614_5992511&quot;&gt;&lt;span title=&quot;2015-09-12 05:10:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 12, 2015 at 5:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;By way of closure.  &lt;code&gt;function foobar(el) { setTimeout(function() { foobar_cont(el); }, 5000); }&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/47529/chaos&quot; title=&quot;119,398 reputation&quot; class=&quot;comment-user&quot;&gt;chaos&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment2605893_951057&quot;&gt;&lt;span title=&quot;2010-04-08 03:27:18Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Apr 8, 2010 at 3:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;ok, and what if the code is not intended to be used in a webpage?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/41236/eugenio-mir%c3%b3&quot; title=&quot;2,330 reputation&quot; class=&quot;comment-user&quot;&gt;Eugenio Miró&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment3430525_951057&quot;&gt;&lt;span title=&quot;2010-07-22 15:23:46Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jul 22, 2010 at 15:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@EugenioMiró if the code is not intended to be used in a webpage, have the host&apos;s object model implement a sleep method. -- I think the question is geared towards the DOM which is exposed to javascript running on web pages.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/398630/brainslugs83&quot; title=&quot;5,933 reputation&quot; class=&quot;comment-user&quot;&gt;BrainSlugs83&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment9130694_951057&quot;&gt;&lt;span title=&quot;2011-09-24 00:57:45Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 24, 2011 at 0:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Nosredna yes, we understand how to make async calls, this doesn&apos;t help us sleep().  I want my calls to be made in a certain order, and to have the data back in a certain order.  I&apos;m 5 levels deep in a for loop.  I want to BLOCK execution.  A true sleep method would not &quot;slow down the browser&quot;, sleep hands control back to the browser and any other threads that want CPU time while it is still blocking.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/398630/brainslugs83&quot; title=&quot;5,933 reputation&quot; class=&quot;comment-user&quot;&gt;BrainSlugs83&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment9130701_951057&quot;&gt;&lt;span title=&quot;2011-09-24 00:59:33Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 24, 2011 at 0:59&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Tim loop-safe version: &lt;code&gt;for(i=0; i&amp;lt;5; i++) { (function(i) { setTimeout(function() { console.log(i); }, 1000*i); })(i); }&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/180471/sorki&quot; title=&quot;441 reputation&quot; class=&quot;comment-user&quot;&gt;sorki&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment10764397_951057&quot;&gt;&lt;span title=&quot;2011-12-28 22:45:33Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 28, 2011 at 22:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is not an answer. It&apos;s exactly the same as the code in the question, except slightly shorter.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/623999/jab&quot; title=&quot;4,033 reputation&quot; class=&quot;comment-user&quot;&gt;jab&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49243953_17936490&quot;&gt;&lt;span title=&quot;2015-06-02 04:23:09Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 2, 2015 at 4:23&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Busy waiting, really? In JS? For seconds? If I catch a website doing this, it will be blocked.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/39590/mafu&quot; title=&quot;30,384 reputation&quot; class=&quot;comment-user&quot;&gt;mafu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment65427526_17936490&quot;&gt;&lt;span title=&quot;2016-08-19 12:27:53Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 19, 2016 at 12:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@mafu That&apos;s why it says &lt;code&gt;only for debug/dev&lt;/code&gt;... &lt;i&gt;rolleyes&lt;/i&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4209853/xdaizu&quot; title=&quot;1,021 reputation&quot; class=&quot;comment-user&quot;&gt;xDaizu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment65747133_17936490&quot;&gt;&lt;span title=&quot;2016-08-29 10:31:22Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 29, 2016 at 10:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;NEVER DO THIS. This will make the CPU to hit 100% on the core that it executes and will block it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1095213/eaorak&quot; title=&quot;5,304 reputation&quot; class=&quot;comment-user&quot;&gt;eaorak&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment82698658_17936490&quot;&gt;&lt;span title=&quot;2017-12-18 10:51:13Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 18, 2017 at 10:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is useful, and perhaps the ONLY way to sleep, within a command-line javascript application, because async/await is not helpful.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1366016/wheezil&quot; title=&quot;2,915 reputation&quot; class=&quot;comment-user&quot;&gt;Wheezil&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment83468852_17936490&quot;&gt;&lt;span title=&quot;2018-01-13 18:52:47Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 13, 2018 at 18:52&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Yeah. Where this gets tricky is when you have a loop, or a nested loop even. You have to abandon your for loops and have counters instead.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/61027/nosredna&quot; title=&quot;79,040 reputation&quot; class=&quot;comment-user&quot;&gt;Nosredna&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment759294_951111&quot;&gt;&lt;span title=&quot;2009-06-04 15:10:14Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jun 4, 2009 at 15:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Touché. I mean, it would still be possible, but ugly and hackish in that case. You could also use some static boolean state variables, but that&apos;s also pretty hackish.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/59808/devinb&quot; title=&quot;8,171 reputation&quot; class=&quot;comment-user&quot;&gt;DevinB&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment759368_951111&quot;&gt;&lt;span title=&quot;2009-06-04 15:20:42Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jun 4, 2009 at 15:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;-1 for this. Again, this does not answer the question. This is more an answer for a question like &quot;How to execute a function asynchronously&quot; which is very much different from &quot;How to block a code execution&quot;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/765536/deepak-g-m&quot; title=&quot;1,620 reputation&quot; class=&quot;comment-user&quot;&gt;Deepak G M&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment20310951_951111&quot;&gt;&lt;span title=&quot;2013-01-28 08:32:55Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 28, 2013 at 8:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Nosredna No, you&apos;d use a closure.  For example:  &lt;code&gt;function foo(index) { setTimeout(function() { foo_continue(index); }, 10000); }&lt;/code&gt; and &lt;code&gt;for(var X = 0; X &amp;lt; 3;X++) { foo(X); }&lt;/code&gt; - the &lt;i&gt;value&lt;/i&gt; of X is passed into &lt;code&gt;foo&lt;/code&gt;, which then gets reused under the name &lt;code&gt;index&lt;/code&gt; when &lt;code&gt;foo_continue&lt;/code&gt; is eventually called.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/500202/izkata&quot; title=&quot;8,672 reputation&quot; class=&quot;comment-user&quot;&gt;Izkata&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment31741582_951111&quot;&gt;&lt;span title=&quot;2014-01-13 19:34:23Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 13, 2014 at 19:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Alexander Of course it does, because the point of setTimeout() is to prevent the browser from locking up by running the code asychronously.  Put the &lt;code&gt;console.log()&lt;/code&gt; inside &lt;code&gt;foo_continue()&lt;/code&gt; in the setTimeout version and you get the same result.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/500202/izkata&quot; title=&quot;8,672 reputation&quot; class=&quot;comment-user&quot;&gt;Izkata&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment46634690_951111&quot;&gt;&lt;span title=&quot;2015-03-23 14:20:00Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 23, 2015 at 14:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Well not quite everything: setInterval does a much better impression of polling.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/13018/annakata&quot; title=&quot;72,782 reputation&quot; class=&quot;comment-user&quot;&gt;annakata&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment759164_951033&quot;&gt;&lt;span title=&quot;2009-06-04 14:48:48Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jun 4, 2009 at 14:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Unless you need the sleep to be synchronous, in which case this is a completely valid question.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/593105/aaron-dufour&quot; title=&quot;16,830 reputation&quot; class=&quot;comment-user&quot;&gt;Aaron Dufour&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment9085472_951033&quot;&gt;&lt;span title=&quot;2011-09-21 16:54:02Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 21, 2011 at 16:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I think many of us might be forgetting that JavaScript isn&apos;t a browser-only language. This dude might be creating a Node command line utility that requires a brief pause without needing to deal with all the variable scoping issues that come with setTimeout.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2374900/phil-lanasa&quot; title=&quot;2,821 reputation&quot; class=&quot;comment-user&quot;&gt;Phil LaNasa&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment33571888_951033&quot;&gt;&lt;span title=&quot;2014-03-02 12:07:49Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 2, 2014 at 12:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@PhilLaNasa: If syntactic closure is still scaring one, one seriously needs to buckle down and work through Node 101.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/47529/chaos&quot; title=&quot;119,398 reputation&quot; class=&quot;comment-user&quot;&gt;chaos&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment33615992_951033&quot;&gt;&lt;span title=&quot;2014-03-03 16:47:28Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 3, 2014 at 16:47&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@PhilLaNasa: Any context in which closures are not JS 101 needs a full curriculum redesign, stat.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/47529/chaos&quot; title=&quot;119,398 reputation&quot; class=&quot;comment-user&quot;&gt;chaos&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment34538965_951033&quot;&gt;&lt;span title=&quot;2014-03-26 21:03:31Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 26, 2014 at 21:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@RousseauAlexandre Incorrect. It is &lt;b&gt;JavaScript&lt;/b&gt; using Rhino (at the time, it could equally be Nashorn these days)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/574263/mjaggard&quot; title=&quot;2,201 reputation&quot; class=&quot;comment-user&quot;&gt;mjaggard&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment84139416_8010562&quot;&gt;&lt;span title=&quot;2018-02-01 20:42:40Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 1, 2018 at 20:42&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;That&apos;s not a bad solution. Keeps context and chainability.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/61027/nosredna&quot; title=&quot;79,040 reputation&quot; class=&quot;comment-user&quot;&gt;Nosredna&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment785715_977487&quot;&gt;&lt;span title=&quot;2009-06-10 19:00:35Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Jun 10, 2009 at 19:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;As of jQuery 1.4, &lt;code&gt;.delay()&lt;/code&gt; is part of jQuery (though with semantics different from the above implementation). &lt;a href=&quot;http://api.jquery.com/delay/&quot; rel=&quot;nofollow noreferrer&quot;&gt;api.jquery.com/delay&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/139010/matt-ball&quot; title=&quot;345,361 reputation&quot; class=&quot;comment-user&quot;&gt;Matt Ball&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment9610665_977487&quot;&gt;&lt;span title=&quot;2011-10-24 13:26:20Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 24, 2011 at 13:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;What this question was definitely lacking was a &lt;a href=&quot;http://4.bp.blogspot.com/-Hk1mt-RKYLc/UOkxShm6NrI/AAAAAAAACqo/LVmqHOfWV7g/s1600/20091116-so-large.gif&quot; rel=&quot;nofollow noreferrer&quot;&gt;jQuery answer&lt;/a&gt;. So glad we got it!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4209853/xdaizu&quot; title=&quot;1,021 reputation&quot; class=&quot;comment-user&quot;&gt;xDaizu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment65783745_977487&quot;&gt;&lt;span title=&quot;2016-08-30 08:56:31Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 30, 2016 at 8:56&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;If you need a delay between two independent calls, yes.  If you need delays to slow down a loop, no.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/854073/wgroleau&quot; title=&quot;432 reputation&quot; class=&quot;comment-user&quot;&gt;WGroleau&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment88276677_977487&quot;&gt;&lt;span title=&quot;2018-05-31 21:43:33Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 31, 2018 at 21:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Finally. The one and only answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1021703/jeremy-thille&quot; title=&quot;25,286 reputation&quot; class=&quot;comment-user&quot;&gt;Jeremy Thille&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment109572711_56771739&quot;&gt;&lt;span title=&quot;2020-05-22 09:29:16Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 22, 2020 at 9:29&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This just yields &lt;code&gt;ReferenceError: wait is not defined&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4614680/philipp-ludwig&quot; title=&quot;3,014 reputation&quot; class=&quot;comment-user&quot;&gt;Philipp Ludwig&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128639862_56771739&quot;&gt;&lt;span title=&quot;2022-07-01 14:37:23Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 1 at 14:37&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I agree, lots of people are saying, &quot;No, don&apos;t do this in production code!&quot;  Yeah, um, I don&apos;t want to.  I want to do it in throwaway test code, and as a result I don&apos;t want to spend a lot of time making an elegant solution.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/435779/user435779&quot; title=&quot;355 reputation&quot; class=&quot;comment-user&quot;&gt;user435779&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment17533850_6349965&quot;&gt;&lt;span title=&quot;2012-10-17 15:03:10Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 17, 2012 at 15:03&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;That&apos;s basically the same thing as the OP had.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/237838/andrew-barber&quot; title=&quot;38,554 reputation&quot; class=&quot;comment-user&quot;&gt;Andrew Barber&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment17979875_13205283&quot;&gt;&lt;span title=&quot;2012-11-03 02:16:23Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 3, 2012 at 2:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;To be more precise, it&apos;s what OP asked for an ALTERNATIVE to.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/854073/wgroleau&quot; title=&quot;432 reputation&quot; class=&quot;comment-user&quot;&gt;WGroleau&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment88085369_13205283&quot;&gt;&lt;span title=&quot;2018-05-25 20:48:26Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 25, 2018 at 20:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Best solution for node, link to the documentation: &lt;a href=&quot;https://nodejs.org/api/timers.html#timerspromisessettimeoutdelay-value-options&quot; rel=&quot;nofollow noreferrer&quot;&gt;nodejs.org/api/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3232170/kigiri&quot; title=&quot;2,567 reputation&quot; class=&quot;comment-user&quot;&gt;kigiri&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123452973_67188439&quot;&gt;&lt;span title=&quot;2021-11-04 13:24:25Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 4, 2021 at 13:24&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@lukad, Use &lt;code&gt;setTimeout()&lt;/code&gt; if that works, but if doing so means unraveling 1000 lines of callbacks this might start not looking like a joke.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/966023/pguardiario&quot; title=&quot;51,716 reputation&quot; class=&quot;comment-user&quot;&gt;pguardiario&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment43705559_26725103&quot;&gt;&lt;span title=&quot;2014-12-25 01:01:12Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 25, 2014 at 1:01&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Unique approach, though unfortunately non-async XMLHttpRequests are deprecated and will be removed in the future. Which is funny, because that fact is what led me to this question in the first place.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3672465/beejor&quot; title=&quot;7,512 reputation&quot; class=&quot;comment-user&quot;&gt;Beejor&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49712944_26725103&quot;&gt;&lt;span title=&quot;2015-06-14 20:30:35Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 14, 2015 at 20:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is actually a pretty good idea IMO. Although I don&apos;t think the sleep API (Request URL) should be public as it can be abused.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5173926/vahid-amiri&quot; title=&quot;10,121 reputation&quot; class=&quot;comment-user&quot;&gt;Vahid Amiri&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment61908875_26725103&quot;&gt;&lt;span title=&quot;2016-05-12 13:18:19Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 12, 2016 at 13:18&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;nice but do you know if sometime internet is slow or Website ping time is high than it will sleep script for more than argument time. Like if you use &lt;code&gt;sleep(300)&lt;/code&gt; and website take time 150 ms for response than javascript code will be sleep for 450ms. and if internet connection is lose by browser it will work for only 0ms. So it is not better solution&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6790007/harendra-chauhan&quot; title=&quot;149 reputation&quot; class=&quot;comment-user&quot;&gt;Harendra Chauhan&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment108628631_26725103&quot;&gt;&lt;span title=&quot;2020-04-24 10:52:55Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 24, 2020 at 10:52&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I am unable to grok the part where function resolve is defined as calling itself. How does this make sense?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/390785/sureshvv&quot; title=&quot;3,969 reputation&quot; class=&quot;comment-user&quot;&gt;sureshvv&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120517843_67754444&quot;&gt;&lt;span title=&quot;2021-06-30 07:51:23Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 30, 2021 at 7:51&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@sureshvv check update.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2988776/ravinder-payal&quot; title=&quot;2,728 reputation&quot; class=&quot;comment-user&quot;&gt;Ravinder Payal&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment122744940_67754444&quot;&gt;&lt;span title=&quot;2021-10-05 04:54:01Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 5, 2021 at 4:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;If want to put in the middle of an async function just use &lt;code&gt;await new Promise(resolve =&amp;gt; setTimeout(resolve, sleepMiliseconds))&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7906266/matias-haeussler&quot; title=&quot;961 reputation&quot; class=&quot;comment-user&quot;&gt;Matias Haeussler&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125413946_67754444&quot;&gt;&lt;span title=&quot;2022-02-01 15:27:13Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 1 at 15:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The question was to ask a way to sleep in a blocking wy. setTimeout does not do that. It queues in the Macro task Queue.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6632251/aayush-sinha&quot; title=&quot;377 reputation&quot; class=&quot;comment-user&quot;&gt;Aayush Sinha&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment118161625_951064&quot;&gt;&lt;span title=&quot;2021-03-28 21:20:47Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 28, 2021 at 21:20&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I see this as the most optimized version of the main question: it does not do any maths inside the loop, just a plain comparison. It&apos;s a bit difficult to read tho.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5770507/hegez&quot; title=&quot;818 reputation&quot; class=&quot;comment-user&quot;&gt;hegez&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment80907069_40567028&quot;&gt;&lt;span title=&quot;2017-10-27 16:45:02Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 27, 2017 at 16:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;NEVER EVER DO THAT.   Have you checked the CPU usage while this function is working? It should be close to 100% if you give enough time for it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1095213/eaorak&quot; title=&quot;5,304 reputation&quot; class=&quot;comment-user&quot;&gt;eaorak&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment82698455_40567028&quot;&gt;&lt;span title=&quot;2017-12-18 10:46:05Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 18, 2017 at 10:46&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@hegez: Given the loop is going to run for a fixed amount of wall clock time no matter what, it seems like optimizing the loop is kind of beside the point.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/364696/shadowranger&quot; title=&quot;127,504 reputation&quot; class=&quot;comment-user&quot;&gt;ShadowRanger&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment94396476_40567028&quot;&gt;&lt;span title=&quot;2018-12-14 01:27:13Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 14, 2018 at 1:27&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@noego How so ? I just tested in Node 10, I have no CPU usage change at all&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5412273/melmass&quot; title=&quot;2,687 reputation&quot; class=&quot;comment-user&quot;&gt;melMass&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment107284681_40567028&quot;&gt;&lt;span title=&quot;2020-03-11 16:21:00Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 11, 2020 at 16:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@melMass This function just blocks Node thread for n seconds by keeping the CPU 100% busy. This &quot;solution&quot; is an extremely bad idea for those two reasons (blocking + CPU killer). Waiting HAS to be non-blocking, therefore asynchronous.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1021703/jeremy-thille&quot; title=&quot;25,286 reputation&quot; class=&quot;comment-user&quot;&gt;Jeremy Thille&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment109572467_40567028&quot;&gt;&lt;span title=&quot;2020-05-22 09:22:00Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 22, 2020 at 9:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;In my opinion better than the accepted solution which can&apos;t be implemented as a simple function without async/await in the caller.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/549312/groovydotcom&quot; title=&quot;1,254 reputation&quot; class=&quot;comment-user&quot;&gt;GroovyDotCom&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment101179408_56406126&quot;&gt;&lt;span title=&quot;2019-08-04 10:28:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 4, 2019 at 10:28&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;yeah, as long as you are aware that this is blocking and that usually is not a good thing&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1929903/kapytanhook&quot; title=&quot;815 reputation&quot; class=&quot;comment-user&quot;&gt;Kapytanhook&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment101229245_56406126&quot;&gt;&lt;span title=&quot;2019-08-06 08:43:26Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 6, 2019 at 8:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Pretty cool, but the fact that this is only really supported in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait#Browser_compatibility&quot; rel=&quot;nofollow noreferrer&quot;&gt;Chrome and Firefox&lt;/a&gt; doesn&apos;t make it very viable for uses on the web. (Nov 2019)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10342833/jgreatorex&quot; title=&quot;442 reputation&quot; class=&quot;comment-user&quot;&gt;JGreatorex&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment103818558_56406126&quot;&gt;&lt;span title=&quot;2019-11-08 12:14:36Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 8, 2019 at 12:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This was the answer I was looking for! I had no access to async functions :D&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1036670/vitiral&quot; title=&quot;7,407 reputation&quot; class=&quot;comment-user&quot;&gt;vitiral&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116852073_56406126&quot;&gt;&lt;span title=&quot;2021-02-07 20:45:57Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 7, 2021 at 20:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;In the rare situation where blocking is desirable, this is the right solution. I wish I&apos;d seen your answer before I blogged about this thinking I had found a novel solution!  In any case, for a detailed explanation, demos and an additional variant of the XHR solution that uses Service Worker: &lt;a href=&quot;https://jasonformat.com/javascript-sleep/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jasonformat.com/javascript-sleep&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/194340/jason-miller&quot; title=&quot;2,185 reputation&quot; class=&quot;comment-user&quot;&gt;Jason Miller&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment117349396_56406126&quot;&gt;&lt;span title=&quot;2021-02-25 22:54:18Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 25, 2021 at 22:54&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;this is the one that worked for me on desktop browsers and an older mobile phone. The others I tried didn&apos;t work on all.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3950902/mike&quot; title=&quot;607 reputation&quot; class=&quot;comment-user&quot;&gt;Mike&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment105803993_6982592&quot;&gt;&lt;span title=&quot;2020-01-21 04:32:26Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 21, 2020 at 4:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It doesn&apos;t work in IE11. We get syntax error for arrow function.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3000884/ddphp&quot; title=&quot;429 reputation&quot; class=&quot;comment-user&quot;&gt;DDphp&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment105842048_58935320&quot;&gt;&lt;span title=&quot;2020-01-22 07:48:51Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 22, 2020 at 7:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Java-DK use &lt;code&gt;await new Promise(function(resolve) { setTimeout(resolve, 5000); });&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/440168/k06a&quot; title=&quot;16,619 reputation&quot; class=&quot;comment-user&quot;&gt;k06a&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment105849500_58935320&quot;&gt;&lt;span title=&quot;2020-01-22 11:43:58Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 22, 2020 at 11:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is identical to &lt;a href=&quot;https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep/56771739#56771739&quot;&gt;Ahmed Mohammedali&apos;s answer&lt;/a&gt; (posted first).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120671959_58935320&quot;&gt;&lt;span title=&quot;2021-07-06 23:26:01Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 6, 2021 at 23:26&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@PeterMortensen and it was copied from my different answer I gave at March 2018: &lt;a href=&quot;https://stackoverflow.com/a/49139664/440168&quot;&gt;stackoverflow.com/a/49139664/440168&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/440168/k06a&quot; title=&quot;16,619 reputation&quot; class=&quot;comment-user&quot;&gt;k06a&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120841942_58935320&quot;&gt;&lt;span title=&quot;2021-07-14 09:42:19Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 14, 2021 at 9:42&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The copy/pasta is real&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2957890/t-woody&quot; title=&quot;1,023 reputation&quot; class=&quot;comment-user&quot;&gt;T.Woody&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment116403772_64762041&quot;&gt;&lt;span title=&quot;2021-01-21 22:16:48Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 21, 2021 at 22:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;Server may require a blocking function&lt;/code&gt;... I don&apos;t see how forcefully blocking Node&apos;s only thread and make your entire server unresponsive for several seconds is a good idea, but whatever&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1021703/jeremy-thille&quot; title=&quot;25,286 reputation&quot; class=&quot;comment-user&quot;&gt;Jeremy Thille&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment109572779_16618986&quot;&gt;&lt;span title=&quot;2020-05-22 09:31:13Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 22, 2020 at 9:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Workers aren&apos;t implemented in IE, at least through version 10. Which currently represents a large amount of users.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3672465/beejor&quot; title=&quot;7,512 reputation&quot; class=&quot;comment-user&quot;&gt;Beejor&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment49713223_24401317&quot;&gt;&lt;span title=&quot;2015-06-14 20:44:26Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 14, 2015 at 20:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;True, and even then it is not practical to implement &lt;code&gt;sleep&lt;/code&gt; using multiple workers. If using Node.js generator functions are already implemented and can be used as described. Mainstream browsers have not all implemented generators as of today.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1625079/gabriel-ratener&quot; title=&quot;555 reputation&quot; class=&quot;comment-user&quot;&gt;Gabriel Ratener&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment52670739_24401317&quot;&gt;&lt;span title=&quot;2015-09-04 15:07:29Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 4, 2015 at 15:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Why is this any better than just using setTimeout(function(){/*do something*/}, 2000);?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/720238/jsideris&quot; title=&quot;4,863 reputation&quot; class=&quot;comment-user&quot;&gt;JSideris&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment59438552_31319762&quot;&gt;&lt;span title=&quot;2016-03-09 10:15:36Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Mar 9, 2016 at 10:15&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Ok, this works with setTimeput, but it&apos;s hard to see what&apos;s happening. Using setTimeout itself is easier than this.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/173077/naugtur&quot; title=&quot;16,677 reputation&quot; class=&quot;comment-user&quot;&gt;naugtur&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment8346430_1705601&quot;&gt;&lt;span title=&quot;2011-08-09 08:19:58Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 9, 2011 at 8:19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;It&apos;s the same as the real question. Not much point making it the real answer.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/785194/eml&quot; title=&quot;8,965 reputation&quot; class=&quot;comment-user&quot;&gt;EML&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment37346951_19881582&quot;&gt;&lt;span title=&quot;2014-06-12 19:16:49Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 12, 2014 at 19:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Not a good solution - using this in Selenium&apos;s JavaScriptExecutor hangs my Chrome browser about 50% of the time on a 2104 MacBook Pro.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/998495/emery&quot; title=&quot;7,102 reputation&quot; class=&quot;comment-user&quot;&gt;emery&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment48280519_19881582&quot;&gt;&lt;span title=&quot;2015-05-06 17:33:17Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 6, 2015 at 17:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;An explanation would be in order. What is the idea/gist? How is it different from previous answers?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/63550/peter-mortensen&quot; title=&quot;30,018 reputation&quot; class=&quot;comment-user&quot;&gt;Peter Mortensen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120664943_19881582&quot;&gt;&lt;span title=&quot;2021-07-06 16:36:39Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 6, 2021 at 16:36&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Seems quite monstrous soulution when considering the simple thing author wanted to achieve.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/303184/xaralis&quot; title=&quot;4,406 reputation&quot; class=&quot;comment-user&quot;&gt;xaralis&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment20145016_14310305&quot;&gt;&lt;span title=&quot;2013-01-22 16:17:29Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 22, 2013 at 16:17&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This depends on Java Applets which is deprecated.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5173926/vahid-amiri&quot; title=&quot;10,121 reputation&quot; class=&quot;comment-user&quot;&gt;Vahid Amiri&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment61909058_14310305&quot;&gt;&lt;span title=&quot;2016-05-12 13:22:08Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 12, 2016 at 13:22&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":247,"title":"What is the JavaScript version of sleep()?","content":"\n                \n&lt;p&gt;Is there a better way to engineer a &lt;code&gt;sleep&lt;/code&gt; in JavaScript than the following &lt;code&gt;pausecomp&lt;/code&gt; function (&lt;a href=&quot;http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm&quot; rel=&quot;noreferrer&quot;&gt;taken from here&lt;/a&gt;)?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;pausecomp&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;millis&lt;/span&gt;)\n{\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; curDate = &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; { curDate = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Date&lt;/span&gt;(); }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(curDate-date &amp;lt; millis);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This is not a duplicate of &lt;a href=&quot;https://stackoverflow.com/questions/758688/sleep-in-javascript-delay-between-actions&quot;&gt;Sleep in JavaScript - delay between actions&lt;/a&gt;; I want a &lt;em&gt;real sleep&lt;/em&gt; in the middle of a function, and not a delay before a piece of code executes.&lt;/p&gt;\n    ","slug":"what-is-the-javascript-version-of-sleep()-1657387391406","postType":"QUESTION","createdAt":"2022-07-09T17:23:11.000Z","updatedAt":"2022-07-09T17:23:11.000Z","tags":[{"id":1612,"name":"sleep","slug":"sleep","createdAt":"2022-07-09T17:23:11.000Z","updatedAt":"2022-07-09T17:23:11.000Z","Questions_Tags":{"questionId":247,"tagId":1612}}]}},"__N_SSG":true}