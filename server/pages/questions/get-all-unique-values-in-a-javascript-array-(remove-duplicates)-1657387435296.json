{"pageProps":{"data":{"answer":["\n&lt;p&gt;With &lt;em&gt;JavaScript 1.6&lt;/em&gt; / &lt;em&gt;ECMAScript 5&lt;/em&gt; you can use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;noreferrer&quot; title=&quot;filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; method of an Array in the following way to get an array with unique values:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onlyUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value, index, self&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; self.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(value) === index;\n}\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// usage example:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; unique = a.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(onlyUnique);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(unique); &lt;span class=&quot;hljs-comment&quot;&gt;// [&apos;a&apos;, 1, 2, &apos;1&apos;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif1&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;The native method &lt;code&gt;filter&lt;/code&gt; will loop through the array and leave only those entries that pass the given callback function &lt;code&gt;onlyUnique&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;onlyUnique&lt;/code&gt; checks, if the given value is the first occurring. If not, it must be a duplicate and will not be copied.&lt;/p&gt;\n&lt;p&gt;This solution works without any extra library like jQuery or prototype.js.&lt;/p&gt;\n&lt;p&gt;It works for arrays with mixed value types too.&lt;/p&gt;\n&lt;p&gt;For old Browsers (&amp;lt;ie9), that do not support the native methods &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;indexOf&lt;/code&gt; you can find work arounds in the MDN documentation for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;noreferrer&quot; title=&quot;filter&quot;&gt;filter&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf&quot; rel=&quot;noreferrer&quot;&gt;indexOf&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;If you want to keep the last occurrence of a value, simply replace &lt;code&gt;indexOf&lt;/code&gt; with &lt;code&gt;lastIndexOf&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;With ES6 this can be shorten to:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// usage example:&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArray = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; unique = myArray.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v, i, a&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(v) === i);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(unique); &lt;span class=&quot;hljs-comment&quot;&gt;// unique is [&apos;a&apos;, 1, 2, &apos;1&apos;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif2&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;Thanks to &lt;a href=&quot;https://stackoverflow.com/users/124119/camilo-martin&quot;&gt;Camilo Martin&lt;/a&gt; for hint in comment.&lt;/p&gt;\n&lt;p&gt;ES6 has a native object &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;noreferrer&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; to store unique values. To get an array with unique values you could now do this:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; myArray = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;1&apos;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; unique = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(myArray)];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(unique); &lt;span class=&quot;hljs-comment&quot;&gt;// unique is [&apos;a&apos;, 1, 2, &apos;1&apos;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif3&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;The constructor of &lt;code&gt;Set&lt;/code&gt; takes an iterable object, like an Array, and the spread operator &lt;code&gt;...&lt;/code&gt; transform the set back into an Array. Thanks to &lt;a href=&quot;https://stackoverflow.com/users/1737158/lukas-liesis&quot;&gt;Lukas Liese&lt;/a&gt; for hint in comment.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Updated answer for ES6/ES2015&lt;/strong&gt;: Using the &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;noreferrer&quot;&gt;Set&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot; rel=&quot;noreferrer&quot;&gt;the spread operator&lt;/a&gt; (thanks &lt;a href=&quot;https://stackoverflow.com/users/1647737/le-m&quot;&gt;le-m&lt;/a&gt;), the single line solution is:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; uniqueItems = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(items)]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Which returns&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I split all answers to 4 possible solutions:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Use object &lt;code&gt;{ }&lt;/code&gt; to prevent duplicates&lt;/li&gt;\n&lt;li&gt;Use helper array &lt;code&gt;[ ]&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Use &lt;code&gt;filter + indexOf&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Bonus! ES6 &lt;code&gt;Sets&lt;/code&gt; method.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Here&apos;s sample codes found in answers:&lt;/p&gt;\n\n&lt;h1&gt;Use object &lt;code&gt;{ }&lt;/code&gt; to prevent duplicates&lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniqueArray1&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt; ar &lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j = {};\n\n  ar.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;( &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;) {\n    j[v+ &lt;span class=&quot;hljs-string&quot;&gt;&apos;::&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-keyword&quot;&gt;typeof&lt;/span&gt; v] = v;\n  });\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;keys&lt;/span&gt;(j).&lt;span class=&quot;hljs-title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; j[v];\n  });\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Use helper array &lt;code&gt;[ ]&lt;/code&gt;&lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniqueArray2&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l=arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i&amp;lt;l; i++)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(arr[i]) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; arr[i] !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n            a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(arr[i]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Use &lt;code&gt;filter + indexOf&lt;/code&gt;&lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniqueArray3&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;onlyUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value, index, self&lt;/span&gt;) { \n      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; self.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(value) === index;\n  }\n\n  &lt;span class=&quot;hljs-comment&quot;&gt;// usage&lt;/span&gt;\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; unique = a.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;( onlyUnique ); &lt;span class=&quot;hljs-comment&quot;&gt;// returns [&apos;a&apos;, 1, 2, &apos;1&apos;]&lt;/span&gt;\n\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; unique;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Use &lt;strong&gt;ES6&lt;/strong&gt; &lt;code&gt;[...new Set(a)]&lt;/code&gt;&lt;/h1&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniqueArray4&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(a)];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And I wondered which one is faster. I&apos;ve made &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1-Vr4dD0GE0dv1PN9Ng6SyNwn8A407L1zw9uE1cBMwjQ/edit#gid=0&quot; rel=&quot;noreferrer&quot;&gt;sample Google Sheet&lt;/a&gt; to test functions. Note: ECMA 6 is not avaliable in Google Sheets, so I can&apos;t test it.&lt;/p&gt;\n\n&lt;p&gt;Here&apos;s the result of tests:\n&lt;a href=&quot;https://i.stack.imgur.com/EqG6p.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/EqG6p.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I expected to see that code using object &lt;code&gt;{ }&lt;/code&gt; will win because it uses hash. So I&apos;m glad that tests showed the best results for this algorithm in Chrome and IE. Thanks to @rab for &lt;a href=&quot;https://stackoverflow.com/a/29327129/5372400&quot;&gt;the code&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h2&gt;Update 2020&lt;/h2&gt;\n\n&lt;p&gt;Google Script enabled ES6 Engine. Now I tested the last code with &lt;code&gt;Sets&lt;/code&gt; and it appeared faster than the object method.&lt;/p&gt;\n    ","\n&lt;p&gt;You can also use &lt;a href=&quot;http://underscorejs.org/&quot; rel=&quot;noreferrer&quot;&gt;underscore.js&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(_.&lt;span class=&quot;hljs-title function_&quot;&gt;uniq&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]));&lt;/code&gt;&lt;/pre&gt;\n&lt;pre class=&quot;snippet-code-html lang-html s-code-block&quot;&gt;&lt;code class=&quot;hljs language-xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://underscorejs.org/underscore-min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif4&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;which will return:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;h1&gt;One Liner, Pure JavaScript&lt;/h1&gt;\n&lt;p&gt;&lt;strong&gt;With ES6 syntax&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;list = list.filter((x, i, a) =&amp;gt; a.indexOf(x) == i)&lt;/code&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;x --&amp;gt; item &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; array\ni --&amp;gt; index &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; item\na --&amp;gt; array reference, (&lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;list&quot;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/TfGaP.png&quot; rel=&quot;noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/TfGaP.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;With ES5 syntax&lt;/strong&gt;&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;list = list.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;x, i, a&lt;/span&gt;) { \n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(x) == i; \n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;Browser Compatibility&lt;/strong&gt;: IE9+&lt;/p&gt;\n    ","\n&lt;p&gt;Many of the answers here may not be useful to beginners. If de-duping an array is difficult, will they really know about the prototype chain, or even jQuery?&lt;/p&gt;\n&lt;p&gt;In modern browsers, a clean and simple solution is to store data in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;noreferrer&quot; title=&quot;Sets in JavaScript&quot;&gt;Set&lt;/a&gt;, which is designed to be a list of unique values.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; cars = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Volvo&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Jeep&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Volvo&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Lincoln&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Lincoln&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Ford&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; uniqueCars = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(cars));\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(uniqueCars);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif5&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;Array.from&lt;/code&gt; is useful to convert the Set back to an Array so that you have easy access to all of the awesome methods (features) that arrays have. There are also &lt;a href=&quot;https://stackoverflow.com/questions/20069828/how-to-convert-set-to-array&quot;&gt;other ways&lt;/a&gt; of doing the same thing. But you may not need &lt;code&gt;Array.from&lt;/code&gt; at all, as Sets have plenty of useful features like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach&quot; rel=&quot;noreferrer&quot; title=&quot;Looping with Sets&quot;&gt;forEach&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;If you need to support old Internet Explorer, and thus cannot use Set, then a simple technique is to copy items over to a new array while checking beforehand if they are already in the new array.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Create a list of cars, with duplicates.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; cars = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Volvo&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Jeep&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Volvo&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Lincoln&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Lincoln&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Ford&apos;&lt;/span&gt;];\n&lt;span class=&quot;hljs-comment&quot;&gt;// Create a list of unique cars, to put a car in if we haven&apos;t already.&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uniqueCars = [];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Go through each car, one at a time.&lt;/span&gt;\ncars.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;car&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-comment&quot;&gt;// The code within the following block runs only if the&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// current car does NOT exist in the uniqueCars list&lt;/span&gt;\n    &lt;span class=&quot;hljs-comment&quot;&gt;// - a.k.a. prevent duplicates&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (uniqueCars.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(car) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-comment&quot;&gt;// Since we now know we haven&apos;t seen this car before,&lt;/span&gt;\n        &lt;span class=&quot;hljs-comment&quot;&gt;// copy it to the end of the uniqueCars list.&lt;/span&gt;\n        uniqueCars.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(car);\n    }\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;To make this instantly reusable, let&apos;s put it in a function.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;deduplicate&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (data.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; result = [];\n\n        data.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;elem&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (result.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(elem) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {\n                result.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(elem);\n            }\n        });\n\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So to get rid of the duplicates, we would now do this.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uniqueCars = &lt;span class=&quot;hljs-title function_&quot;&gt;deduplicate&lt;/span&gt;(cars);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;deduplicate(cars)&lt;/code&gt; part &lt;strong&gt;becomes&lt;/strong&gt; the thing we named &lt;em&gt;result&lt;/em&gt; when the function completes.&lt;/p&gt;\n&lt;p&gt;Just pass it the name of any array you like.&lt;/p&gt;\n    ","\n&lt;p&gt;&lt;strong&gt;Using ES6 &lt;em&gt;new Set&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; unique_array = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(array)];\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(unique_array);    &lt;span class=&quot;hljs-comment&quot;&gt;// output = [3,7,5,2]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif6&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Using &lt;em&gt;For Loop&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; array = [&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;i++) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; j=i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;j&amp;lt;array.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;j++) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(array[i]===array[j]) {\n            array.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(j,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);\n        }\n    }\n}\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(array); &lt;span class=&quot;hljs-comment&quot;&gt;// output = [3,7,5,2]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif7&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I have since found a nice method that uses jQuery&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;arr = $.&lt;span class=&quot;hljs-title function_&quot;&gt;grep&lt;/span&gt;(arr, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v, k&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; $.&lt;span class=&quot;hljs-title function_&quot;&gt;inArray&lt;/span&gt;(v ,arr) === k;\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: This code was pulled from &lt;a href=&quot;http://paulirish.com/2010/duck-punching-with-jquery/&quot; rel=&quot;noreferrer&quot;&gt;Paul Irish&apos;s duck punching post&lt;/a&gt; - I forgot to give credit :P&lt;/p&gt;\n    ","\n&lt;p&gt;Remove duplicates using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// Array with duplicates&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; withDuplicates = [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;];\n&lt;span class=&quot;hljs-comment&quot;&gt;// Get new array without duplicates by using Set&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// [2, 5, 1, 3]&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; withoutDuplicates = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;from&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(arrayWithDuplicates));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A shorter version, as follows:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; withoutDuplicates = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(arrayWithDuplicates)];\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;The simplest, and &lt;a href=&quot;https://jsbench.me/6qkt3h9ukg&quot; rel=&quot;noreferrer&quot;&gt;fastest&lt;/a&gt; (in Chrome) way of doing this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;unique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l=&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i&amp;lt;l; i++)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)\n            a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Simply goes through every item in the array, tests if that item is already in the list, and if it&apos;s not, pushes to the array that gets returned.&lt;/p&gt;\n&lt;p&gt;According to JSBench, this function is &lt;a href=&quot;https://jsbench.me/6qkt3h9ukg&quot; rel=&quot;noreferrer&quot;&gt;the fastest of the ones I could find anywhere&lt;/a&gt; - feel free to add your own though.&lt;/p&gt;\n&lt;p&gt;The non-prototype version:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;uniques&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l=arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i&amp;lt;l; i++)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (a.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(arr[i]) === -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; arr[i] !== &lt;span class=&quot;hljs-string&quot;&gt;&apos;&apos;&lt;/span&gt;)\n            a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(arr[i]);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;Sorting&lt;/h2&gt;\n&lt;p&gt;When also needing to sort the array, the following is the fastest:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;sortUnique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; last_i;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;i++)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((last_i = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;lastIndexOf&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i])) !== i)\n            &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, last_i-i);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;or non-prototype:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;sortUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;) {\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;();\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; last_i;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;arr.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;;i++)\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ((last_i = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;lastIndexOf&lt;/span&gt;(arr[i])) !== i)\n            arr.&lt;span class=&quot;hljs-title function_&quot;&gt;splice&lt;/span&gt;(i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, last_i-i);\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; arr;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This is also &lt;a href=&quot;https://jsbench.me/6qkt3h9ukg&quot; rel=&quot;noreferrer&quot;&gt;faster than the above method&lt;/a&gt; in most non-Chrome browsers.&lt;/p&gt;\n    ","\n&lt;p&gt;We can do this using ES6 sets:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; duplicatesArray = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; uniqueArray = [...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(duplicatesArray)];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(uniqueArray); &lt;span class=&quot;hljs-comment&quot;&gt;// [1,2,3,4,5]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif8&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;h2&gt;Magic&lt;/h2&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;=&amp;gt;&lt;/span&gt;!(t[e]=e &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; t)) \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;O(n)&lt;/strong&gt; performance (is faster than &lt;code&gt;new Set&lt;/code&gt;); we assume your array is in &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;t={}&lt;/code&gt;. Explanation &lt;a href=&quot;https://stackoverflow.com/a/53453045/860099&quot;&gt;here&lt;/a&gt; (+&lt;a href=&quot;https://stackoverflow.com/users/3717691/jeppe&quot;&gt;Jeppe&lt;/a&gt; impr.)&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; t, unique= &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;=&amp;gt;&lt;/span&gt; ( t={}, a.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt;=&amp;gt;&lt;/span&gt;!(t[e]=e &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; t)) );\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// &quot;stand-alone&quot; version working with global t:&lt;/span&gt;\n&lt;span class=&quot;hljs-comment&quot;&gt;// a1.filter((t={},e=&amp;gt;!(t[e]=e in t)));&lt;/span&gt;\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Test data&lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; a1 = [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; a2 = [[&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;], [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;]];\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; a3 = [&lt;span class=&quot;hljs-string&quot;&gt;&apos;Mike&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Adam&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;Matt&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Nancy&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Adam&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Jenny&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Nancy&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;Carl&apos;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// Results&lt;/span&gt;\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(a1) ))\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(a2) ))\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;( &lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;(a3) ))&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif9&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[&lt;span class=&quot;hljs-string&quot;&gt;&quot;Defects&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Total&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Days&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;City&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Defects&quot;&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;prev, cur&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (prev.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(cur) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) ? prev.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;([cur]) : prev;\n }, []);\n\n[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;].&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;prev, cur&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (prev.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(cur) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) ? prev.&lt;span class=&quot;hljs-title function_&quot;&gt;concat&lt;/span&gt;([cur]) : prev;\n }, []);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This prototype &lt;code&gt;getUnique&lt;/code&gt; is not totally correct, because if i have a Array like: &lt;code&gt;[&quot;1&quot;,1,2,3,4,1,&quot;foo&quot;]&lt;/code&gt; it will return &lt;code&gt;[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;]&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; is string and &lt;code&gt;1&lt;/code&gt; is a integer; they are different.&lt;/p&gt;\n\n&lt;p&gt;Here is a correct solution:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;unique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(a) }\n}(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a,b,c&lt;/span&gt;){ &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(a,b+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;using:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; foo;\nfoo = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;foo&quot;&lt;/span&gt;];\nfoo.&lt;span class=&quot;hljs-title function_&quot;&gt;unique&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The above will produce &lt;code&gt;[&quot;1&quot;,2,3,4,1,&quot;foo&quot;]&lt;/code&gt;.&lt;/p&gt;\n    ","\n&lt;p&gt;You can simlply use the built-in functions &lt;code&gt;Array.prototype.filter()&lt;/code&gt; and &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;array.filter((x, y) =&amp;gt; array.indexOf(x) == y)&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; newarr = arr.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;x, y&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(x) == y);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(newarr);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif10&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;After looking into all the &lt;strong&gt;90+&lt;/strong&gt; answers here, I saw there is room for one more:&lt;/p&gt;\n&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot; rel=&quot;nofollow noreferrer&quot;&gt;Array.includes&lt;/a&gt; has a very handy second-parameter: &lt;em&gt;&quot;fromIndex&quot;&lt;/em&gt;, so by using it, every iteration of the &lt;code&gt;filter&lt;/code&gt; callback method will search the &lt;em&gt;array&lt;/em&gt;, starting from &lt;code&gt;[current index] + 1&lt;/code&gt; which &lt;strong&gt;guarantees&lt;/strong&gt; not to include &lt;em&gt;currently&lt;/em&gt; filtered item in the lookup and also saves time.&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;Note - this solution does not retain the order, as it removed duplicated items from &lt;em&gt;left to right&lt;/em&gt;, but it wins the &lt;code&gt;Set&lt;/code&gt; trick if the &lt;em&gt;Array&lt;/em&gt; is a collection of &lt;em&gt;Objects&lt;/em&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//                               &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; list = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( \n  list.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;v,i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; !list.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(v,i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;))\n)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// [0,1,3,&quot;b&quot;,4,5,2,&quot;a&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif11&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;h3&gt;Explanation:&lt;/h3&gt;\n&lt;p&gt;For example, lets assume the &lt;code&gt;filter&lt;/code&gt; function is currently iterating at index &lt;code&gt;2&lt;/code&gt;) and the value at that index happens to be &lt;code&gt;2&lt;/code&gt;. The section of the array that is then scanned for duplicates (&lt;code&gt;includes&lt;/code&gt; method) is everything &lt;strong&gt;after&lt;/strong&gt; index 2 (&lt;code&gt;i+1&lt;/code&gt;):&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;                               \n[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; ,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; ,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;]\n          |---------------------------|\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And since the currently filtered item&apos;s value &lt;code&gt;2&lt;/code&gt; is included in the rest of the array, it will be filtered out, because of the leading exclamation mark which negates the filter rule.&lt;/p&gt;\n&lt;hr&gt;\n&lt;h3&gt;If order is important, use this method:&lt;/h3&gt;\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;true&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-display&quot; style=&quot;vertical-align: center&quot;&gt;&lt;p&gt;&lt;a class=&quot;snippet-show-link-chevron&quot;&gt;&lt;span class=&quot;expander-arrow-hide&quot; style=&quot;vertical-align: middle;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;snippet-show-link&quot;&gt;&lt;span class=&quot;show-hide&quot; data-ishidden=&quot;true&quot; style=&quot;vertical-align: middle&quot;&gt;Show code snippet&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;\n&lt;div class=&quot;snippet-code snippet-currently-hidden&quot; style=&quot;display: none;&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//                               &lt;/span&gt;\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; list = [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;b&apos;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&apos;a&apos;&lt;/span&gt;]\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;( \n  &lt;span class=&quot;hljs-comment&quot;&gt;// Initialize with empty array and fill with non-duplicates&lt;/span&gt;\n  list.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, v&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (!acc.&lt;span class=&quot;hljs-title function_&quot;&gt;includes&lt;/span&gt;(v) &amp;amp;&amp;amp; acc.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(v), acc), [])\n)\n\n&lt;span class=&quot;hljs-comment&quot;&gt;// [0,1,2,3,&quot;a&quot;,&quot;b&quot;,4,5]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif12&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(duplicates)]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;This is the simplest one and referenced from &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#Remove_duplicate_elements_from_the_array&quot; rel=&quot;noreferrer&quot;&gt;MDN Web Docs&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; numbers = [&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;]\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(numbers)]) &lt;span class=&quot;hljs-comment&quot;&gt;// [2, 3, 4, 5, 6, 7, 32]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;This has been answered a lot, but it didn&apos;t address my particular need.&lt;/p&gt;\n\n&lt;p&gt;Many answers are like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item, pos, self&lt;/span&gt;) =&amp;gt;&lt;/span&gt; self.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(item) === pos);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But this doesn&apos;t work for arrays of complex objects.&lt;/p&gt;\n\n&lt;p&gt;Say we have an array like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; a = [\n { &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;fluffy&apos;&lt;/span&gt; },\n { &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;spot&apos;&lt;/span&gt; },\n { &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;fluffy&apos;&lt;/span&gt; },\n { &lt;span class=&quot;hljs-attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;toby&apos;&lt;/span&gt; },\n];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If we want the objects with unique names, we should use &lt;code&gt;array.prototype.findIndex&lt;/code&gt; instead of &lt;code&gt;array.prototype.indexOf&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;a.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;item, pos, self&lt;/span&gt;) =&amp;gt;&lt;/span&gt; self.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; v.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt; === item.&lt;span class=&quot;hljs-property&quot;&gt;name&lt;/span&gt;) === pos);\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getUnique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {}, a = []\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i++) o[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]] = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; e &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o) a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(e)\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Without extending Array.prototype (it is said to be a bad practice) or using jquery/underscore, you can simply &lt;code&gt;filter&lt;/code&gt; the array.&lt;/p&gt;\n\n&lt;p&gt;By keeping last occurrence:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arrayLastUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;a, b, c&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// keeps last occurrence&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(a, b + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n        });\n    },\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or first occurrence:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arrayFirstUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;array&lt;/span&gt;) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;a, b, c&lt;/span&gt;) {\n            &lt;span class=&quot;hljs-comment&quot;&gt;// keeps first occurrence&lt;/span&gt;\n            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; c.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(a) === b;\n        });\n    },\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Well, it&apos;s only javascript ECMAScript 5+, which means only IE9+, but it&apos;s nice for a development in native HTML/JS (Windows Store App, Firefox OS, Sencha, Phonegap, Titanium, ...).&lt;/p&gt;\n    ","\n&lt;p&gt;That&apos;s because &lt;code&gt;0&lt;/code&gt; is a falsy value in JavaScript.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;this[i]&lt;/code&gt; will be falsy if the value of the array is 0 or any other falsy value.&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re using Prototype framework there is no need to do &apos;for&apos; loops, you can use &lt;a href=&quot;http://prototypejs.org/doc/latest/language/Array/prototype/uniq/&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://prototypejs.org/doc/latest/language/Array/prototype/uniq/&lt;/a&gt; like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;uniq&lt;/span&gt;();  \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Which will produce a duplicate array with no duplicates. I came across your question searching a method to count distinct array records so after &lt;code&gt;uniq()&lt;/code&gt; I used  &lt;code&gt;size()&lt;/code&gt; and there was my simple result.\np.s. Sorry if i mistyped something&lt;/p&gt;\n&lt;p&gt;edit: if you want to escape undefined records you may want to add &lt;code&gt;compact()&lt;/code&gt; before, like this:&lt;/p&gt;\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;compact&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;uniq&lt;/span&gt;();  \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Now using sets you can remove duplicates and convert them back to the array.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; names = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mike&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Nancy&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Adam&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jenny&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Nancy&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Carl&quot;&lt;/span&gt;];\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;([...&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Set&lt;/span&gt;(names)])&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif13&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n\n&lt;p&gt;Another solution is to use sort &amp;amp; filter&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; names = [&lt;span class=&quot;hljs-string&quot;&gt;&quot;Mike&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Nancy&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Adam&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Jenny&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Nancy&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Carl&quot;&lt;/span&gt;];\n&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; namesSorted = names.&lt;span class=&quot;hljs-title function_&quot;&gt;sort&lt;/span&gt;();\n&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; result = namesSorted.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;e, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; namesSorted[i] != namesSorted[i+&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(result);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif14&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;I had a slightly different problem where I needed to remove objects with duplicate id properties from an array. this worked.&lt;/p&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;\n&lt;div class=&quot;snippet-code&quot;&gt;\n&lt;pre class=&quot;snippet-code-js lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; objArr = [{\n  &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;123&apos;&lt;/span&gt;\n}, {\n  &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;123&apos;&lt;/span&gt;\n}, {\n  &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&apos;456&apos;&lt;/span&gt;\n}];\n\nobjArr = objArr.&lt;span class=&quot;hljs-title function_&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;acc, cur&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [\n  ...acc.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj&lt;/span&gt;) =&amp;gt;&lt;/span&gt; obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; !== cur.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;), cur\n], []);\n\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(objArr);&lt;/code&gt;&lt;/pre&gt;\n&lt;div class=&quot;snippet-result&quot;&gt;&lt;div class=&quot;snippet-ctas&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn s-btn__primary&quot;&gt;&lt;span class=&quot;icon-play-white _hover&quot;&gt;&lt;/span&gt;&lt;span&gt; Run code snippet&lt;/span&gt;&lt;/button&gt;&lt;input class=&quot;copySnippet s-btn s-btn__filled&quot; type=&quot;button&quot; value=&quot;Copy snippet to answer&quot; style=&quot;display: none;&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;s-btn hideResults&quot; style=&quot;display: none;&quot;&gt;Hide results&lt;/button&gt;&lt;div class=&quot;popout-code&quot;&gt;&lt;a class=&quot;snippet-expand-link&quot;&gt;Expand snippet&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;snippet-result-code&quot; style=&quot;display: none;&quot;&gt;&lt;iframe name=&quot;sif15&quot; sandbox=&quot;allow-forms allow-modals allow-scripts&quot; class=&quot;snippet-box-edit snippet-box-result&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n    ","\n&lt;p&gt;If you&apos;re okay with extra dependencies, or you already have one of the libraries in your codebase, you can remove duplicates from an array in place using LoDash (or Underscore).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you don&apos;t have it in your codebase already, install it using npm:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;npm install lodash\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then use it as follows:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; _ &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;lodash&apos;&lt;/span&gt;;\n&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; idArray = _.&lt;span class=&quot;hljs-property&quot;&gt;uniq&lt;/span&gt; ([\n    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,\n    &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,\n    &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,\n    &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,\n    &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;\n]);\n&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;dir&lt;/span&gt;(idArray);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Out:&lt;/strong&gt; &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;[ &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; ]\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;I&apos;m not sure why Gabriel Silveira wrote the function that way but a simpler form that works for me just as well and without the minification is:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;unique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;value, index, array&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(value, index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;\n  });\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or in CoffeeScript:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;unique&lt;/span&gt; = -&amp;gt;\n  &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;( (value, index, array) -&amp;gt;\n    array.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(value, index + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;\n  )\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;Finding unique Array values in simple method&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;arrUnique&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt;){\n  &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; t = [];\n  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; x &amp;lt; a.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; x++){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(t.&lt;span class=&quot;hljs-title function_&quot;&gt;indexOf&lt;/span&gt;(a[x]) == -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)t.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(a[x]);\n  }\n  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; t;\n}\n&lt;span class=&quot;hljs-title function_&quot;&gt;arrUnique&lt;/span&gt;([&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;]) &lt;span class=&quot;hljs-comment&quot;&gt;// [1, 4, 2, 7, 5, 9]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;It appears we have lost &lt;a href=&quot;https://stackoverflow.com/a/1961068/519360&quot; title=&quot;(broken link)&quot;&gt;Rafael&apos;s answer&lt;/a&gt;, which stood as the accepted answer for a few years. This was (at least in 2017) the best-performing solution &lt;a href=&quot;https://stackoverflow.com/q/1960473/519360#comment30060330_14438954&quot;&gt;if you don&apos;t have a mixed-type array&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getUnique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; u = {}, a = [];\n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; l; ++i) {\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (u.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i])) {\n            &lt;span class=&quot;hljs-keyword&quot;&gt;continue&lt;/span&gt;;\n        }\n        a.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]);\n        u[&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]] = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;\n    }\n&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you &lt;em&gt;do&lt;/em&gt; have a mixed-type array, you can serialize the hash key:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getUnique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n    &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; hash = {}, result = [], key; \n    &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; ( &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, l = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt;; i &amp;lt; l; ++i ) {\n        key = &lt;span class=&quot;hljs-title class_&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;stringify&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]);\n        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; ( !hash.&lt;span class=&quot;hljs-title function_&quot;&gt;hasOwnProperty&lt;/span&gt;(key) ) {\n            hash[key] = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;;\n            result.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]);\n        }\n    }\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; result;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;strange this hasn&apos;t been suggested before.. to remove duplicates by object key (&lt;code&gt;id&lt;/code&gt; below) in an array you can do something like this:&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; uniqArray = array.&lt;span class=&quot;hljs-title function_&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;obj, idx, arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (\n  arr.&lt;span class=&quot;hljs-title function_&quot;&gt;findIndex&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;o&lt;/span&gt;) =&amp;gt;&lt;/span&gt; o.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt; === obj.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;) === idx\n)) \n&lt;/code&gt;&lt;/pre&gt;\n    ","\n&lt;p&gt;For an object-based array with some unique id&apos;s, I have a simple solution through which you can sort in linear complexity &lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getUniqueArr&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;arr&lt;/span&gt;){\n    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; mapObj = {};\n    arr.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;a&lt;/span&gt; =&amp;gt;&lt;/span&gt; { \n       mapObj[a.&lt;span class=&quot;hljs-property&quot;&gt;id&lt;/span&gt;] = a\n    })\n    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;values&lt;/span&gt;(mapObj);\n}\n&lt;/code&gt;&lt;/pre&gt;\n    "],"comment":["\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@hippietrail That older question is about finding and returning only the duplicates (I was confused too!). My question is more about why this function fails when an array has a zero in it.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/145346/mottie&quot; title=&quot;80,442 reputation&quot; class=&quot;comment-user owner&quot;&gt;Mottie&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment32871515_1960473&quot;&gt;&lt;span title=&quot;2014-02-12 17:34:28Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 12, 2014 at 17:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;For future readers, when start finding that you have to algorithmically modify the contents of your data structure all the time, (order them, remove repeating elements, etc.) or search for elements inside it at every iteration, it&apos;s safe to assume that you&apos;re using the wrong data structure in the first place and start using one that is more appropriate for the task at hand (in this case a hash set instead of array).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/227755/nurettin&quot; title=&quot;10,532 reputation&quot; class=&quot;comment-user&quot;&gt;nurettin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment43820830_1960473&quot;&gt;&lt;span title=&quot;2014-12-30 11:16:43Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 30, 2014 at 11:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I copied the code from somewhere else, a loooong time ago... but it seems pretty straight-forward: &lt;code&gt;o&lt;/code&gt; = &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt; = &lt;code&gt;array&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt; = &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt; = umm, something :P&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/145346/mottie&quot; title=&quot;80,442 reputation&quot; class=&quot;comment-user owner&quot;&gt;Mottie&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment51544423_1960473&quot;&gt;&lt;span title=&quot;2015-08-04 12:38:48Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 4, 2015 at 12:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Possible duplicate of &lt;a href=&quot;https://stackoverflow.com/questions/11246758/how-to-get-unique-values-in-an-array&quot;&gt;How to get unique values in an array&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4921319/adeel-imran&quot; title=&quot;11,344 reputation&quot; class=&quot;comment-user&quot;&gt;Adeel Imran&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment82912547_1960473&quot;&gt;&lt;span title=&quot;2017-12-25 19:36:03Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 25, 2017 at 19:36&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Just wanted to point out, a lot of people have suggested using JavaScript Set as a solution, proceed with caution because it is not supported in Internet Explorer. If you have to support IE, then use a polyfill.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/6799415/nam-kim&quot; title=&quot;229 reputation&quot; class=&quot;comment-user&quot;&gt;Nam Kim&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104108892_1960473&quot;&gt;&lt;span title=&quot;2019-11-18 22:16:55Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 18, 2019 at 22:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This solution will run much slower, unfortunately. You&apos;re looping twice, once with filter and once with index of&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2102085/jack-franzen&quot; title=&quot;758 reputation&quot; class=&quot;comment-user&quot;&gt;Jack Franzen&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment30052500_14438954&quot;&gt;&lt;span title=&quot;2013-11-23 10:11:12Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 23, 2013 at 10:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;In modern JS: &lt;code&gt;.filter((v,i,a)=&amp;gt;a.indexOf(v)==i)&lt;/code&gt; (fat arrow notation).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/124119/camilo-martin&quot; title=&quot;35,967 reputation&quot; class=&quot;comment-user&quot;&gt;Camilo Martin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment64491530_14438954&quot;&gt;&lt;span title=&quot;2016-07-24 08:43:19Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 24, 2016 at 8:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;&lt;code&gt;let unique_values = [...new Set(random_array)];&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; rel=&quot;nofollow noreferrer&quot;&gt;developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1737158/lukas-liesis&quot; title=&quot;21,664 reputation&quot; class=&quot;comment-user&quot;&gt;Lukas Liesis&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment68618078_14438954&quot;&gt;&lt;span title=&quot;2016-11-19 15:07:06Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 19, 2016 at 15:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Why is &lt;code&gt;[...&lt;/code&gt; ... &lt;code&gt;]&lt;/code&gt; necessary? &lt;code&gt;new Set(myArray)&lt;/code&gt; on its own seems to have the same behaviour&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/8940624/chris-a&quot; title=&quot;611 reputation&quot; class=&quot;comment-user&quot;&gt;Chris A&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125291324_14438954&quot;&gt;&lt;span title=&quot;2022-01-27 01:00:05Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 27 at 1:00&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Lest any newcomer be scared away by the performance implications, consider &quot;much slower&quot; may very well be nanoseconds. If your array is relatively small (hundreds or less), using the nice concise one off version like this is good for reasons outside of performance, i.e. readability and maintainability.  But the set version is quite nice and concise.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/879619/vectorjohn&quot; title=&quot;401 reputation&quot; class=&quot;comment-user&quot;&gt;Vectorjohn&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment125743207_14438954&quot;&gt;&lt;span title=&quot;2022-02-15 21:31:19Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 15 at 21:31&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Notice, that inner array wouldn&apos;t work &lt;code&gt;Array.from(new Set([[1,2],[1,2],[1,2,3]]))&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3654176/alexander-goncharov&quot; title=&quot;1,254 reputation&quot; class=&quot;comment-user&quot;&gt;Alexander Goncharov&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment67703544_33121880&quot;&gt;&lt;span title=&quot;2016-10-24 13:49:59Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 24, 2016 at 13:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Please note that if you use the &lt;code&gt;Set&lt;/code&gt; and add objects instead of primitive values it will contain unique &lt;i&gt;references&lt;/i&gt; to the objects.  Thus the set &lt;code&gt;s&lt;/code&gt; in &lt;code&gt;let s = new Set([{Foo:&quot;Bar&quot;}, {Foo:&quot;Bar&quot;}]);&lt;/code&gt; will return this: &lt;code&gt;Set { { Foo: &apos;Bar&apos; }, { Foo: &apos;Bar&apos; } }&lt;/code&gt; which is a &lt;code&gt;Set&lt;/code&gt; with unique object references to objects that contain the same values. If you write &lt;code&gt;let o = {Foo:&quot;Bar&quot;};&lt;/code&gt; and then create a set with two &lt;i&gt;references&lt;/i&gt; like so: &lt;code&gt;let s2 = new Set([o,o]);&lt;/code&gt;, then s2 will be &lt;code&gt;Set { { Foo: &apos;Bar&apos; } }&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1257728/mortb&quot; title=&quot;8,713 reputation&quot; class=&quot;comment-user&quot;&gt;mortb&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment73523538_33121880&quot;&gt;&lt;span title=&quot;2017-04-05 09:14:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 5, 2017 at 9:14&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;In case anyone was wondering, this works well for strings too, e.g.  [...new Set([&quot;apple&quot;,&quot;apple&quot;,&quot;orange&quot;])] results in [&apos;apple&apos;, &apos;orange&apos;] . Great!&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/927737/marquez&quot; title=&quot;5,612 reputation&quot; class=&quot;comment-user&quot;&gt;Marquez&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123920273_33121880&quot;&gt;&lt;span title=&quot;2021-11-24 19:07:57Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 24, 2021 at 19:07&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 4 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;In Typescript, use &lt;code&gt;Array.from( new Set( items ) )&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/418150/lee-goddard&quot; title=&quot;9,695 reputation&quot; class=&quot;comment-user&quot;&gt;Lee Goddard&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127808573_33121880&quot;&gt;&lt;span title=&quot;2022-05-23 09:24:44Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 23 at 9:24&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Makrov, so the &lt;code&gt;uniqueItems = [...new Set(items)]&lt;/code&gt; appears to be the fastest and the most succinct of all the approaches?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/410975/vass&quot; title=&quot;2,483 reputation&quot; class=&quot;comment-user&quot;&gt;Vass&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment123333067_43046408&quot;&gt;&lt;span title=&quot;2021-10-29 18:45:01Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Oct 29, 2021 at 18:45&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Your solution only handles primitives, it won&apos;t work with objects, you&apos;d need to JSON.stringify the v in the hash&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2977175/tofandel&quot; title=&quot;2,389 reputation&quot; class=&quot;comment-user&quot;&gt;Tofandel&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment127416682_43046408&quot;&gt;&lt;span title=&quot;2022-05-04 12:30:19Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;May 4 at 12:30&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Please do this folks. Don&apos;t jack something onto to the Array prototype. Please.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/217623/jacob-dalton&quot; title=&quot;1,593 reputation&quot; class=&quot;comment-user&quot;&gt;Jacob Dalton&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment61316090_11437129&quot;&gt;&lt;span title=&quot;2016-04-26 20:06:11Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 26, 2016 at 20:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@JacobDalton Please don&apos;t do this. There&apos;s no need to add an extra library just for a small job that can be done with &lt;code&gt;array = [...new Set(array)]&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;span class=&quot;comment-user&quot;&gt;user6269864&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment89390422_11437129&quot;&gt;&lt;span title=&quot;2018-07-06 07:02:44Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 6, 2018 at 7:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@JacobDalton why not? Is there a downside to &quot;jacking something&quot; onto the array?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10900875/anshul&quot; title=&quot;395 reputation&quot; class=&quot;comment-user&quot;&gt;anshul&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment121142468_11437129&quot;&gt;&lt;span title=&quot;2021-07-27 14:48:34Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 27, 2021 at 14:48&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How would this work if I wanted the new array to not be uniques, but be an array of values that were duplicated? So using the above example, the array I&apos;m looking for is &lt;code&gt;[&quot;volvo&quot;,&quot;lincoln&quot;]&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/335514/jason&quot; title=&quot;7,457 reputation&quot; class=&quot;comment-user&quot;&gt;Jason&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120229985_21130918&quot;&gt;&lt;span title=&quot;2021-06-17 17:13:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 17, 2021 at 17:13&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Jason I&apos;d probably create a &lt;code&gt;Map&lt;/code&gt; to store previously seen items and an array to store the duplicate items. Then loop through the &lt;code&gt;cars&lt;/code&gt; array and check if the Map has the current item, if it does then push it to the duplicates array, if not then add it to the Map. I&apos;d be happy to create a code example for you if you create a new question and we can continue the discussion there.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/2990144/seth-holladay&quot; title=&quot;7,991 reputation&quot; class=&quot;comment-user&quot;&gt;Seth Holladay&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120231268_21130918&quot;&gt;&lt;span title=&quot;2021-06-17 18:09:12Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 17, 2021 at 18:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;A concise solution, but calling inArray is way less efficient than calling hasOwnProperty.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/813951/mister-smith&quot; title=&quot;26,197 reputation&quot; class=&quot;comment-user&quot;&gt;Mister Smith&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24461438_11455508&quot;&gt;&lt;span title=&quot;2013-06-05 14:16:50Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 5, 2013 at 14:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;This is also O(N^2), right? Whereas the dictionary or hasOwnProperty approach would likely be O(N*logN).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/234270/speedplane&quot; title=&quot;15,067 reputation&quot; class=&quot;comment-user&quot;&gt;speedplane&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment78664111_11455508&quot;&gt;&lt;span title=&quot;2017-08-24 04:46:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Aug 24, 2017 at 4:46&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Completely duplicated answer for ones other ones given years before this one.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/104380/vsync&quot; title=&quot;104,696 reputation&quot; class=&quot;comment-user&quot;&gt;vsync&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128414022_70865229&quot;&gt;&lt;span title=&quot;2022-06-21 10:50:58Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 21 at 10:50&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;On Linux, Chrome 55.0.2883 prefers your arr.unique() and swilliams&apos; arrclone2.sortFilter() is slowest (78% slower).  However, Firefox 51.0.0 (with lots of addons) has swilliams as fastest (yet still slower by Ops/sec than any other Chrome result) with mottie&apos;s &lt;a href=&quot;https://stackoverflow.com/a/11455508/519360&quot;&gt;jQuery $.grep(arr, jqFilter)&lt;/a&gt; being slowest (46% slower).  Your arr.uniq() was 30% slower.  I ran each test twice and got consistent results.  Rafael&apos;s &lt;a href=&quot;https://stackoverflow.com/a/1961068/519360&quot;&gt;arr.getUnique()&lt;/a&gt; got second place in both browsers.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/519360/adam-katz&quot; title=&quot;12,536 reputation&quot; class=&quot;comment-user&quot;&gt;Adam Katz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment71330577_21445415&quot;&gt;&lt;span title=&quot;2017-02-07 00:11:51Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 7, 2017 at 0:11&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;jsPerf is &lt;a href=&quot;https://github.com/jsperf/jsperf.com/issues/236&quot; rel=&quot;nofollow noreferrer&quot;&gt;buggy&lt;/a&gt; at the moment, so my edit to this test didn&apos;t commit everything, but it did result in adding two tests:  Cocco&apos;s &lt;a href=&quot;https://stackoverflow.com/a/25082874/519360&quot;&gt;toUnique()&lt;/a&gt; beats Vamsi&apos;s &lt;a href=&quot;https://stackoverflow.com/a/39272981/519360&quot;&gt;ES6 list.filter()&lt;/a&gt; on both browsers, beating swilliams&apos; sortFilter() for #1 on FF (sortFilter was 16% slower) and beating your sorted testing (which was slower by 2%) for #3 on Chrome.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/519360/adam-katz&quot; title=&quot;12,536 reputation&quot; class=&quot;comment-user&quot;&gt;Adam Katz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment71330729_21445415&quot;&gt;&lt;span title=&quot;2017-02-07 00:21:53Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 7, 2017 at 0:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 2 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Ah, I hadn&apos;t caught that those tests were trivially small and don&apos;t really matter.  A comment to the accepted answer &lt;a href=&quot;https://stackoverflow.com/questions/1960473/unique-values-in-an-array/25082874#comment32934630_1961068&quot;&gt;describes that problem&lt;/a&gt; and offers a correction in a &lt;a href=&quot;https://jsperf.com/unique-in-array/3&quot; rel=&quot;nofollow noreferrer&quot;&gt;revision&lt;/a&gt; to the test, in which Rafael&apos;s code is easily the fastest and Joetje50&apos;s arr.unique code is 98% slower.  I&apos;ve also made another revision as noted in &lt;a href=&quot;https://stackoverflow.com/questions/1960473/unique-values-in-an-array/25082874#comment71331623_25082874&quot;&gt;this comment&lt;/a&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/519360/adam-katz&quot; title=&quot;12,536 reputation&quot; class=&quot;comment-user&quot;&gt;Adam Katz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment71331634_21445415&quot;&gt;&lt;span title=&quot;2017-02-07 01:21:52Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Feb 7, 2017 at 1:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Well, actually the algorithm you implemented in &lt;code&gt;unique&lt;/code&gt; function has O(n^2) complexity while the one in &lt;code&gt;getUnique&lt;/code&gt; is O(n). The first one may be faster on small data sets, but how can you argue with the maths :) You can make sure the latter one is faster if you run it on an array of, say, 1e5 unique items&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/4012887/mikhail-dudin&quot; title=&quot;429 reputation&quot; class=&quot;comment-user&quot;&gt;Mikhail  Dudin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment93477822_21445415&quot;&gt;&lt;span title=&quot;2018-11-14 10:55:33Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 14, 2018 at 10:55&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;also used by &lt;a href=&quot;https://github.com/lodash/lodash/blob/86a852fe763935bb64c12589df5391fd7d3bb14d/.internal/baseUniq.js#L20&quot; rel=&quot;nofollow noreferrer&quot;&gt;lodash.uniq&lt;/a&gt; for &lt;code&gt;input_array.length &amp;lt; 200&lt;/code&gt;, otherwise uses the &lt;code&gt;[...new Set(input_array)]&lt;/code&gt; method. expressed as reducer: &lt;code&gt;input_array.reduce((c, v) =&amp;gt; {if (!c.includes(v)) c.push(v); return c;}, [])&lt;/code&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10440128/milahu&quot; title=&quot;1,562 reputation&quot; class=&quot;comment-user&quot;&gt;milahu&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment113411208_21445415&quot;&gt;&lt;span title=&quot;2020-09-30 09:04:50Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Sep 30, 2020 at 9:04&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;this look so super cool, that without a solid explanation i fell you&apos;re gonna mine bitcoins when i run this&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1814682/ond%c5%99ej-%c5%bdelazko&quot; title=&quot;580 reputation&quot; class=&quot;comment-user&quot;&gt;Ondřej Želazko&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95019298_53526999&quot;&gt;&lt;span title=&quot;2019-01-08 14:16:10Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 8, 2019 at 14:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;what i meant is that you should expand your answer with some explanation and commented deconstruction of it. don&apos;t expect people will find useful answers like this. (though it really looks cool a probably works)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1814682/ond%c5%99ej-%c5%bdelazko&quot; title=&quot;580 reputation&quot; class=&quot;comment-user&quot;&gt;Ondřej Želazko&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95046655_53526999&quot;&gt;&lt;span title=&quot;2019-01-09 09:49:28Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 9, 2019 at 9:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Not magic, but is much like the &quot;Set&quot;-answers, using O(1) key-lookups in the dictionary. Do you need to increment the counters though? How about &quot;e=&amp;gt;!(t[e]=e in t)&quot;. Nice answer though.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3717691/jeppe&quot; title=&quot;1,518 reputation&quot; class=&quot;comment-user&quot;&gt;Jeppe&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95174651_53526999&quot;&gt;&lt;span title=&quot;2019-01-13 20:21:15Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 13, 2019 at 20:21&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Jeppe when I run your improvement then I experience &lt;a href=&quot;https://en.wikipedia.org/wiki/Eureka_effect&quot; rel=&quot;nofollow noreferrer&quot;&gt;aha effect&lt;/a&gt; (before I don&apos;t know that I can use &lt;code&gt;in&lt;/code&gt; operator outside the other construction than &lt;code&gt;for&lt;/code&gt; loop :P) - Thank you - I appreciate it and will give +2 to your other good answers.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/860099/kamil-kie%c5%82czewski&quot; title=&quot;72,493 reputation&quot; class=&quot;comment-user&quot;&gt;Kamil Kiełczewski&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment95179653_53526999&quot;&gt;&lt;span title=&quot;2019-01-14 03:32:29Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jan 14, 2019 at 3:32&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Note that &lt;code&gt;$foo = &apos;bar&apos;&lt;/code&gt; is the PHP way of declaring variables. It will work in javascript, but will create an implicit global, and generally shouldn&apos;t be done.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/124119/camilo-martin&quot; title=&quot;35,967 reputation&quot; class=&quot;comment-user&quot;&gt;Camilo Martin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24666231_11692295&quot;&gt;&lt;span title=&quot;2013-06-12 05:58:32Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 12, 2013 at 5:58&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@CamiloMartin sorry but you&apos;re wrong, $foo is global because the example is not in a closure and he&apos;s missing the var keyword. Nothing to do with the dollar &lt;a href=&quot;http://jsfiddle.net/robaldred/L2MRb/&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfiddle.net/robaldred/L2MRb&lt;/a&gt;&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/149615/rob&quot; title=&quot;6,921 reputation&quot; class=&quot;comment-user&quot;&gt;Rob&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment25792577_11692295&quot;&gt;&lt;span title=&quot;2013-07-17 13:09:24Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 17, 2013 at 13:09&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@Rob that&apos;s exactly what I&apos;m saying, PHP people will think &lt;code&gt;$foo&lt;/code&gt; is the way of declaring variables in javascript while actually &lt;code&gt;var foo&lt;/code&gt; is.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/124119/camilo-martin&quot; title=&quot;35,967 reputation&quot; class=&quot;comment-user&quot;&gt;Camilo Martin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment25846398_11692295&quot;&gt;&lt;span title=&quot;2013-07-18 17:57:46Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 18, 2013 at 17:57&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Unfortunately, this keeps the LAST instance of each value, not the first. (which might be ok, but I think keeping the first is generally what&apos;s expected)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/166524/lapo&quot; title=&quot;3,026 reputation&quot; class=&quot;comment-user&quot;&gt;lapo&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115456747_64188438&quot;&gt;&lt;span title=&quot;2020-12-15 14:16:35Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 15, 2020 at 14:16&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Although this is a nice optimization idea, I don&apos;t think people would want to use this since this&apos;s keeping the last item which basically mess up the array order.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/10211573/minhtus&quot; title=&quot;134 reputation&quot; class=&quot;comment-user&quot;&gt;minhtus&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128411134_64188438&quot;&gt;&lt;span title=&quot;2022-06-21 08:39:11Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 21 at 8:39&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;While this code may solve the question, including an &lt;a href=&quot;https://meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers&quot;&gt;explanation&lt;/a&gt; of how and why this solves the problem would really help to improve the quality of your post, and probably result in more up-votes. Remember that you are answering the question for readers in the future, not just the person asking now. Please edit your answer to add explanation, and give an indication of what limitations and assumptions apply.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1848540/id-ot&quot; title=&quot;2,931 reputation&quot; class=&quot;comment-user&quot;&gt;id.ot&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment100755030_57112369&quot;&gt;&lt;span title=&quot;2019-07-19 18:59:39Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 19, 2019 at 18:59&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Identical to &lt;a href=&quot;https://stackoverflow.com/a/49725248/104380&quot;&gt;previous answer&lt;/a&gt; which dates a year prior to this one&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/104380/vsync&quot; title=&quot;104,696 reputation&quot; class=&quot;comment-user&quot;&gt;vsync&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment128413989_57112369&quot;&gt;&lt;span title=&quot;2022-06-21 10:49:44Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jun 21 at 10:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Great solution, beware that a new array will return from a function. (it doesn&apos;t modify itself)&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/5573498/thanwa-ch&quot; title=&quot;125 reputation&quot; class=&quot;comment-user&quot;&gt;Thanwa Ch.&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment107915404_57824772&quot;&gt;&lt;span title=&quot;2020-04-02 17:33:27Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Apr 2, 2020 at 17:33&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Works will with a complex array of objets&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1159590/edgar-quintero&quot; title=&quot;3,717 reputation&quot; class=&quot;comment-user&quot;&gt;Edgar Quintero&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115449838_57824772&quot;&gt;&lt;span title=&quot;2020-12-15 10:10:41Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 15, 2020 at 10:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@EdgarQuintero only if the elements are actually the exact same object, so the array [ { a: 2 }, { a: 2 } ] won&apos;t work as many people might expect if you use the &lt;code&gt;indexOf&lt;/code&gt; solution, but the &lt;code&gt;findIndex&lt;/code&gt; solution might be useful&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/3438226/dave&quot; title=&quot;1,695 reputation&quot; class=&quot;comment-user&quot;&gt;Dave&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment115455402_57824772&quot;&gt;&lt;span title=&quot;2020-12-15 13:34:14Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Dec 15, 2020 at 13:34&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 3 times&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;I think this won&apos;t work if the array contains objects/arrays, and I&apos;m not sure if it will preserve the type of scalars.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/124119/camilo-martin&quot; title=&quot;35,967 reputation&quot; class=&quot;comment-user&quot;&gt;Camilo Martin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24065178_1960537&quot;&gt;&lt;span title=&quot;2013-05-23 14:02:56Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 23, 2013 at 14:02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Yes, everything gets stringified.  That could be fixed by storing the original value in &lt;code&gt;o&lt;/code&gt; instead of just a &lt;code&gt;1&lt;/code&gt;, although equality comparison would still be stringwise (although, out of all the possible Javascript equalities, it doesn&apos;t seem too unreasonable).&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/20713/ephemient&quot; title=&quot;190,758 reputation&quot; class=&quot;comment-user&quot;&gt;ephemient&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24073593_1960537&quot;&gt;&lt;span title=&quot;2013-05-23 17:43:12Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 23, 2013 at 17:43&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The Array.prototype could be extended only with non enumerable methods .... Object.defineProperty(Array.prototype,&quot;getUnique&quot;,{}) ...  but the idea of using a helper object is very nice&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/544803/bortunac&quot; title=&quot;4,364 reputation&quot; class=&quot;comment-user&quot;&gt;bortunac&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment68537648_1960537&quot;&gt;&lt;span title=&quot;2016-11-17 11:05:49Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 17, 2016 at 11:05&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;The fact that it&apos;s js 1.6 does not mean you can&apos;t use &lt;code&gt;filter&lt;/code&gt;. At the &lt;a href=&quot;https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Array/filter&quot; rel=&quot;nofollow noreferrer&quot;&gt;MDN page&lt;/a&gt; they have an implementation for Internet Explorer, I mean, older browsers. Also: JS 1.6 refers only to Firefox&apos;s js engine, but the right thing to say it&apos;s that it is ECMAScript 5.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/124119/camilo-martin&quot; title=&quot;35,967 reputation&quot; class=&quot;comment-user&quot;&gt;Camilo Martin&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment24065327_16065720&quot;&gt;&lt;span title=&quot;2013-05-23 14:06:37Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;May 23, 2013 at 14:06&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n                        &lt;span title=&quot;this comment was edited 1 time&quot;&gt;\n                            &lt;svg aria-hidden=&quot;true&quot; class=&quot;va-text-bottom o50 svg-icon iconPencilSm&quot; width=&quot;14&quot; height=&quot;14&quot; viewBox=&quot;0 0 14 14&quot;&gt;&lt;path d=&quot;m11.1 1.71 1.13 1.12c.2.2.2.51 0 .71L11.1 4.7 9.21 2.86l1.17-1.15c.2-.2.51-.2.71 0ZM2 10.12l6.37-6.43 1.88 1.88L3.88 12H2v-1.88Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\n                        &lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Ahhhh, ok I see now... but would there be an easy fix to make it work?&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/145346/mottie&quot; title=&quot;80,442 reputation&quot; class=&quot;comment-user owner&quot;&gt;Mottie&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment1873506_1960479&quot;&gt;&lt;span title=&quot;2009-12-25 04:46:46Z, License: CC BY-SA 2.5&quot; class=&quot;relativetime-clean&quot;&gt;Dec 25, 2009 at 4:46&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;because i found a better answer, i think about topics are for all people not just for the one who asked&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/392502/decebal&quot; title=&quot;1,285 reputation&quot; class=&quot;comment-user&quot;&gt;Decebal&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment9742958_7967036&quot;&gt;&lt;span title=&quot;2011-11-01 15:10:37Z, License: CC BY-SA 3.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 1, 2011 at 15:10&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Thanks for time machine yet iirc around 15 years ago JS community had debate and result is - do not extend prototype cause of side effects and cause you pollute all JS arrays this way.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1737158/lukas-liesis&quot; title=&quot;21,664 reputation&quot; class=&quot;comment-user&quot;&gt;Lukas Liesis&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment120761441_7967036&quot;&gt;&lt;span title=&quot;2021-07-10 15:49:57Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Jul 10, 2021 at 15:49&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;You can also use lodash to remove objects with duplicate properties from an array: &lt;code&gt;_.uniqWith(objectArray, _.isEqual)&lt;/code&gt;.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/811240/mike&quot; title=&quot;22,214 reputation&quot; class=&quot;comment-user&quot;&gt;Mike&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment114811095_50796778&quot;&gt;&lt;span title=&quot;2020-11-21 03:35:16Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 21, 2020 at 3:35&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;How can this answer be correct? Expected result for unique array is  [5,9] as per the input given [1,4,2,7,1,5,9,2,4,7,2]&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/7199710/pooja-thapa&quot; title=&quot;63 reputation&quot; class=&quot;comment-user&quot;&gt;Pooja Thapa&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment114495808_34656478&quot;&gt;&lt;span title=&quot;2020-11-09 17:44:43Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 9, 2020 at 17:44&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;Don&apos;t both &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;findIndex()&lt;/code&gt; have to iterate through the array? That would make this a double-loop and therefore twice as expensive to run as any other answer here.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/519360/adam-katz&quot; title=&quot;12,536 reputation&quot; class=&quot;comment-user&quot;&gt;Adam Katz&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104315211_48567595&quot;&gt;&lt;span title=&quot;2019-11-25 16:25:29Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 25, 2019 at 16:25&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        ","\n            &lt;div class=&quot;comment-body js-comment-edit-hide&quot;&gt;\n                \n                &lt;span class=&quot;comment-copy&quot;&gt;@AdamKatz yes it will iterate over the array n+1 times. Please be aware that the other answers here using a combination of map, filter, indexOf, reduce etc. also must do this, it&apos;s sort of inherent in the problem. To avoid, you could use &lt;code&gt;new Set()&lt;/code&gt;, or a lookup object similar to the answer by Grozz.&lt;/span&gt;\n                \n              &lt;div class=&quot;d-inline-flex ai-center&quot;&gt;\n&amp;nbsp;&lt;a href=&quot;/users/1319163/daviestar&quot; title=&quot;4,323 reputation&quot; class=&quot;comment-user&quot;&gt;daviestar&lt;/a&gt;\n                &lt;/div&gt;\n                &lt;span class=&quot;comment-date&quot; dir=&quot;ltr&quot;&gt;&lt;a class=&quot;comment-link&quot; href=&quot;#comment104352585_48567595&quot;&gt;&lt;span title=&quot;2019-11-26 17:38:31Z, License: CC BY-SA 4.0&quot; class=&quot;relativetime-clean&quot;&gt;Nov 26, 2019 at 17:38&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;\n            &lt;/div&gt;\n        "],"id":258,"title":"Get all unique values in a JavaScript array (remove duplicates)","content":"\n                \n&lt;p&gt;I have an array of numbers that I need to make sure are unique. I found the code snippet below on the internet and it works great until the array has a zero in it. I found &lt;a href=&quot;https://stackoverflow.com/questions/1890203&quot;&gt;this other script&lt;/a&gt; here on Stack Overflow that looks almost exactly like it, but it doesn&apos;t fail.&lt;/p&gt;\n\n&lt;p&gt;So for the sake of helping me learn, can someone help me determine where the prototype script is going wrong?&lt;/p&gt;\n\n&lt;pre class=&quot;lang-js s-code-block&quot;&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-title class_&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;getUnique&lt;/span&gt; = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) {\n &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; o = {}, a = [], i, e;\n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; e = &lt;span class=&quot;hljs-variable language_&quot;&gt;this&lt;/span&gt;[i]; i++) {o[e] = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;};\n &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (e &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; o) {a.&lt;span class=&quot;hljs-property&quot;&gt;push&lt;/span&gt; (e)};\n &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; a;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h3&gt;More answers from duplicate question:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/9229645&quot;&gt;Remove duplicate values from JS array&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3&gt;Similar question:&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/840781&quot;&gt;Get all non-unique values (i.e.: duplicate/more than one occurrence) in an array&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    ","slug":"get-all-unique-values-in-a-javascript-array-(remove-duplicates)-1657387435296","postType":"QUESTION","createdAt":"2022-07-09T17:23:55.000Z","updatedAt":"2022-07-09T17:23:55.000Z","tags":[{"id":1654,"name":"unique","slug":"unique","createdAt":"2022-07-09T17:23:55.000Z","updatedAt":"2022-07-09T17:23:55.000Z","Questions_Tags":{"questionId":258,"tagId":1654}}]}},"__N_SSG":true}